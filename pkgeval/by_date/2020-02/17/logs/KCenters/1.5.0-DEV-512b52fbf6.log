Julia Version 1.5.0-DEV.282
Commit 512b52fbf6 (2020-02-17 17:51 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed PooledArrays ──────────────── v0.5.3
  Installed DataValueInterfaces ───────── v1.0.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed LearnBase ─────────────────── v0.2.2
  Installed OrderedCollections ────────── v1.1.0
  Installed KCenters ──────────────────── v0.2.1
  Installed MLDataPattern ─────────────── v0.5.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed DataAPI ───────────────────── v1.1.0
  Installed Reexport ──────────────────── v0.2.0
  Installed Missings ──────────────────── v0.4.3
  Installed Compat ────────────────────── v3.5.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed MLDataUtils ───────────────── v0.5.0
  Installed DataStructures ────────────── v0.17.9
  Installed StatsBase ─────────────────── v0.32.1
  Installed TableTraits ───────────────── v1.0.0
  Installed Parsers ───────────────────── v0.3.11
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed JSON ──────────────────────── v0.21.0
  Installed Tables ────────────────────── v1.0.1
  Installed DataFrames ────────────────── v0.20.2
  Installed SimilaritySearch ──────────── v0.3.19
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.5.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.1
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_IesbqH/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.5.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.1
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.1
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.932025450070699
[ Info: 0.8307796732584636
[ Info: 0.5561528046429157
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3383602980275949
mean(cdnet.distances) = 0.39319462023675444
mean(crand.distances) = 0.34080827032526334
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2509765625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2509765625,"f1":null,"seconds":4.330649971961975e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":7.3828125,"distances_sum":739.9455657176078}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.248046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.248046875,"f1":null,"seconds":3.868713974952698e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":7.171875,"distances_sum":725.9378956446818}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4052734375,"f1":null,"seconds":4.194676876068115e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":6.5,"distances_sum":1130.7483982648223}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4052734375,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.4052734375,"f1":null,"seconds":4.194676876068115e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":6.5,"distances_sum":1130.7483982648223}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9043472152847161,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.8359375,"distances_sum":2566.0449531395075}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.435546875, conf: {"ssize":9,"bsize":2}, perf: {"precision":null,"recall":0.435546875,"f1":null,"seconds":3.7141144275665283e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":6.515625,"distances_sum":1197.224637965358}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8122289169164177,"seconds":4.859641194343567e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.140625,"distances_sum":2042.5835386043543}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8485576923076932,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.609375,"distances_sum":2235.3632134018076}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.544921875,"f1":null,"seconds":4.334375262260437e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":7.8046875,"distances_sum":1529.1167015561552}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8349609375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8349609375,"f1":0.9043472152847161,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.8359375,"distances_sum":2566.0449531395075}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.972435897435898,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.9609375,"distances_sum":3161.8552077233057}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9030511155511164,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.7890625,"distances_sum":2629.7786656804037}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9699805402930406,"seconds":6.16908073425293e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.96875,"distances_sum":3135.164678116286}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9627117673992679,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.9453125,"distances_sum":3068.966334911404}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9442422161172169,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.8828125,"distances_sum":2904.7014813144006}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9374141483516489,"seconds":6.414949893951416e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.8515625,"distances_sum":2854.1789130655748}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.972435897435898,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.9609375,"distances_sum":3161.8552077233057}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.972435897435898,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.9609375,"distances_sum":3161.8552077233057}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2265625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2265625,"f1":null,"seconds":3.978610038757324e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.265625,"distances_sum":584.4305219224015}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2265625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2265625,"f1":null,"seconds":3.978610038757324e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.265625,"distances_sum":584.4305219224015}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3623046875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3623046875,"f1":null,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":6.0,"distances_sum":799.4705306372746}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3623046875,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.3623046875,"f1":null,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":6.0,"distances_sum":799.4705306372746}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":8,"bsize":6}, perf: {"precision":0.9712425595238092,"recall":0.8232421875,"f1":0.8854984858891112,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.71875,"distances_sum":1852.81606251626}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8232421875,"state":{"ssize":8,"bsize":6},"perf":{"precision":0.9712425595238092,"recall":0.8232421875,"f1":0.8854984858891112,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.71875,"distances_sum":1852.81606251626}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":8,"bsize":10}, perf: {"precision":0.9670758928571429,"recall":0.9169921875,"f1":0.9395833333333334,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9453125,"distances_sum":2267.8694092438914}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":6,"bsize":10}, perf: {"precision":0.970191592261905,"recall":0.9208984375,"f1":0.9430166838369965,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9296875,"distances_sum":2270.2616056330103}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":6,"bsize":10},"perf":{"precision":0.970191592261905,"recall":0.9208984375,"f1":0.9430166838369965,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9296875,"distances_sum":2270.2616056330103}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":6,"bsize":10},"perf":{"precision":0.970191592261905,"recall":0.9208984375,"f1":0.9430166838369965,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9296875,"distances_sum":2270.2616056330103}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.38671875,"f1":null,"seconds":3.293156623840332e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.0859375,"distances_sum":783.0708151695263}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.38671875,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.38671875,"f1":null,"seconds":3.293156623840332e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.0859375,"distances_sum":783.0708151695263}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7938410547785555,"seconds":4.516914486885071e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.1953125,"distances_sum":1474.9959434501836}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6728515625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6728515625,"f1":0.7938410547785555,"seconds":4.516914486885071e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.1953125,"distances_sum":1474.9959434501836}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9446314102564108,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.828125,"distances_sum":2209.3310037182646}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9052572427572433,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6328125,"distances_sum":1922.5868126064001}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.951064560439561,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7890625,"distances_sum":2253.1803287810285}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.951064560439561,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7890625,"distances_sum":2253.1803287810285}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.951064560439561,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7890625,"distances_sum":2253.1803287810285}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.697903138528139,"seconds":4.092231392860413e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.125,"distances_sum":1145.4288058422464}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1533203125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1533203125,"f1":null,"seconds":2.7418136596679688e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":4.7734375,"distances_sum":358.6041390702784}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55859375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.55859375,"f1":0.697903138528139,"seconds":4.092231392860413e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.125,"distances_sum":1145.4288058422464}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8476180069930078,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.015625,"distances_sum":1678.5843183464951}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8476180069930078,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.015625,"distances_sum":1678.5843183464951}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9429086538461544,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6484375,"distances_sum":2208.7731920095393}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9263106684981693,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4921875,"distances_sum":2082.6828604091033}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9571314102564108,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":2252.935863892057}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9571314102564108,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":2252.935863892057}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9571314102564108,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":2252.935863892057}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.181640625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.181640625,"f1":null,"seconds":2.8349459171295166e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.09375,"distances_sum":456.12135782667036}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.18359375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.18359375,"f1":null,"seconds":2.5890767574310303e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":4.9921875,"distances_sum":437.0182566506776}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5234375, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5234375,"f1":null,"seconds":3.8351863622665405e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.0390625,"distances_sum":1135.5289879172662}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.560546875,"f1":null,"seconds":3.943219780921936e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.3984375,"distances_sum":1232.3561272775798}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.560546875,"state":{"ssize":4,"bsize":3},"perf":{"precision":null,"recall":0.560546875,"f1":null,"seconds":3.943219780921936e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.3984375,"distances_sum":1232.3561272775798}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9165527181152188,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6328125,"distances_sum":2097.647546474506}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9060241841491846,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4765625,"distances_sum":2024.0824991391728}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7827139874014883,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.0,"distances_sum":1483.8966164684202}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.9165527181152188,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6328125,"distances_sum":2097.647546474506}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9590086996337002,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8671875,"distances_sum":2344.742779659693}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9698145604395607,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2408.484841647357}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9300881410256416,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7734375,"distances_sum":2111.31663063728}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9407483141858146,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7265625,"distances_sum":2214.570399024973}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9572573260073266,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.859375,"distances_sum":2308.0522907019345}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.94443108974359,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.625,"distances_sum":2311.0342421087116}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9698145604395607,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2408.484841647357}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9698145604395607,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2408.484841647357}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7927010489510498,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.0546875,"distances_sum":1465.2732328051507}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8611732017982027,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.375,"distances_sum":1753.1362953608593}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.8155651640026649,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.1875,"distances_sum":1586.6716293757097}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8611732017982027,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.375,"distances_sum":1753.1362953608593}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720066391941397,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9765625,"distances_sum":2395.677494519658}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8743480477855488,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.3828125,"distances_sum":1822.3638391878715}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9042983058608072,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7421875,"distances_sum":1912.9054825281664}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9418669871794878,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8984375,"distances_sum":2174.0140243685146}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720066391941397,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9765625,"distances_sum":2395.677494519658}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9755608974358979,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9921875,"distances_sum":2416.5890443020976}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9755608974358979,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9921875,"distances_sum":2416.5890443020976}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9755608974358979,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9921875,"distances_sum":2416.5890443020976}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5888671875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5888671875,"f1":0.7244080572205577,"seconds":4.386529326438904e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.9453125,"distances_sum":1317.8374358733142}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5888671875,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5888671875,"f1":0.7244080572205577,"seconds":4.386529326438904e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.9453125,"distances_sum":1317.8374358733142}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9029876373626381,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.515625,"distances_sum":2150.383966452449}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.802370546120547,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.296875,"distances_sum":1614.8664726591053}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5947265625, conf: {"ssize":7,"bsize":3}, perf: {"precision":null,"recall":0.5947265625,"f1":null,"seconds":4.692003130912781e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.9921875,"distances_sum":1336.4866572299306}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8291015625,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8291015625,"f1":0.9029876373626381,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.515625,"distances_sum":2150.383966452449}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9062473984348992,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.546875,"distances_sum":2171.8366298206024}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9616472069597074,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.890625,"distances_sum":2569.7082380459806}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9035256410256417,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.4921875,"distances_sum":2158.2749816299365}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9616472069597074,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.890625,"distances_sum":2569.7082380459806}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9616472069597074,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.890625,"distances_sum":2569.7082380459806}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.576171875,"f1":null,"seconds":4.462897777557373e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":6.890625,"distances_sum":1391.6606764403136}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.576171875,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.576171875,"f1":null,"seconds":4.462897777557373e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":6.890625,"distances_sum":1391.6606764403136}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.916681235431236,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.6171875,"distances_sum":2364.5124232882617}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.859375,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.859375,"f1":0.916681235431236,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.6171875,"distances_sum":2364.5124232882617}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9732543498168502,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9140625,"distances_sum":2694.926266255011}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.960697115384616,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.859375,"distances_sum":2627.540493558238}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9732543498168502,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9140625,"distances_sum":2694.926266255011}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9732543498168502,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.9140625,"distances_sum":2694.926266255011}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.8194071553446561,"seconds":4.349276423454285e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.5625,"distances_sum":1788.4510400975882}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4375, conf: {"ssize":2,"bsize":2}, perf: {"precision":1.0,"recall":0.4375,"f1":0.5873827561327561,"seconds":3.5446137189865112e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.75,"distances_sum":1030.2920923872707}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.708984375,"f1":0.8194071553446561,"seconds":4.349276423454285e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.5625,"distances_sum":1788.4510400975882}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9548248626373633,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.84375,"distances_sum":2682.418940226586}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9548248626373633,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.84375,"distances_sum":2682.418940226586}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9548248626373633,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.84375,"distances_sum":2682.418940226586}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9548248626373633,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.84375,"distances_sum":2682.418940226586}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.846569576257077,"seconds":4.818663001060486e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9609375,"distances_sum":1934.9767825040103}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7099609375,"f1":0.8190408549783558,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.5546875,"distances_sum":1775.128972023924}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.25, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.25,"f1":null,"seconds":3.17208468914032e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.765625,"distances_sum":626.5623785291921}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.846569576257077,"seconds":4.818663001060486e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9609375,"distances_sum":1934.9767825040103}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9614411630036636,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":2693.8033654528276}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9614411630036636,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":2693.8033654528276}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":6,"bsize":13}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714291,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":2739.4449018943405}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.970703125, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.970703125,"f1":0.9836710164835168,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2836.30785559663}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9609260531135536,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":2688.9302983778525}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.970703125,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9836710164835168,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2836.30785559663}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.970703125,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9836710164835168,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2836.30785559663}}, n: 9
mean(cfft.distances) = 0.5787873697277403
mean(cdnet.distances) = 0.34097072497863823
mean(crand.distances) = 0.34130199423241314
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8777777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8755555555555555
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8622222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9088888888888889
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8622222222222223
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9199999999999999
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8777777777777778
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8755555555555555
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9266666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666666
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.928888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.931111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8577777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8688888888888889
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9400000000000001
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9288888888888889
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8799999999999999
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9044444444444443
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9199999999999999
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.9266666666666666
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.6084615265329679] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 6]]
** centroid: 11, normalized-entropy: 0.5916727785823274, [(2, 1), (3, 6)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 13, 10]]
** centroid: 12, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
finished with 16 centroids; started with 12
acc = 0.9533333333333334
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.25942054165348233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25942054165348233, 0.17148516446005208] ***
*** starting iteration: 2; err: [Inf, 0.25942054165348233, 0.17148516446005208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25942054165348233, 0.17148516446005208, 0.16122165437180874] ***
*** starting iteration: 3; err: [Inf, 0.25942054165348233, 0.17148516446005208, 0.16122165437180874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25942054165348233, 0.17148516446005208, 0.16122165437180874, 0.15677588281302793] ***
*** finished computation of 7 references, err: [Inf, 0.25942054165348233, 0.17148516446005208, 0.16122165437180874, 0.15677588281302793] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [40, 26, 0]]
** centroid: 1, normalized-entropy: 0.9672947789468944, [(1, 40), (2, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [159, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 49, 8]]
** centroid: 3, normalized-entropy: 0.5851569902762294, [(2, 49), (3, 8)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [89, 54, 0]]
** centroid: 4, normalized-entropy: 0.9563454593459649, [(1, 89), (2, 54)]
*** center 5: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 70, 14]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 70), (3, 14)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [33, 61, 0]]
** centroid: 7, normalized-entropy: 0.9350145588035413, [(1, 33), (2, 61)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38881440821272256] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38881440821272256, 0.31614650650839277] ***
*** finished computation of 3 references, err: [Inf, 0.38881440821272256, 0.31614650650839277] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [132, 193, 22]]
** centroid: 1, normalized-entropy: 0.7908423457026021, [(1, 132), (2, 193), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [157, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [95, 67, 0]]
** centroid: 3, normalized-entropy: 0.9783422340444345, [(1, 95), (2, 67)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.42368449243916567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42368449243916567, 0.30909031127178777] ***
*** finished computation of 3 references, err: [Inf, 0.42368449243916567, 0.30909031127178777] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [132, 161, 25]]
** centroid: 1, normalized-entropy: 0.8278725593609586, [(1, 132), (2, 161), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [106, 90, 0]]
** centroid: 2, normalized-entropy: 0.9951876662918929, [(1, 106), (2, 90)]
*** center 3: selecting labels [1] (freq >= 1) [from [153, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5310154327608901] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5310154327608901, 0.304211078411334] ***
*** finished computation of 3 references, err: [Inf, 0.5310154327608901, 0.304211078411334] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [247, 3, 0]]
** centroid: 1, normalized-entropy: 0.09377790984777166, [(1, 247), (2, 3)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [9, 174, 23]]
** centroid: 2, normalized-entropy: 0.47710445585377437, [(1, 9), (2, 174), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [125, 86, 0]]
** centroid: 3, normalized-entropy: 0.9752138593842405, [(1, 125), (2, 86)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1941203780058978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1941203780058978, 0.15670639365727174] ***
*** starting iteration: 2; err: [Inf, 0.1941203780058978, 0.15670639365727174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1941203780058978, 0.15670639365727174, 0.15297535570154058] ***
*** starting iteration: 3; err: [Inf, 0.1941203780058978, 0.15670639365727174, 0.15297535570154058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1941203780058978, 0.15670639365727174, 0.15297535570154058, 0.15213730570342185] ***
*** finished computation of 7 references, err: [Inf, 0.1941203780058978, 0.15670639365727174, 0.15297535570154058, 0.15213730570342185] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [84, 61, 0]]
** centroid: 1, normalized-entropy: 0.9817736341200938, [(1, 84), (2, 61)]
*** center 2: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [33, 23, 0]]
** centroid: 3, normalized-entropy: 0.9768740126265281, [(1, 33), (2, 23)]
*** center 4: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 94, 25]]
** centroid: 5, normalized-entropy: 0.7416433363998257, [(2, 94), (3, 25)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [26, 73, 0]]
** centroid: 6, normalized-entropy: 0.8306836355350677, [(1, 26), (2, 73)]
*** center 7: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2121560533783738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2121560533783738, 0.17942752861354996] ***
*** starting iteration: 2; err: [Inf, 0.2121560533783738, 0.17942752861354996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2121560533783738, 0.17942752861354996, 0.16872925591142637] ***
*** starting iteration: 3; err: [Inf, 0.2121560533783738, 0.17942752861354996, 0.16872925591142637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2121560533783738, 0.17942752861354996, 0.16872925591142637, 0.1611489219007374] ***
*** finished computation of 7 references, err: [Inf, 0.2121560533783738, 0.17942752861354996, 0.16872925591142637, 0.1611489219007374] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [69, 34, 0]]
** centroid: 1, normalized-entropy: 0.9150255357249155, [(1, 69), (2, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [1, 124, 22]]
** centroid: 3, normalized-entropy: 0.6115516951951333, [(2, 124), (3, 22)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [11, 103, 1]]
** centroid: 4, normalized-entropy: 0.4577733290341998, [(1, 11), (2, 103)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [82, 2, 0]]
** centroid: 5, normalized-entropy: 0.1623261801753929, [(1, 82), (2, 2)]
*** center 6: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [44, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18834229188764262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18834229188764262, 0.15593828965543402] ***
*** starting iteration: 2; err: [Inf, 0.18834229188764262, 0.15593828965543402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18834229188764262, 0.15593828965543402, 0.15219689263820974] ***
*** starting iteration: 3; err: [Inf, 0.18834229188764262, 0.15593828965543402, 0.15219689263820974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18834229188764262, 0.15593828965543402, 0.15219689263820974, 0.15185332663955767] ***
*** finished computation of 7 references, err: [Inf, 0.18834229188764262, 0.15593828965543402, 0.15219689263820974, 0.15185332663955767] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [14, 54, 0]]
** centroid: 1, normalized-entropy: 0.7335379291086666, [(1, 14), (2, 54)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [5, 58, 0]]
** centroid: 2, normalized-entropy: 0.39993804743902767, [(1, 5), (2, 58)]
*** center 3: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 79, 22]]
** centroid: 4, normalized-entropy: 0.756170148929897, [(2, 79), (3, 22)]
*** center 5: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [87, 1, 0]]
** centroid: 6, normalized-entropy: 0.08970338978685011, [(1, 87), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [99, 68, 0]]
** centroid: 7, normalized-entropy: 0.9749990314386964, [(1, 99), (2, 68)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18344581695245593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18344581695245593, 0.15201944118572297] ***
*** starting iteration: 2; err: [Inf, 0.18344581695245593, 0.15201944118572297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18344581695245593, 0.15201944118572297, 0.1483315330318481] ***
*** starting iteration: 3; err: [Inf, 0.18344581695245593, 0.15201944118572297, 0.1483315330318481] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18344581695245593, 0.15201944118572297, 0.1483315330318481, 0.14732241096335283] ***
*** starting iteration: 4; err: [Inf, 0.18344581695245593, 0.15201944118572297, 0.1483315330318481, 0.14732241096335283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18344581695245593, 0.15201944118572297, 0.1483315330318481, 0.14732241096335283, 0.1469480987726201] ***
*** finished computation of 7 references, err: [Inf, 0.18344581695245593, 0.15201944118572297, 0.1483315330318481, 0.14732241096335283, 0.1469480987726201] ***
*** center 1: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [56, 62, 0]]
** centroid: 2, normalized-entropy: 0.9981341775041118, [(1, 56), (2, 62)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 86, 25]]
** centroid: 3, normalized-entropy: 0.7695944821271463, [(2, 86), (3, 25)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [89, 9, 0]]
** centroid: 4, normalized-entropy: 0.442571064839798, [(1, 89), (2, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [83, 7, 0]]
** centroid: 6, normalized-entropy: 0.39430023792747493, [(1, 83), (2, 7)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [11, 87, 0]]
** centroid: 7, normalized-entropy: 0.5066503344840895, [(1, 11), (2, 87)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18563706118814546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18563706118814546, 0.15564430845451765] ***
*** starting iteration: 2; err: [Inf, 0.18563706118814546, 0.15564430845451765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18563706118814546, 0.15564430845451765, 0.1506250299585947] ***
*** starting iteration: 3; err: [Inf, 0.18563706118814546, 0.15564430845451765, 0.1506250299585947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18563706118814546, 0.15564430845451765, 0.1506250299585947, 0.14923506957650565] ***
*** starting iteration: 4; err: [Inf, 0.18563706118814546, 0.15564430845451765, 0.1506250299585947, 0.14923506957650565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18563706118814546, 0.15564430845451765, 0.1506250299585947, 0.14923506957650565, 0.1486446179457936] ***
*** finished computation of 7 references, err: [Inf, 0.18563706118814546, 0.15564430845451765, 0.1506250299585947, 0.14923506957650565, 0.1486446179457936] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [49, 59, 0]]
** centroid: 1, normalized-entropy: 0.9938067403672294, [(1, 49), (2, 59)]
*** center 2: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [64, 57, 0]]
** centroid: 3, normalized-entropy: 0.9975844702713692, [(1, 64), (2, 57)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [43, 52, 0]]
** centroid: 4, normalized-entropy: 0.9935161367990846, [(1, 43), (2, 52)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 95, 23]]
** centroid: 5, normalized-entropy: 0.7116412885080164, [(2, 95), (3, 23)]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22579312570044888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22579312570044888, 0.17013886895040525] ***
*** starting iteration: 2; err: [Inf, 0.22579312570044888, 0.17013886895040525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22579312570044888, 0.17013886895040525, 0.1618145314204666] ***
*** starting iteration: 3; err: [Inf, 0.22579312570044888, 0.17013886895040525, 0.1618145314204666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22579312570044888, 0.17013886895040525, 0.1618145314204666, 0.1576139064475631] ***
*** starting iteration: 4; err: [Inf, 0.22579312570044888, 0.17013886895040525, 0.1618145314204666, 0.1576139064475631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22579312570044888, 0.17013886895040525, 0.1618145314204666, 0.1576139064475631, 0.15449177929446348] ***
*** starting iteration: 5; err: [Inf, 0.22579312570044888, 0.17013886895040525, 0.1618145314204666, 0.1576139064475631, 0.15449177929446348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22579312570044888, 0.17013886895040525, 0.1618145314204666, 0.1576139064475631, 0.15449177929446348, 0.15145542544058269] ***
*** starting iteration: 6; err: [Inf, 0.22579312570044888, 0.17013886895040525, 0.1618145314204666, 0.1576139064475631, 0.15449177929446348, 0.15145542544058269] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22579312570044888, 0.17013886895040525, 0.1618145314204666, 0.1576139064475631, 0.15449177929446348, 0.15145542544058269, 0.1497148012108933] ***
*** starting iteration: 7; err: [Inf, 0.22579312570044888, 0.17013886895040525, 0.1618145314204666, 0.1576139064475631, 0.15449177929446348, 0.15145542544058269, 0.1497148012108933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22579312570044888, 0.17013886895040525, 0.1618145314204666, 0.1576139064475631, 0.15449177929446348, 0.15145542544058269, 0.1497148012108933, 0.1489000887031088] ***
*** finished computation of 7 references, err: [Inf, 0.22579312570044888, 0.17013886895040525, 0.1618145314204666, 0.1576139064475631, 0.15449177929446348, 0.15145542544058269, 0.1497148012108933, 0.1489000887031088] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 89, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [82, 54, 0]]
** centroid: 2, normalized-entropy: 0.9692040949598235, [(1, 82), (2, 54)]
*** center 3: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [68, 4, 0]]
** centroid: 4, normalized-entropy: 0.3095434291503252, [(1, 68), (2, 4)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 86, 22]]
** centroid: 5, normalized-entropy: 0.7292739418449411, [(2, 86), (3, 22)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [67, 27, 0]]
** centroid: 6, normalized-entropy: 0.8651214227512075, [(1, 67), (2, 27)]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2317557361542779] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2317557361542779, 0.16506146258259866] ***
*** starting iteration: 2; err: [Inf, 0.2317557361542779, 0.16506146258259866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2317557361542779, 0.16506146258259866, 0.15449831011039072] ***
*** starting iteration: 3; err: [Inf, 0.2317557361542779, 0.16506146258259866, 0.15449831011039072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2317557361542779, 0.16506146258259866, 0.15449831011039072, 0.14919256311429405] ***
*** starting iteration: 4; err: [Inf, 0.2317557361542779, 0.16506146258259866, 0.15449831011039072, 0.14919256311429405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2317557361542779, 0.16506146258259866, 0.15449831011039072, 0.14919256311429405, 0.1472424206559894] ***
*** starting iteration: 5; err: [Inf, 0.2317557361542779, 0.16506146258259866, 0.15449831011039072, 0.14919256311429405, 0.1472424206559894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2317557361542779, 0.16506146258259866, 0.15449831011039072, 0.14919256311429405, 0.1472424206559894, 0.14584232911789918] ***
*** starting iteration: 6; err: [Inf, 0.2317557361542779, 0.16506146258259866, 0.15449831011039072, 0.14919256311429405, 0.1472424206559894, 0.14584232911789918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2317557361542779, 0.16506146258259866, 0.15449831011039072, 0.14919256311429405, 0.1472424206559894, 0.14584232911789918, 0.14519095161791495] ***
*** finished computation of 7 references, err: [Inf, 0.2317557361542779, 0.16506146258259866, 0.15449831011039072, 0.14919256311429405, 0.1472424206559894, 0.14584232911789918, 0.14519095161791495] ***
*** center 1: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [100, 4, 0]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(1, 100), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [9, 98, 0]]
** centroid: 4, normalized-entropy: 0.4165054000808552, [(1, 9), (2, 98)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [99, 10, 0]]
** centroid: 5, normalized-entropy: 0.4422615143479816, [(1, 99), (2, 10)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 77, 0]]
** centroid: 6, normalized-entropy: 0.3744088453489206, [(1, 6), (2, 77)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 62, 25]]
** centroid: 7, normalized-entropy: 0.8652817028791377, [(2, 62), (3, 25)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2167818760513321] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2167818760513321, 0.16867874063044574] ***
*** starting iteration: 2; err: [Inf, 0.2167818760513321, 0.16867874063044574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2167818760513321, 0.16867874063044574, 0.15961619765906856] ***
*** starting iteration: 3; err: [Inf, 0.2167818760513321, 0.16867874063044574, 0.15961619765906856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2167818760513321, 0.16867874063044574, 0.15961619765906856, 0.1549711291855578] ***
*** starting iteration: 4; err: [Inf, 0.2167818760513321, 0.16867874063044574, 0.15961619765906856, 0.1549711291855578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2167818760513321, 0.16867874063044574, 0.15961619765906856, 0.1549711291855578, 0.15194074196581808] ***
*** starting iteration: 5; err: [Inf, 0.2167818760513321, 0.16867874063044574, 0.15961619765906856, 0.1549711291855578, 0.15194074196581808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2167818760513321, 0.16867874063044574, 0.15961619765906856, 0.1549711291855578, 0.15194074196581808, 0.14912017469044433] ***
*** starting iteration: 6; err: [Inf, 0.2167818760513321, 0.16867874063044574, 0.15961619765906856, 0.1549711291855578, 0.15194074196581808, 0.14912017469044433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2167818760513321, 0.16867874063044574, 0.15961619765906856, 0.1549711291855578, 0.15194074196581808, 0.14912017469044433, 0.14704047682844493] ***
*** starting iteration: 7; err: [Inf, 0.2167818760513321, 0.16867874063044574, 0.15961619765906856, 0.1549711291855578, 0.15194074196581808, 0.14912017469044433, 0.14704047682844493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2167818760513321, 0.16867874063044574, 0.15961619765906856, 0.1549711291855578, 0.15194074196581808, 0.14912017469044433, 0.14704047682844493, 0.1463433547947986] ***
*** finished computation of 7 references, err: [Inf, 0.2167818760513321, 0.16867874063044574, 0.15961619765906856, 0.1549711291855578, 0.15194074196581808, 0.14912017469044433, 0.14704047682844493, 0.1463433547947986] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [87, 3, 0]]
** centroid: 1, normalized-entropy: 0.2108423003185322, [(1, 87), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [10, 99, 0]]
** centroid: 2, normalized-entropy: 0.4422615143479816, [(1, 10), (2, 99)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [57, 17, 0]]
** centroid: 3, normalized-entropy: 0.77753986416076, [(1, 57), (2, 17)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [34, 87, 0]]
** centroid: 4, normalized-entropy: 0.8567986030485539, [(1, 34), (2, 87)]
*** center 5: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 57, 23]]
** centroid: 7, normalized-entropy: 0.8654698974285927, [(2, 57), (3, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3104945670522459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3104945670522459, 0.2132833063121404] ***
*** starting iteration: 2; err: [Inf, 0.3104945670522459, 0.2132833063121404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3104945670522459, 0.2132833063121404, 0.20916627382289046] ***
*** starting iteration: 3; err: [Inf, 0.3104945670522459, 0.2132833063121404, 0.20916627382289046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3104945670522459, 0.2132833063121404, 0.20916627382289046, 0.20740344708466585] ***
*** starting iteration: 4; err: [Inf, 0.3104945670522459, 0.2132833063121404, 0.20916627382289046, 0.20740344708466585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3104945670522459, 0.2132833063121404, 0.20916627382289046, 0.20740344708466585, 0.2055182743862316] ***
*** starting iteration: 5; err: [Inf, 0.3104945670522459, 0.2132833063121404, 0.20916627382289046, 0.20740344708466585, 0.2055182743862316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3104945670522459, 0.2132833063121404, 0.20916627382289046, 0.20740344708466585, 0.2055182743862316, 0.19688779648180837] ***
*** starting iteration: 6; err: [Inf, 0.3104945670522459, 0.2132833063121404, 0.20916627382289046, 0.20740344708466585, 0.2055182743862316, 0.19688779648180837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3104945670522459, 0.2132833063121404, 0.20916627382289046, 0.20740344708466585, 0.2055182743862316, 0.19688779648180837, 0.19202251244698548] ***
*** starting iteration: 7; err: [Inf, 0.3104945670522459, 0.2132833063121404, 0.20916627382289046, 0.20740344708466585, 0.2055182743862316, 0.19688779648180837, 0.19202251244698548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3104945670522459, 0.2132833063121404, 0.20916627382289046, 0.20740344708466585, 0.2055182743862316, 0.19688779648180837, 0.19202251244698548, 0.19038742195322617] ***
*** starting iteration: 8; err: [Inf, 0.3104945670522459, 0.2132833063121404, 0.20916627382289046, 0.20740344708466585, 0.2055182743862316, 0.19688779648180837, 0.19202251244698548, 0.19038742195322617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3104945670522459, 0.2132833063121404, 0.20916627382289046, 0.20740344708466585, 0.2055182743862316, 0.19688779648180837, 0.19202251244698548, 0.19038742195322617, 0.19002059122195114] ***
*** finished computation of 7 references, err: [Inf, 0.3104945670522459, 0.2132833063121404, 0.20916627382289046, 0.20740344708466585, 0.2055182743862316, 0.19688779648180837, 0.19202251244698548, 0.19038742195322617, 0.19002059122195114] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 71, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [72, 25, 0]]
** centroid: 2, normalized-entropy: 0.8233045447828534, [(1, 72), (2, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [21, 49, 0]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(1, 21), (2, 49)]
*** center 4: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 57, 22]]
** centroid: 6, normalized-entropy: 0.8533728188427888, [(2, 57), (3, 22)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [99, 58, 0]]
** centroid: 7, normalized-entropy: 0.9502309201955728, [(1, 99), (2, 58)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32751194103809445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32751194103809445, 0.2240093031868819] ***
*** starting iteration: 2; err: [Inf, 0.32751194103809445, 0.2240093031868819] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32751194103809445, 0.2240093031868819, 0.19977596635906503] ***
*** starting iteration: 3; err: [Inf, 0.32751194103809445, 0.2240093031868819, 0.19977596635906503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32751194103809445, 0.2240093031868819, 0.19977596635906503, 0.19540018221221003] ***
*** starting iteration: 4; err: [Inf, 0.32751194103809445, 0.2240093031868819, 0.19977596635906503, 0.19540018221221003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32751194103809445, 0.2240093031868819, 0.19977596635906503, 0.19540018221221003, 0.1934903048179943] ***
*** starting iteration: 5; err: [Inf, 0.32751194103809445, 0.2240093031868819, 0.19977596635906503, 0.19540018221221003, 0.1934903048179943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32751194103809445, 0.2240093031868819, 0.19977596635906503, 0.19540018221221003, 0.1934903048179943, 0.1919213471238849] ***
*** starting iteration: 6; err: [Inf, 0.32751194103809445, 0.2240093031868819, 0.19977596635906503, 0.19540018221221003, 0.1934903048179943, 0.1919213471238849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32751194103809445, 0.2240093031868819, 0.19977596635906503, 0.19540018221221003, 0.1934903048179943, 0.1919213471238849, 0.1912846464853639] ***
*** finished computation of 7 references, err: [Inf, 0.32751194103809445, 0.2240093031868819, 0.19977596635906503, 0.19540018221221003, 0.1934903048179943, 0.1919213471238849, 0.1912846464853639] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [90, 2, 0]]
** centroid: 1, normalized-entropy: 0.1510969705171136, [(1, 90), (2, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [142, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [29, 85, 0]]
** centroid: 3, normalized-entropy: 0.8181559928454062, [(1, 29), (2, 85)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [38, 53, 0]]
** centroid: 4, normalized-entropy: 0.9803107984107206, [(1, 38), (2, 53)]
*** center 5: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 62, 1]]
** centroid: 6, normalized-entropy: 0.11759466565886466, [(2, 62), (3, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 49, 24]]
** centroid: 7, normalized-entropy: 0.9136617865655933, [(2, 49), (3, 24)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28053550973445224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28053550973445224, 0.21049044208916678] ***
*** starting iteration: 2; err: [Inf, 0.28053550973445224, 0.21049044208916678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28053550973445224, 0.21049044208916678, 0.20150020550461722] ***
*** starting iteration: 3; err: [Inf, 0.28053550973445224, 0.21049044208916678, 0.20150020550461722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28053550973445224, 0.21049044208916678, 0.20150020550461722, 0.19673955802857385] ***
*** starting iteration: 4; err: [Inf, 0.28053550973445224, 0.21049044208916678, 0.20150020550461722, 0.19673955802857385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28053550973445224, 0.21049044208916678, 0.20150020550461722, 0.19673955802857385, 0.19258424280996042] ***
*** starting iteration: 5; err: [Inf, 0.28053550973445224, 0.21049044208916678, 0.20150020550461722, 0.19673955802857385, 0.19258424280996042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28053550973445224, 0.21049044208916678, 0.20150020550461722, 0.19673955802857385, 0.19258424280996042, 0.19103537061401102] ***
*** starting iteration: 6; err: [Inf, 0.28053550973445224, 0.21049044208916678, 0.20150020550461722, 0.19673955802857385, 0.19258424280996042, 0.19103537061401102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28053550973445224, 0.21049044208916678, 0.20150020550461722, 0.19673955802857385, 0.19258424280996042, 0.19103537061401102, 0.1897308678489117] ***
*** starting iteration: 7; err: [Inf, 0.28053550973445224, 0.21049044208916678, 0.20150020550461722, 0.19673955802857385, 0.19258424280996042, 0.19103537061401102, 0.1897308678489117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28053550973445224, 0.21049044208916678, 0.20150020550461722, 0.19673955802857385, 0.19258424280996042, 0.19103537061401102, 0.1897308678489117, 0.18913559016291293] ***
*** finished computation of 7 references, err: [Inf, 0.28053550973445224, 0.21049044208916678, 0.20150020550461722, 0.19673955802857385, 0.19258424280996042, 0.19103537061401102, 0.1897308678489117, 0.18913559016291293] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [100, 37, 0]]
** centroid: 1, normalized-entropy: 0.8415693566412304, [(1, 100), (2, 37)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 45, 0]]
** centroid: 2, normalized-entropy: 0.9980008838722993, [(1, 50), (2, 45)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [53, 39, 0]]
** centroid: 3, normalized-entropy: 0.9832307535844343, [(1, 53), (2, 39)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 72, 2]]
** centroid: 4, normalized-entropy: 0.1792560669283214, [(2, 72), (3, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 70, 21]]
** centroid: 7, normalized-entropy: 0.7793498372920851, [(2, 70), (3, 21)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30182268559462855] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30182268559462855, 0.2885241621179512] ***
*** starting iteration: 2; err: [Inf, 0.30182268559462855, 0.2885241621179512] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30182268559462855, 0.2885241621179512, 0.2884739358963965] ***
*** finished computation of 3 references, err: [Inf, 0.30182268559462855, 0.2885241621179512, 0.2884739358963965] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [100, 118, 0]]
** centroid: 1, normalized-entropy: 0.995076532106423, [(1, 100), (2, 118)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [90, 142, 22]]
** centroid: 2, normalized-entropy: 0.823406910233159, [(1, 90), (2, 142), (3, 22)]
*** center 3: selecting labels [1] (freq >= 2) [from [194, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3359064986409879] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3359064986409879, 0.2923112810593562] ***
*** starting iteration: 2; err: [Inf, 0.3359064986409879, 0.2923112810593562] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3359064986409879, 0.2923112810593562, 0.29084587254669] ***
*** starting iteration: 3; err: [Inf, 0.3359064986409879, 0.2923112810593562, 0.29084587254669] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3359064986409879, 0.2923112810593562, 0.29084587254669, 0.29042812250833816] ***
*** finished computation of 3 references, err: [Inf, 0.3359064986409879, 0.2923112810593562, 0.29084587254669, 0.29042812250833816] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [66, 164, 25]]
** centroid: 1, normalized-entropy: 0.7840729351713308, [(1, 66), (2, 164), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [115, 87, 0]]
** centroid: 2, normalized-entropy: 0.9860954431604952, [(1, 115), (2, 87)]
*** center 3: selecting labels [1] (freq >= 2) [from [210, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.37933348964570257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37933348964570257, 0.3056109132624973] ***
*** starting iteration: 2; err: [Inf, 0.37933348964570257, 0.3056109132624973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37933348964570257, 0.3056109132624973, 0.302431858718574] ***
*** starting iteration: 3; err: [Inf, 0.37933348964570257, 0.3056109132624973, 0.302431858718574] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37933348964570257, 0.3056109132624973, 0.302431858718574, 0.3023167981206254] ***
*** finished computation of 3 references, err: [Inf, 0.37933348964570257, 0.3056109132624973, 0.302431858718574, 0.3023167981206254] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [235, 22, 0]]
** centroid: 1, normalized-entropy: 0.4216207435409774, [(1, 235), (2, 22)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 176, 23]]
** centroid: 2, normalized-entropy: 0.5165146211995502, [(2, 176), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [146, 65, 0]]
** centroid: 3, normalized-entropy: 0.8909177031937632, [(1, 146), (2, 65)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.27996135561610924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27996135561610924, 0.19058385081470358] ***
*** finished computation of 7 references, err: [Inf, 0.27996135561610924, 0.19058385081470358] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [178, 2, 0]]
** centroid: 1, normalized-entropy: 0.08807225904068142, [(1, 178), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [46, 62, 0]]
** centroid: 3, normalized-entropy: 0.9841095278800533, [(1, 46), (2, 62)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [48, 28, 0]]
** centroid: 4, normalized-entropy: 0.9494520153879484, [(1, 48), (2, 28)]
*** center 5: selecting labels [1, 2, 3] (freq >= 2) [from [5, 168, 22]]
** centroid: 5, normalized-entropy: 0.42645334126012385, [(1, 5), (2, 168), (3, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2892301983752943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2892301983752943, 0.1790906109908565] ***
*** finished computation of 7 references, err: [Inf, 0.2892301983752943, 0.1790906109908565] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 42, 25]]
** centroid: 1, normalized-entropy: 0.9530483471581301, [(2, 42), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [162, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 65, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [8, 56, 0]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(1, 8), (2, 56)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [26, 84, 0]]
** centroid: 6, normalized-entropy: 0.7889406572966208, [(1, 26), (2, 84)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [149, 4, 0]]
** centroid: 7, normalized-entropy: 0.17466817243865124, [(1, 149), (2, 4)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22689450894883167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22689450894883167, 0.17083560764884528] ***
*** finished computation of 7 references, err: [Inf, 0.22689450894883167, 0.17083560764884528] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [69, 7, 0]]
** centroid: 1, normalized-entropy: 0.4434581453896789, [(1, 69), (2, 7)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 43, 12]]
** centroid: 2, normalized-entropy: 0.7568336324184036, [(2, 43), (3, 12)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [137, 18, 0]]
** centroid: 3, normalized-entropy: 0.5181305640384067, [(1, 137), (2, 18)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 58, 11]]
** centroid: 4, normalized-entropy: 0.6329208984823799, [(2, 58), (3, 11)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [55, 41, 0]]
** centroid: 5, normalized-entropy: 0.98460399620868, [(1, 55), (2, 41)]
*** center 6: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [24, 96, 0]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(1, 24), (2, 96)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35721858564551706] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35721858564551706, 0.2384685809610764] ***
*** finished computation of 3 references, err: [Inf, 0.35721858564551706, 0.2384685809610764] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [1, 172, 22]]
** centroid: 1, normalized-entropy: 0.349452181775718, [(1, 1), (2, 172), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [207, 27, 0]]
** centroid: 2, normalized-entropy: 0.5159469300074472, [(1, 207), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [176, 61, 0]]
** centroid: 3, normalized-entropy: 0.8227730274995235, [(1, 176), (2, 61)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3345718217519359] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3345718217519359, 0.25388229360896114] ***
*** finished computation of 3 references, err: [Inf, 0.3345718217519359, 0.25388229360896114] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [162, 49, 0]]
** centroid: 1, normalized-entropy: 0.7818741516031359, [(1, 162), (2, 49)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [60, 202, 25]]
** centroid: 2, normalized-entropy: 0.7163574838332681, [(1, 60), (2, 202), (3, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [169, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.314119762329125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.314119762329125, 0.2689148558881776] ***
*** finished computation of 3 references, err: [Inf, 0.314119762329125, 0.2689148558881776] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [179, 60, 0]]
** centroid: 1, normalized-entropy: 0.8129318294585186, [(1, 179), (2, 60)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [76, 127, 23]]
** centroid: 2, normalized-entropy: 0.8400664238875823, [(1, 76), (2, 127), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [126, 76, 0]]
** centroid: 3, normalized-entropy: 0.9553413768968346, [(1, 126), (2, 76)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3798900489197546] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3798900489197546, 0.30176502254766385] ***
*** starting iteration: 2; err: [Inf, 0.3798900489197546, 0.30176502254766385] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3798900489197546, 0.30176502254766385, 0.2953165107988403] ***
*** starting iteration: 3; err: [Inf, 0.3798900489197546, 0.30176502254766385, 0.2953165107988403] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3798900489197546, 0.30176502254766385, 0.2953165107988403, 0.29330622728679095] ***
*** finished computation of 3 references, err: [Inf, 0.3798900489197546, 0.30176502254766385, 0.2953165107988403, 0.29330622728679095] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [244, 21, 0]]
** centroid: 1, normalized-entropy: 0.39951429947434186, [(1, 244), (2, 21)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 166, 22]]
** centroid: 2, normalized-entropy: 0.5207375686265202, [(2, 166), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [140, 73, 0]]
** centroid: 3, normalized-entropy: 0.9274006288148685, [(1, 140), (2, 73)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4024606528768743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4024606528768743, 0.3056939348070205] ***
*** starting iteration: 2; err: [Inf, 0.4024606528768743, 0.3056939348070205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4024606528768743, 0.3056939348070205, 0.2941417698057248] ***
*** starting iteration: 3; err: [Inf, 0.4024606528768743, 0.3056939348070205, 0.2941417698057248] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4024606528768743, 0.3056939348070205, 0.2941417698057248, 0.291126846569008] ***
*** finished computation of 3 references, err: [Inf, 0.4024606528768743, 0.3056939348070205, 0.2941417698057248, 0.291126846569008] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [75, 164, 25]]
** centroid: 1, normalized-entropy: 0.7978004260922371, [(1, 75), (2, 164), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [114, 87, 0]]
** centroid: 2, normalized-entropy: 0.9869444983748495, [(1, 114), (2, 87)]
*** center 3: selecting labels [1] (freq >= 2) [from [202, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.39330287794044977] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39330287794044977, 0.30170534686024847] ***
*** starting iteration: 2; err: [Inf, 0.39330287794044977, 0.30170534686024847] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39330287794044977, 0.30170534686024847, 0.29814422132330076] ***
*** starting iteration: 3; err: [Inf, 0.39330287794044977, 0.30170534686024847, 0.29814422132330076] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39330287794044977, 0.30170534686024847, 0.29814422132330076, 0.2969275483780581] ***
*** finished computation of 3 references, err: [Inf, 0.39330287794044977, 0.30170534686024847, 0.29814422132330076, 0.2969275483780581] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [231, 20, 0]]
** centroid: 1, normalized-entropy: 0.4010551457242519, [(1, 231), (2, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [150, 67, 0]]
** centroid: 2, normalized-entropy: 0.8917319728359409, [(1, 150), (2, 67)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 176, 23]]
** centroid: 3, normalized-entropy: 0.5165146211995502, [(2, 176), (3, 23)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3979462893279801] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3979462893279801, 0.2936289088909623] ***
*** starting iteration: 2; err: [Inf, 0.3979462893279801, 0.2936289088909623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3979462893279801, 0.2936289088909623, 0.29073627944196667] ***
*** starting iteration: 3; err: [Inf, 0.3979462893279801, 0.2936289088909623, 0.29073627944196667] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3979462893279801, 0.2936289088909623, 0.29073627944196667, 0.2894067662340161] ***
*** finished computation of 3 references, err: [Inf, 0.3979462893279801, 0.2936289088909623, 0.29073627944196667, 0.2894067662340161] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [96, 148, 22]]
** centroid: 1, normalized-entropy: 0.8193598515412909, [(1, 96), (2, 148), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [95, 112, 0]]
** centroid: 2, normalized-entropy: 0.9951293050264184, [(1, 95), (2, 112)]
*** center 3: selecting labels [1] (freq >= 2) [from [193, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4363813791535739] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4363813791535739, 0.30398543420226093] ***
*** starting iteration: 2; err: [Inf, 0.4363813791535739, 0.30398543420226093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4363813791535739, 0.30398543420226093, 0.29357399038322596] ***
*** starting iteration: 3; err: [Inf, 0.4363813791535739, 0.30398543420226093, 0.29357399038322596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4363813791535739, 0.30398543420226093, 0.29357399038322596, 0.29070832872012076] ***
*** finished computation of 3 references, err: [Inf, 0.4363813791535739, 0.30398543420226093, 0.29357399038322596, 0.29070832872012076] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [79, 161, 25]]
** centroid: 1, normalized-entropy: 0.806726221213592, [(1, 79), (2, 161), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [114, 90, 0]]
** centroid: 2, normalized-entropy: 0.9899927915575186, [(1, 114), (2, 90)]
*** center 3: selecting labels [1] (freq >= 2) [from [198, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3993199081027481] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3993199081027481, 0.29307395401738884] ***
*** starting iteration: 2; err: [Inf, 0.3993199081027481, 0.29307395401738884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3993199081027481, 0.29307395401738884, 0.2900883572377164] ***
*** starting iteration: 3; err: [Inf, 0.3993199081027481, 0.29307395401738884, 0.2900883572377164] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3993199081027481, 0.29307395401738884, 0.2900883572377164, 0.28937069396872345] ***
*** finished computation of 3 references, err: [Inf, 0.3993199081027481, 0.29307395401738884, 0.2900883572377164, 0.28937069396872345] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [79, 170, 23]]
** centroid: 1, normalized-entropy: 0.7843775052840865, [(1, 79), (2, 170), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [117, 93, 0]]
** centroid: 2, normalized-entropy: 0.9905577004075262, [(1, 117), (2, 93)]
*** center 3: selecting labels [1] (freq >= 2) [from [185, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.30578811371603887] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30578811371603887, 0.2515938387059414] ***
*** finished computation of 3 references, err: [Inf, 0.30578811371603887, 0.2515938387059414] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [268, 84, 0]]
** centroid: 1, normalized-entropy: 0.7927652363756529, [(1, 268), (2, 84)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [116, 52, 0]]
** centroid: 2, normalized-entropy: 0.8926230133850988, [(1, 116), (2, 52)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 124, 22]]
** centroid: 3, normalized-entropy: 0.6115516951951333, [(2, 124), (3, 22)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31121627044339695] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31121627044339695, 0.23976120158172642] ***
*** finished computation of 3 references, err: [Inf, 0.31121627044339695, 0.23976120158172642] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [253, 73, 0]]
** centroid: 1, normalized-entropy: 0.7672724266362873, [(1, 253), (2, 73)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [138, 55, 0]]
** centroid: 2, normalized-entropy: 0.8621401498108598, [(1, 138), (2, 55)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 123, 25]]
** centroid: 3, normalized-entropy: 0.6552257379188511, [(2, 123), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3333851738219922] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3333851738219922, 0.23684327531957822] ***
*** finished computation of 3 references, err: [Inf, 0.3333851738219922, 0.23684327531957822] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [127, 161, 22]]
** centroid: 1, normalized-entropy: 0.8133915801847029, [(1, 127), (2, 161), (3, 22)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [106, 102, 1]]
** centroid: 2, normalized-entropy: 0.6553552044065962, [(1, 106), (2, 102), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [148, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.17868234990140167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17868234990140167, 0.15370877701425562] ***
*** starting iteration: 2; err: [Inf, 0.17868234990140167, 0.15370877701425562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17868234990140167, 0.15370877701425562, 0.14835833333182363] ***
*** starting iteration: 3; err: [Inf, 0.17868234990140167, 0.15370877701425562, 0.14835833333182363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17868234990140167, 0.15370877701425562, 0.14835833333182363, 0.1474047883409537] ***
*** finished computation of 7 references, err: [Inf, 0.17868234990140167, 0.15370877701425562, 0.14835833333182363, 0.1474047883409537] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [116, 6, 0]]
** centroid: 1, normalized-entropy: 0.28290479297989196, [(1, 116), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [62, 14, 0]]
** centroid: 2, normalized-entropy: 0.6892019851173655, [(1, 62), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 49, 22]]
** centroid: 3, normalized-entropy: 0.893010810044601, [(2, 49), (3, 22)]
*** center 4: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [9, 99, 0]]
** centroid: 5, normalized-entropy: 0.4138168503036336, [(1, 9), (2, 99)]
*** center 6: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [4, 92, 0]]
** centroid: 7, normalized-entropy: 0.24988229283318547, [(1, 4), (2, 92)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.20662835024707746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20662835024707746, 0.15358241673592463] ***
*** starting iteration: 2; err: [Inf, 0.20662835024707746, 0.15358241673592463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20662835024707746, 0.15358241673592463, 0.14834284484721552] ***
*** starting iteration: 3; err: [Inf, 0.20662835024707746, 0.15358241673592463, 0.14834284484721552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20662835024707746, 0.15358241673592463, 0.14834284484721552, 0.1476686336421247] ***
*** finished computation of 7 references, err: [Inf, 0.20662835024707746, 0.15358241673592463, 0.14834284484721552, 0.1476686336421247] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [45, 54, 0]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(1, 45), (2, 54)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [68, 4, 0]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(1, 68), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 83, 25]]
** centroid: 4, normalized-entropy: 0.7805849322915901, [(2, 83), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [76, 27, 0]]
** centroid: 5, normalized-entropy: 0.829952434172285, [(1, 76), (2, 27)]
*** center 6: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [6, 83, 0]]
** centroid: 7, normalized-entropy: 0.35620480393132253, [(1, 6), (2, 83)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19225639910220743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19225639910220743, 0.1506190197011721] ***
*** starting iteration: 2; err: [Inf, 0.19225639910220743, 0.1506190197011721] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19225639910220743, 0.1506190197011721, 0.14783033779424348] ***
*** starting iteration: 3; err: [Inf, 0.19225639910220743, 0.1506190197011721, 0.14783033779424348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19225639910220743, 0.1506190197011721, 0.14783033779424348, 0.14730466749886334] ***
*** finished computation of 7 references, err: [Inf, 0.19225639910220743, 0.1506190197011721, 0.14783033779424348, 0.14730466749886334] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [44, 79, 0]]
** centroid: 1, normalized-entropy: 0.9407773482170269, [(1, 44), (2, 79)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 10, 0]]
** centroid: 2, normalized-entropy: 0.5864477034453907, [(1, 61), (2, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 61, 23]]
** centroid: 4, normalized-entropy: 0.8468781063424823, [(2, 61), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [82, 14, 0]]
** centroid: 5, normalized-entropy: 0.5993142373098089, [(1, 82), (2, 14)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 99, 0]]
** centroid: 6, normalized-entropy: 0.3159971329784246, [(1, 6), (2, 99)]
*** center 7: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.9430058801316287, 0.9299958641276006, 0.9289828750906596, 0.9280058501615388, 0.9109948271624918, 0.9039608470746195, 0.8950417483351615, 0.8950057842273411, 0.8780067492642344, 0.8670317023610438, 0.8629497761234287, 0.8270426114737491, 0.8250376124627623, 0.781988575401749]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9430058801316287
finished with 15
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.3154621831102607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3154621831102607, 0.2382923188638456] ***
*** finished computation of 3 references, err: [Inf, 0.3154621831102607, 0.2382923188638456] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [114, 172, 22]]
** centroid: 1, normalized-entropy: 0.8025831233505587, [(1, 114), (2, 172), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [106, 88, 0]]
** centroid: 2, normalized-entropy: 0.9937811379408324, [(1, 106), (2, 88)]
*** center 3: selecting labels [1] (freq >= 1) [from [164, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.30645486293570035] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30645486293570035, 0.24849748198079807] ***
*** finished computation of 3 references, err: [Inf, 0.30645486293570035, 0.24849748198079807] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [285, 58, 0]]
** centroid: 1, normalized-entropy: 0.6556331078717953, [(1, 285), (2, 58)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 132, 25]]
** centroid: 2, normalized-entropy: 0.6324778922057418, [(2, 132), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [106, 61, 0]]
** centroid: 3, normalized-entropy: 0.9469704854379134, [(1, 106), (2, 61)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4117455507420573] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4117455507420573, 0.23929521742324322] ***
*** finished computation of 3 references, err: [Inf, 0.4117455507420573, 0.23929521742324322] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [240, 5, 0]]
** centroid: 1, normalized-entropy: 0.14372616993938164, [(1, 240), (2, 5)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [18, 178, 23]]
** centroid: 2, normalized-entropy: 0.5557288050369721, [(1, 18), (2, 178), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [123, 80, 0]]
** centroid: 3, normalized-entropy: 0.9673874849304201, [(1, 123), (2, 80)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 15)
[0.9430058801316287, 0.9299958641276006, 0.9289828750906596, 0.9280058501615388, 0.9109948271624918, 0.9039608470746195, 0.8950417483351615, 0.8950057842273411, 0.8889728051404697, 0.8780067492642344, 0.8670317023610438, 0.8629497761234287, 0.8270426114737491, 0.8250376124627623, 0.781988575401749]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9430058801316287
finished with 16
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.399913922476641] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.399913922476641, 0.29695203883346877] ***
*** finished computation of 3 references, err: [Inf, 0.399913922476641, 0.29695203883346877] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [263, 31, 0]]
** centroid: 1, normalized-entropy: 0.48601322985041673, [(1, 263), (2, 31)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 156, 22]]
** centroid: 2, normalized-entropy: 0.5396084773004918, [(2, 156), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [121, 73, 0]]
** centroid: 3, normalized-entropy: 0.9553785921434824, [(1, 121), (2, 73)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4888569034462881] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4888569034462881, 0.3002463852486823] ***
*** finished computation of 3 references, err: [Inf, 0.4888569034462881, 0.3002463852486823] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [259, 5, 0]]
** centroid: 1, normalized-entropy: 0.1354434110809751, [(1, 259), (2, 5)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 171, 25]]
** centroid: 2, normalized-entropy: 0.5506833911057354, [(2, 171), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [132, 75, 0]]
** centroid: 3, normalized-entropy: 0.9445911819316588, [(1, 132), (2, 75)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40405022386165484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40405022386165484, 0.2993971560027512] ***
*** finished computation of 3 references, err: [Inf, 0.40405022386165484, 0.2993971560027512] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [89, 166, 23]]
** centroid: 1, normalized-entropy: 0.7998438837127719, [(1, 89), (2, 166), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [105, 97, 0]]
** centroid: 2, normalized-entropy: 0.998868289449348, [(1, 105), (2, 97)]
*** center 3: selecting labels [1] (freq >= 1) [from [187, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 16)
[0.9430058801316287, 0.9299958641276006, 0.9289828750906596, 0.9280058501615388, 0.9109948271624918, 0.9039608470746195, 0.8950417483351615, 0.8950057842273411, 0.8889728051404697, 0.8810547074020127, 0.8780067492642344, 0.8670317023610438, 0.8629497761234287, 0.8270426114737491, 0.8250376124627623, 0.781988575401749]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9430058801316287
finished with 16
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9430058801316287, 0.9299958641276006, 0.9289828750906596, 0.9280058501615388, 0.9109948271624918, 0.9039608470746195, 0.8950417483351615, 0.8950057842273411, 0.8889728051404697, 0.8810547074020127, 0.8780067492642344, 0.8670317023610438, 0.8629497761234287, 0.8270426114737491, 0.8250376124627623, 0.781988575401749]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9430058801316287
finished with 16
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9430058801316287, 0.9299958641276006, 0.9289828750906596, 0.9280058501615388, 0.9109948271624918, 0.9039608470746195, 0.8950417483351615, 0.8950057842273411, 0.8889728051404697, 0.8810547074020127, 0.8780067492642344, 0.8670317023610438, 0.8629497761234287, 0.8270426114737491, 0.8250376124627623, 0.781988575401749]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9430058801316287
finished with 18
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.29596887860138127] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29596887860138127, 0.23698015207167458] ***
*** starting iteration: 2; err: [Inf, 0.29596887860138127, 0.23698015207167458] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29596887860138127, 0.23698015207167458, 0.23511627517841957] ***
*** starting iteration: 3; err: [Inf, 0.29596887860138127, 0.23698015207167458, 0.23511627517841957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29596887860138127, 0.23698015207167458, 0.23511627517841957, 0.23396999371313565] ***
*** starting iteration: 4; err: [Inf, 0.29596887860138127, 0.23698015207167458, 0.23511627517841957, 0.23396999371313565] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29596887860138127, 0.23698015207167458, 0.23511627517841957, 0.23396999371313565, 0.2323864822698248] ***
*** starting iteration: 5; err: [Inf, 0.29596887860138127, 0.23698015207167458, 0.23511627517841957, 0.23396999371313565, 0.2323864822698248] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29596887860138127, 0.23698015207167458, 0.23511627517841957, 0.23396999371313565, 0.2323864822698248, 0.23122424454576485] ***
*** starting iteration: 6; err: [Inf, 0.29596887860138127, 0.23698015207167458, 0.23511627517841957, 0.23396999371313565, 0.2323864822698248, 0.23122424454576485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29596887860138127, 0.23698015207167458, 0.23511627517841957, 0.23396999371313565, 0.2323864822698248, 0.23122424454576485, 0.23060954522198854] ***
*** finished computation of 3 references, err: [Inf, 0.29596887860138127, 0.23698015207167458, 0.23511627517841957, 0.23396999371313565, 0.2323864822698248, 0.23122424454576485, 0.23060954522198854] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [107, 106, 0]]
** centroid: 1, normalized-entropy: 0.9999841003731537, [(1, 107), (2, 106)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [82, 154, 22]]
** centroid: 2, normalized-entropy: 0.8030531240873552, [(1, 82), (2, 154), (3, 22)]
*** center 3: selecting labels [1] (freq >= 2) [from [195, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2732769054133093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2732769054133093, 0.232246533515158] ***
*** starting iteration: 2; err: [Inf, 0.2732769054133093, 0.232246533515158] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2732769054133093, 0.232246533515158, 0.23086373361296716] ***
*** starting iteration: 3; err: [Inf, 0.2732769054133093, 0.232246533515158, 0.23086373361296716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2732769054133093, 0.232246533515158, 0.23086373361296716, 0.23056320699750035] ***
*** finished computation of 3 references, err: [Inf, 0.2732769054133093, 0.232246533515158, 0.23086373361296716, 0.23056320699750035] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [65, 171, 25]]
** centroid: 1, normalized-entropy: 0.771814125369577, [(1, 65), (2, 171), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [118, 80, 0]]
** centroid: 2, normalized-entropy: 0.9732650674751335, [(1, 118), (2, 80)]
*** center 3: selecting labels [1] (freq >= 2) [from [208, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40452282522516003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40452282522516003, 0.24620285562890257] ***
*** starting iteration: 2; err: [Inf, 0.40452282522516003, 0.24620285562890257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40452282522516003, 0.24620285562890257, 0.23704263034822612] ***
*** starting iteration: 3; err: [Inf, 0.40452282522516003, 0.24620285562890257, 0.23704263034822612] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40452282522516003, 0.24620285562890257, 0.23704263034822612, 0.23567850252674863] ***
*** starting iteration: 4; err: [Inf, 0.40452282522516003, 0.24620285562890257, 0.23704263034822612, 0.23567850252674863] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40452282522516003, 0.24620285562890257, 0.23704263034822612, 0.23567850252674863, 0.23540330685066363] ***
*** finished computation of 3 references, err: [Inf, 0.40452282522516003, 0.24620285562890257, 0.23704263034822612, 0.23567850252674863, 0.23540330685066363] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [160, 70, 0]]
** centroid: 1, normalized-entropy: 0.8865408928220899, [(1, 160), (2, 70)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 165, 23]]
** centroid: 2, normalized-entropy: 0.536051137103856, [(2, 165), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [221, 28, 0]]
** centroid: 3, normalized-entropy: 0.5072613559912966, [(1, 221), (2, 28)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4255421013136425] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4255421013136425, 0.29280584671761134] ***
*** starting iteration: 2; err: [Inf, 0.4255421013136425, 0.29280584671761134] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4255421013136425, 0.29280584671761134, 0.29058113065758] ***
*** starting iteration: 3; err: [Inf, 0.4255421013136425, 0.29280584671761134, 0.29058113065758] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4255421013136425, 0.29280584671761134, 0.29058113065758, 0.2900875501431505] ***
*** finished computation of 3 references, err: [Inf, 0.4255421013136425, 0.29280584671761134, 0.29058113065758, 0.2900875501431505] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [109, 112, 0]]
** centroid: 1, normalized-entropy: 0.9998670721917183, [(1, 109), (2, 112)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [88, 148, 22]]
** centroid: 2, normalized-entropy: 0.8152200690546106, [(1, 88), (2, 148), (3, 22)]
*** center 3: selecting labels [1] (freq >= 2) [from [187, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41065692076825355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41065692076825355, 0.3434758732315974] ***
*** starting iteration: 2; err: [Inf, 0.41065692076825355, 0.3434758732315974] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507] ***
*** starting iteration: 3; err: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353] ***
*** starting iteration: 4; err: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353, 0.3342420074075036] ***
*** starting iteration: 5; err: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353, 0.3342420074075036] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353, 0.3342420074075036, 0.3320560005634487] ***
*** starting iteration: 6; err: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353, 0.3342420074075036, 0.3320560005634487] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353, 0.3342420074075036, 0.3320560005634487, 0.3293275950459772] ***
*** starting iteration: 7; err: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353, 0.3342420074075036, 0.3320560005634487, 0.3293275950459772] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353, 0.3342420074075036, 0.3320560005634487, 0.3293275950459772, 0.32634846819634517] ***
*** starting iteration: 8; err: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353, 0.3342420074075036, 0.3320560005634487, 0.3293275950459772, 0.32634846819634517] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353, 0.3342420074075036, 0.3320560005634487, 0.3293275950459772, 0.32634846819634517, 0.3225795748829283] ***
*** starting iteration: 9; err: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353, 0.3342420074075036, 0.3320560005634487, 0.3293275950459772, 0.32634846819634517, 0.3225795748829283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353, 0.3342420074075036, 0.3320560005634487, 0.3293275950459772, 0.32634846819634517, 0.3225795748829283, 0.3182584395942123] ***
*** starting iteration: 10; err: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353, 0.3342420074075036, 0.3320560005634487, 0.3293275950459772, 0.32634846819634517, 0.3225795748829283, 0.3182584395942123] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353, 0.3342420074075036, 0.3320560005634487, 0.3293275950459772, 0.32634846819634517, 0.3225795748829283, 0.3182584395942123, 0.31337236335593227] ***
*** finished computation of 3 references, err: [Inf, 0.41065692076825355, 0.3434758732315974, 0.33950230902873507, 0.3362208853023353, 0.3342420074075036, 0.3320560005634487, 0.3293275950459772, 0.32634846819634517, 0.3225795748829283, 0.3182584395942123, 0.31337236335593227] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [74, 138, 0]]
** centroid: 1, normalized-entropy: 0.9332226994125877, [(1, 74), (2, 138)]
*** center 2: selecting labels [1] (freq >= 2) [from [200, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [117, 113, 25]]
** centroid: 3, normalized-entropy: 0.8609118798094872, [(1, 117), (2, 113), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.44751041737347397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.44751041737347397, 0.3242862702918419] ***
*** starting iteration: 2; err: [Inf, 0.44751041737347397, 0.3242862702918419] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.44751041737347397, 0.3242862702918419, 0.30564703358926515] ***
*** starting iteration: 3; err: [Inf, 0.44751041737347397, 0.3242862702918419, 0.30564703358926515] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.44751041737347397, 0.3242862702918419, 0.30564703358926515, 0.3020814449862874] ***
*** starting iteration: 4; err: [Inf, 0.44751041737347397, 0.3242862702918419, 0.30564703358926515, 0.3020814449862874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.44751041737347397, 0.3242862702918419, 0.30564703358926515, 0.3020814449862874, 0.3017050154071519] ***
*** finished computation of 3 references, err: [Inf, 0.44751041737347397, 0.3242862702918419, 0.30564703358926515, 0.3020814449862874, 0.3017050154071519] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [244, 14, 0]]
** centroid: 1, normalized-entropy: 0.3042393512598793, [(1, 244), (2, 14)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 164, 23]]
** centroid: 2, normalized-entropy: 0.5379080762155668, [(2, 164), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [137, 85, 0]]
** centroid: 3, normalized-entropy: 0.9600526909568771, [(1, 137), (2, 85)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 18)
[0.9430058801316287, 0.9299958641276006, 0.9289828750906596, 0.9280058501615388, 0.9130208052363741, 0.9109948271624918, 0.9039608470746195, 0.9009848171524819, 0.8950417483351615, 0.8950057842273411, 0.8889728051404697, 0.8810547074020127, 0.8780067492642344, 0.8670317023610438, 0.8629497761234287, 0.8270426114737491, 0.8250376124627623, 0.781988575401749]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9430058801316287
finished with 20
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.21577694095662786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21577694095662786, 0.19135999776053805] ***
*** starting iteration: 2; err: [Inf, 0.21577694095662786, 0.19135999776053805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21577694095662786, 0.19135999776053805, 0.18905198773230752] ***
*** starting iteration: 3; err: [Inf, 0.21577694095662786, 0.19135999776053805, 0.18905198773230752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21577694095662786, 0.19135999776053805, 0.18905198773230752, 0.18836341092122477] ***
*** finished computation of 7 references, err: [Inf, 0.21577694095662786, 0.19135999776053805, 0.18905198773230752, 0.18836341092122477] ***
*** center 1: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [70, 5, 0]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(1, 70), (2, 5)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 69, 22]]
** centroid: 3, normalized-entropy: 0.7979519684655734, [(2, 69), (3, 22)]
*** center 4: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [62, 44, 0]]
** centroid: 5, normalized-entropy: 0.9790981671667148, [(1, 62), (2, 44)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [64, 58, 0]]
** centroid: 6, normalized-entropy: 0.9982545693874832, [(1, 64), (2, 58)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 84, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24322438502692614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24322438502692614, 0.19395095484004518] ***
*** starting iteration: 2; err: [Inf, 0.24322438502692614, 0.19395095484004518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24322438502692614, 0.19395095484004518, 0.18969062369769213] ***
*** starting iteration: 3; err: [Inf, 0.24322438502692614, 0.19395095484004518, 0.18969062369769213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24322438502692614, 0.19395095484004518, 0.18969062369769213, 0.18909040567740196] ***
*** finished computation of 7 references, err: [Inf, 0.24322438502692614, 0.19395095484004518, 0.18969062369769213, 0.18909040567740196] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [41, 74, 0]]
** centroid: 1, normalized-entropy: 0.9397580401106037, [(1, 41), (2, 74)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [73, 4, 0]]
** centroid: 2, normalized-entropy: 0.29461520565280713, [(1, 73), (2, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 72, 25]]
** centroid: 4, normalized-entropy: 0.8233045447828534, [(2, 72), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [81, 10, 0]]
** centroid: 5, normalized-entropy: 0.49958440742366095, [(1, 81), (2, 10)]
*** center 6: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 91, 0]]
** centroid: 7, normalized-entropy: 0.25186284771956524, [(1, 4), (2, 91)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22435759182536286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22435759182536286, 0.1928902766038978] ***
*** starting iteration: 2; err: [Inf, 0.22435759182536286, 0.1928902766038978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22435759182536286, 0.1928902766038978, 0.19036351133283155] ***
*** starting iteration: 3; err: [Inf, 0.22435759182536286, 0.1928902766038978, 0.19036351133283155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22435759182536286, 0.1928902766038978, 0.19036351133283155, 0.1892567233690738] ***
*** starting iteration: 4; err: [Inf, 0.22435759182536286, 0.1928902766038978, 0.19036351133283155, 0.1892567233690738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22435759182536286, 0.1928902766038978, 0.19036351133283155, 0.1892567233690738, 0.18824023456414646] ***
*** starting iteration: 5; err: [Inf, 0.22435759182536286, 0.1928902766038978, 0.19036351133283155, 0.1892567233690738, 0.18824023456414646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22435759182536286, 0.1928902766038978, 0.19036351133283155, 0.1892567233690738, 0.18824023456414646, 0.18749100485791464] ***
*** finished computation of 7 references, err: [Inf, 0.22435759182536286, 0.1928902766038978, 0.19036351133283155, 0.1892567233690738, 0.18824023456414646, 0.18749100485791464] ***
*** center 1: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [84, 1, 0]]
** centroid: 2, normalized-entropy: 0.0922772477445739, [(1, 84), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 85, 23]]
** centroid: 3, normalized-entropy: 0.7471082932651727, [(2, 85), (3, 23)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [65, 35, 0]]
** centroid: 4, normalized-entropy: 0.9340680553754911, [(1, 65), (2, 35)]
*** center 5: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [53, 62, 0]]
** centroid: 6, normalized-entropy: 0.9955773958501508, [(1, 53), (2, 62)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 80, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18839763157215114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18839763157215114, 0.1526166372519971] ***
*** starting iteration: 2; err: [Inf, 0.18839763157215114, 0.1526166372519971] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18839763157215114, 0.1526166372519971, 0.14949069096561377] ***
*** starting iteration: 3; err: [Inf, 0.18839763157215114, 0.1526166372519971, 0.14949069096561377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18839763157215114, 0.1526166372519971, 0.14949069096561377, 0.14898099050390068] ***
*** finished computation of 7 references, err: [Inf, 0.18839763157215114, 0.1526166372519971, 0.14949069096561377, 0.14898099050390068] ***
*** center 1: selecting labels [1] (freq >= 1) [from [126, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 55, 22]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 55), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [61, 26, 0]]
** centroid: 3, normalized-entropy: 0.8798813089176428, [(1, 61), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [89, 20, 0]]
** centroid: 4, normalized-entropy: 0.6876445334580582, [(1, 89), (2, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [34, 65, 0]]
** centroid: 5, normalized-entropy: 0.9280672822072753, [(1, 34), (2, 65)]
*** center 6: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 94, 0]]
** centroid: 7, normalized-entropy: 0.14609425012013613, [(1, 2), (2, 94)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.20132943427377287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20132943427377287, 0.15030693952650434] ***
*** starting iteration: 2; err: [Inf, 0.20132943427377287, 0.15030693952650434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20132943427377287, 0.15030693952650434, 0.14512983843198288] ***
*** starting iteration: 3; err: [Inf, 0.20132943427377287, 0.15030693952650434, 0.14512983843198288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20132943427377287, 0.15030693952650434, 0.14512983843198288, 0.14423394909636794] ***
*** finished computation of 7 references, err: [Inf, 0.20132943427377287, 0.15030693952650434, 0.14512983843198288, 0.14423394909636794] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [99, 3, 0]]
** centroid: 1, normalized-entropy: 0.1914332548141934, [(1, 99), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 60, 25]]
** centroid: 2, normalized-entropy: 0.8739810481273581, [(2, 60), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [97, 4, 0]]
** centroid: 3, normalized-entropy: 0.24047340659188013, [(1, 97), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [77, 10, 0]]
** centroid: 4, normalized-entropy: 0.5146464316834292, [(1, 77), (2, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [17, 83, 0]]
** centroid: 6, normalized-entropy: 0.6577047787442196, [(1, 17), (2, 83)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 91, 0]]
** centroid: 7, normalized-entropy: 0.25186284771956524, [(1, 4), (2, 91)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.190503960648465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.190503960648465, 0.15368315055505602] ***
*** starting iteration: 2; err: [Inf, 0.190503960648465, 0.15368315055505602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.190503960648465, 0.15368315055505602, 0.15054076236380876] ***
*** starting iteration: 3; err: [Inf, 0.190503960648465, 0.15368315055505602, 0.15054076236380876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.190503960648465, 0.15368315055505602, 0.15054076236380876, 0.15011310509951978] ***
*** finished computation of 7 references, err: [Inf, 0.190503960648465, 0.15368315055505602, 0.15054076236380876, 0.15011310509951978] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [98, 1, 0]]
** centroid: 1, normalized-entropy: 0.08146202691505994, [(1, 98), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 64, 23]]
** centroid: 2, normalized-entropy: 0.8332661971210122, [(2, 64), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [69, 17, 0]]
** centroid: 3, normalized-entropy: 0.7172524777375696, [(1, 69), (2, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [58, 82, 0]]
** centroid: 4, normalized-entropy: 0.9786961448300948, [(1, 58), (2, 82)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [16, 99, 0]]
** centroid: 5, normalized-entropy: 0.5819569606149722, [(1, 16), (2, 99)]
*** center 6: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 20)
[0.9430058801316287, 0.9300138461815108, 0.9299958641276006, 0.9289828750906596, 0.9280058501615388, 0.9130208052363741, 0.9109948271624918, 0.9039608470746195, 0.9009848171524819, 0.8950417483351615, 0.8950057842273411, 0.894996793200386, 0.8889728051404697, 0.8810547074020127, 0.8780067492642344, 0.8670317023610438, 0.8629497761234287, 0.8270426114737491, 0.8250376124627623, 0.781988575401749]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9430058801316287
finished with 21
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.2683394290003422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2683394290003422, 0.20870348433586391] ***
*** starting iteration: 2; err: [Inf, 0.2683394290003422, 0.20870348433586391] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2683394290003422, 0.20870348433586391, 0.19759670612556082] ***
*** starting iteration: 3; err: [Inf, 0.2683394290003422, 0.20870348433586391, 0.19759670612556082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2683394290003422, 0.20870348433586391, 0.19759670612556082, 0.1935180298516991] ***
*** starting iteration: 4; err: [Inf, 0.2683394290003422, 0.20870348433586391, 0.19759670612556082, 0.1935180298516991] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2683394290003422, 0.20870348433586391, 0.19759670612556082, 0.1935180298516991, 0.19241305304461861] ***
*** starting iteration: 5; err: [Inf, 0.2683394290003422, 0.20870348433586391, 0.19759670612556082, 0.1935180298516991, 0.19241305304461861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2683394290003422, 0.20870348433586391, 0.19759670612556082, 0.1935180298516991, 0.19241305304461861, 0.19189816721024233] ***
*** finished computation of 7 references, err: [Inf, 0.2683394290003422, 0.20870348433586391, 0.19759670612556082, 0.1935180298516991, 0.19241305304461861, 0.19189816721024233] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [93, 19, 0]]
** centroid: 1, normalized-entropy: 0.6568871346605055, [(1, 93), (2, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [53, 44, 0]]
** centroid: 2, normalized-entropy: 0.9937811379408324, [(1, 53), (2, 44)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [54, 19, 0]]
** centroid: 3, normalized-entropy: 0.8271595195340525, [(1, 54), (2, 19)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 82, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 74, 22]]
** centroid: 6, normalized-entropy: 0.7765557854444601, [(2, 74), (3, 22)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [73, 22, 0]]
** centroid: 7, normalized-entropy: 0.7807536250860868, [(1, 73), (2, 22)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24856681241674805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24856681241674805, 0.21567904793502374] ***
*** starting iteration: 2; err: [Inf, 0.24856681241674805, 0.21567904793502374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153] ***
*** starting iteration: 3; err: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153, 0.2047549778430805] ***
*** starting iteration: 4; err: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153, 0.2047549778430805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153, 0.2047549778430805, 0.20029872453825986] ***
*** starting iteration: 5; err: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153, 0.2047549778430805, 0.20029872453825986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153, 0.2047549778430805, 0.20029872453825986, 0.19804342418652157] ***
*** starting iteration: 6; err: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153, 0.2047549778430805, 0.20029872453825986, 0.19804342418652157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153, 0.2047549778430805, 0.20029872453825986, 0.19804342418652157, 0.1968423778015277] ***
*** starting iteration: 7; err: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153, 0.2047549778430805, 0.20029872453825986, 0.19804342418652157, 0.1968423778015277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153, 0.2047549778430805, 0.20029872453825986, 0.19804342418652157, 0.1968423778015277, 0.19496417285754405] ***
*** starting iteration: 8; err: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153, 0.2047549778430805, 0.20029872453825986, 0.19804342418652157, 0.1968423778015277, 0.19496417285754405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153, 0.2047549778430805, 0.20029872453825986, 0.19804342418652157, 0.1968423778015277, 0.19496417285754405, 0.1932851149040139] ***
*** starting iteration: 9; err: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153, 0.2047549778430805, 0.20029872453825986, 0.19804342418652157, 0.1968423778015277, 0.19496417285754405, 0.1932851149040139] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153, 0.2047549778430805, 0.20029872453825986, 0.19804342418652157, 0.1968423778015277, 0.19496417285754405, 0.1932851149040139, 0.19229388842010114] ***
*** finished computation of 7 references, err: [Inf, 0.24856681241674805, 0.21567904793502374, 0.2092592095149153, 0.2047549778430805, 0.20029872453825986, 0.19804342418652157, 0.1968423778015277, 0.19496417285754405, 0.1932851149040139, 0.19229388842010114] ***
*** center 1: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [83, 1, 0]]
** centroid: 2, normalized-entropy: 0.09317131799548928, [(1, 83), (2, 1)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [63, 58, 0]]
** centroid: 3, normalized-entropy: 0.9987679240688597, [(1, 63), (2, 58)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [61, 32, 0]]
** centroid: 4, normalized-entropy: 0.928675181093665, [(1, 61), (2, 32)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 95, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 65, 25]]
** centroid: 6, normalized-entropy: 0.8524051786494784, [(2, 65), (3, 25)]
*** center 7: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.27585875648290276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27585875648290276, 0.21195719970007618] ***
*** starting iteration: 2; err: [Inf, 0.27585875648290276, 0.21195719970007618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27585875648290276, 0.21195719970007618, 0.19920270283101896] ***
*** starting iteration: 3; err: [Inf, 0.27585875648290276, 0.21195719970007618, 0.19920270283101896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27585875648290276, 0.21195719970007618, 0.19920270283101896, 0.19534327540228302] ***
*** starting iteration: 4; err: [Inf, 0.27585875648290276, 0.21195719970007618, 0.19920270283101896, 0.19534327540228302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27585875648290276, 0.21195719970007618, 0.19920270283101896, 0.19534327540228302, 0.19349397505693575] ***
*** starting iteration: 5; err: [Inf, 0.27585875648290276, 0.21195719970007618, 0.19920270283101896, 0.19534327540228302, 0.19349397505693575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27585875648290276, 0.21195719970007618, 0.19920270283101896, 0.19534327540228302, 0.19349397505693575, 0.19177347701601405] ***
*** starting iteration: 6; err: [Inf, 0.27585875648290276, 0.21195719970007618, 0.19920270283101896, 0.19534327540228302, 0.19349397505693575, 0.19177347701601405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27585875648290276, 0.21195719970007618, 0.19920270283101896, 0.19534327540228302, 0.19349397505693575, 0.19177347701601405, 0.1909661666326772] ***
*** finished computation of 7 references, err: [Inf, 0.27585875648290276, 0.21195719970007618, 0.19920270283101896, 0.19534327540228302, 0.19349397505693575, 0.19177347701601405, 0.1909661666326772] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [37, 59, 0]]
** centroid: 1, normalized-entropy: 0.9617779752980338, [(1, 37), (2, 59)]
*** center 2: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [76, 11, 0]]
** centroid: 3, normalized-entropy: 0.5475844288749033, [(1, 76), (2, 11)]
*** center 4: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [34, 65, 0]]
** centroid: 5, normalized-entropy: 0.9280672822072753, [(1, 34), (2, 65)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [66, 57, 0]]
** centroid: 6, normalized-entropy: 0.9961344835095798, [(1, 66), (2, 57)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 71, 23]]
** centroid: 7, normalized-entropy: 0.8027381019527042, [(2, 71), (3, 23)]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 21)
[0.9430058801316287, 0.9300138461815108, 0.9299958641276006, 0.9289828750906596, 0.9280058501615388, 0.9130208052363741, 0.9120287952623283, 0.9109948271624918, 0.9039608470746195, 0.9009848171524819, 0.8950417483351615, 0.8950057842273411, 0.894996793200386, 0.8889728051404697, 0.8810547074020127, 0.8780067492642344, 0.8670317023610438, 0.8629497761234287, 0.8270426114737491, 0.8250376124627623, 0.781988575401749]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9430058801316287
finished with 21
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.26555272948276254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26555272948276254, 0.20828801494790242] ***
*** starting iteration: 2; err: [Inf, 0.26555272948276254, 0.20828801494790242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912] ***
*** starting iteration: 3; err: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912, 0.1697361504859291] ***
*** starting iteration: 4; err: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912, 0.1697361504859291] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912, 0.1697361504859291, 0.16155402451916598] ***
*** starting iteration: 5; err: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912, 0.1697361504859291, 0.16155402451916598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912, 0.1697361504859291, 0.16155402451916598, 0.15685897896718234] ***
*** starting iteration: 6; err: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912, 0.1697361504859291, 0.16155402451916598, 0.15685897896718234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912, 0.1697361504859291, 0.16155402451916598, 0.15685897896718234, 0.15371343444287777] ***
*** starting iteration: 7; err: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912, 0.1697361504859291, 0.16155402451916598, 0.15685897896718234, 0.15371343444287777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912, 0.1697361504859291, 0.16155402451916598, 0.15685897896718234, 0.15371343444287777, 0.15118950670585035] ***
*** starting iteration: 8; err: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912, 0.1697361504859291, 0.16155402451916598, 0.15685897896718234, 0.15371343444287777, 0.15118950670585035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912, 0.1697361504859291, 0.16155402451916598, 0.15685897896718234, 0.15371343444287777, 0.15118950670585035, 0.14957421017205344] ***
*** starting iteration: 9; err: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912, 0.1697361504859291, 0.16155402451916598, 0.15685897896718234, 0.15371343444287777, 0.15118950670585035, 0.14957421017205344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912, 0.1697361504859291, 0.16155402451916598, 0.15685897896718234, 0.15371343444287777, 0.15118950670585035, 0.14957421017205344, 0.14906495813280343] ***
*** finished computation of 7 references, err: [Inf, 0.26555272948276254, 0.20828801494790242, 0.18318223234172912, 0.1697361504859291, 0.16155402451916598, 0.15685897896718234, 0.15371343444287777, 0.15118950670585035, 0.14957421017205344, 0.14906495813280343] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 129, 35]]
** centroid: 1, normalized-entropy: 0.7479591903334886, [(2, 129), (3, 35)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [97, 49, 0]]
** centroid: 2, normalized-entropy: 0.9205620379636023, [(1, 97), (2, 49)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [94, 95, 0]]
** centroid: 3, normalized-entropy: 0.9999798059716655, [(1, 94), (2, 95)]
*** center 4: selecting labels [1] (freq >= 2) [from [130, 1, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [130, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [31, 113, 0]]
** centroid: 6, normalized-entropy: 0.7514506377276642, [(1, 31), (2, 113)]
*** center 7: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2095922447340563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2095922447340563, 0.16046867999993264] ***
*** starting iteration: 2; err: [Inf, 0.2095922447340563, 0.16046867999993264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2095922447340563, 0.16046867999993264, 0.15636557973269374] ***
*** starting iteration: 3; err: [Inf, 0.2095922447340563, 0.16046867999993264, 0.15636557973269374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2095922447340563, 0.16046867999993264, 0.15636557973269374, 0.15366514760255814] ***
*** starting iteration: 4; err: [Inf, 0.2095922447340563, 0.16046867999993264, 0.15636557973269374, 0.15366514760255814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2095922447340563, 0.16046867999993264, 0.15636557973269374, 0.15366514760255814, 0.1513979229480028] ***
*** starting iteration: 5; err: [Inf, 0.2095922447340563, 0.16046867999993264, 0.15636557973269374, 0.15366514760255814, 0.1513979229480028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2095922447340563, 0.16046867999993264, 0.15636557973269374, 0.15366514760255814, 0.1513979229480028, 0.15034966739825906] ***
*** starting iteration: 6; err: [Inf, 0.2095922447340563, 0.16046867999993264, 0.15636557973269374, 0.15366514760255814, 0.1513979229480028, 0.15034966739825906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2095922447340563, 0.16046867999993264, 0.15636557973269374, 0.15366514760255814, 0.1513979229480028, 0.15034966739825906, 0.14973753904551268] ***
*** finished computation of 7 references, err: [Inf, 0.2095922447340563, 0.16046867999993264, 0.15636557973269374, 0.15366514760255814, 0.1513979229480028, 0.15034966739825906, 0.14973753904551268] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [24, 35, 0]]
** centroid: 1, normalized-entropy: 0.9747785474909672, [(1, 24), (2, 35)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 51, 11]]
** centroid: 2, normalized-entropy: 0.674398887071447, [(2, 51), (3, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [73, 33, 0]]
** centroid: 4, normalized-entropy: 0.8946921645908384, [(1, 73), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [65, 13, 0]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(1, 65), (2, 13)]
*** center 6: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 53, 2]]
** centroid: 7, normalized-entropy: 0.22536363912739493, [(2, 53), (3, 2)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27943351756548507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27943351756548507, 0.1589839767869562] ***
*** starting iteration: 2; err: [Inf, 0.27943351756548507, 0.1589839767869562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27943351756548507, 0.1589839767869562, 0.15085783625021576] ***
*** starting iteration: 3; err: [Inf, 0.27943351756548507, 0.1589839767869562, 0.15085783625021576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27943351756548507, 0.1589839767869562, 0.15085783625021576, 0.14877783043961973] ***
*** starting iteration: 4; err: [Inf, 0.27943351756548507, 0.1589839767869562, 0.15085783625021576, 0.14877783043961973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27943351756548507, 0.1589839767869562, 0.15085783625021576, 0.14877783043961973, 0.1479766009086743] ***
*** finished computation of 7 references, err: [Inf, 0.27943351756548507, 0.1589839767869562, 0.15085783625021576, 0.14877783043961973, 0.1479766009086743] ***
*** center 1: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [45, 12, 0]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(1, 45), (2, 12)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [20, 70, 0]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(1, 20), (2, 70)]
*** center 4: selecting labels [1] (freq >= 2) [from [43, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 45, 16]]
** centroid: 5, normalized-entropy: 0.8301899714180444, [(2, 45), (3, 16)]
*** center 6: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [9, 62, 0]]
** centroid: 7, normalized-entropy: 0.5484866088431741, [(1, 9), (2, 62)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1973154648281634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1973154648281634, 0.1579276640927419] ***
*** starting iteration: 2; err: [Inf, 0.1973154648281634, 0.1579276640927419] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1973154648281634, 0.1579276640927419, 0.15412029782310127] ***
*** starting iteration: 3; err: [Inf, 0.1973154648281634, 0.1579276640927419, 0.15412029782310127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1973154648281634, 0.1579276640927419, 0.15412029782310127, 0.153416418582201] ***
*** finished computation of 7 references, err: [Inf, 0.1973154648281634, 0.1579276640927419, 0.15412029782310127, 0.153416418582201] ***
*** center 1: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [53, 18, 0]]
** centroid: 2, normalized-entropy: 0.8168114277045246, [(1, 53), (2, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [72, 33, 0]]
** centroid: 3, normalized-entropy: 0.8980587934501658, [(1, 72), (2, 33)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 64, 19]]
** centroid: 4, normalized-entropy: 0.776116265618875, [(2, 64), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [2, 66, 0]]
** centroid: 5, normalized-entropy: 0.1914332548141934, [(1, 2), (2, 66)]
*** center 6: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [47, 11, 0]]
** centroid: 7, normalized-entropy: 0.7007495497162061, [(1, 47), (2, 11)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1999995802883059] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1999995802883059, 0.162940944140777] ***
*** starting iteration: 2; err: [Inf, 0.1999995802883059, 0.162940944140777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1999995802883059, 0.162940944140777, 0.15528587882593275] ***
*** starting iteration: 3; err: [Inf, 0.1999995802883059, 0.162940944140777, 0.15528587882593275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1999995802883059, 0.162940944140777, 0.15528587882593275, 0.15219777136668564] ***
*** starting iteration: 4; err: [Inf, 0.1999995802883059, 0.162940944140777, 0.15528587882593275, 0.15219777136668564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1999995802883059, 0.162940944140777, 0.15528587882593275, 0.15219777136668564, 0.150364630471915] ***
*** starting iteration: 5; err: [Inf, 0.1999995802883059, 0.162940944140777, 0.15528587882593275, 0.15219777136668564, 0.150364630471915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1999995802883059, 0.162940944140777, 0.15528587882593275, 0.15219777136668564, 0.150364630471915, 0.1490313746482134] ***
*** starting iteration: 6; err: [Inf, 0.1999995802883059, 0.162940944140777, 0.15528587882593275, 0.15219777136668564, 0.150364630471915, 0.1490313746482134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1999995802883059, 0.162940944140777, 0.15528587882593275, 0.15219777136668564, 0.150364630471915, 0.1490313746482134, 0.1480003316961229] ***
*** starting iteration: 7; err: [Inf, 0.1999995802883059, 0.162940944140777, 0.15528587882593275, 0.15219777136668564, 0.150364630471915, 0.1490313746482134, 0.1480003316961229] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1999995802883059, 0.162940944140777, 0.15528587882593275, 0.15219777136668564, 0.150364630471915, 0.1490313746482134, 0.1480003316961229, 0.14714816310442985] ***
*** finished computation of 7 references, err: [Inf, 0.1999995802883059, 0.162940944140777, 0.15528587882593275, 0.15219777136668564, 0.150364630471915, 0.1490313746482134, 0.1480003316961229, 0.14714816310442985] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [61, 10, 0]]
** centroid: 1, normalized-entropy: 0.5864477034453907, [(1, 61), (2, 10)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 64, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [70, 4, 0]]
** centroid: 3, normalized-entropy: 0.30337483608641397, [(1, 70), (2, 4)]
*** center 4: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [53, 11, 0]]
** centroid: 5, normalized-entropy: 0.6619760641115651, [(1, 53), (2, 11)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 67, 23]]
** centroid: 6, normalized-entropy: 0.8199653102187632, [(2, 67), (3, 23)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [38, 47, 0]]
** centroid: 7, normalized-entropy: 0.9918977415529348, [(1, 38), (2, 47)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2042554827462882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2042554827462882, 0.16122216548398138] ***
*** starting iteration: 2; err: [Inf, 0.2042554827462882, 0.16122216548398138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2042554827462882, 0.16122216548398138, 0.15130377652216703] ***
*** starting iteration: 3; err: [Inf, 0.2042554827462882, 0.16122216548398138, 0.15130377652216703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2042554827462882, 0.16122216548398138, 0.15130377652216703, 0.1480975149963051] ***
*** starting iteration: 4; err: [Inf, 0.2042554827462882, 0.16122216548398138, 0.15130377652216703, 0.1480975149963051] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2042554827462882, 0.16122216548398138, 0.15130377652216703, 0.1480975149963051, 0.14729205006547272] ***
*** finished computation of 7 references, err: [Inf, 0.2042554827462882, 0.16122216548398138, 0.15130377652216703, 0.1480975149963051, 0.14729205006547272] ***
*** center 1: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [10, 70, 0]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(1, 10), (2, 70)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [53, 20, 0]]
** centroid: 3, normalized-entropy: 0.847107490529376, [(1, 53), (2, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [42, 1, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 65, 21]]
** centroid: 6, normalized-entropy: 0.8019325020834525, [(2, 65), (3, 21)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [64, 47, 0]]
** centroid: 7, normalized-entropy: 0.983013379603719, [(1, 64), (2, 47)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24064041473716496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24064041473716496, 0.176872369131539] ***
*** starting iteration: 2; err: [Inf, 0.24064041473716496, 0.176872369131539] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903] ***
*** starting iteration: 3; err: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903, 0.1536845276169479] ***
*** starting iteration: 4; err: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903, 0.1536845276169479] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903, 0.1536845276169479, 0.1516854923181236] ***
*** starting iteration: 5; err: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903, 0.1536845276169479, 0.1516854923181236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903, 0.1536845276169479, 0.1516854923181236, 0.15046805087383835] ***
*** starting iteration: 6; err: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903, 0.1536845276169479, 0.1516854923181236, 0.15046805087383835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903, 0.1536845276169479, 0.1516854923181236, 0.15046805087383835, 0.14940082377009095] ***
*** starting iteration: 7; err: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903, 0.1536845276169479, 0.1516854923181236, 0.15046805087383835, 0.14940082377009095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903, 0.1536845276169479, 0.1516854923181236, 0.15046805087383835, 0.14940082377009095, 0.1479307545274496] ***
*** starting iteration: 8; err: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903, 0.1536845276169479, 0.1516854923181236, 0.15046805087383835, 0.14940082377009095, 0.1479307545274496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903, 0.1536845276169479, 0.1516854923181236, 0.15046805087383835, 0.14940082377009095, 0.1479307545274496, 0.14667655694577844] ***
*** starting iteration: 9; err: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903, 0.1536845276169479, 0.1516854923181236, 0.15046805087383835, 0.14940082377009095, 0.1479307545274496, 0.14667655694577844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903, 0.1536845276169479, 0.1516854923181236, 0.15046805087383835, 0.14940082377009095, 0.1479307545274496, 0.14667655694577844, 0.1459466087333858] ***
*** finished computation of 7 references, err: [Inf, 0.24064041473716496, 0.176872369131539, 0.16058174717146903, 0.1536845276169479, 0.1516854923181236, 0.15046805087383835, 0.14940082377009095, 0.1479307545274496, 0.14667655694577844, 0.1459466087333858] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [45, 28, 0]]
** centroid: 1, normalized-entropy: 0.9605187074766162, [(1, 45), (2, 28)]
*** center 2: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 47, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [56, 8, 0]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(1, 56), (2, 8)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 59, 18]]
** centroid: 6, normalized-entropy: 0.7845191388986644, [(2, 59), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [68, 41, 0]]
** centroid: 7, normalized-entropy: 0.9552751009754172, [(1, 68), (2, 41)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17522379900608212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17522379900608212, 0.15814826241135596] ***
*** starting iteration: 2; err: [Inf, 0.17522379900608212, 0.15814826241135596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17522379900608212, 0.15814826241135596, 0.1529135034820065] ***
*** starting iteration: 3; err: [Inf, 0.17522379900608212, 0.15814826241135596, 0.1529135034820065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17522379900608212, 0.15814826241135596, 0.1529135034820065, 0.15142172729969025] ***
*** starting iteration: 4; err: [Inf, 0.17522379900608212, 0.15814826241135596, 0.1529135034820065, 0.15142172729969025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17522379900608212, 0.15814826241135596, 0.1529135034820065, 0.15142172729969025, 0.15089548486936838] ***
*** finished computation of 7 references, err: [Inf, 0.17522379900608212, 0.15814826241135596, 0.1529135034820065, 0.15142172729969025, 0.15089548486936838] ***
*** center 1: selecting labels [1] (freq >= 2) [from [42, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 67, 14]]
** centroid: 2, normalized-entropy: 0.6641593279528072, [(2, 67), (3, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [45, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [54, 14, 0]]
** centroid: 5, normalized-entropy: 0.7335379291086666, [(1, 54), (2, 14)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 69, 0]]
** centroid: 6, normalized-entropy: 0.24988229283318547, [(1, 3), (2, 69)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [82, 50, 0]]
** centroid: 7, normalized-entropy: 0.9571814385446724, [(1, 82), (2, 50)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20850750114955008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20850750114955008, 0.16384368460439144] ***
*** starting iteration: 2; err: [Inf, 0.20850750114955008, 0.16384368460439144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20850750114955008, 0.16384368460439144, 0.1569857750334777] ***
*** starting iteration: 3; err: [Inf, 0.20850750114955008, 0.16384368460439144, 0.1569857750334777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20850750114955008, 0.16384368460439144, 0.1569857750334777, 0.1546569959523622] ***
*** starting iteration: 4; err: [Inf, 0.20850750114955008, 0.16384368460439144, 0.1569857750334777, 0.1546569959523622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20850750114955008, 0.16384368460439144, 0.1569857750334777, 0.1546569959523622, 0.15367100275307893] ***
*** finished computation of 7 references, err: [Inf, 0.20850750114955008, 0.16384368460439144, 0.1569857750334777, 0.1546569959523622, 0.15367100275307893] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 82, 14]]
** centroid: 1, normalized-entropy: 0.5993142373098089, [(2, 82), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [69, 18, 0]]
** centroid: 3, normalized-entropy: 0.7355085815538399, [(1, 69), (2, 18)]
*** center 4: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [72, 5, 0]]
** centroid: 5, normalized-entropy: 0.34673146824966367, [(1, 72), (2, 5)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [27, 56, 0]]
** centroid: 6, normalized-entropy: 0.9100534290139191, [(1, 27), (2, 56)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [41, 38, 0]]
** centroid: 7, normalized-entropy: 0.9989595114657399, [(1, 41), (2, 38)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1928444334436208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1928444334436208, 0.16409669888392092] ***
*** starting iteration: 2; err: [Inf, 0.1928444334436208, 0.16409669888392092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1928444334436208, 0.16409669888392092, 0.1592422144971788] ***
*** starting iteration: 3; err: [Inf, 0.1928444334436208, 0.16409669888392092, 0.1592422144971788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1928444334436208, 0.16409669888392092, 0.1592422144971788, 0.1559452557452023] ***
*** starting iteration: 4; err: [Inf, 0.1928444334436208, 0.16409669888392092, 0.1592422144971788, 0.1559452557452023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1928444334436208, 0.16409669888392092, 0.1592422144971788, 0.1559452557452023, 0.15323547927476466] ***
*** starting iteration: 5; err: [Inf, 0.1928444334436208, 0.16409669888392092, 0.1592422144971788, 0.1559452557452023, 0.15323547927476466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1928444334436208, 0.16409669888392092, 0.1592422144971788, 0.1559452557452023, 0.15323547927476466, 0.1505748072601855] ***
*** starting iteration: 6; err: [Inf, 0.1928444334436208, 0.16409669888392092, 0.1592422144971788, 0.1559452557452023, 0.15323547927476466, 0.1505748072601855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1928444334436208, 0.16409669888392092, 0.1592422144971788, 0.1559452557452023, 0.15323547927476466, 0.1505748072601855, 0.14809891510754825] ***
*** starting iteration: 7; err: [Inf, 0.1928444334436208, 0.16409669888392092, 0.1592422144971788, 0.1559452557452023, 0.15323547927476466, 0.1505748072601855, 0.14809891510754825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1928444334436208, 0.16409669888392092, 0.1592422144971788, 0.1559452557452023, 0.15323547927476466, 0.1505748072601855, 0.14809891510754825, 0.14730113625526428] ***
*** finished computation of 7 references, err: [Inf, 0.1928444334436208, 0.16409669888392092, 0.1592422144971788, 0.1559452557452023, 0.15323547927476466, 0.1505748072601855, 0.14809891510754825, 0.14730113625526428] ***
*** center 1: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [49, 37, 0]]
** centroid: 2, normalized-entropy: 0.985909442028652, [(1, 49), (2, 37)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [53, 12, 0]]
** centroid: 3, normalized-entropy: 0.6900703653284017, [(1, 53), (2, 12)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [74, 2, 0]]
** centroid: 4, normalized-entropy: 0.17556502585750275, [(1, 74), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [11, 70, 0]]
** centroid: 5, normalized-entropy: 0.5731393980555147, [(1, 11), (2, 70)]
*** center 6: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 57, 15]]
** centroid: 7, normalized-entropy: 0.7382848661434506, [(2, 57), (3, 15)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23299877292942256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23299877292942256, 0.17159027015417813] ***
*** starting iteration: 2; err: [Inf, 0.23299877292942256, 0.17159027015417813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23299877292942256, 0.17159027015417813, 0.1553478797841817] ***
*** starting iteration: 3; err: [Inf, 0.23299877292942256, 0.17159027015417813, 0.1553478797841817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23299877292942256, 0.17159027015417813, 0.1553478797841817, 0.14946189033519477] ***
*** starting iteration: 4; err: [Inf, 0.23299877292942256, 0.17159027015417813, 0.1553478797841817, 0.14946189033519477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23299877292942256, 0.17159027015417813, 0.1553478797841817, 0.14946189033519477, 0.14707314118742942] ***
*** starting iteration: 5; err: [Inf, 0.23299877292942256, 0.17159027015417813, 0.1553478797841817, 0.14946189033519477, 0.14707314118742942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23299877292942256, 0.17159027015417813, 0.1553478797841817, 0.14946189033519477, 0.14707314118742942, 0.14618187944963573] ***
*** finished computation of 7 references, err: [Inf, 0.23299877292942256, 0.17159027015417813, 0.1553478797841817, 0.14946189033519477, 0.14707314118742942, 0.14618187944963573] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [42, 49, 0]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(1, 42), (2, 49)]
*** center 2: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 80, 19]]
** centroid: 3, normalized-entropy: 0.7054690408228712, [(2, 80), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [45, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [51, 44, 0]]
** centroid: 6, normalized-entropy: 0.996079990851081, [(1, 51), (2, 44)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [49, 15, 0]]
** centroid: 7, normalized-entropy: 0.7855602922535471, [(1, 49), (2, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23324635983398184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23324635983398184, 0.16631981351971625] ***
*** starting iteration: 2; err: [Inf, 0.23324635983398184, 0.16631981351971625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23324635983398184, 0.16631981351971625, 0.15646599562466146] ***
*** starting iteration: 3; err: [Inf, 0.23324635983398184, 0.16631981351971625, 0.15646599562466146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23324635983398184, 0.16631981351971625, 0.15646599562466146, 0.153263464220101] ***
*** starting iteration: 4; err: [Inf, 0.23324635983398184, 0.16631981351971625, 0.15646599562466146, 0.153263464220101] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23324635983398184, 0.16631981351971625, 0.15646599562466146, 0.153263464220101, 0.1524014926068485] ***
*** finished computation of 7 references, err: [Inf, 0.23324635983398184, 0.16631981351971625, 0.15646599562466146, 0.153263464220101, 0.1524014926068485] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [30, 46, 0]]
** centroid: 1, normalized-entropy: 0.9677884628267678, [(1, 30), (2, 46)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 48, 22]]
** centroid: 2, normalized-entropy: 0.8980587934501658, [(2, 48), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [82, 36, 0]]
** centroid: 3, normalized-entropy: 0.8874179270685693, [(1, 82), (2, 36)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 49, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [27, 19, 0]]
** centroid: 6, normalized-entropy: 0.978070970973496, [(1, 27), (2, 19)]
*** center 7: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21357891084998845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21357891084998845, 0.1761726947799325] ***
*** starting iteration: 2; err: [Inf, 0.21357891084998845, 0.1761726947799325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21357891084998845, 0.1761726947799325, 0.157221662142314] ***
*** starting iteration: 3; err: [Inf, 0.21357891084998845, 0.1761726947799325, 0.157221662142314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21357891084998845, 0.1761726947799325, 0.157221662142314, 0.14801958232186735] ***
*** starting iteration: 4; err: [Inf, 0.21357891084998845, 0.1761726947799325, 0.157221662142314, 0.14801958232186735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21357891084998845, 0.1761726947799325, 0.157221662142314, 0.14801958232186735, 0.14394716863892973] ***
*** starting iteration: 5; err: [Inf, 0.21357891084998845, 0.1761726947799325, 0.157221662142314, 0.14801958232186735, 0.14394716863892973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21357891084998845, 0.1761726947799325, 0.157221662142314, 0.14801958232186735, 0.14394716863892973, 0.14255903986189514] ***
*** starting iteration: 6; err: [Inf, 0.21357891084998845, 0.1761726947799325, 0.157221662142314, 0.14801958232186735, 0.14394716863892973, 0.14255903986189514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21357891084998845, 0.1761726947799325, 0.157221662142314, 0.14801958232186735, 0.14394716863892973, 0.14255903986189514, 0.14230104671698063] ***
*** finished computation of 7 references, err: [Inf, 0.21357891084998845, 0.1761726947799325, 0.157221662142314, 0.14801958232186735, 0.14394716863892973, 0.14255903986189514, 0.14230104671698063] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 65, 0]]
** centroid: 1, normalized-entropy: 0.19364280468389852, [(1, 2), (2, 65)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [48, 14, 0]]
** centroid: 2, normalized-entropy: 0.7706290693639406, [(1, 48), (2, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 78, 13]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 78), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [46, 45, 0]]
** centroid: 5, normalized-entropy: 0.999912889501356, [(1, 46), (2, 45)]
*** center 6: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 1, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22262803458049893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22262803458049893, 0.16550416274368762] ***
*** starting iteration: 2; err: [Inf, 0.22262803458049893, 0.16550416274368762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22262803458049893, 0.16550416274368762, 0.15563599376101048] ***
*** starting iteration: 3; err: [Inf, 0.22262803458049893, 0.16550416274368762, 0.15563599376101048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22262803458049893, 0.16550416274368762, 0.15563599376101048, 0.15268762387149035] ***
*** starting iteration: 4; err: [Inf, 0.22262803458049893, 0.16550416274368762, 0.15563599376101048, 0.15268762387149035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22262803458049893, 0.16550416274368762, 0.15563599376101048, 0.15268762387149035, 0.14951379549503327] ***
*** starting iteration: 5; err: [Inf, 0.22262803458049893, 0.16550416274368762, 0.15563599376101048, 0.15268762387149035, 0.14951379549503327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22262803458049893, 0.16550416274368762, 0.15563599376101048, 0.15268762387149035, 0.14951379549503327, 0.14715284458734096] ***
*** starting iteration: 6; err: [Inf, 0.22262803458049893, 0.16550416274368762, 0.15563599376101048, 0.15268762387149035, 0.14951379549503327, 0.14715284458734096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22262803458049893, 0.16550416274368762, 0.15563599376101048, 0.15268762387149035, 0.14951379549503327, 0.14715284458734096, 0.14639334775879978] ***
*** finished computation of 7 references, err: [Inf, 0.22262803458049893, 0.16550416274368762, 0.15563599376101048, 0.15268762387149035, 0.14951379549503327, 0.14715284458734096, 0.14639334775879978] ***
*** center 1: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [62, 37, 0]]
** centroid: 2, normalized-entropy: 0.9534985819759996, [(1, 62), (2, 37)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 70, 18]]
** centroid: 3, normalized-entropy: 0.7309263775906009, [(2, 70), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 17, 0]]
** centroid: 4, normalized-entropy: 0.8536576732793314, [(1, 44), (2, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [5, 68, 0]]
** centroid: 5, normalized-entropy: 0.3602750564216625, [(1, 5), (2, 68)]
*** center 6: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [40, 1, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2517983794976026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2517983794976026, 0.19950120401382446] ***
*** starting iteration: 2; err: [Inf, 0.2517983794976026, 0.19950120401382446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2517983794976026, 0.19950120401382446, 0.18095305507071316] ***
*** starting iteration: 3; err: [Inf, 0.2517983794976026, 0.19950120401382446, 0.18095305507071316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2517983794976026, 0.19950120401382446, 0.18095305507071316, 0.16627078009396792] ***
*** starting iteration: 4; err: [Inf, 0.2517983794976026, 0.19950120401382446, 0.18095305507071316, 0.16627078009396792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2517983794976026, 0.19950120401382446, 0.18095305507071316, 0.16627078009396792, 0.15603266162239016] ***
*** starting iteration: 5; err: [Inf, 0.2517983794976026, 0.19950120401382446, 0.18095305507071316, 0.16627078009396792, 0.15603266162239016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2517983794976026, 0.19950120401382446, 0.18095305507071316, 0.16627078009396792, 0.15603266162239016, 0.15053249566257] ***
*** starting iteration: 6; err: [Inf, 0.2517983794976026, 0.19950120401382446, 0.18095305507071316, 0.16627078009396792, 0.15603266162239016, 0.15053249566257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2517983794976026, 0.19950120401382446, 0.18095305507071316, 0.16627078009396792, 0.15603266162239016, 0.15053249566257, 0.14663416703045368] ***
*** starting iteration: 7; err: [Inf, 0.2517983794976026, 0.19950120401382446, 0.18095305507071316, 0.16627078009396792, 0.15603266162239016, 0.15053249566257, 0.14663416703045368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2517983794976026, 0.19950120401382446, 0.18095305507071316, 0.16627078009396792, 0.15603266162239016, 0.15053249566257, 0.14663416703045368, 0.14562128572911023] ***
*** starting iteration: 8; err: [Inf, 0.2517983794976026, 0.19950120401382446, 0.18095305507071316, 0.16627078009396792, 0.15603266162239016, 0.15053249566257, 0.14663416703045368, 0.14562128572911023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2517983794976026, 0.19950120401382446, 0.18095305507071316, 0.16627078009396792, 0.15603266162239016, 0.15053249566257, 0.14663416703045368, 0.14562128572911023, 0.14510779327340423] ***
*** finished computation of 7 references, err: [Inf, 0.2517983794976026, 0.19950120401382446, 0.18095305507071316, 0.16627078009396792, 0.15603266162239016, 0.15053249566257, 0.14663416703045368, 0.14562128572911023, 0.14510779327340423] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 66, 19]]
** centroid: 1, normalized-entropy: 0.7665599404543365, [(2, 66), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [54, 17, 0]]
** centroid: 3, normalized-entropy: 0.7941021417852022, [(1, 54), (2, 17)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [50, 52, 0]]
** centroid: 4, normalized-entropy: 0.9997226475394071, [(1, 50), (2, 52)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [8, 70, 0]]
** centroid: 5, normalized-entropy: 0.4770713062193298, [(1, 8), (2, 70)]
*** center 6: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29499682046985254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29499682046985254, 0.1701083365222439] ***
*** starting iteration: 2; err: [Inf, 0.29499682046985254, 0.1701083365222439] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29499682046985254, 0.1701083365222439, 0.15917072495631873] ***
*** starting iteration: 3; err: [Inf, 0.29499682046985254, 0.1701083365222439, 0.15917072495631873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29499682046985254, 0.1701083365222439, 0.15917072495631873, 0.15605189788900314] ***
*** starting iteration: 4; err: [Inf, 0.29499682046985254, 0.1701083365222439, 0.15917072495631873, 0.15605189788900314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29499682046985254, 0.1701083365222439, 0.15917072495631873, 0.15605189788900314, 0.15325518945138902] ***
*** starting iteration: 5; err: [Inf, 0.29499682046985254, 0.1701083365222439, 0.15917072495631873, 0.15605189788900314, 0.15325518945138902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29499682046985254, 0.1701083365222439, 0.15917072495631873, 0.15605189788900314, 0.15325518945138902, 0.15198940228205174] ***
*** starting iteration: 6; err: [Inf, 0.29499682046985254, 0.1701083365222439, 0.15917072495631873, 0.15605189788900314, 0.15325518945138902, 0.15198940228205174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29499682046985254, 0.1701083365222439, 0.15917072495631873, 0.15605189788900314, 0.15325518945138902, 0.15198940228205174, 0.1514993775114417] ***
*** finished computation of 7 references, err: [Inf, 0.29499682046985254, 0.1701083365222439, 0.15917072495631873, 0.15605189788900314, 0.15325518945138902, 0.15198940228205174, 0.1514993775114417] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 56, 2]]
** centroid: 2, normalized-entropy: 0.21639693245126485, [(2, 56), (3, 2)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [84, 30, 0]]
** centroid: 3, normalized-entropy: 0.8314743880097292, [(1, 84), (2, 30)]
*** center 4: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [54, 10, 0]]
** centroid: 5, normalized-entropy: 0.625262405223423, [(1, 54), (2, 10)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [11, 70, 0]]
** centroid: 6, normalized-entropy: 0.5731393980555147, [(1, 11), (2, 70)]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2017391338404268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2017391338404268, 0.15884290846064686] ***
*** starting iteration: 2; err: [Inf, 0.2017391338404268, 0.15884290846064686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2017391338404268, 0.15884290846064686, 0.1528957343380898] ***
*** starting iteration: 3; err: [Inf, 0.2017391338404268, 0.15884290846064686, 0.1528957343380898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2017391338404268, 0.15884290846064686, 0.1528957343380898, 0.15035016564279793] ***
*** starting iteration: 4; err: [Inf, 0.2017391338404268, 0.15884290846064686, 0.1528957343380898, 0.15035016564279793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2017391338404268, 0.15884290846064686, 0.1528957343380898, 0.15035016564279793, 0.14913390956260264] ***
*** starting iteration: 5; err: [Inf, 0.2017391338404268, 0.15884290846064686, 0.1528957343380898, 0.15035016564279793, 0.14913390956260264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2017391338404268, 0.15884290846064686, 0.1528957343380898, 0.15035016564279793, 0.14913390956260264, 0.14871632589958608] ***
*** finished computation of 7 references, err: [Inf, 0.2017391338404268, 0.15884290846064686, 0.1528957343380898, 0.15035016564279793, 0.14913390956260264, 0.14871632589958608] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 73, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 40, 0]]
** centroid: 3, normalized-entropy: 0.9926108898749407, [(1, 49), (2, 40)]
*** center 4: selecting labels [1] (freq >= 2) [from [74, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [48, 12, 0]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(1, 48), (2, 12)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [65, 7, 0]]
** centroid: 6, normalized-entropy: 0.460127886147135, [(1, 65), (2, 7)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 61, 19]]
** centroid: 7, normalized-entropy: 0.79085809055281, [(2, 61), (3, 19)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27106198006123305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27106198006123305, 0.17903592386096717] ***
*** starting iteration: 2; err: [Inf, 0.27106198006123305, 0.17903592386096717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575] ***
*** starting iteration: 3; err: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306] ***
*** starting iteration: 4; err: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306, 0.15398312858864666] ***
*** starting iteration: 5; err: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306, 0.15398312858864666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306, 0.15398312858864666, 0.1521201076619327] ***
*** starting iteration: 6; err: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306, 0.15398312858864666, 0.1521201076619327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306, 0.15398312858864666, 0.1521201076619327, 0.15006331906467676] ***
*** starting iteration: 7; err: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306, 0.15398312858864666, 0.1521201076619327, 0.15006331906467676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306, 0.15398312858864666, 0.1521201076619327, 0.15006331906467676, 0.14819793935585768] ***
*** starting iteration: 8; err: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306, 0.15398312858864666, 0.1521201076619327, 0.15006331906467676, 0.14819793935585768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306, 0.15398312858864666, 0.1521201076619327, 0.15006331906467676, 0.14819793935585768, 0.1464489739476703] ***
*** starting iteration: 9; err: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306, 0.15398312858864666, 0.1521201076619327, 0.15006331906467676, 0.14819793935585768, 0.1464489739476703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306, 0.15398312858864666, 0.1521201076619327, 0.15006331906467676, 0.14819793935585768, 0.1464489739476703, 0.1451854687333107] ***
*** starting iteration: 10; err: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306, 0.15398312858864666, 0.1521201076619327, 0.15006331906467676, 0.14819793935585768, 0.1464489739476703, 0.1451854687333107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306, 0.15398312858864666, 0.1521201076619327, 0.15006331906467676, 0.14819793935585768, 0.1464489739476703, 0.1451854687333107, 0.14350964852981268] ***
*** finished computation of 7 references, err: [Inf, 0.27106198006123305, 0.17903592386096717, 0.16310115382261575, 0.15693918722402306, 0.15398312858864666, 0.1521201076619327, 0.15006331906467676, 0.14819793935585768, 0.1464489739476703, 0.1451854687333107, 0.14350964852981268] ***
*** center 1: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 29, 0]]
** centroid: 2, normalized-entropy: 0.8991045208483789, [(1, 63), (2, 29)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 71, 15]]
** centroid: 3, normalized-entropy: 0.6677135405281421, [(2, 71), (3, 15)]
*** center 4: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [40, 35, 0]]
** centroid: 5, normalized-entropy: 0.9967916319816367, [(1, 40), (2, 35)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 61, 0]]
** centroid: 6, normalized-entropy: 0.43497348007474274, [(1, 6), (2, 61)]
*** center 7: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21033427982777358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21033427982777358, 0.1869312079390511] ***
*** starting iteration: 2; err: [Inf, 0.21033427982777358, 0.1869312079390511] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21033427982777358, 0.1869312079390511, 0.18169429442100227] ***
*** starting iteration: 3; err: [Inf, 0.21033427982777358, 0.1869312079390511, 0.18169429442100227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21033427982777358, 0.1869312079390511, 0.18169429442100227, 0.17589903972763568] ***
*** starting iteration: 4; err: [Inf, 0.21033427982777358, 0.1869312079390511, 0.18169429442100227, 0.17589903972763568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21033427982777358, 0.1869312079390511, 0.18169429442100227, 0.17589903972763568, 0.16745198021642863] ***
*** starting iteration: 5; err: [Inf, 0.21033427982777358, 0.1869312079390511, 0.18169429442100227, 0.17589903972763568, 0.16745198021642863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21033427982777358, 0.1869312079390511, 0.18169429442100227, 0.17589903972763568, 0.16745198021642863, 0.15822321792691946] ***
*** starting iteration: 6; err: [Inf, 0.21033427982777358, 0.1869312079390511, 0.18169429442100227, 0.17589903972763568, 0.16745198021642863, 0.15822321792691946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21033427982777358, 0.1869312079390511, 0.18169429442100227, 0.17589903972763568, 0.16745198021642863, 0.15822321792691946, 0.15296993313916027] ***
*** starting iteration: 7; err: [Inf, 0.21033427982777358, 0.1869312079390511, 0.18169429442100227, 0.17589903972763568, 0.16745198021642863, 0.15822321792691946, 0.15296993313916027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21033427982777358, 0.1869312079390511, 0.18169429442100227, 0.17589903972763568, 0.16745198021642863, 0.15822321792691946, 0.15296993313916027, 0.15129560071788728] ***
*** starting iteration: 8; err: [Inf, 0.21033427982777358, 0.1869312079390511, 0.18169429442100227, 0.17589903972763568, 0.16745198021642863, 0.15822321792691946, 0.15296993313916027, 0.15129560071788728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21033427982777358, 0.1869312079390511, 0.18169429442100227, 0.17589903972763568, 0.16745198021642863, 0.15822321792691946, 0.15296993313916027, 0.15129560071788728, 0.15097127491235732] ***
*** finished computation of 7 references, err: [Inf, 0.21033427982777358, 0.1869312079390511, 0.18169429442100227, 0.17589903972763568, 0.16745198021642863, 0.15822321792691946, 0.15296993313916027, 0.15129560071788728, 0.15097127491235732] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 60, 20]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 60), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 34, 0]]
** centroid: 2, normalized-entropy: 0.9998393017810486, [(1, 33), (2, 34)]
*** center 3: selecting labels [1] (freq >= 2) [from [42, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [12, 64, 0]]
** centroid: 5, normalized-entropy: 0.6292492238560344, [(1, 12), (2, 64)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [71, 43, 0]]
** centroid: 6, normalized-entropy: 0.9560353655943677, [(1, 71), (2, 43)]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23509497622027994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23509497622027994, 0.16931648162379861] ***
*** starting iteration: 2; err: [Inf, 0.23509497622027994, 0.16931648162379861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998] ***
*** starting iteration: 3; err: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998, 0.1604622374549508] ***
*** starting iteration: 4; err: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998, 0.1604622374549508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998, 0.1604622374549508, 0.15836549908900632] ***
*** starting iteration: 5; err: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998, 0.1604622374549508, 0.15836549908900632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998, 0.1604622374549508, 0.15836549908900632, 0.15716097489465028] ***
*** starting iteration: 6; err: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998, 0.1604622374549508, 0.15836549908900632, 0.15716097489465028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998, 0.1604622374549508, 0.15836549908900632, 0.15716097489465028, 0.15586884347628802] ***
*** starting iteration: 7; err: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998, 0.1604622374549508, 0.15836549908900632, 0.15716097489465028, 0.15586884347628802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998, 0.1604622374549508, 0.15836549908900632, 0.15716097489465028, 0.15586884347628802, 0.15448530382383616] ***
*** starting iteration: 8; err: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998, 0.1604622374549508, 0.15836549908900632, 0.15716097489465028, 0.15586884347628802, 0.15448530382383616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998, 0.1604622374549508, 0.15836549908900632, 0.15716097489465028, 0.15586884347628802, 0.15448530382383616, 0.1526221315264702] ***
*** starting iteration: 9; err: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998, 0.1604622374549508, 0.15836549908900632, 0.15716097489465028, 0.15586884347628802, 0.15448530382383616, 0.1526221315264702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998, 0.1604622374549508, 0.15836549908900632, 0.15716097489465028, 0.15586884347628802, 0.15448530382383616, 0.1526221315264702, 0.15191533492319287] ***
*** finished computation of 7 references, err: [Inf, 0.23509497622027994, 0.16931648162379861, 0.16427363302092998, 0.1604622374549508, 0.15836549908900632, 0.15716097489465028, 0.15586884347628802, 0.15448530382383616, 0.1526221315264702, 0.15191533492319287] ***
*** center 1: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [45, 35, 0]]
** centroid: 2, normalized-entropy: 0.9886994082884974, [(1, 45), (2, 35)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [70, 41, 0]]
** centroid: 3, normalized-entropy: 0.9501866467511052, [(1, 70), (2, 41)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 57, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [44, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [54, 19, 0]]
** centroid: 6, normalized-entropy: 0.8271595195340525, [(1, 54), (2, 19)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 38, 16]]
** centroid: 7, normalized-entropy: 0.876716288999464, [(2, 38), (3, 16)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21359521655831487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21359521655831487, 0.15663521978631614] ***
*** starting iteration: 2; err: [Inf, 0.21359521655831487, 0.15663521978631614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21359521655831487, 0.15663521978631614, 0.15277128618024288] ***
*** starting iteration: 3; err: [Inf, 0.21359521655831487, 0.15663521978631614, 0.15277128618024288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21359521655831487, 0.15663521978631614, 0.15277128618024288, 0.1518179938737303] ***
*** finished computation of 7 references, err: [Inf, 0.21359521655831487, 0.15663521978631614, 0.15277128618024288, 0.1518179938737303] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [62, 27, 0]]
** centroid: 1, normalized-entropy: 0.8853723770068483, [(1, 62), (2, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [14, 40, 0]]
** centroid: 2, normalized-entropy: 0.8256265261578954, [(1, 14), (2, 40)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 61, 11]]
** centroid: 3, normalized-entropy: 0.6167482598263911, [(2, 61), (3, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 71, 5]]
** centroid: 6, normalized-entropy: 0.35001059292688486, [(2, 71), (3, 5)]
*** center 7: selecting labels [1] (freq >= 2) [from [81, 1, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17032267904933543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17032267904933543, 0.15358701597806065] ***
*** starting iteration: 2; err: [Inf, 0.17032267904933543, 0.15358701597806065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17032267904933543, 0.15358701597806065, 0.15049294509831815] ***
*** starting iteration: 3; err: [Inf, 0.17032267904933543, 0.15358701597806065, 0.15049294509831815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17032267904933543, 0.15358701597806065, 0.15049294509831815, 0.1500375510789454] ***
*** finished computation of 7 references, err: [Inf, 0.17032267904933543, 0.15358701597806065, 0.15049294509831815, 0.1500375510789454] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [64, 2, 0]]
** centroid: 1, normalized-entropy: 0.19590927087360496, [(1, 64), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [75, 46, 0]]
** centroid: 2, normalized-entropy: 0.9581586772265479, [(1, 75), (2, 46)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 45, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [57, 1, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 63, 16]]
** centroid: 6, normalized-entropy: 0.7269625813353975, [(2, 63), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [10, 41, 0]]
** centroid: 7, normalized-entropy: 0.7140152804378671, [(1, 10), (2, 41)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23805354077741503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23805354077741503, 0.1644070611987263] ***
*** starting iteration: 2; err: [Inf, 0.23805354077741503, 0.1644070611987263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23805354077741503, 0.1644070611987263, 0.15285346133634448] ***
*** starting iteration: 3; err: [Inf, 0.23805354077741503, 0.1644070611987263, 0.15285346133634448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23805354077741503, 0.1644070611987263, 0.15285346133634448, 0.1494642991963774] ***
*** starting iteration: 4; err: [Inf, 0.23805354077741503, 0.1644070611987263, 0.15285346133634448, 0.1494642991963774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23805354077741503, 0.1644070611987263, 0.15285346133634448, 0.1494642991963774, 0.14815353470761328] ***
*** starting iteration: 5; err: [Inf, 0.23805354077741503, 0.1644070611987263, 0.15285346133634448, 0.1494642991963774, 0.14815353470761328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23805354077741503, 0.1644070611987263, 0.15285346133634448, 0.1494642991963774, 0.14815353470761328, 0.14760003414563835] ***
*** finished computation of 7 references, err: [Inf, 0.23805354077741503, 0.1644070611987263, 0.15285346133634448, 0.1494642991963774, 0.14815353470761328, 0.14760003414563835] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 57, 18]]
** centroid: 1, normalized-entropy: 0.7950402793845225, [(2, 57), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [60, 40, 0]]
** centroid: 2, normalized-entropy: 0.9709505944546688, [(1, 60), (2, 40)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [80, 2, 0]]
** centroid: 3, normalized-entropy: 0.16542703399626665, [(1, 80), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [7, 74, 0]]
** centroid: 4, normalized-entropy: 0.42440514472480345, [(1, 7), (2, 74)]
*** center 5: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [39, 15, 0]]
** centroid: 7, normalized-entropy: 0.8524051786494784, [(1, 39), (2, 15)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2073586015254259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2073586015254259, 0.15405720541905613] ***
*** starting iteration: 2; err: [Inf, 0.2073586015254259, 0.15405720541905613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2073586015254259, 0.15405720541905613, 0.15056928031588904] ***
*** starting iteration: 3; err: [Inf, 0.2073586015254259, 0.15405720541905613, 0.15056928031588904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2073586015254259, 0.15405720541905613, 0.15056928031588904, 0.14877073256624862] ***
*** starting iteration: 4; err: [Inf, 0.2073586015254259, 0.15405720541905613, 0.15056928031588904, 0.14877073256624862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2073586015254259, 0.15405720541905613, 0.15056928031588904, 0.14877073256624862, 0.14741919866204262] ***
*** starting iteration: 5; err: [Inf, 0.2073586015254259, 0.15405720541905613, 0.15056928031588904, 0.14877073256624862, 0.14741919866204262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2073586015254259, 0.15405720541905613, 0.15056928031588904, 0.14877073256624862, 0.14741919866204262, 0.1467171782143414] ***
*** finished computation of 7 references, err: [Inf, 0.2073586015254259, 0.15405720541905613, 0.15056928031588904, 0.14877073256624862, 0.14741919866204262, 0.1467171782143414] ***
*** center 1: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 67, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [86, 4, 0]]
** centroid: 3, normalized-entropy: 0.2623112196143368, [(1, 86), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [48, 20, 0]]
** centroid: 4, normalized-entropy: 0.8739810481273581, [(1, 48), (2, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [5, 71, 0]]
** centroid: 5, normalized-entropy: 0.35001059292688486, [(1, 5), (2, 71)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 34, 15]]
** centroid: 6, normalized-entropy: 0.8886466698980794, [(2, 34), (3, 15)]
*** center 7: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19440118931420147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19440118931420147, 0.15754456598870456] ***
*** starting iteration: 2; err: [Inf, 0.19440118931420147, 0.15754456598870456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19440118931420147, 0.15754456598870456, 0.15027193636354058] ***
*** starting iteration: 3; err: [Inf, 0.19440118931420147, 0.15754456598870456, 0.15027193636354058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19440118931420147, 0.15754456598870456, 0.15027193636354058, 0.14713605574704708] ***
*** starting iteration: 4; err: [Inf, 0.19440118931420147, 0.15754456598870456, 0.15027193636354058, 0.14713605574704708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19440118931420147, 0.15754456598870456, 0.15027193636354058, 0.14713605574704708, 0.14580120373889804] ***
*** starting iteration: 5; err: [Inf, 0.19440118931420147, 0.15754456598870456, 0.15027193636354058, 0.14713605574704708, 0.14580120373889804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19440118931420147, 0.15754456598870456, 0.15027193636354058, 0.14713605574704708, 0.14580120373889804, 0.14536240625754] ***
*** finished computation of 7 references, err: [Inf, 0.19440118931420147, 0.15754456598870456, 0.15027193636354058, 0.14713605574704708, 0.14580120373889804, 0.14536240625754] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [47, 25, 0]]
** centroid: 1, normalized-entropy: 0.9315627684809641, [(1, 47), (2, 25)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 51, 16]]
** centroid: 2, normalized-entropy: 0.7930490047779772, [(2, 51), (3, 16)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 67, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [54, 15, 0]]
** centroid: 4, normalized-entropy: 0.7553754125614286, [(1, 54), (2, 15)]
*** center 5: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [71, 32, 0]]
** centroid: 6, normalized-entropy: 0.8939563962625153, [(1, 71), (2, 32)]
*** center 7: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21286749682296066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21286749682296066, 0.17496208745706826] ***
*** starting iteration: 2; err: [Inf, 0.21286749682296066, 0.17496208745706826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21286749682296066, 0.17496208745706826, 0.16904986838344485] ***
*** starting iteration: 3; err: [Inf, 0.21286749682296066, 0.17496208745706826, 0.16904986838344485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21286749682296066, 0.17496208745706826, 0.16904986838344485, 0.1631062252316624] ***
*** starting iteration: 4; err: [Inf, 0.21286749682296066, 0.17496208745706826, 0.16904986838344485, 0.1631062252316624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21286749682296066, 0.17496208745706826, 0.16904986838344485, 0.1631062252316624, 0.15482029966358096] ***
*** starting iteration: 5; err: [Inf, 0.21286749682296066, 0.17496208745706826, 0.16904986838344485, 0.1631062252316624, 0.15482029966358096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21286749682296066, 0.17496208745706826, 0.16904986838344485, 0.1631062252316624, 0.15482029966358096, 0.15197869501635433] ***
*** starting iteration: 6; err: [Inf, 0.21286749682296066, 0.17496208745706826, 0.16904986838344485, 0.1631062252316624, 0.15482029966358096, 0.15197869501635433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21286749682296066, 0.17496208745706826, 0.16904986838344485, 0.1631062252316624, 0.15482029966358096, 0.15197869501635433, 0.15148730393499135] ***
*** finished computation of 7 references, err: [Inf, 0.21286749682296066, 0.17496208745706826, 0.16904986838344485, 0.1631062252316624, 0.15482029966358096, 0.15197869501635433, 0.15148730393499135] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 78, 15]]
** centroid: 1, normalized-entropy: 0.6373874992221911, [(2, 78), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [65, 29, 0]]
** centroid: 2, normalized-entropy: 0.8914467590654126, [(1, 65), (2, 29)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [65, 7, 0]]
** centroid: 3, normalized-entropy: 0.460127886147135, [(1, 65), (2, 7)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 67, 2]]
** centroid: 4, normalized-entropy: 0.18927843126120178, [(2, 67), (3, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [56, 19, 0]]
** centroid: 5, normalized-entropy: 0.8165187119538281, [(1, 56), (2, 19)]
*** center 6: selecting labels [1] (freq >= 2) [from [41, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23200711013330147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23200711013330147, 0.17873153350502252] ***
*** starting iteration: 2; err: [Inf, 0.23200711013330147, 0.17873153350502252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23200711013330147, 0.17873153350502252, 0.16764914141967893] ***
*** starting iteration: 3; err: [Inf, 0.23200711013330147, 0.17873153350502252, 0.16764914141967893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23200711013330147, 0.17873153350502252, 0.16764914141967893, 0.1609755555461161] ***
*** starting iteration: 4; err: [Inf, 0.23200711013330147, 0.17873153350502252, 0.16764914141967893, 0.1609755555461161] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23200711013330147, 0.17873153350502252, 0.16764914141967893, 0.1609755555461161, 0.1560979555537924] ***
*** starting iteration: 5; err: [Inf, 0.23200711013330147, 0.17873153350502252, 0.16764914141967893, 0.1609755555461161, 0.1560979555537924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23200711013330147, 0.17873153350502252, 0.16764914141967893, 0.1609755555461161, 0.1560979555537924, 0.15216765350475908] ***
*** starting iteration: 6; err: [Inf, 0.23200711013330147, 0.17873153350502252, 0.16764914141967893, 0.1609755555461161, 0.1560979555537924, 0.15216765350475908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23200711013330147, 0.17873153350502252, 0.16764914141967893, 0.1609755555461161, 0.1560979555537924, 0.15216765350475908, 0.14951363783259877] ***
*** starting iteration: 7; err: [Inf, 0.23200711013330147, 0.17873153350502252, 0.16764914141967893, 0.1609755555461161, 0.1560979555537924, 0.15216765350475908, 0.14951363783259877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23200711013330147, 0.17873153350502252, 0.16764914141967893, 0.1609755555461161, 0.1560979555537924, 0.15216765350475908, 0.14951363783259877, 0.14846690229512752] ***
*** starting iteration: 8; err: [Inf, 0.23200711013330147, 0.17873153350502252, 0.16764914141967893, 0.1609755555461161, 0.1560979555537924, 0.15216765350475908, 0.14951363783259877, 0.14846690229512752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23200711013330147, 0.17873153350502252, 0.16764914141967893, 0.1609755555461161, 0.1560979555537924, 0.15216765350475908, 0.14951363783259877, 0.14846690229512752, 0.14774946090206503] ***
*** finished computation of 7 references, err: [Inf, 0.23200711013330147, 0.17873153350502252, 0.16764914141967893, 0.1609755555461161, 0.1560979555537924, 0.15216765350475908, 0.14951363783259877, 0.14846690229512752, 0.14774946090206503] ***
*** center 1: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [58, 18, 0]]
** centroid: 3, normalized-entropy: 0.7897492536625221, [(1, 58), (2, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [81, 3, 0]]
** centroid: 4, normalized-entropy: 0.2222848306856879, [(1, 81), (2, 3)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 45, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 76, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 34, 17]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 34), (3, 17)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21724993181228638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21724993181228638, 0.15660097958147526] ***
*** starting iteration: 2; err: [Inf, 0.21724993181228638, 0.15660097958147526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21724993181228638, 0.15660097958147526, 0.15260567106865347] ***
*** starting iteration: 3; err: [Inf, 0.21724993181228638, 0.15660097958147526, 0.15260567106865347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21724993181228638, 0.15660097958147526, 0.15260567106865347, 0.1511822756463662] ***
*** starting iteration: 4; err: [Inf, 0.21724993181228638, 0.15660097958147526, 0.15260567106865347, 0.1511822756463662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21724993181228638, 0.15660097958147526, 0.15260567106865347, 0.1511822756463662, 0.1505931922867894] ***
*** finished computation of 7 references, err: [Inf, 0.21724993181228638, 0.15660097958147526, 0.15260567106865347, 0.1511822756463662, 0.1505931922867894] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 40, 21]]
** centroid: 1, normalized-entropy: 0.9288391461883213, [(2, 40), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [32, 32, 0]]
** centroid: 2, normalized-entropy: 1.0, [(1, 32), (2, 32)]
*** center 3: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [18, 80, 0]]
** centroid: 4, normalized-entropy: 0.6880476235340797, [(1, 18), (2, 80)]
*** center 5: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 37, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [72, 7, 0]]
** centroid: 7, normalized-entropy: 0.43180499427520785, [(1, 72), (2, 7)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24357102906517686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24357102906517686, 0.15760697558056563] ***
*** starting iteration: 2; err: [Inf, 0.24357102906517686, 0.15760697558056563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24357102906517686, 0.15760697558056563, 0.1522437852974981] ***
*** starting iteration: 3; err: [Inf, 0.24357102906517686, 0.15760697558056563, 0.1522437852974981] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24357102906517686, 0.15760697558056563, 0.1522437852974981, 0.1511250541592017] ***
*** starting iteration: 4; err: [Inf, 0.24357102906517686, 0.15760697558056563, 0.1522437852974981, 0.1511250541592017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24357102906517686, 0.15760697558056563, 0.1522437852974981, 0.1511250541592017, 0.14981054832320662] ***
*** starting iteration: 5; err: [Inf, 0.24357102906517686, 0.15760697558056563, 0.1522437852974981, 0.1511250541592017, 0.14981054832320662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24357102906517686, 0.15760697558056563, 0.1522437852974981, 0.1511250541592017, 0.14981054832320662, 0.14892563656531274] ***
*** finished computation of 7 references, err: [Inf, 0.24357102906517686, 0.15760697558056563, 0.1522437852974981, 0.1511250541592017, 0.14981054832320662, 0.14892563656531274] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 54, 15]]
** centroid: 1, normalized-entropy: 0.7553754125614286, [(2, 54), (3, 15)]
*** center 2: selecting labels [2] (freq >= 2) [from [1, 70, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [34, 17, 0]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(1, 34), (2, 17)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [81, 10, 0]]
** centroid: 4, normalized-entropy: 0.49958440742366095, [(1, 81), (2, 10)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [55, 8, 0]]
** centroid: 5, normalized-entropy: 0.5491087450260074, [(1, 55), (2, 8)]
*** center 6: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [48, 27, 0]]
** centroid: 7, normalized-entropy: 0.9426831892554921, [(1, 48), (2, 27)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18121903939917683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18121903939917683, 0.15660485829226672] ***
*** starting iteration: 2; err: [Inf, 0.18121903939917683, 0.15660485829226672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18121903939917683, 0.15660485829226672, 0.15361527143977582] ***
*** starting iteration: 3; err: [Inf, 0.18121903939917683, 0.15660485829226672, 0.15361527143977582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18121903939917683, 0.15660485829226672, 0.15361527143977582, 0.1508587314467877] ***
*** starting iteration: 4; err: [Inf, 0.18121903939917683, 0.15660485829226672, 0.15361527143977582, 0.1508587314467877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18121903939917683, 0.15660485829226672, 0.15361527143977582, 0.1508587314467877, 0.14903048576414585] ***
*** starting iteration: 5; err: [Inf, 0.18121903939917683, 0.15660485829226672, 0.15361527143977582, 0.1508587314467877, 0.14903048576414585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18121903939917683, 0.15660485829226672, 0.15361527143977582, 0.1508587314467877, 0.14903048576414585, 0.14832768010441214] ***
*** finished computation of 7 references, err: [Inf, 0.18121903939917683, 0.15660485829226672, 0.15361527143977582, 0.1508587314467877, 0.14903048576414585, 0.14832768010441214] ***
*** center 1: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 72, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 39, 0]]
** centroid: 3, normalized-entropy: 0.9906649266228326, [(1, 49), (2, 39)]
*** center 4: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [48, 20, 0]]
** centroid: 5, normalized-entropy: 0.8739810481273581, [(1, 48), (2, 20)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 41, 18]]
** centroid: 6, normalized-entropy: 0.8874179270685693, [(2, 41), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [55, 25, 0]]
** centroid: 7, normalized-entropy: 0.8960382325345574, [(1, 55), (2, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23370428943820298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23370428943820298, 0.16211291484721005] ***
*** starting iteration: 2; err: [Inf, 0.23370428943820298, 0.16211291484721005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23370428943820298, 0.16211291484721005, 0.15105818913318217] ***
*** starting iteration: 3; err: [Inf, 0.23370428943820298, 0.16211291484721005, 0.15105818913318217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23370428943820298, 0.16211291484721005, 0.15105818913318217, 0.14721206638519652] ***
*** starting iteration: 4; err: [Inf, 0.23370428943820298, 0.16211291484721005, 0.15105818913318217, 0.14721206638519652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23370428943820298, 0.16211291484721005, 0.15105818913318217, 0.14721206638519652, 0.14545560066588223] ***
*** starting iteration: 5; err: [Inf, 0.23370428943820298, 0.16211291484721005, 0.15105818913318217, 0.14721206638519652, 0.14545560066588223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23370428943820298, 0.16211291484721005, 0.15105818913318217, 0.14721206638519652, 0.14545560066588223, 0.14415707185585053] ***
*** starting iteration: 6; err: [Inf, 0.23370428943820298, 0.16211291484721005, 0.15105818913318217, 0.14721206638519652, 0.14545560066588223, 0.14415707185585053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23370428943820298, 0.16211291484721005, 0.15105818913318217, 0.14721206638519652, 0.14545560066588223, 0.14415707185585053, 0.14315511180646717] ***
*** starting iteration: 7; err: [Inf, 0.23370428943820298, 0.16211291484721005, 0.15105818913318217, 0.14721206638519652, 0.14545560066588223, 0.14415707185585053, 0.14315511180646717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23370428943820298, 0.16211291484721005, 0.15105818913318217, 0.14721206638519652, 0.14545560066588223, 0.14415707185585053, 0.14315511180646717, 0.14261771845817567] ***
*** finished computation of 7 references, err: [Inf, 0.23370428943820298, 0.16211291484721005, 0.15105818913318217, 0.14721206638519652, 0.14545560066588223, 0.14415707185585053, 0.14315511180646717, 0.14261771845817567] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 78, 0]]
** centroid: 1, normalized-entropy: 0.1686609314966701, [(1, 2), (2, 78)]
*** center 2: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 58, 17]]
** centroid: 3, normalized-entropy: 0.7721551435804817, [(2, 58), (3, 17)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [53, 43, 0]]
** centroid: 4, normalized-entropy: 0.9921586617207422, [(1, 53), (2, 43)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [64, 3, 0]]
** centroid: 5, normalized-entropy: 0.26377743669413856, [(1, 64), (2, 3)]
*** center 6: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [42, 21, 0]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(1, 42), (2, 21)]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 387,3 => 35,1 => 578), Dict(2 => 373,3 => 28,1 => 599))
[ Info: ===== scores for single classifier: {"micro_f1":0.93,"precision":0.93,"recall":0.93,"macro_recall":0.9435132429533285,"macro_f1":0.8687691807334813,"accuracy":0.93,"class_f1":{"2":0.901685393258427,"3":0.7466666666666666,"1":0.9579554822753504},"class_precision":{"2":0.9469026548672567,"3":0.5957446808510638,"1":0.9462540716612378},"class_recall":{"2":0.8605898123324397,"3":1.0,"1":0.9699499165275459}}
[ Info: ===== scores for 1: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9737796536079645,"macro_f1":0.9267652686720051,"accuracy":0.965,"class_f1":{"2":0.9527665317139,"3":0.8484848484848484,"1":0.9790444258172672},"class_precision":{"2":0.9592391304347826,"3":0.7368421052631579,"1":0.9831649831649831},"class_recall":{"2":0.9463806970509383,"3":1.0,"1":0.9749582637729549}}
[ Info: ===== scores for 5: {"micro_f1":0.962,"precision":0.962,"recall":0.962,"macro_recall":0.9731217205918115,"macro_f1":0.9247231777231777,"accuracy":0.962,"class_f1":{"2":0.9493333333333334,"3":0.8484848484848484,"1":0.9763513513513513},"class_precision":{"2":0.9442970822281167,"3":0.7368421052631579,"1":0.9880341880341881},"class_recall":{"2":0.9544235924932976,"3":1.0,"1":0.9649415692821369}}
[ Info: ===== scores for 7: {"micro_f1":0.959,"precision":0.959,"recall":0.959,"macro_recall":0.9721266155537752,"macro_f1":0.9148957994057962,"accuracy":0.959,"class_f1":{"2":0.9458388375165125,"3":0.8235294117647058,"1":0.9753191489361701},"class_precision":{"2":0.9322916666666666,"3":0.7,"1":0.9947916666666666},"class_recall":{"2":0.9597855227882037,"3":1.0,"1":0.9565943238731218}}
[ Info: ===== scores for 9: {"micro_f1":0.962,"precision":0.962,"recall":0.962,"macro_recall":0.9741332366574617,"macro_f1":0.9133510189631066,"accuracy":0.962,"class_f1":{"2":0.9497354497354498,"3":0.8115942028985507,"1":0.9787234042553191},"class_precision":{"2":0.9373368146214099,"3":0.6829268292682927,"1":0.9982638888888888},"class_recall":{"2":0.9624664879356568,"3":1.0,"1":0.9599332220367279}}
[ Info: ===== scores for 11: {"micro_f1":0.957,"precision":0.957,"recall":0.957,"macro_recall":0.9696649614117064,"macro_f1":0.8959191511515745,"accuracy":0.957,"class_f1":{"2":0.9427430093209055,"3":0.7671232876712328,"1":0.9778911564625851},"class_precision":{"2":0.9365079365079365,"3":0.6222222222222222,"1":0.9965337954939342},"class_recall":{"2":0.9490616621983914,"3":1.0,"1":0.9599332220367279}}
(score = 0.963, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.965, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.96, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.96, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.96, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.96, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.961, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.961, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.962, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.962, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.96, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.96, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.959, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.959, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.965,"k":1,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9737796536079645,"macro_f1":0.9267652686720051,"accuracy":0.965,"class_f1":{"2":0.9527665317139,"3":0.8484848484848484,"1":0.9790444258172672},"class_precision":{"2":0.9592391304347826,"3":0.7368421052631579,"1":0.9831649831649831},"class_recall":{"2":0.9463806970509383,"3":1.0,"1":0.9749582637729549}}
Test Summary: | Pass  Total
AKNC          |    8      8
[234, 1, 2, 1, 1, 2, 8, 3, 1, 2, 9, 13, 14, 7, 3, 6, 2, 18, 4, 3, 17, 9, 6, 1, 2, 4, 23, 8, 2, 7, 6, 64, 1, 5, 3, 22, 21, 1, 3, 5, 2, 18, 3, 9, 172, 20, 13, 30, 3, 11, 11, 87, 20, 2, 21, 7, 34, 34, 46, 4, 4, 48, 6, 4, 3, 26, 3, 9, 4, 24, 17, 6, 6, 2, 33, 16, 27, 45, 28, 8, 4, 5, 39, 45, 53, 70, 12, 26, 2, 27, 70, 15, 11, 25, 8, 12, 10, 7, 208, 83, 2, 9, 5, 25, 8, 55, 10, 7, 16, 8, 22, 22, 4, 1, 55, 7, 119, 1, 18, 3, 45, 8, 41, 4, 2, 21, 3, 39, 57, 29, 27, 14, 36, 12, 17, 6, 36, 8, 8, 76, 6, 9, 797, 7, 6, 2, 16, 13, 6, 21, 40, 11, 10, 5, 6, 25, 51, 24, 24, 106, 66, 3, 34, 44, 223, 24, 8, 5, 22, 54, 30, 146, 7, 141, 45, 1, 2, 5, 59, 17, 4, 45, 5, 2, 1, 24, 260, 18, 2, 3, 28, 12, 13, 3, 21, 5, 29, 3, 48, 11, 40, 7, 14, 85, 55, 3, 6, 14, 55, 22, 6, 30, 16, 7, 45, 26, 5, 10, 9, 300, 92, 3, 57, 142, 15, 21, 13, 5, 96, 7, 329, 7, 127, 45, 54, 4, 7, 34, 52, 229, 20, 77, 26, 10, 23, 3, 18, 4, 27, 25, 12, 26, 59, 46, 32, 5, 21, 6, 20, 24, 21, 2, 89, 2, 53, 36, 14, 9, 36, 35, 42, 5, 25, 64, 10, 29, 13, 16, 3, 7, 35, 136, 124, 13, 95, 29, 9, 24, 3, 27, 2, 9, 345, 4, 18, 186, 17, 45, 18, 86]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.632, speedup = 0.3448181028750539, eval_ratio = 0.063678)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.38020833333333315,"f1":null,"seconds":0.000533001497387886,"exhaustive_search_seconds":0.0005011092871427536,"evaluations":485.9453125,"distances_sum":1664.9915947881132}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5617404513888886,"recall":0.5616319444444442,"f1":null,"seconds":0.00020163320004940033,"exhaustive_search_seconds":0.0005011092871427536,"evaluations":631.546875,"distances_sum":1622.8219226920469}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6737196180555552,"recall":0.6736111111111108,"f1":0.6736621732026141,"seconds":0.00033998116850852966,"exhaustive_search_seconds":0.0005011092871427536,"evaluations":775.0078125,"distances_sum":1581.5854491202424}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7499999999999992,"recall":0.7499999999999992,"f1":0.7499999999999992,"seconds":0.0003917645663022995,"exhaustive_search_seconds":0.0005011092871427536,"evaluations":898.65625,"distances_sum":1556.689013902638}
KCenters.DeloneInvIndex> reached performance {"precision":0.8020833333333324,"recall":0.8020833333333324,"f1":0.8020833333333324,"seconds":0.0004469752311706543,"exhaustive_search_seconds":0.0005011092871427536,"evaluations":1019.28125,"distances_sum":1540.399662453415}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7710000000000001, speedup = 1.0734029952268702, eval_ratio = 0.085363)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
