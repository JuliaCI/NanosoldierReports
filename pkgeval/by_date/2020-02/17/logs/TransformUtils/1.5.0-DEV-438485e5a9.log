Julia Version 1.5.0-DEV.271
Commit 438485e5a9 (2020-02-14 18:24 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_Z3XY35/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.01164702333060317 -0.23962895661524428; 0.01164702333060317 0.0 0.0798478537590322; 0.23962895661524428 -0.0798478537590322 0.0])
dAA = so3([0.0 -0.026816555207346285 -0.11822017742785414; 0.026816555207346285 0.0 0.10044539980743072; 0.11822017742785414 -0.10044539980743072 0.0])
dAA = so3([0.0 0.020986122514347255 -0.13586727997536316; -0.020986122514347255 0.0 -0.008700155531434946; 0.13586727997536316 0.008700155531434946 0.0])
dAA = Quaternion(0.9965663664676452, [-0.033956500731556385, 0.017856736353653917, 0.07337281683524982])
dAA = SO3([0.9968590492169537 -0.012879813149374315 -0.07814183519414063; 0.005432495681477582 0.9954835102289216 -0.09477905281746138; 0.07900964488555658 0.09405685129506308 0.9924267150472706])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9546674318189406 -0.028692125250466195 -0.29628846851141527; 0.10195573439650737 0.9666574889364721 0.23490067540708187; 0.2796696673718786 -0.25446033292371123 0.9257617491128357]), [-0.7984785375903218, -2.3962895661524426, 0.11647023330603168])
xj = SE3(SO3([0.9295504589841151 -0.3621087078962999 0.06937743053827448; 0.34581276863305277 0.9215439331512685 0.17655114930929613; -0.12786505876416632 -0.14012160053954126 0.981843400858545]), [0.08700155531434946, -1.3586727997536314, -0.20986122514347252])
Dx = SE3(SO3([0.8869091657610949 -0.29092446313806075 0.3588245928539314; 0.3401483097956351 0.9368624018889854 -0.08116629392780156; -0.31255600943211964 0.19404070880779797 0.9298693157069094]), [0.8598649752228666, 1.0606521237135824, -0.3207258431480333])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
