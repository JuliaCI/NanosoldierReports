Julia Version 1.5.0-DEV.260
Commit a211abcdfa (2020-02-10 22:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_E1nFbr/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.02950994199220899 0.07297479064753838; 0.02950994199220899 0.0 0.08899237370116533; -0.07297479064753838 -0.08899237370116533 0.0])
dAA = so3([0.0 -0.10301164197101116 -0.06967059133398196; 0.10301164197101116 0.0 -0.23116170183930895; 0.06967059133398196 0.23116170183930895 0.0])
dAA = so3([0.0 0.03271552165067786 0.04226123120069102; -0.03271552165067786 0.0 0.025650010597007746; -0.04226123120069102 -0.025650010597007746 0.0])
dAA = Quaternion(0.9971106345104631, [-0.0034729794452397047, 0.07281565778617133, 0.021358860950008992])
dAA = SO3([0.9992039478117108 0.03361797539663266 -0.02147795166498295; -0.03449561224954798 0.9985265560629392 -0.04188996983306342; 0.02003804913210808 0.04259751832346023 0.9988913494568173])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9533802991217861 -0.28798794243852827 -0.09016069130434044; 0.1908913495516416 0.8069328907251514 -0.5589452589764977; 0.2337231223324013 0.515676502156123 0.8242883277174435]), [-0.8899237370116533, 0.7297479064753838, 0.2950994199220899])
xj = SE3(SO3([0.9287063835773699 -0.10557784870959222 0.355468382510312; 0.10210404342665104 0.9943631865924952 0.02857651947923654; -0.35648172101605946 0.009755563103844253 0.9342513642323224]), [-0.25650010597007744, 0.4226123120069102, -0.3271552165067786])
Dx = SE3(SO3([0.8215831275253966 0.09143959031846768 0.5627077091065829; -0.3688943765951359 0.8378202226626704 0.4024602010310575; -0.4346471022359104 -0.538234220223746 0.7220705095058668]), [0.39982878619782447, -0.751138275648707, -0.39835516174851004])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
