Julia Version 1.5.0-DEV.256
Commit 4513dda9e3 (2020-02-10 18:52 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_nnDtiH/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.08254606589687391 0.09834101149053195; 0.08254606589687391 0.0 0.053614210362036764; -0.09834101149053195 -0.053614210362036764 0.0])
dAA = so3([0.0 0.02301961515806078 0.3001547698717692; -0.02301961515806078 0.0 0.06072471194930517; -0.3001547698717692 -0.06072471194930517 0.0])
dAA = so3([0.0 0.01910817368965168 -0.038673732576004864; -0.01910817368965168 0.0 -0.007444481360517733; 0.038673732576004864 0.007444481360517733 0.0])
dAA = Quaternion(0.9925845488260898, [0.011476965798476298, -0.0025083071722341965, -0.12098719387975859])
dAA = SO3([0.9983852017357916 0.04465743245785024 -0.035109865867809474; -0.043194703487668115 0.9982097259632611 0.04137101138435406; 0.036894532733122674 -0.03978764530133022 0.9985267831839969])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.7304439093212342 -0.002155640515222769 0.6829692881451419; -0.10627510301849773 0.9874554284283618 0.11677919055109204; -0.6746534649832612 -0.157883279929604 0.7210517125038606]), [-0.5361421036203676, 0.9834101149053195, 0.8254606589687391])
xj = SE3(SO3([0.8216689375114933 0.5695260983468697 -0.022364713960285297; -0.5698382430265553 0.8200258165141098 -0.053310759090227464; -0.012022225798179695 0.05654806408851882 0.9983274926268926]), [0.07444481360517732, -0.3867373257600486, -0.19108173689651678])
Dx = SE3(SO3([0.6688535251568 0.2907081942336778 -0.6841956647704779; -0.562562980813381 0.7995832566042191 -0.21021300715358887; 0.48596075407761646 0.5255048635013622 0.6983457481310591]), [1.2774259048787515, -1.193780686282376, -0.47597223221970486])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
