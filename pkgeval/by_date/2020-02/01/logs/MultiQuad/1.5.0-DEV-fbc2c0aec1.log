Julia Version 1.5.0-DEV.221
Commit fbc2c0aec1 (2020-02-01 18:55 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ConstructionBase ─── v1.0.0
  Installed MultiQuad ────────── v1.0.0
  Installed OrderedCollections ─ v1.1.0
  Installed Unitful ──────────── v0.18.0
  Installed QuadGK ───────────── v2.3.1
  Installed Cuba ─────────────── v2.0.0
  Installed DataStructures ───── v0.17.9
  Installed BinaryProvider ───── v0.5.8
   Updating `~/.julia/environments/v1.5/Project.toml`
  [8fca5bbe] + MultiQuad v1.0.0
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [b99e7846] + BinaryProvider v0.5.8
  [187b0558] + ConstructionBase v1.0.0
  [8a292aeb] + Cuba v2.0.0
  [864edb3b] + DataStructures v0.17.9
  [8fca5bbe] + MultiQuad v1.0.0
  [bac558e1] + OrderedCollections v1.1.0
  [1fd47b50] + QuadGK v2.3.1
  [1986cc42] + Unitful v0.18.0
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Building Cuba → `~/.julia/packages/Cuba/084zH/deps/build.log`
ERROR: Could not parse compatibility version for dependency `QuadGK`
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] read_project_compat(::Dict{String,Any}, ::Pkg.Types.Project) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:66
 [3] Pkg.Types.Project(::Dict{String,Any}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:121
 [4] read_project(::IOStream; path::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:140
 [5] #30 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:144 [inlined]
 [6] open(::Pkg.Types.var"#30#31"{String}, ::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./io.jl:298
 [7] open at ./io.jl:296 [inlined]
 [8] read_project(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:143
 [9] Pkg.Types.EnvCache(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:279
 [10] gen_target_project(::Pkg.Types.Context, ::Pkg.Types.PackageSpec, ::String, ::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1427
 [11] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1483
 [12] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [13] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [14] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [15] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [16] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [17] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [18] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [19] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [20] top-level scope at none:13
caused by [exception 1]
invalid version specifier: ^ 2.3.1
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] semver_spec(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:270
 [3] read_project_compat(::Dict{String,Any}, ::Pkg.Types.Project) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:64
 [4] Pkg.Types.Project(::Dict{String,Any}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:121
 [5] read_project(::IOStream; path::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:140
 [6] #30 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:144 [inlined]
 [7] open(::Pkg.Types.var"#30#31"{String}, ::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./io.jl:298
 [8] open at ./io.jl:296 [inlined]
 [9] read_project(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:143
 [10] Pkg.Types.EnvCache(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:279
 [11] gen_target_project(::Pkg.Types.Context, ::Pkg.Types.PackageSpec, ::String, ::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1427
 [12] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1483
 [13] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [14] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [15] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [16] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [17] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [18] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [19] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [20] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [21] top-level scope at none:13
