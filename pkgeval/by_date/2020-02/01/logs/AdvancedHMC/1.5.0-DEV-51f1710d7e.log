Julia Version 1.5.0-DEV.212
Commit 51f1710d7e (2020-01-31 07:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed InplaceOps ───────── v0.3.0
  Installed Missings ─────────── v0.4.3
  Installed DataAPI ──────────── v1.1.0
  Installed Rmath ────────────── v0.6.0
  Installed AdvancedHMC ──────── v0.2.20
  Installed SpecialFunctions ─── v0.9.0
  Installed LazyArrays ───────── v0.14.11
  Installed StatsBase ────────── v0.32.0
  Installed SortingAlgorithms ── v0.3.1
  Installed ProgressMeter ────── v1.2.0
  Installed FillArrays ───────── v0.8.4
  Installed OrderedCollections ─ v1.1.0
  Installed ArrayLayouts ─────── v0.1.5
  Installed MacroTools ───────── v0.5.3
  Installed BinaryProvider ───── v0.5.8
  Installed StaticArrays ─────── v0.12.1
  Installed ArgCheck ─────────── v1.0.1
  Installed Parameters ───────── v0.12.0
  Installed StatsFuns ────────── v0.9.3
  Installed DataStructures ───── v0.17.9
  Installed Requires ─────────── v1.0.0
  Installed OpenSpecFun_jll ──── v0.5.3+1
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         #                                                                          2.5%#####                                                                      7.2%##########                                                                14.3%################                                                          22.3%#####################                                                     30.2%###########################                                               37.6%##################################                                        47.4%###############################################                           65.4%###############################################################           88.1%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ##                                                                         3.6%##########################                                                37.3%#################################################################         91.3%######################################################################## 100.0%
#=#=#                                                                         ##################                                                        25.3%######################################################################## 100.0%
Status `/tmp/jl_35x4ZR/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.1.0
  [79e6a3ab] Adapt v1.0.0
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.3.1
  [4c555306] ArrayLayouts v0.1.5
  [13072b0f] AxisAlgorithms v1.0.0
  [39de3d68] AxisArrays v0.4.1
  [6e4b80f9] BenchmarkTools v0.4.3
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.13.1
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.2.0
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.1.1
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.1.0
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.8
  [8197267c] IntervalSets v0.3.2
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5ab0869b] KernelDensity v0.5.1
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.1
  [c7f686f2] MCMCChains v1.0.2
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.3
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v1.0.2
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [429524aa] Optim v0.20.1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.3
  [85a6dd25] PositiveFactorizations v0.2.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [c84ed2f1] Ratios v0.3.1
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v2.0.4
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.0
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [992d4aef] Showoff v0.3.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.9
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [efce3f68] WoodburyMatrices v0.5.0
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.163891864
│   t_steps = 0.006342526
└   t_step / t_steps = 25.840156429788383
Sampling  0%|                               |  ETA: 5:37:52[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.0006899946695188166
  log_density:                   -10.946421770073922
  hamiltonian_energy:            15.883896034622605
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  7.278826685737858
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▎                           |  ETA: 0:00:23[K
  iterations:                    1248
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9761216617542484
  log_density:                   -13.130627910225574
  hamiltonian_energy:            14.907099913639145
  hamiltonian_energy_error:      0.0743303204344663
  max_hamiltonian_energy_error:  -0.23933125873582206
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9576554085353884
  nom_step_size:                 0.9576554085353884
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9426213346284998, 1.0715 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▉                           |  ETA: 0:00:19[K
  iterations:                    1489
  n_steps:                       135
  is_accept:                     true
  acceptance_rate:               0.9888382114657303
  log_density:                   -12.11822474876496
  hamiltonian_energy:            16.883106845473442
  hamiltonian_energy_error:      -0.36293833521456875
  max_hamiltonian_energy_error:  -0.5726944751410379
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.7915610413366142
  nom_step_size:                 0.7915610413366142
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9426213346284998, 1.0715 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▌                          |  ETA: 0:00:17[K
  iterations:                    1725
  n_steps:                       27
  is_accept:                     true
  acceptance_rate:               0.906272703325112
  log_density:                   -15.237416335140043
  hamiltonian_energy:            20.403591380800847
  hamiltonian_energy_error:      0.056796306822903375
  max_hamiltonian_energy_error:  0.34910679684087853
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8787477844230507
  nom_step_size:                 0.8787477844230507
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9426213346284998, 1.0715 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▎                         |  ETA: 0:00:14[K
  iterations:                    2044
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6851071851137885
  log_density:                   -14.18355258379086
  hamiltonian_energy:            18.328306752859994
  hamiltonian_energy_error:      0.33809706155076924
  max_hamiltonian_energy_error:  0.7218659365503548
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▍                        |  ETA: 0:00:12[K
  iterations:                    2449
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8658868580554966
  log_density:                   -17.773696421882562
  hamiltonian_energy:            24.927867584299204
  hamiltonian_energy_error:      -0.14501807370155362
  max_hamiltonian_energy_error:  -0.8559836283938864
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▍                       |  ETA: 0:00:10[K
  iterations:                    2859
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8544884905837957
  log_density:                   -12.291288852266469
  hamiltonian_energy:            17.697026099016554
  hamiltonian_energy_error:      -0.0670425005645292
  max_hamiltonian_energy_error:  0.36298578216306865
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▌                      |  ETA: 0:00:09[K
  iterations:                    3297
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9171869103629396
  log_density:                   -18.667116974704527
  hamiltonian_energy:            21.72759988877805
  hamiltonian_energy_error:      0.314418848484177
  max_hamiltonian_energy_error:  -0.5209540652956655
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|█████████▊                     |  ETA: 0:00:07[K
  iterations:                    3781
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9531221811604912
  log_density:                   -13.65971938554144
  hamiltonian_energy:            20.053983990304083
  hamiltonian_energy_error:      -0.17831821427514427
  max_hamiltonian_energy_error:  -0.17831821427514427
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▉                    |  ETA: 0:00:06[K
  iterations:                    4201
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9321138542166759
  log_density:                   -15.355431379247099
  hamiltonian_energy:            18.71078756360617
  hamiltonian_energy_error:      0.17601606625141386
  max_hamiltonian_energy_error:  0.17601606625141386
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▉                   |  ETA: 0:00:06[K
  iterations:                    4614
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.535375858165974
  hamiltonian_energy:            18.740412453122293
  hamiltonian_energy_error:      -0.29078877201173725
  max_hamiltonian_energy_error:  -0.2973934511013816
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████                  |  ETA: 0:00:05[K
  iterations:                    5033
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.74941298241167
  hamiltonian_energy:            18.395861645306077
  hamiltonian_energy_error:      -0.20124132723140775
  max_hamiltonian_energy_error:  -0.28296917335640615
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 46%|██████████████▎                |  ETA: 0:00:04[K
  iterations:                    5507
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9958532789819602
  log_density:                   -12.712698125848725
  hamiltonian_energy:            17.018770528914555
  hamiltonian_energy_error:      -0.1457687443735054
  max_hamiltonian_energy_error:  -0.1457687443735054
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▍               |  ETA: 0:00:04[K
  iterations:                    5950
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9547309751582785
  log_density:                   -12.35570319178141
  hamiltonian_energy:            16.34164093402902
  hamiltonian_energy_error:      -0.14174308929539237
  max_hamiltonian_energy_error:  -0.26998539193422033
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▌              |  ETA: 0:00:03[K
  iterations:                    6386
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.288285311347328
  hamiltonian_energy:            18.060211630354523
  hamiltonian_energy_error:      -0.21432077480290346
  max_hamiltonian_energy_error:  -0.2521874381741398
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▌             |  ETA: 0:00:03[K
  iterations:                    6780
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9116673186412666
  log_density:                   -15.962735479477182
  hamiltonian_energy:            20.232751737945865
  hamiltonian_energy_error:      0.1786024764923937
  max_hamiltonian_energy_error:  0.19751105985796258
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▊            |  ETA: 0:00:03[K
  iterations:                    7244
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9556928360444582
  log_density:                   -13.871064978325713
  hamiltonian_energy:            20.195419452271175
  hamiltonian_energy_error:      -0.18495620303481175
  max_hamiltonian_energy_error:  -0.18495620303481175
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|███████████████████▊           |  ETA: 0:00:02[K
  iterations:                    7669
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8472894742030356
  log_density:                   -16.416665229751736
  hamiltonian_energy:            21.376709679770496
  hamiltonian_energy_error:      0.2535202107049628
  max_hamiltonian_energy_error:  0.32391471250721793
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▉          |  ETA: 0:00:02[K
  iterations:                    8079
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7824153726124727
  log_density:                   -17.028131896257477
  hamiltonian_energy:            20.149500904500993
  hamiltonian_energy_error:      0.48142713010623694
  max_hamiltonian_energy_error:  0.48142713010623694
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████         |  ETA: 0:00:02[K
  iterations:                    8506
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.992237108926137
  log_density:                   -12.465980772623412
  hamiltonian_energy:            17.242393752538444
  hamiltonian_energy_error:      -0.25363737834665656
  max_hamiltonian_energy_error:  -0.25922407334610753
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▏       |  ETA: 0:00:02[K
  iterations:                    8969
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9882259903136067
  log_density:                   -12.219442014480796
  hamiltonian_energy:            19.436971421737557
  hamiltonian_energy_error:      -0.6447882078445808
  max_hamiltonian_energy_error:  -0.6447882078445808
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▍      |  ETA: 0:00:01[K
  iterations:                    9453
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8229178758589372
  log_density:                   -10.9605293673784
  hamiltonian_energy:            14.388549237712608
  hamiltonian_energy_error:      0.04356288169636535
  max_hamiltonian_energy_error:  0.357660017931817
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▌     |  ETA: 0:00:01[K
  iterations:                    9865
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.962874769910476
  log_density:                   -16.826844989866874
  hamiltonian_energy:            19.333065896074263
  hamiltonian_energy_error:      0.20018655138950336
  max_hamiltonian_energy_error:  -0.39373783836454024
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▌    |  ETA: 0:00:01[K
  iterations:                    10280
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8049826156045831
  log_density:                   -13.202521871987415
  hamiltonian_energy:            18.669926239884084
  hamiltonian_energy_error:      0.030863672895730332
  max_hamiltonian_energy_error:  0.41299490271499906
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▋   |  ETA: 0:00:01[K
  iterations:                    10679
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9684672662472789
  log_density:                   -13.220604040002213
  hamiltonian_energy:            17.79456961233919
  hamiltonian_energy_error:      -0.08605350858143623
  max_hamiltonian_energy_error:  -0.14192370960947898
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|████████████████████████████▊  |  ETA: 0:00:00[K
  iterations:                    11147
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9961412470510782
  log_density:                   -13.39307261324933
  hamiltonian_energy:            16.879044598725404
  hamiltonian_energy_error:      -0.15410033715452798
  max_hamiltonian_energy_error:  -0.3551912413501057
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▉ |  ETA: 0:00:00[K
  iterations:                    11562
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9740652393990726
  log_density:                   -13.15530399218153
  hamiltonian_energy:            18.217079571284465
  hamiltonian_energy_error:      -0.13096848582218712
  max_hamiltonian_energy_error:  -0.1605800501400978
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████|  ETA: 0:00:00[K
  iterations:                    11976
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8773693747669681
  log_density:                   -12.828215368297966
  hamiltonian_energy:            16.900627526037855
  hamiltonian_energy_error:      0.06881876666952635
  max_hamiltonian_energy_error:  0.2708380410659288
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.502064703309678
  hamiltonian_energy:            18.44495455212201
  hamiltonian_energy_error:      -0.5000836015144223
  max_hamiltonian_energy_error:  -0.5551126636327659
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7151399743538793
  nom_step_size:                 0.7151399743538793
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0218578927544246, 1.0572 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.321092333 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0218578927544246, 1.0572 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.715), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0782605776899068
└   average_acceptance_rate = 0.8664750784900004
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.98810403 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠱⡀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠒⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⢠⠃⠀⠱│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠱⡀⡜⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⢀⠤⠒⠣⡀⡸⠀⠀⠘⠃⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠑⢄⡠⠊⠀⠀⠀⠘⠃⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡆⠀⠀⢀⡀⡰⠃⠀⠀⠀⠀⠀⠀⡠⠤⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡸⡀⢀⠎⡝⢄⣀⣀⣀⠤⠒⠤⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⣵⣎⠜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
