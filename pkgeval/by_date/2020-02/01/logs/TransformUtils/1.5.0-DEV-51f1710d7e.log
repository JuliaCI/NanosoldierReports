Julia Version 1.5.0-DEV.212
Commit 51f1710d7e (2020-01-31 07:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_ZV9TI6/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.16526361538304912 0.09490470806378376; -0.16526361538304912 0.0 0.06888910920920864; -0.09490470806378376 -0.06888910920920864 0.0])
dAA = so3([0.0 -0.03152065962971981 -0.09063658322758007; 0.03152065962971981 0.0 -0.0853243051320649; 0.09063658322758007 0.0853243051320649 0.0])
dAA = so3([0.0 0.01053870878520494 -0.16877424272570823; -0.01053870878520494 0.0 0.057608376242670026; 0.16877424272570823 -0.057608376242670026 0.0])
dAA = Quaternion(0.9930258940839864, [-0.10330380808816512, -0.002356084238999465, 0.05676570954583122])
dAA = SO3([0.9971061121064863 0.071121816856552 0.026853088591635054; -0.0725584906355059 0.9957353526443237 0.056976950874730474; -0.022686265373223654 -0.058760485543495326 0.9980142978445289])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.971469589782485 -0.10141548824946152 -0.2143868812940139; 0.053494759442405934 0.9743656933011569 -0.21851729091757224; 0.2310522599760699 0.2008143283256429 0.9519918375170406]), [-0.6888910920920864, 0.9490470806378375, -1.652636153830491])
xj = SE3(SO3([0.9607662249387539 -0.2719222797759145 -0.054649197417757714; 0.26306809375203194 0.8309661792151898 0.49019423400340106; -0.08788309886780218 -0.4853385238799598 0.8698983148457144]), [-0.5760837624267002, -1.6877424272570822, -0.1053870878520494])
Dx = SE3(SO3([0.9271223462032492 -0.3318504525206485 0.17412476082517245; 0.14123976428804294 0.73977913840669 0.6578587655128674; -0.3471245945686372 -0.5853222219770035 0.7327362501647253]), [0.3260298632895735, -2.2699278654284445, 2.02496816980835])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
