Julia Version 1.5.0-DEV.221
Commit fbc2c0aec1 (2020-02-01 18:55 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_oFIkfY/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.06298581099001459 0.101575465379828; 0.06298581099001459 0.0 0.06291932131525926; -0.101575465379828 -0.06291932131525926 0.0])
dAA = so3([0.0 0.1219881056610449 0.04704297599009358; -0.1219881056610449 0.0 0.04957819908652699; -0.04704297599009358 -0.04957819908652699 0.0])
dAA = so3([0.0 -0.03470265952187776 -0.014438447625565693; 0.03470265952187776 0.0 -0.11053852794225233; 0.014438447625565693 0.11053852794225233 0.0])
dAA = Quaternion(0.9941666238440997, [0.09331451325614298, 0.04381410623105327, 0.03170882756217356])
dAA = SO3([0.999493261314509 0.031016612228786964 0.007154743373154707; -0.03105147425598501 0.9995061935424153 0.004814043714163118; -0.007001894987540055 -0.005033769581639199 0.9999628166238895])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9471225921847616 0.29158229700047683 0.13393490750787665; -0.3060113704226205 0.9463648675442637 0.10368499722716823; -0.09651858134725907 -0.13918800793837768 0.9855510447972031]), [-0.6291932131525926, 1.01575465379828, 0.6298581099001459])
xj = SE3(SO3([0.9642690514589434 -0.12292780023920591 0.23467840191807082; 0.2171184098475937 0.874281445141248 -0.4341561364152109; -0.15180511356249507 0.46959632729620104 0.8697324283285044]), [1.1053852794225232, -0.14438447625565692, 0.3470265952187776])
Dx = SE3(SO3([0.8614923156422051 -0.4292925312933823 0.27118059050225557; 0.5077664714793318 0.7261834963370046 -0.46349837118289056; 0.002049519665801386 0.5369966966597505 0.84358185568779]), [2.0251727398617345, -0.552775777843041, -0.16671330731036965])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
