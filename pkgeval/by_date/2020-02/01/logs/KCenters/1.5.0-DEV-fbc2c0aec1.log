Julia Version 1.5.0-DEV.221
Commit fbc2c0aec1 (2020-02-01 18:55 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed MappedArrays ──────────────── v0.2.2
  Installed LearnBase ─────────────────── v0.2.2
  Installed KCenters ──────────────────── v0.1.9
  Installed Parsers ───────────────────── v0.3.11
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed TableTraits ───────────────── v1.0.0
  Installed StatsBase ─────────────────── v0.32.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed DataAPI ───────────────────── v1.1.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Tables ────────────────────── v0.2.11
  Installed Missings ──────────────────── v0.4.3
  Installed OrderedCollections ────────── v1.1.0
  Installed Compat ────────────────────── v3.2.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed DataStructures ────────────── v0.17.9
  Installed JSON ──────────────────────── v0.21.0
  Installed SimilaritySearch ──────────── v0.3.17
  Installed Reexport ──────────────────── v0.2.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed MLDataUtils ───────────────── v0.5.0
  Installed MLDataPattern ─────────────── v0.5.0
  Installed DataFrames ────────────────── v0.20.0
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_pxb6bZ/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 131.3300000000001
[ Info: 82.48000000000006
[ Info: 43.29
[ Info: 26.69
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999835129265
[ Info: 76.88000120685982
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.911017061715942
inertia(cdnet.distances) = 22.269210461297774
inertia(crand.distances) = 21.35691448146879
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.7024531024531031,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.6171875,"distances_sum":1568.0508017484349}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5556640625,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5556640625,"f1":0.7024531024531031,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.6171875,"distances_sum":1568.0508017484349}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9473099816849821,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.8984375,"distances_sum":2939.082557745792}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9473099816849821,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.8984375,"distances_sum":2939.082557745792}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9473099816849821,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.8984375,"distances_sum":2939.082557745792}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9473099816849821,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.8984375,"distances_sum":2939.082557745792}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7084578615828622,"seconds":4.390254616737366e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.0234375,"distances_sum":1464.9684212584787}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5703125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5703125,"f1":0.7084578615828622,"seconds":4.390254616737366e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.0234375,"distances_sum":1464.9684212584787}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5703125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5703125,"f1":0.7084578615828622,"seconds":4.390254616737366e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.0234375,"distances_sum":1464.9684212584787}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.5703125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5703125,"f1":0.7084578615828622,"seconds":4.390254616737366e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.0234375,"distances_sum":1464.9684212584787}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7877709096459105,"seconds":4.7292560338974e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.6953125,"distances_sum":1824.2911950513264}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.16796875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.16796875,"f1":null,"seconds":3.427267074584961e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.4921875,"distances_sum":457.09416441677496}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1865234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1865234375,"f1":null,"seconds":3.4403055906295776e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.828125,"distances_sum":531.0640326278537}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.7877709096459105,"seconds":4.7292560338974e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.6953125,"distances_sum":1824.2911950513264}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9130759865134873,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.640625,"distances_sum":2484.8747389056143}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.91888215950716,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.703125,"distances_sum":2511.178128116551}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9248256951381957,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.71875,"distances_sum":2574.4729169939574}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9248256951381957,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.71875,"distances_sum":2574.4729169939574}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9534283424908429,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7890625,"distances_sum":2777.409833907614}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687328296703298,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.921875,"distances_sum":2879.8150168634256}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9528159340659348,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.78125,"distances_sum":2771.8001249123918}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9582818223443228,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8203125,"distances_sum":2802.116250481805}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687328296703298,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.921875,"distances_sum":2879.8150168634256}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687328296703298,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.921875,"distances_sum":2879.8150168634256}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5361328125,"f1":0.679871170496171,"seconds":4.092231392860413e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.078125,"distances_sum":1469.8591676772855}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1728515625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1728515625,"f1":null,"seconds":3.0007213354110718e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.5078125,"distances_sum":508.1428107116796}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.19921875,"f1":null,"seconds":2.985820174217224e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.8671875,"distances_sum":610.6430982275942}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5361328125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5361328125,"f1":0.679871170496171,"seconds":4.092231392860413e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.078125,"distances_sum":1469.8591676772855}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8953187437562447,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.53125,"distances_sum":2398.520484932495}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.692176226551227,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.953125,"distances_sum":1533.6442233304479}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8692172410922419,"seconds":7.988885045051575e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.125,"distances_sum":2260.7830590040094}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8715688825063832,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.0703125,"distances_sum":2321.295660210197}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.82421875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.82421875,"f1":0.8953187437562447,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.53125,"distances_sum":2398.520484932495}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9250915750915757,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.609375,"distances_sum":2719.3356599641284}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9178519397269408,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6484375,"distances_sum":2582.4696666136624}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9180631868131875,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.5703125,"distances_sum":2600.0680855121745}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9324519230769236,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.796875,"distances_sum":2715.0764871270103}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9022612803862812,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.453125,"distances_sum":2478.2721688966108}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9324519230769236,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.796875,"distances_sum":2715.0764871270103}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8828125,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9324519230769236,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.796875,"distances_sum":2715.0764871270103}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3544921875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3544921875,"f1":null,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":5.59375,"distances_sum":936.4036767940553}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8714181651681658,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.2421875,"distances_sum":2191.732108665475}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8714181651681658,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.2421875,"distances_sum":2191.732108665475}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.898254870129871,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.3671875,"distances_sum":2386.916133746028}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9548019688644691,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.765625,"distances_sum":2790.030558365374}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9548019688644691,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.765625,"distances_sum":2790.030558365374}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725847069597073,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.875,"distances_sum":2941.4741061988475}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725847069597073,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.875,"distances_sum":2941.4741061988475}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725847069597073,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.875,"distances_sum":2941.4741061988475}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8823473401598411,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.4765625,"distances_sum":2277.5308037297677}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.142578125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.142578125,"f1":null,"seconds":3.0100345611572266e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":4.8046875,"distances_sum":432.69777519301334}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.887936022311023,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.46875,"distances_sum":2350.961732505085}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.81640625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.81640625,"f1":0.887936022311023,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.46875,"distances_sum":2350.961732505085}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9450206043956053,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7265625,"distances_sum":2752.3171671812906}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9537889194139199,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.765625,"distances_sum":2811.054450851}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9569597069597076,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8203125,"distances_sum":2830.732829798328}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9228384462759467,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.6796875,"distances_sum":2585.78479837292}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9569597069597076,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8203125,"distances_sum":2830.732829798328}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.970703125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.970703125,"f1":0.9839858058608061,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9296875,"distances_sum":3047.2025587451667}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9638621794871798,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9140625,"distances_sum":2846.5062401347127}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658138736263739,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8125,"distances_sum":2927.0299456879325}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.970703125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9839858058608061,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9296875,"distances_sum":3047.2025587451667}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.970703125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9839858058608061,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9296875,"distances_sum":3047.2025587451667}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7333984375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7333984375,"f1":0.8326579670329678,"seconds":4.889443516731262e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.59375,"distances_sum":2272.01657898649}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7901124916749924,"seconds":4.643574357032776e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.5078125,"distances_sum":2006.2252697073022}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7333984375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7333984375,"f1":0.8326579670329678,"seconds":4.889443516731262e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.59375,"distances_sum":2272.01657898649}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8456111596736605,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.6640625,"distances_sum":2281.713655879453}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9066626082251088,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.3828125,"distances_sum":2702.6304049081887}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9539694680319686,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.828125,"distances_sum":3150.331193451782}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9013543747918755,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.3515625,"distances_sum":2701.1261333806056}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9505437271062276,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.78125,"distances_sum":3128.9820229902725}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8688478188478199,"seconds":4.881992936134338e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.8125,"distances_sum":2467.739907134976}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9539694680319686,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.828125,"distances_sum":3150.331193451782}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9711538461538465,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.859375,"distances_sum":3315.865096661979}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964623397435898,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.859375,"distances_sum":3259.6503843088603}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964623397435898,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8515625,"distances_sum":3269.0871755622356}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9736435439560442,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":3323.643704316636}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9639194139194145,"seconds":6.0908496379852295e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8203125,"distances_sum":3267.9701701797408}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9736435439560442,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":3323.643704316636}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9736435439560442,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":3323.643704316636}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.259765625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.259765625,"f1":null,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":5.9453125,"distances_sum":694.4287330553315}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.868870192307693,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":8.125,"distances_sum":2169.2550291341763}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.868870192307693,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":8.125,"distances_sum":2169.2550291341763}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9098557692307699,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":8.2421875,"distances_sum":2466.867175002656}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.84375,"f1":0.9098557692307699,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":8.2421875,"distances_sum":2466.867175002656}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9393830128205135,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":8.515625,"distances_sum":2693.447561031045}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9527644230769232,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":8.765625,"distances_sum":2802.705157892304}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9527644230769232,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":8.765625,"distances_sum":2802.705157892304}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9527644230769232,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":8.765625,"distances_sum":2802.705157892304}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8408131798756808,"seconds":4.829838871955872e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.9921875,"distances_sum":2116.9704670126625}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7412109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.8408131798756808,"seconds":4.829838871955872e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.9921875,"distances_sum":2116.9704670126625}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9482975357975363,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6875,"distances_sum":2809.120187515384}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9482975357975363,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6875,"distances_sum":2809.120187515384}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9782738095238097,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9453125,"distances_sum":2967.9228225913866}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.975354853479854,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.890625,"distances_sum":2993.157107859886}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9500400641025646,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.734375,"distances_sum":2779.522121155213}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9782738095238097,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9453125,"distances_sum":2967.9228225913866}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9782738095238097,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9453125,"distances_sum":2967.9228225913866}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.9921875,"distances_sum":883.2048405992907}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.39453125,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.39453125,"f1":null,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.9921875,"distances_sum":883.2048405992907}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9066423160173167,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.40625,"distances_sum":2328.82215667009}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.784711122211123,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.84375,"distances_sum":1656.0395291576835}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6904838217338223,"seconds":4.105269908905029e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.921875,"distances_sum":1351.8746869123725}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8573124791874799,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.2109375,"distances_sum":2014.9758007789835}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8388671875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8388671875,"f1":0.9066423160173167,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.40625,"distances_sum":2328.82215667009}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9139880952380961,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.453125,"distances_sum":2372.0647499442134}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9603651556776561,"seconds":6.6123902797698975e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8515625,"distances_sum":2746.874947442208}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.96559065934066,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8984375,"distances_sum":2774.9959704138273}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.951591117216118,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7734375,"distances_sum":2711.881014556812}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9497252747252752,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8359375,"distances_sum":2666.6356762540318}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9182234432234441,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.4765625,"distances_sum":2387.777451557068}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":10,"bsize":8},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.96559065934066,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8984375,"distances_sum":2774.9959704138273}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":10,"bsize":8},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.96559065934066,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8984375,"distances_sum":2774.9959704138273}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6240234375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6240234375,"f1":0.7564047064047071,"seconds":4.3977051973342896e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.4375,"distances_sum":1608.8433588832359}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.8373974983349991,"seconds":5.025416612625122e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.78125,"distances_sum":1973.1342116752796}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.732421875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.732421875,"f1":0.8373974983349991,"seconds":5.025416612625122e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.78125,"distances_sum":1973.1342116752796}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.8998459873459882,"seconds":5.159527063369751e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.296875,"distances_sum":2364.8396316014337}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9556833791208795,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8203125,"distances_sum":2756.067005830738}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9420100732600736,"seconds":6.252899765968323e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6875,"distances_sum":2649.2205052167274}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9558493589743595,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7578125,"distances_sum":2752.2589940344014}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9192281676656682,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.5859375,"distances_sum":2451.1266130610957}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9556833791208795,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8203125,"distances_sum":2756.067005830738}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9811011904761909,"seconds":6.455928087234497e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.953125,"distances_sum":2914.330921481094}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9818452380952385,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.96875,"distances_sum":2916.0241903068186}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9596211080586085,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.796875,"distances_sum":2758.0682762106558}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":10,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9745192307692311,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9296875,"distances_sum":2857.643391799876}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9695341117216121,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.921875,"distances_sum":2807.306277055775}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882786,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.875,"distances_sum":2783.3257952775984}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9774381868131872,"seconds":6.11133873462677e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.921875,"distances_sum":2881.606406826403}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9818452380952385,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.96875,"distances_sum":2916.0241903068186}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9818452380952385,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.96875,"distances_sum":2916.0241903068186}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":3.4961849451065063e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.8515625,"distances_sum":933.2837438942948}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.39453125,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.39453125,"f1":null,"seconds":3.4961849451065063e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.8515625,"distances_sum":933.2837438942948}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8002100330225337,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.8359375,"distances_sum":1738.474219425811}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8544476356976367,"seconds":4.9620866775512695e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1015625,"distances_sum":2006.9596439766617}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8544476356976367,"seconds":4.9620866775512695e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1015625,"distances_sum":2006.9596439766617}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9581501831501835,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8359375,"distances_sum":2739.42513158109}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.895916583416584,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.375,"distances_sum":2252.6890828118803}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8564112970362978,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.09375,"distances_sum":2024.455243350318}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9280995046620053,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6328125,"distances_sum":2479.900722844264}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9465716575091582,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.765625,"distances_sum":2626.4455071475213}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9581501831501835,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8359375,"distances_sum":2739.42513158109}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9581501831501835,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8359375,"distances_sum":2739.42513158109}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.6669921875,"f1":null,"seconds":4.760921001434326e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.3125,"distances_sum":1684.5703930016848}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":null,"recall":0.6669921875,"f1":null,"seconds":4.760921001434326e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.3125,"distances_sum":1684.5703930016848}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9455643315018318,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.71875,"distances_sum":2651.52676764824}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9455643315018318,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.71875,"distances_sum":2651.52676764824}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9578182234432241,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.828125,"distances_sum":2739.429932180227}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9740327380952385,"seconds":6.241723895072937e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2841.751471592613}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9740327380952385,"seconds":6.241723895072937e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2841.751471592613}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9740327380952385,"seconds":6.241723895072937e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2841.751471592613}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.815262862137863,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.7265625,"distances_sum":1768.0178530444816}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.267578125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.267578125,"f1":null,"seconds":2.7529895305633545e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":5.3125,"distances_sum":660.6289352367312}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69921875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.69921875,"f1":0.815262862137863,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.7265625,"distances_sum":1768.0178530444816}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8822151806526816,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.21875,"distances_sum":2208.0398076435813}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9244906135531145,"seconds":6.468966603279114e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.515625,"distances_sum":2577.2420036862686}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9244906135531145,"seconds":6.468966603279114e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.515625,"distances_sum":2577.2420036862686}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9695684523809528,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.890625,"distances_sum":2828.3814868163972}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9612580128205134,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.875,"distances_sum":2764.04364673449}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9651270604395608,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.8515625,"distances_sum":2825.960432859305}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9695684523809528,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.890625,"distances_sum":2828.3814868163972}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9695684523809528,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.890625,"distances_sum":2828.3814868163972}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.7219265109890116,"seconds":4.334375262260437e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.3203125,"distances_sum":1386.8142812531412}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2646484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2646484375,"f1":null,"seconds":3.904104232788086e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.4609375,"distances_sum":642.9109498102982}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44921875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.44921875,"f1":null,"seconds":4.153698682785034e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.2890625,"distances_sum":1024.9457698267893}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5859375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5859375,"f1":0.7219265109890116,"seconds":4.334375262260437e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.3203125,"distances_sum":1386.8142812531412}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7907379079254087,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.921875,"distances_sum":1642.7450999793866}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9218297327672336,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6484375,"distances_sum":2412.0545675609515}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8595930111555121,"seconds":6.2622129917144775e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.0703125,"distances_sum":1979.2420221271707}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.861531177156178,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.0625,"distances_sum":2001.4591296279223}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7945590867465875,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.84375,"distances_sum":1662.7995061852487}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.865234375,"f1":0.9218297327672336,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6484375,"distances_sum":2412.0545675609515}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9671016483516488,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2749.250242683589}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9564789377289378,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":2690.34430650443}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9408711080586089,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7578125,"distances_sum":2536.029548363332}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9489125457875464,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":2592.555036247079}, best_list's length: 16, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9349645146520152,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7265625,"distances_sum":2469.271969191452}, best_list's length: 17, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.951997481684982,"seconds":6.409361958503723e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":2648.1414598351876}, best_list's length: 18, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9671016483516488,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2749.250242683589}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9671016483516488,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2749.250242683589}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2587890625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2587890625,"f1":null,"seconds":3.46451997756958e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.671875,"distances_sum":631.0640619217502}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7112363331113338,"seconds":4.217028617858887e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.890625,"distances_sum":1355.5855425645286}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.375,"f1":null,"seconds":3.606081008911133e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.6328125,"distances_sum":825.8354465905545}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.572265625,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.572265625,"f1":0.7112363331113338,"seconds":4.217028617858887e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.890625,"distances_sum":1355.5855425645286}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9011935980685987,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.4375,"distances_sum":2262.109814304572}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8988527097902105,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.3125,"distances_sum":2233.437758490122}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9222813644688651,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.65625,"distances_sum":2409.3790799572953}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8419247419247428,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.0859375,"distances_sum":1901.3491384366473}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7871154886779894,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.78125,"distances_sum":1610.9457439627415}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8652904387279396,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.2421875,"distances_sum":2024.1854803797846}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8642578125,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.8642578125,"f1":0.9222813644688651,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.65625,"distances_sum":2409.3790799572953}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9550652472527481,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7734375,"distances_sum":2693.654132057328}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9222558691308699,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.5703125,"distances_sum":2461.4980007789204}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9531135531135537,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8359375,"distances_sum":2679.6165211297375}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9550652472527481,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7734375,"distances_sum":2693.654132057328}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9550652472527481,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7734375,"distances_sum":2693.654132057328}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.904104232788086e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.453125,"distances_sum":714.1706110684597}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8501181110556117,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.4453125,"distances_sum":1324.7787686711954}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8219070859695867,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.875,"distances_sum":1257.905332517074}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8501181110556117,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.4453125,"distances_sum":1324.7787686711954}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9632440476190481,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8515625,"distances_sum":1837.1184903734002}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.903958021145522,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.75,"distances_sum":1535.5539531810716}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9632440476190481,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8515625,"distances_sum":1837.1184903734002}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":13,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9686813186813191,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9453125,"distances_sum":1861.7257301179325}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9733459249084254,"seconds":6.4801424741744995e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.90625,"distances_sum":1874.9618369240115}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9733459249084254,"seconds":6.4801424741744995e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.90625,"distances_sum":1874.9618369240115}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9733459249084254,"seconds":6.4801424741744995e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.90625,"distances_sum":1874.9618369240115}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5498046875,"f1":0.6897470584970591,"seconds":4.449859261512756e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.953125,"distances_sum":1037.2711676178124}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8401312229437238,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.203125,"distances_sum":1408.9800845394416}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8401312229437238,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.203125,"distances_sum":1408.9800845394416}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8472194472194481,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.1796875,"distances_sum":1455.7788572223585}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9569597069597076,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.796875,"distances_sum":1938.6846372495042}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9232923326673336,"seconds":6.731599569320679e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.59375,"distances_sum":1762.374487668771}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9403133325008332,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.65625,"distances_sum":1869.2066195451123}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9569597069597076,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.796875,"distances_sum":1938.6846372495042}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9822573260073264,"seconds":6.6533684730529785e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.921875,"distances_sum":2074.0777951450123}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9674336080586083,"seconds":6.634742021560669e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8984375,"distances_sum":1983.877273435406}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.963358516483517,"seconds":6.571412086486816e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7890625,"distances_sum":1975.4517705563899}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9659455128205131,"seconds":6.681308150291443e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.859375,"distances_sum":1976.1459736296117}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9822573260073264,"seconds":6.6533684730529785e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.921875,"distances_sum":2074.0777951450123}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9822573260073264,"seconds":6.6533684730529785e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.921875,"distances_sum":2074.0777951450123}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5751953125,"f1":null,"seconds":4.211440682411194e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.421875,"distances_sum":1085.1308703730804}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.291015625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.291015625,"f1":null,"seconds":3.4030526876449585e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":6.4765625,"distances_sum":549.6314373734639}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5751953125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5751953125,"f1":null,"seconds":4.211440682411194e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.421875,"distances_sum":1085.1308703730804}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9328182234432242,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.75,"distances_sum":1795.5113895806014}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8056355103230112,"seconds":4.839152097702026e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.765625,"distances_sum":1293.7668748662563}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9176625457875464,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.6171875,"distances_sum":1725.316054947279}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7826912670662678,"seconds":7.780268788337708e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.7109375,"distances_sum":1218.3076995163754}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.858505556943058,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.234375,"distances_sum":1463.7688226476666}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9328182234432242,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.75,"distances_sum":1795.5113895806014}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9538576007326014,"seconds":6.5248459577560425e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.875,"distances_sum":1923.5385472244375}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9419731310356321,"seconds":6.405636668205261e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.8125,"distances_sum":1835.8641291975905}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9538576007326014,"seconds":6.5248459577560425e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.875,"distances_sum":1923.5385472244375}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9538576007326014,"seconds":6.5248459577560425e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.875,"distances_sum":1923.5385472244375}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7859675047175055,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.71875,"distances_sum":1290.1411280932423}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.7053921772671776,"seconds":4.600733518600464e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.09375,"distances_sum":1037.074276444943}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7859675047175055,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.71875,"distances_sum":1290.1411280932423}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8566912254412263,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.265625,"distances_sum":1472.5220234711937}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9578926282051288,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8125,"distances_sum":1970.1953946028639}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8082573676323683,"seconds":4.580244421958923e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.8984375,"distances_sum":1312.1948740067112}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9048337079587087,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.6015625,"distances_sum":1684.0203280900867}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7873210123210131,"seconds":4.59328293800354e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.796875,"distances_sum":1278.6745975160172}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9578926282051288,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8125,"distances_sum":1970.1953946028639}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.966666666666667,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.90625,"distances_sum":1991.9531390348473}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.966666666666667,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.90625,"distances_sum":1991.9531390348473}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.966666666666667,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.90625,"distances_sum":1991.9531390348473}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8126160298035305,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.78125,"distances_sum":1338.5935334046821}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7178618256743263,"seconds":4.824250936508179e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.3671875,"distances_sum":1080.7531925027902}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6953125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6953125,"f1":0.8126160298035305,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.78125,"distances_sum":1338.5935334046821}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9591346153846161,"seconds":9.085983037948608e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8515625,"distances_sum":1964.8061116170804}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8441079753579761,"seconds":8.40798020362854e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.21875,"distances_sum":1434.1963937579576}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9306891025641031,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.765625,"distances_sum":1816.1523061538483}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9591346153846161,"seconds":9.085983037948608e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8515625,"distances_sum":1964.8061116170804}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739983974358979,"seconds":6.837770342826843e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9453125,"distances_sum":2047.4804095711756}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9753376831501834,"seconds":6.744638085365295e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9375,"distances_sum":2073.2592957586103}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.975875686813187,"seconds":6.671994924545288e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.96875,"distances_sum":2062.001421225199}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9610748626373632,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8984375,"distances_sum":2000.2782350197451}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9614640567765572,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8671875,"distances_sum":1989.5194317963849}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9753376831501834,"seconds":6.744638085365295e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9375,"distances_sum":2073.2592957586103}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9753376831501834,"seconds":6.744638085365295e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9375,"distances_sum":2073.2592957586103}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.55078125,"f1":null,"seconds":4.276633262634277e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.1796875,"distances_sum":1016.0521530792125}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8184222027972037,"seconds":4.557892680168152e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.7109375,"distances_sum":1318.8986252795798}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.703125,"f1":0.8184222027972037,"seconds":4.557892680168152e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.7109375,"distances_sum":1318.8986252795798}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8457625707625716,"seconds":7.223337888717651e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.09375,"distances_sum":1457.083408423479}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9230800449550457,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.515625,"distances_sum":1829.0493122997098}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8318925865800874,"seconds":6.774440407752991e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.015625,"distances_sum":1409.9643600976588}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.9230800449550457,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.515625,"distances_sum":1829.0493122997098}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9241758241758249,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5703125,"distances_sum":1792.32033149548}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9459134615384622,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.71875,"distances_sum":1941.376540240363}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9479624542124547,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7734375,"distances_sum":1937.873116916335}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9429201007326011,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6875,"distances_sum":1930.3893111073746}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9526098901098906,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7578125,"distances_sum":1965.7386160255267}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9526098901098906,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7578125,"distances_sum":1965.7386160255267}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9526098901098906,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7578125,"distances_sum":1965.7386160255267}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.42578125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.42578125,"f1":null,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.375,"distances_sum":685.9199649378179}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44921875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.44921875,"f1":null,"seconds":3.868713974952698e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.5703125,"distances_sum":762.6319538604281}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.44921875,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.44921875,"f1":null,"seconds":3.868713974952698e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.5703125,"distances_sum":762.6319538604281}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7887055652680661,"seconds":4.692003130912781e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.703125,"distances_sum":1135.521385401712}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.462890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.462890625,"f1":null,"seconds":3.812834620475769e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.8203125,"distances_sum":776.4606625703086}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8965404387279394,"seconds":4.962459206581116e-5,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.65625,"distances_sum":1473.3328965972398}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.822265625,"state":{"ssize":8,"bsize":6},"perf":{"precision":1.0,"recall":0.822265625,"f1":0.8965404387279394,"seconds":4.962459206581116e-5,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.65625,"distances_sum":1473.3328965972398}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9410428113553119,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.75,"distances_sum":1717.0723571064298}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9646062271062277,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9140625,"distances_sum":1828.5607706182545}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9526098901098906,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8125,"distances_sum":1759.296977620726}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":12,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9499313186813194,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8125,"distances_sum":1752.6245354797857}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9404449716949724,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7734375,"distances_sum":1695.8616108505155}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9375457875457883,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.765625,"distances_sum":1691.308232902071}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9315195221445226,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.765625,"distances_sum":1658.6165638275977}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9646062271062277,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9140625,"distances_sum":1828.5607706182545}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9646062271062277,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9140625,"distances_sum":1828.5607706182545}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.275390625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.275390625,"f1":null,"seconds":3.0603259801864624e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.8125,"distances_sum":523.5623845877151}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2568359375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2568359375,"f1":null,"seconds":3.0193477869033813e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.5703125,"distances_sum":463.6445960020785}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.275390625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.275390625,"f1":null,"seconds":3.0603259801864624e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.8125,"distances_sum":523.5623845877151}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8091960123210132,"seconds":4.6584755182266235e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.859375,"distances_sum":1245.7627858095323}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.8091960123210132,"seconds":4.6584755182266235e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.859375,"distances_sum":1245.7627858095323}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8977824259074266,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6328125,"distances_sum":1575.0083790458418}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9301854395604402,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.671875,"distances_sum":1744.7715556961214}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9301854395604402,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.671875,"distances_sum":1744.7715556961214}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.87890625,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9301854395604402,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.671875,"distances_sum":1744.7715556961214}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.70513548951049,"seconds":4.239380359649658e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.328125,"distances_sum":1051.4168198540647}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.302734375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.302734375,"f1":null,"seconds":3.248453140258789e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.078125,"distances_sum":580.6702427341621}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2666015625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2666015625,"f1":null,"seconds":3.080815076828003e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.90625,"distances_sum":503.9658899419724}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5634765625,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5634765625,"f1":0.70513548951049,"seconds":4.239380359649658e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.328125,"distances_sum":1051.4168198540647}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8561043123543132,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.40625,"distances_sum":1457.1639308990434}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.8000900141525148,"seconds":4.602596163749695e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.9453125,"distances_sum":1255.8287236834958}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8046052905427914,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.109375,"distances_sum":1313.5206232428425}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":9,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8561043123543132,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.40625,"distances_sum":1457.1639308990434}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9640453296703302,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.921875,"distances_sum":1954.8075156637117}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9563701923076926,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8046875,"distances_sum":1952.357277060166}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8911666458541466,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.65625,"distances_sum":1570.3774616386777}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":11,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9640453296703302,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.921875,"distances_sum":1954.8075156637117}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":11,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9640453296703302,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.921875,"distances_sum":1954.8075156637117}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":4,"bsize":4}, perf: {"precision":null,"recall":0.6875,"f1":null,"seconds":4.693865776062012e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.9609375,"distances_sum":1307.2109139589559}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6875,"state":{"ssize":4,"bsize":4},"perf":{"precision":null,"recall":0.6875,"f1":null,"seconds":4.693865776062012e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.9609375,"distances_sum":1307.2109139589559}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8389345029970038,"seconds":3.7867575883865356e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3125,"distances_sum":1379.1371550147194}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8927286255411261,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6953125,"distances_sum":1579.9013869496932}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.818359375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.818359375,"f1":0.8927286255411261,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6953125,"distances_sum":1579.9013869496932}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8937073343323351,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6328125,"distances_sum":1598.9457508746614}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9394834332334339,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.75,"distances_sum":1825.4526191874604}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9312271062271068,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8515625,"distances_sum":1760.0689657545493}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9394834332334339,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.75,"distances_sum":1825.4526191874604}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.89453125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9394834332334339,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.75,"distances_sum":1825.4526191874604}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.854263965201466,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.4296875,"distances_sum":1391.4667368596063}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3759765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3759765625,"f1":null,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":5.765625,"distances_sum":699.563525706282}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.854263965201466,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.4296875,"distances_sum":1391.4667368596063}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9240988178488185,"seconds":6.455928087234497e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8046875,"distances_sum":1675.552792988647}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9240988178488185,"seconds":6.455928087234497e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8046875,"distances_sum":1675.552792988647}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9597673160173164,"seconds":6.405636668205261e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.84375,"distances_sum":1889.0153226169098}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9365785256410262,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.7734375,"distances_sum":1751.7922641665232}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9639365842490847,"seconds":6.465241312980652e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8984375,"distances_sum":1907.9317573017474}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9639365842490847,"seconds":6.465241312980652e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8984375,"distances_sum":1907.9317573017474}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9639365842490847,"seconds":6.465241312980652e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8984375,"distances_sum":1907.9317573017474}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.44921875,"f1":null,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.4921875,"distances_sum":874.4893683111729}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.44921875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.44921875,"f1":null,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.4921875,"distances_sum":874.4893683111729}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.8396513209013217,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.2421875,"distances_sum":1467.6178384718096}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.734375,"f1":0.8396513209013217,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.2421875,"distances_sum":1467.6178384718096}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.900133547008548,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.6796875,"distances_sum":1705.428926904484}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9659054487179489,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9140625,"distances_sum":2045.157428894483}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8627409049284058,"seconds":4.995614290237427e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.34375,"distances_sum":1531.5728762581916}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9051453754578763,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.765625,"distances_sum":1709.3437694490826}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659054487179489,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9140625,"distances_sum":2045.157428894483}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659054487179489,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9140625,"distances_sum":2045.157428894483}}, n: 9
inertia(cfft.distances) = 18.911016891605136
inertia(cdnet.distances) = 28.08319746319387
inertia(crand.distances) = 21.35192482517481
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9466666666666667
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9222222222222222
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8711111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8733333333333334
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8999999999999999
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9222222222222222
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9155555555555556
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8444444444444444
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 3, 2, 1, 2, 2, 3, 1, 3, 3, 1, 3, 2, 2, 3, 3, 2, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 2, 3, 1, 3, 2, 1, 3, 3, 2]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.38806667033210973] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38806667033210973, 0.19534129184447974] ***
*** starting iteration: 2; err: [Inf, 0.38806667033210973, 0.19534129184447974] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332] ***
*** starting iteration: 3; err: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425] ***
*** starting iteration: 4; err: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073] ***
*** starting iteration: 5; err: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655] ***
*** starting iteration: 6; err: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655, 0.16209971251282457] ***
*** finished computation of 12 references, err: [Inf, 0.38806667033210973, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655, 0.16209971251282457] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.7691711445894919] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7691711445894919, 0.5868334446012656] ***
*** starting iteration: 2; err: [Inf, 0.7691711445894919, 0.5868334446012656] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7691711445894919, 0.5868334446012656, 0.5795470347425031] ***
*** starting iteration: 3; err: [Inf, 0.7691711445894919, 0.5868334446012656, 0.5795470347425031] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7691711445894919, 0.5868334446012656, 0.5795470347425031, 0.5773525878087462] ***
*** finished computation of 3 references, err: [Inf, 0.7691711445894919, 0.5868334446012656, 0.5795470347425031, 0.5773525878087462] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 30]]
** centroid: 1, normalized-entropy: 0.9980008838722993, [(2, 27), (3, 30)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [23, 3, 0]]
** centroid: 2, normalized-entropy: 0.5159469300074472, [(1, 23), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35031601652248157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35031601652248157, 0.1852825988857001] ***
*** starting iteration: 2; err: [Inf, 0.35031601652248157, 0.1852825988857001] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35031601652248157, 0.1852825988857001, 0.1687466821858817] ***
*** starting iteration: 3; err: [Inf, 0.35031601652248157, 0.1852825988857001, 0.1687466821858817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35031601652248157, 0.1852825988857001, 0.1687466821858817, 0.16478965376278285] ***
*** starting iteration: 4; err: [Inf, 0.35031601652248157, 0.1852825988857001, 0.1687466821858817, 0.16478965376278285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35031601652248157, 0.1852825988857001, 0.1687466821858817, 0.16478965376278285, 0.1637007502428786] ***
*** starting iteration: 5; err: [Inf, 0.35031601652248157, 0.1852825988857001, 0.1687466821858817, 0.16478965376278285, 0.1637007502428786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35031601652248157, 0.1852825988857001, 0.1687466821858817, 0.16478965376278285, 0.1637007502428786, 0.16310478680050422] ***
*** finished computation of 7 references, err: [Inf, 0.35031601652248157, 0.1852825988857001, 0.1687466821858817, 0.16478965376278285, 0.1637007502428786, 0.16310478680050422] ***
*** center 1: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 8]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4459822527739874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4459822527739874, 0.19362625025292324] ***
*** starting iteration: 2; err: [Inf, 0.4459822527739874, 0.19362625025292324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4459822527739874, 0.19362625025292324, 0.16575108194919888] ***
*** starting iteration: 3; err: [Inf, 0.4459822527739874, 0.19362625025292324, 0.16575108194919888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4459822527739874, 0.19362625025292324, 0.16575108194919888, 0.1565717249219203] ***
*** starting iteration: 4; err: [Inf, 0.4459822527739874, 0.19362625025292324, 0.16575108194919888, 0.1565717249219203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4459822527739874, 0.19362625025292324, 0.16575108194919888, 0.1565717249219203, 0.15186387575635588] ***
*** starting iteration: 5; err: [Inf, 0.4459822527739874, 0.19362625025292324, 0.16575108194919888, 0.1565717249219203, 0.15186387575635588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4459822527739874, 0.19362625025292324, 0.16575108194919888, 0.1565717249219203, 0.15186387575635588, 0.15097096657738696] ***
*** finished computation of 7 references, err: [Inf, 0.4459822527739874, 0.19362625025292324, 0.16575108194919888, 0.1565717249219203, 0.15186387575635588, 0.15097096657738696] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 13]]
** centroid: 1, normalized-entropy: 0.9340680553754911, [(2, 7), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 4, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 7, 2]]
** centroid: 6, normalized-entropy: 0.7642045065086204, [(2, 7), (3, 2)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3483722151181689] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3483722151181689, 0.19217615124877185] ***
*** starting iteration: 2; err: [Inf, 0.3483722151181689, 0.19217615124877185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3483722151181689, 0.19217615124877185, 0.18099253031688456] ***
*** starting iteration: 3; err: [Inf, 0.3483722151181689, 0.19217615124877185, 0.18099253031688456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3483722151181689, 0.19217615124877185, 0.18099253031688456, 0.17824971487958488] ***
*** starting iteration: 4; err: [Inf, 0.3483722151181689, 0.19217615124877185, 0.18099253031688456, 0.17824971487958488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3483722151181689, 0.19217615124877185, 0.18099253031688456, 0.17824971487958488, 0.17780254448898972] ***
*** finished computation of 7 references, err: [Inf, 0.3483722151181689, 0.19217615124877185, 0.18099253031688456, 0.17824971487958488, 0.17780254448898972] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 18]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 7]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2050019946731751] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2050019946731751, 0.3672265268462904] ***
*** finished computation of 3 references, err: [Inf, 1.2050019946731751, 0.3672265268462904] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 16]]
** centroid: 3, normalized-entropy: 0.9043814577244941, [(2, 34), (3, 16)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0837270846779448] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0837270846779448, 0.37462056033904323] ***
*** finished computation of 3 references, err: [Inf, 1.0837270846779448, 0.37462056033904323] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 10]]
** centroid: 1, normalized-entropy: 0.7553754125614286, [(2, 36), (3, 10)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 3: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0535323518075588] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0535323518075588, 0.6538972818086317] ***
*** starting iteration: 2; err: [Inf, 1.0535323518075588, 0.6538972818086317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0535323518075588, 0.6538972818086317, 0.6427172196717573] ***
*** starting iteration: 3; err: [Inf, 1.0535323518075588, 0.6538972818086317, 0.6427172196717573] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0535323518075588, 0.6538972818086317, 0.6427172196717573, 0.6384241206770934] ***
*** finished computation of 3 references, err: [Inf, 1.0535323518075588, 0.6538972818086317, 0.6427172196717573, 0.6384241206770934] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 34]]
** centroid: 1, normalized-entropy: 1.0, [(2, 34), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.513034927345791] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.513034927345791, 0.5037352543965258] ***
*** starting iteration: 2; err: [Inf, 2.513034927345791, 0.5037352543965258] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.513034927345791, 0.5037352543965258, 0.3751897117054001] ***
*** starting iteration: 3; err: [Inf, 2.513034927345791, 0.5037352543965258, 0.3751897117054001] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.513034927345791, 0.5037352543965258, 0.3751897117054001, 0.372130533680872] ***
*** finished computation of 3 references, err: [Inf, 2.513034927345791, 0.5037352543965258, 0.3751897117054001, 0.372130533680872] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 6]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 30]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 3), (3, 30)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6742678890241462] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6742678890241462, 0.6043711551522104] ***
*** finished computation of 3 references, err: [Inf, 1.6742678890241462, 0.6043711551522104] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [23, 3, 0]]
** centroid: 2, normalized-entropy: 0.5159469300074472, [(1, 23), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 30]]
** centroid: 3, normalized-entropy: 0.9980008838722993, [(2, 27), (3, 30)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9094157516237273] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9094157516237273, 0.3861076185911266] ***
*** finished computation of 3 references, err: [Inf, 0.9094157516237273, 0.3861076185911266] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 19]]
** centroid: 1, normalized-entropy: 0.9414231081869789, [(2, 34), (3, 19)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3492441247591467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3492441247591467, 0.4577058335058257] ***
*** finished computation of 3 references, err: [Inf, 1.3492441247591467, 0.4577058335058257] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 35]]
** centroid: 3, normalized-entropy: 0.9117517586347538, [(2, 17), (3, 35)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7821000021573219] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7821000021573219, 0.398274645655838] ***
*** starting iteration: 2; err: [Inf, 0.7821000021573219, 0.398274645655838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7821000021573219, 0.398274645655838, 0.35396042898687496] ***
*** starting iteration: 3; err: [Inf, 0.7821000021573219, 0.398274645655838, 0.35396042898687496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7821000021573219, 0.398274645655838, 0.35396042898687496, 0.31862939362226217] ***
*** starting iteration: 4; err: [Inf, 0.7821000021573219, 0.398274645655838, 0.35396042898687496, 0.31862939362226217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7821000021573219, 0.398274645655838, 0.35396042898687496, 0.31862939362226217, 0.27416683530711483] ***
*** starting iteration: 5; err: [Inf, 0.7821000021573219, 0.398274645655838, 0.35396042898687496, 0.31862939362226217, 0.27416683530711483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7821000021573219, 0.398274645655838, 0.35396042898687496, 0.31862939362226217, 0.27416683530711483, 0.26380708694465377] ***
*** starting iteration: 6; err: [Inf, 0.7821000021573219, 0.398274645655838, 0.35396042898687496, 0.31862939362226217, 0.27416683530711483, 0.26380708694465377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7821000021573219, 0.398274645655838, 0.35396042898687496, 0.31862939362226217, 0.27416683530711483, 0.26380708694465377, 0.26311382687508006] ***
*** finished computation of 7 references, err: [Inf, 0.7821000021573219, 0.398274645655838, 0.35396042898687496, 0.31862939362226217, 0.27416683530711483, 0.26380708694465377, 0.26311382687508006] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 9]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.5601000023433693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5601000023433693, 0.5304491483039762] ***
*** starting iteration: 2; err: [Inf, 1.5601000023433693, 0.5304491483039762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592] ***
*** starting iteration: 3; err: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592, 0.29218332271055325] ***
*** starting iteration: 4; err: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592, 0.29218332271055325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592, 0.29218332271055325, 0.25873155026434336] ***
*** starting iteration: 5; err: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592, 0.29218332271055325, 0.25873155026434336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592, 0.29218332271055325, 0.25873155026434336, 0.238384207679092] ***
*** starting iteration: 6; err: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592, 0.29218332271055325, 0.25873155026434336, 0.238384207679092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592, 0.29218332271055325, 0.25873155026434336, 0.238384207679092, 0.23571851336697816] ***
*** starting iteration: 7; err: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592, 0.29218332271055325, 0.25873155026434336, 0.238384207679092, 0.23571851336697816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592, 0.29218332271055325, 0.25873155026434336, 0.238384207679092, 0.23571851336697816, 0.2311507915755174] ***
*** starting iteration: 8; err: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592, 0.29218332271055325, 0.25873155026434336, 0.238384207679092, 0.23571851336697816, 0.2311507915755174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592, 0.29218332271055325, 0.25873155026434336, 0.238384207679092, 0.23571851336697816, 0.2311507915755174, 0.22793488297201425] ***
*** starting iteration: 9; err: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592, 0.29218332271055325, 0.25873155026434336, 0.238384207679092, 0.23571851336697816, 0.2311507915755174, 0.22793488297201425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592, 0.29218332271055325, 0.25873155026434336, 0.238384207679092, 0.23571851336697816, 0.2311507915755174, 0.22793488297201425, 0.22793488297201425] ***
*** finished computation of 7 references, err: [Inf, 1.5601000023433693, 0.5304491483039762, 0.3915985269739592, 0.29218332271055325, 0.25873155026434336, 0.238384207679092, 0.23571851336697816, 0.2311507915755174, 0.22793488297201425, 0.22793488297201425] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 12]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(2, 14), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.9979999681457543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9979999681457543, 0.9559157077944411] ***
*** starting iteration: 2; err: [Inf, 2.9979999681457543, 0.9559157077944411] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9979999681457543, 0.9559157077944411, 0.4297894845016279] ***
*** starting iteration: 3; err: [Inf, 2.9979999681457543, 0.9559157077944411, 0.4297894845016279] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9979999681457543, 0.9559157077944411, 0.4297894845016279, 0.28233612939293184] ***
*** starting iteration: 4; err: [Inf, 2.9979999681457543, 0.9559157077944411, 0.4297894845016279, 0.28233612939293184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9979999681457543, 0.9559157077944411, 0.4297894845016279, 0.28233612939293184, 0.2529860463740917] ***
*** starting iteration: 5; err: [Inf, 2.9979999681457543, 0.9559157077944411, 0.4297894845016279, 0.28233612939293184, 0.2529860463740917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9979999681457543, 0.9559157077944411, 0.4297894845016279, 0.28233612939293184, 0.2529860463740917, 0.25162097111170534] ***
*** starting iteration: 6; err: [Inf, 2.9979999681457543, 0.9559157077944411, 0.4297894845016279, 0.28233612939293184, 0.2529860463740917, 0.25162097111170534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9979999681457543, 0.9559157077944411, 0.4297894845016279, 0.28233612939293184, 0.2529860463740917, 0.25162097111170534, 0.2511414561766144] ***
*** finished computation of 7 references, err: [Inf, 2.9979999681457543, 0.9559157077944411, 0.4297894845016279, 0.28233612939293184, 0.2529860463740917, 0.25162097111170534, 0.2511414561766144] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 8]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 11]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46360924536430886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46360924536430886, 0.31226052278094896] ***
*** starting iteration: 2; err: [Inf, 0.46360924536430886, 0.31226052278094896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639] ***
*** starting iteration: 3; err: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488] ***
*** starting iteration: 4; err: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488, 0.28300515870473003] ***
*** starting iteration: 5; err: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488, 0.28300515870473003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488, 0.28300515870473003, 0.225814578153658] ***
*** starting iteration: 6; err: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488, 0.28300515870473003, 0.225814578153658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488, 0.28300515870473003, 0.225814578153658, 0.21639718879807734] ***
*** starting iteration: 7; err: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488, 0.28300515870473003, 0.225814578153658, 0.21639718879807734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488, 0.28300515870473003, 0.225814578153658, 0.21639718879807734, 0.21328622524761426] ***
*** starting iteration: 8; err: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488, 0.28300515870473003, 0.225814578153658, 0.21639718879807734, 0.21328622524761426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488, 0.28300515870473003, 0.225814578153658, 0.21639718879807734, 0.21328622524761426, 0.2113320412601199] ***
*** starting iteration: 9; err: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488, 0.28300515870473003, 0.225814578153658, 0.21639718879807734, 0.21328622524761426, 0.2113320412601199] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488, 0.28300515870473003, 0.225814578153658, 0.21639718879807734, 0.21328622524761426, 0.2113320412601199, 0.20846541295236598] ***
*** starting iteration: 10; err: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488, 0.28300515870473003, 0.225814578153658, 0.21639718879807734, 0.21328622524761426, 0.2113320412601199, 0.20846541295236598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488, 0.28300515870473003, 0.225814578153658, 0.21639718879807734, 0.21328622524761426, 0.2113320412601199, 0.20846541295236598, 0.20745270678235134] ***
*** finished computation of 7 references, err: [Inf, 0.46360924536430886, 0.31226052278094896, 0.3001291535448639, 0.2937861376944488, 0.28300515870473003, 0.225814578153658, 0.21639718879807734, 0.21328622524761426, 0.2113320412601199, 0.20846541295236598, 0.20745270678235134] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 7]]
** centroid: 1, normalized-entropy: 0.8554508105601307, [(2, 18), (3, 7)]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25747993525614105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25747993525614105, 0.17028846142980786] ***
*** starting iteration: 2; err: [Inf, 0.25747993525614105, 0.17028846142980786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25747993525614105, 0.17028846142980786, 0.16282533024985946] ***
*** starting iteration: 3; err: [Inf, 0.25747993525614105, 0.17028846142980786, 0.16282533024985946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25747993525614105, 0.17028846142980786, 0.16282533024985946, 0.15447608053382947] ***
*** starting iteration: 4; err: [Inf, 0.25747993525614105, 0.17028846142980786, 0.16282533024985946, 0.15447608053382947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25747993525614105, 0.17028846142980786, 0.16282533024985946, 0.15447608053382947, 0.15210914301592726] ***
*** starting iteration: 5; err: [Inf, 0.25747993525614105, 0.17028846142980786, 0.16282533024985946, 0.15447608053382947, 0.15210914301592726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25747993525614105, 0.17028846142980786, 0.16282533024985946, 0.15447608053382947, 0.15210914301592726, 0.15015190034566436] ***
*** starting iteration: 6; err: [Inf, 0.25747993525614105, 0.17028846142980786, 0.16282533024985946, 0.15447608053382947, 0.15210914301592726, 0.15015190034566436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25747993525614105, 0.17028846142980786, 0.16282533024985946, 0.15447608053382947, 0.15210914301592726, 0.15015190034566436, 0.1494531360999173] ***
*** finished computation of 7 references, err: [Inf, 0.25747993525614105, 0.17028846142980786, 0.16282533024985946, 0.15447608053382947, 0.15210914301592726, 0.15015190034566436, 0.1494531360999173] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 11, 4]]
** centroid: 2, normalized-entropy: 0.8366407419411671, [(2, 11), (3, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 10]]
** centroid: 7, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3574899081913063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3574899081913063, 0.19055579239204168] ***
*** starting iteration: 2; err: [Inf, 0.3574899081913063, 0.19055579239204168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3574899081913063, 0.19055579239204168, 0.1872825660029704] ***
*** starting iteration: 3; err: [Inf, 0.3574899081913063, 0.19055579239204168, 0.1872825660029704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3574899081913063, 0.19055579239204168, 0.1872825660029704, 0.18319551236255013] ***
*** starting iteration: 4; err: [Inf, 0.3574899081913063, 0.19055579239204168, 0.1872825660029704, 0.18319551236255013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3574899081913063, 0.19055579239204168, 0.1872825660029704, 0.18319551236255013, 0.18263480367963666] ***
*** finished computation of 7 references, err: [Inf, 0.3574899081913063, 0.19055579239204168, 0.1872825660029704, 0.18319551236255013, 0.18263480367963666] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 16, 7]]
** centroid: 7, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.332199981912612] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.332199981912612, 0.8238168986477338] ***
*** finished computation of 3 references, err: [Inf, 2.332199981912612, 0.8238168986477338] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [40, 4, 0]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(1, 40), (2, 4)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 26, 23]]
** centroid: 2, normalized-entropy: 0.9972943816462351, [(2, 26), (3, 23)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8233999947988146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8233999947988146, 0.5183595509685996] ***
*** finished computation of 3 references, err: [Inf, 0.8233999947988146, 0.5183595509685996] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 16]]
** centroid: 1, normalized-entropy: 0.9043814577244941, [(2, 34), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.491599987707829] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.491599987707829, 1.101187785067326] ***
*** finished computation of 3 references, err: [Inf, 3.491599987707829, 1.101187785067326] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [28, 6, 0]]
** centroid: 1, normalized-entropy: 0.6722948170756378, [(1, 28), (2, 6)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 8]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 28]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7118000016185584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7118000016185584, 0.4421441559104767] ***
*** starting iteration: 2; err: [Inf, 0.7118000016185584, 0.4421441559104767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7118000016185584, 0.4421441559104767, 0.38910156070812063] ***
*** starting iteration: 3; err: [Inf, 0.7118000016185584, 0.4421441559104767, 0.38910156070812063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7118000016185584, 0.4421441559104767, 0.38910156070812063, 0.36764330601144235] ***
*** finished computation of 7 references, err: [Inf, 0.7118000016185584, 0.4421441559104767, 0.38910156070812063, 0.36764330601144235] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 3]]
** centroid: 1, normalized-entropy: 0.45868581620054033, [(2, 28), (3, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 21]]
** centroid: 2, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42470000563959087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42470000563959087, 0.2701115865507279] ***
*** starting iteration: 2; err: [Inf, 0.42470000563959087, 0.2701115865507279] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42470000563959087, 0.2701115865507279, 0.2543215089646223] ***
*** starting iteration: 3; err: [Inf, 0.42470000563959087, 0.2701115865507279, 0.2543215089646223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42470000563959087, 0.2701115865507279, 0.2543215089646223, 0.252587196963982] ***
*** finished computation of 7 references, err: [Inf, 0.42470000563959087, 0.2701115865507279, 0.2543215089646223, 0.252587196963982] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 12]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 4), (3, 12)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 5: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5700999984167028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5700999984167028, 0.34023980559241224] ***
*** starting iteration: 2; err: [Inf, 0.5700999984167028, 0.34023980559241224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5700999984167028, 0.34023980559241224, 0.2771997202064499] ***
*** starting iteration: 3; err: [Inf, 0.5700999984167028, 0.34023980559241224, 0.2771997202064499] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5700999984167028, 0.34023980559241224, 0.2771997202064499, 0.2635799905149677] ***
*** finished computation of 7 references, err: [Inf, 0.5700999984167028, 0.34023980559241224, 0.2771997202064499, 0.2635799905149677] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 6]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7937137383106875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7937137383106875, 0.40865422928547845] ***
*** finished computation of 3 references, err: [Inf, 0.7937137383106875, 0.40865422928547845] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 9]]
** centroid: 1, normalized-entropy: 0.7897492536625221, [(2, 29), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [40, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.5051059194459855] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5051059194459855, 0.5274805818011941] ***
*** finished computation of 3 references, err: [Inf, 2.5051059194459855, 0.5274805818011941] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 33]]
** centroid: 3, normalized-entropy: 0.9248187049730301, [(2, 17), (3, 33)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1035334471858782] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1035334471858782, 0.7104393432171104] ***
*** finished computation of 3 references, err: [Inf, 1.1035334471858782, 0.7104393432171104] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [15, 2, 0]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(1, 15), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 36]]
** centroid: 3, normalized-entropy: 0.9994110647387552, [(2, 34), (3, 36)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.46140000415510124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46140000415510124, 0.2828633860810234] ***
*** starting iteration: 2; err: [Inf, 0.46140000415510124, 0.2828633860810234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46140000415510124, 0.2828633860810234, 0.2657523676425216] ***
*** starting iteration: 3; err: [Inf, 0.46140000415510124, 0.2828633860810234, 0.2657523676425216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46140000415510124, 0.2828633860810234, 0.2657523676425216, 0.25942754749095015] ***
*** starting iteration: 4; err: [Inf, 0.46140000415510124, 0.2828633860810234, 0.2657523676425216, 0.25942754749095015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46140000415510124, 0.2828633860810234, 0.2657523676425216, 0.25942754749095015, 0.2587204790514134] ***
*** finished computation of 7 references, err: [Inf, 0.46140000415510124, 0.2828633860810234, 0.2657523676425216, 0.25942754749095015, 0.2587204790514134] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 6, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4551000016147023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4551000016147023, 0.34278911609735874] ***
*** starting iteration: 2; err: [Inf, 0.4551000016147023, 0.34278911609735874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4551000016147023, 0.34278911609735874, 0.2517459601374129] ***
*** starting iteration: 3; err: [Inf, 0.4551000016147023, 0.34278911609735874, 0.2517459601374129] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4551000016147023, 0.34278911609735874, 0.2517459601374129, 0.2302600668594167] ***
*** starting iteration: 4; err: [Inf, 0.4551000016147023, 0.34278911609735874, 0.2517459601374129, 0.2302600668594167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4551000016147023, 0.34278911609735874, 0.2517459601374129, 0.2302600668594167, 0.22920386087319627] ***
*** starting iteration: 5; err: [Inf, 0.4551000016147023, 0.34278911609735874, 0.2517459601374129, 0.2302600668594167, 0.22920386087319627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4551000016147023, 0.34278911609735874, 0.2517459601374129, 0.2302600668594167, 0.22920386087319627, 0.22920386087319627] ***
*** finished computation of 7 references, err: [Inf, 0.4551000016147023, 0.34278911609735874, 0.2517459601374129, 0.2302600668594167, 0.22920386087319627, 0.22920386087319627] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 2, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 11]]
** centroid: 6, normalized-entropy: 0.9895875212220558, [(2, 14), (3, 11)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4605000053810842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4605000053810842, 0.2491153888434527] ***
*** starting iteration: 2; err: [Inf, 0.4605000053810842, 0.2491153888434527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4605000053810842, 0.2491153888434527, 0.2344885458329238] ***
*** starting iteration: 3; err: [Inf, 0.4605000053810842, 0.2491153888434527, 0.2344885458329238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4605000053810842, 0.2491153888434527, 0.2344885458329238, 0.23248339515609473] ***
*** starting iteration: 4; err: [Inf, 0.4605000053810842, 0.2491153888434527, 0.2344885458329238, 0.23248339515609473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4605000053810842, 0.2491153888434527, 0.2344885458329238, 0.23248339515609473, 0.23217420813496922] ***
*** finished computation of 7 references, err: [Inf, 0.4605000053810842, 0.2491153888434527, 0.2344885458329238, 0.23248339515609473, 0.23217420813496922] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 6, 8]]
** centroid: 4, normalized-entropy: 0.9852281360342514, [(2, 6), (3, 8)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 5, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7095910388256712] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7095910388256712, 0.4463152663280583] ***
*** starting iteration: 2; err: [Inf, 0.7095910388256712, 0.4463152663280583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7095910388256712, 0.4463152663280583, 0.3937829319955231] ***
*** starting iteration: 3; err: [Inf, 0.7095910388256712, 0.4463152663280583, 0.3937829319955231] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7095910388256712, 0.4463152663280583, 0.3937829319955231, 0.3674672002072414] ***
*** finished computation of 3 references, err: [Inf, 0.7095910388256712, 0.4463152663280583, 0.3937829319955231, 0.3674672002072414] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 7]]
** centroid: 1, normalized-entropy: 0.710676853856123, [(2, 29), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 3, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1337586746736261] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1337586746736261, 0.3633703442795323] ***
*** starting iteration: 2; err: [Inf, 1.1337586746736261, 0.3633703442795323] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1337586746736261, 0.3633703442795323, 0.3615543223314795] ***
*** starting iteration: 3; err: [Inf, 1.1337586746736261, 0.3633703442795323, 0.3615543223314795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1337586746736261, 0.3633703442795323, 0.3615543223314795, 0.3614434725621908] ***
*** finished computation of 3 references, err: [Inf, 1.1337586746736261, 0.3633703442795323, 0.3615543223314795, 0.3614434725621908] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 13]]
** centroid: 1, normalized-entropy: 0.8507707040532602, [(2, 34), (3, 13)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7754892326433128] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7754892326433128, 0.3674061823503924] ***
*** starting iteration: 2; err: [Inf, 0.7754892326433128, 0.3674061823503924] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7754892326433128, 0.3674061823503924, 0.3669525672357959] ***
*** finished computation of 3 references, err: [Inf, 0.7754892326433128, 0.3674061823503924, 0.3669525672357959] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 9]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0691000086487417] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0691000086487417, 0.5519665954124559] ***
*** starting iteration: 2; err: [Inf, 1.0691000086487417, 0.5519665954124559] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0691000086487417, 0.5519665954124559, 0.5347108249294918] ***
*** starting iteration: 3; err: [Inf, 1.0691000086487417, 0.5519665954124559, 0.5347108249294918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0691000086487417, 0.5519665954124559, 0.5347108249294918, 0.532205834623923] ***
*** starting iteration: 4; err: [Inf, 1.0691000086487417, 0.5519665954124559, 0.5347108249294918, 0.532205834623923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0691000086487417, 0.5519665954124559, 0.5347108249294918, 0.532205834623923, 0.532205834623923] ***
*** finished computation of 3 references, err: [Inf, 1.0691000086487417, 0.5519665954124559, 0.5347108249294918, 0.532205834623923, 0.532205834623923] ***
*** center 1: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 7]]
** centroid: 3, normalized-entropy: 0.710676853856123, [(2, 29), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3509999979111773] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3509999979111773, 0.5183595509685996] ***
*** starting iteration: 2; err: [Inf, 1.3509999979111773, 0.5183595509685996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3509999979111773, 0.5183595509685996, 0.5128552036217041] ***
*** starting iteration: 3; err: [Inf, 1.3509999979111773, 0.5183595509685996, 0.5128552036217041] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3509999979111773, 0.5183595509685996, 0.5128552036217041, 0.5082607592357875] ***
*** starting iteration: 4; err: [Inf, 1.3509999979111773, 0.5183595509685996, 0.5128552036217041, 0.5082607592357875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3509999979111773, 0.5183595509685996, 0.5128552036217041, 0.5082607592357875, 0.5070948250537818] ***
*** starting iteration: 5; err: [Inf, 1.3509999979111773, 0.5183595509685996, 0.5128552036217041, 0.5082607592357875, 0.5070948250537818] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3509999979111773, 0.5183595509685996, 0.5128552036217041, 0.5082607592357875, 0.5070948250537818, 0.5064624774046999] ***
*** finished computation of 3 references, err: [Inf, 1.3509999979111773, 0.5183595509685996, 0.5128552036217041, 0.5082607592357875, 0.5070948250537818, 0.5064624774046999] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 13]]
** centroid: 1, normalized-entropy: 0.8589810370425965, [(2, 33), (3, 13)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.583800000248167] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.583800000248167, 0.5467585515448181] ***
*** starting iteration: 2; err: [Inf, 1.583800000248167, 0.5467585515448181] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.583800000248167, 0.5467585515448181, 0.5286569008080118] ***
*** starting iteration: 3; err: [Inf, 1.583800000248167, 0.5467585515448181, 0.5286569008080118] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.583800000248167, 0.5467585515448181, 0.5286569008080118, 0.5261042655968211] ***
*** starting iteration: 4; err: [Inf, 1.583800000248167, 0.5467585515448181, 0.5286569008080118, 0.5261042655968211] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.583800000248167, 0.5467585515448181, 0.5286569008080118, 0.5261042655968211, 0.5261042655968211] ***
*** finished computation of 3 references, err: [Inf, 1.583800000248167, 0.5467585515448181, 0.5286569008080118, 0.5261042655968211, 0.5261042655968211] ***
*** center 1: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 9]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.516399993362417] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.516399993362417, 0.5356982007184364] ***
*** starting iteration: 2; err: [Inf, 2.516399993362417, 0.5356982007184364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.516399993362417, 0.5356982007184364, 0.5329418739110765] ***
*** starting iteration: 3; err: [Inf, 2.516399993362417, 0.5356982007184364, 0.5329418739110765] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.516399993362417, 0.5356982007184364, 0.5329418739110765, 0.532307644296582] ***
*** finished computation of 3 references, err: [Inf, 2.516399993362417, 0.5356982007184364, 0.5329418739110765, 0.532307644296582] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 7]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 28), (3, 7)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4248999982312909] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4248999982312909, 0.5157831566485058] ***
*** starting iteration: 2; err: [Inf, 1.4248999982312909, 0.5157831566485058] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4248999982312909, 0.5157831566485058, 0.5100779091253502] ***
*** starting iteration: 3; err: [Inf, 1.4248999982312909, 0.5157831566485058, 0.5100779091253502] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4248999982312909, 0.5157831566485058, 0.5100779091253502, 0.5070948250537818] ***
*** finished computation of 3 references, err: [Inf, 1.4248999982312909, 0.5157831566485058, 0.5100779091253502, 0.5070948250537818] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 13]]
** centroid: 3, normalized-entropy: 0.8589810370425965, [(2, 33), (3, 13)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6546000010036226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6546000010036226, 0.5467585515448181] ***
*** starting iteration: 2; err: [Inf, 1.6546000010036226, 0.5467585515448181] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6546000010036226, 0.5467585515448181, 0.5286569008080118] ***
*** starting iteration: 3; err: [Inf, 1.6546000010036226, 0.5467585515448181, 0.5286569008080118] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6546000010036226, 0.5467585515448181, 0.5286569008080118, 0.5261042655968211] ***
*** finished computation of 3 references, err: [Inf, 1.6546000010036226, 0.5467585515448181, 0.5286569008080118, 0.5261042655968211] ***
*** center 1: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 9]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.000585325510048] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.000585325510048, 0.3646287565475356] ***
*** finished computation of 3 references, err: [Inf, 1.000585325510048, 0.3646287565475356] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 27]]
** centroid: 1, normalized-entropy: 0.625262405223423, [(2, 5), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 3]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 25), (3, 3)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4455356832687777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4455356832687777, 0.18420741743993818] ***
*** starting iteration: 2; err: [Inf, 0.4455356832687777, 0.18420741743993818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4455356832687777, 0.18420741743993818, 0.1758140770013048] ***
*** starting iteration: 3; err: [Inf, 0.4455356832687777, 0.18420741743993818, 0.1758140770013048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4455356832687777, 0.18420741743993818, 0.1758140770013048, 0.17411028620171046] ***
*** finished computation of 7 references, err: [Inf, 0.4455356832687777, 0.18420741743993818, 0.1758140770013048, 0.17411028620171046] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 17]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 18, 7]]
** centroid: 5, normalized-entropy: 0.8554508105601307, [(2, 18), (3, 7)]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.558689197882914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.558689197882914, 0.1783803441538936] ***
*** starting iteration: 2; err: [Inf, 0.558689197882914, 0.1783803441538936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.558689197882914, 0.1783803441538936, 0.16260927735292477] ***
*** starting iteration: 3; err: [Inf, 0.558689197882914, 0.1783803441538936, 0.16260927735292477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.558689197882914, 0.1783803441538936, 0.16260927735292477, 0.16073857802353386] ***
*** finished computation of 7 references, err: [Inf, 0.558689197882914, 0.1783803441538936, 0.16260927735292477, 0.16073857802353386] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 10]]
** centroid: 4, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4959957761477426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4959957761477426, 0.18755177343833193] ***
*** starting iteration: 2; err: [Inf, 0.4959957761477426, 0.18755177343833193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4959957761477426, 0.18755177343833193, 0.17766730595506172] ***
*** starting iteration: 3; err: [Inf, 0.4959957761477426, 0.18755177343833193, 0.17766730595506172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4959957761477426, 0.18755177343833193, 0.17766730595506172, 0.17733993326656022] ***
*** finished computation of 7 references, err: [Inf, 0.4959957761477426, 0.18755177343833193, 0.17766730595506172, 0.17733993326656022] ***
*** center 1: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 7]]
** centroid: 4, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 14)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9733333333333333
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.3531566344069159] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3531566344069159, 0.18679705319283507] ***
*** starting iteration: 2; err: [Inf, 0.3531566344069159, 0.18679705319283507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3531566344069159, 0.18679705319283507, 0.1680258874538644] ***
*** starting iteration: 3; err: [Inf, 0.3531566344069159, 0.18679705319283507, 0.1680258874538644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3531566344069159, 0.18679705319283507, 0.1680258874538644, 0.16367733861230482] ***
*** finished computation of 7 references, err: [Inf, 0.3531566344069159, 0.18679705319283507, 0.1680258874538644, 0.16367733861230482] ***
*** center 1: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 11, 9]]
** centroid: 7, normalized-entropy: 0.9927744539878083, [(2, 11), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.459314137212111] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.459314137212111, 0.18421283412180892] ***
*** starting iteration: 2; err: [Inf, 0.459314137212111, 0.18421283412180892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.459314137212111, 0.18421283412180892, 0.16615731419084986] ***
*** starting iteration: 3; err: [Inf, 0.459314137212111, 0.18421283412180892, 0.16615731419084986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.459314137212111, 0.18421283412180892, 0.16615731419084986, 0.16223233464297226] ***
*** finished computation of 7 references, err: [Inf, 0.459314137212111, 0.18421283412180892, 0.16615731419084986, 0.16223233464297226] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 10]]
** centroid: 4, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4577802427164904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4577802427164904, 0.18237577531018562] ***
*** starting iteration: 2; err: [Inf, 0.4577802427164904, 0.18237577531018562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4577802427164904, 0.18237577531018562, 0.177485091304423] ***
*** starting iteration: 3; err: [Inf, 0.4577802427164904, 0.18237577531018562, 0.177485091304423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4577802427164904, 0.18237577531018562, 0.177485091304423, 0.177485091304423] ***
*** finished computation of 7 references, err: [Inf, 0.4577802427164904, 0.18237577531018562, 0.177485091304423, 0.177485091304423] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 7]]
** centroid: 4, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5367000000532929] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5367000000532929, 0.23630916983726916] ***
*** starting iteration: 2; err: [Inf, 0.5367000000532929, 0.23630916983726916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5367000000532929, 0.23630916983726916, 0.23227895968471088] ***
*** starting iteration: 3; err: [Inf, 0.5367000000532929, 0.23630916983726916, 0.23227895968471088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5367000000532929, 0.23630916983726916, 0.23227895968471088, 0.23227895968471088] ***
*** finished computation of 7 references, err: [Inf, 0.5367000000532929, 0.23630916983726916, 0.23227895968471088, 0.23227895968471088] ***
*** center 1: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 3]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(2, 14), (3, 3)]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 10, 3]]
** centroid: 6, normalized-entropy: 0.7793498372920851, [(2, 10), (3, 3)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5155000043459836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5155000043459836, 0.2519819135688711] ***
*** starting iteration: 2; err: [Inf, 0.5155000043459836, 0.2519819135688711] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5155000043459836, 0.2519819135688711, 0.24731149650713596] ***
*** starting iteration: 3; err: [Inf, 0.5155000043459836, 0.2519819135688711, 0.24731149650713596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5155000043459836, 0.2519819135688711, 0.24731149650713596, 0.2462711520722065] ***
*** finished computation of 7 references, err: [Inf, 0.5155000043459836, 0.2519819135688711, 0.24731149650713596, 0.2462711520722065] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 13]]
** centroid: 7, normalized-entropy: 0.787126586201269, [(2, 4), (3, 13)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4699000042529019] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4699000042529019, 0.2744350798853953] ***
*** starting iteration: 2; err: [Inf, 0.4699000042529019, 0.2744350798853953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4699000042529019, 0.2744350798853953, 0.2516360020397861] ***
*** starting iteration: 3; err: [Inf, 0.4699000042529019, 0.2744350798853953, 0.2516360020397861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4699000042529019, 0.2744350798853953, 0.2516360020397861, 0.23978127079555464] ***
*** finished computation of 7 references, err: [Inf, 0.4699000042529019, 0.2744350798853953, 0.2516360020397861, 0.23978127079555464] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 22]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 1), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 3]]
** centroid: 5, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 7, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.98
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.38640238105568003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38640238105568003, 0.18496835776250195] ***
*** starting iteration: 2; err: [Inf, 0.38640238105568003, 0.18496835776250195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38640238105568003, 0.18496835776250195, 0.17812001871563107] ***
*** starting iteration: 3; err: [Inf, 0.38640238105568003, 0.18496835776250195, 0.17812001871563107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38640238105568003, 0.18496835776250195, 0.17812001871563107, 0.1767395056909381] ***
*** starting iteration: 4; err: [Inf, 0.38640238105568003, 0.18496835776250195, 0.17812001871563107, 0.1767395056909381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38640238105568003, 0.18496835776250195, 0.17812001871563107, 0.1767395056909381, 0.17411028620171046] ***
*** starting iteration: 5; err: [Inf, 0.38640238105568003, 0.18496835776250195, 0.17812001871563107, 0.1767395056909381, 0.17411028620171046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38640238105568003, 0.18496835776250195, 0.17812001871563107, 0.1767395056909381, 0.17411028620171046, 0.17411028620171046] ***
*** finished computation of 7 references, err: [Inf, 0.38640238105568003, 0.18496835776250195, 0.17812001871563107, 0.1767395056909381, 0.17411028620171046, 0.17411028620171046] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 7]]
** centroid: 1, normalized-entropy: 0.8554508105601307, [(2, 18), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 17]]
** centroid: 4, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42307193282618116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42307193282618116, 0.1873809373537019] ***
*** starting iteration: 2; err: [Inf, 0.42307193282618116, 0.1873809373537019] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42307193282618116, 0.1873809373537019, 0.16870835718120522] ***
*** starting iteration: 3; err: [Inf, 0.42307193282618116, 0.1873809373537019, 0.16870835718120522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42307193282618116, 0.1873809373537019, 0.16870835718120522, 0.16251727630426174] ***
*** starting iteration: 4; err: [Inf, 0.42307193282618116, 0.1873809373537019, 0.16870835718120522, 0.16251727630426174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42307193282618116, 0.1873809373537019, 0.16870835718120522, 0.16251727630426174, 0.16197908581906817] ***
*** finished computation of 7 references, err: [Inf, 0.42307193282618116, 0.1873809373537019, 0.16870835718120522, 0.16251727630426174, 0.16197908581906817] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 10]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 15]]
** centroid: 5, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3851340055396795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3851340055396795, 0.18955598604370974] ***
*** starting iteration: 2; err: [Inf, 0.3851340055396795, 0.18955598604370974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3851340055396795, 0.18955598604370974, 0.17836236825745888] ***
*** starting iteration: 3; err: [Inf, 0.3851340055396795, 0.18955598604370974, 0.17836236825745888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3851340055396795, 0.18955598604370974, 0.17836236825745888, 0.17777156547641584] ***
*** finished computation of 7 references, err: [Inf, 0.3851340055396795, 0.18955598604370974, 0.17836236825745888, 0.17777156547641584] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 7]]
** centroid: 1, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5598000086809539] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5598000086809539, 0.23682177546221994] ***
*** starting iteration: 2; err: [Inf, 0.5598000086809539, 0.23682177546221994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5598000086809539, 0.23682177546221994, 0.23199174882788617] ***
*** starting iteration: 3; err: [Inf, 0.5598000086809539, 0.23682177546221994, 0.23199174882788617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5598000086809539, 0.23682177546221994, 0.23199174882788617, 0.2300459957335152] ***
*** starting iteration: 4; err: [Inf, 0.5598000086809539, 0.23682177546221994, 0.23199174882788617, 0.2300459957335152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5598000086809539, 0.23682177546221994, 0.23199174882788617, 0.2300459957335152, 0.22935935036648133] ***
*** finished computation of 7 references, err: [Inf, 0.5598000086809539, 0.23682177546221994, 0.23199174882788617, 0.2300459957335152, 0.22935935036648133] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 7, 9]]
** centroid: 7, normalized-entropy: 0.9886994082884974, [(2, 7), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.623899999743154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.623899999743154, 0.22257014364701744] ***
*** starting iteration: 2; err: [Inf, 0.623899999743154, 0.22257014364701744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.623899999743154, 0.22257014364701744, 0.21552293407779563] ***
*** starting iteration: 3; err: [Inf, 0.623899999743154, 0.22257014364701744, 0.21552293407779563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.623899999743154, 0.22257014364701744, 0.21552293407779563, 0.21351779889334702] ***
*** starting iteration: 4; err: [Inf, 0.623899999743154, 0.22257014364701744, 0.21552293407779563, 0.21351779889334702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.623899999743154, 0.22257014364701744, 0.21552293407779563, 0.21351779889334702, 0.21290513028382027] ***
*** finished computation of 7 references, err: [Inf, 0.623899999743154, 0.22257014364701744, 0.21552293407779563, 0.21351779889334702, 0.21290513028382027] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 7]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 6]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 12), (3, 6)]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5419000007978623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5419000007978623, 0.24812172117059147] ***
*** starting iteration: 2; err: [Inf, 0.5419000007978623, 0.24812172117059147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5419000007978623, 0.24812172117059147, 0.24054668579744176] ***
*** starting iteration: 3; err: [Inf, 0.5419000007978623, 0.24812172117059147, 0.24054668579744176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5419000007978623, 0.24812172117059147, 0.24054668579744176, 0.2402882979897039] ***
*** finished computation of 7 references, err: [Inf, 0.5419000007978623, 0.24812172117059147, 0.24054668579744176, 0.2402882979897039] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 18]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 3), (3, 18)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.98
finished with 18
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.98
finished with 18
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.98
finished with 18
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.98
finished with 18
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.98
finished with 18
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.98
finished with 19
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.6207000060635931] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6207000060635931, 0.24260429040045495] ***
*** starting iteration: 2; err: [Inf, 0.6207000060635931, 0.24260429040045495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6207000060635931, 0.24260429040045495, 0.22903003400900357] ***
*** starting iteration: 3; err: [Inf, 0.6207000060635931, 0.24260429040045495, 0.22903003400900357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6207000060635931, 0.24260429040045495, 0.22903003400900357, 0.22743294875328524] ***
*** starting iteration: 4; err: [Inf, 0.6207000060635931, 0.24260429040045495, 0.22903003400900357, 0.22743294875328524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6207000060635931, 0.24260429040045495, 0.22903003400900357, 0.22743294875328524, 0.22743294875328524] ***
*** finished computation of 7 references, err: [Inf, 0.6207000060635931, 0.24260429040045495, 0.22903003400900357, 0.22743294875328524, 0.22743294875328524] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 6, 8]]
** centroid: 7, normalized-entropy: 0.9852281360342514, [(2, 6), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5653999968511559] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5653999968511559, 0.2417156745574655] ***
*** starting iteration: 2; err: [Inf, 0.5653999968511559, 0.2417156745574655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5653999968511559, 0.2417156745574655, 0.21888379106104175] ***
*** starting iteration: 3; err: [Inf, 0.5653999968511559, 0.2417156745574655, 0.21888379106104175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5653999968511559, 0.2417156745574655, 0.21888379106104175, 0.21394236112887108] ***
*** starting iteration: 4; err: [Inf, 0.5653999968511559, 0.2417156745574655, 0.21888379106104175, 0.21394236112887108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5653999968511559, 0.2417156745574655, 0.21888379106104175, 0.21394236112887108, 0.2124674825346532] ***
*** starting iteration: 5; err: [Inf, 0.5653999968511559, 0.2417156745574655, 0.21888379106104175, 0.21394236112887108, 0.2124674825346532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5653999968511559, 0.2417156745574655, 0.21888379106104175, 0.21394236112887108, 0.2124674825346532, 0.21198495427524958] ***
*** finished computation of 7 references, err: [Inf, 0.5653999968511559, 0.2417156745574655, 0.21888379106104175, 0.21394236112887108, 0.2124674825346532, 0.21198495427524958] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 8]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 8)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 5]]
** centroid: 4, normalized-entropy: 0.8739810481273581, [(2, 12), (3, 5)]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5018000005197998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5018000005197998, 0.2545991318518486] ***
*** starting iteration: 2; err: [Inf, 0.5018000005197998, 0.2545991318518486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5018000005197998, 0.2545991318518486, 0.24944924342330208] ***
*** starting iteration: 3; err: [Inf, 0.5018000005197998, 0.2545991318518486, 0.24944924342330208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5018000005197998, 0.2545991318518486, 0.24944924342330208, 0.24919085561556417] ***
*** finished computation of 7 references, err: [Inf, 0.5018000005197998, 0.2545991318518486, 0.24944924342330208, 0.24919085561556417] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 7]]
** centroid: 4, normalized-entropy: 0.8708644692353648, [(2, 17), (3, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 8 centroids; started with 7
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.2375, 3.6624999999999996, 1.5333333333333334, 0.27916666666666673], [7.416666666666667, 3.15, 6.283333333333332, 2.0], [5.871428571428572, 2.7928571428571436, 4.271428571428572, 1.3214285714285714], [5.766666666666667, 2.5, 4.966666666666667, 1.8333333333333333], [4.712499999999999, 3.0749999999999997, 1.35625, 0.19375], [6.466666666666667, 3.0555555555555554, 5.5055555555555555, 2.122222222222222], [6.62, 2.95, 4.64, 1.4300000000000002], [6.3, 2.6666666666666665, 5.0, 1.7333333333333334], [5.2, 2.3666666666666667, 3.4, 1.0333333333333334]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 1, 3, 2, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.003124999999999, 3.396875, 1.45625, 0.2375], [7.6499999999999995, 3.016666666666666, 6.5, 2.0833333333333335], [5.566666666666667, 2.9333333333333336, 4.5, 1.4333333333333333], [4.9, 2.5, 4.5, 1.7], [6.51, 2.92, 4.65, 1.4200000000000002], [6.700000000000001, 3.0928571428571425, 5.585714285714286, 2.1214285714285714], [5.629411764705883, 2.658823529411765, 3.9470588235294124, 1.2], [6.1000000000000005, 2.6500000000000004, 4.824999999999999, 1.6], [6.0076923076923086, 2.7153846153846155, 5.046153846153846, 1.8230769230769228]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 2, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.4458333333333355, 2.9916666666666667, 5.395833333333333, 2.0583333333333327], [4.8, 3.2684210526315787, 1.452631578947368, 0.2157894736842105], [5.266666666666667, 2.483333333333333, 3.4500000000000006, 1.0833333333333333], [7.4700000000000015, 3.1800000000000006, 6.26, 2.08], [6.300000000000001, 2.9499999999999997, 4.581250000000001, 1.4750000000000003], [6.1000000000000005, 2.9333333333333336, 4.833333333333333, 1.8], [5.355555555555556, 3.7666666666666666, 1.5222222222222224, 0.32222222222222224], [5.508333333333333, 2.683333333333333, 4.166666666666667, 1.3]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 3, 2, 3, 1, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[45, 8, 1, 1, 13, 2, 11, 10, 1, 47, 15, 27, 15, 21, 37, 17, 28, 30, 43, 1, 21, 33, 54, 35, 40, 41, 18, 27, 16, 26, 21, 32, 28, 5, 31, 14, 44, 1, 1, 1, 30, 26, 1, 57, 23, 46, 24, 30, 42, 38, 52, 43, 30, 2, 36, 26, 33, 46, 40, 26, 20, 20, 39, 39, 37, 37, 36, 26, 7, 7, 43, 41, 32, 33, 42, 24, 21, 14, 21, 18, 47, 22, 18, 21, 48, 26, 67, 28, 51, 43, 37, 27, 18, 29, 34, 56, 3, 28, 46, 20, 2, 46, 36, 44, 40, 31, 40, 21, 22, 31, 39, 36, 39, 48, 43, 21, 41, 5, 34, 25, 29, 21, 35, 35, 42, 37, 15, 34, 43, 40, 35, 34, 25, 28, 23, 51, 22, 19, 64, 24, 24, 38, 16, 57, 14, 22, 33, 67, 61, 80, 1, 50, 53, 34, 28, 23, 23, 32, 39, 31, 26, 46, 30, 40, 49, 4, 27, 40, 20, 56, 44, 46, 29, 50, 37, 37, 34, 39, 45, 22, 34, 44, 28, 43, 68, 37, 53, 21, 53, 42, 29, 43, 1, 40, 58, 47, 27, 3, 34, 56, 26, 54, 42, 30, 66, 60, 14, 1, 35, 49, 34, 52, 29, 54, 50, 22, 41, 52, 32, 30, 27, 31, 54, 1, 53, 22, 29, 33, 27, 29, 38, 22, 62, 37, 27, 37, 25, 16, 63, 21, 37, 41, 33, 31, 38, 28, 46, 38, 42, 34, 63, 34, 57, 33, 56, 48, 33, 34, 32, 57, 52, 52, 33, 33, 34, 48, 26, 30, 44, 15, 46, 3, 24, 30, 34, 45, 106, 31, 40, 38, 55, 42, 35, 19, 29, 42, 33, 64, 38, 22, 39, 34, 27, 42, 50, 56, 37, 26, 17, 40]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6119999999999998, speedup = 0.3638036823619677, eval_ratio = 0.041825)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.4166666666666667,"recall":0.4131944444444445,"f1":null,"seconds":7.338076829910278e-5,"exhaustive_search_seconds":0.00036836788058280945,"evaluations":342.3203125,"distances_sum":1731.5546904055916}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5694444444444441,"recall":0.5694444444444441,"f1":0.5694444444444441,"seconds":0.00010858289897441864,"exhaustive_search_seconds":0.00036836788058280945,"evaluations":382.078125,"distances_sum":1632.470692292354}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6623263888888883,"recall":0.6623263888888883,"f1":0.6623263888888883,"seconds":0.00013944320380687714,"exhaustive_search_seconds":0.00036836788058280945,"evaluations":422.8515625,"distances_sum":1592.2610221999726}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.730902777777777,"recall":0.730902777777777,"f1":0.730902777777777,"seconds":0.00016990862786769867,"exhaustive_search_seconds":0.00036836788058280945,"evaluations":463.0,"distances_sum":1569.8483658166037}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7821180555555547,"recall":0.7821180555555547,"f1":0.7821180555555547,"seconds":0.00020032934844493866,"exhaustive_search_seconds":0.00036836788058280945,"evaluations":502.5,"distances_sum":1556.7912299319737}
KCenters.DeloneInvIndex> reached performance {"precision":0.8229166666666654,"recall":0.8229166666666654,"f1":0.8229166666666654,"seconds":0.00023117288947105408,"exhaustive_search_seconds":0.00036836788058280945,"evaluations":544.1171875,"distances_sum":1545.9220954274938}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7929999999999998, speedup = 0.8037520691557845, eval_ratio = 0.054002)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
