Julia Version 1.5.0-DEV.212
Commit 51f1710d7e (2020-01-31 07:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed DataValueInterfaces ───────── v1.0.0
  Installed DataAPI ───────────────────── v1.1.0
  Installed Missings ──────────────────── v0.4.3
  Installed Tables ────────────────────── v0.2.11
  Installed Reexport ──────────────────── v0.2.0
  Installed Parsers ───────────────────── v0.3.11
  Installed KCenters ──────────────────── v0.1.9
  Installed SimilaritySearch ──────────── v0.3.17
  Installed InvertedIndices ───────────── v1.0.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Compat ────────────────────── v3.2.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed StatsBase ─────────────────── v0.32.0
  Installed JSON ──────────────────────── v0.21.0
  Installed MLDataUtils ───────────────── v0.5.0
  Installed MLDataPattern ─────────────── v0.5.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed OrderedCollections ────────── v1.1.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed TableTraits ───────────────── v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed MappedArrays ──────────────── v0.2.2
  Installed DataStructures ────────────── v0.17.9
  Installed DataFrames ────────────────── v0.20.0
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_k365Yf/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 144.80999999999997
[ Info: 76.46000000000004
[ Info: 49.509999999999984
[ Info: 26.659999999999993
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.2399983987154
[ Info: 76.62000116877203
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.350264362312732
inertia(cdnet.distances) = 24.514265756346365
inertia(crand.distances) = 21.442536856052133
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7881902819402826,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":7.6171875,"distances_sum":1831.595670156013}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.474609375, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.474609375,"f1":null,"seconds":4.1387975215911865e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":6.078125,"distances_sum":1314.9026097117946}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.7881902819402826,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":7.6171875,"distances_sum":1831.595670156013}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8365046411921421,"seconds":4.822388291358948e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.0078125,"distances_sum":2045.8620411778538}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.904931006493507,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.6171875,"distances_sum":2383.0130558379687}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8955705752580762,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.6796875,"distances_sum":2286.8261785396894}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8397160131535141,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.0703125,"distances_sum":2081.221186629156}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.841796875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.841796875,"f1":0.904931006493507,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.6171875,"distances_sum":2383.0130558379687}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9404475732600738,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.75,"distances_sum":2617.597561742139}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9349161255411259,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.703125,"distances_sum":2617.9560183407857}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9324519230769236,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.75,"distances_sum":2559.9302085282857}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9364385614385621,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.8203125,"distances_sum":2587.5891596753904}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9593437812187819,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.796875,"distances_sum":2765.860106393401}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9593437812187819,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.796875,"distances_sum":2765.860106393401}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9593437812187819,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.796875,"distances_sum":2765.860106393401}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5625,"f1":null,"seconds":4.3157488107681274e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.4609375,"distances_sum":1283.1678101987918}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5625,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5625,"f1":null,"seconds":4.3157488107681274e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.4609375,"distances_sum":1283.1678101987918}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5830078125, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5830078125,"f1":null,"seconds":4.174187779426575e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.703125,"distances_sum":1338.703753167267}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5830078125,"state":{"ssize":4,"bsize":3},"perf":{"precision":null,"recall":0.5830078125,"f1":null,"seconds":4.174187779426575e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.703125,"distances_sum":1338.703753167267}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7138671875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7138671875,"f1":0.8230098026973036,"seconds":4.872679710388184e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.359375,"distances_sum":1707.4003877145085}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9437931859806865,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.953125,"distances_sum":2342.250962177989}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9437931859806865,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.953125,"distances_sum":2342.250962177989}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.900390625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9437931859806865,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.953125,"distances_sum":2342.250962177989}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.642578125,"f1":0.7693441974691982,"seconds":4.544854164123535e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.78125,"distances_sum":1653.3945501102255}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.718098741536242,"seconds":4.215165972709656e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.1796875,"distances_sum":1481.1850769464752}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.642578125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.642578125,"f1":0.7693441974691982,"seconds":4.544854164123535e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.78125,"distances_sum":1653.3945501102255}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9007076257076263,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.890625,"distances_sum":2195.6874218058265}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9483917124542132,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.84375,"distances_sum":2570.271254166052}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9483917124542132,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.84375,"distances_sum":2570.271254166052}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9697265625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9697265625,"f1":0.9833905677655679,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":9.0,"distances_sum":2811.617949416521}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9675995879120883,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9453125,"distances_sum":2698.109124371528}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9697265625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9833905677655679,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":9.0,"distances_sum":2811.617949416521}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9697265625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9833905677655679,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":9.0,"distances_sum":2811.617949416521}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5498046875,"f1":0.6967546342546348,"seconds":3.87243926525116e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.6484375,"distances_sum":1351.3097784762913}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5498046875,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.5498046875,"f1":0.6967546342546348,"seconds":3.87243926525116e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.6484375,"distances_sum":1351.3097784762913}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8495057026307036,"seconds":4.652887582778931e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.921875,"distances_sum":1981.0574235917743}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8843380577755585,"seconds":4.976987838745117e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4375,"distances_sum":2090.620499937693}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80859375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.80859375,"f1":0.8843380577755585,"seconds":4.976987838745117e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4375,"distances_sum":2090.620499937693}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9068738553113561,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.515625,"distances_sum":2242.497578432769}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9438160797535805,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7578125,"distances_sum":2466.6810001929257}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9387934981684988,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.734375,"distances_sum":2441.921659314518}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8949295496170503,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.546875,"distances_sum":2132.2611454696776}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9438160797535805,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7578125,"distances_sum":2466.6810001929257}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90234375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9438160797535805,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7578125,"distances_sum":2466.6810001929257}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.7256949647574654,"seconds":4.159286618232727e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":7.53125,"distances_sum":1293.8144531714572}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.635883331298828e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":7.078125,"distances_sum":904.5819548573475}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.583984375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.583984375,"f1":0.7256949647574654,"seconds":4.159286618232727e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":7.53125,"distances_sum":1293.8144531714572}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.84838650932401,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.3046875,"distances_sum":1761.683373438649}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8126092657342665,"seconds":4.542991518974304e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":7.984375,"distances_sum":1607.9601730552388}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.84838650932401,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.3046875,"distances_sum":1761.683373438649}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8538440725940735,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.28125,"distances_sum":1773.0590702260256}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9533367673992679,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.875,"distances_sum":2372.9409958622346}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9533367673992679,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.875,"distances_sum":2372.9409958622346}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9533367673992679,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.875,"distances_sum":2372.9409958622346}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8086980727605736,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.015625,"distances_sum":1738.6569551780417}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37890625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.37890625,"f1":null,"seconds":3.3155083656311035e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.328125,"distances_sum":909.1084448340728}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8583510239760249,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.1171875,"distances_sum":2007.2698188702404}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8583510239760249,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.1171875,"distances_sum":2007.2698188702404}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9443910256410262,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.703125,"distances_sum":2493.0931848478886}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8962282509157518,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.4453125,"distances_sum":2141.5664061266552}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9237694597069602,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.578125,"distances_sum":2341.6991359539024}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8955216658341667,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.5,"distances_sum":2143.8485777390556}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9443910256410262,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.703125,"distances_sum":2493.0931848478886}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":11,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9691792582417588,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8671875,"distances_sum":2638.2581604894503}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964623397435898,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.859375,"distances_sum":2608.766931365455}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9661687271062274,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8359375,"distances_sum":2622.8236726108416}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9722298534798537,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8828125,"distances_sum":2669.018217475875}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9617788461538467,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8515625,"distances_sum":2589.7718460252822}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9491159881784886,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7421875,"distances_sum":2522.1683566398647}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9722298534798537,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8828125,"distances_sum":2669.018217475875}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9722298534798537,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8828125,"distances_sum":2669.018217475875}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5498046875,"f1":null,"seconds":4.049390554428101e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.8046875,"distances_sum":1282.8235978115274}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8570606476856485,"seconds":5.057081580162048e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.359375,"distances_sum":1872.9367297416234}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8570606476856485,"seconds":5.057081580162048e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.359375,"distances_sum":1872.9367297416234}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570741758241763,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8671875,"distances_sum":2523.8668503701792}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9570741758241763,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8671875,"distances_sum":2523.8668503701792}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9658341658341661,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9453125,"distances_sum":2569.3576148515763}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9596382783882789,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8671875,"distances_sum":2546.8446939735377}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9658341658341661,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9453125,"distances_sum":2569.3576148515763}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9658341658341661,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9453125,"distances_sum":2569.3576148515763}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7919060106560114,"seconds":4.6174973249435425e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.90625,"distances_sum":1641.9948111164367}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8144121503496512,"seconds":4.533678293228149e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.015625,"distances_sum":1734.5088327090127}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8098261113886124,"seconds":4.725530743598938e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.984375,"distances_sum":1737.0015376171086}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7001953125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.7001953125,"f1":0.8144121503496512,"seconds":4.533678293228149e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.015625,"distances_sum":1734.5088327090127}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9423477564102573,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2467.727446628813}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9410631035631039,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8203125,"distances_sum":2484.467467383488}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8882929570429576,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.71875,"distances_sum":2167.4102264251496}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9328072968697975,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8359375,"distances_sum":2450.570967741135}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9011134698634709,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.84375,"distances_sum":2217.983433813224}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9504178113553117,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8984375,"distances_sum":2536.8360760325236}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9352048992673998,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8671875,"distances_sum":2453.990151198885}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.958464972527473,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9140625,"distances_sum":2613.4464829693575}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.958464972527473,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9140625,"distances_sum":2613.4464829693575}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.974313186813187,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9765625,"distances_sum":2710.0158701356786}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9669471153846159,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9296875,"distances_sum":2651.80273099277}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646978021978025,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9609375,"distances_sum":2649.3014550120547}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9624141483516488,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8828125,"distances_sum":2641.1299310278087}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.975560897435898,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9609375,"distances_sum":2731.8699836486203}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975560897435898,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9609375,"distances_sum":2731.8699836486203}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975560897435898,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9609375,"distances_sum":2731.8699836486203}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1650390625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1650390625,"f1":null,"seconds":3.3043324947357178e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":4.625,"distances_sum":420.03376578454026}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.162109375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.162109375,"f1":null,"seconds":3.4905970096588135e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":4.7578125,"distances_sum":394.00198682317705}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8572120587745596,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.0546875,"distances_sum":1828.212662579508}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8572120587745596,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.0546875,"distances_sum":1828.212662579508}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8572120587745596,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.0546875,"distances_sum":1828.212662579508}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7646484375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8572120587745596,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.0546875,"distances_sum":1828.212662579508}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.34375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.34375,"f1":null,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.2890625,"distances_sum":724.0208993906771}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.34375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.34375,"f1":null,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.2890625,"distances_sum":724.0208993906771}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.521484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.521484375,"f1":0.6704732767232772,"seconds":4.665926098823547e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.546875,"distances_sum":1101.4103321061348}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.521484375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.521484375,"f1":0.6704732767232772,"seconds":4.665926098823547e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.546875,"distances_sum":1101.4103321061348}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7926625457875465,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.4921875,"distances_sum":1415.0582046867619}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8929747335997342,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.0234375,"distances_sum":1913.7420044583523}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7333984375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7333984375,"f1":0.8339103604728613,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.59375,"distances_sum":1637.8768186241946}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8212890625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8212890625,"f1":0.8929747335997342,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.0234375,"distances_sum":1913.7420044583523}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8212890625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8212890625,"f1":0.8929747335997342,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.0234375,"distances_sum":1913.7420044583523}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5009765625, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5009765625,"f1":null,"seconds":4.643574357032776e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.625,"distances_sum":1153.1535998389886}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5009765625,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.5009765625,"f1":null,"seconds":4.643574357032776e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.625,"distances_sum":1153.1535998389886}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7871761918636927,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.84375,"distances_sum":1542.1321633490925}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9343120421245429,"seconds":7.27921724319458e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.71875,"distances_sum":2230.7389954376304}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9343120421245429,"seconds":7.27921724319458e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.71875,"distances_sum":2230.7389954376304}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9603250915750922,"seconds":6.876885890960693e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.859375,"distances_sum":2401.510463426455}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9603250915750922,"seconds":6.876885890960693e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.859375,"distances_sum":2401.510463426455}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9603250915750922,"seconds":6.876885890960693e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.859375,"distances_sum":2401.510463426455}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5029296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5029296875,"f1":null,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.453125,"distances_sum":1122.9416166774442}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.693625330924988e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.9765625,"distances_sum":524.1462256271622}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.521484375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.521484375,"f1":0.6724483849483854,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.6953125,"distances_sum":1151.3485177187304}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.521484375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.521484375,"f1":0.6724483849483854,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.6953125,"distances_sum":1151.3485177187304}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.936378725441226,"seconds":6.40377402305603e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.640625,"distances_sum":2255.764442789956}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9461569680319686,"seconds":6.6999346017837524e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.671875,"distances_sum":2302.2569197808093}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8045522186147196,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.921875,"distances_sum":1582.1776965386225}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8025935869685878,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.890625,"distances_sum":1607.5951415903644}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.5439453125,"f1":0.6873452935952942,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.703125,"distances_sum":1202.079190458448}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9461569680319686,"seconds":6.6999346017837524e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.671875,"distances_sum":2302.2569197808093}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9542239010989014,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7578125,"distances_sum":2356.2296661378114}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9695512820512823,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8515625,"distances_sum":2468.863412276257}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9521462912087917,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.796875,"distances_sum":2344.0926593381128}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9617960164835171,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.859375,"distances_sum":2410.5676894926014}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9474447427572434,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.765625,"distances_sum":2316.4001209849694}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524496336996342,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.78125,"distances_sum":2371.705123159895}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9695512820512823,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8515625,"distances_sum":2468.863412276257}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9695512820512823,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8515625,"distances_sum":2468.863412276257}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1982421875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1982421875,"f1":null,"seconds":3.155320882797241e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.84375,"distances_sum":529.1448238332276}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1982421875,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.1982421875,"f1":null,"seconds":3.155320882797241e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.84375,"distances_sum":529.1448238332276}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3359375,"f1":null,"seconds":3.511086106300354e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.4609375,"distances_sum":762.2898072492783}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8228802447552456,"seconds":4.759058356285095e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.8671875,"distances_sum":1742.508191012748}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.71484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.71484375,"f1":0.8228802447552456,"seconds":4.759058356285095e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.8671875,"distances_sum":1742.508191012748}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8595477439227446,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.3359375,"distances_sum":1906.020766671918}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9167606698856708,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5,"distances_sum":2243.9742302757923}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8729432026307035,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.375,"distances_sum":1962.8818666991895}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8623046875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9167606698856708,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5,"distances_sum":2243.9742302757923}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8623046875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9167606698856708,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5,"distances_sum":2243.9742302757923}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5576171875,"f1":null,"seconds":4.466623067855835e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.265625,"distances_sum":1191.8863671330876}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.860384754134755,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.328125,"distances_sum":1822.5379351277177}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.860384754134755,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.328125,"distances_sum":1822.5379351277177}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8691053737928746,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.3203125,"distances_sum":1866.459283821634}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.917370650183151,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6171875,"distances_sum":2148.57373794279}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9321027930402936,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.71875,"distances_sum":2282.1472703927625}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9218005952380961,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6484375,"distances_sum":2229.6056460298228}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9321027930402936,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.71875,"distances_sum":2282.1472703927625}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.968292124542125,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8984375,"distances_sum":2492.1967741509657}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.953519917582418,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.78125,"distances_sum":2440.0303014607225}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9461569680319685,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.765625,"distances_sum":2368.8176151153075}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9636561355311359,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9140625,"distances_sum":2459.713549174046}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9472012362637371,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.796875,"distances_sum":2381.6787151288086}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968292124542125,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8984375,"distances_sum":2492.1967741509657}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968292124542125,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8984375,"distances_sum":2492.1967741509657}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8001945970695981,"seconds":4.503875970840454e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.59375,"distances_sum":1601.8428079360524}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3994140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.1484375,"distances_sum":858.7776719748973}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6845703125,"f1":0.8001945970695981,"seconds":4.503875970840454e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.59375,"distances_sum":1601.8428079360524}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9405048076923082,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.65625,"distances_sum":2318.050309412101}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8962428196803205,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.3046875,"distances_sum":2024.296925563675}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9420673076923083,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6875,"distances_sum":2306.709046510186}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9405048076923082,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.65625,"distances_sum":2318.050309412101}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9616128663003666,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.859375,"distances_sum":2431.618380777314}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9572744963369966,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8125,"distances_sum":2412.8785322843137}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964714972527473,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.84375,"distances_sum":2482.9127137411406}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9503834706959711,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.78125,"distances_sum":2373.0827560542607}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599358974358977,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8046875,"distances_sum":2436.919339038184}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9676739926739931,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2480.5872429539104}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9676739926739931,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2480.5872429539104}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9676739926739931,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2480.5872429539104}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.8001841908091917,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":7.8671875,"distances_sum":1305.7620745887148}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.8001841908091917,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":7.8671875,"distances_sum":1305.7620745887148}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.928491300366301,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.7265625,"distances_sum":1846.7280453544386}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9496222527472533,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.828125,"distances_sum":2017.244353328461}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9496222527472533,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.828125,"distances_sum":2017.244353328461}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9689732142857147,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.9296875,"distances_sum":2094.645652547042}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9601247710622713,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.859375,"distances_sum":2075.4418555491798}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9517570970695974,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.84375,"distances_sum":1999.1929986250946}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9689732142857147,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.9296875,"distances_sum":2094.645652547042}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9689732142857147,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.9296875,"distances_sum":2094.645652547042}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3974609375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3974609375,"f1":null,"seconds":3.373250365257263e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.2578125,"distances_sum":771.6571767877241}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7132291319791325,"seconds":4.058703780174255e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.125,"distances_sum":1152.4822882249448}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5517578125,"f1":null,"seconds":3.9245933294296265e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.8828125,"distances_sum":1103.2298897945268}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.576171875,"f1":0.7132291319791325,"seconds":4.058703780174255e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.125,"distances_sum":1152.4822882249448}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.889755556943058,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.0703125,"distances_sum":1866.4044491970858}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8419746919746929,"seconds":4.755333065986633e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.90625,"distances_sum":1646.983138174615}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7832984723609732,"seconds":4.434958100318909e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.53125,"distances_sum":1390.0558744238576}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8881810897435907,"seconds":4.973262548446655e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.0703125,"distances_sum":1846.3163149710817}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.81640625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.81640625,"f1":0.889755556943058,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.0703125,"distances_sum":1866.4044491970858}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9490212912087919,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.703125,"distances_sum":2204.9736364830874}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9366357600732607,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6015625,"distances_sum":2139.291886877429}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9478708791208796,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6640625,"distances_sum":2182.162188793419}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8933009698634706,"seconds":4.870817065238953e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.09375,"distances_sum":1898.5133347671579}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9368392024642032,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6640625,"distances_sum":2110.094203910078}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.901840347152848,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.1640625,"distances_sum":1928.4656587904021}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9341320138195142,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6640625,"distances_sum":2114.0198790691816}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9349135239760245,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.5234375,"distances_sum":2168.055856563305}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9490212912087919,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.703125,"distances_sum":2204.9736364830874}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9091796875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9490212912087919,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.703125,"distances_sum":2204.9736364830874}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8487845487845498,"seconds":5.014240741729736e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.2109375,"distances_sum":1625.7358728883414}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8066922660672668,"seconds":4.556030035018921e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.9296875,"distances_sum":1443.9948019294395}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.373046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.373046875,"f1":null,"seconds":3.3713877201080322e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.859375,"distances_sum":723.1146307811139}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8487845487845498,"seconds":5.014240741729736e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.2109375,"distances_sum":1625.7358728883414}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9070544039294048,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.6953125,"distances_sum":1858.8427363578953}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9536744505494513,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8515625,"distances_sum":2141.505387378691}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.960456730769231,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8515625,"distances_sum":2186.7609380339104}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9563301282051284,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8203125,"distances_sum":2158.9131678641584}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8953125000000007,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.625,"distances_sum":1804.243078695394}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.898560814185815,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.65625,"distances_sum":1789.185079439699}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.960456730769231,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8515625,"distances_sum":2186.7609380339104}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9636904761904769,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2181.6705508130794}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9766369047619051,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9609375,"distances_sum":2268.9954085594327}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9756353021978025,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9140625,"distances_sum":2265.4872301211417}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.961876144688645,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.84375,"distances_sum":2198.5061972154776}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766369047619051,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9609375,"distances_sum":2268.9954085594327}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766369047619051,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9609375,"distances_sum":2268.9954085594327}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2412109375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2412109375,"f1":null,"seconds":3.1981617212295532e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.859375,"distances_sum":499.48569220259736}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5205078125, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5205078125,"f1":null,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":6.6640625,"distances_sum":1052.7335704553489}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.57421875,"f1":0.7159139471639477,"seconds":4.215165972709656e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.109375,"distances_sum":1201.2596948287035}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.57421875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.57421875,"f1":0.7159139471639477,"seconds":4.215165972709656e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.109375,"distances_sum":1201.2596948287035}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9290865384615391,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.5625,"distances_sum":2063.8877774482075}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7946964493839501,"seconds":4.725530743598938e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.4609375,"distances_sum":1446.1823576515185}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7796786546786554,"seconds":4.518777132034302e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.4296875,"distances_sum":1389.5972615442706}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7880197927072935,"seconds":4.304572939872742e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.546875,"distances_sum":1411.624892283135}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8844983141858149,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.1171875,"distances_sum":1817.5797357209012}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8617080835830845,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.078125,"distances_sum":1649.6579596506715}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9290865384615391,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.5625,"distances_sum":2063.8877774482075}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9441855019980028,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.703125,"distances_sum":2157.4439589941535}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9340144230769237,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.5859375,"distances_sum":2075.8031083589194}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.966225961538462,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.875,"distances_sum":2270.3897137046224}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9610519688644693,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8515625,"distances_sum":2240.042770291928}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9669471153846159,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.859375,"distances_sum":2286.7772254442584}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9492845695970701,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.7421875,"distances_sum":2180.8816490896083}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9383814102564108,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.7421875,"distances_sum":2096.4929415693696}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524267399267405,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.7578125,"distances_sum":2215.385024597167}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9669471153846159,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.859375,"distances_sum":2286.7772254442584}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9669471153846159,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.859375,"distances_sum":2286.7772254442584}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2109375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2109375,"f1":null,"seconds":3.121793270111084e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":5.640625,"distances_sum":473.2515154137334}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.57421875,"f1":0.7163836163836171,"seconds":4.0959566831588745e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.15625,"distances_sum":1184.5056378379431}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.57421875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.57421875,"f1":0.7163836163836171,"seconds":4.0959566831588745e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.15625,"distances_sum":1184.5056378379431}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9039033882783891,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.21875,"distances_sum":1853.8193332994776}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8384493978243988,"seconds":4.688277840614319e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.8828125,"distances_sum":1593.3974541707748}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.833984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.9039033882783891,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.21875,"distances_sum":1853.8193332994776}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9347787629037634,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.5703125,"distances_sum":2091.327463961799}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9088083791208799,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.2109375,"distances_sum":1903.154342811958}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.915585456210457,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.421875,"distances_sum":1968.2705773010503}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9347787629037634,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.5703125,"distances_sum":2091.327463961799}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.888671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9347787629037634,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.5703125,"distances_sum":2091.327463961799}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.880437271062272,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.171875,"distances_sum":1710.2997155048392}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":3.764405846595764e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":6.171875,"distances_sum":811.824584047682}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":3.0566006898880005e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":5.3984375,"distances_sum":428.16621566781316}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7978515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7978515625,"f1":0.880437271062272,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.171875,"distances_sum":1710.2997155048392}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9538721694971701,"seconds":9.132549166679382e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.828125,"distances_sum":2123.5186327649976}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9538721694971701,"seconds":9.132549166679382e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.828125,"distances_sum":2123.5186327649976}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9634329212454218,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.84375,"distances_sum":2180.350849403318}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.974089972527473,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.90625,"distances_sum":2252.7142273446293}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9631181318681322,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.859375,"distances_sum":2196.8121516580504}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.974089972527473,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.90625,"distances_sum":2252.7142273446293}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.974089972527473,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.90625,"distances_sum":2252.7142273446293}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8481797716172724,"seconds":1.0289251804351807e-5,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.8828125,"distances_sum":1592.1150262188025}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":3.682449460029602e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.453125,"distances_sum":804.1797640944798}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5302734375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5302734375,"f1":0.6733537296037301,"seconds":9.100884199142456e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.8671875,"distances_sum":1038.2025273232473}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8481797716172724,"seconds":1.0289251804351807e-5,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.8828125,"distances_sum":1592.1150262188025}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9105254120879127,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.25,"distances_sum":1848.1838781524152}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9182614260739266,"seconds":1.0313466191291809e-5,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.4375,"distances_sum":1955.2099402144186}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.881468531468532,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.9375,"distances_sum":1749.9201896216705}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8603515625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8603515625,"f1":0.9182614260739266,"seconds":1.0313466191291809e-5,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.4375,"distances_sum":1955.2099402144186}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9437213827838833,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6171875,"distances_sum":2070.2261756040666}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758928571428575,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.890625,"distances_sum":2225.8930403844283}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9427312271062273,"seconds":1.0436400771141052e-5,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.671875,"distances_sum":2038.0593234266146}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758928571428575,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.890625,"distances_sum":2225.8930403844283}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758928571428575,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.890625,"distances_sum":2225.8930403844283}}, n: 9
inertia(cfft.distances) = 18.35026434676434
inertia(cdnet.distances) = 24.23339327485379
inertia(crand.distances) = 19.664305555555558
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8777777777777778
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9488888888888889
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8733333333333334
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.931111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9177777777777778
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8777777777777778
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9177777777777778
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8533333333333332
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9222222222222222
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.891111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 1, 2, 2, 3, 3, 3, 3, 2, 3, 1, 3, 2, 1, 3, 3, 1]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.4595333364695179] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4595333364695179, 0.18133011192447576] ***
*** starting iteration: 2; err: [Inf, 0.4595333364695179, 0.18133011192447576] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4595333364695179, 0.18133011192447576, 0.1673454112009092] ***
*** starting iteration: 3; err: [Inf, 0.4595333364695179, 0.18133011192447576, 0.1673454112009092] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4595333364695179, 0.18133011192447576, 0.1673454112009092, 0.1640939623501696] ***
*** starting iteration: 4; err: [Inf, 0.4595333364695179, 0.18133011192447576, 0.1673454112009092, 0.1640939623501696] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4595333364695179, 0.18133011192447576, 0.1673454112009092, 0.1640939623501696, 0.16349131641382694] ***
*** finished computation of 12 references, err: [Inf, 0.4595333364695179, 0.18133011192447576, 0.1673454112009092, 0.1640939623501696, 0.16349131641382694] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.8721000109358394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8721000109358394, 0.6046111717518707] ***
*** starting iteration: 2; err: [Inf, 0.8721000109358394, 0.6046111717518707] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422] ***
*** starting iteration: 3; err: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184] ***
*** starting iteration: 4; err: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184, 0.5959566766142675] ***
*** starting iteration: 5; err: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184, 0.5959566766142675] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184, 0.5959566766142675, 0.5914733309186414] ***
*** starting iteration: 6; err: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184, 0.5959566766142675, 0.5914733309186414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184, 0.5959566766142675, 0.5914733309186414, 0.5811311491959431] ***
*** starting iteration: 7; err: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184, 0.5959566766142675, 0.5914733309186414, 0.5811311491959431] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184, 0.5959566766142675, 0.5914733309186414, 0.5811311491959431, 0.5708946904321354] ***
*** starting iteration: 8; err: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184, 0.5959566766142675, 0.5914733309186414, 0.5811311491959431, 0.5708946904321354] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184, 0.5959566766142675, 0.5914733309186414, 0.5811311491959431, 0.5708946904321354, 0.554972374537272] ***
*** starting iteration: 9; err: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184, 0.5959566766142675, 0.5914733309186414, 0.5811311491959431, 0.5708946904321354, 0.554972374537272] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184, 0.5959566766142675, 0.5914733309186414, 0.5811311491959431, 0.5708946904321354, 0.554972374537272, 0.5462753908118115] ***
*** starting iteration: 10; err: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184, 0.5959566766142675, 0.5914733309186414, 0.5811311491959431, 0.5708946904321354, 0.554972374537272, 0.5462753908118115] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184, 0.5959566766142675, 0.5914733309186414, 0.5811311491959431, 0.5708946904321354, 0.554972374537272, 0.5462753908118115, 0.5441406122006299] ***
*** finished computation of 3 references, err: [Inf, 0.8721000109358394, 0.6046111717518707, 0.5983117380630422, 0.5972523014569184, 0.5959566766142675, 0.5914733309186414, 0.5811311491959431, 0.5708946904321354, 0.554972374537272, 0.5462753908118115, 0.5441406122006299] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 20]]
** centroid: 1, normalized-entropy: 0.5586293734521991, [(2, 3), (3, 20)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 11]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.990500022848915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.990500022848915, 1.4106967145664568] ***
*** starting iteration: 2; err: [Inf, 4.990500022848915, 1.4106967145664568] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.990500022848915, 1.4106967145664568, 0.5649173013950282] ***
*** starting iteration: 3; err: [Inf, 4.990500022848915, 1.4106967145664568, 0.5649173013950282] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.990500022848915, 1.4106967145664568, 0.5649173013950282, 0.48868058583638957] ***
*** starting iteration: 4; err: [Inf, 4.990500022848915, 1.4106967145664568, 0.5649173013950282, 0.48868058583638957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.990500022848915, 1.4106967145664568, 0.5649173013950282, 0.48868058583638957, 0.4860697185158945] ***
*** starting iteration: 5; err: [Inf, 4.990500022848915, 1.4106967145664568, 0.5649173013950282, 0.48868058583638957, 0.4860697185158945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.990500022848915, 1.4106967145664568, 0.5649173013950282, 0.48868058583638957, 0.4860697185158945, 0.48507068698667993] ***
*** finished computation of 3 references, err: [Inf, 4.990500022848915, 1.4106967145664568, 0.5649173013950282, 0.48868058583638957, 0.4860697185158945, 0.48507068698667993] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 9]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 3, normalized-entropy: 0.2222848306856879, [(2, 1), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.392980212685513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.392980212685513, 0.20568205418574234] ***
*** starting iteration: 2; err: [Inf, 0.392980212685513, 0.20568205418574234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.392980212685513, 0.20568205418574234, 0.20220473194915736] ***
*** starting iteration: 3; err: [Inf, 0.392980212685513, 0.20568205418574234, 0.20220473194915736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.392980212685513, 0.20568205418574234, 0.20220473194915736, 0.19633592218822252] ***
*** starting iteration: 4; err: [Inf, 0.392980212685513, 0.20568205418574234, 0.20220473194915736, 0.19633592218822252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.392980212685513, 0.20568205418574234, 0.20220473194915736, 0.19633592218822252, 0.1950560138082975] ***
*** starting iteration: 5; err: [Inf, 0.392980212685513, 0.20568205418574234, 0.20220473194915736, 0.19633592218822252, 0.1950560138082975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.392980212685513, 0.20568205418574234, 0.20220473194915736, 0.19633592218822252, 0.1950560138082975, 0.19300137699640804] ***
*** starting iteration: 6; err: [Inf, 0.392980212685513, 0.20568205418574234, 0.20220473194915736, 0.19633592218822252, 0.1950560138082975, 0.19300137699640804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.392980212685513, 0.20568205418574234, 0.20220473194915736, 0.19633592218822252, 0.1950560138082975, 0.19300137699640804, 0.19056182506424035] ***
*** starting iteration: 7; err: [Inf, 0.392980212685513, 0.20568205418574234, 0.20220473194915736, 0.19633592218822252, 0.1950560138082975, 0.19300137699640804, 0.19056182506424035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.392980212685513, 0.20568205418574234, 0.20220473194915736, 0.19633592218822252, 0.1950560138082975, 0.19300137699640804, 0.19056182506424035, 0.18691015200580618] ***
*** starting iteration: 8; err: [Inf, 0.392980212685513, 0.20568205418574234, 0.20220473194915736, 0.19633592218822252, 0.1950560138082975, 0.19300137699640804, 0.19056182506424035, 0.18691015200580618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.392980212685513, 0.20568205418574234, 0.20220473194915736, 0.19633592218822252, 0.1950560138082975, 0.19300137699640804, 0.19056182506424035, 0.18691015200580618, 0.18691015200580618] ***
*** finished computation of 7 references, err: [Inf, 0.392980212685513, 0.20568205418574234, 0.20220473194915736, 0.19633592218822252, 0.1950560138082975, 0.19300137699640804, 0.19056182506424035, 0.18691015200580618, 0.18691015200580618] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 7, 21]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 7), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 21, 2]]
** centroid: 7, normalized-entropy: 0.42622865699814483, [(2, 21), (3, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3171068038235679] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3171068038235679, 0.16815204081549062] ***
*** starting iteration: 2; err: [Inf, 0.3171068038235679, 0.16815204081549062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3171068038235679, 0.16815204081549062, 0.1583582814045693] ***
*** starting iteration: 3; err: [Inf, 0.3171068038235679, 0.16815204081549062, 0.1583582814045693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3171068038235679, 0.16815204081549062, 0.1583582814045693, 0.15811472393424061] ***
*** finished computation of 7 references, err: [Inf, 0.3171068038235679, 0.16815204081549062, 0.1583582814045693, 0.15811472393424061] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 13, 8]]
** centroid: 7, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49955197370276994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49955197370276994, 0.1775464429617607] ***
*** starting iteration: 2; err: [Inf, 0.49955197370276994, 0.1775464429617607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352] ***
*** starting iteration: 3; err: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188] ***
*** starting iteration: 4; err: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728] ***
*** starting iteration: 5; err: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728, 0.15679238274626114] ***
*** starting iteration: 6; err: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728, 0.15679238274626114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728, 0.15679238274626114, 0.15471169923314299] ***
*** starting iteration: 7; err: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728, 0.15679238274626114, 0.15471169923314299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728, 0.15679238274626114, 0.15471169923314299, 0.15471169923314299] ***
*** finished computation of 7 references, err: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728, 0.15679238274626114, 0.15471169923314299, 0.15471169923314299] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 6]]
** centroid: 4, normalized-entropy: 0.8812908992306927, [(2, 14), (3, 6)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 7: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40076447103599533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40076447103599533, 0.20653001206875776] ***
*** starting iteration: 2; err: [Inf, 0.40076447103599533, 0.20653001206875776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40076447103599533, 0.20653001206875776, 0.19726152900339744] ***
*** starting iteration: 3; err: [Inf, 0.40076447103599533, 0.20653001206875776, 0.19726152900339744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40076447103599533, 0.20653001206875776, 0.19726152900339744, 0.1950560138082975] ***
*** starting iteration: 4; err: [Inf, 0.40076447103599533, 0.20653001206875776, 0.19726152900339744, 0.1950560138082975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40076447103599533, 0.20653001206875776, 0.19726152900339744, 0.1950560138082975, 0.19300137699640804] ***
*** starting iteration: 5; err: [Inf, 0.40076447103599533, 0.20653001206875776, 0.19726152900339744, 0.1950560138082975, 0.19300137699640804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40076447103599533, 0.20653001206875776, 0.19726152900339744, 0.1950560138082975, 0.19300137699640804, 0.19056182506424035] ***
*** starting iteration: 6; err: [Inf, 0.40076447103599533, 0.20653001206875776, 0.19726152900339744, 0.1950560138082975, 0.19300137699640804, 0.19056182506424035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40076447103599533, 0.20653001206875776, 0.19726152900339744, 0.1950560138082975, 0.19300137699640804, 0.19056182506424035, 0.18691015200580618] ***
*** starting iteration: 7; err: [Inf, 0.40076447103599533, 0.20653001206875776, 0.19726152900339744, 0.1950560138082975, 0.19300137699640804, 0.19056182506424035, 0.18691015200580618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40076447103599533, 0.20653001206875776, 0.19726152900339744, 0.1950560138082975, 0.19300137699640804, 0.19056182506424035, 0.18691015200580618, 0.18691015200580618] ***
*** finished computation of 7 references, err: [Inf, 0.40076447103599533, 0.20653001206875776, 0.19726152900339744, 0.1950560138082975, 0.19300137699640804, 0.19056182506424035, 0.18691015200580618, 0.18691015200580618] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 21]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 7), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 21, 2]]
** centroid: 7, normalized-entropy: 0.42622865699814483, [(2, 21), (3, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37212783589666515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37212783589666515, 0.17016541222412687] ***
*** starting iteration: 2; err: [Inf, 0.37212783589666515, 0.17016541222412687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37212783589666515, 0.17016541222412687, 0.15814328271296316] ***
*** starting iteration: 3; err: [Inf, 0.37212783589666515, 0.17016541222412687, 0.15814328271296316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37212783589666515, 0.17016541222412687, 0.15814328271296316, 0.1581386746621095] ***
*** finished computation of 7 references, err: [Inf, 0.37212783589666515, 0.17016541222412687, 0.15814328271296316, 0.1581386746621095] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 8]]
** centroid: 1, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 5, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1206000081601535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1206000081601535, 0.9875879847315158] ***
*** starting iteration: 2; err: [Inf, 1.1206000081601535, 0.9875879847315158] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258] ***
*** starting iteration: 3; err: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735] ***
*** starting iteration: 4; err: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735, 0.9667635026481867] ***
*** starting iteration: 5; err: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735, 0.9667635026481867] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735, 0.9667635026481867, 0.9641348342800538] ***
*** starting iteration: 6; err: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735, 0.9667635026481867, 0.9641348342800538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735, 0.9667635026481867, 0.9641348342800538, 0.9630082799920239] ***
*** starting iteration: 7; err: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735, 0.9667635026481867, 0.9641348342800538, 0.9630082799920239] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735, 0.9667635026481867, 0.9641348342800538, 0.9630082799920239, 0.9598146467068662] ***
*** starting iteration: 8; err: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735, 0.9667635026481867, 0.9641348342800538, 0.9630082799920239, 0.9598146467068662] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735, 0.9667635026481867, 0.9641348342800538, 0.9630082799920239, 0.9598146467068662, 0.9287151057367561] ***
*** starting iteration: 9; err: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735, 0.9667635026481867, 0.9641348342800538, 0.9630082799920239, 0.9598146467068662, 0.9287151057367561] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735, 0.9667635026481867, 0.9641348342800538, 0.9630082799920239, 0.9598146467068662, 0.9287151057367561, 0.7874121769789739] ***
*** starting iteration: 10; err: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735, 0.9667635026481867, 0.9641348342800538, 0.9630082799920239, 0.9598146467068662, 0.9287151057367561, 0.7874121769789739] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735, 0.9667635026481867, 0.9641348342800538, 0.9630082799920239, 0.9598146467068662, 0.9287151057367561, 0.7874121769789739, 0.6148957533080123] ***
*** finished computation of 3 references, err: [Inf, 1.1206000081601535, 0.9875879847315158, 0.9809915896622258, 0.970861922416735, 0.9667635026481867, 0.9641348342800538, 0.9630082799920239, 0.9598146467068662, 0.9287151057367561, 0.7874121769789739, 0.6148957533080123] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 32]]
** centroid: 3, normalized-entropy: 0.9034535552068337, [(2, 15), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7198000149172341] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7198000149172341, 0.4707669272876997] ***
*** starting iteration: 2; err: [Inf, 0.7198000149172341, 0.4707669272876997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7198000149172341, 0.4707669272876997, 0.36657083195751883] ***
*** starting iteration: 3; err: [Inf, 0.7198000149172341, 0.4707669272876997, 0.36657083195751883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7198000149172341, 0.4707669272876997, 0.36657083195751883, 0.32248830969488806] ***
*** starting iteration: 4; err: [Inf, 0.7198000149172341, 0.4707669272876997, 0.36657083195751883, 0.32248830969488806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7198000149172341, 0.4707669272876997, 0.36657083195751883, 0.32248830969488806, 0.30178487852773306] ***
*** starting iteration: 5; err: [Inf, 0.7198000149172341, 0.4707669272876997, 0.36657083195751883, 0.32248830969488806, 0.30178487852773306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7198000149172341, 0.4707669272876997, 0.36657083195751883, 0.32248830969488806, 0.30178487852773306, 0.29244730849231737] ***
*** starting iteration: 6; err: [Inf, 0.7198000149172341, 0.4707669272876997, 0.36657083195751883, 0.32248830969488806, 0.30178487852773306, 0.29244730849231737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7198000149172341, 0.4707669272876997, 0.36657083195751883, 0.32248830969488806, 0.30178487852773306, 0.29244730849231737, 0.29116457437358273] ***
*** starting iteration: 7; err: [Inf, 0.7198000149172341, 0.4707669272876997, 0.36657083195751883, 0.32248830969488806, 0.30178487852773306, 0.29244730849231737, 0.29116457437358273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7198000149172341, 0.4707669272876997, 0.36657083195751883, 0.32248830969488806, 0.30178487852773306, 0.29244730849231737, 0.29116457437358273, 0.29116457437358273] ***
*** finished computation of 7 references, err: [Inf, 0.7198000149172341, 0.4707669272876997, 0.36657083195751883, 0.32248830969488806, 0.30178487852773306, 0.29244730849231737, 0.29116457437358273, 0.29116457437358273] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 19]]
** centroid: 5, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4300000091974814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4300000091974814, 0.3297074969496083] ***
*** starting iteration: 2; err: [Inf, 0.4300000091974814, 0.3297074969496083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547] ***
*** starting iteration: 3; err: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547, 0.3181008639447477] ***
*** starting iteration: 4; err: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547, 0.3181008639447477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547, 0.3181008639447477, 0.3095676813287394] ***
*** starting iteration: 5; err: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547, 0.3181008639447477, 0.3095676813287394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547, 0.3181008639447477, 0.3095676813287394, 0.2971176112451831] ***
*** starting iteration: 6; err: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547, 0.3181008639447477, 0.3095676813287394, 0.2971176112451831] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547, 0.3181008639447477, 0.3095676813287394, 0.2971176112451831, 0.27524526029941676] ***
*** starting iteration: 7; err: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547, 0.3181008639447477, 0.3095676813287394, 0.2971176112451831, 0.27524526029941676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547, 0.3181008639447477, 0.3095676813287394, 0.2971176112451831, 0.27524526029941676, 0.2592916445261052] ***
*** starting iteration: 8; err: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547, 0.3181008639447477, 0.3095676813287394, 0.2971176112451831, 0.27524526029941676, 0.2592916445261052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547, 0.3181008639447477, 0.3095676813287394, 0.2971176112451831, 0.27524526029941676, 0.2592916445261052, 0.25713082050708724] ***
*** starting iteration: 9; err: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547, 0.3181008639447477, 0.3095676813287394, 0.2971176112451831, 0.27524526029941676, 0.2592916445261052, 0.25713082050708724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547, 0.3181008639447477, 0.3095676813287394, 0.2971176112451831, 0.27524526029941676, 0.2592916445261052, 0.25713082050708724, 0.25713082050708724] ***
*** finished computation of 7 references, err: [Inf, 0.4300000091974814, 0.3297074969496083, 0.321089356948547, 0.3181008639447477, 0.3095676813287394, 0.2971176112451831, 0.27524526029941676, 0.2592916445261052, 0.25713082050708724, 0.25713082050708724] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 4]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 4)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6276999958722773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6276999958722773, 0.30653130854954513] ***
*** starting iteration: 2; err: [Inf, 0.6276999958722773, 0.30653130854954513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6276999958722773, 0.30653130854954513, 0.2509174188949656] ***
*** starting iteration: 3; err: [Inf, 0.6276999958722773, 0.30653130854954513, 0.2509174188949656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6276999958722773, 0.30653130854954513, 0.2509174188949656, 0.24507967350604104] ***
*** starting iteration: 4; err: [Inf, 0.6276999958722773, 0.30653130854954513, 0.2509174188949656, 0.24507967350604104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6276999958722773, 0.30653130854954513, 0.2509174188949656, 0.24507967350604104, 0.2439002962121485] ***
*** starting iteration: 5; err: [Inf, 0.6276999958722773, 0.30653130854954513, 0.2509174188949656, 0.24507967350604104, 0.2439002962121485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6276999958722773, 0.30653130854954513, 0.2509174188949656, 0.24507967350604104, 0.2439002962121485, 0.2439002962121485] ***
*** finished computation of 7 references, err: [Inf, 0.6276999958722773, 0.30653130854954513, 0.2509174188949656, 0.24507967350604104, 0.2439002962121485, 0.2439002962121485] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 13]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 7]]
** centroid: 6, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.185790539861522] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.185790539861522, 0.38599064244560183] ***
*** finished computation of 3 references, err: [Inf, 1.185790539861522, 0.38599064244560183] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 36, 13]]
** centroid: 2, normalized-entropy: 0.834648285181383, [(2, 36), (3, 13)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.868904594986107] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.868904594986107, 0.6099720819034634] ***
*** finished computation of 3 references, err: [Inf, 2.868904594986107, 0.6099720819034634] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 7]]
** centroid: 1, normalized-entropy: 0.710676853856123, [(2, 29), (3, 7)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 29]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [33, 2, 0]]
** centroid: 3, normalized-entropy: 0.3159971329784246, [(1, 33), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0719404870819207] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0719404870819207, 0.6944748203419069] ***
*** finished computation of 3 references, err: [Inf, 1.0719404870819207, 0.6944748203419069] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 33]]
** centroid: 1, normalized-entropy: 0.9998292601233937, [(2, 32), (3, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [27, 1, 0]]
** centroid: 2, normalized-entropy: 0.2222848306856879, [(1, 27), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8809882342004598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8809882342004598, 0.4587363841632366] ***
*** starting iteration: 2; err: [Inf, 0.8809882342004598, 0.4587363841632366] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8809882342004598, 0.4587363841632366, 0.4294101392795811] ***
*** starting iteration: 3; err: [Inf, 0.8809882342004598, 0.4587363841632366, 0.4294101392795811] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8809882342004598, 0.4587363841632366, 0.4294101392795811, 0.41721588705249546] ***
*** finished computation of 3 references, err: [Inf, 0.8809882342004598, 0.4587363841632366, 0.4294101392795811, 0.41721588705249546] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 30]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 12), (3, 30)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 1]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 24), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9311245251789245] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9311245251789245, 0.6304341258354483] ***
*** starting iteration: 2; err: [Inf, 0.9311245251789245, 0.6304341258354483] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9311245251789245, 0.6304341258354483, 0.6304341258354483] ***
*** finished computation of 3 references, err: [Inf, 0.9311245251789245, 0.6304341258354483, 0.6304341258354483] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 36]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(2, 30), (3, 36)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [21, 1, 0]]
** centroid: 2, normalized-entropy: 0.2667649878030262, [(1, 21), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0266566447864485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0266566447864485, 0.6668506937486395] ***
*** starting iteration: 2; err: [Inf, 1.0266566447864485, 0.6668506937486395] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0266566447864485, 0.6668506937486395, 0.6580716835775914] ***
*** starting iteration: 3; err: [Inf, 1.0266566447864485, 0.6668506937486395, 0.6580716835775914] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0266566447864485, 0.6668506937486395, 0.6580716835775914, 0.6563929651243171] ***
*** finished computation of 3 references, err: [Inf, 1.0266566447864485, 0.6668506937486395, 0.6580716835775914, 0.6563929651243171] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 33]]
** centroid: 1, normalized-entropy: 0.998363672593813, [(2, 30), (3, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [15, 3, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 15), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.29303358320176803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29303358320176803, 0.18472872869883317] ***
*** starting iteration: 2; err: [Inf, 0.29303358320176803, 0.18472872869883317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29303358320176803, 0.18472872869883317, 0.1805093550238189] ***
*** starting iteration: 3; err: [Inf, 0.29303358320176803, 0.18472872869883317, 0.1805093550238189] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29303358320176803, 0.18472872869883317, 0.1805093550238189, 0.1782299261817575] ***
*** finished computation of 7 references, err: [Inf, 0.29303358320176803, 0.18472872869883317, 0.1805093550238189, 0.1782299261817575] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 11]]
** centroid: 4, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.3566306707938254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3566306707938254, 0.2749934146747954] ***
*** starting iteration: 2; err: [Inf, 3.3566306707938254, 0.2749934146747954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3566306707938254, 0.2749934146747954, 0.1939437026792746] ***
*** starting iteration: 3; err: [Inf, 3.3566306707938254, 0.2749934146747954, 0.1939437026792746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3566306707938254, 0.2749934146747954, 0.1939437026792746, 0.18673938699763284] ***
*** finished computation of 7 references, err: [Inf, 3.3566306707938254, 0.2749934146747954, 0.1939437026792746, 0.18673938699763284] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 5]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 12, 3]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6343468384230398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6343468384230398, 0.3177747178705705] ***
*** starting iteration: 2; err: [Inf, 0.6343468384230398, 0.3177747178705705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6343468384230398, 0.3177747178705705, 0.30429568766036896] ***
*** starting iteration: 3; err: [Inf, 0.6343468384230398, 0.3177747178705705, 0.30429568766036896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6343468384230398, 0.3177747178705705, 0.30429568766036896, 0.2748461497369286] ***
*** finished computation of 7 references, err: [Inf, 0.6343468384230398, 0.3177747178705705, 0.30429568766036896, 0.2748461497369286] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 27, 6]]
** centroid: 6, normalized-entropy: 0.6840384356390419, [(2, 27), (3, 6)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 7, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.311645362445079] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.311645362445079, 0.7800700787054275] ***
*** starting iteration: 2; err: [Inf, 4.311645362445079, 0.7800700787054275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.311645362445079, 0.7800700787054275, 0.4165841791028957] ***
*** starting iteration: 3; err: [Inf, 4.311645362445079, 0.7800700787054275, 0.4165841791028957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.311645362445079, 0.7800700787054275, 0.4165841791028957, 0.3986583578144392] ***
*** finished computation of 3 references, err: [Inf, 4.311645362445079, 0.7800700787054275, 0.4165841791028957, 0.3986583578144392] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 36, 16]]
** centroid: 2, normalized-entropy: 0.8904916402194913, [(2, 36), (3, 16)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8207674284146935] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8207674284146935, 0.3448881631492465] ***
*** starting iteration: 2; err: [Inf, 0.8207674284146935, 0.3448881631492465] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8207674284146935, 0.3448881631492465, 0.3420981421212352] ***
*** starting iteration: 3; err: [Inf, 0.8207674284146935, 0.3448881631492465, 0.3420981421212352] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8207674284146935, 0.3448881631492465, 0.3420981421212352, 0.3420981421212352] ***
*** finished computation of 3 references, err: [Inf, 0.8207674284146935, 0.3448881631492465, 0.3420981421212352, 0.3420981421212352] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6097228215152308] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6097228215152308, 0.4758136000370832] ***
*** starting iteration: 2; err: [Inf, 1.6097228215152308, 0.4758136000370832] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6097228215152308, 0.4758136000370832, 0.3841567427974961] ***
*** starting iteration: 3; err: [Inf, 1.6097228215152308, 0.4758136000370832, 0.3841567427974961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6097228215152308, 0.4758136000370832, 0.3841567427974961, 0.370814269609548] ***
*** finished computation of 3 references, err: [Inf, 1.6097228215152308, 0.4758136000370832, 0.3841567427974961, 0.370814269609548] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 7]]
** centroid: 3, normalized-entropy: 0.6892019851173655, [(2, 31), (3, 7)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.803199995639071] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.803199995639071, 1.6342106439510655] ***
*** starting iteration: 2; err: [Inf, 3.803199995639071, 1.6342106439510655] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.803199995639071, 1.6342106439510655, 0.5598882154340785] ***
*** starting iteration: 3; err: [Inf, 3.803199995639071, 1.6342106439510655, 0.5598882154340785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.803199995639071, 1.6342106439510655, 0.5598882154340785, 0.543509086938039] ***
*** starting iteration: 4; err: [Inf, 3.803199995639071, 1.6342106439510655, 0.5598882154340785, 0.543509086938039] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.803199995639071, 1.6342106439510655, 0.5598882154340785, 0.543509086938039, 0.543509086938039] ***
*** finished computation of 3 references, err: [Inf, 3.803199995639071, 1.6342106439510655, 0.5598882154340785, 0.543509086938039, 0.543509086938039] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 11]]
** centroid: 1, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 20]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2451999944773269] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2451999944773269, 0.5767486598194617] ***
*** starting iteration: 2; err: [Inf, 1.2451999944773269, 0.5767486598194617] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2451999944773269, 0.5767486598194617, 0.4961807157627338] ***
*** starting iteration: 3; err: [Inf, 1.2451999944773269, 0.5767486598194617, 0.4961807157627338] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2451999944773269, 0.5767486598194617, 0.4961807157627338, 0.4860697185158945] ***
*** starting iteration: 4; err: [Inf, 1.2451999944773269, 0.5767486598194617, 0.4961807157627338, 0.4860697185158945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2451999944773269, 0.5767486598194617, 0.4961807157627338, 0.4860697185158945, 0.48507068698667993] ***
*** finished computation of 3 references, err: [Inf, 1.2451999944773269, 0.5767486598194617, 0.4961807157627338, 0.4860697185158945, 0.48507068698667993] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.706299994197589] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.706299994197589, 0.9151448424850961] ***
*** starting iteration: 2; err: [Inf, 2.706299994197589, 0.9151448424850961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.706299994197589, 0.9151448424850961, 0.6262174105757146] ***
*** starting iteration: 3; err: [Inf, 2.706299994197589, 0.9151448424850961, 0.6262174105757146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.706299994197589, 0.9151448424850961, 0.6262174105757146, 0.5513578840337537] ***
*** starting iteration: 4; err: [Inf, 2.706299994197589, 0.9151448424850961, 0.6262174105757146, 0.5513578840337537] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.706299994197589, 0.9151448424850961, 0.6262174105757146, 0.5513578840337537, 0.5356167710990322] ***
*** starting iteration: 5; err: [Inf, 2.706299994197589, 0.9151448424850961, 0.6262174105757146, 0.5513578840337537, 0.5356167710990322] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.706299994197589, 0.9151448424850961, 0.6262174105757146, 0.5513578840337537, 0.5356167710990322, 0.5301049090131005] ***
*** starting iteration: 6; err: [Inf, 2.706299994197589, 0.9151448424850961, 0.6262174105757146, 0.5513578840337537, 0.5356167710990322, 0.5301049090131005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.706299994197589, 0.9151448424850961, 0.6262174105757146, 0.5513578840337537, 0.5356167710990322, 0.5301049090131005, 0.5301049090131005] ***
*** finished computation of 3 references, err: [Inf, 2.706299994197589, 0.9151448424850961, 0.6262174105757146, 0.5513578840337537, 0.5356167710990322, 0.5301049090131005, 0.5301049090131005] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 32]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 32)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.780000019729036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.780000019729036, 0.4810017913289543] ***
*** starting iteration: 2; err: [Inf, 0.780000019729036, 0.4810017913289543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.780000019729036, 0.4810017913289543, 0.4253016046189711] ***
*** starting iteration: 3; err: [Inf, 0.780000019729036, 0.4810017913289543, 0.4253016046189711] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.780000019729036, 0.4810017913289543, 0.4253016046189711, 0.3080242812036806] ***
*** finished computation of 7 references, err: [Inf, 0.780000019729036, 0.4810017913289543, 0.4253016046189711, 0.3080242812036806] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 21, 5]]
** centroid: 3, normalized-entropy: 0.7062740891876008, [(2, 21), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 16]]
** centroid: 4, normalized-entropy: 0.6292492238560344, [(2, 3), (3, 16)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9719000183845218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9719000183845218, 0.33237582586272796] ***
*** starting iteration: 2; err: [Inf, 0.9719000183845218, 0.33237582586272796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9719000183845218, 0.33237582586272796, 0.2994971273041322] ***
*** starting iteration: 3; err: [Inf, 0.9719000183845218, 0.33237582586272796, 0.2994971273041322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9719000183845218, 0.33237582586272796, 0.2994971273041322, 0.2962021776933817] ***
*** finished computation of 7 references, err: [Inf, 0.9719000183845218, 0.33237582586272796, 0.2994971273041322, 0.2962021776933817] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 2, 1]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.803499990037584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.803499990037584, 0.4729259909852128] ***
*** starting iteration: 2; err: [Inf, 0.803499990037584, 0.4729259909852128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.803499990037584, 0.4729259909852128, 0.3539649609728539] ***
*** starting iteration: 3; err: [Inf, 0.803499990037584, 0.4729259909852128, 0.3539649609728539] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.803499990037584, 0.4729259909852128, 0.3539649609728539, 0.27025133017094677] ***
*** finished computation of 7 references, err: [Inf, 0.803499990037584, 0.4729259909852128, 0.3539649609728539, 0.27025133017094677] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 11, 17]]
** centroid: 6, normalized-entropy: 0.9666186325481027, [(2, 11), (3, 17)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.8797000169287545] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8797000169287545, 0.791647272219604] ***
*** finished computation of 3 references, err: [Inf, 1.8797000169287545, 0.791647272219604] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 26, 31]]
** centroid: 3, normalized-entropy: 0.9944423248022589, [(2, 26), (3, 31)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0156000109039303] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0156000109039303, 0.5343280728749009] ***
*** finished computation of 3 references, err: [Inf, 1.0156000109039303, 0.5343280728749009] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 3]]
** centroid: 1, normalized-entropy: 0.45868581620054033, [(2, 28), (3, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 33]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 3), (3, 33)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8836000008652881] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8836000008652881, 0.5352779372701139] ***
*** finished computation of 3 references, err: [Inf, 0.8836000008652881, 0.5352779372701139] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 4]]
** centroid: 2, normalized-entropy: 0.5225593745369407, [(2, 30), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 29]]
** centroid: 3, normalized-entropy: 0.44886448872302936, [(2, 3), (3, 29)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8435000041169567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8435000041169567, 0.5826425363304145] ***
*** starting iteration: 2; err: [Inf, 0.8435000041169567, 0.5826425363304145] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8435000041169567, 0.5826425363304145, 0.5639182060749462] ***
*** starting iteration: 3; err: [Inf, 0.8435000041169567, 0.5826425363304145, 0.5639182060749462] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8435000041169567, 0.5826425363304145, 0.5639182060749462, 0.5481718614135201] ***
*** starting iteration: 4; err: [Inf, 0.8435000041169567, 0.5826425363304145, 0.5639182060749462, 0.5481718614135201] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8435000041169567, 0.5826425363304145, 0.5639182060749462, 0.5481718614135201, 0.5455814923267971] ***
*** starting iteration: 5; err: [Inf, 0.8435000041169567, 0.5826425363304145, 0.5639182060749462, 0.5481718614135201, 0.5455814923267971] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8435000041169567, 0.5826425363304145, 0.5639182060749462, 0.5481718614135201, 0.5455814923267971, 0.5442616117794998] ***
*** starting iteration: 6; err: [Inf, 0.8435000041169567, 0.5826425363304145, 0.5639182060749462, 0.5481718614135201, 0.5455814923267971, 0.5442616117794998] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8435000041169567, 0.5826425363304145, 0.5639182060749462, 0.5481718614135201, 0.5455814923267971, 0.5442616117794998, 0.543509086938039] ***
*** finished computation of 3 references, err: [Inf, 0.8435000041169567, 0.5826425363304145, 0.5639182060749462, 0.5481718614135201, 0.5455814923267971, 0.5442616117794998, 0.543509086938039] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 20]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 11]]
** centroid: 3, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.460799998297573] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.460799998297573, 0.487551432076459] ***
*** starting iteration: 2; err: [Inf, 1.460799998297573, 0.487551432076459] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.460799998297573, 0.487551432076459, 0.48507068698667993] ***
*** starting iteration: 3; err: [Inf, 1.460799998297573, 0.487551432076459, 0.48507068698667993] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.460799998297573, 0.487551432076459, 0.48507068698667993, 0.4841926585920783] ***
*** finished computation of 3 references, err: [Inf, 1.460799998297573, 0.487551432076459, 0.48507068698667993, 0.4841926585920783] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0082999956464884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0082999956464884, 0.5623699710963018] ***
*** starting iteration: 2; err: [Inf, 1.0082999956464884, 0.5623699710963018] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0082999956464884, 0.5623699710963018, 0.5393337875572974] ***
*** starting iteration: 3; err: [Inf, 1.0082999956464884, 0.5623699710963018, 0.5393337875572974] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0082999956464884, 0.5623699710963018, 0.5393337875572974, 0.5308757002730136] ***
*** starting iteration: 4; err: [Inf, 1.0082999956464884, 0.5623699710963018, 0.5393337875572974, 0.5308757002730136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0082999956464884, 0.5623699710963018, 0.5393337875572974, 0.5308757002730136, 0.5301049090131005] ***
*** finished computation of 3 references, err: [Inf, 1.0082999956464884, 0.5623699710963018, 0.5393337875572974, 0.5308757002730136, 0.5301049090131005] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 32]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8746422221121296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8746422221121296, 0.4237273019622559] ***
*** starting iteration: 2; err: [Inf, 0.8746422221121296, 0.4237273019622559] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8746422221121296, 0.4237273019622559, 0.41721588705249546] ***
*** starting iteration: 3; err: [Inf, 0.8746422221121296, 0.4237273019622559, 0.41721588705249546] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8746422221121296, 0.4237273019622559, 0.41721588705249546, 0.41315570901140913] ***
*** finished computation of 3 references, err: [Inf, 0.8746422221121296, 0.4237273019622559, 0.41721588705249546, 0.41315570901140913] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 30]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 10), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 26, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7165580086998896] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7165580086998896, 0.4365825786431269] ***
*** starting iteration: 2; err: [Inf, 0.7165580086998896, 0.4365825786431269] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7165580086998896, 0.4365825786431269, 0.373066641002836] ***
*** starting iteration: 3; err: [Inf, 0.7165580086998896, 0.4365825786431269, 0.373066641002836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7165580086998896, 0.4365825786431269, 0.373066641002836, 0.3485140476421967] ***
*** finished computation of 3 references, err: [Inf, 0.7165580086998896, 0.4365825786431269, 0.373066641002836, 0.3485140476421967] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 1, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 27]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6672553645379208] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6672553645379208, 0.37134912807417153] ***
*** starting iteration: 2; err: [Inf, 0.6672553645379208, 0.37134912807417153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6672553645379208, 0.37134912807417153, 0.35991903210484666] ***
*** starting iteration: 3; err: [Inf, 0.6672553645379208, 0.37134912807417153, 0.35991903210484666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6672553645379208, 0.37134912807417153, 0.35991903210484666, 0.3562630970846054] ***
*** finished computation of 3 references, err: [Inf, 0.6672553645379208, 0.37134912807417153, 0.35991903210484666, 0.3562630970846054] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 32]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4985999903032228] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4985999903032228, 0.6061058899436876] ***
*** starting iteration: 2; err: [Inf, 1.4985999903032228, 0.6061058899436876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4985999903032228, 0.6061058899436876, 0.5772098518730696] ***
*** starting iteration: 3; err: [Inf, 1.4985999903032228, 0.6061058899436876, 0.5772098518730696] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4985999903032228, 0.6061058899436876, 0.5772098518730696, 0.5583208132582311] ***
*** starting iteration: 4; err: [Inf, 1.4985999903032228, 0.6061058899436876, 0.5772098518730696, 0.5583208132582311] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4985999903032228, 0.6061058899436876, 0.5772098518730696, 0.5583208132582311, 0.5481718614135201] ***
*** starting iteration: 5; err: [Inf, 1.4985999903032228, 0.6061058899436876, 0.5772098518730696, 0.5583208132582311, 0.5481718614135201] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4985999903032228, 0.6061058899436876, 0.5772098518730696, 0.5583208132582311, 0.5481718614135201, 0.5455814923267971] ***
*** starting iteration: 6; err: [Inf, 1.4985999903032228, 0.6061058899436876, 0.5772098518730696, 0.5583208132582311, 0.5481718614135201, 0.5455814923267971] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4985999903032228, 0.6061058899436876, 0.5772098518730696, 0.5583208132582311, 0.5481718614135201, 0.5455814923267971, 0.5442616117794998] ***
*** starting iteration: 7; err: [Inf, 1.4985999903032228, 0.6061058899436876, 0.5772098518730696, 0.5583208132582311, 0.5481718614135201, 0.5455814923267971, 0.5442616117794998] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4985999903032228, 0.6061058899436876, 0.5772098518730696, 0.5583208132582311, 0.5481718614135201, 0.5455814923267971, 0.5442616117794998, 0.543509086938039] ***
*** finished computation of 3 references, err: [Inf, 1.4985999903032228, 0.6061058899436876, 0.5772098518730696, 0.5583208132582311, 0.5481718614135201, 0.5455814923267971, 0.5442616117794998, 0.543509086938039] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 11]]
** centroid: 1, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 20]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0817999999513424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0817999999513424, 0.563939018271044] ***
*** starting iteration: 2; err: [Inf, 1.0817999999513424, 0.563939018271044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0817999999513424, 0.563939018271044, 0.5384601944755727] ***
*** starting iteration: 3; err: [Inf, 1.0817999999513424, 0.563939018271044, 0.5384601944755727] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0817999999513424, 0.563939018271044, 0.5384601944755727, 0.5129222818734088] ***
*** starting iteration: 4; err: [Inf, 1.0817999999513424, 0.563939018271044, 0.5384601944755727, 0.5129222818734088] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0817999999513424, 0.563939018271044, 0.5384601944755727, 0.5129222818734088, 0.5034621679392317] ***
*** starting iteration: 5; err: [Inf, 1.0817999999513424, 0.563939018271044, 0.5384601944755727, 0.5129222818734088, 0.5034621679392317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0817999999513424, 0.563939018271044, 0.5384601944755727, 0.5129222818734088, 0.5034621679392317, 0.4892726479969042] ***
*** starting iteration: 6; err: [Inf, 1.0817999999513424, 0.563939018271044, 0.5384601944755727, 0.5129222818734088, 0.5034621679392317, 0.4892726479969042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0817999999513424, 0.563939018271044, 0.5384601944755727, 0.5129222818734088, 0.5034621679392317, 0.4892726479969042, 0.4841926585920783] ***
*** starting iteration: 7; err: [Inf, 1.0817999999513424, 0.563939018271044, 0.5384601944755727, 0.5129222818734088, 0.5034621679392317, 0.4892726479969042, 0.4841926585920783] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0817999999513424, 0.563939018271044, 0.5384601944755727, 0.5129222818734088, 0.5034621679392317, 0.4892726479969042, 0.4841926585920783, 0.4841926585920783] ***
*** finished computation of 3 references, err: [Inf, 1.0817999999513424, 0.563939018271044, 0.5384601944755727, 0.5129222818734088, 0.5034621679392317, 0.4892726479969042, 0.4841926585920783, 0.4841926585920783] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 1, normalized-entropy: 0.2222848306856879, [(2, 1), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 9]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6656000001636522] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6656000001636522, 0.5676260986825835] ***
*** starting iteration: 2; err: [Inf, 1.6656000001636522, 0.5676260986825835] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6656000001636522, 0.5676260986825835, 0.5399534989061441] ***
*** starting iteration: 3; err: [Inf, 1.6656000001636522, 0.5676260986825835, 0.5399534989061441] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6656000001636522, 0.5676260986825835, 0.5399534989061441, 0.5364032867626678] ***
*** starting iteration: 4; err: [Inf, 1.6656000001636522, 0.5676260986825835, 0.5399534989061441, 0.5364032867626678] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6656000001636522, 0.5676260986825835, 0.5399534989061441, 0.5364032867626678, 0.5341507081670414] ***
*** starting iteration: 5; err: [Inf, 1.6656000001636522, 0.5676260986825835, 0.5399534989061441, 0.5364032867626678, 0.5341507081670414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6656000001636522, 0.5676260986825835, 0.5399534989061441, 0.5364032867626678, 0.5341507081670414, 0.5341507081670414] ***
*** finished computation of 3 references, err: [Inf, 1.6656000001636522, 0.5676260986825835, 0.5399534989061441, 0.5364032867626678, 0.5341507081670414, 0.5341507081670414] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 7]]
** centroid: 3, normalized-entropy: 0.6892019851173655, [(2, 31), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1022000019065177] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1022000019065177, 0.6061058899436876] ***
*** starting iteration: 2; err: [Inf, 1.1022000019065177, 0.6061058899436876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1022000019065177, 0.6061058899436876, 0.5772098518730696] ***
*** starting iteration: 3; err: [Inf, 1.1022000019065177, 0.6061058899436876, 0.5772098518730696] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1022000019065177, 0.6061058899436876, 0.5772098518730696, 0.5583208132582311] ***
*** finished computation of 3 references, err: [Inf, 1.1022000019065177, 0.6061058899436876, 0.5772098518730696, 0.5583208132582311] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 13]]
** centroid: 1, normalized-entropy: 0.834648285181383, [(2, 36), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9575000027504403] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9575000027504403, 0.574636928278047] ***
*** starting iteration: 2; err: [Inf, 0.9575000027504403, 0.574636928278047] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9575000027504403, 0.574636928278047, 0.4961807157627338] ***
*** starting iteration: 3; err: [Inf, 0.9575000027504403, 0.574636928278047, 0.4961807157627338] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9575000027504403, 0.574636928278047, 0.4961807157627338, 0.4860697185158945] ***
*** finished computation of 3 references, err: [Inf, 0.9575000027504403, 0.574636928278047, 0.4961807157627338, 0.4860697185158945] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 10]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 30), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0915999965998953] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0915999965998953, 0.6362611792181778] ***
*** starting iteration: 2; err: [Inf, 1.0915999965998953, 0.6362611792181778] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0915999965998953, 0.6362611792181778, 0.5676260986825835] ***
*** starting iteration: 3; err: [Inf, 1.0915999965998953, 0.6362611792181778, 0.5676260986825835] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0915999965998953, 0.6362611792181778, 0.5676260986825835, 0.5399534989061441] ***
*** finished computation of 3 references, err: [Inf, 1.0915999965998953, 0.6362611792181778, 0.5676260986825835, 0.5399534989061441] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 3, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.49955197370276994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49955197370276994, 0.1775464429617607] ***
*** starting iteration: 2; err: [Inf, 0.49955197370276994, 0.1775464429617607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352] ***
*** starting iteration: 3; err: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188] ***
*** starting iteration: 4; err: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728] ***
*** starting iteration: 5; err: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728, 0.15679238274626114] ***
*** starting iteration: 6; err: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728, 0.15679238274626114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728, 0.15679238274626114, 0.15471169923314299] ***
*** starting iteration: 7; err: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728, 0.15679238274626114, 0.15471169923314299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728, 0.15679238274626114, 0.15471169923314299, 0.15471169923314299] ***
*** finished computation of 7 references, err: [Inf, 0.49955197370276994, 0.1775464429617607, 0.1730513237256352, 0.16582423390474188, 0.1581091000273728, 0.15679238274626114, 0.15471169923314299, 0.15471169923314299] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 6]]
** centroid: 4, normalized-entropy: 0.8812908992306927, [(2, 14), (3, 6)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5601000051881105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5601000051881105, 0.29140532833970306] ***
*** finished computation of 7 references, err: [Inf, 0.5601000051881105, 0.29140532833970306] ***
*** center 1: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 7]]
** centroid: 3, normalized-entropy: 0.7973265101474423, [(2, 22), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 5, 16]]
** centroid: 4, normalized-entropy: 0.7918583525674836, [(2, 5), (3, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5425999977768393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5425999977768393, 0.25629924994127307] ***
*** finished computation of 7 references, err: [Inf, 0.5425999977768393, 0.25629924994127307] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 10]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6223000008509962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6223000008509962, 0.235334082008904] ***
*** finished computation of 7 references, err: [Inf, 0.6223000008509962, 0.235334082008904] ***
*** center 1: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 7]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.98
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.5732000061231564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5732000061231564, 0.3001609686963172] ***
*** starting iteration: 2; err: [Inf, 0.5732000061231564, 0.3001609686963172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5732000061231564, 0.3001609686963172, 0.2717427703299186] ***
*** starting iteration: 3; err: [Inf, 0.5732000061231564, 0.3001609686963172, 0.2717427703299186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5732000061231564, 0.3001609686963172, 0.2717427703299186, 0.25468050721403435] ***
*** starting iteration: 4; err: [Inf, 0.5732000061231564, 0.3001609686963172, 0.2717427703299186, 0.25468050721403435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5732000061231564, 0.3001609686963172, 0.2717427703299186, 0.25468050721403435, 0.25099059974325477] ***
*** starting iteration: 5; err: [Inf, 0.5732000061231564, 0.3001609686963172, 0.2717427703299186, 0.25468050721403435, 0.25099059974325477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5732000061231564, 0.3001609686963172, 0.2717427703299186, 0.25468050721403435, 0.25099059974325477, 0.24714633270817854] ***
*** starting iteration: 6; err: [Inf, 0.5732000061231564, 0.3001609686963172, 0.2717427703299186, 0.25468050721403435, 0.25099059974325477, 0.24714633270817854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5732000061231564, 0.3001609686963172, 0.2717427703299186, 0.25468050721403435, 0.25099059974325477, 0.24714633270817854, 0.24579539599667244] ***
*** starting iteration: 7; err: [Inf, 0.5732000061231564, 0.3001609686963172, 0.2717427703299186, 0.25468050721403435, 0.25099059974325477, 0.24714633270817854, 0.24579539599667244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5732000061231564, 0.3001609686963172, 0.2717427703299186, 0.25468050721403435, 0.25099059974325477, 0.24714633270817854, 0.24579539599667244, 0.24579539599667244] ***
*** finished computation of 7 references, err: [Inf, 0.5732000061231564, 0.3001609686963172, 0.2717427703299186, 0.25468050721403435, 0.25099059974325477, 0.24714633270817854, 0.24579539599667244, 0.24579539599667244] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 10]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 20), (3, 10)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 13]]
** centroid: 4, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5342000058940074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5342000058940074, 0.2793060928261978] ***
*** starting iteration: 2; err: [Inf, 0.5342000058940074, 0.2793060928261978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5342000058940074, 0.2793060928261978, 0.26360219311346655] ***
*** starting iteration: 3; err: [Inf, 0.5342000058940074, 0.2793060928261978, 0.26360219311346655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5342000058940074, 0.2793060928261978, 0.26360219311346655, 0.2525524090950892] ***
*** starting iteration: 4; err: [Inf, 0.5342000058940074, 0.2793060928261978, 0.26360219311346655, 0.2525524090950892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5342000058940074, 0.2793060928261978, 0.26360219311346655, 0.2525524090950892, 0.24479038525081578] ***
*** starting iteration: 5; err: [Inf, 0.5342000058940074, 0.2793060928261978, 0.26360219311346655, 0.2525524090950892, 0.24479038525081578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5342000058940074, 0.2793060928261978, 0.26360219311346655, 0.2525524090950892, 0.24479038525081578, 0.24317577974626484] ***
*** starting iteration: 6; err: [Inf, 0.5342000058940074, 0.2793060928261978, 0.26360219311346655, 0.2525524090950892, 0.24479038525081578, 0.24317577974626484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5342000058940074, 0.2793060928261978, 0.26360219311346655, 0.2525524090950892, 0.24479038525081578, 0.24317577974626484, 0.24113916908450686] ***
*** starting iteration: 7; err: [Inf, 0.5342000058940074, 0.2793060928261978, 0.26360219311346655, 0.2525524090950892, 0.24479038525081578, 0.24317577974626484, 0.24113916908450686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5342000058940074, 0.2793060928261978, 0.26360219311346655, 0.2525524090950892, 0.24479038525081578, 0.24317577974626484, 0.24113916908450686, 0.24064535571888654] ***
*** finished computation of 7 references, err: [Inf, 0.5342000058940074, 0.2793060928261978, 0.26360219311346655, 0.2525524090950892, 0.24479038525081578, 0.24317577974626484, 0.24113916908450686, 0.24064535571888654] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 6]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 12), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 6]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 5, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5145000107815036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5145000107815036, 0.2452904475884564] ***
*** starting iteration: 2; err: [Inf, 0.5145000107815036, 0.2452904475884564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5145000107815036, 0.2452904475884564, 0.23181962173958642] ***
*** starting iteration: 3; err: [Inf, 0.5145000107815036, 0.2452904475884564, 0.23181962173958642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5145000107815036, 0.2452904475884564, 0.23181962173958642, 0.22914559549304617] ***
*** starting iteration: 4; err: [Inf, 0.5145000107815036, 0.2452904475884564, 0.23181962173958642, 0.22914559549304617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5145000107815036, 0.2452904475884564, 0.23181962173958642, 0.22914559549304617, 0.22761150432228153] ***
*** starting iteration: 5; err: [Inf, 0.5145000107815036, 0.2452904475884564, 0.23181962173958642, 0.22914559549304617, 0.22761150432228153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5145000107815036, 0.2452904475884564, 0.23181962173958642, 0.22914559549304617, 0.22761150432228153, 0.22761150432228153] ***
*** finished computation of 7 references, err: [Inf, 0.5145000107815036, 0.2452904475884564, 0.23181962173958642, 0.22914559549304617, 0.22761150432228153, 0.22761150432228153] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 14]]
** centroid: 1, normalized-entropy: 0.9456603046006401, [(2, 8), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 6, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.98
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.5010000073276091] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5010000073276091, 0.26550916922554163] ***
*** starting iteration: 2; err: [Inf, 0.5010000073276091, 0.26550916922554163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5010000073276091, 0.26550916922554163, 0.25185588036163487] ***
*** starting iteration: 3; err: [Inf, 0.5010000073276091, 0.26550916922554163, 0.25185588036163487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5010000073276091, 0.26550916922554163, 0.25185588036163487, 0.24655692222516482] ***
*** starting iteration: 4; err: [Inf, 0.5010000073276091, 0.26550916922554163, 0.25185588036163487, 0.24655692222516482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5010000073276091, 0.26550916922554163, 0.25185588036163487, 0.24655692222516482, 0.24547795094053526] ***
*** starting iteration: 5; err: [Inf, 0.5010000073276091, 0.26550916922554163, 0.25185588036163487, 0.24655692222516482, 0.24547795094053526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5010000073276091, 0.26550916922554163, 0.25185588036163487, 0.24655692222516482, 0.24547795094053526, 0.24527516840685237] ***
*** finished computation of 7 references, err: [Inf, 0.5010000073276091, 0.26550916922554163, 0.25185588036163487, 0.24655692222516482, 0.24547795094053526, 0.24527516840685237] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 21, 10]]
** centroid: 1, normalized-entropy: 0.9071657675730821, [(2, 21), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 13]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5554000060106852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5554000060106852, 0.28371786799697774] ***
*** starting iteration: 2; err: [Inf, 0.5554000060106852, 0.28371786799697774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725] ***
*** starting iteration: 3; err: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835] ***
*** starting iteration: 4; err: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835, 0.2505100340871158] ***
*** starting iteration: 5; err: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835, 0.2505100340871158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835, 0.2505100340871158, 0.24936877697253632] ***
*** starting iteration: 6; err: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835, 0.2505100340871158, 0.24936877697253632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835, 0.2505100340871158, 0.24936877697253632, 0.24796329411732315] ***
*** starting iteration: 7; err: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835, 0.2505100340871158, 0.24936877697253632, 0.24796329411732315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835, 0.2505100340871158, 0.24936877697253632, 0.24796329411732315, 0.2454867676515705] ***
*** starting iteration: 8; err: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835, 0.2505100340871158, 0.24936877697253632, 0.24796329411732315, 0.2454867676515705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835, 0.2505100340871158, 0.24936877697253632, 0.24796329411732315, 0.2454867676515705, 0.2443684437441784] ***
*** starting iteration: 9; err: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835, 0.2505100340871158, 0.24936877697253632, 0.24796329411732315, 0.2454867676515705, 0.2443684437441784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835, 0.2505100340871158, 0.24936877697253632, 0.24796329411732315, 0.2454867676515705, 0.2443684437441784, 0.242561928633556] ***
*** starting iteration: 10; err: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835, 0.2505100340871158, 0.24936877697253632, 0.24796329411732315, 0.2454867676515705, 0.2443684437441784, 0.242561928633556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835, 0.2505100340871158, 0.24936877697253632, 0.24796329411732315, 0.2454867676515705, 0.2443684437441784, 0.242561928633556, 0.2414426624518138] ***
*** finished computation of 7 references, err: [Inf, 0.5554000060106852, 0.28371786799697774, 0.26284571324489725, 0.25362798237769835, 0.2505100340871158, 0.24936877697253632, 0.24796329411732315, 0.2454867676515705, 0.2443684437441784, 0.242561928633556, 0.2414426624518138] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5888000013503762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5888000013503762, 0.25845181056248767] ***
*** starting iteration: 2; err: [Inf, 0.5888000013503762, 0.25845181056248767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5888000013503762, 0.25845181056248767, 0.24974453625995466] ***
*** starting iteration: 3; err: [Inf, 0.5888000013503762, 0.25845181056248767, 0.24974453625995466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5888000013503762, 0.25845181056248767, 0.24974453625995466, 0.24694055001767767] ***
*** starting iteration: 4; err: [Inf, 0.5888000013503762, 0.25845181056248767, 0.24974453625995466, 0.24694055001767767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5888000013503762, 0.25845181056248767, 0.24974453625995466, 0.24694055001767767, 0.2462623086279712] ***
*** finished computation of 7 references, err: [Inf, 0.5888000013503762, 0.25845181056248767, 0.24974453625995466, 0.24694055001767767, 0.2462623086279712] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 14]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 4), (3, 14)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.98
finished with 18
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.98
finished with 18
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.98
finished with 18
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.98
finished with 19
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.31278427224028266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31278427224028266, 0.20588120118866565] ***
*** starting iteration: 2; err: [Inf, 0.31278427224028266, 0.20588120118866565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31278427224028266, 0.20588120118866565, 0.18893646493774302] ***
*** starting iteration: 3; err: [Inf, 0.31278427224028266, 0.20588120118866565, 0.18893646493774302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31278427224028266, 0.20588120118866565, 0.18893646493774302, 0.1864257428088463] ***
*** starting iteration: 4; err: [Inf, 0.31278427224028266, 0.20588120118866565, 0.18893646493774302, 0.1864257428088463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31278427224028266, 0.20588120118866565, 0.18893646493774302, 0.1864257428088463, 0.18508728135211044] ***
*** starting iteration: 5; err: [Inf, 0.31278427224028266, 0.20588120118866565, 0.18893646493774302, 0.1864257428088463, 0.18508728135211044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31278427224028266, 0.20588120118866565, 0.18893646493774302, 0.1864257428088463, 0.18508728135211044, 0.18479886427042247] ***
*** finished computation of 7 references, err: [Inf, 0.31278427224028266, 0.20588120118866565, 0.18893646493774302, 0.1864257428088463, 0.18508728135211044, 0.18479886427042247] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 7]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 10, 4]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 10), (3, 4)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44266725260699785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44266725260699785, 0.19446686910622213] ***
*** starting iteration: 2; err: [Inf, 0.44266725260699785, 0.19446686910622213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44266725260699785, 0.19446686910622213, 0.192547158956698] ***
*** starting iteration: 3; err: [Inf, 0.44266725260699785, 0.19446686910622213, 0.192547158956698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44266725260699785, 0.19446686910622213, 0.192547158956698, 0.18824667678803284] ***
*** starting iteration: 4; err: [Inf, 0.44266725260699785, 0.19446686910622213, 0.192547158956698, 0.18824667678803284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44266725260699785, 0.19446686910622213, 0.192547158956698, 0.18824667678803284, 0.1878589497567772] ***
*** finished computation of 7 references, err: [Inf, 0.44266725260699785, 0.19446686910622213, 0.192547158956698, 0.18824667678803284, 0.1878589497567772] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 8]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37895526724097606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37895526724097606, 0.22219688150305605] ***
*** starting iteration: 2; err: [Inf, 0.37895526724097606, 0.22219688150305605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37895526724097606, 0.22219688150305605, 0.1902306319095326] ***
*** starting iteration: 3; err: [Inf, 0.37895526724097606, 0.22219688150305605, 0.1902306319095326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37895526724097606, 0.22219688150305605, 0.1902306319095326, 0.17431747148188928] ***
*** starting iteration: 4; err: [Inf, 0.37895526724097606, 0.22219688150305605, 0.1902306319095326, 0.17431747148188928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37895526724097606, 0.22219688150305605, 0.1902306319095326, 0.17431747148188928, 0.16730265069776182] ***
*** starting iteration: 5; err: [Inf, 0.37895526724097606, 0.22219688150305605, 0.1902306319095326, 0.17431747148188928, 0.16730265069776182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37895526724097606, 0.22219688150305605, 0.1902306319095326, 0.17431747148188928, 0.16730265069776182, 0.16324409162728454] ***
*** starting iteration: 6; err: [Inf, 0.37895526724097606, 0.22219688150305605, 0.1902306319095326, 0.17431747148188928, 0.16730265069776182, 0.16324409162728454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37895526724097606, 0.22219688150305605, 0.1902306319095326, 0.17431747148188928, 0.16730265069776182, 0.16324409162728454, 0.16282660240740932] ***
*** finished computation of 7 references, err: [Inf, 0.37895526724097606, 0.22219688150305605, 0.1902306319095326, 0.17431747148188928, 0.16730265069776182, 0.16324409162728454, 0.16282660240740932] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 7, 7]]
** centroid: 6, normalized-entropy: 1.0, [(2, 7), (3, 7)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.98
finished with 19
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9333333333333332, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.98
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.003030303030302, 3.393939393939394, 1.4727272727272727, 0.25757575757575757], [7.275000000000001, 3.091666666666667, 6.125, 2.0750000000000006], [6.458823529411766, 2.9, 4.588235294117648, 1.4235294117647057], [5.6875, 2.525, 3.8499999999999996, 1.1125], [6.147619047619049, 2.857142857142857, 5.1238095238095225, 1.9285714285714286], [5.6000000000000005, 2.8714285714285714, 4.242857142857142, 1.357142857142857], [4.95, 2.3499999999999996, 3.3, 1.0]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 2, 3, 2, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.036363636363637, 3.478787878787879, 1.4606060606060605, 0.24848484848484853], [7.444444444444445, 3.1333333333333333, 6.188888888888888, 2.033333333333333], [6.25, 2.35, 4.7, 1.5], [6.175, 2.5, 5.125, 1.65], [6.605882352941178, 3.0647058823529414, 5.5588235294117645, 2.2117647058823526], [5.578947368421053, 2.6684210526315795, 4.021052631578947, 1.2473684210526315], [6.472727272727273, 3.027272727272727, 4.581818181818182, 1.4454545454545455], [5.860000000000001, 2.8, 5.0, 1.8800000000000001]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 3, 2, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.442857142857143, 3.1, 6.357142857142856, 2.0571428571428574], [5.455555555555555, 2.5499999999999994, 3.8499999999999996, 1.2055555555555557], [5.25625, 3.674999999999999, 1.5, 0.25625000000000003], [4.7333333333333325, 3.122222222222222, 1.422222222222222, 0.20000000000000004], [6.578571428571429, 3.0285714285714285, 5.471428571428572, 2.0285714285714285], [6.166666666666667, 2.946666666666666, 4.633333333333335, 1.466666666666667], [6.057142857142857, 2.8000000000000003, 5.057142857142857, 1.7285714285714289], [6.26, 3.2399999999999998, 5.56, 2.4200000000000004]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 1, 1, 3, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[54, 7, 2, 1, 1, 1, 7, 31, 13, 19, 26, 30, 17, 31, 14, 27, 29, 14, 18, 1, 12, 25, 17, 1, 1, 22, 28, 30, 20, 12, 35, 39, 42, 31, 38, 42, 5, 1, 38, 27, 33, 28, 22, 29, 27, 26, 11, 1, 1, 49, 41, 32, 41, 42, 34, 39, 29, 21, 27, 54, 54, 25, 23, 40, 3, 19, 51, 42, 40, 35, 33, 56, 32, 31, 33, 35, 36, 1, 41, 34, 41, 21, 32, 27, 20, 26, 27, 46, 34, 36, 3, 32, 43, 24, 40, 26, 35, 35, 28, 43, 36, 26, 38, 22, 25, 29, 21, 45, 36, 53, 20, 39, 40, 38, 57, 39, 19, 47, 36, 30, 25, 8, 57, 27, 39, 35, 53, 27, 35, 40, 30, 29, 34, 1, 38, 24, 22, 42, 49, 36, 22, 26, 35, 14, 29, 24, 41, 12, 43, 30, 31, 35, 29, 36, 31, 66, 28, 28, 34, 54, 14, 41, 43, 43, 47, 44, 54, 30, 11, 61, 24, 45, 53, 39, 54, 2, 87, 32, 15, 33, 47, 20, 41, 49, 44, 38, 27, 32, 47, 32, 55, 38, 27, 33, 39, 36, 52, 24, 60, 33, 41, 29, 45, 32, 34, 30, 35, 63, 30, 22, 21, 44, 50, 21, 48, 61, 51, 33, 38, 41, 33, 39, 39, 42, 52, 31, 38, 31, 1, 31, 57, 2, 27, 52, 22, 34, 33, 40, 55, 34, 37, 39, 28, 42, 40, 43, 36, 36, 61, 35, 41, 40, 33, 65, 26, 44, 65, 25, 18, 40, 43, 23, 49, 33, 46, 56, 29, 31, 48, 27, 41, 34, 47, 48, 27, 28, 49, 64, 39, 14, 64, 74, 44, 39, 19, 34, 30, 25, 40, 38, 38, 36, 55, 43, 28, 67, 34, 4, 14, 22]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.608, speedup = 0.3473122264168423, eval_ratio = 0.041648000000000004)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3741319444444444,"recall":0.3741319444444444,"f1":null,"seconds":8.104369044303894e-5,"exhaustive_search_seconds":0.0003982577472925186,"evaluations":340.8359375,"distances_sum":1723.3623152579673}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5390624999999998,"recall":0.5390624999999998,"f1":null,"seconds":0.0001219138503074646,"exhaustive_search_seconds":0.0003982577472925186,"evaluations":380.7109375,"distances_sum":1607.4915999574423}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6362847222222221,"recall":0.6362847222222221,"f1":0.6362847222222221,"seconds":0.00015978142619132996,"exhaustive_search_seconds":0.0003982577472925186,"evaluations":419.484375,"distances_sum":1561.5282924252747}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.719618055555555,"recall":0.719618055555555,"f1":0.719618055555555,"seconds":0.0001916736364364624,"exhaustive_search_seconds":0.0003982577472925186,"evaluations":459.953125,"distances_sum":1533.6055560799662}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7734374999999994,"recall":0.7734374999999994,"f1":0.7734374999999994,"seconds":0.00022598356008529663,"exhaustive_search_seconds":0.0003982577472925186,"evaluations":498.84375,"distances_sum":1519.534396580658}
KCenters.DeloneInvIndex> reached performance {"precision":0.8142361111111106,"recall":0.8142361111111106,"f1":0.8142361111111106,"seconds":0.00023323670029640198,"exhaustive_search_seconds":0.0003982577472925186,"evaluations":539.9921875,"distances_sum":1509.6522473296816}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8049999999999998, speedup = 1.5929529737940704, eval_ratio = 0.053411)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
