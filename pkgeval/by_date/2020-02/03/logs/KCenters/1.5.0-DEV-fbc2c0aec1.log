Julia Version 1.5.0-DEV.221
Commit fbc2c0aec1 (2020-02-01 18:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed LearnBase ─────────────────── v0.2.2
  Installed DataAPI ───────────────────── v1.1.0
  Installed Tables ────────────────────── v0.2.11
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed KCenters ──────────────────── v0.1.9
  Installed OrderedCollections ────────── v1.1.0
  Installed DataStructures ────────────── v0.17.9
  Installed DataFrames ────────────────── v0.20.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed MLDataPattern ─────────────── v0.5.0
  Installed StatsBase ─────────────────── v0.32.0
  Installed MLDataUtils ───────────────── v0.5.0
  Installed JSON ──────────────────────── v0.21.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed TableTraits ───────────────── v1.0.0
  Installed Compat ────────────────────── v3.2.0
  Installed Missings ──────────────────── v0.4.3
  Installed DataValueInterfaces ───────── v1.0.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed PooledArrays ──────────────── v0.5.3
  Installed Parsers ───────────────────── v0.3.11
  Installed SimilaritySearch ──────────── v0.3.17
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_4BAx3P/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 125.23000000000009
[ Info: 71.57
[ Info: 40.059999999999995
[ Info: 26.01000000000001
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999835129265
[ Info: 75.72000115944812
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.872047172238837
inertia(cdnet.distances) = 30.19844044751534
inertia(crand.distances) = 22.094693409605622
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":4.304572939872742e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":6.0,"distances_sum":1045.1648979827794}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.642578125,"f1":0.767222534410035,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":7.296875,"distances_sum":1869.3430752097888}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.642578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.642578125,"f1":0.767222534410035,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":7.296875,"distances_sum":1869.3430752097888}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9198832417582427,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":8.453125,"distances_sum":2736.024278909316}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.955442994505495,"seconds":6.299465894699097e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":8.8046875,"distances_sum":3001.4547542153364}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8826413170163178,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":8.234375,"distances_sum":2437.176301504795}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8501769064269072,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":7.8828125,"distances_sum":2274.4044137283754}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8362328643578653,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":7.8046875,"distances_sum":2252.827706491591}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.955442994505495,"seconds":6.299465894699097e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":8.8046875,"distances_sum":3001.4547542153364}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9582131410256415,"seconds":6.726011633872986e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":8.7890625,"distances_sum":3019.1542742988404}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9744619963369966,"seconds":6.800517439842224e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":8.890625,"distances_sum":3127.6625044127495}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9675080128205134,"seconds":6.886199116706848e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":8.84375,"distances_sum":3087.588104328703}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9744619963369966,"seconds":6.800517439842224e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":8.890625,"distances_sum":3127.6625044127495}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9744619963369966,"seconds":6.800517439842224e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":8.890625,"distances_sum":3127.6625044127495}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.216796875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.216796875,"f1":null,"seconds":4.1835010051727295e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":6.5234375,"distances_sum":591.6515749908183}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.216796875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.216796875,"f1":null,"seconds":4.1835010051727295e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":6.5234375,"distances_sum":591.6515749908183}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.18359375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.18359375,"f1":null,"seconds":3.6247074604034424e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":5.0390625,"distances_sum":468.635446852445}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1630859375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1630859375,"f1":null,"seconds":3.505498170852661e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":4.7734375,"distances_sum":410.8072301754616}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.18359375,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.18359375,"f1":null,"seconds":3.6247074604034424e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":5.0390625,"distances_sum":468.635446852445}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8520729270729278,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.140625,"distances_sum":1980.4182880568387}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4970703125, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.4970703125,"f1":null,"seconds":4.544854164123535e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.09375,"distances_sum":1207.6122292699274}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4921875, conf: {"ssize":7,"bsize":3}, perf: {"precision":null,"recall":0.4921875,"f1":null,"seconds":4.151836037635803e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.84375,"distances_sum":1228.3180386917013}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.623046875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.623046875,"f1":0.7544313325563333,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.546875,"distances_sum":1561.0301215638663}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8520729270729278,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.140625,"distances_sum":1980.4182880568387}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9313530219780228,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.90625,"distances_sum":2280.3394922865414}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8893403471528482,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3671875,"distances_sum":2085.9224134646006}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8862902722277731,"seconds":6.368383765220642e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.421875,"distances_sum":2078.3263888763017}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8966320138195147,"seconds":6.426125764846802e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3515625,"distances_sum":2151.2649822450617}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9313530219780228,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.90625,"distances_sum":2280.3394922865414}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8798828125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9313530219780228,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.90625,"distances_sum":2280.3394922865414}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8561147186147193,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.328125,"distances_sum":2055.7101721615854}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":3.771856427192688e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":6.8203125,"distances_sum":548.6743796110527}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8561147186147193,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.328125,"distances_sum":2055.7101721615854}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9261675824175831,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.75,"distances_sum":2370.684906366454}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9261675824175831,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.75,"distances_sum":2370.684906366454}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9398179945054946,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.875,"distances_sum":2491.7745367050893}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.934463973526474,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8046875,"distances_sum":2462.822425999874}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9398179945054946,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.875,"distances_sum":2491.7745367050893}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9398179945054946,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.875,"distances_sum":2491.7745367050893}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8560392732267741,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0859375,"distances_sum":2024.3136331781077}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":4.0531158447265625e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.40625,"distances_sum":939.0071893755269}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7907087703962712,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.6015625,"distances_sum":1685.1372290241468}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8560392732267741,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0859375,"distances_sum":2024.3136331781077}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.8993912337662344,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.3671875,"distances_sum":2228.6465955674184}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9028424700299706,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.359375,"distances_sum":2244.634342522523}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9295163170163178,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.5234375,"distances_sum":2409.523135236336}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9295163170163178,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.5234375,"distances_sum":2409.523135236336}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9734947344322349,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8828125,"distances_sum":2682.3237953677285}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9558264652014654,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7734375,"distances_sum":2581.3778595385115}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.954899267399268,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.765625,"distances_sum":2580.4522959382825}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9490956959706963,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7421875,"distances_sum":2512.128889116305}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734947344322349,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8828125,"distances_sum":2682.3237953677285}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734947344322349,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8828125,"distances_sum":2682.3237953677285}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3876953125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3876953125,"f1":null,"seconds":3.8016587495803833e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.40625,"distances_sum":905.5620099445381}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.7981017246642255,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.75,"distances_sum":1786.3496025145473}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.685546875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.685546875,"f1":0.7981017246642255,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.75,"distances_sum":1786.3496025145473}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9260505119880129,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.5390625,"distances_sum":2399.0490946100026}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8792816558441567,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.1953125,"distances_sum":2160.4019695643765}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.914884074259075,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.5078125,"distances_sum":2396.8347910653542}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9260505119880129,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.5390625,"distances_sum":2399.0490946100026}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9241050616050622,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.6015625,"distances_sum":2465.5219373344817}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9565335705960711,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.765625,"distances_sum":2688.644905863034}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9310153388278395,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.671875,"distances_sum":2474.9625805329742}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9560153388278393,"seconds":6.487593054771423e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8671875,"distances_sum":2638.566458098893}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9565335705960711,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.765625,"distances_sum":2688.644905863034}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9565335705960711,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.765625,"distances_sum":2688.644905863034}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8663529179154188,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.5703125,"distances_sum":2137.955716320652}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8663529179154188,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.5703125,"distances_sum":2137.955716320652}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9594207875457881,"seconds":6.409361958503723e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.875,"distances_sum":2655.8887204547123}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9594207875457881,"seconds":6.409361958503723e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.875,"distances_sum":2655.8887204547123}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9805631868131871,"seconds":6.711110472679138e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9765625,"distances_sum":2813.6742538708927}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9805631868131871,"seconds":6.711110472679138e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9765625,"distances_sum":2813.6742538708927}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9805631868131871,"seconds":6.711110472679138e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9765625,"distances_sum":2813.6742538708927}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3466796875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3466796875,"f1":null,"seconds":3.8035213947296143e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":5.9375,"distances_sum":853.6040555593289}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.548828125,"f1":0.6957894536019542,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.4296875,"distances_sum":1290.1748914716088}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.548828125,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.548828125,"f1":0.6957894536019542,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.4296875,"distances_sum":1290.1748914716088}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8426146769896781,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.4375,"distances_sum":1858.7224500026703}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8826954295704306,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.6953125,"distances_sum":2092.2018962337675}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8083113067488075,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.359375,"distances_sum":1663.3121290118847}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8676027097902107,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.5234375,"distances_sum":2005.9022567457912}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80078125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.80078125,"f1":0.8826954295704306,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.6953125,"distances_sum":2092.2018962337675}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.946623168498169,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.78125,"distances_sum":2595.408121556965}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9342782217782222,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.796875,"distances_sum":2496.0950538445795}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9665064102564106,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.890625,"distances_sum":2733.8204623864917}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9449118589743594,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.7578125,"distances_sum":2621.433377180595}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9475165459540464,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.734375,"distances_sum":2616.1367151987015}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9186755952380958,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.7578125,"distances_sum":2393.1835594816635}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9665064102564106,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.890625,"distances_sum":2733.8204623864917}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9665064102564106,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.890625,"distances_sum":2733.8204623864917}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1923828125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1923828125,"f1":null,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.1796875,"distances_sum":464.1578163414122}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7866527569652578,"seconds":4.585832357406616e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.875,"distances_sum":1489.4810218104426}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3994140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.4123659133911133e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.875,"distances_sum":889.0275512610618}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.7866527569652578,"seconds":4.585832357406616e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.875,"distances_sum":1489.4810218104426}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9449347527472534,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.765625,"distances_sum":2432.6348726905035}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9287691475191481,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7890625,"distances_sum":2255.9398910639216}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8575793997669008,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.359375,"distances_sum":1822.484455053295}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8138720654345661,"seconds":4.608184099197388e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.9765625,"distances_sum":1645.3969366944639}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9449347527472534,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.765625,"distances_sum":2432.6348726905035}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9722470238095241,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":2606.464371443875}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635817307692314,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2556.294283021571}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9722470238095241,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":2606.464371443875}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9722470238095241,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":2606.464371443875}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":4.02890145778656e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":6.640625,"distances_sum":922.6439473131841}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8554950258075269,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.4921875,"distances_sum":1811.5463564374038}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8554950258075269,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.4921875,"distances_sum":1811.5463564374038}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9597012362637366,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.953125,"distances_sum":2567.3802694887577}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9597012362637366,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.953125,"distances_sum":2567.3802694887577}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9669674075924078,"seconds":6.213784217834473e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9609375,"distances_sum":2627.8539981128934}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9799851190476195,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":9.0,"distances_sum":2709.2820344669135}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9713198260073262,"seconds":6.379559636116028e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.984375,"distances_sum":2653.410827045195}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9733459249084254,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9609375,"distances_sum":2664.2331246077874}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9652758699633704,"seconds":6.444752216339111e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":2609.179202991717}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9799851190476195,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":9.0,"distances_sum":2709.2820344669135}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9799851190476195,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":9.0,"distances_sum":2709.2820344669135}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4033203125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4033203125,"f1":null,"seconds":4.218891263008118e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.8046875,"distances_sum":874.2862762957092}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7052848193473199,"seconds":4.742294549942017e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.796875,"distances_sum":1270.0932093749586}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8056977744477752,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.28125,"distances_sum":1583.9723938683276}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6875,"f1":0.8056977744477752,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.28125,"distances_sum":1583.9723938683276}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9147607600732609,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.984375,"distances_sum":2223.3541785528205}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.849609375,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.849609375,"f1":0.9147607600732609,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.984375,"distances_sum":2223.3541785528205}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9701293498168501,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9296875,"distances_sum":2703.244173384743}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9388507326007333,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9609375,"distances_sum":2425.675234034643}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9701293498168501,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9296875,"distances_sum":2703.244173384743}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9701293498168501,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9296875,"distances_sum":2703.244173384743}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.6694109439849854e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.2421875,"distances_sum":496.3209035513634}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7133914696414703,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.3046875,"distances_sum":1247.4393512601162}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.572265625,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.572265625,"f1":0.7133914696414703,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.3046875,"distances_sum":1247.4393512601162}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7909153346653355,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.6328125,"distances_sum":1527.0124216334275}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8446350524475532,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.078125,"distances_sum":1776.0278065721275}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9278762903762912,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.625,"distances_sum":2319.917221893382}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7923555611055619,"seconds":4.505738615989685e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.578125,"distances_sum":1534.6868054852846}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.9278762903762912,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.625,"distances_sum":2319.917221893382}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9477964743589747,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8203125,"distances_sum":2483.619882892022}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.961796016483517,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":2556.2599040974433}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9573889652014655,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.828125,"distances_sum":2539.090787014613}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.961796016483517,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":2556.2599040974433}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.961796016483517,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":2556.2599040974433}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.791576132201133,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.953125,"distances_sum":1543.284441892937}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8430751540126548,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.3984375,"distances_sum":1778.462105367354}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8430751540126548,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.3984375,"distances_sum":1778.462105367354}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9545844780219784,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":2527.682439947225}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9545844780219784,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":2527.682439947225}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9545844780219784,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":2527.682439947225}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9545844780219784,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":2527.682439947225}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3369140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3369140625,"f1":null,"seconds":3.810971975326538e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":6.109375,"distances_sum":846.027187296334}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1591796875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1591796875,"f1":null,"seconds":3.1478703022003174e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":4.8046875,"distances_sum":421.6077728005775}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3369140625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3369140625,"f1":null,"seconds":3.810971975326538e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":6.109375,"distances_sum":846.027187296334}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7236328125,"f1":0.8258161976911985,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.0078125,"distances_sum":1853.1932753023061}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8516825188700198,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.296875,"distances_sum":1949.232276863812}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8403918997669005,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.2734375,"distances_sum":1894.8126949711977}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8516825188700198,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.296875,"distances_sum":1949.232276863812}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9632841117216123,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.8671875,"distances_sum":2633.834630814375}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9434383325008331,"seconds":6.16908073425293e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.7890625,"distances_sum":2491.0235034409093}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9427171786546792,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.734375,"distances_sum":2511.811812755737}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9457849442224446,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.7421875,"distances_sum":2519.05791457734}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9557005494505502,"seconds":4.753470420837402e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.875,"distances_sum":2545.2290701893644}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9632841117216123,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.8671875,"distances_sum":2633.834630814375}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9632841117216123,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.1492520570755005e-6,"evaluations":8.8671875,"distances_sum":2633.834630814375}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7882646867021875,"seconds":3.2689422369003296e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":7.3203125,"distances_sum":1509.4405923778343}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5322265625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5322265625,"f1":0.6785575535575542,"seconds":2.86102294921875e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":6.203125,"distances_sum":1160.9195018021755}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.7710301850926858,"seconds":3.07522714138031e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":7.2421875,"distances_sum":1479.4796090087427}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7882646867021875,"seconds":3.2689422369003296e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":7.3203125,"distances_sum":1509.4405923778343}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9289606227106234,"seconds":3.769993782043457e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.359375,"distances_sum":2343.9865209731283}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8408315642690651,"seconds":3.470107913017273e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":7.6796875,"distances_sum":1748.5193302566818}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9377976190476196,"seconds":3.905966877937317e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.5,"distances_sum":2357.4859127256536}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8443696928071938,"seconds":3.339722752571106e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":7.765625,"distances_sum":1807.1054055891843}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.924977106227107,"seconds":3.889203071594238e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.3984375,"distances_sum":2313.048305721781}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9377976190476196,"seconds":3.905966877937317e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.5,"distances_sum":2357.4859127256536}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9415235805860812,"seconds":3.855675458908081e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.6796875,"distances_sum":2388.640844990291}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.96871565934066,"seconds":4.120171070098877e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.8359375,"distances_sum":2588.5319794747165}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9627289377289383,"seconds":3.8035213947296143e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.7734375,"distances_sum":2559.543231773407}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9484775641025646,"seconds":3.7141144275665283e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.65625,"distances_sum":2470.8446039580726}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9630437271062277,"seconds":3.952533006668091e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.7734375,"distances_sum":2559.3612161444107}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.96871565934066,"seconds":4.120171070098877e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.8359375,"distances_sum":2588.5319794747165}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.96871565934066,"seconds":4.120171070098877e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.8359375,"distances_sum":2588.5319794747165}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7983885905760914,"seconds":3.252178430557251e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":7.6875,"distances_sum":1681.0507820712735}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2509765625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2509765625,"f1":null,"seconds":2.3096799850463867e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":6.3671875,"distances_sum":568.721476518434}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6806640625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6806640625,"f1":0.7983885905760914,"seconds":3.252178430557251e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":7.6875,"distances_sum":1681.0507820712735}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8679518398268408,"seconds":3.5315752029418945e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.125,"distances_sum":1960.633331300008}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9100389194139201,"seconds":3.855675458908081e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.3203125,"distances_sum":2190.3101176181317}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":9,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9100389194139201,"seconds":3.855675458908081e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.3203125,"distances_sum":2190.3101176181317}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9715430402930404,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.8984375,"distances_sum":2683.6815930436865}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9586538461538465,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.828125,"distances_sum":2584.991623873509}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596211080586085,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.8359375,"distances_sum":2583.0457351582286}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635645604395611,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.796875,"distances_sum":2648.5116097399355}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9115644771894779,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.3984375,"distances_sum":2227.518412212068}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9547103937728944,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.7578125,"distances_sum":2581.794750577216}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9715430402930404,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.8984375,"distances_sum":2683.6815930436865}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9715430402930404,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.8984375,"distances_sum":2683.6815930436865}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3525390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3525390625,"f1":null,"seconds":3.4533441066741943e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.21875,"distances_sum":761.0517150952089}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.625,"f1":0.7561605061605069,"seconds":5.1800161600112915e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.1875,"distances_sum":1426.7850550209914}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.625,"f1":0.7561605061605069,"seconds":5.1800161600112915e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.1875,"distances_sum":1426.7850550209914}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9101591117216122,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.1953125,"distances_sum":2246.8853379850502}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9269974816849822,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.5625,"distances_sum":2281.6556169535124}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.873046875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.873046875,"f1":0.9269974816849822,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.5625,"distances_sum":2281.6556169535124}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9375515109890116,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.640625,"distances_sum":2401.860892399448}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9375515109890116,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.640625,"distances_sum":2401.860892399448}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9375515109890116,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.640625,"distances_sum":2401.860892399448}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7853941197691207,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.6640625,"distances_sum":1643.3797355240376}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8598557692307702,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.8671875,"distances_sum":1952.8750566863189}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8598557692307702,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.8671875,"distances_sum":1952.8750566863189}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9547103937728941,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.859375,"distances_sum":2653.4416967718007}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.966912774725275,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9140625,"distances_sum":2766.3763938583797}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8931355103230111,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.2578125,"distances_sum":2208.5345775872647}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.966912774725275,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9140625,"distances_sum":2766.3763938583797}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9690304487179493,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9296875,"distances_sum":2763.655526973447}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9694196428571432,"seconds":6.360933184623718e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.953125,"distances_sum":2767.2745055345345}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786458333333337,"seconds":6.105750799179077e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9609375,"distances_sum":2837.0318607368913}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":13,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9734203296703298,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9453125,"distances_sum":2805.139318573914}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.972956730769231,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.90625,"distances_sum":2802.855976191845}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786458333333337,"seconds":6.105750799179077e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9609375,"distances_sum":2837.0318607368913}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786458333333337,"seconds":6.105750799179077e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9609375,"distances_sum":2837.0318607368913}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.265625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.265625,"f1":null,"seconds":3.56137752532959e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.203125,"distances_sum":680.0206507094586}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.263671875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.263671875,"f1":null,"seconds":3.50363552570343e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.171875,"distances_sum":648.6225267616436}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.265625,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.265625,"f1":null,"seconds":3.56137752532959e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.203125,"distances_sum":680.0206507094586}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.265625,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.265625,"f1":null,"seconds":3.56137752532959e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.203125,"distances_sum":680.0206507094586}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.314453125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.314453125,"f1":null,"seconds":3.4105032682418823e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.2421875,"distances_sum":718.287496698983}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.314453125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.314453125,"f1":null,"seconds":3.4105032682418823e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.2421875,"distances_sum":718.287496698983}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.419921875,"f1":null,"seconds":3.7141144275665283e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.8671875,"distances_sum":920.44744463662}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8687536421911429,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.75,"distances_sum":1928.1173097227152}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.8687536421911429,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.75,"distances_sum":1928.1173097227152}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8918898809523818,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.9296875,"distances_sum":2096.266196294435}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9594894688644695,"seconds":3.999099135398865e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8125,"distances_sum":2577.66868148122}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9594894688644695,"seconds":3.999099135398865e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8125,"distances_sum":2577.66868148122}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9620764652014657,"seconds":3.900378942489624e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7890625,"distances_sum":2603.637334106184}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.971262591575092,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8671875,"distances_sum":2651.9849082462024}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9769345238095242,"seconds":3.8389116525650024e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9296875,"distances_sum":2693.088513468938}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9769345238095242,"seconds":3.8389116525650024e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9296875,"distances_sum":2693.088513468938}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9769345238095242,"seconds":3.8389116525650024e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9296875,"distances_sum":2693.088513468938}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.3671875,"f1":0.5162462537462534,"seconds":3.3993273973464966e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":5.390625,"distances_sum":847.5012696665909}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7882086663336672,"seconds":4.794448614120483e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":7.6171875,"distances_sum":1651.8963533726856}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6669921875,"f1":0.7882086663336672,"seconds":4.794448614120483e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":7.6171875,"distances_sum":1651.8963533726856}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8609213702963711,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.0,"distances_sum":1993.4202116282445}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8609213702963711,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.0,"distances_sum":1993.4202116282445}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9096731393606401,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.3515625,"distances_sum":2263.7397050264267}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9310356310356315,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.6796875,"distances_sum":2466.7025232372034}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9372309981684988,"seconds":6.198883056640625e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.6875,"distances_sum":2479.487974032304}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9372309981684988,"seconds":6.198883056640625e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.6875,"distances_sum":2479.487974032304}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.890625,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9372309981684988,"seconds":6.198883056640625e-6,"exhaustive_search_seconds":8.735805749893188e-7,"evaluations":8.6875,"distances_sum":2479.487974032304}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2861328125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2861328125,"f1":null,"seconds":3.855675458908081e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.96875,"distances_sum":671.2481400163496}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.7729130244755252,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.640625,"distances_sum":1494.9534095824579}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8581226065601072,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.9375,"distances_sum":1962.4888861964448}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8581226065601072,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.9375,"distances_sum":1962.4888861964448}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9504521520146524,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7578125,"distances_sum":2555.6051196007993}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9488724816849824,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.765625,"distances_sum":2532.174136928056}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9610920329670337,"seconds":6.418675184249878e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.859375,"distances_sum":2599.716545765443}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9497424450549454,"seconds":6.400048732757568e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.734375,"distances_sum":2581.3766523695426}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8619318181818191,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.09375,"distances_sum":1964.3097633764025}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9610920329670337,"seconds":6.418675184249878e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.859375,"distances_sum":2599.716545765443}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9788690476190478,"seconds":6.50063157081604e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.953125,"distances_sum":2742.905640510692}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9819940476190477,"seconds":6.685033440589905e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9296875,"distances_sum":2783.2223978532325}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681375915750922,"seconds":6.96815550327301e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9296875,"distances_sum":2668.4053704005323}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9795386904761907,"seconds":6.716698408126831e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9453125,"distances_sum":2762.7290830744573}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190477,"seconds":6.685033440589905e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9296875,"distances_sum":2783.2223978532325}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190477,"seconds":6.685033440589905e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9296875,"distances_sum":2783.2223978532325}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2841796875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2841796875,"f1":null,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":5.7109375,"distances_sum":639.1391064081954}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2841796875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2841796875,"f1":null,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":5.7109375,"distances_sum":639.1391064081954}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8532004453879464,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.7265625,"distances_sum":1958.0764564343144}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8546770937395947,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.828125,"distances_sum":1983.2204740562397}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8546770937395947,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.828125,"distances_sum":1983.2204740562397}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9696829212454214,"seconds":6.3087791204452515e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8671875,"distances_sum":2810.322538470867}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8830565268065276,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.125,"distances_sum":2156.3771065341157}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9510130494505497,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7734375,"distances_sum":2652.9053129244885}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9368220321345329,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.78125,"distances_sum":2560.6631171715776}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9696829212454214,"seconds":6.3087791204452515e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8671875,"distances_sum":2810.322538470867}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752804487179493,"seconds":6.495043635368347e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.953125,"distances_sum":2819.337328102361}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9703182234432239,"seconds":6.549060344696045e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8828125,"distances_sum":2806.240498980523}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752804487179493,"seconds":6.495043635368347e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.953125,"distances_sum":2819.337328102361}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752804487179493,"seconds":6.495043635368347e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.953125,"distances_sum":2819.337328102361}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.57421875,"f1":0.7156468531468538,"seconds":4.621222615242004e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.9296875,"distances_sum":1429.5731752749766}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7982220904095911,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.4296875,"distances_sum":1684.0838697291363}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3984375,"f1":null,"seconds":4.110857844352722e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":5.7890625,"distances_sum":945.7690852688823}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.677734375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.677734375,"f1":0.7982220904095911,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.4296875,"distances_sum":1684.0838697291363}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9146010239760249,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.3984375,"distances_sum":2395.8406346328547}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8991305569430577,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.109375,"distances_sum":2246.2266755374917}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.85546875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.9146010239760249,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.3984375,"distances_sum":2395.8406346328547}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9719322344322346,"seconds":6.685033440589905e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8984375,"distances_sum":2802.347914863668}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9538175366300373,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.796875,"distances_sum":2693.9537615984873}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9698145604395607,"seconds":6.400048732757568e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8828125,"distances_sum":2792.282114222455}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9719322344322346,"seconds":6.685033440589905e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8984375,"distances_sum":2802.347914863668}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9719322344322346,"seconds":6.685033440589905e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8984375,"distances_sum":2802.347914863668}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8451678529803538,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.1484375,"distances_sum":1997.6323646699498}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.41015625,"f1":null,"seconds":4.157423973083496e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.0,"distances_sum":989.3228921354078}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2822265625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2822265625,"f1":null,"seconds":3.6749988794326782e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.328125,"distances_sum":749.8129744624619}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8451678529803538,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.1484375,"distances_sum":1997.6323646699498}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9396749084249091,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6015625,"distances_sum":2651.1720536078255}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.846587440337441,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.140625,"distances_sum":1973.740741122747}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9396749084249091,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6015625,"distances_sum":2651.1720536078255}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9699233058608062,"seconds":6.815418601036072e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2837.620321306746}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9699233058608062,"seconds":6.815418601036072e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2837.620321306746}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9699233058608062,"seconds":6.815418601036072e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2837.620321306746}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5205078125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5205078125,"f1":0.668985181485182,"seconds":4.623085260391235e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.875,"distances_sum":1239.3235027491232}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6376953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6376953125,"f1":0.7681401931401938,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.703125,"distances_sum":1609.8724199001929}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.26953125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.26953125,"f1":null,"seconds":3.686174750328064e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":5.671875,"distances_sum":671.4574369872173}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6376953125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6376953125,"f1":0.7681401931401938,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.703125,"distances_sum":1609.8724199001929}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9081616300366309,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.3203125,"distances_sum":2309.595345713667}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8609208499833508,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.265625,"distances_sum":1986.2560719276198}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7864696067821076,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.7734375,"distances_sum":1685.3102630969051}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.841796875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.841796875,"f1":0.9081616300366309,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.3203125,"distances_sum":2309.595345713667}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.938361638361639,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7109375,"distances_sum":2555.3208625844904}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.936692994505495,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.5703125,"distances_sum":2546.3874766330678}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.953431464368965,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.765625,"distances_sum":2671.229517607089}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9193624084249092,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.421875,"distances_sum":2436.353560796469}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9377117673992681,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.6328125,"distances_sum":2564.068502842533}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.953431464368965,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.765625,"distances_sum":2671.229517607089}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.953431464368965,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.765625,"distances_sum":2671.229517607089}}, n: 9
inertia(cfft.distances) = 21.198380768137795
inertia(cdnet.distances) = 31.055871434121432
inertia(crand.distances) = 23.428432781887462
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9266666666666666
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.88
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.94
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9355555555555556
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9177777777777777
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9088888888888889
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9111111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9177777777777778
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9111111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 3, 2, 3, 1, 3, 2, 1, 3, 3, 2, 1, 2, 3, 2, 3, 3, 3, 2, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 8, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 10, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 3, 1, 2]
acc = 0.9466666666666667
*** starting iteration: 1; err: [Inf, 0.3361333357055663] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3361333357055663, 0.18859831816466685] ***
*** starting iteration: 2; err: [Inf, 0.3361333357055663, 0.18859831816466685] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655] ***
*** starting iteration: 3; err: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655, 0.15718431026553276] ***
*** starting iteration: 4; err: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655, 0.15718431026553276] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655, 0.15718431026553276, 0.15576164277504467] ***
*** starting iteration: 5; err: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655, 0.15718431026553276, 0.15576164277504467] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655, 0.15718431026553276, 0.15576164277504467, 0.1555322523161241] ***
*** finished computation of 12 references, err: [Inf, 0.3361333357055663, 0.18859831816466685, 0.16392725481480655, 0.15718431026553276, 0.15576164277504467, 0.1555322523161241] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 5, 1]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 5), (3, 1)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 14 centroids; started with 12
acc = 0.9133333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.7600000102875012] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7600000102875012, 0.5779288415599279] ***
*** starting iteration: 2; err: [Inf, 0.7600000102875012, 0.5779288415599279] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7600000102875012, 0.5779288415599279, 0.5586816527245069] ***
*** starting iteration: 3; err: [Inf, 0.7600000102875012, 0.5779288415599279, 0.5586816527245069] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7600000102875012, 0.5779288415599279, 0.5586816527245069, 0.5394986139041825] ***
*** finished computation of 3 references, err: [Inf, 0.7600000102875012, 0.5779288415599279, 0.5586816527245069, 0.5394986139041825] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 27]]
** centroid: 1, normalized-entropy: 0.5547781633412736, [(2, 4), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 23, 8]]
** centroid: 3, normalized-entropy: 0.8238116333123173, [(2, 23), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5348000113165567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5348000113165567, 0.5615764276602025] ***
*** starting iteration: 2; err: [Inf, 1.5348000113165567, 0.5615764276602025] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5348000113165567, 0.5615764276602025, 0.5492032685587724] ***
*** starting iteration: 3; err: [Inf, 1.5348000113165567, 0.5615764276602025, 0.5492032685587724] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5348000113165567, 0.5615764276602025, 0.5492032685587724, 0.5484252717029253] ***
*** finished computation of 3 references, err: [Inf, 1.5348000113165567, 0.5615764276602025, 0.5492032685587724, 0.5484252717029253] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 35]]
** centroid: 1, normalized-entropy: 0.7935912300117066, [(2, 11), (3, 35)]
*** center 2: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 25, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.589400001352886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.589400001352886, 0.5377955985064404] ***
*** starting iteration: 2; err: [Inf, 0.589400001352886, 0.5377955985064404] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.589400001352886, 0.5377955985064404, 0.5222838036361875] ***
*** starting iteration: 3; err: [Inf, 0.589400001352886, 0.5377955985064404, 0.5222838036361875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.589400001352886, 0.5377955985064404, 0.5222838036361875, 0.5015846884448406] ***
*** finished computation of 3 references, err: [Inf, 0.589400001352886, 0.5377955985064404, 0.5222838036361875, 0.5015846884448406] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 36, 9]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 3, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.45592045735136094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45592045735136094, 0.246510925422591] ***
*** starting iteration: 2; err: [Inf, 0.45592045735136094, 0.246510925422591] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45592045735136094, 0.246510925422591, 0.2009316941726545] ***
*** starting iteration: 3; err: [Inf, 0.45592045735136094, 0.246510925422591, 0.2009316941726545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45592045735136094, 0.246510925422591, 0.2009316941726545, 0.18392626722610722] ***
*** finished computation of 7 references, err: [Inf, 0.45592045735136094, 0.246510925422591, 0.2009316941726545, 0.18392626722610722] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 8, 6]]
** centroid: 5, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4730158282528612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4730158282528612, 0.2921250125076884] ***
*** starting iteration: 2; err: [Inf, 0.4730158282528612, 0.2921250125076884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4730158282528612, 0.2921250125076884, 0.25789621869388546] ***
*** starting iteration: 3; err: [Inf, 0.4730158282528612, 0.2921250125076884, 0.25789621869388546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4730158282528612, 0.2921250125076884, 0.25789621869388546, 0.21039673684897825] ***
*** finished computation of 7 references, err: [Inf, 0.4730158282528612, 0.2921250125076884, 0.25789621869388546, 0.21039673684897825] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 3]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 15), (3, 3)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 6, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6002709346652185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6002709346652185, 0.3067920457627308] ***
*** starting iteration: 2; err: [Inf, 0.6002709346652185, 0.3067920457627308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6002709346652185, 0.3067920457627308, 0.23106394528678628] ***
*** starting iteration: 3; err: [Inf, 0.6002709346652185, 0.3067920457627308, 0.23106394528678628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6002709346652185, 0.3067920457627308, 0.23106394528678628, 0.21350665663188909] ***
*** finished computation of 7 references, err: [Inf, 0.6002709346652185, 0.3067920457627308, 0.23106394528678628, 0.21350665663188909] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 14]]
** centroid: 6, normalized-entropy: 1.0, [(2, 14), (3, 14)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 7, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2119865058311037] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2119865058311037, 0.5864803990712012] ***
*** starting iteration: 2; err: [Inf, 1.2119865058311037, 0.5864803990712012] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2119865058311037, 0.5864803990712012, 0.582402434214908] ***
*** starting iteration: 3; err: [Inf, 1.2119865058311037, 0.5864803990712012, 0.582402434214908] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2119865058311037, 0.5864803990712012, 0.582402434214908, 0.5823808549206949] ***
*** finished computation of 3 references, err: [Inf, 1.2119865058311037, 0.5864803990712012, 0.582402434214908, 0.5823808549206949] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [18, 1, 0]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(1, 18), (2, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 35]]
** centroid: 3, normalized-entropy: 0.9842399889605549, [(2, 26), (3, 35)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7704199661719241] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7704199661719241, 0.37906472939565544] ***
*** starting iteration: 2; err: [Inf, 0.7704199661719241, 0.37906472939565544] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7704199661719241, 0.37906472939565544, 0.3770568544828532] ***
*** starting iteration: 3; err: [Inf, 0.7704199661719241, 0.37906472939565544, 0.3770568544828532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7704199661719241, 0.37906472939565544, 0.3770568544828532, 0.3759467189017851] ***
*** starting iteration: 4; err: [Inf, 0.7704199661719241, 0.37906472939565544, 0.3770568544828532, 0.3759467189017851] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7704199661719241, 0.37906472939565544, 0.3770568544828532, 0.3759467189017851, 0.3759467189017851] ***
*** finished computation of 3 references, err: [Inf, 0.7704199661719241, 0.37906472939565544, 0.3770568544828532, 0.3759467189017851, 0.3759467189017851] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 34]]
** centroid: 1, normalized-entropy: 0.7732266742876346, [(2, 10), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 1]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(2, 26), (3, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8736802633669376] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8736802633669376, 0.35920185158956275] ***
*** starting iteration: 2; err: [Inf, 0.8736802633669376, 0.35920185158956275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8736802633669376, 0.35920185158956275, 0.3533019828722513] ***
*** starting iteration: 3; err: [Inf, 0.8736802633669376, 0.35920185158956275, 0.3533019828722513] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8736802633669376, 0.35920185158956275, 0.3533019828722513, 0.3480362385954106] ***
*** starting iteration: 4; err: [Inf, 0.8736802633669376, 0.35920185158956275, 0.3533019828722513, 0.3480362385954106] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8736802633669376, 0.35920185158956275, 0.3533019828722513, 0.3480362385954106, 0.34722338059173524] ***
*** finished computation of 3 references, err: [Inf, 0.8736802633669376, 0.35920185158956275, 0.3533019828722513, 0.3480362385954106, 0.34722338059173524] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 8]]
** centroid: 2, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3718000016825775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3718000016825775, 0.285247411770281] ***
*** starting iteration: 2; err: [Inf, 0.3718000016825775, 0.285247411770281] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3718000016825775, 0.285247411770281, 0.27642147556034524] ***
*** starting iteration: 3; err: [Inf, 0.3718000016825775, 0.285247411770281, 0.27642147556034524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3718000016825775, 0.285247411770281, 0.27642147556034524, 0.26558460298285164] ***
*** starting iteration: 4; err: [Inf, 0.3718000016825775, 0.285247411770281, 0.27642147556034524, 0.26558460298285164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3718000016825775, 0.285247411770281, 0.27642147556034524, 0.26558460298285164, 0.2577449952593686] ***
*** starting iteration: 5; err: [Inf, 0.3718000016825775, 0.285247411770281, 0.27642147556034524, 0.26558460298285164, 0.2577449952593686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3718000016825775, 0.285247411770281, 0.27642147556034524, 0.26558460298285164, 0.2577449952593686, 0.2501224217505016] ***
*** starting iteration: 6; err: [Inf, 0.3718000016825775, 0.285247411770281, 0.27642147556034524, 0.26558460298285164, 0.2577449952593686, 0.2501224217505016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3718000016825775, 0.285247411770281, 0.27642147556034524, 0.26558460298285164, 0.2577449952593686, 0.2501224217505016, 0.24286134660591346] ***
*** starting iteration: 7; err: [Inf, 0.3718000016825775, 0.285247411770281, 0.27642147556034524, 0.26558460298285164, 0.2577449952593686, 0.2501224217505016, 0.24286134660591346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3718000016825775, 0.285247411770281, 0.27642147556034524, 0.26558460298285164, 0.2577449952593686, 0.2501224217505016, 0.24286134660591346, 0.23993874949595154] ***
*** starting iteration: 8; err: [Inf, 0.3718000016825775, 0.285247411770281, 0.27642147556034524, 0.26558460298285164, 0.2577449952593686, 0.2501224217505016, 0.24286134660591346, 0.23993874949595154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3718000016825775, 0.285247411770281, 0.27642147556034524, 0.26558460298285164, 0.2577449952593686, 0.2501224217505016, 0.24286134660591346, 0.23993874949595154, 0.23993874949595154] ***
*** finished computation of 7 references, err: [Inf, 0.3718000016825775, 0.285247411770281, 0.27642147556034524, 0.26558460298285164, 0.2577449952593686, 0.2501224217505016, 0.24286134660591346, 0.23993874949595154, 0.23993874949595154] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 11]]
** centroid: 4, normalized-entropy: 0.9949848281859699, [(2, 13), (3, 11)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.633100003094136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.633100003094136, 0.2965330348609136] ***
*** starting iteration: 2; err: [Inf, 0.633100003094136, 0.2965330348609136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.633100003094136, 0.2965330348609136, 0.2708420465398958] ***
*** starting iteration: 3; err: [Inf, 0.633100003094136, 0.2965330348609136, 0.2708420465398958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.633100003094136, 0.2965330348609136, 0.2708420465398958, 0.2450070467406235] ***
*** starting iteration: 4; err: [Inf, 0.633100003094136, 0.2965330348609136, 0.2708420465398958, 0.2450070467406235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.633100003094136, 0.2965330348609136, 0.2708420465398958, 0.2450070467406235, 0.22690157271783779] ***
*** starting iteration: 5; err: [Inf, 0.633100003094136, 0.2965330348609136, 0.2708420465398958, 0.2450070467406235, 0.22690157271783779] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.633100003094136, 0.2965330348609136, 0.2708420465398958, 0.2450070467406235, 0.22690157271783779, 0.22268766687029312] ***
*** starting iteration: 6; err: [Inf, 0.633100003094136, 0.2965330348609136, 0.2708420465398958, 0.2450070467406235, 0.22690157271783779, 0.22268766687029312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.633100003094136, 0.2965330348609136, 0.2708420465398958, 0.2450070467406235, 0.22690157271783779, 0.22268766687029312, 0.22242777301005703] ***
*** finished computation of 7 references, err: [Inf, 0.633100003094136, 0.2965330348609136, 0.2708420465398958, 0.2450070467406235, 0.22690157271783779, 0.22268766687029312, 0.22242777301005703] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 9]]
** centroid: 2, normalized-entropy: 0.9886994082884974, [(2, 7), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.8810000236611675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8810000236611675, 0.41311649994807154] ***
*** starting iteration: 2; err: [Inf, 2.8810000236611675, 0.41311649994807154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489] ***
*** starting iteration: 3; err: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014] ***
*** starting iteration: 4; err: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014, 0.28849158162932714] ***
*** starting iteration: 5; err: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014, 0.28849158162932714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014, 0.28849158162932714, 0.28650411825941213] ***
*** starting iteration: 6; err: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014, 0.28849158162932714, 0.28650411825941213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014, 0.28849158162932714, 0.28650411825941213, 0.28285936196754996] ***
*** starting iteration: 7; err: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014, 0.28849158162932714, 0.28650411825941213, 0.28285936196754996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014, 0.28849158162932714, 0.28650411825941213, 0.28285936196754996, 0.2799129014419489] ***
*** starting iteration: 8; err: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014, 0.28849158162932714, 0.28650411825941213, 0.28285936196754996, 0.2799129014419489] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014, 0.28849158162932714, 0.28650411825941213, 0.28285936196754996, 0.2799129014419489, 0.27873415055896283] ***
*** starting iteration: 9; err: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014, 0.28849158162932714, 0.28650411825941213, 0.28285936196754996, 0.2799129014419489, 0.27873415055896283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014, 0.28849158162932714, 0.28650411825941213, 0.28285936196754996, 0.2799129014419489, 0.27873415055896283, 0.27769856252845593] ***
*** starting iteration: 10; err: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014, 0.28849158162932714, 0.28650411825941213, 0.28285936196754996, 0.2799129014419489, 0.27873415055896283, 0.27769856252845593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014, 0.28849158162932714, 0.28650411825941213, 0.28285936196754996, 0.2799129014419489, 0.27873415055896283, 0.27769856252845593, 0.27769856252845593] ***
*** finished computation of 7 references, err: [Inf, 2.8810000236611675, 0.41311649994807154, 0.3017361779202489, 0.2912594550401014, 0.28849158162932714, 0.28650411825941213, 0.28285936196754996, 0.2799129014419489, 0.27873415055896283, 0.27769856252845593, 0.27769856252845593] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 2, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 14]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1664763723646843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1664763723646843, 0.5036025529677383] ***
*** starting iteration: 2; err: [Inf, 1.1664763723646843, 0.5036025529677383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1664763723646843, 0.5036025529677383, 0.3340116440777715] ***
*** starting iteration: 3; err: [Inf, 1.1664763723646843, 0.5036025529677383, 0.3340116440777715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1664763723646843, 0.5036025529677383, 0.3340116440777715, 0.3068882056374574] ***
*** finished computation of 7 references, err: [Inf, 1.1664763723646843, 0.5036025529677383, 0.3340116440777715, 0.3068882056374574] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 24]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 23, 11]]
** centroid: 3, normalized-entropy: 0.9081783472997053, [(2, 23), (3, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39170935979787935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39170935979787935, 0.23243093403316986] ***
*** starting iteration: 2; err: [Inf, 0.39170935979787935, 0.23243093403316986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39170935979787935, 0.23243093403316986, 0.19922640318830814] ***
*** starting iteration: 3; err: [Inf, 0.39170935979787935, 0.23243093403316986, 0.19922640318830814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39170935979787935, 0.23243093403316986, 0.19922640318830814, 0.180704953841475] ***
*** finished computation of 7 references, err: [Inf, 0.39170935979787935, 0.23243093403316986, 0.19922640318830814, 0.180704953841475] ***
*** center 1: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 7]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 4]]
** centroid: 7, normalized-entropy: 0.9852281360342514, [(2, 3), (3, 4)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30174070605994446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30174070605994446, 0.21106346840292065] ***
*** starting iteration: 2; err: [Inf, 0.30174070605994446, 0.21106346840292065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30174070605994446, 0.21106346840292065, 0.19593719303474752] ***
*** starting iteration: 3; err: [Inf, 0.30174070605994446, 0.21106346840292065, 0.19593719303474752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30174070605994446, 0.21106346840292065, 0.19593719303474752, 0.1843293585761584] ***
*** finished computation of 7 references, err: [Inf, 0.30174070605994446, 0.21106346840292065, 0.19593719303474752, 0.1843293585761584] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 3, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39958050445092597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39958050445092597, 0.2467240231962135] ***
*** starting iteration: 2; err: [Inf, 0.39958050445092597, 0.2467240231962135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39958050445092597, 0.2467240231962135, 0.21704713482523502] ***
*** starting iteration: 3; err: [Inf, 0.39958050445092597, 0.2467240231962135, 0.21704713482523502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39958050445092597, 0.2467240231962135, 0.21704713482523502, 0.2105119762691811] ***
*** finished computation of 7 references, err: [Inf, 0.39958050445092597, 0.2467240231962135, 0.21704713482523502, 0.2105119762691811] ***
*** center 1: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.951596946429608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.951596946429608, 0.4803458250879194] ***
*** starting iteration: 2; err: [Inf, 1.951596946429608, 0.4803458250879194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.951596946429608, 0.4803458250879194, 0.2636143332054161] ***
*** starting iteration: 3; err: [Inf, 1.951596946429608, 0.4803458250879194, 0.2636143332054161] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.951596946429608, 0.4803458250879194, 0.2636143332054161, 0.20693783326880222] ***
*** finished computation of 7 references, err: [Inf, 1.951596946429608, 0.4803458250879194, 0.2636143332054161, 0.20693783326880222] ***
*** center 1: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 4]]
** centroid: 2, normalized-entropy: 1.0, [(2, 4), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 9]]
** centroid: 3, normalized-entropy: 0.9975025463691153, [(2, 8), (3, 9)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29486167500009164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29486167500009164, 0.21917488128161003] ***
*** starting iteration: 2; err: [Inf, 0.29486167500009164, 0.21917488128161003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29486167500009164, 0.21917488128161003, 0.19436776292438704] ***
*** starting iteration: 3; err: [Inf, 0.29486167500009164, 0.21917488128161003, 0.19436776292438704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29486167500009164, 0.21917488128161003, 0.19436776292438704, 0.1703215118232887] ***
*** finished computation of 7 references, err: [Inf, 0.29486167500009164, 0.21917488128161003, 0.19436776292438704, 0.1703215118232887] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 8]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 9]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.909749630342948] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.909749630342948, 0.4004003327519338] ***
*** finished computation of 3 references, err: [Inf, 0.909749630342948, 0.4004003327519338] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 2]]
** centroid: 1, normalized-entropy: 0.42622865699814483, [(2, 21), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 6, 33]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(2, 6), (3, 33)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.245146279151712] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.245146279151712, 0.45990461507206687] ***
*** finished computation of 3 references, err: [Inf, 2.245146279151712, 0.45990461507206687] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 33]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 6), (3, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [29, 1, 0]]
** centroid: 2, normalized-entropy: 0.2108423003185322, [(1, 29), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 2]]
** centroid: 3, normalized-entropy: 0.3451173149449528, [(2, 29), (3, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7058781792838619] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7058781792838619, 0.36193373403823076] ***
*** finished computation of 3 references, err: [Inf, 0.7058781792838619, 0.36193373403823076] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 7]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 35), (3, 7)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.027994248800433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.027994248800433, 0.3228614913053072] ***
*** finished computation of 7 references, err: [Inf, 1.027994248800433, 0.3228614913053072] ***
*** center 1: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 23]]
** centroid: 2, normalized-entropy: 0.9987472979361685, [(2, 25), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34886379462297723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34886379462297723, 0.19432704032563408] ***
*** finished computation of 7 references, err: [Inf, 0.34886379462297723, 0.19432704032563408] ***
*** center 1: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5952971941765653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5952971941765653, 0.2630908396866963] ***
*** finished computation of 7 references, err: [Inf, 0.5952971941765653, 0.2630908396866963] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 24, 6]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 24), (3, 6)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 23]]
** centroid: 5, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4919000009071326] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4919000009071326, 0.5283945601892441] ***
*** starting iteration: 2; err: [Inf, 1.4919000009071326, 0.5283945601892441] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4919000009071326, 0.5283945601892441, 0.5207014212558883] ***
*** starting iteration: 3; err: [Inf, 1.4919000009071326, 0.5283945601892441, 0.5207014212558883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4919000009071326, 0.5283945601892441, 0.5207014212558883, 0.5165992243181546] ***
*** finished computation of 3 references, err: [Inf, 1.4919000009071326, 0.5283945601892441, 0.5207014212558883, 0.5165992243181546] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 12]]
** centroid: 3, normalized-entropy: 0.8904916402194913, [(2, 27), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4940999988223218] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4940999988223218, 0.5767327162108529] ***
*** starting iteration: 2; err: [Inf, 1.4940999988223218, 0.5767327162108529] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4940999988223218, 0.5767327162108529, 0.5572789925408874] ***
*** starting iteration: 3; err: [Inf, 1.4940999988223218, 0.5767327162108529, 0.5572789925408874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4940999988223218, 0.5767327162108529, 0.5572789925408874, 0.5550620016570906] ***
*** finished computation of 3 references, err: [Inf, 1.4940999988223218, 0.5767327162108529, 0.5572789925408874, 0.5550620016570906] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 8]]
** centroid: 1, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 3: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3689000023505145] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3689000023505145, 0.49774454191464684] ***
*** starting iteration: 2; err: [Inf, 1.3689000023505145, 0.49774454191464684] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3689000023505145, 0.49774454191464684, 0.49301478311074703] ***
*** starting iteration: 3; err: [Inf, 1.3689000023505145, 0.49774454191464684, 0.49301478311074703] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3689000023505145, 0.49774454191464684, 0.49301478311074703, 0.49235727250504224] ***
*** finished computation of 3 references, err: [Inf, 1.3689000023505145, 0.49774454191464684, 0.49301478311074703, 0.49235727250504224] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 36, 9]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1259804484529585] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1259804484529585, 0.3723661225619177] ***
*** starting iteration: 2; err: [Inf, 1.1259804484529585, 0.3723661225619177] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1259804484529585, 0.3723661225619177, 0.3670617336963274] ***
*** starting iteration: 3; err: [Inf, 1.1259804484529585, 0.3723661225619177, 0.3670617336963274] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1259804484529585, 0.3723661225619177, 0.3670617336963274, 0.36494021681427236] ***
*** finished computation of 3 references, err: [Inf, 1.1259804484529585, 0.3723661225619177, 0.3670617336963274, 0.36494021681427236] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [38, 1, 0]]
** centroid: 1, normalized-entropy: 0.17203694935311387, [(1, 38), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 12]]
** centroid: 3, normalized-entropy: 0.8997437586982626, [(2, 26), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9089234274343718] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9089234274343718, 0.49444683244958776] ***
*** starting iteration: 2; err: [Inf, 0.9089234274343718, 0.49444683244958776] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9089234274343718, 0.49444683244958776, 0.42976096510056405] ***
*** starting iteration: 3; err: [Inf, 0.9089234274343718, 0.49444683244958776, 0.42976096510056405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9089234274343718, 0.49444683244958776, 0.42976096510056405, 0.3892037470143628] ***
*** finished computation of 3 references, err: [Inf, 0.9089234274343718, 0.49444683244958776, 0.42976096510056405, 0.3892037470143628] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 8]]
** centroid: 1, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 3, normalized-entropy: 0.2222848306856879, [(2, 1), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7863032049857067] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7863032049857067, 0.3501657267126826] ***
*** starting iteration: 2; err: [Inf, 0.7863032049857067, 0.3501657267126826] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7863032049857067, 0.3501657267126826, 0.3454523111058513] ***
*** starting iteration: 3; err: [Inf, 0.7863032049857067, 0.3501657267126826, 0.3454523111058513] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7863032049857067, 0.3501657267126826, 0.3454523111058513, 0.3450562004589314] ***
*** finished computation of 3 references, err: [Inf, 0.7863032049857067, 0.3501657267126826, 0.3454523111058513, 0.3450562004589314] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 9]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 3, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8169800253249133] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8169800253249133, 0.39207191675335906] ***
*** starting iteration: 2; err: [Inf, 0.8169800253249133, 0.39207191675335906] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8169800253249133, 0.39207191675335906, 0.3805417031458713] ***
*** starting iteration: 3; err: [Inf, 0.8169800253249133, 0.39207191675335906, 0.3805417031458713] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8169800253249133, 0.39207191675335906, 0.3805417031458713, 0.37523538111418775] ***
*** starting iteration: 4; err: [Inf, 0.8169800253249133, 0.39207191675335906, 0.3805417031458713, 0.37523538111418775] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8169800253249133, 0.39207191675335906, 0.3805417031458713, 0.37523538111418775, 0.36862557126082574] ***
*** starting iteration: 5; err: [Inf, 0.8169800253249133, 0.39207191675335906, 0.3805417031458713, 0.37523538111418775, 0.36862557126082574] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8169800253249133, 0.39207191675335906, 0.3805417031458713, 0.37523538111418775, 0.36862557126082574, 0.3670617336963274] ***
*** starting iteration: 6; err: [Inf, 0.8169800253249133, 0.39207191675335906, 0.3805417031458713, 0.37523538111418775, 0.36862557126082574, 0.3670617336963274] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8169800253249133, 0.39207191675335906, 0.3805417031458713, 0.37523538111418775, 0.36862557126082574, 0.3670617336963274, 0.36494021681427236] ***
*** starting iteration: 7; err: [Inf, 0.8169800253249133, 0.39207191675335906, 0.3805417031458713, 0.37523538111418775, 0.36862557126082574, 0.3670617336963274, 0.36494021681427236] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8169800253249133, 0.39207191675335906, 0.3805417031458713, 0.37523538111418775, 0.36862557126082574, 0.3670617336963274, 0.36494021681427236, 0.36482291408290607] ***
*** finished computation of 3 references, err: [Inf, 0.8169800253249133, 0.39207191675335906, 0.3805417031458713, 0.37523538111418775, 0.36862557126082574, 0.3670617336963274, 0.36494021681427236, 0.36482291408290607] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 12]]
** centroid: 1, normalized-entropy: 0.8997437586982626, [(2, 26), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8026175463996029] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8026175463996029, 0.424033387100166] ***
*** starting iteration: 2; err: [Inf, 0.8026175463996029, 0.424033387100166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8026175463996029, 0.424033387100166, 0.38714704389283744] ***
*** starting iteration: 3; err: [Inf, 0.8026175463996029, 0.424033387100166, 0.38714704389283744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8026175463996029, 0.424033387100166, 0.38714704389283744, 0.3827297063460295] ***
*** starting iteration: 4; err: [Inf, 0.8026175463996029, 0.424033387100166, 0.38714704389283744, 0.3827297063460295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8026175463996029, 0.424033387100166, 0.38714704389283744, 0.3827297063460295, 0.38000535461763624] ***
*** starting iteration: 5; err: [Inf, 0.8026175463996029, 0.424033387100166, 0.38714704389283744, 0.3827297063460295, 0.38000535461763624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8026175463996029, 0.424033387100166, 0.38714704389283744, 0.3827297063460295, 0.38000535461763624, 0.3779103691941884] ***
*** starting iteration: 6; err: [Inf, 0.8026175463996029, 0.424033387100166, 0.38714704389283744, 0.3827297063460295, 0.38000535461763624, 0.3779103691941884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8026175463996029, 0.424033387100166, 0.38714704389283744, 0.3827297063460295, 0.38000535461763624, 0.3779103691941884, 0.37690911456953463] ***
*** starting iteration: 7; err: [Inf, 0.8026175463996029, 0.424033387100166, 0.38714704389283744, 0.3827297063460295, 0.38000535461763624, 0.3779103691941884, 0.37690911456953463] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8026175463996029, 0.424033387100166, 0.38714704389283744, 0.3827297063460295, 0.38000535461763624, 0.3779103691941884, 0.37690911456953463, 0.37556323332765146] ***
*** starting iteration: 8; err: [Inf, 0.8026175463996029, 0.424033387100166, 0.38714704389283744, 0.3827297063460295, 0.38000535461763624, 0.3779103691941884, 0.37690911456953463, 0.37556323332765146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8026175463996029, 0.424033387100166, 0.38714704389283744, 0.3827297063460295, 0.38000535461763624, 0.3779103691941884, 0.37690911456953463, 0.37556323332765146, 0.37489494090870645] ***
*** finished computation of 3 references, err: [Inf, 0.8026175463996029, 0.424033387100166, 0.38714704389283744, 0.3827297063460295, 0.38000535461763624, 0.3779103691941884, 0.37690911456953463, 0.37556323332765146, 0.37489494090870645] ***
*** center 1: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 5, 31]]
** centroid: 2, normalized-entropy: 0.581321498763703, [(2, 5), (3, 31)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 4]]
** centroid: 3, normalized-entropy: 0.5127091420308771, [(2, 31), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6105566542133047] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6105566542133047, 0.4133209761610032] ***
*** starting iteration: 2; err: [Inf, 0.6105566542133047, 0.4133209761610032] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6105566542133047, 0.4133209761610032, 0.3628508399903997] ***
*** starting iteration: 3; err: [Inf, 0.6105566542133047, 0.4133209761610032, 0.3628508399903997] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6105566542133047, 0.4133209761610032, 0.3628508399903997, 0.34660437525290577] ***
*** starting iteration: 4; err: [Inf, 0.6105566542133047, 0.4133209761610032, 0.3628508399903997, 0.34660437525290577] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6105566542133047, 0.4133209761610032, 0.3628508399903997, 0.34660437525290577, 0.3450562004589314] ***
*** starting iteration: 5; err: [Inf, 0.6105566542133047, 0.4133209761610032, 0.3628508399903997, 0.34660437525290577, 0.3450562004589314] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6105566542133047, 0.4133209761610032, 0.3628508399903997, 0.34660437525290577, 0.3450562004589314, 0.3450562004589314] ***
*** finished computation of 3 references, err: [Inf, 0.6105566542133047, 0.4133209761610032, 0.3628508399903997, 0.34660437525290577, 0.3450562004589314, 0.3450562004589314] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 9]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7306000013816901] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7306000013816901, 0.2443797486450071] ***
*** starting iteration: 2; err: [Inf, 0.7306000013816901, 0.2443797486450071] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7306000013816901, 0.2443797486450071, 0.23118740590552103] ***
*** starting iteration: 3; err: [Inf, 0.7306000013816901, 0.2443797486450071, 0.23118740590552103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7306000013816901, 0.2443797486450071, 0.23118740590552103, 0.22995613427735898] ***
*** finished computation of 7 references, err: [Inf, 0.7306000013816901, 0.2443797486450071, 0.23118740590552103, 0.22995613427735898] ***
*** center 1: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 5]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(2, 6), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 5]]
** centroid: 4, normalized-entropy: 0.8739810481273581, [(2, 12), (3, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5274000027629318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5274000027629318, 0.2500159687918356] ***
*** starting iteration: 2; err: [Inf, 0.5274000027629318, 0.2500159687918356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5274000027629318, 0.2500159687918356, 0.23109289083125056] ***
*** starting iteration: 3; err: [Inf, 0.5274000027629318, 0.2500159687918356, 0.23109289083125056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5274000027629318, 0.2500159687918356, 0.23109289083125056, 0.2216554969677055] ***
*** finished computation of 7 references, err: [Inf, 0.5274000027629318, 0.2500159687918356, 0.23109289083125056, 0.2216554969677055] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 6, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5423000034515073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5423000034515073, 0.27687107496657976] ***
*** starting iteration: 2; err: [Inf, 0.5423000034515073, 0.27687107496657976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5423000034515073, 0.27687107496657976, 0.2534129667415153] ***
*** starting iteration: 3; err: [Inf, 0.5423000034515073, 0.27687107496657976, 0.2534129667415153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5423000034515073, 0.27687107496657976, 0.2534129667415153, 0.24362223650717166] ***
*** finished computation of 7 references, err: [Inf, 0.5423000034515073, 0.27687107496657976, 0.2534129667415153, 0.24362223650717166] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 18, 3]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(2, 18), (3, 3)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48388018452567766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48388018452567766, 0.17673607649916134] ***
*** starting iteration: 2; err: [Inf, 0.48388018452567766, 0.17673607649916134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48388018452567766, 0.17673607649916134, 0.16776925150972782] ***
*** starting iteration: 3; err: [Inf, 0.48388018452567766, 0.17673607649916134, 0.16776925150972782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48388018452567766, 0.17673607649916134, 0.16776925150972782, 0.16650597293769379] ***
*** starting iteration: 4; err: [Inf, 0.48388018452567766, 0.17673607649916134, 0.16776925150972782, 0.16650597293769379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48388018452567766, 0.17673607649916134, 0.16776925150972782, 0.16650597293769379, 0.1630311283759849] ***
*** starting iteration: 5; err: [Inf, 0.48388018452567766, 0.17673607649916134, 0.16776925150972782, 0.16650597293769379, 0.1630311283759849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48388018452567766, 0.17673607649916134, 0.16776925150972782, 0.16650597293769379, 0.1630311283759849, 0.16239255788585433] ***
*** finished computation of 7 references, err: [Inf, 0.48388018452567766, 0.17673607649916134, 0.16776925150972782, 0.16650597293769379, 0.1630311283759849, 0.16239255788585433] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 7]]
** centroid: 1, normalized-entropy: 0.9494520153879484, [(2, 12), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 8, 3]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 8), (3, 3)]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38793523477477054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38793523477477054, 0.2105888056452981] ***
*** starting iteration: 2; err: [Inf, 0.38793523477477054, 0.2105888056452981] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38793523477477054, 0.2105888056452981, 0.19678779458156265] ***
*** starting iteration: 3; err: [Inf, 0.38793523477477054, 0.2105888056452981, 0.19678779458156265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38793523477477054, 0.2105888056452981, 0.19678779458156265, 0.1913442010950934] ***
*** starting iteration: 4; err: [Inf, 0.38793523477477054, 0.2105888056452981, 0.19678779458156265, 0.1913442010950934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38793523477477054, 0.2105888056452981, 0.19678779458156265, 0.1913442010950934, 0.1867117083685261] ***
*** starting iteration: 5; err: [Inf, 0.38793523477477054, 0.2105888056452981, 0.19678779458156265, 0.1913442010950934, 0.1867117083685261] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38793523477477054, 0.2105888056452981, 0.19678779458156265, 0.1913442010950934, 0.1867117083685261, 0.185884563046953] ***
*** finished computation of 7 references, err: [Inf, 0.38793523477477054, 0.2105888056452981, 0.19678779458156265, 0.1913442010950934, 0.1867117083685261, 0.185884563046953] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 4]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 18), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 22]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(2, 4), (3, 22)]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3892185140730611] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3892185140730611, 0.18962153224667783] ***
*** starting iteration: 2; err: [Inf, 0.3892185140730611, 0.18962153224667783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3892185140730611, 0.18962153224667783, 0.18138401744496033] ***
*** starting iteration: 3; err: [Inf, 0.3892185140730611, 0.18962153224667783, 0.18138401744496033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3892185140730611, 0.18962153224667783, 0.18138401744496033, 0.17569254859459224] ***
*** starting iteration: 4; err: [Inf, 0.3892185140730611, 0.18962153224667783, 0.18138401744496033, 0.17569254859459224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3892185140730611, 0.18962153224667783, 0.18138401744496033, 0.17569254859459224, 0.17266601226203146] ***
*** starting iteration: 5; err: [Inf, 0.3892185140730611, 0.18962153224667783, 0.18138401744496033, 0.17569254859459224, 0.17266601226203146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3892185140730611, 0.18962153224667783, 0.18138401744496033, 0.17569254859459224, 0.17266601226203146, 0.17050435861603808] ***
*** starting iteration: 6; err: [Inf, 0.3892185140730611, 0.18962153224667783, 0.18138401744496033, 0.17569254859459224, 0.17266601226203146, 0.17050435861603808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3892185140730611, 0.18962153224667783, 0.18138401744496033, 0.17569254859459224, 0.17266601226203146, 0.17050435861603808, 0.16939343047671315] ***
*** starting iteration: 7; err: [Inf, 0.3892185140730611, 0.18962153224667783, 0.18138401744496033, 0.17569254859459224, 0.17266601226203146, 0.17050435861603808, 0.16939343047671315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3892185140730611, 0.18962153224667783, 0.18138401744496033, 0.17569254859459224, 0.17266601226203146, 0.17050435861603808, 0.16939343047671315, 0.16875198934358196] ***
*** finished computation of 7 references, err: [Inf, 0.3892185140730611, 0.18962153224667783, 0.18138401744496033, 0.17569254859459224, 0.17266601226203146, 0.17050435861603808, 0.16939343047671315, 0.16875198934358196] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 7]]
** centroid: 1, normalized-entropy: 0.8554508105601307, [(2, 18), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 6, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49330580548177605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49330580548177605, 0.18052490716580752] ***
*** starting iteration: 2; err: [Inf, 0.49330580548177605, 0.18052490716580752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49330580548177605, 0.18052490716580752, 0.16020094131786042] ***
*** starting iteration: 3; err: [Inf, 0.49330580548177605, 0.18052490716580752, 0.16020094131786042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49330580548177605, 0.18052490716580752, 0.16020094131786042, 0.16020094131786042] ***
*** finished computation of 7 references, err: [Inf, 0.49330580548177605, 0.18052490716580752, 0.16020094131786042, 0.16020094131786042] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 8]]
** centroid: 1, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 9, 2]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(2, 9), (3, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3903986658261063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3903986658261063, 0.19366538825764157] ***
*** starting iteration: 2; err: [Inf, 0.3903986658261063, 0.19366538825764157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3903986658261063, 0.19366538825764157, 0.18843976487022707] ***
*** starting iteration: 3; err: [Inf, 0.3903986658261063, 0.19366538825764157, 0.18843976487022707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3903986658261063, 0.19366538825764157, 0.18843976487022707, 0.1861553072910876] ***
*** finished computation of 7 references, err: [Inf, 0.3903986658261063, 0.19366538825764157, 0.18843976487022707, 0.1861553072910876] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 1, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3528011456314198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3528011456314198, 0.17559841526892725] ***
*** starting iteration: 2; err: [Inf, 0.3528011456314198, 0.17559841526892725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3528011456314198, 0.17559841526892725, 0.16097202014578801] ***
*** starting iteration: 3; err: [Inf, 0.3528011456314198, 0.17559841526892725, 0.16097202014578801] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3528011456314198, 0.17559841526892725, 0.16097202014578801, 0.15627229500657314] ***
*** finished computation of 7 references, err: [Inf, 0.3528011456314198, 0.17559841526892725, 0.16097202014578801, 0.15627229500657314] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 7]]
** centroid: 4, normalized-entropy: 0.8708644692353648, [(2, 17), (3, 7)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 14)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 15
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.9717000124353798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9717000124353798, 0.5920551454088584] ***
*** starting iteration: 2; err: [Inf, 0.9717000124353798, 0.5920551454088584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9717000124353798, 0.5920551454088584, 0.4482687155429279] ***
*** starting iteration: 3; err: [Inf, 0.9717000124353798, 0.5920551454088584, 0.4482687155429279] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9717000124353798, 0.5920551454088584, 0.4482687155429279, 0.4421716480123051] ***
*** finished computation of 7 references, err: [Inf, 0.9717000124353798, 0.5920551454088584, 0.4482687155429279, 0.4421716480123051] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 1, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 24, 12]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 24), (3, 12)]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7071999949648042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7071999949648042, 0.2751176166047144] ***
*** starting iteration: 2; err: [Inf, 0.7071999949648042, 0.2751176166047144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7071999949648042, 0.2751176166047144, 0.24703050479929212] ***
*** starting iteration: 3; err: [Inf, 0.7071999949648042, 0.2751176166047144, 0.24703050479929212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7071999949648042, 0.2751176166047144, 0.24703050479929212, 0.24610408806650202] ***
*** finished computation of 7 references, err: [Inf, 0.7071999949648042, 0.2751176166047144, 0.24703050479929212, 0.24610408806650202] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 9]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5001999992429528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5001999992429528, 0.3204979795361392] ***
*** starting iteration: 2; err: [Inf, 0.5001999992429528, 0.3204979795361392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5001999992429528, 0.3204979795361392, 0.2936919385533207] ***
*** starting iteration: 3; err: [Inf, 0.5001999992429528, 0.3204979795361392, 0.2936919385533207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5001999992429528, 0.3204979795361392, 0.2936919385533207, 0.2895235479115874] ***
*** finished computation of 7 references, err: [Inf, 0.5001999992429528, 0.3204979795361392, 0.2936919385533207, 0.2895235479115874] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 6]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 7, 4]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(2, 7), (3, 4)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 15
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 16
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.6056649845884641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6056649845884641, 0.32048291795904205] ***
*** starting iteration: 2; err: [Inf, 0.6056649845884641, 0.32048291795904205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204] ***
*** starting iteration: 3; err: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974] ***
*** starting iteration: 4; err: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974, 0.21854792865725892] ***
*** starting iteration: 5; err: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974, 0.21854792865725892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974, 0.21854792865725892, 0.2152917657693958] ***
*** starting iteration: 6; err: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974, 0.21854792865725892, 0.2152917657693958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974, 0.21854792865725892, 0.2152917657693958, 0.2138289569415911] ***
*** starting iteration: 7; err: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974, 0.21854792865725892, 0.2152917657693958, 0.2138289569415911] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974, 0.21854792865725892, 0.2152917657693958, 0.2138289569415911, 0.2106363534058373] ***
*** starting iteration: 8; err: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974, 0.21854792865725892, 0.2152917657693958, 0.2138289569415911, 0.2106363534058373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974, 0.21854792865725892, 0.2152917657693958, 0.2138289569415911, 0.2106363534058373, 0.20756785324530977] ***
*** starting iteration: 9; err: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974, 0.21854792865725892, 0.2152917657693958, 0.2138289569415911, 0.2106363534058373, 0.20756785324530977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974, 0.21854792865725892, 0.2152917657693958, 0.2138289569415911, 0.2106363534058373, 0.20756785324530977, 0.2063662567368749] ***
*** starting iteration: 10; err: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974, 0.21854792865725892, 0.2152917657693958, 0.2138289569415911, 0.2106363534058373, 0.20756785324530977, 0.2063662567368749] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974, 0.21854792865725892, 0.2152917657693958, 0.2138289569415911, 0.2106363534058373, 0.20756785324530977, 0.2063662567368749, 0.2063662567368749] ***
*** finished computation of 7 references, err: [Inf, 0.6056649845884641, 0.32048291795904205, 0.25643125232831204, 0.2329327029377974, 0.21854792865725892, 0.2152917657693958, 0.2138289569415911, 0.2106363534058373, 0.20756785324530977, 0.2063662567368749, 0.2063662567368749] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 9, 21]]
** centroid: 2, normalized-entropy: 0.8812908992306927, [(2, 9), (3, 21)]
*** center 3: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.179160083782324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.179160083782324, 0.6146158297112823] ***
*** starting iteration: 2; err: [Inf, 2.179160083782324, 0.6146158297112823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.179160083782324, 0.6146158297112823, 0.27244783093851793] ***
*** starting iteration: 3; err: [Inf, 2.179160083782324, 0.6146158297112823, 0.27244783093851793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.179160083782324, 0.6146158297112823, 0.27244783093851793, 0.20235218261771915] ***
*** starting iteration: 4; err: [Inf, 2.179160083782324, 0.6146158297112823, 0.27244783093851793, 0.20235218261771915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.179160083782324, 0.6146158297112823, 0.27244783093851793, 0.20235218261771915, 0.1883289719131599] ***
*** starting iteration: 5; err: [Inf, 2.179160083782324, 0.6146158297112823, 0.27244783093851793, 0.20235218261771915, 0.1883289719131599] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.179160083782324, 0.6146158297112823, 0.27244783093851793, 0.20235218261771915, 0.1883289719131599, 0.18281328683806536] ***
*** starting iteration: 6; err: [Inf, 2.179160083782324, 0.6146158297112823, 0.27244783093851793, 0.20235218261771915, 0.1883289719131599, 0.18281328683806536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.179160083782324, 0.6146158297112823, 0.27244783093851793, 0.20235218261771915, 0.1883289719131599, 0.18281328683806536, 0.18166436222066706] ***
*** starting iteration: 7; err: [Inf, 2.179160083782324, 0.6146158297112823, 0.27244783093851793, 0.20235218261771915, 0.1883289719131599, 0.18281328683806536, 0.18166436222066706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.179160083782324, 0.6146158297112823, 0.27244783093851793, 0.20235218261771915, 0.1883289719131599, 0.18281328683806536, 0.18166436222066706, 0.18037239248156847] ***
*** starting iteration: 8; err: [Inf, 2.179160083782324, 0.6146158297112823, 0.27244783093851793, 0.20235218261771915, 0.1883289719131599, 0.18281328683806536, 0.18166436222066706, 0.18037239248156847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.179160083782324, 0.6146158297112823, 0.27244783093851793, 0.20235218261771915, 0.1883289719131599, 0.18281328683806536, 0.18166436222066706, 0.18037239248156847, 0.18037239248156847] ***
*** finished computation of 7 references, err: [Inf, 2.179160083782324, 0.6146158297112823, 0.27244783093851793, 0.20235218261771915, 0.1883289719131599, 0.18281328683806536, 0.18166436222066706, 0.18037239248156847, 0.18037239248156847] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 8]]
** centroid: 3, normalized-entropy: 0.9852281360342514, [(2, 6), (3, 8)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4384903383388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4384903383388, 0.2592708087678127] ***
*** starting iteration: 2; err: [Inf, 0.4384903383388, 0.2592708087678127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4384903383388, 0.2592708087678127, 0.2290619516037224] ***
*** starting iteration: 3; err: [Inf, 0.4384903383388, 0.2592708087678127, 0.2290619516037224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4384903383388, 0.2592708087678127, 0.2290619516037224, 0.20890802912930578] ***
*** starting iteration: 4; err: [Inf, 0.4384903383388, 0.2592708087678127, 0.2290619516037224, 0.20890802912930578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4384903383388, 0.2592708087678127, 0.2290619516037224, 0.20890802912930578, 0.19460585205055328] ***
*** starting iteration: 5; err: [Inf, 0.4384903383388, 0.2592708087678127, 0.2290619516037224, 0.20890802912930578, 0.19460585205055328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4384903383388, 0.2592708087678127, 0.2290619516037224, 0.20890802912930578, 0.19460585205055328, 0.18340603807293923] ***
*** starting iteration: 6; err: [Inf, 0.4384903383388, 0.2592708087678127, 0.2290619516037224, 0.20890802912930578, 0.19460585205055328, 0.18340603807293923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4384903383388, 0.2592708087678127, 0.2290619516037224, 0.20890802912930578, 0.19460585205055328, 0.18340603807293923, 0.17999529805551423] ***
*** starting iteration: 7; err: [Inf, 0.4384903383388, 0.2592708087678127, 0.2290619516037224, 0.20890802912930578, 0.19460585205055328, 0.18340603807293923, 0.17999529805551423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4384903383388, 0.2592708087678127, 0.2290619516037224, 0.20890802912930578, 0.19460585205055328, 0.18340603807293923, 0.17999529805551423, 0.1794662664455934] ***
*** finished computation of 7 references, err: [Inf, 0.4384903383388, 0.2592708087678127, 0.2290619516037224, 0.20890802912930578, 0.19460585205055328, 0.18340603807293923, 0.17999529805551423, 0.1794662664455934] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 18, 7]]
** centroid: 3, normalized-entropy: 0.8554508105601307, [(2, 18), (3, 7)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 16
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 16
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 17
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.3849652336268568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3849652336268568, 0.24595980838032053] ***
*** starting iteration: 2; err: [Inf, 0.3849652336268568, 0.24595980838032053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3849652336268568, 0.24595980838032053, 0.23375287390963684] ***
*** starting iteration: 3; err: [Inf, 0.3849652336268568, 0.24595980838032053, 0.23375287390963684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3849652336268568, 0.24595980838032053, 0.23375287390963684, 0.2195374186057734] ***
*** starting iteration: 4; err: [Inf, 0.3849652336268568, 0.24595980838032053, 0.23375287390963684, 0.2195374186057734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3849652336268568, 0.24595980838032053, 0.23375287390963684, 0.2195374186057734, 0.2114229745117742] ***
*** starting iteration: 5; err: [Inf, 0.3849652336268568, 0.24595980838032053, 0.23375287390963684, 0.2195374186057734, 0.2114229745117742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3849652336268568, 0.24595980838032053, 0.23375287390963684, 0.2195374186057734, 0.2114229745117742, 0.2061564639788479] ***
*** starting iteration: 6; err: [Inf, 0.3849652336268568, 0.24595980838032053, 0.23375287390963684, 0.2195374186057734, 0.2114229745117742, 0.2061564639788479] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3849652336268568, 0.24595980838032053, 0.23375287390963684, 0.2195374186057734, 0.2114229745117742, 0.2061564639788479, 0.20469091462211314] ***
*** starting iteration: 7; err: [Inf, 0.3849652336268568, 0.24595980838032053, 0.23375287390963684, 0.2195374186057734, 0.2114229745117742, 0.2061564639788479, 0.20469091462211314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3849652336268568, 0.24595980838032053, 0.23375287390963684, 0.2195374186057734, 0.2114229745117742, 0.2061564639788479, 0.20469091462211314, 0.20469091462211314] ***
*** finished computation of 7 references, err: [Inf, 0.3849652336268568, 0.24595980838032053, 0.23375287390963684, 0.2195374186057734, 0.2114229745117742, 0.2061564639788479, 0.20469091462211314, 0.20469091462211314] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 4: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4500329174836578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4500329174836578, 0.24021736680625827] ***
*** starting iteration: 2; err: [Inf, 0.4500329174836578, 0.24021736680625827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4500329174836578, 0.24021736680625827, 0.18569069598839383] ***
*** starting iteration: 3; err: [Inf, 0.4500329174836578, 0.24021736680625827, 0.18569069598839383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4500329174836578, 0.24021736680625827, 0.18569069598839383, 0.1631158276723265] ***
*** starting iteration: 4; err: [Inf, 0.4500329174836578, 0.24021736680625827, 0.18569069598839383, 0.1631158276723265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4500329174836578, 0.24021736680625827, 0.18569069598839383, 0.1631158276723265, 0.15854199536322128] ***
*** starting iteration: 5; err: [Inf, 0.4500329174836578, 0.24021736680625827, 0.18569069598839383, 0.1631158276723265, 0.15854199536322128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4500329174836578, 0.24021736680625827, 0.18569069598839383, 0.1631158276723265, 0.15854199536322128, 0.15854199536322128] ***
*** finished computation of 7 references, err: [Inf, 0.4500329174836578, 0.24021736680625827, 0.18569069598839383, 0.1631158276723265, 0.15854199536322128, 0.15854199536322128] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 8]]
** centroid: 2, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.327651099716322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.327651099716322, 0.18679440609645642] ***
*** starting iteration: 2; err: [Inf, 0.327651099716322, 0.18679440609645642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.327651099716322, 0.18679440609645642, 0.18182596203482615] ***
*** starting iteration: 3; err: [Inf, 0.327651099716322, 0.18679440609645642, 0.18182596203482615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.327651099716322, 0.18679440609645642, 0.18182596203482615, 0.1814388038416145] ***
*** finished computation of 7 references, err: [Inf, 0.327651099716322, 0.18679440609645642, 0.18182596203482615, 0.1814388038416145] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 9]]
** centroid: 3, normalized-entropy: 1.0, [(2, 9), (3, 9)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 4, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 17
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 18
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.7340834696004113] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7340834696004113, 0.38376622309053404] ***
*** starting iteration: 2; err: [Inf, 0.7340834696004113, 0.38376622309053404] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7340834696004113, 0.38376622309053404, 0.3745205231596166] ***
*** starting iteration: 3; err: [Inf, 0.7340834696004113, 0.38376622309053404, 0.3745205231596166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7340834696004113, 0.38376622309053404, 0.3745205231596166, 0.3667982214012631] ***
*** starting iteration: 4; err: [Inf, 0.7340834696004113, 0.38376622309053404, 0.3745205231596166, 0.3667982214012631] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7340834696004113, 0.38376622309053404, 0.3745205231596166, 0.3667982214012631, 0.36384954982049444] ***
*** starting iteration: 5; err: [Inf, 0.7340834696004113, 0.38376622309053404, 0.3745205231596166, 0.3667982214012631, 0.36384954982049444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7340834696004113, 0.38376622309053404, 0.3745205231596166, 0.3667982214012631, 0.36384954982049444, 0.3642044187134496] ***
*** finished computation of 3 references, err: [Inf, 0.7340834696004113, 0.38376622309053404, 0.3745205231596166, 0.3667982214012631, 0.36384954982049444, 0.3642044187134496] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 11]]
** centroid: 3, normalized-entropy: 0.8980587934501658, [(2, 24), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6988818270471424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6988818270471424, 0.43965067493453036] ***
*** starting iteration: 2; err: [Inf, 0.6988818270471424, 0.43965067493453036] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219] ***
*** starting iteration: 3; err: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219, 0.38451888230882036] ***
*** starting iteration: 4; err: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219, 0.38451888230882036] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219, 0.38451888230882036, 0.3813680917701135] ***
*** starting iteration: 5; err: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219, 0.38451888230882036, 0.3813680917701135] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219, 0.38451888230882036, 0.3813680917701135, 0.38000535461763624] ***
*** starting iteration: 6; err: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219, 0.38451888230882036, 0.3813680917701135, 0.38000535461763624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219, 0.38451888230882036, 0.3813680917701135, 0.38000535461763624, 0.3779103691941884] ***
*** starting iteration: 7; err: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219, 0.38451888230882036, 0.3813680917701135, 0.38000535461763624, 0.3779103691941884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219, 0.38451888230882036, 0.3813680917701135, 0.38000535461763624, 0.3779103691941884, 0.37690911456953463] ***
*** starting iteration: 8; err: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219, 0.38451888230882036, 0.3813680917701135, 0.38000535461763624, 0.3779103691941884, 0.37690911456953463] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219, 0.38451888230882036, 0.3813680917701135, 0.38000535461763624, 0.3779103691941884, 0.37690911456953463, 0.37556323332765146] ***
*** starting iteration: 9; err: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219, 0.38451888230882036, 0.3813680917701135, 0.38000535461763624, 0.3779103691941884, 0.37690911456953463, 0.37556323332765146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219, 0.38451888230882036, 0.3813680917701135, 0.38000535461763624, 0.3779103691941884, 0.37690911456953463, 0.37556323332765146, 0.37489494090870645] ***
*** finished computation of 3 references, err: [Inf, 0.6988818270471424, 0.43965067493453036, 0.392451918246219, 0.38451888230882036, 0.3813680917701135, 0.38000535461763624, 0.3779103691941884, 0.37690911456953463, 0.37556323332765146, 0.37489494090870645] ***
*** center 1: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 31]]
** centroid: 2, normalized-entropy: 0.581321498763703, [(2, 5), (3, 31)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 4]]
** centroid: 3, normalized-entropy: 0.5127091420308771, [(2, 31), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5962477971622735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5962477971622735, 0.3946789237724346] ***
*** starting iteration: 2; err: [Inf, 0.5962477971622735, 0.3946789237724346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5962477971622735, 0.3946789237724346, 0.3574687842998432] ***
*** starting iteration: 3; err: [Inf, 0.5962477971622735, 0.3946789237724346, 0.3574687842998432] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5962477971622735, 0.3946789237724346, 0.3574687842998432, 0.34660437525290577] ***
*** starting iteration: 4; err: [Inf, 0.5962477971622735, 0.3946789237724346, 0.3574687842998432, 0.34660437525290577] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5962477971622735, 0.3946789237724346, 0.3574687842998432, 0.34660437525290577, 0.3450562004589314] ***
*** starting iteration: 5; err: [Inf, 0.5962477971622735, 0.3946789237724346, 0.3574687842998432, 0.34660437525290577, 0.3450562004589314] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5962477971622735, 0.3946789237724346, 0.3574687842998432, 0.34660437525290577, 0.3450562004589314, 0.3450562004589314] ***
*** finished computation of 3 references, err: [Inf, 0.5962477971622735, 0.3946789237724346, 0.3574687842998432, 0.34660437525290577, 0.3450562004589314, 0.3450562004589314] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 9]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 3, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
finished with 3 centroids; started with 3
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.5125, 3.1125, 6.425, 2.125], [5.343750000000001, 3.7312499999999997, 1.4562500000000003, 0.2625], [5.553333333333334, 2.6466666666666665, 4.073333333333333, 1.2400000000000004], [6.453846153846153, 2.8923076923076922, 4.6000000000000005, 1.4538461538461538], [5.972727272727273, 2.7363636363636363, 5.018181818181817, 1.881818181818182], [6.54, 3.0200000000000005, 5.526666666666666, 2.106666666666667], [4.872222222222222, 3.2222222222222223, 1.5000000000000002, 0.22222222222222227], [4.4, 2.8, 1.275, 0.19999999999999998]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 2, 3, 3, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.515789473684211, 2.5631578947368423, 3.7999999999999994, 1.1578947368421055], [5.985714285714287, 2.9142857142857146, 4.671428571428571, 1.5], [6.0777777777777775, 2.7111111111111112, 5.022222222222222, 1.7222222222222223], [5.325000000000001, 3.8416666666666663, 1.55, 0.27499999999999997], [4.7941176470588225, 3.2529411764705882, 1.4411764705882355, 0.22352941176470592], [6.62, 3.03, 4.58, 1.4100000000000001], [7.425000000000001, 3.0375, 6.249999999999999, 1.95], [6.550000000000001, 3.0555555555555554, 5.527777777777778, 2.172222222222222]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 2, 3, 1, 1, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.183333333333333, 2.35, 3.633333333333333, 1.1333333333333335], [5.3, 2.8333333333333335, 4.5, 1.5666666666666667], [4.9818181818181815, 3.378787878787879, 1.4515151515151512, 0.25151515151515147], [5.736363636363636, 2.8, 4.045454545454546, 1.263636363636364], [6.33125, 2.875, 4.60625, 1.4437499999999999], [7.140000000000001, 3.1866666666666665, 5.946666666666666, 2.1533333333333338], [6.1187499999999995, 2.90625, 5.16875, 1.925]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 2, 1, 2, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[69, 35, 27, 13, 2, 1, 32, 12, 20, 13, 34, 1, 15, 3, 37, 29, 25, 42, 32, 17, 27, 43, 48, 35, 19, 25, 40, 37, 33, 12, 35, 26, 16, 44, 45, 31, 1, 47, 26, 40, 31, 29, 37, 8, 18, 45, 26, 16, 33, 30, 47, 42, 33, 18, 29, 35, 52, 35, 19, 18, 17, 1, 39, 38, 8, 31, 1, 28, 39, 36, 39, 25, 37, 14, 28, 27, 52, 41, 52, 10, 35, 18, 45, 32, 30, 48, 14, 35, 35, 27, 53, 30, 18, 48, 26, 40, 25, 39, 18, 35, 34, 36, 43, 20, 25, 31, 26, 41, 49, 25, 29, 42, 23, 27, 26, 45, 32, 59, 36, 19, 55, 36, 31, 47, 43, 3, 21, 24, 45, 35, 37, 32, 16, 45, 32, 41, 37, 32, 43, 22, 32, 32, 40, 41, 79, 23, 48, 22, 33, 26, 25, 98, 23, 31, 13, 42, 34, 35, 36, 52, 27, 31, 47, 35, 24, 12, 35, 35, 25, 38, 28, 17, 46, 19, 38, 34, 40, 34, 28, 35, 30, 56, 24, 35, 17, 32, 40, 35, 56, 30, 40, 48, 48, 57, 29, 36, 39, 38, 37, 45, 38, 45, 43, 43, 40, 41, 70, 41, 68, 43, 27, 31, 57, 25, 28, 33, 27, 32, 52, 50, 31, 21, 29, 37, 23, 32, 28, 33, 34, 44, 41, 19, 23, 4, 36, 34, 9, 24, 45, 38, 27, 27, 25, 21, 44, 34, 34, 49, 15, 39, 34, 44, 100, 29, 45, 59, 45, 41, 49, 38, 49, 25, 1, 42, 43, 32, 37, 44, 50, 2, 24, 40, 40, 51, 23, 8, 33, 59, 51, 30, 29, 1, 47, 29, 25, 40, 42, 46, 35, 29, 37, 42, 20, 33, 13, 38, 37, 39, 63, 39]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.57, speedup = 0.34569955307995054, eval_ratio = 0.041017000000000005)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.39918154761904756,"recall":0.39322916666666663,"f1":null,"seconds":8.02408903837204e-5,"exhaustive_search_seconds":0.00034933537244796753,"evaluations":339.5078125,"distances_sum":1741.13335733351}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5434027777777777,"recall":0.5434027777777777,"f1":null,"seconds":0.00011463463306427002,"exhaustive_search_seconds":0.00034933537244796753,"evaluations":375.75,"distances_sum":1651.1869692663856}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6501736111111108,"recall":0.6501736111111108,"f1":0.6501736111111108,"seconds":0.0001479554921388626,"exhaustive_search_seconds":0.00034933537244796753,"evaluations":415.59375,"distances_sum":1606.4596631872073}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7222222222222217,"recall":0.7222222222222217,"f1":0.7222222222222217,"seconds":0.00017637573182582855,"exhaustive_search_seconds":0.00034933537244796753,"evaluations":452.7890625,"distances_sum":1580.2494432812452}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7803819444444438,"recall":0.7803819444444438,"f1":0.7803819444444438,"seconds":0.00021275877952575684,"exhaustive_search_seconds":0.00034933537244796753,"evaluations":493.4453125,"distances_sum":1565.6499003829588}
KCenters.DeloneInvIndex> reached performance {"precision":0.8203124999999989,"recall":0.8203124999999989,"f1":0.8203124999999989,"seconds":0.0002485103905200958,"exhaustive_search_seconds":0.00034933537244796753,"evaluations":534.5625,"distances_sum":1556.0986462084022}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7659999999999998, speedup = 1.4798142055351267, eval_ratio = 0.052507000000000005)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
