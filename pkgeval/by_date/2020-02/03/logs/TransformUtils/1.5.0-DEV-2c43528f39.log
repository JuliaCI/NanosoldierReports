Julia Version 1.5.0-DEV.225
Commit 2c43528f39 (2020-02-03 15:22 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_Ocl5ES/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.07540369545596087 -0.021377817101626048; -0.07540369545596087 0.0 0.005536535586612795; 0.021377817101626048 -0.005536535586612795 0.0])
dAA = so3([0.0 0.1574664456423504 0.1506122463615891; -0.1574664456423504 0.0 0.11812273989357865; -0.1506122463615891 -0.11812273989357865 0.0])
dAA = so3([0.0 -0.03989729878872344 -0.05553340854296679; 0.03989729878872344 0.0 -0.014167255285290867; 0.05553340854296679 0.014167255285290867 0.0])
dAA = Quaternion(0.998760707908049, [-0.004867438160503109, 0.04892998026938818, 0.007695025380317342])
dAA = SO3([0.995658663172734 0.08225285755988324 0.04356941441330423; -0.08283829220813924 0.9964931018475034 0.011803190855883333; -0.04244577473817176 -0.015361165111248245 0.9989806758958362])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8563129079417614 0.31511391168486047 0.40918385397641277; -0.42279348012875445 0.8827355862435626 0.2049964827499493; -0.2966039056602945 -0.3485413998966258 0.8891259841581278]), [-0.05536535586612795, -0.21377817101626048, -0.7540369545596086])
xj = SE3(SO3([0.9694636880142764 -0.03977786073167971 0.24198735383769315; 0.03428740970771693 0.9990510141051141 0.02685972358529268; -0.24282613359622757 -0.017742407140922626 0.9699075604569504]), [0.14167255285290867, -0.5553340854296679, 0.39897298788723434])
Dx = SE3(SO3([0.8876909561735532 -0.45119208342069694 -0.09181759192101499; 0.420393172210839 0.8755472887521217 -0.23808932340051944; 0.18781466153149784 0.17275025041168565 0.9668934811531769]), [-0.028853533891519872, -0.6412858736131659, 1.0357780695740724])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
