Julia Version 1.5.0-DEV.221
Commit fbc2c0aec1 (2020-02-01 18:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_144Vsi/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.009236119152446823 0.14179864197087916; -0.009236119152446823 0.0 -0.11743078140488472; -0.14179864197087916 0.11743078140488472 0.0])
dAA = so3([0.0 0.05552335402240134 0.027126467469447742; -0.05552335402240134 0.0 0.05932145142171348; -0.027126467469447742 -0.05932145142171348 0.0])
dAA = so3([0.0 0.14359962759113412 0.04896774651611731; -0.14359962759113412 0.0 0.007039166029148798; -0.04896774651611731 -0.007039166029148798 0.0])
dAA = Quaternion(0.9973630974202231, [0.07047964395727621, 0.011374095309072546, 0.013042302246711952])
dAA = SO3([0.9795501890048127 0.023450129120654545 -0.1998287233228998; -0.020653558944979517 0.9996575620128033 0.01606826728444737; 0.2001370973196665 -0.011612499939410756 0.9796990824337927])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9881121363318776 0.1327403357726467 0.07755262273203932; -0.1427593417598711 0.9794478581807994 0.14248390591688923; -0.057045388717593404 -0.1518614380414252 0.9867542385325989]), [1.1743078140488472, 1.4179864197087915, -0.09236119152446823])
xj = SE3(SO3([0.996297020242619 -0.05844566599685104 0.06305831889499557; 0.07666865965449472 0.9358587939711581 -0.34393347376147126; -0.03891226133831956 0.3474944918599918 0.9368742786759088]), [-0.07039166029148798, 0.48967746516117305, -1.4359962759113412])
Dx = SE3(SO3([0.975727774781056 -0.2111764156603731 0.057964049113622275; 0.21325102744876143 0.8560957807405062 -0.47076959703272137; 0.049792658222440805 0.47170386437588185 0.8803500187539058]), [-1.020729695697136, -0.870405687303793, -1.5546364090497051])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
