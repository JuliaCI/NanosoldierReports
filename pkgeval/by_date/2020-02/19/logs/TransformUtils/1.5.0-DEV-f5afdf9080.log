Julia Version 1.5.0-DEV.295
Commit f5afdf9080 (2020-02-19 18:51 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_C7ZV0c/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.0315707650283923 -0.19210939441947195; -0.0315707650283923 0.0 -0.1933006618732249; 0.19210939441947195 0.1933006618732249 0.0])
dAA = so3([0.0 -0.04712244844217836 0.06174118044574737; 0.04712244844217836 0.0 -0.05134112697874449; -0.06174118044574737 0.05134112697874449 0.0])
dAA = so3([0.0 -0.07501410663684786 -0.0053457425930614035; 0.07501410663684786 0.0 0.07108568882076548; 0.0053457425930614035 -0.07108568882076548 0.0])
dAA = Quaternion(0.9996004487221946, [-0.01825245689220336, 0.015099272939975893, 0.015420852391149409])
dAA = SO3([0.9979591566342708 -0.041221987761472796 -0.04876750367620284; 0.03404867061104739 0.9896041191291497 -0.13972965122779307; 0.054020456490443215 0.13778401622689507 0.9889880460111494])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9812333995541045 -0.10688408153270232 0.1604892791260706; 0.12660643355336182 0.9848920306223365 -0.118146091765698; -0.14543667550653563 0.13624786652098886 0.9799411677677826]), [1.9330066187322488, -1.9210939441947195, -0.315707650283923])
xj = SE3(SO3([0.9941853965108522 -0.07895243151467417 0.07322507031393125; 0.07203461771376923 0.9930817757890342 0.09273403068199607; -0.08004006006613572 -0.0869200791165019 0.9929947072522544]), [-0.7108568882076548, -0.05345742593061403, 0.7501410663684785])
Dx = SE3(SO3([0.9962887226898712 0.06090114642275167 -0.06082623944795082; -0.04622155948429282 0.9746744095206583 0.2187998237302666; 0.07261093911956287 -0.215176313264147 0.9738720684618818]), [-2.5128058720630744, 2.26722685925269, 0.3995033322518369])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
