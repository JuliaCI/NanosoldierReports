Julia Version 1.5.0-DEV.288
Commit b0d1c1abb6 (2020-02-18 18:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_SWKr31/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.019895743766850868 0.043872114018399286; 0.019895743766850868 0.0 0.07755840486913057; -0.043872114018399286 -0.07755840486913057 0.0])
dAA = so3([0.0 0.05676741574346146 -0.06958240458238307; -0.05676741574346146 0.0 0.16443268254587617; 0.06958240458238307 -0.16443268254587617 0.0])
dAA = so3([0.0 0.08973126823024774 0.0342770223244653; -0.08973126823024774 0.0 -0.056614036029402716; -0.0342770223244653 0.056614036029402716 0.0])
dAA = Quaternion(0.9995654647476073, [-0.010367619392900266, -0.02530617492386408, -0.010999621027411382])
dAA = SO3([0.9913943535144979 0.03894313584629643 0.12498267075890185; -0.02680364357885586 0.9948861245893753 -0.0973815372153882; -0.12813586738485372 0.0931935151713427 0.9873683042408948])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9752565937219242 0.17189205869428403 -0.1390240862575633; -0.10167978360785682 0.9071517593715019 0.4083343079813992; 0.19630536927799247 -0.3840947872947894 0.9021836821654454]), [-0.7755840486913056, 0.43872114018399283, 0.19895743766850865])
xj = SE3(SO3([0.9904960314503048 0.05674582736964624 -0.12528975519702726; -0.05033973373454146 0.9972863682457274 0.05371974421740148; 0.12799813627054177 -0.046902140541577396 0.9906647598072145]), [0.5661403602940271, 0.342770223244653, -0.8973126823024774])
Dx = SE3(SO3([0.996233040367797 -0.055269261828780086 0.06682093965544769; 0.07542920702596577 0.9324591083351935 -0.35331352367291285; -0.04278041616171134 0.35702285638266584 0.9331154891080703]), [1.1030781345626315, 0.5646613662939186, -1.21474907472064])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
