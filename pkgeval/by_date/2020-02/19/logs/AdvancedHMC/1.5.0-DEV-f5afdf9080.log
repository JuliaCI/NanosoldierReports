Julia Version 1.5.0-DEV.295
Commit f5afdf9080 (2020-02-19 18:51 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ArrayLayouts ─────── v0.1.5
  Installed ProgressMeter ────── v1.2.0
  Installed InplaceOps ───────── v0.3.0
  Installed SortingAlgorithms ── v0.3.1
  Installed Rmath ────────────── v0.6.0
  Installed SpecialFunctions ─── v0.10.0
  Installed AdvancedHMC ──────── v0.2.20
  Installed LazyArrays ───────── v0.14.11
  Installed MacroTools ───────── v0.5.4
  Installed DataAPI ──────────── v1.1.0
  Installed StaticArrays ─────── v0.12.1
  Installed Requires ─────────── v1.0.1
  Installed FillArrays ───────── v0.8.4
  Installed StatsFuns ────────── v0.9.4
  Installed ArgCheck ─────────── v1.1.0
  Installed BinaryProvider ───── v0.5.8
  Installed OrderedCollections ─ v1.1.0
  Installed OpenSpecFun_jll ──── v0.5.3+1
  Installed Missings ─────────── v0.4.3
  Installed Parameters ───────── v0.12.0
  Installed StatsBase ────────── v0.32.1
  Installed DataStructures ───── v0.17.9
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.1.0
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.1
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                                                                                                    0.4%##                                                                         3.4%#####                                                                      7.7%#########                                                                 12.7%##############                                                            20.2%####################                                                      28.6%#######################                                                   32.7%################################                                          45.7%############################################                              62.0%###########################################################               82.8%######################################################################## 100.0%
#=#=#                                                                         ###################                                                       27.0%###############################################################           88.4%######################################################################## 100.0%
#=#=#                                                                         ##################################################################        92.1%######################################################################## 100.0%
Status `/tmp/jl_BYPjSr/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.4.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.16.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.1.1
  [ffbed154] DocStringExtensions v0.8.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [26cc04aa] FiniteDifferences v0.9.2
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.4.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [c7f686f2] MCMCChains v2.0.0
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.29.0
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.5.3
  [2dfb63ee] PooledArrays v0.5.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v0.8.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.1
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.1
  [9f7883ad] Tracker v0.2.6
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.7.1
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.17410284
│   t_steps = 0.008399228
└   t_step / t_steps = 20.72843361318445
Sampling  0%|                               |  ETA: 6:23:25[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9278461866128874
  log_density:                   -11.181531132811717
  hamiltonian_energy:            12.275683010379781
  hamiltonian_energy_error:      0.12026653407356136
  max_hamiltonian_energy_error:  0.12026653407356136
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9
  nom_step_size:                 0.9
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:24[K
  iterations:                    1360
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.7882753768242543
  log_density:                   -12.030687604173561
  hamiltonian_energy:            16.62421177655942
  hamiltonian_energy_error:      -0.047166260377665026
  max_hamiltonian_energy_error:  0.508998359623817
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8691069340225653
  nom_step_size:                 0.8691069340225653
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9284812619847068, 0.8750 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▎                          |  ETA: 0:00:20[K
  iterations:                    1641
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9867628559757856
  log_density:                   -13.666313168214757
  hamiltonian_energy:            19.985014524858613
  hamiltonian_energy_error:      -0.6519310163105914
  max_hamiltonian_energy_error:  -0.9127615699960145
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8381370472223959
  nom_step_size:                 0.8381370472223959
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9284812619847068, 0.8750 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████                          |  ETA: 0:00:17[K
  iterations:                    1915
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.8066052059116992
  log_density:                   -17.85930008073349
  hamiltonian_energy:            21.80481403068697
  hamiltonian_energy_error:      0.48272687587456176
  max_hamiltonian_energy_error:  0.7426682810161118
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8066202876982936
  nom_step_size:                 0.8066202876982936
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9284812619847068, 0.8750 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|██████                         |  ETA: 0:00:14[K
  iterations:                    2300
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9212502744862839
  log_density:                   -14.398491023030129
  hamiltonian_energy:            17.97546007390768
  hamiltonian_energy_error:      0.1435415846564787
  max_hamiltonian_energy_error:  0.1831755936009607
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████▏                       |  ETA: 0:00:12[K
  iterations:                    2766
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.779013869271313
  log_density:                   -14.372826287039162
  hamiltonian_energy:            17.875959430893207
  hamiltonian_energy_error:      0.36513006126534364
  max_hamiltonian_energy_error:  0.6072043760603947
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▎                      |  ETA: 0:00:10[K
  iterations:                    3209
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9919773064728163
  log_density:                   -15.883942488572195
  hamiltonian_energy:            20.43971135683475
  hamiltonian_energy_error:      -0.0007823817300298685
  max_hamiltonian_energy_error:  -0.15440483446290187
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▍                     |  ETA: 0:00:08[K
  iterations:                    3623
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9331247061816538
  log_density:                   -13.46178019259175
  hamiltonian_energy:            15.78245168033934
  hamiltonian_energy_error:      0.16177010191932517
  max_hamiltonian_energy_error:  0.16177010191932517
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▍                    |  ETA: 0:00:07[K
  iterations:                    4020
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9203977051433052
  log_density:                   -13.619665742407179
  hamiltonian_energy:            18.888709299361864
  hamiltonian_energy_error:      -0.03356650424144192
  max_hamiltonian_energy_error:  0.21475147314756526
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▌                   |  ETA: 0:00:07[K
  iterations:                    4474
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8016888772459322
  log_density:                   -11.559789387400057
  hamiltonian_energy:            15.725240716561954
  hamiltonian_energy_error:      0.08756813360093219
  max_hamiltonian_energy_error:  0.4125656484725635
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▋                  |  ETA: 0:00:06[K
  iterations:                    4886
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.567491745988196
  hamiltonian_energy:            21.962134319566434
  hamiltonian_energy_error:      -0.013230975762596131
  max_hamiltonian_energy_error:  -0.14511310903481345
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 44%|█████████████▋                 |  ETA: 0:00:05[K
  iterations:                    5296
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.844163612504272
  log_density:                   -14.573800959044739
  hamiltonian_energy:            27.4660977100865
  hamiltonian_energy_error:      -0.39453272067490275
  max_hamiltonian_energy_error:  0.5228599819610018
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▌                |  ETA: 0:00:05[K
  iterations:                    5635
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.985372194924154
  log_density:                   -12.932408738033436
  hamiltonian_energy:            17.477733966839153
  hamiltonian_energy_error:      -0.09136925864587653
  max_hamiltonian_energy_error:  -0.09136925864587653
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▌               |  ETA: 0:00:04[K
  iterations:                    6001
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.817785320465137
  log_density:                   -16.56547162395225
  hamiltonian_energy:            27.076767682794262
  hamiltonian_energy_error:      0.0039004671249927014
  max_hamiltonian_energy_error:  0.49130985642707614
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▍              |  ETA: 0:00:04[K
  iterations:                    6347
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8634618216476022
  log_density:                   -15.2459519284901
  hamiltonian_energy:            16.87550188780663
  hamiltonian_energy_error:      0.33302459618132474
  max_hamiltonian_energy_error:  0.33302459618132474
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▎             |  ETA: 0:00:04[K
  iterations:                    6663
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9881034997271021
  log_density:                   -13.040344778249223
  hamiltonian_energy:            21.432687364365503
  hamiltonian_energy_error:      -0.45114147562749096
  max_hamiltonian_energy_error:  -0.4827331789801157
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▎            |  ETA: 0:00:03[K
  iterations:                    7045
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -18.02063785471443
  hamiltonian_energy:            24.564793921959733
  hamiltonian_energy_error:      -0.03438805165978209
  max_hamiltonian_energy_error:  -0.2230041472660993
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▎           |  ETA: 0:00:03[K
  iterations:                    7430
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9918513330193325
  log_density:                   -16.24709304938839
  hamiltonian_energy:            18.63528400979719
  hamiltonian_energy_error:      0.05873212438861941
  max_hamiltonian_energy_error:  -0.3139374991278352
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████▏          |  ETA: 0:00:03[K
  iterations:                    7813
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9617923717241148
  log_density:                   -12.38678601813983
  hamiltonian_energy:            15.290845648003682
  hamiltonian_energy_error:      0.02184419698045481
  max_hamiltonian_energy_error:  0.07379961795494161
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▎         |  ETA: 0:00:02[K
  iterations:                    8247
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9342789033043358
  log_density:                   -15.141245540541968
  hamiltonian_energy:            20.05894648776787
  hamiltonian_energy_error:      -0.16176027254933345
  max_hamiltonian_energy_error:  -0.581525628852301
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▍        |  ETA: 0:00:02[K
  iterations:                    8667
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8097051965343501
  log_density:                   -12.158535042153556
  hamiltonian_energy:            18.684692314971436
  hamiltonian_energy_error:      -0.056353186016323775
  max_hamiltonian_energy_error:  0.3847841006359616
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▎       |  ETA: 0:00:02[K
  iterations:                    8981
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8707442798998489
  log_density:                   -11.698465640765267
  hamiltonian_energy:            16.159169752545445
  hamiltonian_energy_error:      0.015468538471090199
  max_hamiltonian_energy_error:  0.3065577241983384
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|███████████████████████▉       |  ETA: 0:00:02[K
  iterations:                    9231
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.191321445689507
  hamiltonian_energy:            22.002701387241302
  hamiltonian_energy_error:      -0.29458042794591677
  max_hamiltonian_energy_error:  -0.4202294788883165
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▋      |  ETA: 0:00:01[K
  iterations:                    9554
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7293391849294955
  log_density:                   -15.76928145735446
  hamiltonian_energy:            20.28010962886128
  hamiltonian_energy_error:      0.3052764952060407
  max_hamiltonian_energy_error:  0.5680045952633215
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▉     |  ETA: 0:00:01[K
  iterations:                    9997
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9573007781576496
  log_density:                   -10.64400843869211
  hamiltonian_energy:            13.89285581669717
  hamiltonian_energy_error:      -0.09538222553521081
  max_hamiltonian_energy_error:  0.11038630363656665
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|███████████████████████████▏   |  ETA: 0:00:01[K
  iterations:                    10486
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -18.756636778084065
  hamiltonian_energy:            25.194667274222933
  hamiltonian_energy_error:      -0.02084254511047945
  max_hamiltonian_energy_error:  -0.2754802303575232
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▏  |  ETA: 0:00:01[K
  iterations:                    10907
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9556130735371043
  log_density:                   -18.255191485767874
  hamiltonian_energy:            22.55141463639137
  hamiltonian_energy_error:      0.05012321590646707
  max_hamiltonian_energy_error:  -0.4810099478661023
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▎ |  ETA: 0:00:00[K
  iterations:                    11323
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.905727691638428
  log_density:                   -13.934159465088616
  hamiltonian_energy:            17.428565018758484
  hamiltonian_energy_error:      0.11329959163043313
  max_hamiltonian_energy_error:  0.16234196939773327
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▍|  ETA: 0:00:00[K
  iterations:                    11758
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8127049148492435
  log_density:                   -13.255062728527234
  hamiltonian_energy:            18.253321454120712
  hamiltonian_energy_error:      0.12459696953755994
  max_hamiltonian_energy_error:  0.3819160582617762
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6613886167506436
  log_density:                   -12.359229901767925
  hamiltonian_energy:            21.549378528445995
  hamiltonian_energy_error:      0.01954067490702016
  max_hamiltonian_energy_error:  0.8610320886552181
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6433133992088498
  nom_step_size:                 0.6433133992088498
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8746096216689828, 1.0249 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.972131378 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.8746096216689828, 1.0249 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.643), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0778826311304242
└   average_acceptance_rate = 0.8880998947870345
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.092331745 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢣⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢆⠀⠀⠀⠀⢰⢆⠀⢠⠃⠈⢆│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠈⢆⠀⠀⠀⡎⠈⢆⡎⠀⠀⠘│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠈⠣⡀⡸⠀⠀⠈⠁⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠑⠇⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠊⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⡀⠀⢀⠎⡀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢇⠀⠀⡜⠈⠢⠎⡜⠑⢄⡠⠔⠉⠉⠊⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢜⡄⡰⠁⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠹⠧⠔⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
