Julia Version 1.5.0-DEV.230
Commit 3720edfc06 (2020-02-03 20:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_762qqp/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.04395301443139022 -0.13189402372408776; -0.04395301443139022 0.0 0.001636953318798531; 0.13189402372408776 -0.001636953318798531 0.0])
dAA = so3([0.0 0.11535888276420925 0.0739811097269951; -0.11535888276420925 0.0 -0.060548381897935; -0.0739811097269951 0.060548381897935 0.0])
dAA = so3([0.0 -0.14298541975928902 -0.004175487310678476; 0.14298541975928902 0.0 -0.024329393257262726; 0.004175487310678476 0.024329393257262726 0.0])
dAA = Quaternion(0.999634265325802, [0.007165980602361247, 0.02091004958504027, -0.015580569145643068])
dAA = SO3([0.9944976850745133 0.08613400257867576 -0.059626235678689674; -0.09520506839736628 0.9805942433295902 -0.17137947631009193; 0.043707543203510946 0.17611321230573596 0.9833990985955132])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9419927160307461 0.2955363165003878 0.1590849099518894; -0.2678656223037298 0.9475741834297492 -0.17421588700597754; -0.2022318751652512 0.12149671817307064 0.9717719980223343]), [-0.01636953318798531, -1.3189402372408776, -0.4395301443139022])
xj = SE3(SO3([0.9915093862292109 0.07876744704703828 0.10346413052389493; -0.07517641757172293 0.9964395689090579 -0.03816663141296119; -0.10610204173556462 0.0300645106067421 0.9939006398737862]), [0.24329393257262724, -0.04175487310678476, 1.4298541975928902])
Dx = SE3(SO3([0.9755890124384919 -0.19879354619116457 -0.0933124043309855; 0.20890074942570888 0.9711317913787116 0.11516735936432637; 0.06772411460229796 -0.13184904158284974 0.9889536260791095]), [-0.47556205986356825, 1.5140919252542069, 1.6354179149910797])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
