Julia Version 1.5.0-DEV.234
Commit f2d68ad6eb (2020-02-05 16:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed DataValueInterfaces ───────── v1.0.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed KCenters ──────────────────── v0.1.9
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed JSON ──────────────────────── v0.21.0
  Installed Reexport ──────────────────── v0.2.0
  Installed Parsers ───────────────────── v0.3.11
  Installed TableTraits ───────────────── v1.0.0
  Installed Tables ────────────────────── v0.2.11
  Installed Compat ────────────────────── v3.2.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed DataFrames ────────────────── v0.20.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed Missings ──────────────────── v0.4.3
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed OrderedCollections ────────── v1.1.0
  Installed MLDataUtils ───────────────── v0.5.0
  Installed MLDataPattern ─────────────── v0.5.0
  Installed StatsBase ─────────────────── v0.32.0
  Installed DataAPI ───────────────────── v1.1.0
  Installed SimilaritySearch ──────────── v0.3.17
  Installed DataStructures ────────────── v0.17.9
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_9wiQy5/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 158.98000000000002
[ Info: 74.92000000000003
[ Info: 39.700000000000024
[ Info: 28.739999999999995
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.19999834944844
[ Info: 75.72000115944812
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.68112382564134
inertia(cdnet.distances) = 30.613999940965037
inertia(crand.distances) = 26.967872311607014
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.42578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.42578125,"f1":null,"seconds":4.382804036140442e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":6.5859375,"distances_sum":1170.966470073198}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.8331543456543464,"seconds":4.762783646583557e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.25,"distances_sum":2177.9115035112713}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.728515625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.728515625,"f1":0.8331543456543464,"seconds":4.762783646583557e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.25,"distances_sum":2177.9115035112713}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8635567557442565,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.5703125,"distances_sum":2345.1510182293664}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8752523518148525,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.6484375,"distances_sum":2451.436633688867}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9602907509157514,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.953125,"distances_sum":3048.325936280896}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9171219405594412,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.828125,"distances_sum":2706.0918192253935}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9602907509157514,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.953125,"distances_sum":3048.325936280896}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9697058150183154,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.9921875,"distances_sum":3159.793998972033}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9772893772893777,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.9921875,"distances_sum":3222.8512497066977}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9724530677655684,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.9296875,"distances_sum":3189.489492819375}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9772893772893777,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.9921875,"distances_sum":3222.8512497066977}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9772893772893777,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.9921875,"distances_sum":3222.8512497066977}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1552734375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1552734375,"f1":null,"seconds":2.47173011302948e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":4.015625,"distances_sum":388.2324686603243}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.140625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.140625,"f1":null,"seconds":2.3972243070602417e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":4.0859375,"distances_sum":378.7961760416688}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4853515625, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.4853515625,"f1":null,"seconds":3.471970558166504e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.03125,"distances_sum":1316.5182188633023}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4853515625,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.4853515625,"f1":null,"seconds":3.471970558166504e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.03125,"distances_sum":1316.5182188633023}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6337890625, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6337890625,"f1":0.7648159132534139,"seconds":4.056841135025024e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.9140625,"distances_sum":1762.787315702397}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.62890625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.62890625,"f1":0.7578301906426913,"seconds":4.0959566831588745e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.8828125,"distances_sum":1704.8835776663088}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5087890625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5087890625,"f1":0.6623452935952939,"seconds":3.5744160413742065e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.1171875,"distances_sum":1383.3604335200325}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8472876082251091,"seconds":4.628673195838928e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.796875,"distances_sum":2089.753279046507}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.615234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.615234375,"f1":0.7499250749250757,"seconds":4.114583134651184e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.7890625,"distances_sum":1657.3241804441536}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.8375161297036305,"seconds":4.550442099571228e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.8046875,"distances_sum":2025.4870780131394}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.48828125, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.48828125,"f1":null,"seconds":3.5334378480911255e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.015625,"distances_sum":1343.575234938764}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8472876082251091,"seconds":4.628673195838928e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.796875,"distances_sum":2089.753279046507}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9283081501831509,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.375,"distances_sum":2655.8010669215923}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9318769771894775,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.5234375,"distances_sum":2685.2192459248417}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8950377747252753,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.25,"distances_sum":2369.984719603861}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9106804653679663,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.265625,"distances_sum":2564.954525683047}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9113095238095247,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.3125,"distances_sum":2432.6159287349665}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9384100274725281,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.5,"distances_sum":2778.7175644977065}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9384100274725281,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.5,"distances_sum":2778.7175644977065}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8935546875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9384100274725281,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.5,"distances_sum":2778.7175644977065}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.64453125,"f1":0.7726492257742265,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.4375,"distances_sum":1765.5283405917128}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3671875,"f1":null,"seconds":3.688037395477295e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.703125,"distances_sum":940.2955354893322}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.64453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.64453125,"f1":0.7726492257742265,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.4375,"distances_sum":1765.5283405917128}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.919528388278389,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6015625,"distances_sum":2521.8223348188567}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.86328125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.86328125,"f1":0.919528388278389,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6015625,"distances_sum":2521.8223348188567}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.943406593406594,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6875,"distances_sum":2664.2290243721404}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720066391941395,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9296875,"distances_sum":2817.078997607258}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720066391941395,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9296875,"distances_sum":2817.078997607258}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720066391941395,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9296875,"distances_sum":2817.078997607258}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":3.5017728805541992e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.140625,"distances_sum":454.6582888368109}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.201171875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.201171875,"f1":null,"seconds":3.5017728805541992e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.140625,"distances_sum":454.6582888368109}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":0.9769531250000001,"recall":0.55859375,"f1":0.6944252795815301,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.203125,"distances_sum":1048.4872377926965}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9624441964285713,"recall":0.650390625,"f1":0.7632991574397828,"seconds":4.732981324195862e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.6875,"distances_sum":1269.1444687792289}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.650390625,"state":{"ssize":1,"bsize":4},"perf":{"precision":0.9624441964285713,"recall":0.650390625,"f1":0.7632991574397828,"seconds":4.732981324195862e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.6875,"distances_sum":1269.1444687792289}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":4,"bsize":7}, perf: {"precision":0.9608072916666666,"recall":0.8427734375,"f1":0.8924627455877455,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.46875,"distances_sum":1813.8358143398082}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":4,"bsize":7},"perf":{"precision":0.9608072916666666,"recall":0.8427734375,"f1":0.8924627455877455,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.46875,"distances_sum":1813.8358143398082}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8427734375,"state":{"ssize":4,"bsize":7},"perf":{"precision":0.9608072916666666,"recall":0.8427734375,"f1":0.8924627455877455,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.46875,"distances_sum":1813.8358143398082}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8668930028305037,"seconds":4.889443516731262e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.296875,"distances_sum":1680.8265056682426}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3876953125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3876953125,"f1":null,"seconds":3.4365803003311157e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":5.703125,"distances_sum":847.9978779272293}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8668930028305037,"seconds":4.889443516731262e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.296875,"distances_sum":1680.8265056682426}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9102595321345328,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.53125,"distances_sum":1945.6178189485213}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9485920329670336,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.765625,"distances_sum":2173.6385266771526}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9485920329670336,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.765625,"distances_sum":2173.6385266771526}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9645833333333338,"seconds":6.105750799179077e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.875,"distances_sum":2274.9660219651487}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9515510531135537,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.7890625,"distances_sum":2197.4466193096637}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9679887820512824,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.859375,"distances_sum":2303.8636877372664}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9679887820512824,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.859375,"distances_sum":2303.8636877372664}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9679887820512824,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.859375,"distances_sum":2303.8636877372664}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.544921875,"f1":0.6858554639804645,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.1484375,"distances_sum":1109.1796317498658}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.248046875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.248046875,"f1":null,"seconds":3.7439167499542236e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":6.421875,"distances_sum":520.7653334061898}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8582275363525371,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.0390625,"distances_sum":1726.1108258635277}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8582275363525371,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.0390625,"distances_sum":1726.1108258635277}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.96090315934066,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.78125,"distances_sum":2281.39304534063}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9028107309357317,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.3671875,"distances_sum":1889.3831215051543}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.96090315934066,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.78125,"distances_sum":2281.39304534063}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9693280677655682,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.859375,"distances_sum":2307.851700037017}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707417582417586,"seconds":6.256625056266785e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.8671875,"distances_sum":2334.1158726275853}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707417582417586,"seconds":6.256625056266785e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.8671875,"distances_sum":2334.1158726275853}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707417582417586,"seconds":6.256625056266785e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.8671875,"distances_sum":2334.1158726275853}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.872648185148186,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.25,"distances_sum":1787.5006638710431}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.26171875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.26171875,"f1":null,"seconds":4.20399010181427e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":6.765625,"distances_sum":571.6073749233218}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8132532398157406,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":7.9140625,"distances_sum":1563.53185198441}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.872648185148186,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.25,"distances_sum":1787.5006638710431}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9210508241758251,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.5546875,"distances_sum":2032.6472579998651}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9344608516483524,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.546875,"distances_sum":2082.008203503416}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524610805860811,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.7734375,"distances_sum":2247.110641962062}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9603823260073265,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.8359375,"distances_sum":2286.2916471183844}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9603823260073265,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.8359375,"distances_sum":2286.2916471183844}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9603479853479857,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.8125,"distances_sum":2299.950426533815}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9787946428571431,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.90625,"distances_sum":2447.244018482297}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9684352106227112,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.9140625,"distances_sum":2347.161770250584}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9663175366300372,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.859375,"distances_sum":2341.828094125351}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9787946428571431,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.90625,"distances_sum":2447.244018482297}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9787946428571431,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.90625,"distances_sum":2447.244018482297}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.46451997756958e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.203125,"distances_sum":478.0754769210848}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.41015625,"f1":null,"seconds":3.5017728805541992e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.640625,"distances_sum":902.3148304606713}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.41015625,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.41015625,"f1":null,"seconds":3.5017728805541992e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.640625,"distances_sum":902.3148304606713}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5810546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5810546875,"f1":0.7131731116106123,"seconds":4.770234227180481e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.0703125,"distances_sum":1317.065960935297}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8662825022200029,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.1484375,"distances_sum":1844.0279803947694}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8662825022200029,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.1484375,"distances_sum":1844.0279803947694}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9504521520146525,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.796875,"distances_sum":2337.282741615732}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8988443847818853,"seconds":4.5280903577804565e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.375,"distances_sum":2040.7358210784737}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9504521520146525,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.796875,"distances_sum":2337.282741615732}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9504521520146525,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.796875,"distances_sum":2337.282741615732}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8711397977022984,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.15625,"distances_sum":1784.9288432884143}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8711397977022984,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.15625,"distances_sum":1784.9288432884143}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8728115634365642,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.21875,"distances_sum":1794.7840210828326}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8750156093906098,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.3046875,"distances_sum":1799.2693188148355}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.79296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8750156093906098,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.3046875,"distances_sum":1799.2693188148355}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.79296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8750156093906098,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.3046875,"distances_sum":1799.2693188148355}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5380859375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5380859375,"f1":0.6806558025308028,"seconds":4.24310564994812e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.859375,"distances_sum":1110.8284316528334}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.635883331298828e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.1875,"distances_sum":817.4812442584806}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4404296875, conf: {"ssize":2,"bsize":2}, perf: {"precision":1.0,"recall":0.4404296875,"f1":0.5815273268398269,"seconds":3.719702363014221e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.234375,"distances_sum":918.1387181152282}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5380859375,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5380859375,"f1":0.6806558025308028,"seconds":4.24310564994812e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.859375,"distances_sum":1110.8284316528334}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9289892399267408,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5625,"distances_sum":2161.6059468812773}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5537109375,"f1":null,"seconds":4.166737198829651e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.109375,"distances_sum":1176.0807740179523}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8162155552780562,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.90625,"distances_sum":1591.6171545406535}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8755416458541467,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.875,"distances_sum":1809.4046999686238}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8104832667332676,"seconds":4.680827260017395e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8515625,"distances_sum":1550.4689123822814}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9289892399267408,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5625,"distances_sum":2161.6059468812773}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.956089743589744,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.828125,"distances_sum":2349.0762935895223}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9664866383616386,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8828125,"distances_sum":2436.883256308832}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9617616758241763,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.828125,"distances_sum":2406.614701123366}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9401301823176824,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.609375,"distances_sum":2232.032669243129}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9664866383616386,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8828125,"distances_sum":2436.883256308832}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9664866383616386,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8828125,"distances_sum":2436.883256308832}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.208984375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.208984375,"f1":null,"seconds":3.1758099794387817e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.2109375,"distances_sum":460.62810285202505}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.849700126262627,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.1953125,"distances_sum":1785.7336567127588}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.849700126262627,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.1953125,"distances_sum":1785.7336567127588}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9271671037296043,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.703125,"distances_sum":2277.3273808582767}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9320601273726279,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.6640625,"distances_sum":2293.0666863753013}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9320601273726279,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.6640625,"distances_sum":2293.0666863753013}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9529246794871798,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.71875,"distances_sum":2468.3684291445593}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9436901640026645,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.640625,"distances_sum":2412.2635444537054}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9395063270063276,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.703125,"distances_sum":2357.079526815322}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9400583791208798,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.71875,"distances_sum":2345.988800599062}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9529246794871798,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.71875,"distances_sum":2468.3684291445593}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9529246794871798,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.71875,"distances_sum":2468.3684291445593}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.7997509435009443,"seconds":4.7478824853897095e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.546875,"distances_sum":1663.5111846504344}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.392578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.392578125,"f1":null,"seconds":3.473833203315735e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.8359375,"distances_sum":887.3999861562702}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.689453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.689453125,"f1":0.7997509435009443,"seconds":4.7478824853897095e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.546875,"distances_sum":1663.5111846504344}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.917874313186814,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.328125,"distances_sum":2237.302393657314}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":null,"recall":0.7841796875,"f1":null,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.890625,"distances_sum":1958.4737478561774}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.917874313186814,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.328125,"distances_sum":2237.302393657314}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9279819139194144,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4296875,"distances_sum":2291.1821128916804}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.873046875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.873046875,"f1":0.9279819139194144,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4296875,"distances_sum":2291.1821128916804}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.873046875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.873046875,"f1":0.9279819139194144,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4296875,"distances_sum":2291.1821128916804}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3291015625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3291015625,"f1":null,"seconds":3.4067779779434204e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.5390625,"distances_sum":757.4473669718523}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3291015625,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.3291015625,"f1":null,"seconds":3.4067779779434204e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.5390625,"distances_sum":757.4473669718523}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3583984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.3583984375,"f1":0.5111811799311796,"seconds":3.7588179111480713e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.84375,"distances_sum":847.626632108573}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4833984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4833984375,"f1":0.6401563714063718,"seconds":4.081055521965027e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.1484375,"distances_sum":1119.9291719337361}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.48046875, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.48046875,"f1":0.6358738483738486,"seconds":4.16487455368042e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.1484375,"distances_sum":1080.9125939416938}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7807409604284612,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.9375,"distances_sum":1547.2853505092976}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7807409604284612,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.9375,"distances_sum":1547.2853505092976}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9118709415584424,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.5390625,"distances_sum":2111.4808922480033}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9292696886446893,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.625,"distances_sum":2261.3017389274487}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8581194846819856,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.3046875,"distances_sum":1799.6035630376077}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8716330544455551,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.28125,"distances_sum":1911.2778567577152}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8736492673992683,"seconds":4.937872290611267e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.2265625,"distances_sum":1921.7523233441182}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9292696886446893,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.625,"distances_sum":2261.3017389274487}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.87890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9292696886446893,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.625,"distances_sum":2261.3017389274487}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.537109375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.537109375,"f1":0.6813662032412036,"seconds":3.810971975326538e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.8125,"distances_sum":1253.2822213994784}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.21875,"f1":null,"seconds":2.726912498474121e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":5.1015625,"distances_sum":553.5100460745685}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.537109375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.537109375,"f1":0.6813662032412036,"seconds":3.810971975326538e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.8125,"distances_sum":1253.2822213994784}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":2,"bsize":4}, perf: {"precision":null,"recall":0.6875,"f1":null,"seconds":4.353001713752747e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.59375,"distances_sum":1683.4851792407724}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8740986444111453,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.953125,"distances_sum":2030.7849181963059}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8559267121767129,"seconds":4.976987838745117e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.828125,"distances_sum":1977.0003690966798}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7900390625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7900390625,"f1":0.8740986444111453,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.953125,"distances_sum":2030.7849181963059}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9390739468864475,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.53125,"distances_sum":2463.90746514029}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9448946886446893,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.671875,"distances_sum":2563.68259802434}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9264652014652022,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.4140625,"distances_sum":2392.0042796300936}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9448946886446893,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.671875,"distances_sum":2563.68259802434}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9033203125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9448946886446893,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.671875,"distances_sum":2563.68259802434}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3564453125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3564453125,"f1":null,"seconds":3.1944364309310913e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.0703125,"distances_sum":803.8150764573786}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7753340409590417,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.15625,"distances_sum":1476.152938320983}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":2.689659595489502e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":4.453125,"distances_sum":471.0617279504858}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6513671875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6513671875,"f1":0.7753340409590417,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.15625,"distances_sum":1476.152938320983}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9351705586080591,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5703125,"distances_sum":2360.6022239861604}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7840002011877021,"seconds":4.133209586143494e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.25,"distances_sum":1520.9331093217252}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9062531218781227,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.25,"distances_sum":2145.6058896254794}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7860294219669227,"seconds":4.37907874584198e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.328125,"distances_sum":1582.211056712604}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8704732767232777,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.765625,"distances_sum":1930.5507472047786}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9351705586080591,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5703125,"distances_sum":2360.6022239861604}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628205128205134,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2514.5693526179944}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9543956043956049,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.65625,"distances_sum":2504.929834551695}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9553972069597078,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.765625,"distances_sum":2462.1570299606847}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9600103021978026,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7578125,"distances_sum":2527.2266996346425}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628205128205134,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2514.5693526179944}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628205128205134,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2514.5693526179944}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8670163170163177,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.9140625,"distances_sum":1960.3896662110844}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2119140625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2119140625,"f1":null,"seconds":2.9690563678741455e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.1796875,"distances_sum":538.5266288115605}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19140625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.19140625,"f1":null,"seconds":2.7902424335479736e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":4.9609375,"distances_sum":475.66449123490787}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8670163170163177,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.9140625,"distances_sum":1960.3896662110844}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9301167582417585,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.4609375,"distances_sum":2339.299397471383}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591975732600739,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7421875,"distances_sum":2559.5092510958616}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9231716200466207,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.453125,"distances_sum":2286.040725416758}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9591975732600739,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7421875,"distances_sum":2559.5092510958616}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417584,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8984375,"distances_sum":2655.0933687150764}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9729567307692313,"seconds":6.6123902797698975e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.875,"distances_sum":2628.402917817264}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679544413919416,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8125,"distances_sum":2599.238613168438}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720810439560443,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8671875,"distances_sum":2631.5013436234676}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417584,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8984375,"distances_sum":2655.0933687150764}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417584,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8984375,"distances_sum":2655.0933687150764}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.887746108058609,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0,"distances_sum":2077.5500910513697}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.80859375,"f1":0.887746108058609,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0,"distances_sum":2077.5500910513697}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9051771145521155,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.25,"distances_sum":2211.129978336536}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8388671875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8388671875,"f1":0.9051771145521155,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.25,"distances_sum":2211.129978336536}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9625400641025645,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8125,"distances_sum":2598.6820330892137}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9609031593406598,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.828125,"distances_sum":2573.1247231688985}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9625400641025645,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8125,"distances_sum":2598.6820330892137}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9625400641025645,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8125,"distances_sum":2598.6820330892137}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3212890625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3212890625,"f1":null,"seconds":3.255903720855713e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.0,"distances_sum":822.3870996045135}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7853379259629267,"seconds":4.447996616363525e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8203125,"distances_sum":1597.385212756851}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.666015625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.666015625,"f1":0.7853379259629267,"seconds":4.447996616363525e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8203125,"distances_sum":1597.385212756851}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8019340034965043,"seconds":4.382804036140442e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.796875,"distances_sum":1709.677004400649}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8645672036297042,"seconds":5.0086528062820435e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.015625,"distances_sum":1981.8280858921732}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8588286713286721,"seconds":5.161389708518982e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.96875,"distances_sum":1934.518605734311}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8644787504162511,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.015625,"distances_sum":1975.1716040858569}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8645672036297042,"seconds":5.0086528062820435e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.015625,"distances_sum":1981.8280858921732}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9198138666888674,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5703125,"distances_sum":2321.239837018447}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9245879120879127,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5078125,"distances_sum":2415.2546475901145}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9186901640026647,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5,"distances_sum":2341.2305767192584}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.947641941391942,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.765625,"distances_sum":2494.1593210567044}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9074264277389286,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4609375,"distances_sum":2248.2978858814686}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9431833791208798,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6796875,"distances_sum":2489.1981277084155}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.947641941391942,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.765625,"distances_sum":2494.1593210567044}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9072265625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.947641941391942,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.765625,"distances_sum":2494.1593210567044}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8624630577755587,"seconds":4.796311259269714e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3046875,"distances_sum":1901.4225871069689}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5068359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5068359375,"f1":null,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.640625,"distances_sum":1189.8001048782157}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8624630577755587,"seconds":4.796311259269714e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3046875,"distances_sum":1901.4225871069689}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9559237637362644,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7734375,"distances_sum":2526.6231034621355}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9559237637362644,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7734375,"distances_sum":2526.6231034621355}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9773637820512824,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.921875,"distances_sum":2651.972688169023}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9745535714285718,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.90625,"distances_sum":2614.0950020128776}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9625400641025648,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.796875,"distances_sum":2552.2561179361305}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773637820512824,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.921875,"distances_sum":2651.972688169023}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773637820512824,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.921875,"distances_sum":2651.972688169023}}, n: 9
inertia(cfft.distances) = 20.661001034029578
inertia(cdnet.distances) = 25.62990343653931
inertia(crand.distances) = 20.988717129275948
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444443
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9400000000000001
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9444444444444443
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9266666666666666
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8777777777777779
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8999999999999999
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8688888888888888
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8755555555555555
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8577777777777778
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9066666666666666
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 3, 2, 3, 3, 1, 2, 3, 3, 2, 3, 3, 3, 1, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 8, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 9, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 2, 3, 1, 3, 2]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.3215333373606524] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3215333373606524, 0.1807728940554445] ***
*** starting iteration: 2; err: [Inf, 0.3215333373606524, 0.1807728940554445] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3215333373606524, 0.1807728940554445, 0.16949087490057502] ***
*** starting iteration: 3; err: [Inf, 0.3215333373606524, 0.1807728940554445, 0.16949087490057502] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3215333373606524, 0.1807728940554445, 0.16949087490057502, 0.16372158754206956] ***
*** starting iteration: 4; err: [Inf, 0.3215333373606524, 0.1807728940554445, 0.16949087490057502, 0.16372158754206956] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3215333373606524, 0.1807728940554445, 0.16949087490057502, 0.16372158754206956, 0.16017185653793584] ***
*** starting iteration: 5; err: [Inf, 0.3215333373606524, 0.1807728940554445, 0.16949087490057502, 0.16372158754206956, 0.16017185653793584] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3215333373606524, 0.1807728940554445, 0.16949087490057502, 0.16372158754206956, 0.16017185653793584, 0.15941452070284787] ***
*** finished computation of 12 references, err: [Inf, 0.3215333373606524, 0.1807728940554445, 0.16949087490057502, 0.16372158754206956, 0.16017185653793584, 0.15941452070284787] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 14]]
** centroid: 7, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
finished with 13 centroids; started with 12
acc = 0.92
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.23799192189661567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23799192189661567, 0.19211843069477047] ***
*** finished computation of 7 references, err: [Inf, 0.23799192189661567, 0.19211843069477047] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 5]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 2), (3, 5)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40808362581696433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40808362581696433, 0.23335695246579122] ***
*** finished computation of 7 references, err: [Inf, 0.40808362581696433, 0.23335695246579122] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 4, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 17]]
** centroid: 7, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4189319353300735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4189319353300735, 0.23455799133627472] ***
*** finished computation of 7 references, err: [Inf, 0.4189319353300735, 0.23455799133627472] ***
*** center 1: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 2]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 6, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47824109008832155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47824109008832155, 0.2833305719517207] ***
*** finished computation of 7 references, err: [Inf, 0.47824109008832155, 0.2833305719517207] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 2: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 31, 7]]
** centroid: 4, normalized-entropy: 0.6892019851173655, [(2, 31), (3, 7)]
*** center 5: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 1, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35970182813428025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35970182813428025, 0.2346186233386265] ***
*** finished computation of 7 references, err: [Inf, 0.35970182813428025, 0.2346186233386265] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 15]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 6), (3, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38295971462527306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38295971462527306, 0.20061239745682627] ***
*** finished computation of 7 references, err: [Inf, 0.38295971462527306, 0.20061239745682627] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 9]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3606249684411585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3606249684411585, 0.22338834662278959] ***
*** finished computation of 7 references, err: [Inf, 0.3606249684411585, 0.22338834662278959] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 10]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 5), (3, 10)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3513008225056424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3513008225056424, 0.21978659666423783] ***
*** finished computation of 7 references, err: [Inf, 0.3513008225056424, 0.21978659666423783] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 8, 11]]
** centroid: 6, normalized-entropy: 0.9819407868640977, [(2, 8), (3, 11)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5025450729115167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5025450729115167, 0.2375505078146654] ***
*** finished computation of 7 references, err: [Inf, 0.5025450729115167, 0.2375505078146654] ***
*** center 1: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 29]]
** centroid: 2, normalized-entropy: 0.5328350630342235, [(2, 4), (3, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 18, 3]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(2, 18), (3, 3)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 2]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(2, 3), (3, 2)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44644158197209166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44644158197209166, 0.2501194306252732] ***
*** starting iteration: 2; err: [Inf, 0.44644158197209166, 0.2501194306252732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44644158197209166, 0.2501194306252732, 0.201850878393762] ***
*** starting iteration: 3; err: [Inf, 0.44644158197209166, 0.2501194306252732, 0.201850878393762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44644158197209166, 0.2501194306252732, 0.201850878393762, 0.19102842612864418] ***
*** starting iteration: 4; err: [Inf, 0.44644158197209166, 0.2501194306252732, 0.201850878393762, 0.19102842612864418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44644158197209166, 0.2501194306252732, 0.201850878393762, 0.19102842612864418, 0.18813056415034818] ***
*** starting iteration: 5; err: [Inf, 0.44644158197209166, 0.2501194306252732, 0.201850878393762, 0.19102842612864418, 0.18813056415034818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44644158197209166, 0.2501194306252732, 0.201850878393762, 0.19102842612864418, 0.18813056415034818, 0.18734050089344467] ***
*** finished computation of 7 references, err: [Inf, 0.44644158197209166, 0.2501194306252732, 0.201850878393762, 0.19102842612864418, 0.18813056415034818, 0.18734050089344467] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 11, 9]]
** centroid: 7, normalized-entropy: 0.9927744539878083, [(2, 11), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48932673200303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48932673200303, 0.2739552508246951] ***
*** starting iteration: 2; err: [Inf, 0.48932673200303, 0.2739552508246951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995] ***
*** starting iteration: 3; err: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922] ***
*** starting iteration: 4; err: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922, 0.20307170648998366] ***
*** starting iteration: 5; err: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922, 0.20307170648998366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922, 0.20307170648998366, 0.19810407377729627] ***
*** starting iteration: 6; err: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922, 0.20307170648998366, 0.19810407377729627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922, 0.20307170648998366, 0.19810407377729627, 0.19587456454905966] ***
*** starting iteration: 7; err: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922, 0.20307170648998366, 0.19810407377729627, 0.19587456454905966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922, 0.20307170648998366, 0.19810407377729627, 0.19587456454905966, 0.19402335028759313] ***
*** starting iteration: 8; err: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922, 0.20307170648998366, 0.19810407377729627, 0.19587456454905966, 0.19402335028759313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922, 0.20307170648998366, 0.19810407377729627, 0.19587456454905966, 0.19402335028759313, 0.19042015635719242] ***
*** starting iteration: 9; err: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922, 0.20307170648998366, 0.19810407377729627, 0.19587456454905966, 0.19402335028759313, 0.19042015635719242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922, 0.20307170648998366, 0.19810407377729627, 0.19587456454905966, 0.19402335028759313, 0.19042015635719242, 0.18739399251320907] ***
*** starting iteration: 10; err: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922, 0.20307170648998366, 0.19810407377729627, 0.19587456454905966, 0.19402335028759313, 0.19042015635719242, 0.18739399251320907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922, 0.20307170648998366, 0.19810407377729627, 0.19587456454905966, 0.19402335028759313, 0.19042015635719242, 0.18739399251320907, 0.18628249037385505] ***
*** finished computation of 7 references, err: [Inf, 0.48932673200303, 0.2739552508246951, 0.21926768812509995, 0.20856746669743922, 0.20307170648998366, 0.19810407377729627, 0.19587456454905966, 0.19402335028759313, 0.19042015635719242, 0.18739399251320907, 0.18628249037385505] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 19]]
** centroid: 1, normalized-entropy: 0.6665783579949205, [(2, 4), (3, 19)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 22, 8]]
** centroid: 2, normalized-entropy: 0.8366407419411671, [(2, 22), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 6.801689141349657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.801689141349657, 0.6097808069268484] ***
*** starting iteration: 2; err: [Inf, 6.801689141349657, 0.6097808069268484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.801689141349657, 0.6097808069268484, 0.5749836198934205] ***
*** starting iteration: 3; err: [Inf, 6.801689141349657, 0.6097808069268484, 0.5749836198934205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.801689141349657, 0.6097808069268484, 0.5749836198934205, 0.5748357493093215] ***
*** finished computation of 7 references, err: [Inf, 6.801689141349657, 0.6097808069268484, 0.5749836198934205, 0.5748357493093215] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 34]]
** centroid: 3, normalized-entropy: 0.9998484829291058, [(2, 35), (3, 34)]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5895000006992177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5895000006992177, 0.31091501175673353] ***
*** starting iteration: 2; err: [Inf, 0.5895000006992177, 0.31091501175673353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869] ***
*** starting iteration: 3; err: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869, 0.2414340368078922] ***
*** starting iteration: 4; err: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869, 0.2414340368078922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869, 0.2414340368078922, 0.2250487176830575] ***
*** starting iteration: 5; err: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869, 0.2414340368078922, 0.2250487176830575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869, 0.2414340368078922, 0.2250487176830575, 0.2176685694435861] ***
*** starting iteration: 6; err: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869, 0.2414340368078922, 0.2250487176830575, 0.2176685694435861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869, 0.2414340368078922, 0.2250487176830575, 0.2176685694435861, 0.21585784492665808] ***
*** starting iteration: 7; err: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869, 0.2414340368078922, 0.2250487176830575, 0.2176685694435861, 0.21585784492665808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869, 0.2414340368078922, 0.2250487176830575, 0.2176685694435861, 0.21585784492665808, 0.21363589276129347] ***
*** starting iteration: 8; err: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869, 0.2414340368078922, 0.2250487176830575, 0.2176685694435861, 0.21585784492665808, 0.21363589276129347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869, 0.2414340368078922, 0.2250487176830575, 0.2176685694435861, 0.21585784492665808, 0.21363589276129347, 0.21089919043298477] ***
*** starting iteration: 9; err: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869, 0.2414340368078922, 0.2250487176830575, 0.2176685694435861, 0.21585784492665808, 0.21363589276129347, 0.21089919043298477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869, 0.2414340368078922, 0.2250487176830575, 0.2176685694435861, 0.21585784492665808, 0.21363589276129347, 0.21089919043298477, 0.21021508400821443] ***
*** finished computation of 7 references, err: [Inf, 0.5895000006992177, 0.31091501175673353, 0.2700895177116869, 0.2414340368078922, 0.2250487176830575, 0.2176685694435861, 0.21585784492665808, 0.21363589276129347, 0.21089919043298477, 0.21021508400821443] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 5]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 2), (3, 5)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9345999939187724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9345999939187724, 0.46494133534694415] ***
*** starting iteration: 2; err: [Inf, 0.9345999939187724, 0.46494133534694415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389] ***
*** starting iteration: 3; err: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389, 0.35503558466641877] ***
*** starting iteration: 4; err: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389, 0.35503558466641877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389, 0.35503558466641877, 0.3410348814361291] ***
*** starting iteration: 5; err: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389, 0.35503558466641877, 0.3410348814361291] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389, 0.35503558466641877, 0.3410348814361291, 0.3265776409258598] ***
*** starting iteration: 6; err: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389, 0.35503558466641877, 0.3410348814361291, 0.3265776409258598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389, 0.35503558466641877, 0.3410348814361291, 0.3265776409258598, 0.3142363071291234] ***
*** starting iteration: 7; err: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389, 0.35503558466641877, 0.3410348814361291, 0.3265776409258598, 0.3142363071291234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389, 0.35503558466641877, 0.3410348814361291, 0.3265776409258598, 0.3142363071291234, 0.30102329847754417] ***
*** starting iteration: 8; err: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389, 0.35503558466641877, 0.3410348814361291, 0.3265776409258598, 0.3142363071291234, 0.30102329847754417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389, 0.35503558466641877, 0.3410348814361291, 0.3265776409258598, 0.3142363071291234, 0.30102329847754417, 0.29575500845476665] ***
*** starting iteration: 9; err: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389, 0.35503558466641877, 0.3410348814361291, 0.3265776409258598, 0.3142363071291234, 0.30102329847754417, 0.29575500845476665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389, 0.35503558466641877, 0.3410348814361291, 0.3265776409258598, 0.3142363071291234, 0.30102329847754417, 0.29575500845476665, 0.2951924279070112] ***
*** finished computation of 7 references, err: [Inf, 0.9345999939187724, 0.46494133534694415, 0.3769421600041389, 0.35503558466641877, 0.3410348814361291, 0.3265776409258598, 0.3142363071291234, 0.30102329847754417, 0.29575500845476665, 0.2951924279070112] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 5]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 17]]
** centroid: 4, normalized-entropy: 0.9305861291319927, [(2, 9), (3, 17)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.039000011450108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.039000011450108, 0.7823155917012629] ***
*** starting iteration: 2; err: [Inf, 1.039000011450108, 0.7823155917012629] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.039000011450108, 0.7823155917012629, 0.6280923472640775] ***
*** starting iteration: 3; err: [Inf, 1.039000011450108, 0.7823155917012629, 0.6280923472640775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.039000011450108, 0.7823155917012629, 0.6280923472640775, 0.4675263290967983] ***
*** starting iteration: 4; err: [Inf, 1.039000011450108, 0.7823155917012629, 0.6280923472640775, 0.4675263290967983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.039000011450108, 0.7823155917012629, 0.6280923472640775, 0.4675263290967983, 0.438774667893729] ***
*** starting iteration: 5; err: [Inf, 1.039000011450108, 0.7823155917012629, 0.6280923472640775, 0.4675263290967983, 0.438774667893729] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.039000011450108, 0.7823155917012629, 0.6280923472640775, 0.4675263290967983, 0.438774667893729, 0.4352740261609074] ***
*** starting iteration: 6; err: [Inf, 1.039000011450108, 0.7823155917012629, 0.6280923472640775, 0.4675263290967983, 0.438774667893729, 0.4352740261609074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.039000011450108, 0.7823155917012629, 0.6280923472640775, 0.4675263290967983, 0.438774667893729, 0.4352740261609074, 0.4343525235144066] ***
*** finished computation of 7 references, err: [Inf, 1.039000011450108, 0.7823155917012629, 0.6280923472640775, 0.4675263290967983, 0.438774667893729, 0.4352740261609074, 0.4343525235144066] ***
*** center 1: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 33]]
** centroid: 3, normalized-entropy: 0.7824441294066888, [(2, 10), (3, 33)]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7803497363070605] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7803497363070605, 0.39824177613614553] ***
*** finished computation of 3 references, err: [Inf, 0.7803497363070605, 0.39824177613614553] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 28]]
** centroid: 2, normalized-entropy: 0.8582307926411409, [(2, 11), (3, 28)]
*** center 3: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.772753740704096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.772753740704096, 0.3988354267364715] ***
*** finished computation of 3 references, err: [Inf, 0.772753740704096, 0.3988354267364715] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 2, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.3506540430050706] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3506540430050706, 0.7374301803738434] ***
*** finished computation of 3 references, err: [Inf, 2.3506540430050706, 0.7374301803738434] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 5, 0]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(1, 31), (2, 5)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 21]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 13]]
** centroid: 3, normalized-entropy: 0.9097361225311661, [(2, 27), (3, 13)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 10.313300041442542] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.313300041442542, 1.6552563524871675] ***
*** finished computation of 3 references, err: [Inf, 10.313300041442542, 1.6552563524871675] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 29]]
** centroid: 1, normalized-entropy: 1.0, [(2, 29), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [4, 3, 0]]
** centroid: 3, normalized-entropy: 0.9852281360342514, [(1, 4), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1865999934360685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1865999934360685, 0.6071948378960066] ***
*** finished computation of 3 references, err: [Inf, 1.1865999934360685, 0.6071948378960066] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 29]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0396000054550312] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0396000054550312, 0.6744328523676956] ***
*** finished computation of 3 references, err: [Inf, 1.0396000054550312, 0.6744328523676956] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 21]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(2, 35), (3, 21)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.432392035429466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 7.432392035429466, 0.6063030613209235] ***
*** starting iteration: 2; err: [Inf, 7.432392035429466, 0.6063030613209235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 7.432392035429466, 0.6063030613209235, 0.4319095524718452] ***
*** starting iteration: 3; err: [Inf, 7.432392035429466, 0.6063030613209235, 0.4319095524718452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 7.432392035429466, 0.6063030613209235, 0.4319095524718452, 0.32330684785055014] ***
*** starting iteration: 4; err: [Inf, 7.432392035429466, 0.6063030613209235, 0.4319095524718452, 0.32330684785055014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 7.432392035429466, 0.6063030613209235, 0.4319095524718452, 0.32330684785055014, 0.2970335339548378] ***
*** starting iteration: 5; err: [Inf, 7.432392035429466, 0.6063030613209235, 0.4319095524718452, 0.32330684785055014, 0.2970335339548378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 7.432392035429466, 0.6063030613209235, 0.4319095524718452, 0.32330684785055014, 0.2970335339548378, 0.280442296280437] ***
*** starting iteration: 6; err: [Inf, 7.432392035429466, 0.6063030613209235, 0.4319095524718452, 0.32330684785055014, 0.2970335339548378, 0.280442296280437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 7.432392035429466, 0.6063030613209235, 0.4319095524718452, 0.32330684785055014, 0.2970335339548378, 0.280442296280437, 0.2782363409830168] ***
*** starting iteration: 7; err: [Inf, 7.432392035429466, 0.6063030613209235, 0.4319095524718452, 0.32330684785055014, 0.2970335339548378, 0.280442296280437, 0.2782363409830168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 7.432392035429466, 0.6063030613209235, 0.4319095524718452, 0.32330684785055014, 0.2970335339548378, 0.280442296280437, 0.2782363409830168, 0.27514372898584477] ***
*** starting iteration: 8; err: [Inf, 7.432392035429466, 0.6063030613209235, 0.4319095524718452, 0.32330684785055014, 0.2970335339548378, 0.280442296280437, 0.2782363409830168, 0.27514372898584477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 7.432392035429466, 0.6063030613209235, 0.4319095524718452, 0.32330684785055014, 0.2970335339548378, 0.280442296280437, 0.2782363409830168, 0.27514372898584477, 0.2750073460607931] ***
*** finished computation of 7 references, err: [Inf, 7.432392035429466, 0.6063030613209235, 0.4319095524718452, 0.32330684785055014, 0.2970335339548378, 0.280442296280437, 0.2782363409830168, 0.27514372898584477, 0.2750073460607931] ***
*** center 1: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 5]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 30), (3, 5)]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 5, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.2605096086338516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2605096086338516, 0.36314618998189063] ***
*** starting iteration: 2; err: [Inf, 2.2605096086338516, 0.36314618998189063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2605096086338516, 0.36314618998189063, 0.2324830403163341] ***
*** starting iteration: 3; err: [Inf, 2.2605096086338516, 0.36314618998189063, 0.2324830403163341] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2605096086338516, 0.36314618998189063, 0.2324830403163341, 0.21038845797791614] ***
*** starting iteration: 4; err: [Inf, 2.2605096086338516, 0.36314618998189063, 0.2324830403163341, 0.21038845797791614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2605096086338516, 0.36314618998189063, 0.2324830403163341, 0.21038845797791614, 0.2029427176107296] ***
*** starting iteration: 5; err: [Inf, 2.2605096086338516, 0.36314618998189063, 0.2324830403163341, 0.21038845797791614, 0.2029427176107296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2605096086338516, 0.36314618998189063, 0.2324830403163341, 0.21038845797791614, 0.2029427176107296, 0.20135919097999277] ***
*** starting iteration: 6; err: [Inf, 2.2605096086338516, 0.36314618998189063, 0.2324830403163341, 0.21038845797791614, 0.2029427176107296, 0.20135919097999277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2605096086338516, 0.36314618998189063, 0.2324830403163341, 0.21038845797791614, 0.2029427176107296, 0.20135919097999277, 0.20015800449968257] ***
*** starting iteration: 7; err: [Inf, 2.2605096086338516, 0.36314618998189063, 0.2324830403163341, 0.21038845797791614, 0.2029427176107296, 0.20135919097999277, 0.20015800449968257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2605096086338516, 0.36314618998189063, 0.2324830403163341, 0.21038845797791614, 0.2029427176107296, 0.20135919097999277, 0.20015800449968257, 0.1999103318172206] ***
*** finished computation of 7 references, err: [Inf, 2.2605096086338516, 0.36314618998189063, 0.2324830403163341, 0.21038845797791614, 0.2029427176107296, 0.20135919097999277, 0.20015800449968257, 0.1999103318172206] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 4]]
** centroid: 4, normalized-entropy: 0.7424875695421234, [(2, 15), (3, 4)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2903754355306813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2903754355306813, 0.21130134074291856] ***
*** starting iteration: 2; err: [Inf, 0.2903754355306813, 0.21130134074291856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215] ***
*** starting iteration: 3; err: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164] ***
*** starting iteration: 4; err: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164, 0.1752643862341151] ***
*** starting iteration: 5; err: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164, 0.1752643862341151] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164, 0.1752643862341151, 0.17425913023966863] ***
*** starting iteration: 6; err: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164, 0.1752643862341151, 0.17425913023966863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164, 0.1752643862341151, 0.17425913023966863, 0.17233219200909922] ***
*** starting iteration: 7; err: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164, 0.1752643862341151, 0.17425913023966863, 0.17233219200909922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164, 0.1752643862341151, 0.17425913023966863, 0.17233219200909922, 0.17015062969369818] ***
*** starting iteration: 8; err: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164, 0.1752643862341151, 0.17425913023966863, 0.17233219200909922, 0.17015062969369818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164, 0.1752643862341151, 0.17425913023966863, 0.17233219200909922, 0.17015062969369818, 0.16874068133998726] ***
*** starting iteration: 9; err: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164, 0.1752643862341151, 0.17425913023966863, 0.17233219200909922, 0.17015062969369818, 0.16874068133998726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164, 0.1752643862341151, 0.17425913023966863, 0.17233219200909922, 0.17015062969369818, 0.16874068133998726, 0.16708066390946796] ***
*** starting iteration: 10; err: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164, 0.1752643862341151, 0.17425913023966863, 0.17233219200909922, 0.17015062969369818, 0.16874068133998726, 0.16708066390946796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164, 0.1752643862341151, 0.17425913023966863, 0.17233219200909922, 0.17015062969369818, 0.16874068133998726, 0.16708066390946796, 0.16609360725707645] ***
*** finished computation of 7 references, err: [Inf, 0.2903754355306813, 0.21130134074291856, 0.1881714963418215, 0.1768256816870164, 0.1752643862341151, 0.17425913023966863, 0.17233219200909922, 0.17015062969369818, 0.16874068133998726, 0.16708066390946796, 0.16609360725707645] ***
*** center 1: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 5, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 7: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.7075000200862815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7075000200862815, 0.7327503183483381] ***
*** starting iteration: 2; err: [Inf, 2.7075000200862815, 0.7327503183483381] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7075000200862815, 0.7327503183483381, 0.5705567317799476] ***
*** starting iteration: 3; err: [Inf, 2.7075000200862815, 0.7327503183483381, 0.5705567317799476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7075000200862815, 0.7327503183483381, 0.5705567317799476, 0.5353272011992369] ***
*** starting iteration: 4; err: [Inf, 2.7075000200862815, 0.7327503183483381, 0.5705567317799476, 0.5353272011992369] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7075000200862815, 0.7327503183483381, 0.5705567317799476, 0.5353272011992369, 0.5156446515523747] ***
*** starting iteration: 5; err: [Inf, 2.7075000200862815, 0.7327503183483381, 0.5705567317799476, 0.5353272011992369, 0.5156446515523747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7075000200862815, 0.7327503183483381, 0.5705567317799476, 0.5353272011992369, 0.5156446515523747, 0.5002095576001637] ***
*** starting iteration: 6; err: [Inf, 2.7075000200862815, 0.7327503183483381, 0.5705567317799476, 0.5353272011992369, 0.5156446515523747, 0.5002095576001637] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7075000200862815, 0.7327503183483381, 0.5705567317799476, 0.5353272011992369, 0.5156446515523747, 0.5002095576001637, 0.4852653128687473] ***
*** starting iteration: 7; err: [Inf, 2.7075000200862815, 0.7327503183483381, 0.5705567317799476, 0.5353272011992369, 0.5156446515523747, 0.5002095576001637, 0.4852653128687473] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7075000200862815, 0.7327503183483381, 0.5705567317799476, 0.5353272011992369, 0.5156446515523747, 0.5002095576001637, 0.4852653128687473, 0.48269210123968165] ***
*** starting iteration: 8; err: [Inf, 2.7075000200862815, 0.7327503183483381, 0.5705567317799476, 0.5353272011992369, 0.5156446515523747, 0.5002095576001637, 0.4852653128687473, 0.48269210123968165] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7075000200862815, 0.7327503183483381, 0.5705567317799476, 0.5353272011992369, 0.5156446515523747, 0.5002095576001637, 0.4852653128687473, 0.48269210123968165, 0.48269210123968165] ***
*** finished computation of 3 references, err: [Inf, 2.7075000200862815, 0.7327503183483381, 0.5705567317799476, 0.5353272011992369, 0.5156446515523747, 0.5002095576001637, 0.4852653128687473, 0.48269210123968165, 0.48269210123968165] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 6]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.7647000399883535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7647000399883535, 0.684522805726708] ***
*** starting iteration: 2; err: [Inf, 2.7647000399883535, 0.684522805726708] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7647000399883535, 0.684522805726708, 0.6398443286820114] ***
*** starting iteration: 3; err: [Inf, 2.7647000399883535, 0.684522805726708, 0.6398443286820114] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7647000399883535, 0.684522805726708, 0.6398443286820114, 0.6213769686386523] ***
*** starting iteration: 4; err: [Inf, 2.7647000399883535, 0.684522805726708, 0.6398443286820114, 0.6213769686386523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7647000399883535, 0.684522805726708, 0.6398443286820114, 0.6213769686386523, 0.6003023864183814] ***
*** starting iteration: 5; err: [Inf, 2.7647000399883535, 0.684522805726708, 0.6398443286820114, 0.6213769686386523, 0.6003023864183814] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7647000399883535, 0.684522805726708, 0.6398443286820114, 0.6213769686386523, 0.6003023864183814, 0.5865362702080285] ***
*** starting iteration: 6; err: [Inf, 2.7647000399883535, 0.684522805726708, 0.6398443286820114, 0.6213769686386523, 0.6003023864183814, 0.5865362702080285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7647000399883535, 0.684522805726708, 0.6398443286820114, 0.6213769686386523, 0.6003023864183814, 0.5865362702080285, 0.5806861004539812] ***
*** starting iteration: 7; err: [Inf, 2.7647000399883535, 0.684522805726708, 0.6398443286820114, 0.6213769686386523, 0.6003023864183814, 0.5865362702080285, 0.5806861004539812] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7647000399883535, 0.684522805726708, 0.6398443286820114, 0.6213769686386523, 0.6003023864183814, 0.5865362702080285, 0.5806861004539812, 0.5797800094554661] ***
*** finished computation of 3 references, err: [Inf, 2.7647000399883535, 0.684522805726708, 0.6398443286820114, 0.6213769686386523, 0.6003023864183814, 0.5865362702080285, 0.5806861004539812, 0.5797800094554661] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 3: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5439000029656325] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5439000029656325, 0.6905368945494006] ***
*** starting iteration: 2; err: [Inf, 1.5439000029656325, 0.6905368945494006] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5439000029656325, 0.6905368945494006, 0.5352265171463398] ***
*** starting iteration: 3; err: [Inf, 1.5439000029656325, 0.6905368945494006, 0.5352265171463398] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5439000029656325, 0.6905368945494006, 0.5352265171463398, 0.5062581605210159] ***
*** starting iteration: 4; err: [Inf, 1.5439000029656325, 0.6905368945494006, 0.5352265171463398, 0.5062581605210159] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5439000029656325, 0.6905368945494006, 0.5352265171463398, 0.5062581605210159, 0.5018181446427865] ***
*** starting iteration: 5; err: [Inf, 1.5439000029656325, 0.6905368945494006, 0.5352265171463398, 0.5062581605210159, 0.5018181446427865] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5439000029656325, 0.6905368945494006, 0.5352265171463398, 0.5062581605210159, 0.5018181446427865, 0.5018181446427865] ***
*** finished computation of 3 references, err: [Inf, 1.5439000029656325, 0.6905368945494006, 0.5352265171463398, 0.5062581605210159, 0.5018181446427865, 0.5018181446427865] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 12]]
** centroid: 2, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 22]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3161174857190415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3161174857190415, 0.19851776732475596] ***
*** starting iteration: 2; err: [Inf, 0.3161174857190415, 0.19851776732475596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3161174857190415, 0.19851776732475596, 0.19493706695517812] ***
*** starting iteration: 3; err: [Inf, 0.3161174857190415, 0.19851776732475596, 0.19493706695517812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3161174857190415, 0.19851776732475596, 0.19493706695517812, 0.19493706695517812] ***
*** finished computation of 7 references, err: [Inf, 0.3161174857190415, 0.19851776732475596, 0.19493706695517812, 0.19493706695517812] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 10, 5]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 10), (3, 5)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2674423575497554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2674423575497554, 0.19679185749398712] ***
*** starting iteration: 2; err: [Inf, 0.2674423575497554, 0.19679185749398712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2674423575497554, 0.19679185749398712, 0.1823834915563485] ***
*** starting iteration: 3; err: [Inf, 0.2674423575497554, 0.19679185749398712, 0.1823834915563485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2674423575497554, 0.19679185749398712, 0.1823834915563485, 0.1810450504771331] ***
*** finished computation of 7 references, err: [Inf, 0.2674423575497554, 0.19679185749398712, 0.1823834915563485, 0.1810450504771331] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 17, 3]]
** centroid: 2, normalized-entropy: 0.6098403047164005, [(2, 17), (3, 3)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42817725515444877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42817725515444877, 0.21495424163898424] ***
*** starting iteration: 2; err: [Inf, 0.42817725515444877, 0.21495424163898424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42817725515444877, 0.21495424163898424, 0.1796613981005352] ***
*** starting iteration: 3; err: [Inf, 0.42817725515444877, 0.21495424163898424, 0.1796613981005352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42817725515444877, 0.21495424163898424, 0.1796613981005352, 0.17267693883930488] ***
*** finished computation of 7 references, err: [Inf, 0.42817725515444877, 0.21495424163898424, 0.1796613981005352, 0.17267693883930488] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 14, 7]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 7]]
** centroid: 6, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40799999977764584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40799999977764584, 0.25206210779888966] ***
*** starting iteration: 2; err: [Inf, 0.40799999977764584, 0.25206210779888966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40799999977764584, 0.25206210779888966, 0.2326803834793167] ***
*** starting iteration: 3; err: [Inf, 0.40799999977764584, 0.25206210779888966, 0.2326803834793167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40799999977764584, 0.25206210779888966, 0.2326803834793167, 0.22087422845933716] ***
*** finished computation of 7 references, err: [Inf, 0.40799999977764584, 0.25206210779888966, 0.2326803834793167, 0.22087422845933716] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8702000088796555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8702000088796555, 0.29659252596161034] ***
*** starting iteration: 2; err: [Inf, 0.8702000088796555, 0.29659252596161034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8702000088796555, 0.29659252596161034, 0.26802367411026345] ***
*** starting iteration: 3; err: [Inf, 0.8702000088796555, 0.29659252596161034, 0.26802367411026345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8702000088796555, 0.29659252596161034, 0.26802367411026345, 0.259229433598084] ***
*** finished computation of 7 references, err: [Inf, 0.8702000088796555, 0.29659252596161034, 0.26802367411026345, 0.259229433598084] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 21, 9]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(2, 21), (3, 9)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5354000061404944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5354000061404944, 0.27212869499439746] ***
*** starting iteration: 2; err: [Inf, 0.5354000061404944, 0.27212869499439746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5354000061404944, 0.27212869499439746, 0.26341422966477934] ***
*** starting iteration: 3; err: [Inf, 0.5354000061404944, 0.27212869499439746, 0.26341422966477934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5354000061404944, 0.27212869499439746, 0.26341422966477934, 0.261129952530797] ***
*** finished computation of 7 references, err: [Inf, 0.5354000061404944, 0.27212869499439746, 0.26341422966477934, 0.261129952530797] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4854999982012427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4854999982012427, 0.28819990757761293] ***
*** starting iteration: 2; err: [Inf, 0.4854999982012427, 0.28819990757761293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4854999982012427, 0.28819990757761293, 0.2738145212964319] ***
*** starting iteration: 3; err: [Inf, 0.4854999982012427, 0.28819990757761293, 0.2738145212964319] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4854999982012427, 0.28819990757761293, 0.2738145212964319, 0.2716442004592736] ***
*** finished computation of 7 references, err: [Inf, 0.4854999982012427, 0.28819990757761293, 0.2738145212964319, 0.2716442004592736] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 5]]
** centroid: 2, normalized-entropy: 0.9798687566511527, [(2, 7), (3, 5)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6988999998526016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6988999998526016, 0.37456387564066007] ***
*** starting iteration: 2; err: [Inf, 0.6988999998526016, 0.37456387564066007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6988999998526016, 0.37456387564066007, 0.350329154939224] ***
*** starting iteration: 3; err: [Inf, 0.6988999998526016, 0.37456387564066007, 0.350329154939224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6988999998526016, 0.37456387564066007, 0.350329154939224, 0.34926420824616145] ***
*** finished computation of 7 references, err: [Inf, 0.6988999998526016, 0.37456387564066007, 0.350329154939224, 0.34926420824616145] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 24]]
** centroid: 2, normalized-entropy: 0.9352691398683568, [(2, 13), (3, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48309999723943703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48309999723943703, 0.3923166788324483] ***
*** starting iteration: 2; err: [Inf, 0.48309999723943703, 0.3923166788324483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48309999723943703, 0.3923166788324483, 0.38214554990085203] ***
*** starting iteration: 3; err: [Inf, 0.48309999723943703, 0.3923166788324483, 0.38214554990085203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48309999723943703, 0.3923166788324483, 0.38214554990085203, 0.3658296040937127] ***
*** finished computation of 7 references, err: [Inf, 0.48309999723943703, 0.3923166788324483, 0.38214554990085203, 0.3658296040937127] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 29]]
** centroid: 1, normalized-entropy: 0.6024308020404452, [(2, 5), (3, 29)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 22, 5]]
** centroid: 4, normalized-entropy: 0.6912898694057888, [(2, 22), (3, 5)]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.346933961766417] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.346933961766417, 0.6873965604057126] ***
*** finished computation of 3 references, err: [Inf, 3.346933961766417, 0.6873965604057126] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 25]]
** centroid: 1, normalized-entropy: 0.5787946246321198, [(2, 4), (3, 25)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 27, 4]]
** centroid: 2, normalized-entropy: 0.5547781633412736, [(2, 27), (3, 4)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [39, 1, 0]]
** centroid: 3, normalized-entropy: 0.1686609314966701, [(1, 39), (2, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8208348409423459] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8208348409423459, 0.4038995652377784] ***
*** finished computation of 3 references, err: [Inf, 0.8208348409423459, 0.4038995652377784] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 10]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 30), (3, 10)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [30, 1, 0]]
** centroid: 3, normalized-entropy: 0.2055925081850832, [(1, 30), (2, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5093214270025483] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5093214270025483, 0.3348454380446419] ***
*** finished computation of 3 references, err: [Inf, 0.5093214270025483, 0.3348454380446419] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 33]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 11), (3, 33)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 1]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 24), (3, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9915839709387625] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9915839709387625, 0.3645752136870638] ***
*** starting iteration: 2; err: [Inf, 0.9915839709387625, 0.3645752136870638] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9915839709387625, 0.3645752136870638, 0.3528955324266975] ***
*** starting iteration: 3; err: [Inf, 0.9915839709387625, 0.3645752136870638, 0.3528955324266975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9915839709387625, 0.3645752136870638, 0.3528955324266975, 0.3515626603290221] ***
*** finished computation of 3 references, err: [Inf, 0.9915839709387625, 0.3645752136870638, 0.3528955324266975, 0.3515626603290221] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 6]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8368290661147441] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8368290661147441, 0.44565284426915946] ***
*** starting iteration: 2; err: [Inf, 0.8368290661147441, 0.44565284426915946] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8368290661147441, 0.44565284426915946, 0.43768747666802055] ***
*** starting iteration: 3; err: [Inf, 0.8368290661147441, 0.44565284426915946, 0.43768747666802055] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8368290661147441, 0.44565284426915946, 0.43768747666802055, 0.4205139789156371] ***
*** finished computation of 3 references, err: [Inf, 0.8368290661147441, 0.44565284426915946, 0.43768747666802055, 0.4205139789156371] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 30]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 5), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 7]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 28), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.790566292239948] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.790566292239948, 0.340240026156732] ***
*** starting iteration: 2; err: [Inf, 0.790566292239948, 0.340240026156732] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.790566292239948, 0.340240026156732, 0.33522257136253075] ***
*** starting iteration: 3; err: [Inf, 0.790566292239948, 0.340240026156732, 0.33522257136253075] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.790566292239948, 0.340240026156732, 0.33522257136253075, 0.3348454380446419] ***
*** finished computation of 3 references, err: [Inf, 0.790566292239948, 0.340240026156732, 0.33522257136253075, 0.3348454380446419] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 33]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 11), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 1]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 24), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5484000053466367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5484000053466367, 0.21906046178070984] ***
*** finished computation of 7 references, err: [Inf, 0.5484000053466367, 0.21906046178070984] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 5]]
** centroid: 7, normalized-entropy: 0.9910760598382222, [(2, 4), (3, 5)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6059999980600971] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6059999980600971, 0.2535739537703994] ***
*** finished computation of 7 references, err: [Inf, 0.6059999980600971, 0.2535739537703994] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 11]]
** centroid: 3, normalized-entropy: 0.9666186325481027, [(2, 17), (3, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5239000066631823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5239000066631823, 0.26985669982759536] ***
*** finished computation of 7 references, err: [Inf, 0.5239000066631823, 0.26985669982759536] ***
*** center 1: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 4]]
** centroid: 3, normalized-entropy: 0.9852281360342514, [(2, 3), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 10]]
** centroid: 4, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.8866666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 15
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.8866666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.30554425843117583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30554425843117583, 0.20149926074783753] ***
*** starting iteration: 2; err: [Inf, 0.30554425843117583, 0.20149926074783753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30554425843117583, 0.20149926074783753, 0.19433128759432058] ***
*** starting iteration: 3; err: [Inf, 0.30554425843117583, 0.20149926074783753, 0.19433128759432058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30554425843117583, 0.20149926074783753, 0.19433128759432058, 0.19190722996766651] ***
*** starting iteration: 4; err: [Inf, 0.30554425843117583, 0.20149926074783753, 0.19433128759432058, 0.19190722996766651] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30554425843117583, 0.20149926074783753, 0.19433128759432058, 0.19190722996766651, 0.19152594858945665] ***
*** finished computation of 7 references, err: [Inf, 0.30554425843117583, 0.20149926074783753, 0.19433128759432058, 0.19190722996766651, 0.19152594858945665] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 9, 14]]
** centroid: 6, normalized-entropy: 0.9656361333706099, [(2, 9), (3, 14)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40390632244644437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40390632244644437, 0.2733350872034714] ***
*** starting iteration: 2; err: [Inf, 0.40390632244644437, 0.2733350872034714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40390632244644437, 0.2733350872034714, 0.2275790329896106] ***
*** starting iteration: 3; err: [Inf, 0.40390632244644437, 0.2733350872034714, 0.2275790329896106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40390632244644437, 0.2733350872034714, 0.2275790329896106, 0.1990381000986237] ***
*** starting iteration: 4; err: [Inf, 0.40390632244644437, 0.2733350872034714, 0.2275790329896106, 0.1990381000986237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40390632244644437, 0.2733350872034714, 0.2275790329896106, 0.1990381000986237, 0.18728694685025954] ***
*** starting iteration: 5; err: [Inf, 0.40390632244644437, 0.2733350872034714, 0.2275790329896106, 0.1990381000986237, 0.18728694685025954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40390632244644437, 0.2733350872034714, 0.2275790329896106, 0.1990381000986237, 0.18728694685025954, 0.18592476265090252] ***
*** starting iteration: 6; err: [Inf, 0.40390632244644437, 0.2733350872034714, 0.2275790329896106, 0.1990381000986237, 0.18728694685025954, 0.18592476265090252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40390632244644437, 0.2733350872034714, 0.2275790329896106, 0.1990381000986237, 0.18728694685025954, 0.18592476265090252, 0.18592476265090252] ***
*** finished computation of 7 references, err: [Inf, 0.40390632244644437, 0.2733350872034714, 0.2275790329896106, 0.1990381000986237, 0.18728694685025954, 0.18592476265090252, 0.18592476265090252] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 18]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 18, 9]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 18), (3, 9)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2941366589711378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2941366589711378, 0.17197509247149056] ***
*** starting iteration: 2; err: [Inf, 0.2941366589711378, 0.17197509247149056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2941366589711378, 0.17197509247149056, 0.16678900347119488] ***
*** starting iteration: 3; err: [Inf, 0.2941366589711378, 0.17197509247149056, 0.16678900347119488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2941366589711378, 0.17197509247149056, 0.16678900347119488, 0.16412246062904468] ***
*** starting iteration: 4; err: [Inf, 0.2941366589711378, 0.17197509247149056, 0.16678900347119488, 0.16412246062904468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2941366589711378, 0.17197509247149056, 0.16678900347119488, 0.16412246062904468, 0.1613806555391536] ***
*** starting iteration: 5; err: [Inf, 0.2941366589711378, 0.17197509247149056, 0.16678900347119488, 0.16412246062904468, 0.1613806555391536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2941366589711378, 0.17197509247149056, 0.16678900347119488, 0.16412246062904468, 0.1613806555391536, 0.1592501301230315] ***
*** starting iteration: 6; err: [Inf, 0.2941366589711378, 0.17197509247149056, 0.16678900347119488, 0.16412246062904468, 0.1613806555391536, 0.1592501301230315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2941366589711378, 0.17197509247149056, 0.16678900347119488, 0.16412246062904468, 0.1613806555391536, 0.1592501301230315, 0.15547947311461321] ***
*** starting iteration: 7; err: [Inf, 0.2941366589711378, 0.17197509247149056, 0.16678900347119488, 0.16412246062904468, 0.1613806555391536, 0.1592501301230315, 0.15547947311461321] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2941366589711378, 0.17197509247149056, 0.16678900347119488, 0.16412246062904468, 0.1613806555391536, 0.1592501301230315, 0.15547947311461321, 0.15296370497495457] ***
*** starting iteration: 8; err: [Inf, 0.2941366589711378, 0.17197509247149056, 0.16678900347119488, 0.16412246062904468, 0.1613806555391536, 0.1592501301230315, 0.15547947311461321, 0.15296370497495457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2941366589711378, 0.17197509247149056, 0.16678900347119488, 0.16412246062904468, 0.1613806555391536, 0.1592501301230315, 0.15547947311461321, 0.15296370497495457, 0.15259317338115375] ***
*** finished computation of 7 references, err: [Inf, 0.2941366589711378, 0.17197509247149056, 0.16678900347119488, 0.16412246062904468, 0.1613806555391536, 0.1592501301230315, 0.15547947311461321, 0.15296370497495457, 0.15259317338115375] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 13]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.506200002060367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.506200002060367, 0.2829369074610599] ***
*** starting iteration: 2; err: [Inf, 0.506200002060367, 0.2829369074610599] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.506200002060367, 0.2829369074610599, 0.2452310086134511] ***
*** starting iteration: 3; err: [Inf, 0.506200002060367, 0.2829369074610599, 0.2452310086134511] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.506200002060367, 0.2829369074610599, 0.2452310086134511, 0.22630197853424935] ***
*** starting iteration: 4; err: [Inf, 0.506200002060367, 0.2829369074610599, 0.2452310086134511, 0.22630197853424935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.506200002060367, 0.2829369074610599, 0.2452310086134511, 0.22630197853424935, 0.2118262007648594] ***
*** starting iteration: 5; err: [Inf, 0.506200002060367, 0.2829369074610599, 0.2452310086134511, 0.22630197853424935, 0.2118262007648594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.506200002060367, 0.2829369074610599, 0.2452310086134511, 0.22630197853424935, 0.2118262007648594, 0.2110173114527738] ***
*** finished computation of 7 references, err: [Inf, 0.506200002060367, 0.2829369074610599, 0.2452310086134511, 0.22630197853424935, 0.2118262007648594, 0.2110173114527738] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 11, 5]]
** centroid: 6, normalized-entropy: 0.8960382325345574, [(2, 11), (3, 5)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0224999961814156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0224999961814156, 0.4430505383821543] ***
*** starting iteration: 2; err: [Inf, 1.0224999961814156, 0.4430505383821543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0224999961814156, 0.4430505383821543, 0.3817816295887884] ***
*** starting iteration: 3; err: [Inf, 1.0224999961814156, 0.4430505383821543, 0.3817816295887884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0224999961814156, 0.4430505383821543, 0.3817816295887884, 0.37181226524524036] ***
*** starting iteration: 4; err: [Inf, 1.0224999961814156, 0.4430505383821543, 0.3817816295887884, 0.37181226524524036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0224999961814156, 0.4430505383821543, 0.3817816295887884, 0.37181226524524036, 0.3713404340456317] ***
*** finished computation of 7 references, err: [Inf, 1.0224999961814156, 0.4430505383821543, 0.3817816295887884, 0.37181226524524036, 0.3713404340456317] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 23, 14]]
** centroid: 1, normalized-entropy: 0.9568886656798214, [(2, 23), (3, 14)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5309000053857826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5309000053857826, 0.35831159085349484] ***
*** starting iteration: 2; err: [Inf, 0.5309000053857826, 0.35831159085349484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5309000053857826, 0.35831159085349484, 0.29728855041950164] ***
*** starting iteration: 3; err: [Inf, 0.5309000053857826, 0.35831159085349484, 0.29728855041950164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5309000053857826, 0.35831159085349484, 0.29728855041950164, 0.2897566037079054] ***
*** starting iteration: 4; err: [Inf, 0.5309000053857826, 0.35831159085349484, 0.29728855041950164, 0.2897566037079054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5309000053857826, 0.35831159085349484, 0.29728855041950164, 0.2897566037079054, 0.2873954409369405] ***
*** starting iteration: 5; err: [Inf, 0.5309000053857826, 0.35831159085349484, 0.29728855041950164, 0.2897566037079054, 0.2873954409369405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5309000053857826, 0.35831159085349484, 0.29728855041950164, 0.2897566037079054, 0.2873954409369405, 0.28677775420820617] ***
*** finished computation of 7 references, err: [Inf, 0.5309000053857826, 0.35831159085349484, 0.29728855041950164, 0.2897566037079054, 0.2873954409369405, 0.28677775420820617] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 14]]
** centroid: 1, normalized-entropy: 0.999142103991909, [(2, 15), (3, 14)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.8866666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.49850001114183995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49850001114183995, 0.3038693766419819] ***
*** finished computation of 7 references, err: [Inf, 0.49850001114183995, 0.3038693766419819] ***
*** center 1: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 11]]
** centroid: 3, normalized-entropy: 0.9986359641585719, [(2, 12), (3, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5062000090542447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5062000090542447, 0.2651327417247094] ***
*** finished computation of 7 references, err: [Inf, 0.5062000090542447, 0.2651327417247094] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 7, 8]]
** centroid: 5, normalized-entropy: 0.9967916319816367, [(2, 7), (3, 8)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.043400035757934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.043400035757934, 0.34127798310399576] ***
*** finished computation of 7 references, err: [Inf, 2.043400035757934, 0.34127798310399576] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 5, 10]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 5), (3, 10)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.8866666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 5 finished
*** starting iteration: 1; err: [Inf, 1.1728999953690737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1728999953690737, 0.35962479466843644] ***
*** finished computation of 7 references, err: [Inf, 1.1728999953690737, 0.35962479466843644] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 15]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 1), (3, 15)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [4, 1, 0]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(1, 4), (2, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 30, 6]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.830900001433445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.830900001433445, 0.4405367719066487] ***
*** finished computation of 7 references, err: [Inf, 0.830900001433445, 0.4405367719066487] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 6, 6]]
** centroid: 2, normalized-entropy: 1.0, [(2, 6), (3, 6)]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 2]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.0058000068875246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.0058000068875246, 0.30390199777191484] ***
*** finished computation of 7 references, err: [Inf, 2.0058000068875246, 0.30390199777191484] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 10]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 5, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.8866666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 20
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.509888696698703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.509888696698703, 0.18787362738448568] ***
*** starting iteration: 2; err: [Inf, 0.509888696698703, 0.18787362738448568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.509888696698703, 0.18787362738448568, 0.1585160757893058] ***
*** starting iteration: 3; err: [Inf, 0.509888696698703, 0.18787362738448568, 0.1585160757893058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.509888696698703, 0.18787362738448568, 0.1585160757893058, 0.15323853309088126] ***
*** starting iteration: 4; err: [Inf, 0.509888696698703, 0.18787362738448568, 0.1585160757893058, 0.15323853309088126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.509888696698703, 0.18787362738448568, 0.1585160757893058, 0.15323853309088126, 0.15258298084869273] ***
*** finished computation of 7 references, err: [Inf, 0.509888696698703, 0.18787362738448568, 0.1585160757893058, 0.15323853309088126, 0.15258298084869273] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 5]]
** centroid: 3, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 4: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 7, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7056224758003569] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7056224758003569, 0.3514694972683951] ***
*** starting iteration: 2; err: [Inf, 0.7056224758003569, 0.3514694972683951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7056224758003569, 0.3514694972683951, 0.27295986362705005] ***
*** starting iteration: 3; err: [Inf, 0.7056224758003569, 0.3514694972683951, 0.27295986362705005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7056224758003569, 0.3514694972683951, 0.27295986362705005, 0.24956909669745145] ***
*** starting iteration: 4; err: [Inf, 0.7056224758003569, 0.3514694972683951, 0.27295986362705005, 0.24956909669745145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7056224758003569, 0.3514694972683951, 0.27295986362705005, 0.24956909669745145, 0.2446451856739401] ***
*** starting iteration: 5; err: [Inf, 0.7056224758003569, 0.3514694972683951, 0.27295986362705005, 0.24956909669745145, 0.2446451856739401] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7056224758003569, 0.3514694972683951, 0.27295986362705005, 0.24956909669745145, 0.2446451856739401, 0.24294590484758102] ***
*** starting iteration: 6; err: [Inf, 0.7056224758003569, 0.3514694972683951, 0.27295986362705005, 0.24956909669745145, 0.2446451856739401, 0.24294590484758102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7056224758003569, 0.3514694972683951, 0.27295986362705005, 0.24956909669745145, 0.2446451856739401, 0.24294590484758102, 0.2414540616078202] ***
*** starting iteration: 7; err: [Inf, 0.7056224758003569, 0.3514694972683951, 0.27295986362705005, 0.24956909669745145, 0.2446451856739401, 0.24294590484758102, 0.2414540616078202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7056224758003569, 0.3514694972683951, 0.27295986362705005, 0.24956909669745145, 0.2446451856739401, 0.24294590484758102, 0.2414540616078202, 0.240713460990679] ***
*** finished computation of 7 references, err: [Inf, 0.7056224758003569, 0.3514694972683951, 0.27295986362705005, 0.24956909669745145, 0.2446451856739401, 0.24294590484758102, 0.2414540616078202, 0.240713460990679] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 19]]
** centroid: 2, normalized-entropy: 1.0, [(2, 19), (3, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8222539361170934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8222539361170934, 0.26859681690014237] ***
*** starting iteration: 2; err: [Inf, 0.8222539361170934, 0.26859681690014237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8222539361170934, 0.26859681690014237, 0.17853379376220715] ***
*** starting iteration: 3; err: [Inf, 0.8222539361170934, 0.26859681690014237, 0.17853379376220715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8222539361170934, 0.26859681690014237, 0.17853379376220715, 0.16292284329251772] ***
*** starting iteration: 4; err: [Inf, 0.8222539361170934, 0.26859681690014237, 0.17853379376220715, 0.16292284329251772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8222539361170934, 0.26859681690014237, 0.17853379376220715, 0.16292284329251772, 0.1584204499812587] ***
*** starting iteration: 5; err: [Inf, 0.8222539361170934, 0.26859681690014237, 0.17853379376220715, 0.16292284329251772, 0.1584204499812587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8222539361170934, 0.26859681690014237, 0.17853379376220715, 0.16292284329251772, 0.1584204499812587, 0.15770220618249517] ***
*** finished computation of 7 references, err: [Inf, 0.8222539361170934, 0.26859681690014237, 0.17853379376220715, 0.16292284329251772, 0.1584204499812587, 0.15770220618249517] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 12]]
** centroid: 4, normalized-entropy: 0.9957274520849256, [(2, 14), (3, 12)]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.8866666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 20
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.8866666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 20
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.8866666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.45, 3.1375, 6.3125, 2.0749999999999997], [5.95, 2.95, 4.949999999999999, 1.7000000000000002], [5.9, 2.7399999999999998, 5.08, 1.8199999999999998], [5.5210526315789465, 2.6526315789473682, 4.005263157894737, 1.2526315789473685], [5.268181818181818, 3.713636363636364, 1.4909090909090907, 0.2863636363636364], [4.7294117647058815, 3.0647058823529414, 1.441176470588235, 0.1941176470588235], [6.366666666666666, 2.883333333333333, 4.591666666666667, 1.4500000000000002], [6.546666666666667, 3.06, 5.553333333333331, 2.1666666666666665]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 2, 1, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.95625, 2.825, 4.3875, 1.36875], [5.82, 2.6399999999999997, 4.959999999999999, 1.8399999999999999], [5.3125, 2.3125, 3.575, 1.0625], [4.739999999999998, 3.2000000000000006, 1.4266666666666665, 0.19333333333333333], [6.644444444444445, 2.9777777777777783, 4.7, 1.4555555555555557], [6.41764705882353, 2.9058823529411764, 5.241176470588234, 1.9882352941176473], [7.233333333333333, 3.1400000000000006, 6.186666666666666, 2.1933333333333334], [4.5, 2.3, 1.3, 0.3], [5.25, 3.6928571428571426, 1.5071428571428573, 0.2785714285714286]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 1, 2, 3, 3, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.38, 3.7399999999999998, 1.52, 0.28], [5.64, 2.7120000000000006, 4.032, 1.2599999999999998], [6.55, 2.99, 4.7299999999999995, 1.5], [6.515151515151515, 2.9696969696969697, 5.463636363636364, 1.9727272727272727], [5.044444444444445, 3.422222222222222, 1.5555555555555556, 0.3111111111111111], [4.6, 3.6, 1.0, 0.2], [4.925000000000001, 3.1500000000000004, 1.375, 0.15000000000000002], [4.528571428571428, 3.085714285714286, 1.3714285714285714, 0.1857142857142857]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 2, 3, 1, 1, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[90, 16, 12, 1, 1, 5, 6, 22, 1, 12, 10, 14, 27, 28, 22, 7, 34, 2, 11, 17, 29, 43, 20, 30, 16, 41, 20, 40, 34, 26, 33, 35, 19, 28, 21, 20, 6, 28, 15, 16, 27, 40, 15, 51, 20, 12, 22, 29, 21, 47, 39, 21, 11, 43, 21, 27, 21, 38, 21, 1, 35, 36, 25, 51, 47, 53, 41, 22, 18, 42, 30, 26, 42, 25, 56, 30, 22, 44, 27, 36, 41, 48, 24, 32, 20, 22, 26, 25, 11, 42, 34, 52, 17, 39, 35, 14, 20, 33, 47, 51, 30, 31, 59, 46, 19, 23, 26, 22, 36, 57, 36, 20, 14, 32, 50, 30, 42, 64, 1, 48, 50, 34, 53, 36, 38, 44, 25, 37, 45, 29, 35, 33, 30, 48, 45, 43, 53, 37, 40, 20, 38, 18, 31, 32, 19, 49, 39, 26, 17, 12, 27, 38, 43, 33, 60, 32, 44, 1, 47, 37, 23, 50, 39, 13, 27, 35, 33, 46, 49, 26, 28, 57, 24, 19, 52, 38, 27, 43, 42, 15, 24, 33, 45, 48, 29, 44, 29, 36, 37, 58, 37, 31, 26, 35, 41, 40, 26, 51, 42, 48, 35, 2, 27, 24, 22, 47, 32, 21, 39, 37, 31, 41, 30, 30, 41, 34, 22, 44, 48, 36, 42, 44, 46, 41, 19, 39, 33, 31, 39, 28, 31, 40, 43, 36, 38, 35, 93, 69, 34, 28, 24, 36, 73, 36, 25, 27, 60, 41, 29, 34, 31, 48, 44, 30, 37, 46, 18, 41, 37, 46, 42, 24, 31, 41, 32, 19, 48, 54, 45, 58, 19, 23, 21, 31, 36, 34, 29, 52, 39, 46, 53, 25, 56, 20, 38, 36, 35, 59, 33, 27, 46, 34, 33, 51, 30, 57, 37, 40, 34, 41]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6279999999999997, speedup = 0.4540195265531358, eval_ratio = 0.041982)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.38975694444444464,"f1":null,"seconds":6.790459156036377e-5,"exhaustive_search_seconds":0.0003752969205379486,"evaluations":336.7890625,"distances_sum":1777.6003408151212}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5624999999999998,"recall":0.5624999999999998,"f1":0.5624999999999998,"seconds":0.0001011379063129425,"exhaustive_search_seconds":0.0003752969205379486,"evaluations":375.96875,"distances_sum":1686.9988823484277}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6727430555555552,"recall":0.6727430555555552,"f1":0.6727430555555552,"seconds":0.00013632699847221375,"exhaustive_search_seconds":0.0003752969205379486,"evaluations":414.96875,"distances_sum":1641.2187985581327}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7378472222222215,"recall":0.7378472222222215,"f1":0.7378472222222215,"seconds":0.00016851536929607391,"exhaustive_search_seconds":0.0003752969205379486,"evaluations":452.578125,"distances_sum":1618.7823705238277}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7968749999999993,"recall":0.7968749999999993,"f1":0.7968749999999993,"seconds":0.00020008161664009094,"exhaustive_search_seconds":0.0003752969205379486,"evaluations":490.25,"distances_sum":1602.7285690976553}
KCenters.DeloneInvIndex> reached performance {"precision":0.8420138888888881,"recall":0.8420138888888881,"f1":0.8420138888888881,"seconds":0.00023328885436058044,"exhaustive_search_seconds":0.0003752969205379486,"evaluations":528.6171875,"distances_sum":1593.5687983990447}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8220000000000001, speedup = 1.8821340436366487, eval_ratio = 0.053785)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
