Julia Version 1.5.0-DEV.230
Commit 3720edfc06 (2020-02-03 20:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed DataValueInterfaces ───────── v1.0.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed Missings ──────────────────── v0.4.3
  Installed InvertedIndices ───────────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed KCenters ──────────────────── v0.1.9
  Installed StatsBase ─────────────────── v0.32.0
  Installed JSON ──────────────────────── v0.21.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed CategoricalArrays ─────────── v0.7.7
  Installed Parsers ───────────────────── v0.3.11
  Installed TableTraits ───────────────── v1.0.0
  Installed Compat ────────────────────── v3.2.0
  Installed OrderedCollections ────────── v1.1.0
  Installed DataStructures ────────────── v0.17.9
  Installed MLDataUtils ───────────────── v0.5.0
  Installed DataFrames ────────────────── v0.20.0
  Installed DataAPI ───────────────────── v1.1.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Tables ────────────────────── v0.2.11
  Installed MappedArrays ──────────────── v0.2.2
  Installed MLDataPattern ─────────────── v0.5.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed SimilaritySearch ──────────── v0.3.17
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_EQ4o55/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 169.53
[ Info: 70.06
[ Info: 38.66999999999998
[ Info: 25.759999999999994
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999835129265
[ Info: 75.46000112136034
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.15151736644164
inertia(cdnet.distances) = 28.363038386424904
inertia(crand.distances) = 20.88174067605246
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.173828125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.173828125,"f1":null,"seconds":3.5017728805541992e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":4.9375,"distances_sum":510.1964927836647}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1669921875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1669921875,"f1":null,"seconds":3.427267074584961e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":4.703125,"distances_sum":464.0958401256588}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.173828125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.173828125,"f1":null,"seconds":3.5017728805541992e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":4.9375,"distances_sum":510.1964927836647}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8595820845820856,"seconds":4.939734935760498e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":8.0546875,"distances_sum":2217.9192203026096}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5166015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5166015625,"f1":null,"seconds":4.319474101066589e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":6.703125,"distances_sum":1439.01381397052}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8706080377955387,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":8.1015625,"distances_sum":2247.098493261218}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3623046875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3623046875,"f1":null,"seconds":3.287568688392639e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":5.4921875,"distances_sum":994.0522687490808}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7952937687312694,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":7.671875,"distances_sum":1844.0632800681085}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8706080377955387,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":8.1015625,"distances_sum":2247.098493261218}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9253522519147525,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":8.5703125,"distances_sum":2559.3345708899787}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9527243589743594,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":8.734375,"distances_sum":2747.474147593157}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9479796245421251,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":8.7578125,"distances_sum":2687.008134233931}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9145406676656684,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":8.40625,"distances_sum":2448.918734312675}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9027160339660346,"seconds":6.560236215591431e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":8.46875,"distances_sum":2369.353452347139}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9355940934065939,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":8.6015625,"distances_sum":2611.0627433120476}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9527243589743594,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":8.734375,"distances_sum":2747.474147593157}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9527243589743594,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.8440186977386475e-6,"evaluations":8.734375,"distances_sum":2747.474147593157}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6064453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6064453125,"f1":0.7408546314796322,"seconds":4.410743713378906e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.140625,"distances_sum":1548.5088469826276}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8551838786213796,"seconds":4.738569259643555e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.078125,"distances_sum":1904.6159401597488}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8551838786213796,"seconds":4.738569259643555e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.078125,"distances_sum":1904.6159401597488}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.916137508325009,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.421875,"distances_sum":2301.881571941319}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9243303571428576,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.625,"distances_sum":2324.6606282575854}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9309466575091583,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.59375,"distances_sum":2405.5222179281072}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9309466575091583,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.59375,"distances_sum":2405.5222179281072}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.956942536630037,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6875,"distances_sum":2572.264744765184}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9517570970695978,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7734375,"distances_sum":2514.37022046319}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9680460164835172,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2602.0265267771083}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9416182775557783,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6328125,"distances_sum":2482.85163138541}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9352423618048624,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6328125,"distances_sum":2419.6812021614655}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9680460164835172,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2602.0265267771083}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9680460164835172,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2602.0265267771083}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7236328125,"f1":0.8288357475857484,"seconds":4.798173904418945e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.5078125,"distances_sum":1766.710634387443}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8440106768231778,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.65625,"distances_sum":1843.9771595761638}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1787109375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1787109375,"f1":null,"seconds":2.7976930141448975e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":4.8046875,"distances_sum":447.04678555513397}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7412109375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.8440106768231778,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.65625,"distances_sum":1843.9771595761638}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9489812271062276,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.75,"distances_sum":2414.069183524999}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588942307692311,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.796875,"distances_sum":2480.896664135763}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9454727564102569,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7265625,"distances_sum":2423.2697309931086}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9588942307692311,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.796875,"distances_sum":2480.896664135763}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964829441391942,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2495.756395771719}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9712797619047624,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2549.323995839178}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9785714285714288,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9140625,"distances_sum":2606.6530399641756}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9690132783882788,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2530.5775571577897}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9649038461538464,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8203125,"distances_sum":2515.843921330152}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785714285714288,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9140625,"distances_sum":2606.6530399641756}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785714285714288,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9140625,"distances_sum":2606.6530399641756}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1953125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1953125,"f1":null,"seconds":3.0472874641418457e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.2109375,"distances_sum":404.2540107997908}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1953125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1953125,"f1":null,"seconds":3.0472874641418457e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.2109375,"distances_sum":404.2540107997908}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6396484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6396484375,"f1":0.7653997044622053,"seconds":4.414469003677368e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.328125,"distances_sum":1459.4171433384063}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6396484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6396484375,"f1":0.7653997044622053,"seconds":4.414469003677368e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.328125,"distances_sum":1459.4171433384063}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8426230019980028,"seconds":4.889443516731262e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.9765625,"distances_sum":1760.7507556644075}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.845582022144523,"seconds":4.867091774940491e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.9296875,"distances_sum":1799.0423281846486}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.845582022144523,"seconds":4.867091774940491e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.9296875,"distances_sum":1799.0423281846486}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9228568306693314,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.734375,"distances_sum":2210.435562191096}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9235061813186819,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.734375,"distances_sum":2201.160938843075}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9306891025641031,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7734375,"distances_sum":2238.6220742752516}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8955164627039633,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.5546875,"distances_sum":2041.7722193668735}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9306891025641031,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7734375,"distances_sum":2238.6220742752516}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8779296875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9306891025641031,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7734375,"distances_sum":2238.6220742752516}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.408203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.408203125,"f1":null,"seconds":3.5781413316726685e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":5.8828125,"distances_sum":815.7554361827495}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.408203125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.408203125,"f1":null,"seconds":3.5781413316726685e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":5.8828125,"distances_sum":815.7554361827495}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":3.5874545574188232e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":5.84375,"distances_sum":832.1704346229603}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8535662254412264,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.75,"distances_sum":1763.6660121335099}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9102080211455218,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.359375,"distances_sum":2093.672902199014}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9102080211455218,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.359375,"distances_sum":2093.672902199014}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.945604395604396,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.796875,"distances_sum":2342.560264858226}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.925366300366301,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.75,"distances_sum":2231.3075393697677}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.945604395604396,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.796875,"distances_sum":2342.560264858226}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.945604395604396,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.796875,"distances_sum":2342.560264858226}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.220703125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.220703125,"f1":null,"seconds":3.0584633350372314e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":4.7109375,"distances_sum":580.4231281184698}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.220703125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.220703125,"f1":null,"seconds":3.0584633350372314e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":4.7109375,"distances_sum":580.4231281184698}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6201171875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6201171875,"f1":0.7491617757242764,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":7.453125,"distances_sum":1474.864803149598}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6201171875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6201171875,"f1":0.7491617757242764,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":7.453125,"distances_sum":1474.864803149598}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7738827145077153,"seconds":4.829838871955872e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":7.5234375,"distances_sum":1592.8681864844564}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9515338827838833,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.875,"distances_sum":2469.6750289670354}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8940340909090916,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.6875,"distances_sum":2086.9797344672484}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.772784507159508,"seconds":4.9620866775512695e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":7.6875,"distances_sum":1607.9391952209303}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8356828934953944,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.28125,"distances_sum":1854.880161526621}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9515338827838833,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.875,"distances_sum":2469.6750289670354}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9515338827838833,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.875,"distances_sum":2469.6750289670354}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9515338827838833,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.875,"distances_sum":2469.6750289670354}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1767578125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1767578125,"f1":null,"seconds":2.738088369369507e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.546875,"distances_sum":459.30862558632055}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8458166833166844,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.515625,"distances_sum":1897.1410901035556}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4033203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4033203125,"f1":null,"seconds":3.2261013984680176e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.0234375,"distances_sum":898.7245258903579}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8458166833166844,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.515625,"distances_sum":1897.1410901035556}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9453010531135536,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.78125,"distances_sum":2520.0600494270225}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9549164377289382,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8359375,"distances_sum":2580.1026285872576}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8549429736929747,"seconds":4.69014048576355e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.6640625,"distances_sum":1985.2461370218623}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9549164377289382,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8359375,"distances_sum":2580.1026285872576}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9664091117216121,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8515625,"distances_sum":2686.6157201070005}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9709478021978026,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9609375,"distances_sum":2678.42890480641}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9789835164835168,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.953125,"distances_sum":2752.949084978604}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9789835164835168,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.953125,"distances_sum":2752.949084978604}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9789835164835168,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.953125,"distances_sum":2752.949084978604}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.7986388611388618,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.375,"distances_sum":1576.695473386939}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8822006118881128,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.015625,"distances_sum":1980.6024755549797}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7998046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7998046875,"f1":0.8822006118881128,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.015625,"distances_sum":1980.6024755549797}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9591033966033972,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.828125,"distances_sum":2494.708170007963}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9204555860805866,"seconds":6.57886266708374e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":2247.70411345519}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9311901640026646,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7890625,"distances_sum":2285.5866255336646}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9591033966033972,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.828125,"distances_sum":2494.708170007963}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628007409257412,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8203125,"distances_sum":2534.984384880769}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688988095238102,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":2539.154558064311}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9664091117216123,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":2530.360963967847}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9653674450549455,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.890625,"distances_sum":2527.958010901068}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9663347069597075,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.96875,"distances_sum":2484.6223762760796}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688988095238102,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":2539.154558064311}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688988095238102,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":2539.154558064311}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7101986555111562,"seconds":3.7867575883865356e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.7265625,"distances_sum":1315.4091968844598}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5732421875,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5732421875,"f1":0.7101986555111562,"seconds":3.7867575883865356e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.7265625,"distances_sum":1315.4091968844598}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8864983974358983,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3203125,"distances_sum":2123.984955131065}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59375, conf: {"ssize":9,"bsize":3}, perf: {"precision":1.0,"recall":0.59375,"f1":0.7283378080253087,"seconds":4.002824425697327e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.890625,"distances_sum":1337.5642822704576}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7836278305028315,"seconds":4.123896360397339e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.046875,"distances_sum":1576.659286772396}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8115234375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8115234375,"f1":0.8864983974358983,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3203125,"distances_sum":2123.984955131065}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9156593406593414,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6484375,"distances_sum":2288.6627330496285}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9047332875457884,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5546875,"distances_sum":2198.186621226608}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.853515625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.9156593406593414,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6484375,"distances_sum":2288.6627330496285}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.853515625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.9156593406593414,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6484375,"distances_sum":2288.6627330496285}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.439453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.439453125,"f1":null,"seconds":3.6545097827911377e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.0234375,"distances_sum":987.7775195263646}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.419921875,"f1":0.5708463411588411,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.9609375,"distances_sum":921.0311519464268}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.439453125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.439453125,"f1":null,"seconds":3.6545097827911377e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.0234375,"distances_sum":987.7775195263646}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7060546875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7060546875,"f1":0.8125697219447228,"seconds":4.325062036514282e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.703125,"distances_sum":1670.461831028633}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9158284423909431,"seconds":5.127862095832825e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3828125,"distances_sum":2216.833887359532}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7938897907647914,"seconds":4.375353455543518e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.71875,"distances_sum":1611.114037327526}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9309783966033973,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.40625,"distances_sum":2287.0035814319313}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9309783966033973,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.40625,"distances_sum":2287.0035814319313}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9616846694971698,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.875,"distances_sum":2546.8119605071065}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9616846694971698,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.875,"distances_sum":2546.8119605071065}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9616846694971698,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.875,"distances_sum":2546.8119605071065}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.185546875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.185546875,"f1":null,"seconds":2.7436763048171997e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.28125,"distances_sum":505.75759962426343}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.599609375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.599609375,"f1":0.7340052308802315,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.859375,"distances_sum":1448.5002731376876}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5556640625,"f1":null,"seconds":3.682449460029602e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.5546875,"distances_sum":1270.1677937005684}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.599609375,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.599609375,"f1":0.7340052308802315,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.859375,"distances_sum":1448.5002731376876}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.6328125,"f1":null,"seconds":4.118308424949646e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.875,"distances_sum":1491.5563492238182}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8446319305694313,"seconds":4.59328293800354e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.7421875,"distances_sum":1926.2766847429957}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8956444597069607,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.421875,"distances_sum":2201.511646349013}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.8956444597069607,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.421875,"distances_sum":2201.511646349013}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9509589368964374,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8046875,"distances_sum":2598.221567335766}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9542639652014657,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8515625,"distances_sum":2607.105860075131}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.95397206959707,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7890625,"distances_sum":2634.6649143105647}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9288836163836172,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7578125,"distances_sum":2466.07297855597}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9542639652014657,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8515625,"distances_sum":2607.105860075131}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9542639652014657,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8515625,"distances_sum":2607.105860075131}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":2.8386712074279785e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.9921875,"distances_sum":535.1967248349343}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8576194638694646,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.921875,"distances_sum":1819.5918571615887}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.408203125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.408203125,"f1":null,"seconds":3.2745301723480225e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.0546875,"distances_sum":905.5307967174172}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8576194638694646,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.921875,"distances_sum":1819.5918571615887}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9568853021978028,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.765625,"distances_sum":2429.3713727116187}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8583921287046293,"seconds":4.734843969345093e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.859375,"distances_sum":1834.722703020188}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9063930860805869,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3046875,"distances_sum":2086.911147230479}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9568853021978028,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.765625,"distances_sum":2429.3713727116187}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.980637591575092,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2581.6496067520766}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9690705128205132,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.875,"distances_sum":2512.7733521426453}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.971151244588745,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.875,"distances_sum":2525.855075986443}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.980637591575092,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2581.6496067520766}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.980637591575092,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2581.6496067520766}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7936459373959383,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.6484375,"distances_sum":1425.146219430529}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6930711649461655,"seconds":3.8780272006988525e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.1015625,"distances_sum":1129.8278830441252}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8675340284715292,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.046875,"distances_sum":1654.1273621041032}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8675340284715292,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.046875,"distances_sum":1654.1273621041032}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9162348068598072,"seconds":5.1800161600112915e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.453125,"distances_sum":1952.453180157841}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8710971320346328,"seconds":4.755333065986633e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.109375,"distances_sum":1706.787785048527}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9433836996337004,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.703125,"distances_sum":2077.9865188267404}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9461939102564106,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7109375,"distances_sum":2124.5281136373205}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9197297494172503,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.375,"distances_sum":1927.6935919537511}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9461939102564106,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7109375,"distances_sum":2124.5281136373205}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9510645604395612,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.78125,"distances_sum":2153.085270714161}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.969276556776557,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2274.079988840818}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9535058691308695,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.78125,"distances_sum":2208.4788573794804}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9520146520146527,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.78125,"distances_sum":2160.2030888903396}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9606799450549454,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2193.1613922901615}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.969276556776557,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2274.079988840818}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.969276556776557,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2274.079988840818}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8658607017982027,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.96875,"distances_sum":1552.5367585639149}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3857421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3857421875,"f1":null,"seconds":3.0547380447387695e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.40625,"distances_sum":744.5606717248407}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8658607017982027,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.96875,"distances_sum":1552.5367585639149}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9415293040293045,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6953125,"distances_sum":1961.2718327919547}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9219124625374632,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.46875,"distances_sum":1834.6307572711}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9454727564102569,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6875,"distances_sum":1962.4399730153361}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9454727564102569,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6875,"distances_sum":1962.4399730153361}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9717834249084252,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8828125,"distances_sum":2117.0547938383825}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9681948260073264,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8203125,"distances_sum":2117.825871133906}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9633241758241765,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8046875,"distances_sum":2073.1188179433766}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9597126831501837,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7734375,"distances_sum":2053.0879606521953}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9717834249084252,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8828125,"distances_sum":2117.0547938383825}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9717834249084252,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8828125,"distances_sum":2117.0547938383825}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7948936480186489,"seconds":4.274770617485046e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.7890625,"distances_sum":1391.9770605835015}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6806640625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6806640625,"f1":0.7948936480186489,"seconds":4.274770617485046e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.7890625,"distances_sum":1391.9770605835015}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9302229020979028,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6484375,"distances_sum":2050.5424845571733}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9058379120879129,"seconds":4.9192458391189575e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4453125,"distances_sum":1891.3591294319842}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9240873709623718,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.609375,"distances_sum":2016.1854777052338}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8375275765900774,"seconds":4.498288035392761e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.0703125,"distances_sum":1609.457504360911}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9302229020979028,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6484375,"distances_sum":2050.5424845571733}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628777472527477,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7890625,"distances_sum":2243.8522873193547}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9508985805860808,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.71875,"distances_sum":2159.8288527497475}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9650125915750919,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.84375,"distances_sum":2231.455123374734}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9621680402930406,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8046875,"distances_sum":2238.0812519615524}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9520063270063273,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.78125,"distances_sum":2153.2288341156855}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9416151556776565,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6953125,"distances_sum":2107.331274439401}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9650125915750919,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.84375,"distances_sum":2231.455123374734}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9650125915750919,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.84375,"distances_sum":2231.455123374734}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8597938519813526,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.8125,"distances_sum":1595.8093797194674}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8597938519813526,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.8125,"distances_sum":1595.8093797194674}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.970203754578755,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.890625,"distances_sum":2136.4212150244357}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8650224775224782,"seconds":4.718080163002014e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.9453125,"distances_sum":1548.2791901786377}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.970203754578755,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.890625,"distances_sum":2136.4212150244357}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731971153846157,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9140625,"distances_sum":2155.0585872829024}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9773637820512823,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9375,"distances_sum":2172.4544714571066}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773637820512823,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9375,"distances_sum":2172.4544714571066}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773637820512823,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9375,"distances_sum":2172.4544714571066}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8860519688644697,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.125,"distances_sum":1657.8435626331109}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8860519688644697,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.125,"distances_sum":1657.8435626331109}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8860519688644697,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.125,"distances_sum":1657.8435626331109}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8056640625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8860519688644697,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.125,"distances_sum":1657.8435626331109}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8590014152514162,"seconds":4.665926098823547e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.1484375,"distances_sum":1501.0726123648599}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8052003552003563,"seconds":4.276633262634277e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.9140625,"distances_sum":1346.0903246018436}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8590014152514162,"seconds":4.665926098823547e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.1484375,"distances_sum":1501.0726123648599}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9119791666666675,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.4609375,"distances_sum":1728.801218823709}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9090716575091581,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.453125,"distances_sum":1708.6860966406605}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8754417457542465,"seconds":4.706904292106628e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.28125,"distances_sum":1589.8910892528254}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.930259844322345,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.640625,"distances_sum":1834.6269821382837}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.930259844322345,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.640625,"distances_sum":1834.6269821382837}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.962208104395605,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8984375,"distances_sum":2024.5652998660175}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9634901556776562,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.859375,"distances_sum":2036.3341773254872}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9613152472527479,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.875,"distances_sum":2024.65184400101}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9618360805860809,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.859375,"distances_sum":2042.549321485404}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9641769688644695,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8671875,"distances_sum":2030.326733439578}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9582818223443229,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8515625,"distances_sum":2018.7231078282907}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.953170787545788,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8203125,"distances_sum":1998.1990109482617}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9634901556776562,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.859375,"distances_sum":2036.3341773254872}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9634901556776562,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.859375,"distances_sum":2036.3341773254872}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2333984375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.127381205558777e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.359375,"distances_sum":401.2389410997382}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2333984375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.127381205558777e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.359375,"distances_sum":401.2389410997382}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.868456023143524,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":2.304092049598694e-6,"evaluations":8.1953125,"distances_sum":1602.6428084870836}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2041015625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2041015625,"f1":null,"seconds":2.767890691757202e-6,"exhaustive_search_seconds":2.304092049598694e-6,"evaluations":5.0859375,"distances_sum":400.46319467730166}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8817250457875467,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":2.304092049598694e-6,"evaluations":8.3515625,"distances_sum":1664.1289299918453}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.798828125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.798828125,"f1":0.8817250457875467,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":2.304092049598694e-6,"evaluations":8.3515625,"distances_sum":1664.1289299918453}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9200695138195145,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":2.304092049598694e-6,"evaluations":8.5,"distances_sum":1842.2489795548427}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9539663461538467,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":2.304092049598694e-6,"evaluations":8.7265625,"distances_sum":2072.3575408053675}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9578754578754585,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":2.304092049598694e-6,"evaluations":8.796875,"distances_sum":2064.865657072653}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9578754578754585,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":2.304092049598694e-6,"evaluations":8.796875,"distances_sum":2064.865657072653}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":10,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9794299450549453,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":2.304092049598694e-6,"evaluations":8.90625,"distances_sum":2197.6937612944184}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9580560064935068,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":2.304092049598694e-6,"evaluations":8.8125,"distances_sum":2054.581150526035}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739983974358977,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":2.304092049598694e-6,"evaluations":8.8828125,"distances_sum":2177.2026153520924}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9646577380952384,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":2.304092049598694e-6,"evaluations":8.8671875,"distances_sum":2080.7262253102317}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":10,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9794299450549453,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":2.304092049598694e-6,"evaluations":8.90625,"distances_sum":2197.6937612944184}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":10,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9794299450549453,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":2.304092049598694e-6,"evaluations":8.90625,"distances_sum":2197.6937612944184}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3564453125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3564453125,"f1":null,"seconds":3.1795352697372437e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":5.4296875,"distances_sum":666.5684573798646}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.376953125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.376953125,"f1":null,"seconds":3.3974647521972656e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":5.53125,"distances_sum":739.753429384945}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.376953125,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.376953125,"f1":null,"seconds":3.3974647521972656e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":5.53125,"distances_sum":739.753429384945}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9100961538461546,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.484375,"distances_sum":1784.6011658890502}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":6,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.1869858503341675e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":5.6015625,"distances_sum":776.8507598203673}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5361328125,"f1":0.6824257339882346,"seconds":4.131346940994263e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":6.6953125,"distances_sum":1073.7855605868122}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8606180278055285,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.015625,"distances_sum":1572.869918474073}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7817328504828512,"seconds":4.824250936508179e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":7.3125,"distances_sum":1285.7388481182415}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84765625,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.84765625,"f1":0.9100961538461546,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.484375,"distances_sum":1784.6011658890502}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.961796016483517,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.828125,"distances_sum":2080.6949063825555}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670043498168501,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.84375,"distances_sum":2115.6883873270444}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":10,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9149413086913094,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.375,"distances_sum":1827.7248573134257}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9553628663003669,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.828125,"distances_sum":2047.1453551873938}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9497081043956049,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.71875,"distances_sum":2017.0964499227541}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9387992216117221,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.6796875,"distances_sum":1957.4372270676931}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670043498168501,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.84375,"distances_sum":2115.6883873270444}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670043498168501,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.84375,"distances_sum":2115.6883873270444}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2080078125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2080078125,"f1":null,"seconds":2.8815120458602905e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":5.578125,"distances_sum":388.66609523120593}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8090617715617724,"seconds":4.677101969718933e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":7.6171875,"distances_sum":1416.710177004177}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.693359375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.693359375,"f1":0.8090617715617724,"seconds":4.677101969718933e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":7.6171875,"distances_sum":1416.710177004177}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9067510614385621,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.296875,"distances_sum":1855.0763377445744}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9322833416583423,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.5703125,"distances_sum":1987.2649370786532}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9322833416583423,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.5703125,"distances_sum":1987.2649370786532}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9492044413919423,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.6875,"distances_sum":2077.188915982918}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9729166666666672,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.9296875,"distances_sum":2228.4363714887936}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9734031593406596,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.90625,"distances_sum":2247.8700685061876}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591975732600738,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.8125,"distances_sum":2133.0663079623055}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9566620879120884,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.8125,"distances_sum":2095.5621312702574}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734031593406596,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.90625,"distances_sum":2247.8700685061876}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734031593406596,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.90625,"distances_sum":2247.8700685061876}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3154296875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3154296875,"f1":null,"seconds":2.8796494007110596e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":4.9375,"distances_sum":627.614713174668}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7974567099567108,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.765625,"distances_sum":1322.8205609324189}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.681640625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.681640625,"f1":0.7974567099567108,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.765625,"distances_sum":1322.8205609324189}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9249771062271068,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.5,"distances_sum":1891.4400604554705}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9249771062271068,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.5,"distances_sum":1891.4400604554705}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9643086080586086,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.828125,"distances_sum":2084.0722891401747}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9475675366300373,"seconds":4.990026354789734e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.703125,"distances_sum":1998.096270225455}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9594379578754584,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.78125,"distances_sum":2070.1828718848615}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9643086080586086,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.828125,"distances_sum":2084.0722891401747}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9643086080586086,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.828125,"distances_sum":2084.0722891401747}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7108774905649912,"seconds":3.9208680391311646e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.4609375,"distances_sum":1080.7683507393722}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8736294955044964,"seconds":4.7013163566589355e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4375,"distances_sum":1597.5311918938773}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8736294955044964,"seconds":4.7013163566589355e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4375,"distances_sum":1597.5311918938773}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.919190705128206,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8046875,"distances_sum":1802.6927706090455}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9045157967032974,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.640625,"distances_sum":1765.0527711733325}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9341148434898442,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":1884.4585763022087}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9341148434898442,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":1884.4585763022087}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9746852106227111,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.953125,"distances_sum":2139.506085238802}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9649954212454218,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2112.316858964719}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.975744047619048,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.96875,"distances_sum":2134.822530298762}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9527243589743594,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2032.0328349238603}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9550080128205134,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2042.3692876153189}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9737179487179491,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":2150.6582268790567}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552140567765575,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.90625,"distances_sum":2017.558718897638}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.960697115384616,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2083.546238882101}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.975744047619048,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.96875,"distances_sum":2134.822530298762}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.975744047619048,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.96875,"distances_sum":2134.822530298762}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5888671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5888671875,"f1":null,"seconds":3.937631845474243e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.4921875,"distances_sum":1120.9918159205406}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5888671875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5888671875,"f1":null,"seconds":3.937631845474243e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.4921875,"distances_sum":1120.9918159205406}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.879561584249085,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.09375,"distances_sum":1630.4735107712916}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9122575341325352,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4140625,"distances_sum":1751.6594851427972}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.849609375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.849609375,"f1":0.9122575341325352,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4140625,"distances_sum":1751.6594851427972}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9492445054945059,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8203125,"distances_sum":1966.4371535511948}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9580044955044963,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.828125,"distances_sum":2039.3687813863528}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9373798076923084,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.640625,"distances_sum":1906.4066734147252}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9580044955044963,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.828125,"distances_sum":2039.3687813863528}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9580044955044963,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.828125,"distances_sum":2039.3687813863528}}, n: 9
inertia(cfft.distances) = 20.814206041050767
inertia(cdnet.distances) = 25.171762690873255
inertia(crand.distances) = 21.047554138213012
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9400000000000001
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9488888888888889
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9333333333333332
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9400000000000001
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9422222222222222
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8822222222222224
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8577777777777778
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9288888888888889
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 1, 3, 2, 2, 3, 3, 1, 3, 3, 2, 3, 1, 3, 2, 3, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 1, 3, 1, 3]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.3214666723570453] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3214666723570453, 0.16974199520316066] ***
*** starting iteration: 2; err: [Inf, 0.3214666723570453, 0.16974199520316066] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3214666723570453, 0.16974199520316066, 0.16136478789632658] ***
*** starting iteration: 3; err: [Inf, 0.3214666723570453, 0.16974199520316066, 0.16136478789632658] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3214666723570453, 0.16974199520316066, 0.16136478789632658, 0.157980828539514] ***
*** starting iteration: 4; err: [Inf, 0.3214666723570453, 0.16974199520316066, 0.16136478789632658, 0.157980828539514] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3214666723570453, 0.16974199520316066, 0.16136478789632658, 0.157980828539514, 0.15725058109611928] ***
*** finished computation of 12 references, err: [Inf, 0.3214666723570453, 0.16974199520316066, 0.16136478789632658, 0.157980828539514, 0.15725058109611928] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 8, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 6, 6]]
** centroid: 9, normalized-entropy: 1.0, [(2, 6), (3, 6)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 12, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
finished with 15 centroids; started with 12
acc = 0.96
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.6117034833335411] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6117034833335411, 0.4966167817902691] ***
*** finished computation of 7 references, err: [Inf, 0.6117034833335411, 0.4966167817902691] ***
*** center 1: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 30]]
** centroid: 3, normalized-entropy: 1.0, [(2, 30), (3, 30)]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43671551959034405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43671551959034405, 0.16733864886034866] ***
*** finished computation of 7 references, err: [Inf, 0.43671551959034405, 0.16733864886034866] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 13, 2]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 5]]
** centroid: 4, normalized-entropy: 0.7732266742876346, [(2, 17), (3, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5623560658476627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5623560658476627, 0.23831728850228878] ***
*** finished computation of 7 references, err: [Inf, 0.5623560658476627, 0.23831728850228878] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 2: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 3]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(2, 14), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 7, 24]]
** centroid: 4, normalized-entropy: 0.7706290693639406, [(2, 7), (3, 24)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8171198912216664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8171198912216664, 0.3960665964965604] ***
*** starting iteration: 2; err: [Inf, 0.8171198912216664, 0.3960665964965604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8171198912216664, 0.3960665964965604, 0.3688252040123639] ***
*** starting iteration: 3; err: [Inf, 0.8171198912216664, 0.3960665964965604, 0.3688252040123639] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8171198912216664, 0.3960665964965604, 0.3688252040123639, 0.35717870671529794] ***
*** finished computation of 3 references, err: [Inf, 0.8171198912216664, 0.3960665964965604, 0.3688252040123639, 0.35717870671529794] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8261507247102317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8261507247102317, 0.4148195433116343] ***
*** starting iteration: 2; err: [Inf, 0.8261507247102317, 0.4148195433116343] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8261507247102317, 0.4148195433116343, 0.3800351557462121] ***
*** starting iteration: 3; err: [Inf, 0.8261507247102317, 0.4148195433116343, 0.3800351557462121] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8261507247102317, 0.4148195433116343, 0.3800351557462121, 0.3759787439217526] ***
*** finished computation of 3 references, err: [Inf, 0.8261507247102317, 0.4148195433116343, 0.3800351557462121, 0.3759787439217526] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 11]]
** centroid: 1, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 26]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8145786403119122] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8145786403119122, 0.3912971068474123] ***
*** starting iteration: 2; err: [Inf, 0.8145786403119122, 0.3912971068474123] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8145786403119122, 0.3912971068474123, 0.38494774215502153] ***
*** starting iteration: 3; err: [Inf, 0.8145786403119122, 0.3912971068474123, 0.38494774215502153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8145786403119122, 0.3912971068474123, 0.38494774215502153, 0.3831050606480419] ***
*** finished computation of 3 references, err: [Inf, 0.8145786403119122, 0.3912971068474123, 0.38494774215502153, 0.3831050606480419] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 31]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 8), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 2]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9340836068392951] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9340836068392951, 0.3897255836369623] ***
*** starting iteration: 2; err: [Inf, 0.9340836068392951, 0.3897255836369623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9340836068392951, 0.3897255836369623, 0.3649610174243773] ***
*** starting iteration: 3; err: [Inf, 0.9340836068392951, 0.3897255836369623, 0.3649610174243773] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9340836068392951, 0.3897255836369623, 0.3649610174243773, 0.35717870671529794] ***
*** finished computation of 3 references, err: [Inf, 0.9340836068392951, 0.3897255836369623, 0.3649610174243773, 0.35717870671529794] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 8]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 22]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(2, 1), (3, 22)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2337885001838516] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2337885001838516, 0.39258728900745987] ***
*** starting iteration: 2; err: [Inf, 1.2337885001838516, 0.39258728900745987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2337885001838516, 0.39258728900745987, 0.3759787439217526] ***
*** starting iteration: 3; err: [Inf, 1.2337885001838516, 0.39258728900745987, 0.3759787439217526] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2337885001838516, 0.39258728900745987, 0.3759787439217526, 0.37567249707070416] ***
*** finished computation of 3 references, err: [Inf, 1.2337885001838516, 0.39258728900745987, 0.3759787439217526, 0.37567249707070416] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 2, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 11]]
** centroid: 3, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1078613533073538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1078613533073538, 0.3765759730581722] ***
*** starting iteration: 2; err: [Inf, 1.1078613533073538, 0.3765759730581722] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1078613533073538, 0.3765759730581722, 0.37278388133319146] ***
*** starting iteration: 3; err: [Inf, 1.1078613533073538, 0.3765759730581722, 0.37278388133319146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1078613533073538, 0.3765759730581722, 0.37278388133319146, 0.3714574787598427] ***
*** finished computation of 3 references, err: [Inf, 1.1078613533073538, 0.3765759730581722, 0.37278388133319146, 0.3714574787598427] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.3382554980992207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.3382554980992207, 0.6382992917413304] ***
*** finished computation of 7 references, err: [Inf, 2.3382554980992207, 0.6382992917413304] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 21, 3]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 21), (3, 3)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 4, 5]]
** centroid: 4, normalized-entropy: 0.9910760598382222, [(2, 4), (3, 5)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [32, 5, 0]]
** centroid: 5, normalized-entropy: 0.5713549744279549, [(1, 32), (2, 5)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 4]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4552938134054697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4552938134054697, 0.24214263112040876] ***
*** finished computation of 7 references, err: [Inf, 0.4552938134054697, 0.24214263112040876] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 13]]
** centroid: 7, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7451768311313152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7451768311313152, 0.2621703702393955] ***
*** starting iteration: 2; err: [Inf, 0.7451768311313152, 0.2621703702393955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7451768311313152, 0.2621703702393955, 0.23988146214423672] ***
*** starting iteration: 3; err: [Inf, 0.7451768311313152, 0.2621703702393955, 0.23988146214423672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7451768311313152, 0.2621703702393955, 0.23988146214423672, 0.2310769279766679] ***
*** finished computation of 7 references, err: [Inf, 0.7451768311313152, 0.2621703702393955, 0.23988146214423672, 0.2310769279766679] ***
*** center 1: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 24, 7]]
** centroid: 2, normalized-entropy: 0.7706290693639406, [(2, 24), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 22]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3367034583421384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3367034583421384, 0.19740627220469606] ***
*** starting iteration: 2; err: [Inf, 0.3367034583421384, 0.19740627220469606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3367034583421384, 0.19740627220469606, 0.18862328925084212] ***
*** starting iteration: 3; err: [Inf, 0.3367034583421384, 0.19740627220469606, 0.18862328925084212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3367034583421384, 0.19740627220469606, 0.18862328925084212, 0.18720434620937543] ***
*** finished computation of 7 references, err: [Inf, 0.3367034583421384, 0.19740627220469606, 0.18862328925084212, 0.18720434620937543] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 6, 10]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(2, 6), (3, 10)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 4: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2591587867900843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2591587867900843, 0.19616207191381868] ***
*** starting iteration: 2; err: [Inf, 0.2591587867900843, 0.19616207191381868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2591587867900843, 0.19616207191381868, 0.19093592210722385] ***
*** starting iteration: 3; err: [Inf, 0.2591587867900843, 0.19616207191381868, 0.19093592210722385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2591587867900843, 0.19616207191381868, 0.19093592210722385, 0.18961813078509493] ***
*** finished computation of 7 references, err: [Inf, 0.2591587867900843, 0.19616207191381868, 0.19093592210722385, 0.18961813078509493] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 4, 15]]
** centroid: 4, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8536572223534943] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8536572223534943, 0.5733268817417213] ***
*** starting iteration: 2; err: [Inf, 0.8536572223534943, 0.5733268817417213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8536572223534943, 0.5733268817417213, 0.5726934862183165] ***
*** finished computation of 3 references, err: [Inf, 0.8536572223534943, 0.5733268817417213, 0.5726934862183165] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 30]]
** centroid: 1, normalized-entropy: 0.9992492479956566, [(2, 32), (3, 30)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [18, 2, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 18), (2, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5559108710574299] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5559108710574299, 0.3835532130331747] ***
*** starting iteration: 2; err: [Inf, 0.5559108710574299, 0.3835532130331747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5559108710574299, 0.3835532130331747, 0.3764842149637014] ***
*** starting iteration: 3; err: [Inf, 0.5559108710574299, 0.3835532130331747, 0.3764842149637014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5559108710574299, 0.3835532130331747, 0.3764842149637014, 0.3762135859365712] ***
*** finished computation of 3 references, err: [Inf, 0.5559108710574299, 0.3835532130331747, 0.3764842149637014, 0.3762135859365712] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 28]]
** centroid: 1, normalized-entropy: 0.21639693245126485, [(2, 1), (3, 28)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 9]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8035491906276154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8035491906276154, 0.3690250865828712] ***
*** starting iteration: 2; err: [Inf, 0.8035491906276154, 0.3690250865828712] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8035491906276154, 0.3690250865828712, 0.3690250865828712] ***
*** finished computation of 3 references, err: [Inf, 0.8035491906276154, 0.3690250865828712, 0.3690250865828712] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 9]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5428999836103523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5428999836103523, 0.8723101322805344] ***
*** starting iteration: 2; err: [Inf, 1.5428999836103523, 0.8723101322805344] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5428999836103523, 0.8723101322805344, 0.8584120433818504] ***
*** starting iteration: 3; err: [Inf, 1.5428999836103523, 0.8723101322805344, 0.8584120433818504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5428999836103523, 0.8723101322805344, 0.8584120433818504, 0.8540661500616349] ***
*** starting iteration: 4; err: [Inf, 1.5428999836103523, 0.8723101322805344, 0.8584120433818504, 0.8540661500616349] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5428999836103523, 0.8723101322805344, 0.8584120433818504, 0.8540661500616349, 0.8540661500616349] ***
*** finished computation of 3 references, err: [Inf, 1.5428999836103523, 0.8723101322805344, 0.8584120433818504, 0.8540661500616349, 0.8540661500616349] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 30]]
** centroid: 2, normalized-entropy: 0.9992492479956566, [(2, 32), (3, 30)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [15, 2, 0]]
** centroid: 3, normalized-entropy: 0.5225593745369407, [(1, 15), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 11.024899963270718] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.024899963270718, 1.8983841491857572] ***
*** starting iteration: 2; err: [Inf, 11.024899963270718, 1.8983841491857572] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.024899963270718, 1.8983841491857572, 1.0935599203373174] ***
*** starting iteration: 3; err: [Inf, 11.024899963270718, 1.8983841491857572, 1.0935599203373174] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.024899963270718, 1.8983841491857572, 1.0935599203373174, 1.0657924983823228] ***
*** starting iteration: 4; err: [Inf, 11.024899963270718, 1.8983841491857572, 1.0935599203373174, 1.0657924983823228] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.024899963270718, 1.8983841491857572, 1.0935599203373174, 1.0657924983823228, 1.0575260026946467] ***
*** starting iteration: 5; err: [Inf, 11.024899963270718, 1.8983841491857572, 1.0935599203373174, 1.0657924983823228, 1.0575260026946467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.024899963270718, 1.8983841491857572, 1.0935599203373174, 1.0657924983823228, 1.0575260026946467, 1.0572397726347398] ***
*** finished computation of 3 references, err: [Inf, 11.024899963270718, 1.8983841491857572, 1.0935599203373174, 1.0657924983823228, 1.0575260026946467, 1.0572397726347398] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [22, 2, 0]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(1, 22), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 37]]
** centroid: 2, normalized-entropy: 0.9893755831922303, [(2, 29), (3, 37)]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0769999872084812] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0769999872084812, 0.6640578080608891] ***
*** starting iteration: 2; err: [Inf, 1.0769999872084812, 0.6640578080608891] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0769999872084812, 0.6640578080608891, 0.5914684174084986] ***
*** starting iteration: 3; err: [Inf, 1.0769999872084812, 0.6640578080608891, 0.5914684174084986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0769999872084812, 0.6640578080608891, 0.5914684174084986, 0.5491299721319518] ***
*** starting iteration: 4; err: [Inf, 1.0769999872084812, 0.6640578080608891, 0.5914684174084986, 0.5491299721319518] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0769999872084812, 0.6640578080608891, 0.5914684174084986, 0.5491299721319518, 0.5362647895116166] ***
*** starting iteration: 5; err: [Inf, 1.0769999872084812, 0.6640578080608891, 0.5914684174084986, 0.5491299721319518, 0.5362647895116166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0769999872084812, 0.6640578080608891, 0.5914684174084986, 0.5491299721319518, 0.5362647895116166, 0.5327733709555343] ***
*** starting iteration: 6; err: [Inf, 1.0769999872084812, 0.6640578080608891, 0.5914684174084986, 0.5491299721319518, 0.5362647895116166, 0.5327733709555343] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0769999872084812, 0.6640578080608891, 0.5914684174084986, 0.5491299721319518, 0.5362647895116166, 0.5327733709555343, 0.5304882972815126] ***
*** starting iteration: 7; err: [Inf, 1.0769999872084812, 0.6640578080608891, 0.5914684174084986, 0.5491299721319518, 0.5362647895116166, 0.5327733709555343, 0.5304882972815126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0769999872084812, 0.6640578080608891, 0.5914684174084986, 0.5491299721319518, 0.5362647895116166, 0.5327733709555343, 0.5304882972815126, 0.5304882972815126] ***
*** finished computation of 3 references, err: [Inf, 1.0769999872084812, 0.6640578080608891, 0.5914684174084986, 0.5491299721319518, 0.5362647895116166, 0.5327733709555343, 0.5304882972815126, 0.5304882972815126] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7013999945158247] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7013999945158247, 0.5872175183240549] ***
*** starting iteration: 2; err: [Inf, 1.7013999945158247, 0.5872175183240549] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7013999945158247, 0.5872175183240549, 0.534200106326081] ***
*** starting iteration: 3; err: [Inf, 1.7013999945158247, 0.5872175183240549, 0.534200106326081] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7013999945158247, 0.5872175183240549, 0.534200106326081, 0.521758218357447] ***
*** finished computation of 3 references, err: [Inf, 1.7013999945158247, 0.5872175183240549, 0.534200106326081, 0.521758218357447] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 28]]
** centroid: 1, normalized-entropy: 0.8314743880097292, [(2, 10), (3, 28)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 24, 2]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 24), (3, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.337300016231527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.337300016231527, 1.0684388520642112] ***
*** starting iteration: 2; err: [Inf, 1.337300016231527, 1.0684388520642112] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.337300016231527, 1.0684388520642112, 1.0572397726347398] ***
*** starting iteration: 3; err: [Inf, 1.337300016231527, 1.0684388520642112, 1.0572397726347398] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.337300016231527, 1.0684388520642112, 1.0572397726347398, 1.0572397726347398] ***
*** finished computation of 3 references, err: [Inf, 1.337300016231527, 1.0684388520642112, 1.0572397726347398, 1.0572397726347398] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [22, 2, 0]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(1, 22), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 37]]
** centroid: 2, normalized-entropy: 0.9893755831922303, [(2, 29), (3, 37)]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.5808000128803132] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5808000128803132, 0.9077114218290023] ***
*** starting iteration: 2; err: [Inf, 3.5808000128803132, 0.9077114218290023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5808000128803132, 0.9077114218290023, 0.5801333827522597] ***
*** starting iteration: 3; err: [Inf, 3.5808000128803132, 0.9077114218290023, 0.5801333827522597] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5808000128803132, 0.9077114218290023, 0.5801333827522597, 0.5703415976716977] ***
*** finished computation of 3 references, err: [Inf, 3.5808000128803132, 0.9077114218290023, 0.5801333827522597, 0.5703415976716977] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 9, 32]]
** centroid: 2, normalized-entropy: 0.7592757847892834, [(2, 9), (3, 32)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 1]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(2, 26), (3, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9542989376613582] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9542989376613582, 0.5885435133688438] ***
*** starting iteration: 2; err: [Inf, 0.9542989376613582, 0.5885435133688438] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9542989376613582, 0.5885435133688438, 0.5812406703310353] ***
*** starting iteration: 3; err: [Inf, 0.9542989376613582, 0.5885435133688438, 0.5812406703310353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9542989376613582, 0.5885435133688438, 0.5812406703310353, 0.5738558651522754] ***
*** finished computation of 3 references, err: [Inf, 0.9542989376613582, 0.5885435133688438, 0.5812406703310353, 0.5738558651522754] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 30]]
** centroid: 1, normalized-entropy: 0.9992492479956566, [(2, 32), (3, 30)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [22, 2, 0]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(1, 22), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.358332751864052] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.358332751864052, 0.7384242349318576] ***
*** starting iteration: 2; err: [Inf, 2.358332751864052, 0.7384242349318576] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.358332751864052, 0.7384242349318576, 0.3868443468531403] ***
*** starting iteration: 3; err: [Inf, 2.358332751864052, 0.7384242349318576, 0.3868443468531403] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.358332751864052, 0.7384242349318576, 0.3868443468531403, 0.37607186451569363] ***
*** finished computation of 3 references, err: [Inf, 2.358332751864052, 0.7384242349318576, 0.3868443468531403, 0.37607186451569363] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 26]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 11]]
** centroid: 3, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.718297266989362] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.718297266989362, 1.8369921396979203] ***
*** starting iteration: 2; err: [Inf, 4.718297266989362, 1.8369921396979203] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.718297266989362, 1.8369921396979203, 0.47535550747978966] ***
*** starting iteration: 3; err: [Inf, 4.718297266989362, 1.8369921396979203, 0.47535550747978966] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.718297266989362, 1.8369921396979203, 0.47535550747978966, 0.38632056671840787] ***
*** finished computation of 3 references, err: [Inf, 4.718297266989362, 1.8369921396979203, 0.47535550747978966, 0.38632056671840787] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 35, 11]]
** centroid: 2, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9855000001673399] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9855000001673399, 0.6171249213768385] ***
*** starting iteration: 2; err: [Inf, 0.9855000001673399, 0.6171249213768385] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9855000001673399, 0.6171249213768385, 0.5454464336172066] ***
*** starting iteration: 3; err: [Inf, 0.9855000001673399, 0.6171249213768385, 0.5454464336172066] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9855000001673399, 0.6171249213768385, 0.5454464336172066, 0.5304130206291668] ***
*** starting iteration: 4; err: [Inf, 0.9855000001673399, 0.6171249213768385, 0.5454464336172066, 0.5304130206291668] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9855000001673399, 0.6171249213768385, 0.5454464336172066, 0.5304130206291668, 0.5205377223796092] ***
*** starting iteration: 5; err: [Inf, 0.9855000001673399, 0.6171249213768385, 0.5454464336172066, 0.5304130206291668, 0.5205377223796092] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9855000001673399, 0.6171249213768385, 0.5454464336172066, 0.5304130206291668, 0.5205377223796092, 0.5197181572667954] ***
*** finished computation of 3 references, err: [Inf, 0.9855000001673399, 0.6171249213768385, 0.5454464336172066, 0.5304130206291668, 0.5205377223796092, 0.5197181572667954] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 28]]
** centroid: 1, normalized-entropy: 0.8003922080453356, [(2, 9), (3, 28)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 25, 2]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 25), (3, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3705999998339677] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3705999998339677, 1.1147777800003993] ***
*** starting iteration: 2; err: [Inf, 1.3705999998339677, 1.1147777800003993] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3705999998339677, 1.1147777800003993, 1.0774751899186552] ***
*** starting iteration: 3; err: [Inf, 1.3705999998339677, 1.1147777800003993, 1.0774751899186552] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3705999998339677, 1.1147777800003993, 1.0774751899186552, 1.0677816452279434] ***
*** starting iteration: 4; err: [Inf, 1.3705999998339677, 1.1147777800003993, 1.0774751899186552, 1.0677816452279434] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3705999998339677, 1.1147777800003993, 1.0774751899186552, 1.0677816452279434, 1.0673426677800533] ***
*** finished computation of 3 references, err: [Inf, 1.3705999998339677, 1.1147777800003993, 1.0774751899186552, 1.0677816452279434, 1.0673426677800533] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 37]]
** centroid: 1, normalized-entropy: 0.9893755831922303, [(2, 29), (3, 37)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [16, 2, 0]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(1, 16), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5007999835688943] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5007999835688943, 0.5362647895116166] ***
*** starting iteration: 2; err: [Inf, 1.5007999835688943, 0.5362647895116166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5007999835688943, 0.5362647895116166, 0.5327733709555343] ***
*** starting iteration: 3; err: [Inf, 1.5007999835688943, 0.5362647895116166, 0.5327733709555343] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5007999835688943, 0.5362647895116166, 0.5327733709555343, 0.5304882972815126] ***
*** starting iteration: 4; err: [Inf, 1.5007999835688943, 0.5362647895116166, 0.5327733709555343, 0.5304882972815126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5007999835688943, 0.5362647895116166, 0.5327733709555343, 0.5304882972815126, 0.5304882972815126] ***
*** finished computation of 3 references, err: [Inf, 1.5007999835688943, 0.5362647895116166, 0.5327733709555343, 0.5304882972815126, 0.5304882972815126] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.657200002906757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.657200002906757, 0.34430542650533197] ***
*** starting iteration: 2; err: [Inf, 0.657200002906757, 0.34430542650533197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.657200002906757, 0.34430542650533197, 0.30794267730778185] ***
*** starting iteration: 3; err: [Inf, 0.657200002906757, 0.34430542650533197, 0.30794267730778185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.657200002906757, 0.34430542650533197, 0.30794267730778185, 0.302498034631878] ***
*** finished computation of 7 references, err: [Inf, 0.657200002906757, 0.34430542650533197, 0.30794267730778185, 0.302498034631878] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 21, 10]]
** centroid: 2, normalized-entropy: 0.9071657675730821, [(2, 21), (3, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8541000027999377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8541000027999377, 0.3418138074529116] ***
*** starting iteration: 2; err: [Inf, 0.8541000027999377, 0.3418138074529116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8541000027999377, 0.3418138074529116, 0.3324679427145172] ***
*** starting iteration: 3; err: [Inf, 0.8541000027999377, 0.3418138074529116, 0.3324679427145172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8541000027999377, 0.3418138074529116, 0.3324679427145172, 0.329881889041601] ***
*** finished computation of 7 references, err: [Inf, 0.8541000027999377, 0.3418138074529116, 0.3324679427145172, 0.329881889041601] ***
*** center 1: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 8, 27]]
** centroid: 2, normalized-entropy: 0.775512658133148, [(2, 8), (3, 27)]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.4742999941643706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.4742999941643706, 0.3490678445885008] ***
*** starting iteration: 2; err: [Inf, 2.4742999941643706, 0.3490678445885008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.4742999941643706, 0.3490678445885008, 0.29380969223041364] ***
*** starting iteration: 3; err: [Inf, 2.4742999941643706, 0.3490678445885008, 0.29380969223041364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.4742999941643706, 0.3490678445885008, 0.29380969223041364, 0.28259066646687003] ***
*** finished computation of 7 references, err: [Inf, 2.4742999941643706, 0.3490678445885008, 0.29380969223041364, 0.28259066646687003] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 10]]
** centroid: 3, normalized-entropy: 0.9509560484549724, [(2, 17), (3, 10)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 7: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7179427429640676] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7179427429640676, 0.3705498593072123] ***
*** finished computation of 3 references, err: [Inf, 0.7179427429640676, 0.3705498593072123] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 29]]
** centroid: 1, normalized-entropy: 0.9103480624345157, [(2, 14), (3, 29)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.686080309329565] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.686080309329565, 0.41466507685976484] ***
*** finished computation of 3 references, err: [Inf, 0.686080309329565, 0.41466507685976484] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 36]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 9), (3, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6666917059694535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6666917059694535, 0.40869967864056567] ***
*** finished computation of 3 references, err: [Inf, 0.6666917059694535, 0.40869967864056567] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 16]]
** centroid: 3, normalized-entropy: 0.8974271930876951, [(2, 35), (3, 16)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3683324943014851] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3683324943014851, 0.21386763571471612] ***
*** finished computation of 7 references, err: [Inf, 0.3683324943014851, 0.21386763571471612] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 21]]
** centroid: 1, normalized-entropy: 0.634309554640566, [(2, 4), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 21, 5]]
** centroid: 5, normalized-entropy: 0.7062740891876008, [(2, 21), (3, 5)]
*** center 6: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5564000061844874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5564000061844874, 0.27415122243284085] ***
*** starting iteration: 2; err: [Inf, 0.5564000061844874, 0.27415122243284085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5564000061844874, 0.27415122243284085, 0.2600540227897396] ***
*** starting iteration: 3; err: [Inf, 0.5564000061844874, 0.27415122243284085, 0.2600540227897396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5564000061844874, 0.27415122243284085, 0.2600540227897396, 0.2552354438313088] ***
*** starting iteration: 4; err: [Inf, 0.5564000061844874, 0.27415122243284085, 0.2600540227897396, 0.2552354438313088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5564000061844874, 0.27415122243284085, 0.2600540227897396, 0.2552354438313088, 0.2521998016552379] ***
*** starting iteration: 5; err: [Inf, 0.5564000061844874, 0.27415122243284085, 0.2600540227897396, 0.2552354438313088, 0.2521998016552379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5564000061844874, 0.27415122243284085, 0.2600540227897396, 0.2552354438313088, 0.2521998016552379, 0.25084111320415503] ***
*** starting iteration: 6; err: [Inf, 0.5564000061844874, 0.27415122243284085, 0.2600540227897396, 0.2552354438313088, 0.2521998016552379, 0.25084111320415503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5564000061844874, 0.27415122243284085, 0.2600540227897396, 0.2552354438313088, 0.2521998016552379, 0.25084111320415503, 0.25084111320415503] ***
*** finished computation of 7 references, err: [Inf, 0.5564000061844874, 0.27415122243284085, 0.2600540227897396, 0.2552354438313088, 0.2521998016552379, 0.25084111320415503, 0.25084111320415503] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 6]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 2]]
** centroid: 4, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4979000037206869] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4979000037206869, 0.28761233046914425] ***
*** starting iteration: 2; err: [Inf, 0.4979000037206869, 0.28761233046914425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4979000037206869, 0.28761233046914425, 0.27028700834466646] ***
*** starting iteration: 3; err: [Inf, 0.4979000037206869, 0.28761233046914425, 0.27028700834466646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4979000037206869, 0.28761233046914425, 0.27028700834466646, 0.26736451384939486] ***
*** starting iteration: 4; err: [Inf, 0.4979000037206869, 0.28761233046914425, 0.27028700834466646, 0.26736451384939486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4979000037206869, 0.28761233046914425, 0.27028700834466646, 0.26736451384939486, 0.26736451384939486] ***
*** finished computation of 7 references, err: [Inf, 0.4979000037206869, 0.28761233046914425, 0.27028700834466646, 0.26736451384939486, 0.26736451384939486] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 12, 9]]
** centroid: 5, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5215000004766095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5215000004766095, 0.25523468931551735] ***
*** starting iteration: 2; err: [Inf, 0.5215000004766095, 0.25523468931551735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5215000004766095, 0.25523468931551735, 0.24233539627432094] ***
*** starting iteration: 3; err: [Inf, 0.5215000004766095, 0.25523468931551735, 0.24233539627432094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5215000004766095, 0.25523468931551735, 0.24233539627432094, 0.23574605528226214] ***
*** starting iteration: 4; err: [Inf, 0.5215000004766095, 0.25523468931551735, 0.24233539627432094, 0.23574605528226214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5215000004766095, 0.25523468931551735, 0.24233539627432094, 0.23574605528226214, 0.2344264467023175] ***
*** starting iteration: 5; err: [Inf, 0.5215000004766095, 0.25523468931551735, 0.24233539627432094, 0.23574605528226214, 0.2344264467023175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5215000004766095, 0.25523468931551735, 0.24233539627432094, 0.23574605528226214, 0.2344264467023175, 0.22966403274909866] ***
*** starting iteration: 6; err: [Inf, 0.5215000004766095, 0.25523468931551735, 0.24233539627432094, 0.23574605528226214, 0.2344264467023175, 0.22966403274909866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5215000004766095, 0.25523468931551735, 0.24233539627432094, 0.23574605528226214, 0.2344264467023175, 0.22966403274909866, 0.22811120398249782] ***
*** starting iteration: 7; err: [Inf, 0.5215000004766095, 0.25523468931551735, 0.24233539627432094, 0.23574605528226214, 0.2344264467023175, 0.22966403274909866, 0.22811120398249782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5215000004766095, 0.25523468931551735, 0.24233539627432094, 0.23574605528226214, 0.2344264467023175, 0.22966403274909866, 0.22811120398249782, 0.22772476212846002] ***
*** finished computation of 7 references, err: [Inf, 0.5215000004766095, 0.25523468931551735, 0.24233539627432094, 0.23574605528226214, 0.2344264467023175, 0.22966403274909866, 0.22811120398249782, 0.22772476212846002] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 5]]
** centroid: 3, normalized-entropy: 0.8960382325345574, [(2, 11), (3, 5)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 5]]
** centroid: 6, normalized-entropy: 0.8960382325345574, [(2, 11), (3, 5)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47320000500851295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47320000500851295, 0.27415122243284085] ***
*** finished computation of 7 references, err: [Inf, 0.47320000500851295, 0.27415122243284085] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 3]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 2), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 4]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49610000562304235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49610000562304235, 0.25746434550084174] ***
*** finished computation of 7 references, err: [Inf, 0.49610000562304235, 0.25746434550084174] ***
*** center 1: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 10, 2]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 12, 8]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5530000008115684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5530000008115684, 0.25670352955452624] ***
*** finished computation of 7 references, err: [Inf, 0.5530000008115684, 0.25670352955452624] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 5]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(2, 17), (3, 5)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 10, 6]]
** centroid: 5, normalized-entropy: 0.954434002924965, [(2, 10), (3, 6)]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5422000053536336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5422000053536336, 0.27415122243284085] ***
*** finished computation of 7 references, err: [Inf, 0.5422000053536336, 0.27415122243284085] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 3]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 2), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 4]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5190000019028698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5190000019028698, 0.25270379743633375] ***
*** finished computation of 7 references, err: [Inf, 0.5190000019028698, 0.25270379743633375] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 9]]
** centroid: 4, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5396000089347376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5396000089347376, 0.2966961816370889] ***
*** finished computation of 7 references, err: [Inf, 0.5396000089347376, 0.2966961816370889] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 24]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 9), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 18, 2]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(2, 18), (3, 2)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.98, 0.98, 0.96, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.98
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.9724995877032376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9724995877032376, 0.3183374084514467] ***
*** starting iteration: 2; err: [Inf, 0.9724995877032376, 0.3183374084514467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9724995877032376, 0.3183374084514467, 0.2772179084865476] ***
*** starting iteration: 3; err: [Inf, 0.9724995877032376, 0.3183374084514467, 0.2772179084865476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9724995877032376, 0.3183374084514467, 0.2772179084865476, 0.264980034636652] ***
*** finished computation of 7 references, err: [Inf, 0.9724995877032376, 0.3183374084514467, 0.2772179084865476, 0.264980034636652] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 6, 27]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 6), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 25, 3]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 25), (3, 3)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41348925233559214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41348925233559214, 0.2705295255657137] ***
*** starting iteration: 2; err: [Inf, 0.41348925233559214, 0.2705295255657137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41348925233559214, 0.2705295255657137, 0.23935203428080928] ***
*** starting iteration: 3; err: [Inf, 0.41348925233559214, 0.2705295255657137, 0.23935203428080928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41348925233559214, 0.2705295255657137, 0.23935203428080928, 0.231324214758076] ***
*** finished computation of 7 references, err: [Inf, 0.41348925233559214, 0.2705295255657137, 0.23935203428080928, 0.231324214758076] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 13]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38852182169388455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38852182169388455, 0.2340283855035748] ***
*** starting iteration: 2; err: [Inf, 0.38852182169388455, 0.2340283855035748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38852182169388455, 0.2340283855035748, 0.22436768525338294] ***
*** starting iteration: 3; err: [Inf, 0.38852182169388455, 0.2340283855035748, 0.22436768525338294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38852182169388455, 0.2340283855035748, 0.22436768525338294, 0.21904668905853986] ***
*** finished computation of 7 references, err: [Inf, 0.38852182169388455, 0.2340283855035748, 0.22436768525338294, 0.21904668905853986] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 25]]
** centroid: 1, normalized-entropy: 0.9090221560878149, [(2, 12), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.98, 0.96, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.98
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.3782281337809832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3782281337809832, 0.19484137812060293] ***
*** starting iteration: 2; err: [Inf, 0.3782281337809832, 0.19484137812060293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3782281337809832, 0.19484137812060293, 0.18491941233210776] ***
*** starting iteration: 3; err: [Inf, 0.3782281337809832, 0.19484137812060293, 0.18491941233210776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3782281337809832, 0.19484137812060293, 0.18491941233210776, 0.17938645629834857] ***
*** finished computation of 7 references, err: [Inf, 0.3782281337809832, 0.19484137812060293, 0.18491941233210776, 0.17938645629834857] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 9]]
** centroid: 3, normalized-entropy: 0.9980008838722993, [(2, 10), (3, 9)]
*** center 4: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.1488882624569388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.1488882624569388, 0.4995224878234147] ***
*** starting iteration: 2; err: [Inf, 2.1488882624569388, 0.4995224878234147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.1488882624569388, 0.4995224878234147, 0.23371400456999417] ***
*** starting iteration: 3; err: [Inf, 2.1488882624569388, 0.4995224878234147, 0.23371400456999417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.1488882624569388, 0.4995224878234147, 0.23371400456999417, 0.19743049192212397] ***
*** finished computation of 7 references, err: [Inf, 2.1488882624569388, 0.4995224878234147, 0.23371400456999417, 0.19743049192212397] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 5, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 6]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 6, 5]]
** centroid: 7, normalized-entropy: 0.9940302114769566, [(2, 6), (3, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3730283956547835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3730283956547835, 0.2248012008964179] ***
*** starting iteration: 2; err: [Inf, 0.3730283956547835, 0.2248012008964179] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3730283956547835, 0.2248012008964179, 0.2129290207374911] ***
*** starting iteration: 3; err: [Inf, 0.3730283956547835, 0.2248012008964179, 0.2129290207374911] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3730283956547835, 0.2248012008964179, 0.2129290207374911, 0.20784416806043146] ***
*** finished computation of 7 references, err: [Inf, 0.3730283956547835, 0.2248012008964179, 0.2129290207374911, 0.20784416806043146] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 13]]
** centroid: 1, normalized-entropy: 0.9871377743721862, [(2, 17), (3, 13)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3800000010733949] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3800000010733949, 0.28615674091694293] ***
*** starting iteration: 2; err: [Inf, 0.3800000010733949, 0.28615674091694293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3800000010733949, 0.28615674091694293, 0.2561050752823212] ***
*** starting iteration: 3; err: [Inf, 0.3800000010733949, 0.28615674091694293, 0.2561050752823212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3800000010733949, 0.28615674091694293, 0.2561050752823212, 0.24694940141643376] ***
*** finished computation of 7 references, err: [Inf, 0.3800000010733949, 0.28615674091694293, 0.2561050752823212, 0.24694940141643376] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 8]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 4]]
** centroid: 4, normalized-entropy: 0.7024665512903904, [(2, 17), (3, 4)]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3517000033818516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3517000033818516, 0.25135017464472453] ***
*** starting iteration: 2; err: [Inf, 0.3517000033818516, 0.25135017464472453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3517000033818516, 0.25135017464472453, 0.24085548592829426] ***
*** starting iteration: 3; err: [Inf, 0.3517000033818516, 0.25135017464472453, 0.24085548592829426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3517000033818516, 0.25135017464472453, 0.24085548592829426, 0.24044901149623546] ***
*** finished computation of 7 references, err: [Inf, 0.3517000033818516, 0.25135017464472453, 0.24085548592829426, 0.24044901149623546] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 5]]
** centroid: 2, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5022000013208602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5022000013208602, 0.3426027514366008] ***
*** starting iteration: 2; err: [Inf, 0.5022000013208602, 0.3426027514366008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5022000013208602, 0.3426027514366008, 0.2959922661537528] ***
*** starting iteration: 3; err: [Inf, 0.5022000013208602, 0.3426027514366008, 0.2959922661537528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5022000013208602, 0.3426027514366008, 0.2959922661537528, 0.24211084571524089] ***
*** finished computation of 7 references, err: [Inf, 0.5022000013208602, 0.3426027514366008, 0.2959922661537528, 0.24211084571524089] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 11]]
** centroid: 6, normalized-entropy: 0.4138168503036336, [(2, 1), (3, 11)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.98, 0.9666666666666667, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.98
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.3862863758133625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3862863758133625, 0.19364267901277454] ***
*** finished computation of 7 references, err: [Inf, 0.3862863758133625, 0.19364267901277454] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 3]]
** centroid: 3, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 11, 3]]
** centroid: 4, normalized-entropy: 0.7495952572594798, [(2, 11), (3, 3)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5307683046833509] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5307683046833509, 0.22068182279573584] ***
*** finished computation of 7 references, err: [Inf, 0.5307683046833509, 0.22068182279573584] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 3]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(2, 14), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 7, 24]]
** centroid: 4, normalized-entropy: 0.7706290693639406, [(2, 7), (3, 24)]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3683324943014851] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3683324943014851, 0.21386763571471612] ***
*** finished computation of 7 references, err: [Inf, 0.3683324943014851, 0.21386763571471612] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 21]]
** centroid: 1, normalized-entropy: 0.634309554640566, [(2, 4), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 21, 5]]
** centroid: 5, normalized-entropy: 0.7062740891876008, [(2, 21), (3, 5)]
*** center 6: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.98, 0.98, 0.9666666666666667, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.98
finished with 21
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.3859785374793907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3859785374793907, 0.16455757286226175] ***
*** finished computation of 7 references, err: [Inf, 0.3859785374793907, 0.16455757286226175] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 7]]
** centroid: 6, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4848529745045846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4848529745045846, 0.24685724615367455] ***
*** finished computation of 7 references, err: [Inf, 0.4848529745045846, 0.24685724615367455] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 23]]
** centroid: 1, normalized-entropy: 0.943601631299382, [(2, 13), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39357689577376687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39357689577376687, 0.1908756132086841] ***
*** finished computation of 7 references, err: [Inf, 0.39357689577376687, 0.1908756132086841] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 5, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 5]]
** centroid: 7, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4925000036862133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4925000036862133, 0.25195255265690186] ***
*** finished computation of 7 references, err: [Inf, 0.4925000036862133, 0.25195255265690186] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 10]]
** centroid: 5, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6000000050242429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6000000050242429, 0.24586972817669392] ***
*** finished computation of 7 references, err: [Inf, 0.6000000050242429, 0.24586972817669392] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 10]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 5, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5942999999615246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5942999999615246, 0.29764420906670214] ***
*** finished computation of 7 references, err: [Inf, 0.5942999999615246, 0.29764420906670214] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 24, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 16]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 7, 11]]
** centroid: 6, normalized-entropy: 0.9640787648082293, [(2, 7), (3, 11)]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.98, 0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.98
finished with 21
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.98, 0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.98
finished with 21
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.98, 0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.98
finished with 21
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.98, 0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666666, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.98
finished with 21
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.0166666666666675, 3.455555555555557, 1.4749999999999999, 0.23888888888888887], [7.550000000000001, 3.35, 6.375, 2.275], [5.633333333333333, 3.0666666666666664, 4.6000000000000005, 1.5999999999999999], [5.433333333333333, 2.6666666666666665, 4.833333333333333, 1.8666666666666665], [6.50909090909091, 2.9545454545454546, 4.718181818181819, 1.4636363636363638], [6.2, 2.766666666666667, 4.966666666666667, 1.7333333333333334], [5.175, 2.425, 3.35, 1.1], [6.482608695652174, 2.930434782608695, 5.504347826086955, 1.9565217391304344], [5.899999999999999, 2.65625, 4.26875, 1.28125]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 2, 3, 2], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.091304347826088, 3.617391304347827, 1.5130434782608695, 0.30434782608695654], [7.6, 2.8, 6.575000000000001, 2.0749999999999997], [5.864285714285713, 2.792857142857143, 4.292857142857144, 1.3000000000000003], [5.533333333333334, 2.4, 4.833333333333333, 1.7333333333333334], [6.471428571428572, 3.128571428571429, 4.642857142857144, 1.5571428571428572], [6.366666666666667, 3.0124999999999997, 5.358333333333332, 2.05], [4.699999999999999, 2.966666666666667, 1.4333333333333333, 0.18888888888888888], [5.4750000000000005, 2.4125, 3.6, 1.0625], [7.5, 3.4000000000000004, 6.15, 2.15]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.65, 3.0, 4.925, 1.5499999999999998], [6.466666666666667, 2.985714285714286, 5.404761904761904, 2.1095238095238096], [5.0354838709677425, 3.3935483870967746, 1.4290322580645163, 0.21935483870967748], [5.3625, 2.5, 3.6375, 1.1375], [7.800000000000001, 3.8, 6.550000000000001, 2.1], [6.080952380952381, 2.8714285714285714, 4.447619047619048, 1.3904761904761906], [5.92, 2.66, 4.92, 1.8199999999999998], [4.5, 2.3, 1.3, 0.3], [7.525, 2.775, 6.500000000000001, 1.9999999999999998]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3, 2, 3, 1, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[74, 1, 17, 1, 1, 30, 23, 21, 24, 17, 8, 7, 26, 26, 24, 42, 25, 22, 19, 3, 24, 28, 32, 35, 25, 26, 25, 23, 4, 1, 39, 34, 28, 41, 34, 26, 30, 29, 44, 19, 25, 17, 32, 26, 38, 30, 17, 24, 19, 25, 18, 27, 12, 13, 46, 36, 35, 34, 26, 51, 39, 20, 29, 42, 1, 20, 39, 12, 36, 34, 24, 25, 34, 35, 30, 38, 34, 39, 31, 34, 19, 39, 14, 22, 21, 40, 37, 32, 40, 44, 36, 42, 52, 27, 28, 20, 24, 36, 22, 28, 37, 45, 30, 39, 26, 33, 33, 1, 31, 27, 40, 49, 57, 51, 24, 62, 36, 31, 36, 19, 42, 39, 53, 31, 33, 26, 30, 25, 34, 42, 67, 15, 39, 24, 18, 44, 52, 48, 23, 37, 36, 24, 37, 23, 33, 33, 31, 26, 19, 32, 48, 26, 29, 66, 44, 31, 31, 26, 36, 20, 28, 19, 38, 37, 18, 46, 52, 50, 36, 59, 31, 19, 48, 61, 49, 60, 32, 44, 41, 29, 25, 24, 42, 33, 53, 31, 30, 40, 60, 41, 50, 25, 29, 30, 21, 37, 36, 16, 46, 31, 43, 30, 39, 43, 54, 32, 38, 37, 65, 52, 36, 72, 45, 40, 23, 16, 26, 28, 4, 13, 37, 25, 36, 30, 40, 21, 44, 55, 28, 17, 36, 44, 34, 37, 37, 40, 44, 21, 21, 24, 27, 49, 38, 33, 40, 28, 24, 41, 44, 34, 53, 65, 49, 41, 24, 32, 32, 39, 42, 58, 22, 42, 56, 64, 39, 25, 35, 43, 54, 27, 44, 52, 49, 33, 36, 28, 30, 24, 44, 45, 40, 46, 31, 40, 50, 17, 35, 37, 23, 59, 13, 40, 32, 39, 32, 18, 57, 44, 19, 31]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5990000000000001, speedup = 0.3751252109409545, eval_ratio = 0.041652999999999996)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3602430555555556,"recall":0.35677083333333337,"f1":null,"seconds":6.827712059020996e-5,"exhaustive_search_seconds":0.00036643631756305695,"evaluations":337.5234375,"distances_sum":1821.0969519817136}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5190972222222223,"recall":0.5190972222222223,"f1":null,"seconds":0.00010053813457489014,"exhaustive_search_seconds":0.00036643631756305695,"evaluations":374.125,"distances_sum":1746.9635623744975}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6449652777777773,"recall":0.6449652777777773,"f1":0.6449652777777773,"seconds":0.00013136118650436401,"exhaustive_search_seconds":0.00036643631756305695,"evaluations":411.53125,"distances_sum":1693.0438652068926}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7256944444444441,"recall":0.7256944444444441,"f1":0.7256944444444441,"seconds":0.00016156770288944244,"exhaustive_search_seconds":0.00036643631756305695,"evaluations":448.0703125,"distances_sum":1664.7693531553098}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7786458333333327,"recall":0.7786458333333327,"f1":0.7786458333333327,"seconds":0.00019258633255958557,"exhaustive_search_seconds":0.00036643631756305695,"evaluations":484.484375,"distances_sum":1648.3891866137494}
KCenters.DeloneInvIndex> reached performance {"precision":0.8081597222222213,"recall":0.8081597222222213,"f1":0.8081597222222213,"seconds":0.00022149085998535156,"exhaustive_search_seconds":0.00036643631756305695,"evaluations":520.328125,"distances_sum":1640.8899842431713}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8, speedup = 1.7440031046454307, eval_ratio = 0.053267999999999996)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
