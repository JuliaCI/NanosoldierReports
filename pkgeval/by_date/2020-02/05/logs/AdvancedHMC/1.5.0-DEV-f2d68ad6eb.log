Julia Version 1.5.0-DEV.234
Commit f2d68ad6eb (2020-02-05 16:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ProgressMeter ────── v1.2.0
  Installed SortingAlgorithms ── v0.3.1
  Installed Rmath ────────────── v0.6.0
  Installed AdvancedHMC ──────── v0.2.20
  Installed SpecialFunctions ─── v0.9.0
  Installed MacroTools ───────── v0.5.4
  Installed LazyArrays ───────── v0.14.11
  Installed BinaryProvider ───── v0.5.8
  Installed InplaceOps ───────── v0.3.0
  Installed Missings ─────────── v0.4.3
  Installed OpenSpecFun_jll ──── v0.5.3+1
  Installed Requires ─────────── v1.0.1
  Installed ArrayLayouts ─────── v0.1.5
  Installed OrderedCollections ─ v1.1.0
  Installed Parameters ───────── v0.12.0
  Installed StaticArrays ─────── v0.12.1
  Installed DataAPI ──────────── v1.1.0
  Installed ArgCheck ─────────── v1.0.1
  Installed StatsFuns ────────── v0.9.3
  Installed FillArrays ───────── v0.8.4
  Installed DataStructures ───── v0.17.9
  Installed StatsBase ────────── v0.32.0
#=#=#                                                                         #####                                                                      7.0%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         ##O#- #                                                                                                                                                  0.5%##                                                                         3.4%#####                                                                      7.8%#########                                                                 13.0%##############                                                            20.3%####################                                                      29.0%############################                                              39.8%######################################                                    54.0%########################################                                  55.9%######################################################                    75.3%######################################################################## 100.0%
#=#=#                                                                         ###########################################                               59.8%######################################################################## 100.0%
#=#=#                                                                         ###############                                                           21.2%###########################################                               59.9%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       #######################################                                   54.7%######################################################################## 100.0%
Status `/tmp/jl_S4twkB/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.1.0
  [79e6a3ab] Adapt v1.0.0
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [13072b0f] AxisAlgorithms v1.0.0
  [39de3d68] AxisArrays v0.4.1
  [6e4b80f9] BenchmarkTools v0.4.3
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.13.3
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.2.0
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.1.1
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.8
  [8197267c] IntervalSets v0.3.2
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5ab0869b] KernelDensity v0.5.1
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.1
  [c7f686f2] MCMCChains v1.0.2
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v1.0.2
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [429524aa] Optim v0.20.1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.3
  [85a6dd25] PositiveFactorizations v0.2.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [c84ed2f1] Ratios v0.3.1
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v2.0.5
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [992d4aef] Showoff v0.3.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.9
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [efce3f68] WoodburyMatrices v0.5.0
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.125383178
│   t_steps = 0.00812598
└   t_step / t_steps = 15.429914668753801
Sampling  0%|                               |  ETA: 5:53:28[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.00989039314645706
  log_density:                   -10.705648294723316
  hamiltonian_energy:            14.057425695191021
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  4.616191382220812
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▉                            |  ETA: 0:00:29[K
  iterations:                    1109
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9006221126263974
  log_density:                   -10.523032396861796
  hamiltonian_energy:            17.085523329327025
  hamiltonian_energy_error:      -0.13350802854429134
  max_hamiltonian_energy_error:  0.3717270620113915
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.587020528573825
  nom_step_size:                 0.587020528573825
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1233340677304826, 1.0652 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:24[K
  iterations:                    1357
  n_steps:                       27
  is_accept:                     true
  acceptance_rate:               0.947684951785132
  log_density:                   -16.144764747200078
  hamiltonian_energy:            21.13311823048746
  hamiltonian_energy_error:      0.10844655157172411
  max_hamiltonian_energy_error:  0.21154416625047645
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.9239905371893418
  nom_step_size:                 0.9239905371893418
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1233340677304826, 1.0652 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:21[K
  iterations:                    1562
  n_steps:                       87
  is_accept:                     true
  acceptance_rate:               0.9883468169537474
  log_density:                   -13.730819438315137
  hamiltonian_energy:            20.521427543446748
  hamiltonian_energy_error:      -0.5198013178334762
  max_hamiltonian_energy_error:  -0.8004070245858301
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.7766731317308255
  nom_step_size:                 0.7766731317308255
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1233340677304826, 1.0652 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:18[K
  iterations:                    1803
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.824802366553001
  hamiltonian_energy:            21.318539869820082
  hamiltonian_energy_error:      -0.591265359009487
  max_hamiltonian_energy_error:  -0.8391328199396995
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6482777818313077
  nom_step_size:                 0.6482777818313077
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1233340677304826, 1.0652 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████▏                         |  ETA: 0:00:17[K
  iterations:                    1972
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9692698067671157
  log_density:                   -13.262117098072775
  hamiltonian_energy:            20.07075241462452
  hamiltonian_energy_error:      -0.04414530284223517
  max_hamiltonian_energy_error:  -0.12123589316348671
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.3536385468316394
  nom_step_size:                 0.3536385468316394
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|██████                         |  ETA: 0:00:14[K
  iterations:                    2312
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.769264085104451
  log_density:                   -13.645082498277556
  hamiltonian_energy:            17.01186376342601
  hamiltonian_energy_error:      0.2752705681500949
  max_hamiltonian_energy_error:  0.46774239241331017
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▊                        |  ETA: 0:00:13[K
  iterations:                    2621
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5725897688746865
  log_density:                   -20.369332092440263
  hamiltonian_energy:            21.97316024211425
  hamiltonian_energy_error:      1.1676036594980062
  max_hamiltonian_energy_error:  1.1676036594980062
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▋                       |  ETA: 0:00:11[K
  iterations:                    2973
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.821143901881463
  log_density:                   -13.243814216973794
  hamiltonian_energy:            17.314998012099885
  hamiltonian_energy_error:      0.15073043164964517
  max_hamiltonian_energy_error:  0.47819961248772813
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▋                      |  ETA: 0:00:10[K
  iterations:                    3330
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9055657537544085
  log_density:                   -13.959250619884843
  hamiltonian_energy:            20.69458184530945
  hamiltonian_energy_error:      -0.11051454227955304
  max_hamiltonian_energy_error:  0.2843001713282334
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|█████████▉                     |  ETA: 0:00:08[K
  iterations:                    3821
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8683194386070655
  log_density:                   -15.167852202513373
  hamiltonian_energy:            20.178559193352015
  hamiltonian_energy_error:      0.1602374283888004
  max_hamiltonian_energy_error:  0.263009967559654
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▊                    |  ETA: 0:00:07[K
  iterations:                    4185
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9931911716829667
  log_density:                   -13.501510510977466
  hamiltonian_energy:            16.42800265955105
  hamiltonian_energy_error:      -0.032079831726658625
  max_hamiltonian_energy_error:  -0.2429258267667258
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▊                   |  ETA: 0:00:07[K
  iterations:                    4529
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6679480426199851
  log_density:                   -14.731179365720475
  hamiltonian_energy:            21.128429776189563
  hamiltonian_energy_error:      0.28847897831895963
  max_hamiltonian_energy_error:  0.8476375231011417
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████                  |  ETA: 0:00:06[K
  iterations:                    5031
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8875600251130887
  log_density:                   -11.147590347752654
  hamiltonian_energy:            14.43069012602269
  hamiltonian_energy_error:      -0.007607648291919844
  max_hamiltonian_energy_error:  0.23013367009396823
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|██████████████                 |  ETA: 0:00:05[K
  iterations:                    5407
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9621381494175643
  log_density:                   -11.646072082787331
  hamiltonian_energy:            13.590948270330516
  hamiltonian_energy_error:      0.011909282110750041
  max_hamiltonian_energy_error:  -0.16355059075686462
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▊                |  ETA: 0:00:05[K
  iterations:                    5713
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8155886932495046
  log_density:                   -11.734742254175798
  hamiltonian_energy:            17.00543807898995
  hamiltonian_energy_error:      -0.017649479086951914
  max_hamiltonian_energy_error:  0.4969713003548577
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▊               |  ETA: 0:00:04[K
  iterations:                    6079
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9773752999203642
  log_density:                   -11.657001491839846
  hamiltonian_energy:            15.323335308903525
  hamiltonian_energy_error:      -0.16256168357486267
  max_hamiltonian_energy_error:  -0.21233290429236362
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████              |  ETA: 0:00:04[K
  iterations:                    6590
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.264967669764472
  hamiltonian_energy:            21.59260833988165
  hamiltonian_energy_error:      -0.20840689807291568
  max_hamiltonian_energy_error:  -0.22525669086654432
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|██████████████████             |  ETA: 0:00:03[K
  iterations:                    6952
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9975108045246481
  log_density:                   -14.798696420770906
  hamiltonian_energy:            22.77043335365115
  hamiltonian_energy_error:      -0.42652646297067776
  max_hamiltonian_energy_error:  -0.42652646297067776
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|███████████████████            |  ETA: 0:00:03[K
  iterations:                    7345
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9611076242379973
  log_density:                   -16.963180361916272
  hamiltonian_energy:            22.649373888990542
  hamiltonian_energy_error:      0.04272360892500515
  max_hamiltonian_energy_error:  -0.2196787506028386
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████▏          |  ETA: 0:00:03[K
  iterations:                    7796
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9925776682754982
  log_density:                   -17.199352987963934
  hamiltonian_energy:            23.782522048819782
  hamiltonian_energy_error:      -0.002605306738953317
  max_hamiltonian_energy_error:  -0.05755044253100294
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▉          |  ETA: 0:00:02[K
  iterations:                    8082
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7720648367626397
  log_density:                   -12.260005872942457
  hamiltonian_energy:            18.15561469717992
  hamiltonian_energy_error:      -0.07065591267067717
  max_hamiltonian_energy_error:  0.6063717156995629
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████         |  ETA: 0:00:02[K
  iterations:                    8497
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6605531637767089
  log_density:                   -19.251087386161288
  hamiltonian_energy:            23.274844425404197
  hamiltonian_energy_error:      0.79089235447411
  max_hamiltonian_energy_error:  0.9569387655155452
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▊        |  ETA: 0:00:02[K
  iterations:                    8793
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -10.487274071952442
  hamiltonian_energy:            15.48613087309089
  hamiltonian_energy_error:      -0.5743270491236601
  max_hamiltonian_energy_error:  -0.5743270491236601
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|███████████████████████▊       |  ETA: 0:00:02[K
  iterations:                    9188
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7024223647038774
  log_density:                   -16.60445471167577
  hamiltonian_energy:            19.189809419596184
  hamiltonian_energy_error:      0.639186059694687
  max_hamiltonian_energy_error:  0.6705542368537358
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▋      |  ETA: 0:00:01[K
  iterations:                    9530
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9614274517722576
  log_density:                   -15.024027461479898
  hamiltonian_energy:            19.732603105398624
  hamiltonian_energy_error:      -0.13287747527760274
  max_hamiltonian_energy_error:  -0.5086395985552876
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▋     |  ETA: 0:00:01[K
  iterations:                    9922
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9006017866309958
  log_density:                   -16.193276126218173
  hamiltonian_energy:            17.805226089023638
  hamiltonian_energy_error:      0.3379067705127561
  max_hamiltonian_energy_error:  0.3379067705127561
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▍    |  ETA: 0:00:01[K
  iterations:                    10228
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9970431371048546
  log_density:                   -14.22097476194379
  hamiltonian_energy:            19.664959771581383
  hamiltonian_energy_error:      -0.32435291399074373
  max_hamiltonian_energy_error:  -0.47732983482668345
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▌   |  ETA: 0:00:01[K
  iterations:                    10621
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9267009127750205
  log_density:                   -11.319934615404334
  hamiltonian_energy:            13.270027987253794
  hamiltonian_energy_error:      0.06422502478818082
  max_hamiltonian_energy_error:  0.16524811902255543
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▎  |  ETA: 0:00:01[K
  iterations:                    10930
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8558459339734464
  log_density:                   -14.723388371793725
  hamiltonian_energy:            22.85833231842967
  hamiltonian_energy_error:      -0.15324762259301394
  max_hamiltonian_energy_error:  0.4554602955974225
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▎ |  ETA: 0:00:00[K
  iterations:                    11323
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8666061815057768
  log_density:                   -11.266736385580701
  hamiltonian_energy:            15.188325795054105
  hamiltonian_energy_error:      -0.0005667508359419315
  max_hamiltonian_energy_error:  0.29234217975528587
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████ |  ETA: 0:00:00[K
  iterations:                    11617
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8935848298720697
  log_density:                   -13.094546093953479
  hamiltonian_energy:            20.01826793428366
  hamiltonian_energy_error:      -0.16583777380935416
  max_hamiltonian_energy_error:  0.3075682412542662
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8732064633335266
  log_density:                   -16.103267619583058
  hamiltonian_energy:            22.22356480004356
  hamiltonian_energy_error:      0.07061312068709924
  max_hamiltonian_energy_error:  0.2961152114814851
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7144256386912125
  nom_step_size:                 0.7144256386912125
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9330305437763751, 1.0605 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.094304632 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9330305437763751, 1.0605 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.714), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0332404443962562
└   average_acceptance_rate = 0.8684025169065557
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.992620026 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⡠⠊⠈⠢⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢄⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⠀⠀⠀⠀⢰⢆⠀⢀⠇⠀⠱│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠈⢆⠀⠀⢀⠇⠈⢢⡎⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠣⡀⡜⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣔⡇⠀⠀⠀⠀⠀⢀⣀⡠⠤⠒⠊⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⢀⠤⠤⠎⡎⠱⡀⠀⡠⠒⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣀⠔⢆⠀⢀⠎⠀⠀⡜⠀⠀⠱⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⢄⠀⣣⢎⣀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠉⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
