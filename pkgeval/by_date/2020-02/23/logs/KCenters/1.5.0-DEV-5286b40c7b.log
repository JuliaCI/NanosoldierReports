Julia Version 1.5.0-DEV.327
Commit 5286b40c7b (2020-02-23 16:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed InvertedIndices ───────────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Parsers ───────────────────── v0.3.11
  Installed OrderedCollections ────────── v1.1.0
  Installed KCenters ──────────────────── v0.2.1
  Installed MappedArrays ──────────────── v0.2.2
  Installed CategoricalArrays ─────────── v0.7.7
  Installed DataFrames ────────────────── v0.20.2
  Installed Missings ──────────────────── v0.4.3
  Installed SimilaritySearch ──────────── v0.3.19
  Installed DataValueInterfaces ───────── v1.0.0
  Installed DataAPI ───────────────────── v1.1.0
  Installed Compat ────────────────────── v3.6.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed LearnBase ─────────────────── v0.2.2
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed MLDataUtils ───────────────── v0.5.0
  Installed MLDataPattern ─────────────── v0.5.0
  Installed JSON ──────────────────────── v0.21.0
  Installed TableTraits ───────────────── v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed StatsBase ─────────────────── v0.32.1
  Installed Tables ────────────────────── v1.0.1
  Installed DataStructures ────────────── v0.17.9
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.6.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.1
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_BJYePb/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.6.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.1
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.1
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9360659371813138
[ Info: 0.8321307849884033
[ Info: 0.5548521900673707
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3270024501532316
mean(cdnet.distances) = 0.36036452526847523
mean(crand.distances) = 0.3266041734069586
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19921875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.19921875,"f1":null,"seconds":3.335997462272644e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":5.4921875,"distances_sum":528.3641431747199}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.19921875,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.19921875,"f1":null,"seconds":3.335997462272644e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":5.4921875,"distances_sum":528.3641431747199}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.19921875,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.19921875,"f1":null,"seconds":3.335997462272644e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":5.4921875,"distances_sum":528.3641431747199}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.42578125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.42578125,"f1":null,"seconds":3.907829523086548e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.75,"distances_sum":772.5188472173221}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1943359375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1943359375,"f1":null,"seconds":3.2819807529449463e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":5.6015625,"distances_sum":390.8394717548567}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.42578125,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.42578125,"f1":null,"seconds":3.907829523086548e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.75,"distances_sum":772.5188472173221}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.7023093226218232,"seconds":4.6137720346450806e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.390625,"distances_sum":1032.432313320006}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7989911130536138,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.90625,"distances_sum":1287.252061297157}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.787593136030637,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.9609375,"distances_sum":1212.9850348178272}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6787109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6787109375,"f1":0.7989911130536138,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.90625,"distances_sum":1287.252061297157}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":4,"bsize":5}, perf: {"precision":null,"recall":0.759765625,"f1":null,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.25,"distances_sum":1458.2077359445211}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9313160797535802,"seconds":6.729736924171448e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8984375,"distances_sum":1779.2326643607958}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9313160797535802,"seconds":6.729736924171448e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8984375,"distances_sum":1779.2326643607958}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.880859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9313160797535802,"seconds":6.729736924171448e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8984375,"distances_sum":1779.2326643607958}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.930181264877319e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":5.4375,"distances_sum":409.8714442825035}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.216796875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.216796875,"f1":null,"seconds":3.930181264877319e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":5.4375,"distances_sum":409.8714442825035}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.216796875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.216796875,"f1":null,"seconds":3.930181264877319e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":5.4375,"distances_sum":409.8714442825035}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8679403929403939,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.390625,"distances_sum":1542.4392368531987}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5634765625,"f1":null,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":7.3828125,"distances_sum":964.196094259886}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8679403929403939,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.390625,"distances_sum":1542.4392368531987}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9227251914751919,"seconds":6.5583735704422e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.7109375,"distances_sum":1847.3717717886823}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9541723901098905,"seconds":6.463378667831421e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.875,"distances_sum":2038.9178194134274}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9541723901098905,"seconds":6.463378667831421e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.875,"distances_sum":2038.9178194134274}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9800054112554115,"seconds":8.367002010345459e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.9453125,"distances_sum":2193.2967766034994}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9738495879120884,"seconds":0.00011464208364486694,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.9765625,"distances_sum":2141.6391230794657}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9637534340659344,"seconds":6.249174475669861e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.8828125,"distances_sum":2102.2137110323115}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964214431401932,"seconds":6.16908073425293e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.9140625,"distances_sum":2093.8759819393736}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570570054945058,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.90625,"distances_sum":2056.8977029532757}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9800054112554115,"seconds":8.367002010345459e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.9453125,"distances_sum":2193.2967766034994}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9800054112554115,"seconds":8.367002010345459e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.9453125,"distances_sum":2193.2967766034994}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.787887633200134,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.6015625,"distances_sum":1308.242875764369}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8474478646353654,"seconds":6.645917892456055e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.1875,"distances_sum":1565.3011360305898}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8533055486180495,"seconds":6.625428795814514e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.3828125,"distances_sum":1566.923975824893}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8533055486180495,"seconds":6.625428795814514e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.3828125,"distances_sum":1566.923975824893}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9040152555777565,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.4375,"distances_sum":1835.3842755445614}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9479223901098905,"seconds":6.2659382820129395e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7109375,"distances_sum":2110.8137980530946}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.920753205128206,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.5234375,"distances_sum":1954.746958157299}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9479223901098905,"seconds":6.2659382820129395e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7109375,"distances_sum":2110.8137980530946}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764136904761908,"seconds":6.474554538726807e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9296875,"distances_sum":2284.427645316872}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9590461621711627,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.859375,"distances_sum":2194.704728856467}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9777186355311358,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9375,"distances_sum":2298.9569664365217}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9540235805860814,"seconds":1.051090657711029e-5,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8359375,"distances_sum":2139.4010304262774}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9777186355311358,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9375,"distances_sum":2298.9569664365217}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9777186355311358,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9375,"distances_sum":2298.9569664365217}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7950310106560113,"seconds":4.541128873825073e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.53125,"distances_sum":1408.259280621227}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.220703125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.220703125,"f1":null,"seconds":3.555789589881897e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.6484375,"distances_sum":533.8815726620027}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.7950310106560113,"seconds":4.541128873825073e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.53125,"distances_sum":1408.259280621227}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8992908133533141,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.40625,"distances_sum":1921.8028340497092}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9289408508158514,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.609375,"distances_sum":2149.108757295515}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8081631909756918,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.59375,"distances_sum":1490.4403305400344}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9289408508158514,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.609375,"distances_sum":2149.108757295515}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9712454212454216,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.890625,"distances_sum":2410.2623238847586}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586195054945058,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7890625,"distances_sum":2340.3752650117153}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9314503205128215,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.625,"distances_sum":2159.1845769008924}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.949954212454213,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7265625,"distances_sum":2300.262450159408}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9453785797535806,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6875,"distances_sum":2240.5011376627167}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9712454212454216,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.890625,"distances_sum":2410.2623238847586}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9712454212454216,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.890625,"distances_sum":2410.2623238847586}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8574817543567551,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.1796875,"distances_sum":1749.2163150844492}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5029296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5029296875,"f1":0.6548402985902989,"seconds":4.122033715248108e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.234375,"distances_sum":1089.02841854949}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.505859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.505859375,"f1":0.6589457417582422,"seconds":4.034489393234253e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.09375,"distances_sum":1133.7403083093704}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8574817543567551,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.1796875,"distances_sum":1749.2163150844492}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9056948260073268,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.296875,"distances_sum":2059.599141076415}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9054721320346328,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.3984375,"distances_sum":2016.3245746569196}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9474759615384621,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.734375,"distances_sum":2303.6801595041343}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.915184815184816,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.484375,"distances_sum":2148.3613839547047}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.915127060439561,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.4609375,"distances_sum":2134.0079784101554}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9474759615384621,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.734375,"distances_sum":2303.6801595041343}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9543211996337002,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7734375,"distances_sum":2318.2872891688544}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.963747710622711,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2371.1653707829128}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9582074175824183,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.734375,"distances_sum":2380.2202604626923}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696428571428577,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.859375,"distances_sum":2442.8252973791787}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696428571428577,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.859375,"distances_sum":2442.8252973791787}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696428571428577,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.859375,"distances_sum":2442.8252973791787}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":3.987923264503479e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.28125,"distances_sum":871.3680914968978}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.18359375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.18359375,"f1":null,"seconds":3.123655915260315e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":5.09375,"distances_sum":398.2893616956547}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8629521520146528,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.4765625,"distances_sum":1810.2867622217136}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8629521520146528,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.4765625,"distances_sum":1810.2867622217136}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8789606227106235,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.53125,"distances_sum":1860.5576612412765}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.79296875,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8789606227106235,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.53125,"distances_sum":1860.5576612412765}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9315965284715291,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.703125,"distances_sum":2271.405115805593}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8990587537462542,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.640625,"distances_sum":2050.8432543316344}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.931599650349651,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7578125,"distances_sum":2261.231420939889}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.931599650349651,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7578125,"distances_sum":2261.231420939889}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.884765625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.931599650349651,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7578125,"distances_sum":2261.231420939889}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7057664557664565,"seconds":4.557892680168152e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.09375,"distances_sum":1185.475809905333}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":4.241243004798889e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":6.640625,"distances_sum":842.1263440529071}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8052836052836061,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.921875,"distances_sum":1532.8664498734636}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.8052836052836061,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.921875,"distances_sum":1532.8664498734636}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.943295246420247,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.7890625,"distances_sum":2291.7104922489875}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8663612429237437,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.375,"distances_sum":1807.728967398522}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8103266525141533,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.9140625,"distances_sum":1541.7588515382938}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8905162545787552,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.5,"distances_sum":1923.323692104388}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.943295246420247,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.7890625,"distances_sum":2291.7104922489875}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9692536630036633,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.8984375,"distances_sum":2461.4440321067746}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.952071886446887,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.84375,"distances_sum":2362.2446098267387}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9463427197802206,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.78125,"distances_sum":2296.459911502955}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9623168498168503,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9140625,"distances_sum":2408.0433963437818}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9553056318681323,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.8515625,"distances_sum":2360.9973052760943}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9692536630036633,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.8984375,"distances_sum":2461.4440321067746}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9692536630036633,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.8984375,"distances_sum":2461.4440321067746}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.8284744769119777,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.84375,"distances_sum":1783.0288249364976}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.728515625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.728515625,"f1":0.8284744769119777,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.84375,"distances_sum":1783.0288249364976}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8470815642690651,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.03125,"distances_sum":1848.749343794798}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8991331585081592,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4921875,"distances_sum":2120.049577187385}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8271484375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8271484375,"f1":0.8991331585081592,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4921875,"distances_sum":2120.049577187385}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9532394688644693,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.828125,"distances_sum":2478.5172448151307}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9602022977022979,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":2517.6514327224604}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9261675824175833,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.640625,"distances_sum":2316.082183325411}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.963118131868132,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.859375,"distances_sum":2547.905069837277}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9639365842490845,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2567.0749337326865}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":10,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9639365842490845,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2567.0749337326865}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":10,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9639365842490845,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2567.0749337326865}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.6966941045066052,"seconds":3.7942081689834595e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.8046875,"distances_sum":1219.7635597799058}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7112831612831618,"seconds":3.984197974205017e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.140625,"distances_sum":1321.4416797152257}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5703125,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5703125,"f1":0.7112831612831618,"seconds":3.984197974205017e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.140625,"distances_sum":1321.4416797152257}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.889232122044623,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.3203125,"distances_sum":2041.6320116820273}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9325268481518489,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8046875,"distances_sum":2343.5989443028293}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9325268481518489,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8046875,"distances_sum":2343.5989443028293}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9478479853479858,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8046875,"distances_sum":2451.3057988983983}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9382440476190481,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7734375,"distances_sum":2381.703934808189}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9488782051282056,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.78125,"distances_sum":2461.7172364320872}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9572744963369968,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8125,"distances_sum":2523.4459906949037}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9572744963369968,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8125,"distances_sum":2523.4459906949037}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9572744963369968,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8125,"distances_sum":2523.4459906949037}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.240234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.240234375,"f1":null,"seconds":3.2223761081695557e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":5.6328125,"distances_sum":517.264957017651}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5498046875,"f1":0.6933242105117111,"seconds":4.24310564994812e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.0546875,"distances_sum":1196.7639357238745}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5498046875,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5498046875,"f1":0.6933242105117111,"seconds":4.24310564994812e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.0546875,"distances_sum":1196.7639357238745}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7898414085914093,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.4453125,"distances_sum":1505.9902120757533}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7895732739482747,"seconds":4.4889748096466064e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.453125,"distances_sum":1499.8213305998788}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6708984375,"state":{"ssize":8,"bsize":4},"perf":{"precision":1.0,"recall":0.6708984375,"f1":0.7898414085914093,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.4453125,"distances_sum":1505.9902120757533}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":12,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8659689269064278,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.953125,"distances_sum":1827.815798388326}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9104712995338001,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5390625,"distances_sum":2120.4524414838556}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.9004063644688652,"seconds":4.967674612998962e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.1796875,"distances_sum":1997.0690725906975}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9129807692307698,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5859375,"distances_sum":2148.1309853283637}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7984114843489851,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.546875,"distances_sum":1517.7352989852768}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.853515625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.9129807692307698,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5859375,"distances_sum":2148.1309853283637}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.853515625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.9129807692307698,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5859375,"distances_sum":2148.1309853283637}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7798200063825071,"seconds":4.597008228302002e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.328125,"distances_sum":1582.218831379227}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.337890625, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.337890625,"f1":0.48549991674991627,"seconds":3.3695250749588013e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":4.9296875,"distances_sum":831.3614686874548}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8398807789432797,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.859375,"distances_sum":1844.6885251557808}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.8398807789432797,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.859375,"distances_sum":1844.6885251557808}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9296073717948724,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.53125,"distances_sum":2412.2535020359687}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9522722069597073,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.703125,"distances_sum":2559.9839011819904}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8961824633699642,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2734375,"distances_sum":2135.9251266179162}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9522722069597073,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.703125,"distances_sum":2559.9839011819904}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9747767857142862,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8515625,"distances_sum":2695.3983347207823}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9799107142857146,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":2708.4979976128657}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9529418498168504,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7109375,"distances_sum":2543.0696055115754}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9683810980685983,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.828125,"distances_sum":2634.443597366762}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9799107142857146,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":2708.4979976128657}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9799107142857146,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":2708.4979976128657}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.580078125,"f1":null,"seconds":4.019588232040405e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":7.3359375,"distances_sum":1395.2372128760494}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2255859375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2255859375,"f1":null,"seconds":3.1925737857818604e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":5.9609375,"distances_sum":531.6879072467715}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.844551802364303,"seconds":4.7907233238220215e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":7.9140625,"distances_sum":1879.4698998701128}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.844551802364303,"seconds":4.7907233238220215e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":7.9140625,"distances_sum":1879.4698998701128}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8750613969363975,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.0390625,"distances_sum":2070.6720075016974}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9413404304029309,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.734375,"distances_sum":2448.8100973066316}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9134360431235438,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.4921875,"distances_sum":2291.2071417493653}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8501165501165507,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":7.9140625,"distances_sum":1937.153370423294}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9413404304029309,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.734375,"distances_sum":2448.8100973066316}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9591746794871802,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.8671875,"distances_sum":2599.7915348351594}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9450778388278396,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.7578125,"distances_sum":2521.5489096725296}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9603651556776561,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.859375,"distances_sum":2593.0267541647786}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9603651556776561,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.859375,"distances_sum":2593.0267541647786}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9603651556776561,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.859375,"distances_sum":2593.0267541647786}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3798828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3798828125,"f1":null,"seconds":3.5837292671203613e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":6.2109375,"distances_sum":867.8119294318573}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8731690184815195,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.1328125,"distances_sum":2050.3897110759835}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8731690184815195,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.1328125,"distances_sum":2050.3897110759835}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9430517399267404,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.6953125,"distances_sum":2545.162545445676}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9430517399267404,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.6953125,"distances_sum":2545.162545445676}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622424450549456,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8203125,"distances_sum":2694.675202533936}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9634729853479859,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.828125,"distances_sum":2702.492577375805}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9560153388278393,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8125,"distances_sum":2634.3470544116562}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9523122710622715,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8203125,"distances_sum":2596.3605873066763}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.948597756410257,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.7734375,"distances_sum":2595.9448630997426}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9634729853479859,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.828125,"distances_sum":2702.492577375805}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9634729853479859,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.828125,"distances_sum":2702.492577375805}}, n: 9
mean(cfft.distances) = 0.6929452205509748
mean(cdnet.distances) = 0.42836618388052206
mean(crand.distances) = 0.36681340010372615
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8755555555555556
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9133333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9133333333333332
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8577777777777778
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8266666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9288888888888889
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9400000000000001
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9177777777777778
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666666
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8911111111111113
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.84
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8822222222222221
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9088888888888889
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8711111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.84
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9244444444444445
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9133333333333334
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.6141229119896888] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 2]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 30), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 9, 2]]
** centroid: 9, normalized-entropy: 0.6840384356390419, [(2, 9), (3, 2)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 1, 1]]
** centroid: 10, normalized-entropy: 1.0, [(2, 1), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 15 centroids; started with 12
acc = 0.9466666666666667
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.36263081721203577] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36263081721203577, 0.24100388863400832] ***
*** starting iteration: 2; err: [Inf, 0.36263081721203577, 0.24100388863400832] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36263081721203577, 0.24100388863400832, 0.23447262028556642] ***
*** starting iteration: 3; err: [Inf, 0.36263081721203577, 0.24100388863400832, 0.23447262028556642] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36263081721203577, 0.24100388863400832, 0.23447262028556642, 0.23347456807301412] ***
*** finished computation of 3 references, err: [Inf, 0.36263081721203577, 0.24100388863400832, 0.23447262028556642, 0.23347456807301412] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [100, 150, 14]]
** centroid: 1, normalized-entropy: 0.768846829861412, [(1, 100), (2, 150), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [199, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [95, 103, 5]]
** centroid: 3, normalized-entropy: 0.7198433383315697, [(1, 95), (2, 103), (3, 5)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.30733653707283154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30733653707283154, 0.2433713309472424] ***
*** starting iteration: 2; err: [Inf, 0.30733653707283154, 0.2433713309472424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30733653707283154, 0.2433713309472424, 0.23158635151177376] ***
*** starting iteration: 3; err: [Inf, 0.30733653707283154, 0.2433713309472424, 0.23158635151177376] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30733653707283154, 0.2433713309472424, 0.23158635151177376, 0.23074176989920225] ***
*** finished computation of 3 references, err: [Inf, 0.30733653707283154, 0.2433713309472424, 0.23158635151177376, 0.23074176989920225] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [90, 170, 20]]
** centroid: 1, normalized-entropy: 0.7794178205576751, [(1, 90), (2, 170), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [130, 82, 0]]
** centroid: 2, normalized-entropy: 0.9626983787500768, [(1, 130), (2, 82)]
*** center 3: selecting labels [1] (freq >= 1) [from [175, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3111412581182022] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3111412581182022, 0.25647934306848574] ***
*** starting iteration: 2; err: [Inf, 0.3111412581182022, 0.25647934306848574] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3111412581182022, 0.25647934306848574, 0.232989645983348] ***
*** starting iteration: 3; err: [Inf, 0.3111412581182022, 0.25647934306848574, 0.232989645983348] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3111412581182022, 0.25647934306848574, 0.232989645983348, 0.22900623881929683] ***
*** starting iteration: 4; err: [Inf, 0.3111412581182022, 0.25647934306848574, 0.232989645983348, 0.22900623881929683] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3111412581182022, 0.25647934306848574, 0.232989645983348, 0.22900623881929683, 0.2284768230604312] ***
*** finished computation of 3 references, err: [Inf, 0.3111412581182022, 0.25647934306848574, 0.232989645983348, 0.22900623881929683, 0.2284768230604312] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 207, 19]]
** centroid: 1, normalized-entropy: 0.4163629316285132, [(2, 207), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [166, 39, 0]]
** centroid: 2, normalized-entropy: 0.701981406143411, [(1, 166), (2, 39)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [221, 15, 0]]
** centroid: 3, normalized-entropy: 0.3414149791938999, [(1, 221), (2, 15)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2750017626739636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2750017626739636, 0.2347072945395904] ***
*** finished computation of 3 references, err: [Inf, 0.2750017626739636, 0.2347072945395904] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [72, 138, 18]]
** centroid: 1, normalized-entropy: 0.7904036080725375, [(1, 72), (2, 138), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [116, 115, 1]]
** centroid: 2, normalized-entropy: 0.9999864817043628, [(1, 116), (2, 115)]
*** center 3: selecting labels [1] (freq >= 2) [from [206, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.28329352634390637] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28329352634390637, 0.2355477265640814] ***
*** finished computation of 3 references, err: [Inf, 0.28329352634390637, 0.2355477265640814] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [65, 173, 20]]
** centroid: 1, normalized-entropy: 0.7405195098474735, [(1, 65), (2, 173), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [209, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [121, 79, 0]]
** centroid: 3, normalized-entropy: 0.9679505356936395, [(1, 121), (2, 79)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.294036575357082] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.294036575357082, 0.23201166520124186] ***
*** finished computation of 3 references, err: [Inf, 0.294036575357082, 0.23201166520124186] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [4, 230, 19]]
** centroid: 1, normalized-entropy: 0.3155248273943159, [(1, 4), (2, 230), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [140, 29, 0]]
** centroid: 2, normalized-entropy: 0.6613464704183091, [(1, 140), (2, 29)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [243, 2, 0]]
** centroid: 3, normalized-entropy: 0.06835451705887763, [(1, 243), (2, 2)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4582677684254474] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4582677684254474, 0.30472207062684736] ***
*** finished computation of 3 references, err: [Inf, 0.4582677684254474, 0.30472207062684736] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [159, 47, 0]]
** centroid: 1, normalized-entropy: 0.7747817605858326, [(1, 159), (2, 47)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [60, 206, 19]]
** centroid: 2, normalized-entropy: 0.6764895098362171, [(1, 60), (2, 206), (3, 19)]
*** center 3: selecting labels [1] (freq >= 2) [from [175, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5608044336012368] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5608044336012368, 0.32076529971941065] ***
*** finished computation of 3 references, err: [Inf, 0.5608044336012368, 0.32076529971941065] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [264, 40, 0]]
** centroid: 1, normalized-entropy: 0.5617526078313283, [(1, 264), (2, 40)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [14, 210, 20]]
** centroid: 2, normalized-entropy: 0.4534596109131534, [(1, 14), (2, 210), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [117, 2, 0]]
** centroid: 3, normalized-entropy: 0.1231146356503104, [(1, 117), (2, 2)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33506734303521296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33506734303521296, 0.29949788826851476] ***
*** finished computation of 3 references, err: [Inf, 0.33506734303521296, 0.29949788826851476] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 171, 19]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 171), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [107, 45, 0]]
** centroid: 2, normalized-entropy: 0.8764120076557033, [(1, 107), (2, 45)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [280, 45, 0]]
** centroid: 3, normalized-entropy: 0.5801954953637372, [(1, 280), (2, 45)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3992527565449006] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3992527565449006, 0.30784254328154764] ***
*** starting iteration: 2; err: [Inf, 0.3992527565449006, 0.30784254328154764] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3992527565449006, 0.30784254328154764, 0.2999085419379208] ***
*** starting iteration: 3; err: [Inf, 0.3992527565449006, 0.30784254328154764, 0.2999085419379208] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3992527565449006, 0.30784254328154764, 0.2999085419379208, 0.29854118953495323] ***
*** finished computation of 3 references, err: [Inf, 0.3992527565449006, 0.30784254328154764, 0.2999085419379208, 0.29854118953495323] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [7, 204, 19]]
** centroid: 1, normalized-entropy: 0.38109757687170276, [(1, 7), (2, 204), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [170, 49, 0]]
** centroid: 2, normalized-entropy: 0.7669457741899658, [(1, 170), (2, 49)]
*** center 3: selecting labels [1] (freq >= 2) [from [217, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3573040343078225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3573040343078225, 0.305403017579973] ***
*** starting iteration: 2; err: [Inf, 0.3573040343078225, 0.305403017579973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3573040343078225, 0.305403017579973, 0.29816871291135383] ***
*** starting iteration: 3; err: [Inf, 0.3573040343078225, 0.305403017579973, 0.29816871291135383] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3573040343078225, 0.305403017579973, 0.29816871291135383, 0.29734470973327487] ***
*** finished computation of 3 references, err: [Inf, 0.3573040343078225, 0.305403017579973, 0.29816871291135383, 0.29734470973327487] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 183, 20]]
** centroid: 1, normalized-entropy: 0.46429339352149623, [(2, 183), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [259, 23, 0]]
** centroid: 2, normalized-entropy: 0.40765322651181224, [(1, 259), (2, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [136, 46, 0]]
** centroid: 3, normalized-entropy: 0.8156034512499668, [(1, 136), (2, 46)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.402675520336867] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.402675520336867, 0.300453913241703] ***
*** starting iteration: 2; err: [Inf, 0.402675520336867, 0.300453913241703] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.402675520336867, 0.300453913241703, 0.29657883723189626] ***
*** starting iteration: 3; err: [Inf, 0.402675520336867, 0.300453913241703, 0.29657883723189626] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.402675520336867, 0.300453913241703, 0.29657883723189626, 0.29548727334065106] ***
*** finished computation of 3 references, err: [Inf, 0.402675520336867, 0.300453913241703, 0.29657883723189626, 0.29548727334065106] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [73, 173, 19]]
** centroid: 1, normalized-entropy: 0.7486668803133721, [(1, 73), (2, 173), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [203, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [111, 88, 0]]
** centroid: 3, normalized-entropy: 0.9903424918755889, [(1, 111), (2, 88)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.22911817882721824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22911817882721824, 0.19174243844821826] ***
*** starting iteration: 2; err: [Inf, 0.22911817882721824, 0.19174243844821826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22911817882721824, 0.19174243844821826, 0.18765903527984065] ***
*** starting iteration: 3; err: [Inf, 0.22911817882721824, 0.19174243844821826, 0.18765903527984065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22911817882721824, 0.19174243844821826, 0.18765903527984065, 0.18747858325293562] ***
*** finished computation of 7 references, err: [Inf, 0.22911817882721824, 0.19174243844821826, 0.18765903527984065, 0.18747858325293562] ***
*** center 1: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 80, 19]]
** centroid: 2, normalized-entropy: 0.7054690408228712, [(2, 80), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [59, 2, 0]]
** centroid: 3, normalized-entropy: 0.20818094555717087, [(1, 59), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [59, 35, 0]]
** centroid: 4, normalized-entropy: 0.9524521973646323, [(1, 59), (2, 35)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [39, 69, 0]]
** centroid: 5, normalized-entropy: 0.943601631299382, [(1, 39), (2, 69)]
*** center 6: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [33, 67, 0]]
** centroid: 7, normalized-entropy: 0.9149263727797277, [(1, 33), (2, 67)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23942626203233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23942626203233, 0.19689620340541786] ***
*** starting iteration: 2; err: [Inf, 0.23942626203233, 0.19689620340541786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23942626203233, 0.19689620340541786, 0.19268369070789043] ***
*** starting iteration: 3; err: [Inf, 0.23942626203233, 0.19689620340541786, 0.19268369070789043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23942626203233, 0.19689620340541786, 0.19268369070789043, 0.19207265009374722] ***
*** finished computation of 7 references, err: [Inf, 0.23942626203233, 0.19689620340541786, 0.19268369070789043, 0.19207265009374722] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [5, 91, 0]]
** centroid: 1, normalized-entropy: 0.29518174309075856, [(1, 5), (2, 91)]
*** center 2: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [64, 42, 0]]
** centroid: 3, normalized-entropy: 0.9687003436508602, [(1, 64), (2, 42)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [55, 32, 0]]
** centroid: 4, normalized-entropy: 0.9489804585630239, [(1, 55), (2, 32)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 85, 20]]
** centroid: 5, normalized-entropy: 0.7024665512903904, [(2, 85), (3, 20)]
*** center 6: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [102, 2, 0]]
** centroid: 7, normalized-entropy: 0.13709947889981755, [(1, 102), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23833822947115227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23833822947115227, 0.19313206170326744] ***
*** starting iteration: 2; err: [Inf, 0.23833822947115227, 0.19313206170326744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23833822947115227, 0.19313206170326744, 0.18936905368877718] ***
*** starting iteration: 3; err: [Inf, 0.23833822947115227, 0.19313206170326744, 0.18936905368877718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23833822947115227, 0.19313206170326744, 0.18936905368877718, 0.18776460788024218] ***
*** starting iteration: 4; err: [Inf, 0.23833822947115227, 0.19313206170326744, 0.18936905368877718, 0.18776460788024218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23833822947115227, 0.19313206170326744, 0.18936905368877718, 0.18776460788024218, 0.18667270251405962] ***
*** starting iteration: 5; err: [Inf, 0.23833822947115227, 0.19313206170326744, 0.18936905368877718, 0.18776460788024218, 0.18667270251405962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23833822947115227, 0.19313206170326744, 0.18936905368877718, 0.18776460788024218, 0.18667270251405962, 0.1859958677687382] ***
*** finished computation of 7 references, err: [Inf, 0.23833822947115227, 0.19313206170326744, 0.18936905368877718, 0.18776460788024218, 0.18667270251405962, 0.1859958677687382] ***
*** center 1: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 70, 19]]
** centroid: 2, normalized-entropy: 0.748088105780153, [(2, 70), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [94, 7, 0]]
** centroid: 3, normalized-entropy: 0.3633319133250508, [(1, 94), (2, 7)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [59, 20, 0]]
** centroid: 4, normalized-entropy: 0.8162554088088008, [(1, 59), (2, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 76, 0]]
** centroid: 5, normalized-entropy: 0.9480782435939054, [(1, 44), (2, 76)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 88, 0]]
** centroid: 6, normalized-entropy: 0.1537421803287618, [(1, 2), (2, 88)]
*** center 7: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21587052543867133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21587052543867133, 0.15242457021078146] ***
*** starting iteration: 2; err: [Inf, 0.21587052543867133, 0.15242457021078146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21587052543867133, 0.15242457021078146, 0.14623927429189776] ***
*** starting iteration: 3; err: [Inf, 0.21587052543867133, 0.15242457021078146, 0.14623927429189776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21587052543867133, 0.15242457021078146, 0.14623927429189776, 0.1453080466010135] ***
*** finished computation of 7 references, err: [Inf, 0.21587052543867133, 0.15242457021078146, 0.14623927429189776, 0.1453080466010135] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [56, 55, 0]]
** centroid: 1, normalized-entropy: 0.999941453025042, [(1, 56), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [56, 50, 0]]
** centroid: 2, normalized-entropy: 0.9976875760352552, [(1, 56), (2, 50)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 76, 19]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 76), (3, 19)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [91, 3, 0]]
** centroid: 4, normalized-entropy: 0.2039058755048202, [(1, 91), (2, 3)]
*** center 5: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 69, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.213852550343972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.213852550343972, 0.1562971672241477] ***
*** starting iteration: 2; err: [Inf, 0.213852550343972, 0.1562971672241477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.213852550343972, 0.1562971672241477, 0.15067238612254075] ***
*** starting iteration: 3; err: [Inf, 0.213852550343972, 0.1562971672241477, 0.15067238612254075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.213852550343972, 0.1562971672241477, 0.15067238612254075, 0.1499639969092907] ***
*** finished computation of 7 references, err: [Inf, 0.213852550343972, 0.1562971672241477, 0.15067238612254075, 0.1499639969092907] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [51, 61, 0]]
** centroid: 1, normalized-entropy: 0.9942417967729406, [(1, 51), (2, 61)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [95, 4, 0]]
** centroid: 2, normalized-entropy: 0.24414164238829597, [(1, 95), (2, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 81, 20]]
** centroid: 4, normalized-entropy: 0.7179499765002912, [(2, 81), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [53, 32, 0]]
** centroid: 5, normalized-entropy: 0.9555111232924128, [(1, 53), (2, 32)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [84, 1, 0]]
** centroid: 6, normalized-entropy: 0.0922772477445739, [(1, 84), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 73, 0]]
** centroid: 7, normalized-entropy: 0.10327508457163559, [(1, 1), (2, 73)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19194687220004053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19194687220004053, 0.15151564609901658] ***
*** starting iteration: 2; err: [Inf, 0.19194687220004053, 0.15151564609901658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19194687220004053, 0.15151564609901658, 0.14716151907671426] ***
*** starting iteration: 3; err: [Inf, 0.19194687220004053, 0.15151564609901658, 0.14716151907671426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19194687220004053, 0.15151564609901658, 0.14716151907671426, 0.14600663457688565] ***
*** finished computation of 7 references, err: [Inf, 0.19194687220004053, 0.15151564609901658, 0.14716151907671426, 0.14600663457688565] ***
*** center 1: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 76, 19]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 76), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [93, 18, 0]]
** centroid: 3, normalized-entropy: 0.6394571324851642, [(1, 93), (2, 18)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [4, 73, 0]]
** centroid: 4, normalized-entropy: 0.29461520565280713, [(1, 4), (2, 73)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [30, 92, 0]]
** centroid: 5, normalized-entropy: 0.8047175193210769, [(1, 30), (2, 92)]
*** center 6: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [65, 2, 0]]
** centroid: 7, normalized-entropy: 0.19364280468389852, [(1, 65), (2, 2)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19044491177489115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19044491177489115, 0.15513442863371815] ***
*** starting iteration: 2; err: [Inf, 0.19044491177489115, 0.15513442863371815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19044491177489115, 0.15513442863371815, 0.15071996386713898] ***
*** starting iteration: 3; err: [Inf, 0.19044491177489115, 0.15513442863371815, 0.15071996386713898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19044491177489115, 0.15513442863371815, 0.15071996386713898, 0.14870883249495928] ***
*** finished computation of 7 references, err: [Inf, 0.19044491177489115, 0.15513442863371815, 0.15071996386713898, 0.14870883249495928] ***
*** center 1: selecting labels [1] (freq >= 2) [from [111, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 7, 0]]
** centroid: 2, normalized-entropy: 0.43180499427520785, [(1, 72), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 72, 19]]
** centroid: 3, normalized-entropy: 0.7391658175693049, [(2, 72), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [47, 56, 0]]
** centroid: 5, normalized-entropy: 0.994485462483463, [(1, 47), (2, 56)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [50, 53, 0]]
** centroid: 6, normalized-entropy: 0.9993879681484049, [(1, 50), (2, 53)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 65, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19662940618233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19662940618233, 0.15665130884399864] ***
*** starting iteration: 2; err: [Inf, 0.19662940618233, 0.15665130884399864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19662940618233, 0.15665130884399864, 0.15104156537777347] ***
*** starting iteration: 3; err: [Inf, 0.19662940618233, 0.15665130884399864, 0.15104156537777347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19662940618233, 0.15665130884399864, 0.15104156537777347, 0.1500090159782288] ***
*** finished computation of 7 references, err: [Inf, 0.19662940618233, 0.15665130884399864, 0.15104156537777347, 0.1500090159782288] ***
*** center 1: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 91, 20]]
** centroid: 2, normalized-entropy: 0.680471054135434, [(2, 91), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [57, 19, 0]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(1, 57), (2, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [78, 52, 0]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(1, 78), (2, 52)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [15, 90, 0]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(1, 15), (2, 90)]
*** center 6: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18838950114274422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18838950114274422, 0.151768259156769] ***
*** starting iteration: 2; err: [Inf, 0.18838950114274422, 0.151768259156769] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18838950114274422, 0.151768259156769, 0.1469625394534448] ***
*** starting iteration: 3; err: [Inf, 0.18838950114274422, 0.151768259156769, 0.1469625394534448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18838950114274422, 0.151768259156769, 0.1469625394534448, 0.14586786374399463] ***
*** finished computation of 7 references, err: [Inf, 0.18838950114274422, 0.151768259156769, 0.1469625394534448, 0.14586786374399463] ***
*** center 1: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 78, 19]]
** centroid: 2, normalized-entropy: 0.7136036068604937, [(2, 78), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [64, 22, 0]]
** centroid: 3, normalized-entropy: 0.8203636429576731, [(1, 64), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [15, 58, 0]]
** centroid: 4, normalized-entropy: 0.7327525499549903, [(1, 15), (2, 58)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [30, 103, 0]]
** centroid: 5, normalized-entropy: 0.7701976823573773, [(1, 30), (2, 103)]
*** center 6: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 9)
[0.9349798900697105, 0.9309758860657066, 0.9219698740656824, 0.8750367133600667, 0.8750247253241265, 0.8709877542212872, 0.8679607751464039, 0.8440086793380206, 0.7929935923947901]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9349798900697105
finished with 10
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.30321163486398467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30321163486398467, 0.2383884579969665] ***
*** finished computation of 3 references, err: [Inf, 0.30321163486398467, 0.2383884579969665] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 166, 19]]
** centroid: 1, normalized-entropy: 0.4775048747918926, [(2, 166), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [287, 29, 0]]
** centroid: 2, normalized-entropy: 0.4423575304093119, [(1, 287), (2, 29)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [107, 58, 0]]
** centroid: 3, normalized-entropy: 0.9354139399287134, [(1, 107), (2, 58)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2959440972368377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2959440972368377, 0.2425735733336371] ***
*** finished computation of 3 references, err: [Inf, 0.2959440972368377, 0.2425735733336371] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [230, 64, 0]]
** centroid: 1, normalized-entropy: 0.7559216247098123, [(1, 230), (2, 64)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 174, 20]]
** centroid: 2, normalized-entropy: 0.478723511385963, [(2, 174), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [165, 14, 0]]
** centroid: 3, normalized-entropy: 0.39584854676500486, [(1, 165), (2, 14)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3634014054706999] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3634014054706999, 0.23754339560453056] ***
*** finished computation of 3 references, err: [Inf, 0.3634014054706999, 0.23754339560453056] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [112, 81, 0]]
** centroid: 1, normalized-entropy: 0.9813088429462864, [(1, 112), (2, 81)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [237, 2, 0]]
** centroid: 2, normalized-entropy: 0.06976994610255842, [(1, 237), (2, 2)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [38, 178, 19]]
** centroid: 3, normalized-entropy: 0.6448076937324548, [(1, 38), (2, 178), (3, 19)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 10)
[0.9349798900697105, 0.9309758860657066, 0.9219698740656824, 0.8999808191424957, 0.8750367133600667, 0.8750247253241265, 0.8709877542212872, 0.8679607751464039, 0.8440086793380206, 0.7929935923947901]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9349798900697105
finished with 12
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.2752626036795824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2752626036795824, 0.1764424680305684] ***
*** starting iteration: 2; err: [Inf, 0.2752626036795824, 0.1764424680305684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2752626036795824, 0.1764424680305684, 0.16291098794046868] ***
*** starting iteration: 3; err: [Inf, 0.2752626036795824, 0.1764424680305684, 0.16291098794046868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2752626036795824, 0.1764424680305684, 0.16291098794046868, 0.15873000851354083] ***
*** starting iteration: 4; err: [Inf, 0.2752626036795824, 0.1764424680305684, 0.16291098794046868, 0.15873000851354083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2752626036795824, 0.1764424680305684, 0.16291098794046868, 0.15873000851354083, 0.1553155663283402] ***
*** starting iteration: 5; err: [Inf, 0.2752626036795824, 0.1764424680305684, 0.16291098794046868, 0.15873000851354083, 0.1553155663283402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2752626036795824, 0.1764424680305684, 0.16291098794046868, 0.15873000851354083, 0.1553155663283402, 0.152472241543927] ***
*** starting iteration: 6; err: [Inf, 0.2752626036795824, 0.1764424680305684, 0.16291098794046868, 0.15873000851354083, 0.1553155663283402, 0.152472241543927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2752626036795824, 0.1764424680305684, 0.16291098794046868, 0.15873000851354083, 0.1553155663283402, 0.152472241543927, 0.15125568927469868] ***
*** starting iteration: 7; err: [Inf, 0.2752626036795824, 0.1764424680305684, 0.16291098794046868, 0.15873000851354083, 0.1553155663283402, 0.152472241543927, 0.15125568927469868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2752626036795824, 0.1764424680305684, 0.16291098794046868, 0.15873000851354083, 0.1553155663283402, 0.152472241543927, 0.15125568927469868, 0.15012955299736624] ***
*** starting iteration: 8; err: [Inf, 0.2752626036795824, 0.1764424680305684, 0.16291098794046868, 0.15873000851354083, 0.1553155663283402, 0.152472241543927, 0.15125568927469868, 0.15012955299736624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2752626036795824, 0.1764424680305684, 0.16291098794046868, 0.15873000851354083, 0.1553155663283402, 0.152472241543927, 0.15125568927469868, 0.15012955299736624, 0.14954918595002936] ***
*** finished computation of 7 references, err: [Inf, 0.2752626036795824, 0.1764424680305684, 0.16291098794046868, 0.15873000851354083, 0.1553155663283402, 0.152472241543927, 0.15125568927469868, 0.15012955299736624, 0.14954918595002936] ***
*** center 1: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [24, 80, 0]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(1, 24), (2, 80)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 66, 19]]
** centroid: 3, normalized-entropy: 0.7665599404543365, [(2, 66), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [122, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [54, 15, 0]]
** centroid: 5, normalized-entropy: 0.7553754125614286, [(1, 54), (2, 15)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [99, 2, 0]]
** centroid: 6, normalized-entropy: 0.1403272709905931, [(1, 99), (2, 2)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 90, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2215507985906036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2215507985906036, 0.15926082487283708] ***
*** starting iteration: 2; err: [Inf, 0.2215507985906036, 0.15926082487283708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2215507985906036, 0.15926082487283708, 0.14989387435696158] ***
*** starting iteration: 3; err: [Inf, 0.2215507985906036, 0.15926082487283708, 0.14989387435696158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2215507985906036, 0.15926082487283708, 0.14989387435696158, 0.14720467280462451] ***
*** starting iteration: 4; err: [Inf, 0.2215507985906036, 0.15926082487283708, 0.14989387435696158, 0.14720467280462451] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2215507985906036, 0.15926082487283708, 0.14989387435696158, 0.14720467280462451, 0.14657396070011283] ***
*** finished computation of 7 references, err: [Inf, 0.2215507985906036, 0.15926082487283708, 0.14989387435696158, 0.14720467280462451, 0.14657396070011283] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [109, 25, 0]]
** centroid: 1, normalized-entropy: 0.6942347416140927, [(1, 109), (2, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [116, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [32, 53, 0]]
** centroid: 3, normalized-entropy: 0.9555111232924128, [(1, 32), (2, 53)]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 78, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 94, 20]]
** centroid: 5, normalized-entropy: 0.6699960320994334, [(2, 94), (3, 20)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [54, 2, 0]]
** centroid: 6, normalized-entropy: 0.2222848306856879, [(1, 54), (2, 2)]
*** center 7: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28055365302081947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28055365302081947, 0.1866378195142594] ***
*** starting iteration: 2; err: [Inf, 0.28055365302081947, 0.1866378195142594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482] ***
*** starting iteration: 3; err: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354] ***
*** starting iteration: 4; err: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354, 0.16378516477436342] ***
*** starting iteration: 5; err: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354, 0.16378516477436342] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354, 0.16378516477436342, 0.1604285428057546] ***
*** starting iteration: 6; err: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354, 0.16378516477436342, 0.1604285428057546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354, 0.16378516477436342, 0.1604285428057546, 0.15753788065103844] ***
*** starting iteration: 7; err: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354, 0.16378516477436342, 0.1604285428057546, 0.15753788065103844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354, 0.16378516477436342, 0.1604285428057546, 0.15753788065103844, 0.15585552831738908] ***
*** starting iteration: 8; err: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354, 0.16378516477436342, 0.1604285428057546, 0.15753788065103844, 0.15585552831738908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354, 0.16378516477436342, 0.1604285428057546, 0.15753788065103844, 0.15585552831738908, 0.15389737387144495] ***
*** starting iteration: 9; err: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354, 0.16378516477436342, 0.1604285428057546, 0.15753788065103844, 0.15585552831738908, 0.15389737387144495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354, 0.16378516477436342, 0.1604285428057546, 0.15753788065103844, 0.15585552831738908, 0.15389737387144495, 0.15136811693060748] ***
*** starting iteration: 10; err: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354, 0.16378516477436342, 0.1604285428057546, 0.15753788065103844, 0.15585552831738908, 0.15389737387144495, 0.15136811693060748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354, 0.16378516477436342, 0.1604285428057546, 0.15753788065103844, 0.15585552831738908, 0.15389737387144495, 0.15136811693060748, 0.14904119716496436] ***
*** finished computation of 7 references, err: [Inf, 0.28055365302081947, 0.1866378195142594, 0.1746428464113482, 0.16816616268211354, 0.16378516477436342, 0.1604285428057546, 0.15753788065103844, 0.15585552831738908, 0.15389737387144495, 0.15136811693060748, 0.14904119716496436] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [86, 30, 0]]
** centroid: 1, normalized-entropy: 0.8246578332945033, [(1, 86), (2, 30)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 130, 19]]
** centroid: 2, normalized-entropy: 0.5505883966425158, [(2, 130), (3, 19)]
*** center 3: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [55, 61, 0]]
** centroid: 4, normalized-entropy: 0.9980692551690173, [(1, 55), (2, 61)]
*** center 5: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [52, 40, 0]]
** centroid: 6, normalized-entropy: 0.9876925088958032, [(1, 52), (2, 40)]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.28402611016024565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28402611016024565, 0.21226905524526518] ***
*** starting iteration: 2; err: [Inf, 0.28402611016024565, 0.21226905524526518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078] ***
*** starting iteration: 3; err: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078, 0.19599480610886202] ***
*** starting iteration: 4; err: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078, 0.19599480610886202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078, 0.19599480610886202, 0.1931391161825933] ***
*** starting iteration: 5; err: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078, 0.19599480610886202, 0.1931391161825933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078, 0.19599480610886202, 0.1931391161825933, 0.190999713372551] ***
*** starting iteration: 6; err: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078, 0.19599480610886202, 0.1931391161825933, 0.190999713372551] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078, 0.19599480610886202, 0.1931391161825933, 0.190999713372551, 0.18902789316959567] ***
*** starting iteration: 7; err: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078, 0.19599480610886202, 0.1931391161825933, 0.190999713372551, 0.18902789316959567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078, 0.19599480610886202, 0.1931391161825933, 0.190999713372551, 0.18902789316959567, 0.1873330462419123] ***
*** starting iteration: 8; err: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078, 0.19599480610886202, 0.1931391161825933, 0.190999713372551, 0.18902789316959567, 0.1873330462419123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078, 0.19599480610886202, 0.1931391161825933, 0.190999713372551, 0.18902789316959567, 0.1873330462419123, 0.18570122133112615] ***
*** starting iteration: 9; err: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078, 0.19599480610886202, 0.1931391161825933, 0.190999713372551, 0.18902789316959567, 0.1873330462419123, 0.18570122133112615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078, 0.19599480610886202, 0.1931391161825933, 0.190999713372551, 0.18902789316959567, 0.1873330462419123, 0.18570122133112615, 0.18545009230624313] ***
*** finished computation of 7 references, err: [Inf, 0.28402611016024565, 0.21226905524526518, 0.20171340172495078, 0.19599480610886202, 0.1931391161825933, 0.190999713372551, 0.18902789316959567, 0.1873330462419123, 0.18570122133112615, 0.18545009230624313] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [23, 60, 0]]
** centroid: 1, normalized-entropy: 0.8514808683852091, [(1, 23), (2, 60)]
*** center 2: selecting labels [1] (freq >= 2) [from [108, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 78, 19]]
** centroid: 4, normalized-entropy: 0.7136036068604937, [(2, 78), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [15, 59, 0]]
** centroid: 5, normalized-entropy: 0.7273006785144036, [(1, 15), (2, 59)]
*** center 6: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [56, 56, 0]]
** centroid: 7, normalized-entropy: 1.0, [(1, 56), (2, 56)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2489170819015495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2489170819015495, 0.19804624027280748] ***
*** starting iteration: 2; err: [Inf, 0.2489170819015495, 0.19804624027280748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2489170819015495, 0.19804624027280748, 0.19316855160382645] ***
*** starting iteration: 3; err: [Inf, 0.2489170819015495, 0.19804624027280748, 0.19316855160382645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2489170819015495, 0.19804624027280748, 0.19316855160382645, 0.1906277961495599] ***
*** starting iteration: 4; err: [Inf, 0.2489170819015495, 0.19804624027280748, 0.19316855160382645, 0.1906277961495599] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2489170819015495, 0.19804624027280748, 0.19316855160382645, 0.1906277961495599, 0.18834451155114298] ***
*** starting iteration: 5; err: [Inf, 0.2489170819015495, 0.19804624027280748, 0.19316855160382645, 0.1906277961495599, 0.18834451155114298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2489170819015495, 0.19804624027280748, 0.19316855160382645, 0.1906277961495599, 0.18834451155114298, 0.18708429809777008] ***
*** starting iteration: 6; err: [Inf, 0.2489170819015495, 0.19804624027280748, 0.19316855160382645, 0.1906277961495599, 0.18834451155114298, 0.18708429809777008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2489170819015495, 0.19804624027280748, 0.19316855160382645, 0.1906277961495599, 0.18834451155114298, 0.18708429809777008, 0.18609942292663334] ***
*** finished computation of 7 references, err: [Inf, 0.2489170819015495, 0.19804624027280748, 0.19316855160382645, 0.1906277961495599, 0.18834451155114298, 0.18708429809777008, 0.18609942292663334] ***
*** center 1: selecting labels [1] (freq >= 2) [from [115, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 91, 20]]
** centroid: 2, normalized-entropy: 0.680471054135434, [(2, 91), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [38, 48, 0]]
** centroid: 3, normalized-entropy: 0.9902246902198684, [(1, 38), (2, 48)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [55, 5, 0]]
** centroid: 4, normalized-entropy: 0.4138168503036336, [(1, 55), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [98, 20, 0]]
** centroid: 5, normalized-entropy: 0.656540281386946, [(1, 98), (2, 20)]
*** center 6: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 88, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2575961277908136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2575961277908136, 0.20265258439695058] ***
*** starting iteration: 2; err: [Inf, 0.2575961277908136, 0.20265258439695058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2575961277908136, 0.20265258439695058, 0.19326675572813765] ***
*** starting iteration: 3; err: [Inf, 0.2575961277908136, 0.20265258439695058, 0.19326675572813765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2575961277908136, 0.20265258439695058, 0.19326675572813765, 0.19052708195871498] ***
*** starting iteration: 4; err: [Inf, 0.2575961277908136, 0.20265258439695058, 0.19326675572813765, 0.19052708195871498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2575961277908136, 0.20265258439695058, 0.19326675572813765, 0.19052708195871498, 0.18978041145291508] ***
*** finished computation of 7 references, err: [Inf, 0.2575961277908136, 0.20265258439695058, 0.19326675572813765, 0.19052708195871498, 0.18978041145291508] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 92, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [76, 17, 0]]
** centroid: 2, normalized-entropy: 0.6861549474202007, [(1, 76), (2, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [77, 39, 0]]
** centroid: 3, normalized-entropy: 0.9211426316005454, [(1, 77), (2, 39)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [37, 16, 0]]
** centroid: 4, normalized-entropy: 0.8835850861052531, [(1, 37), (2, 16)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 92, 19]]
** centroid: 5, normalized-entropy: 0.6603769229926888, [(2, 92), (3, 19)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [81, 5, 0]]
** centroid: 6, normalized-entropy: 0.32001486274754665, [(1, 81), (2, 5)]
*** center 7: selecting labels [1] (freq >= 2) [from [116, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 12)
[0.9449928970887055, 0.9349798900697105, 0.9309758860657066, 0.9219698740656824, 0.9189788590986195, 0.8999808191424957, 0.8750367133600667, 0.8750247253241265, 0.8709877542212872, 0.8679607751464039, 0.8440086793380206, 0.7929935923947901]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9449928970887055
finished with 12
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 12)
[0.9449928970887055, 0.9349798900697105, 0.9309758860657066, 0.9219698740656824, 0.9189788590986195, 0.8999808191424957, 0.8750367133600667, 0.8750247253241265, 0.8709877542212872, 0.8679607751464039, 0.8440086793380206, 0.7929935923947901]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9449928970887055
finished with 12
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 12)
[0.9449928970887055, 0.9349798900697105, 0.9309758860657066, 0.9219698740656824, 0.9189788590986195, 0.8999808191424957, 0.8750367133600667, 0.8750247253241265, 0.8709877542212872, 0.8679607751464039, 0.8440086793380206, 0.7929935923947901]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9449928970887055
finished with 13
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.22544658215235439] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22544658215235439, 0.18964227598563238] ***
*** starting iteration: 2; err: [Inf, 0.22544658215235439, 0.18964227598563238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22544658215235439, 0.18964227598563238, 0.18600751610623822] ***
*** starting iteration: 3; err: [Inf, 0.22544658215235439, 0.18964227598563238, 0.18600751610623822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22544658215235439, 0.18964227598563238, 0.18600751610623822, 0.18495729089750945] ***
*** finished computation of 7 references, err: [Inf, 0.22544658215235439, 0.18964227598563238, 0.18600751610623822, 0.18495729089750945] ***
*** center 1: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 83, 19]]
** centroid: 2, normalized-entropy: 0.6936126404300949, [(2, 83), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [69, 2, 0]]
** centroid: 3, normalized-entropy: 0.18512476010054582, [(1, 69), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [68, 49, 0]]
** centroid: 4, normalized-entropy: 0.980892449782821, [(1, 68), (2, 49)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [51, 60, 0]]
** centroid: 5, normalized-entropy: 0.9952525494396791, [(1, 51), (2, 60)]
*** center 6: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [7, 59, 0]]
** centroid: 7, normalized-entropy: 0.48791799258948565, [(1, 7), (2, 59)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22002776913733027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22002776913733027, 0.1939749752612564] ***
*** starting iteration: 2; err: [Inf, 0.22002776913733027, 0.1939749752612564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22002776913733027, 0.1939749752612564, 0.1899255274542268] ***
*** starting iteration: 3; err: [Inf, 0.22002776913733027, 0.1939749752612564, 0.1899255274542268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22002776913733027, 0.1939749752612564, 0.1899255274542268, 0.18789901157123395] ***
*** finished computation of 7 references, err: [Inf, 0.22002776913733027, 0.1939749752612564, 0.1899255274542268, 0.18789901157123395] ***
*** center 1: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 87, 20]]
** centroid: 2, normalized-entropy: 0.6949749673676271, [(2, 87), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [66, 1, 0]]
** centroid: 3, normalized-entropy: 0.11190990870168394, [(1, 66), (2, 1)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [89, 40, 0]]
** centroid: 4, normalized-entropy: 0.8932629209154721, [(1, 89), (2, 40)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [50, 57, 0]]
** centroid: 5, normalized-entropy: 0.9969105350354788, [(1, 50), (2, 57)]
*** center 6: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 67, 0]]
** centroid: 7, normalized-entropy: 0.11058084476988722, [(1, 1), (2, 67)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22065131871987587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22065131871987587, 0.19526655619302163] ***
*** starting iteration: 2; err: [Inf, 0.22065131871987587, 0.19526655619302163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22065131871987587, 0.19526655619302163, 0.19073100436082308] ***
*** starting iteration: 3; err: [Inf, 0.22065131871987587, 0.19526655619302163, 0.19073100436082308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22065131871987587, 0.19526655619302163, 0.19073100436082308, 0.18986795041598437] ***
*** finished computation of 7 references, err: [Inf, 0.22065131871987587, 0.19526655619302163, 0.19073100436082308, 0.18986795041598437] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 111, 19]]
** centroid: 1, normalized-entropy: 0.6001310136416094, [(2, 111), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [45, 6, 0]]
** centroid: 3, normalized-entropy: 0.5225593745369407, [(1, 45), (2, 6)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [68, 19, 0]]
** centroid: 4, normalized-entropy: 0.7572182549240017, [(1, 68), (2, 19)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [79, 31, 0]]
** centroid: 5, normalized-entropy: 0.8579163978157118, [(1, 79), (2, 31)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [90, 8, 0]]
** centroid: 6, normalized-entropy: 0.4079059801389762, [(1, 90), (2, 8)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 86, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 13)
[0.9449928970887055, 0.9349798900697105, 0.9309758860657066, 0.9219698740656824, 0.9189788590986195, 0.8999808191424957, 0.8999748251245258, 0.8750367133600667, 0.8750247253241265, 0.8709877542212872, 0.8679607751464039, 0.8440086793380206, 0.7929935923947901]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9449928970887055
finished with 13
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 13)
[0.9449928970887055, 0.9349798900697105, 0.9309758860657066, 0.9219698740656824, 0.9189788590986195, 0.8999808191424957, 0.8999748251245258, 0.8750367133600667, 0.8750247253241265, 0.8709877542212872, 0.8679607751464039, 0.8440086793380206, 0.7929935923947901]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9449928970887055
finished with 13
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 13)
[0.9449928970887055, 0.9349798900697105, 0.9309758860657066, 0.9219698740656824, 0.9189788590986195, 0.8999808191424957, 0.8999748251245258, 0.8750367133600667, 0.8750247253241265, 0.8709877542212872, 0.8679607751464039, 0.8440086793380206, 0.7929935923947901]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9449928970887055
finished with 14
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.4094155720538563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4094155720538563, 0.26182427552777593] ***
*** starting iteration: 2; err: [Inf, 0.4094155720538563, 0.26182427552777593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4094155720538563, 0.26182427552777593, 0.23692085576878563] ***
*** starting iteration: 3; err: [Inf, 0.4094155720538563, 0.26182427552777593, 0.23692085576878563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4094155720538563, 0.26182427552777593, 0.23692085576878563, 0.23358989883963768] ***
*** finished computation of 3 references, err: [Inf, 0.4094155720538563, 0.26182427552777593, 0.23692085576878563, 0.23358989883963768] ***
*** center 1: selecting labels [1] (freq >= 2) [from [211, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [81, 182, 19]]
** centroid: 2, normalized-entropy: 0.7488294574366069, [(1, 81), (2, 182), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [102, 71, 0]]
** centroid: 3, normalized-entropy: 0.9767124451747305, [(1, 102), (2, 71)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39518641087336875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39518641087336875, 0.2715398917837568] ***
*** starting iteration: 2; err: [Inf, 0.39518641087336875, 0.2715398917837568] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39518641087336875, 0.2715398917837568, 0.24536213604384277] ***
*** starting iteration: 3; err: [Inf, 0.39518641087336875, 0.2715398917837568, 0.24536213604384277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39518641087336875, 0.2715398917837568, 0.24536213604384277, 0.2376430134304326] ***
*** finished computation of 3 references, err: [Inf, 0.39518641087336875, 0.2715398917837568, 0.24536213604384277, 0.2376430134304326] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [223, 42, 0]]
** centroid: 1, normalized-entropy: 0.6306862496809922, [(1, 223), (2, 42)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 196, 20]]
** centroid: 2, normalized-entropy: 0.44506485705083854, [(2, 196), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [172, 14, 0]]
** centroid: 3, normalized-entropy: 0.3852851190780996, [(1, 172), (2, 14)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3310696387515477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3310696387515477, 0.23261286230894668] ***
*** starting iteration: 2; err: [Inf, 0.3310696387515477, 0.23261286230894668] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3310696387515477, 0.23261286230894668, 0.22939269817811248] ***
*** starting iteration: 3; err: [Inf, 0.3310696387515477, 0.23261286230894668, 0.22939269817811248] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3310696387515477, 0.23261286230894668, 0.22939269817811248, 0.2284326196342394] ***
*** finished computation of 3 references, err: [Inf, 0.3310696387515477, 0.23261286230894668, 0.22939269817811248, 0.2284326196342394] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [222, 24, 0]]
** centroid: 1, normalized-entropy: 0.4612160405139095, [(1, 222), (2, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [165, 32, 0]]
** centroid: 2, normalized-entropy: 0.6401068176768857, [(1, 165), (2, 32)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 205, 19]]
** centroid: 3, normalized-entropy: 0.41894401511990526, [(2, 205), (3, 19)]
finished with 6 centroids; started with 3
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.189092697464861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.189092697464861, 0.15611956899426876] ***
*** starting iteration: 2; err: [Inf, 0.189092697464861, 0.15611956899426876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.189092697464861, 0.15611956899426876, 0.15389104605000467] ***
*** starting iteration: 3; err: [Inf, 0.189092697464861, 0.15611956899426876, 0.15389104605000467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.189092697464861, 0.15611956899426876, 0.15389104605000467, 0.15317961834464222] ***
*** finished computation of 7 references, err: [Inf, 0.189092697464861, 0.15611956899426876, 0.15389104605000467, 0.15317961834464222] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 93, 6]]
** centroid: 1, normalized-entropy: 0.32984607020714635, [(2, 93), (3, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [140, 10, 0]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(1, 140), (2, 10)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [91, 54, 0]]
** centroid: 3, normalized-entropy: 0.952507452946599, [(1, 91), (2, 54)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 121, 23]]
** centroid: 4, normalized-entropy: 0.6336446076955261, [(2, 121), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [37, 86, 0]]
** centroid: 5, normalized-entropy: 0.8822824449111785, [(1, 37), (2, 86)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [111, 19, 0]]
** centroid: 6, normalized-entropy: 0.6001310136416094, [(1, 111), (2, 19)]
*** center 7: selecting labels [1] (freq >= 2) [from [209, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3199210572903976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3199210572903976, 0.17647185682319105] ***
*** starting iteration: 2; err: [Inf, 0.3199210572903976, 0.17647185682319105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3199210572903976, 0.17647185682319105, 0.1618508927542716] ***
*** starting iteration: 3; err: [Inf, 0.3199210572903976, 0.17647185682319105, 0.1618508927542716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3199210572903976, 0.17647185682319105, 0.1618508927542716, 0.15560141095519067] ***
*** starting iteration: 4; err: [Inf, 0.3199210572903976, 0.17647185682319105, 0.1618508927542716, 0.15560141095519067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3199210572903976, 0.17647185682319105, 0.1618508927542716, 0.15560141095519067, 0.15216774660162627] ***
*** starting iteration: 5; err: [Inf, 0.3199210572903976, 0.17647185682319105, 0.1618508927542716, 0.15560141095519067, 0.15216774660162627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3199210572903976, 0.17647185682319105, 0.1618508927542716, 0.15560141095519067, 0.15216774660162627, 0.1512337029762566] ***
*** finished computation of 7 references, err: [Inf, 0.3199210572903976, 0.17647185682319105, 0.1618508927542716, 0.15560141095519067, 0.15216774660162627, 0.1512337029762566] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [18, 70, 0]]
** centroid: 1, normalized-entropy: 0.7309263775906009, [(1, 18), (2, 70)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [21, 42, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 21), (2, 42)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [40, 5, 0]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(1, 40), (2, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 66, 16]]
** centroid: 4, normalized-entropy: 0.7120640548905481, [(2, 66), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [82, 11, 0]]
** centroid: 5, normalized-entropy: 0.5243952392403632, [(1, 82), (2, 11)]
*** center 6: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23602751910872757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23602751910872757, 0.16394831177126618] ***
*** starting iteration: 2; err: [Inf, 0.23602751910872757, 0.16394831177126618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23602751910872757, 0.16394831177126618, 0.15222600014321505] ***
*** starting iteration: 3; err: [Inf, 0.23602751910872757, 0.16394831177126618, 0.15222600014321505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23602751910872757, 0.16394831177126618, 0.15222600014321505, 0.14970055520348252] ***
*** starting iteration: 4; err: [Inf, 0.23602751910872757, 0.16394831177126618, 0.15222600014321505, 0.14970055520348252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23602751910872757, 0.16394831177126618, 0.15222600014321505, 0.14970055520348252, 0.14812576605565847] ***
*** starting iteration: 5; err: [Inf, 0.23602751910872757, 0.16394831177126618, 0.15222600014321505, 0.14970055520348252, 0.14812576605565847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23602751910872757, 0.16394831177126618, 0.15222600014321505, 0.14970055520348252, 0.14812576605565847, 0.1475160877481103] ***
*** finished computation of 7 references, err: [Inf, 0.23602751910872757, 0.16394831177126618, 0.15222600014321505, 0.14970055520348252, 0.14812576605565847, 0.1475160877481103] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [42, 12, 0]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(1, 42), (2, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [10, 75, 0]]
** centroid: 3, normalized-entropy: 0.5225593745369407, [(1, 10), (2, 75)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 54, 12]]
** centroid: 4, normalized-entropy: 0.6840384356390419, [(2, 54), (3, 12)]
*** center 5: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [22, 56, 0]]
** centroid: 6, normalized-entropy: 0.8582307926411409, [(1, 22), (2, 56)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [58, 3, 0]]
** centroid: 7, normalized-entropy: 0.28290479297989196, [(1, 58), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18497628780081868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18497628780081868, 0.15380405314639212] ***
*** starting iteration: 2; err: [Inf, 0.18497628780081868, 0.15380405314639212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18497628780081868, 0.15380405314639212, 0.15154401632025838] ***
*** starting iteration: 3; err: [Inf, 0.18497628780081868, 0.15380405314639212, 0.15154401632025838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18497628780081868, 0.15380405314639212, 0.15154401632025838, 0.15042984111607074] ***
*** starting iteration: 4; err: [Inf, 0.18497628780081868, 0.15380405314639212, 0.15154401632025838, 0.15042984111607074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18497628780081868, 0.15380405314639212, 0.15154401632025838, 0.15042984111607074, 0.14972742700297387] ***
*** finished computation of 7 references, err: [Inf, 0.18497628780081868, 0.15380405314639212, 0.15154401632025838, 0.15042984111607074, 0.14972742700297387] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [21, 58, 0]]
** centroid: 1, normalized-entropy: 0.8354065254460503, [(1, 21), (2, 58)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [75, 4, 0]]
** centroid: 2, normalized-entropy: 0.2890794597316462, [(1, 75), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 86, 14]]
** centroid: 3, normalized-entropy: 0.5842388116428561, [(2, 86), (3, 14)]
*** center 4: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [36, 25, 0]]
** centroid: 5, normalized-entropy: 0.9764143081154868, [(1, 36), (2, 25)]
*** center 6: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [43, 22, 0]]
** centroid: 7, normalized-entropy: 0.9233388889944429, [(1, 43), (2, 22)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23899551325663923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23899551325663923, 0.16604357267450542] ***
*** starting iteration: 2; err: [Inf, 0.23899551325663923, 0.16604357267450542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23899551325663923, 0.16604357267450542, 0.15068804031936453] ***
*** starting iteration: 3; err: [Inf, 0.23899551325663923, 0.16604357267450542, 0.15068804031936453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23899551325663923, 0.16604357267450542, 0.15068804031936453, 0.14919743216363712] ***
*** starting iteration: 4; err: [Inf, 0.23899551325663923, 0.16604357267450542, 0.15068804031936453, 0.14919743216363712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23899551325663923, 0.16604357267450542, 0.15068804031936453, 0.14919743216363712, 0.14849551908951253] ***
*** finished computation of 7 references, err: [Inf, 0.23899551325663923, 0.16604357267450542, 0.15068804031936453, 0.14919743216363712, 0.14849551908951253] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 50, 14]]
** centroid: 1, normalized-entropy: 0.7578784625383954, [(2, 50), (3, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [84, 10, 0]]
** centroid: 2, normalized-entropy: 0.48890859144051524, [(1, 84), (2, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [38, 32, 0]]
** centroid: 4, normalized-entropy: 0.9946937953613056, [(1, 38), (2, 32)]
*** center 5: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 46, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [12, 45, 0]]
** centroid: 7, normalized-entropy: 0.7424875695421234, [(1, 12), (2, 45)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20512721171975135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20512721171975135, 0.16227524827234446] ***
*** starting iteration: 2; err: [Inf, 0.20512721171975135, 0.16227524827234446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20512721171975135, 0.16227524827234446, 0.15790009254403412] ***
*** starting iteration: 3; err: [Inf, 0.20512721171975135, 0.16227524827234446, 0.15790009254403412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20512721171975135, 0.16227524827234446, 0.15790009254403412, 0.1540619210721925] ***
*** starting iteration: 4; err: [Inf, 0.20512721171975135, 0.16227524827234446, 0.15790009254403412, 0.1540619210721925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20512721171975135, 0.16227524827234446, 0.15790009254403412, 0.1540619210721925, 0.15151525766216217] ***
*** starting iteration: 5; err: [Inf, 0.20512721171975135, 0.16227524827234446, 0.15790009254403412, 0.1540619210721925, 0.15151525766216217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20512721171975135, 0.16227524827234446, 0.15790009254403412, 0.1540619210721925, 0.15151525766216217, 0.14933068896085025] ***
*** starting iteration: 6; err: [Inf, 0.20512721171975135, 0.16227524827234446, 0.15790009254403412, 0.1540619210721925, 0.15151525766216217, 0.14933068896085025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20512721171975135, 0.16227524827234446, 0.15790009254403412, 0.1540619210721925, 0.15151525766216217, 0.14933068896085025, 0.14835514223761856] ***
*** finished computation of 7 references, err: [Inf, 0.20512721171975135, 0.16227524827234446, 0.15790009254403412, 0.1540619210721925, 0.15151525766216217, 0.14933068896085025, 0.14835514223761856] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [38, 12, 0]]
** centroid: 1, normalized-entropy: 0.7950402793845225, [(1, 38), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [59, 9, 0]]
** centroid: 2, normalized-entropy: 0.5638560041131417, [(1, 59), (2, 9)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [25, 46, 0]]
** centroid: 3, normalized-entropy: 0.935940714955517, [(1, 25), (2, 46)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 71, 17]]
** centroid: 4, normalized-entropy: 0.7080803256135676, [(2, 71), (3, 17)]
*** center 5: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [17, 51, 0]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(1, 17), (2, 51)]
*** center 7: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28294211024418475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28294211024418475, 0.1729825887903571] ***
*** starting iteration: 2; err: [Inf, 0.28294211024418475, 0.1729825887903571] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28294211024418475, 0.1729825887903571, 0.16075924638006836] ***
*** starting iteration: 3; err: [Inf, 0.28294211024418475, 0.1729825887903571, 0.16075924638006836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28294211024418475, 0.1729825887903571, 0.16075924638006836, 0.15429754417482763] ***
*** starting iteration: 4; err: [Inf, 0.28294211024418475, 0.1729825887903571, 0.16075924638006836, 0.15429754417482763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28294211024418475, 0.1729825887903571, 0.16075924638006836, 0.15429754417482763, 0.14984946939349175] ***
*** starting iteration: 5; err: [Inf, 0.28294211024418475, 0.1729825887903571, 0.16075924638006836, 0.15429754417482763, 0.14984946939349175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28294211024418475, 0.1729825887903571, 0.16075924638006836, 0.15429754417482763, 0.14984946939349175, 0.14674450167827308] ***
*** starting iteration: 6; err: [Inf, 0.28294211024418475, 0.1729825887903571, 0.16075924638006836, 0.15429754417482763, 0.14984946939349175, 0.14674450167827308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28294211024418475, 0.1729825887903571, 0.16075924638006836, 0.15429754417482763, 0.14984946939349175, 0.14674450167827308, 0.14419162828288973] ***
*** starting iteration: 7; err: [Inf, 0.28294211024418475, 0.1729825887903571, 0.16075924638006836, 0.15429754417482763, 0.14984946939349175, 0.14674450167827308, 0.14419162828288973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28294211024418475, 0.1729825887903571, 0.16075924638006836, 0.15429754417482763, 0.14984946939349175, 0.14674450167827308, 0.14419162828288973, 0.1426976482272148] ***
*** starting iteration: 8; err: [Inf, 0.28294211024418475, 0.1729825887903571, 0.16075924638006836, 0.15429754417482763, 0.14984946939349175, 0.14674450167827308, 0.14419162828288973, 0.1426976482272148] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28294211024418475, 0.1729825887903571, 0.16075924638006836, 0.15429754417482763, 0.14984946939349175, 0.14674450167827308, 0.14419162828288973, 0.1426976482272148, 0.14192110951058567] ***
*** finished computation of 7 references, err: [Inf, 0.28294211024418475, 0.1729825887903571, 0.16075924638006836, 0.15429754417482763, 0.14984946939349175, 0.14674450167827308, 0.14419162828288973, 0.1426976482272148, 0.14192110951058567] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 57, 17]]
** centroid: 1, normalized-entropy: 0.77753986416076, [(2, 57), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [86, 3, 0]]
** centroid: 3, normalized-entropy: 0.21265863988163503, [(1, 86), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [35, 39, 0]]
** centroid: 4, normalized-entropy: 0.9978913098356861, [(1, 35), (2, 39)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [55, 4, 0]]
** centroid: 5, normalized-entropy: 0.3576467062456333, [(1, 55), (2, 4)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [45, 10, 0]]
** centroid: 6, normalized-entropy: 0.6840384356390419, [(1, 45), (2, 10)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26023206845857205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26023206845857205, 0.1748539723623544] ***
*** starting iteration: 2; err: [Inf, 0.26023206845857205, 0.1748539723623544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472] ***
*** starting iteration: 3; err: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557] ***
*** starting iteration: 4; err: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557, 0.15436265285965056] ***
*** starting iteration: 5; err: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557, 0.15436265285965056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557, 0.15436265285965056, 0.15181648757308722] ***
*** starting iteration: 6; err: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557, 0.15436265285965056, 0.15181648757308722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557, 0.15436265285965056, 0.15181648757308722, 0.15053559784963727] ***
*** starting iteration: 7; err: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557, 0.15436265285965056, 0.15181648757308722, 0.15053559784963727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557, 0.15436265285965056, 0.15181648757308722, 0.15053559784963727, 0.14951252189464867] ***
*** starting iteration: 8; err: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557, 0.15436265285965056, 0.15181648757308722, 0.15053559784963727, 0.14951252189464867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557, 0.15436265285965056, 0.15181648757308722, 0.15053559784963727, 0.14951252189464867, 0.14836495845019818] ***
*** starting iteration: 9; err: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557, 0.15436265285965056, 0.15181648757308722, 0.15053559784963727, 0.14951252189464867, 0.14836495845019818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557, 0.15436265285965056, 0.15181648757308722, 0.15053559784963727, 0.14951252189464867, 0.14836495845019818, 0.14667387776263058] ***
*** starting iteration: 10; err: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557, 0.15436265285965056, 0.15181648757308722, 0.15053559784963727, 0.14951252189464867, 0.14836495845019818, 0.14667387776263058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557, 0.15436265285965056, 0.15181648757308722, 0.15053559784963727, 0.14951252189464867, 0.14836495845019818, 0.14667387776263058, 0.14515149557963014] ***
*** finished computation of 7 references, err: [Inf, 0.26023206845857205, 0.1748539723623544, 0.16341542490385472, 0.1578343925252557, 0.15436265285965056, 0.15181648757308722, 0.15053559784963727, 0.14951252189464867, 0.14836495845019818, 0.14667387776263058, 0.14515149557963014] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [47, 33, 0]]
** centroid: 1, normalized-entropy: 0.9777945702913884, [(1, 47), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [26, 36, 0]]
** centroid: 2, normalized-entropy: 0.9811522341999134, [(1, 26), (2, 36)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 59, 16]]
** centroid: 3, normalized-entropy: 0.7478061583312324, [(2, 59), (3, 16)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 47, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [68, 10, 0]]
** centroid: 5, normalized-entropy: 0.552495114325111, [(1, 68), (2, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2200851599164307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2200851599164307, 0.17098660783935338] ***
*** starting iteration: 2; err: [Inf, 0.2200851599164307, 0.17098660783935338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2200851599164307, 0.17098660783935338, 0.15903570087626576] ***
*** starting iteration: 3; err: [Inf, 0.2200851599164307, 0.17098660783935338, 0.15903570087626576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2200851599164307, 0.17098660783935338, 0.15903570087626576, 0.15286893967632204] ***
*** starting iteration: 4; err: [Inf, 0.2200851599164307, 0.17098660783935338, 0.15903570087626576, 0.15286893967632204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2200851599164307, 0.17098660783935338, 0.15903570087626576, 0.15286893967632204, 0.15066832890664228] ***
*** starting iteration: 5; err: [Inf, 0.2200851599164307, 0.17098660783935338, 0.15903570087626576, 0.15286893967632204, 0.15066832890664228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2200851599164307, 0.17098660783935338, 0.15903570087626576, 0.15286893967632204, 0.15066832890664228, 0.1500767549779266] ***
*** finished computation of 7 references, err: [Inf, 0.2200851599164307, 0.17098660783935338, 0.15903570087626576, 0.15286893967632204, 0.15066832890664228, 0.1500767549779266] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 77, 14]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 77), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [36, 45, 0]]
** centroid: 3, normalized-entropy: 0.9910760598382222, [(1, 36), (2, 45)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [62, 25, 0]]
** centroid: 4, normalized-entropy: 0.8652817028791377, [(1, 62), (2, 25)]
*** center 5: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [21, 33, 0]]
** centroid: 7, normalized-entropy: 0.9640787648082293, [(1, 21), (2, 33)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21974458307935857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21974458307935857, 0.16595232250355185] ***
*** starting iteration: 2; err: [Inf, 0.21974458307935857, 0.16595232250355185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21974458307935857, 0.16595232250355185, 0.15277232838608323] ***
*** starting iteration: 3; err: [Inf, 0.21974458307935857, 0.16595232250355185, 0.15277232838608323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21974458307935857, 0.16595232250355185, 0.15277232838608323, 0.148301791658625] ***
*** starting iteration: 4; err: [Inf, 0.21974458307935857, 0.16595232250355185, 0.15277232838608323, 0.148301791658625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21974458307935857, 0.16595232250355185, 0.15277232838608323, 0.148301791658625, 0.14534889508225024] ***
*** starting iteration: 5; err: [Inf, 0.21974458307935857, 0.16595232250355185, 0.15277232838608323, 0.148301791658625, 0.14534889508225024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21974458307935857, 0.16595232250355185, 0.15277232838608323, 0.148301791658625, 0.14534889508225024, 0.14381044650450348] ***
*** starting iteration: 6; err: [Inf, 0.21974458307935857, 0.16595232250355185, 0.15277232838608323, 0.148301791658625, 0.14534889508225024, 0.14381044650450348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21974458307935857, 0.16595232250355185, 0.15277232838608323, 0.148301791658625, 0.14534889508225024, 0.14381044650450348, 0.1428643976394087] ***
*** finished computation of 7 references, err: [Inf, 0.21974458307935857, 0.16595232250355185, 0.15277232838608323, 0.148301791658625, 0.14534889508225024, 0.14381044650450348, 0.1428643976394087] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 63, 12]]
** centroid: 1, normalized-entropy: 0.634309554640566, [(2, 63), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [14, 42, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 14), (2, 42)]
*** center 3: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [42, 42, 0]]
** centroid: 4, normalized-entropy: 1.0, [(1, 42), (2, 42)]
*** center 5: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [10, 58, 0]]
** centroid: 7, normalized-entropy: 0.6024308020404452, [(1, 10), (2, 58)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20702769808657467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20702769808657467, 0.16179986086301507] ***
*** starting iteration: 2; err: [Inf, 0.20702769808657467, 0.16179986086301507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20702769808657467, 0.16179986086301507, 0.15215202490240334] ***
*** starting iteration: 3; err: [Inf, 0.20702769808657467, 0.16179986086301507, 0.15215202490240334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20702769808657467, 0.16179986086301507, 0.15215202490240334, 0.14725592893268913] ***
*** starting iteration: 4; err: [Inf, 0.20702769808657467, 0.16179986086301507, 0.15215202490240334, 0.14725592893268913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20702769808657467, 0.16179986086301507, 0.15215202490240334, 0.14725592893268913, 0.14533986991643905] ***
*** starting iteration: 5; err: [Inf, 0.20702769808657467, 0.16179986086301507, 0.15215202490240334, 0.14725592893268913, 0.14533986991643905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20702769808657467, 0.16179986086301507, 0.15215202490240334, 0.14725592893268913, 0.14533986991643905, 0.1446150371376425] ***
*** finished computation of 7 references, err: [Inf, 0.20702769808657467, 0.16179986086301507, 0.15215202490240334, 0.14725592893268913, 0.14533986991643905, 0.1446150371376425] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [30, 55, 0]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(1, 30), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [60, 27, 0]]
** centroid: 2, normalized-entropy: 0.8935711016541908, [(1, 60), (2, 27)]
*** center 3: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 61, 17]]
** centroid: 4, normalized-entropy: 0.7564041945982506, [(2, 61), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [6, 44, 0]]
** centroid: 5, normalized-entropy: 0.5293608652873645, [(1, 6), (2, 44)]
*** center 6: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20717573192343117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20717573192343117, 0.1638589711971581] ***
*** starting iteration: 2; err: [Inf, 0.20717573192343117, 0.1638589711971581] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20717573192343117, 0.1638589711971581, 0.15409582759998738] ***
*** starting iteration: 3; err: [Inf, 0.20717573192343117, 0.1638589711971581, 0.15409582759998738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20717573192343117, 0.1638589711971581, 0.15409582759998738, 0.15040113103727346] ***
*** starting iteration: 4; err: [Inf, 0.20717573192343117, 0.1638589711971581, 0.15409582759998738, 0.15040113103727346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20717573192343117, 0.1638589711971581, 0.15409582759998738, 0.15040113103727346, 0.14808841307088733] ***
*** starting iteration: 5; err: [Inf, 0.20717573192343117, 0.1638589711971581, 0.15409582759998738, 0.15040113103727346, 0.14808841307088733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20717573192343117, 0.1638589711971581, 0.15409582759998738, 0.15040113103727346, 0.14808841307088733, 0.14730573434010147] ***
*** finished computation of 7 references, err: [Inf, 0.20717573192343117, 0.1638589711971581, 0.15409582759998738, 0.15040113103727346, 0.14808841307088733, 0.14730573434010147] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 61, 13]]
** centroid: 1, normalized-entropy: 0.6705250693158382, [(2, 61), (3, 13)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [71, 9, 0]]
** centroid: 2, normalized-entropy: 0.5074109636646968, [(1, 71), (2, 9)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 60, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [62, 20, 0]]
** centroid: 4, normalized-entropy: 0.8014698931335286, [(1, 62), (2, 20)]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [42, 33, 0]]
** centroid: 6, normalized-entropy: 0.9895875212220558, [(1, 42), (2, 33)]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27027499495074153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27027499495074153, 0.21803101528808475] ***
*** starting iteration: 2; err: [Inf, 0.27027499495074153, 0.21803101528808475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125] ***
*** starting iteration: 3; err: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125, 0.1803869176786393] ***
*** starting iteration: 4; err: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125, 0.1803869176786393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125, 0.1803869176786393, 0.17037711721961388] ***
*** starting iteration: 5; err: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125, 0.1803869176786393, 0.17037711721961388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125, 0.1803869176786393, 0.17037711721961388, 0.16095453281141817] ***
*** starting iteration: 6; err: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125, 0.1803869176786393, 0.17037711721961388, 0.16095453281141817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125, 0.1803869176786393, 0.17037711721961388, 0.16095453281141817, 0.15367407960258425] ***
*** starting iteration: 7; err: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125, 0.1803869176786393, 0.17037711721961388, 0.16095453281141817, 0.15367407960258425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125, 0.1803869176786393, 0.17037711721961388, 0.16095453281141817, 0.15367407960258425, 0.14936177018284796] ***
*** starting iteration: 8; err: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125, 0.1803869176786393, 0.17037711721961388, 0.16095453281141817, 0.15367407960258425, 0.14936177018284796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125, 0.1803869176786393, 0.17037711721961388, 0.16095453281141817, 0.15367407960258425, 0.14936177018284796, 0.14789877052232622] ***
*** starting iteration: 9; err: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125, 0.1803869176786393, 0.17037711721961388, 0.16095453281141817, 0.15367407960258425, 0.14936177018284796, 0.14789877052232622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125, 0.1803869176786393, 0.17037711721961388, 0.16095453281141817, 0.15367407960258425, 0.14936177018284796, 0.14789877052232622, 0.14703416041657327] ***
*** finished computation of 7 references, err: [Inf, 0.27027499495074153, 0.21803101528808475, 0.19120586956106125, 0.1803869176786393, 0.17037711721961388, 0.16095453281141817, 0.15367407960258425, 0.14936177018284796, 0.14789877052232622, 0.14703416041657327] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [45, 46, 0]]
** centroid: 1, normalized-entropy: 0.999912889501356, [(1, 45), (2, 46)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 76, 17]]
** centroid: 2, normalized-entropy: 0.6861549474202007, [(2, 76), (3, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [36, 58, 0]]
** centroid: 4, normalized-entropy: 0.9601186626422924, [(1, 36), (2, 58)]
*** center 5: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [27, 20, 0]]
** centroid: 7, normalized-entropy: 0.9839393951635759, [(1, 27), (2, 20)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25358800813369453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25358800813369453, 0.18876805524528026] ***
*** starting iteration: 2; err: [Inf, 0.25358800813369453, 0.18876805524528026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25358800813369453, 0.18876805524528026, 0.17553283670172096] ***
*** starting iteration: 3; err: [Inf, 0.25358800813369453, 0.18876805524528026, 0.17553283670172096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25358800813369453, 0.18876805524528026, 0.17553283670172096, 0.16566703560575843] ***
*** starting iteration: 4; err: [Inf, 0.25358800813369453, 0.18876805524528026, 0.17553283670172096, 0.16566703560575843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25358800813369453, 0.18876805524528026, 0.17553283670172096, 0.16566703560575843, 0.1624081202223897] ***
*** starting iteration: 5; err: [Inf, 0.25358800813369453, 0.18876805524528026, 0.17553283670172096, 0.16566703560575843, 0.1624081202223897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25358800813369453, 0.18876805524528026, 0.17553283670172096, 0.16566703560575843, 0.1624081202223897, 0.16016005645133555] ***
*** starting iteration: 6; err: [Inf, 0.25358800813369453, 0.18876805524528026, 0.17553283670172096, 0.16566703560575843, 0.1624081202223897, 0.16016005645133555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25358800813369453, 0.18876805524528026, 0.17553283670172096, 0.16566703560575843, 0.1624081202223897, 0.16016005645133555, 0.1592732132682577] ***
*** finished computation of 7 references, err: [Inf, 0.25358800813369453, 0.18876805524528026, 0.17553283670172096, 0.16566703560575843, 0.1624081202223897, 0.16016005645133555, 0.1592732132682577] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [9, 67, 0]]
** centroid: 1, normalized-entropy: 0.524805134842907, [(1, 9), (2, 67)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [75, 3, 0]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(1, 75), (2, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [116, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 47, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [93, 8, 0]]
** centroid: 5, normalized-entropy: 0.39938208242459744, [(1, 93), (2, 8)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [9, 60, 0]]
** centroid: 6, normalized-entropy: 0.5586293734521991, [(1, 9), (2, 60)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23314686782564967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23314686782564967, 0.1755370287336409] ***
*** starting iteration: 2; err: [Inf, 0.23314686782564967, 0.1755370287336409] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23314686782564967, 0.1755370287336409, 0.16439608404133468] ***
*** starting iteration: 3; err: [Inf, 0.23314686782564967, 0.1755370287336409, 0.16439608404133468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23314686782564967, 0.1755370287336409, 0.16439608404133468, 0.15875017412006856] ***
*** starting iteration: 4; err: [Inf, 0.23314686782564967, 0.1755370287336409, 0.16439608404133468, 0.15875017412006856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23314686782564967, 0.1755370287336409, 0.16439608404133468, 0.15875017412006856, 0.15594738346897066] ***
*** starting iteration: 5; err: [Inf, 0.23314686782564967, 0.1755370287336409, 0.16439608404133468, 0.15875017412006856, 0.15594738346897066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23314686782564967, 0.1755370287336409, 0.16439608404133468, 0.15875017412006856, 0.15594738346897066, 0.15418858884647488] ***
*** starting iteration: 6; err: [Inf, 0.23314686782564967, 0.1755370287336409, 0.16439608404133468, 0.15875017412006856, 0.15594738346897066, 0.15418858884647488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23314686782564967, 0.1755370287336409, 0.16439608404133468, 0.15875017412006856, 0.15594738346897066, 0.15418858884647488, 0.15342283149063587] ***
*** finished computation of 7 references, err: [Inf, 0.23314686782564967, 0.1755370287336409, 0.16439608404133468, 0.15875017412006856, 0.15594738346897066, 0.15418858884647488, 0.15342283149063587] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [56, 25, 0]]
** centroid: 1, normalized-entropy: 0.8915996278279094, [(1, 56), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [51, 38, 0]]
** centroid: 2, normalized-entropy: 0.9845543528607513, [(1, 51), (2, 38)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 78, 14]]
** centroid: 3, normalized-entropy: 0.6152538910563409, [(2, 78), (3, 14)]
*** center 4: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [26, 55, 0]]
** centroid: 6, normalized-entropy: 0.9054522631867892, [(1, 26), (2, 55)]
*** center 7: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20239586223242803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20239586223242803, 0.1605288760345429] ***
*** starting iteration: 2; err: [Inf, 0.20239586223242803, 0.1605288760345429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20239586223242803, 0.1605288760345429, 0.15610964038223027] ***
*** starting iteration: 3; err: [Inf, 0.20239586223242803, 0.1605288760345429, 0.15610964038223027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20239586223242803, 0.1605288760345429, 0.15610964038223027, 0.15468391512706875] ***
*** starting iteration: 4; err: [Inf, 0.20239586223242803, 0.1605288760345429, 0.15610964038223027, 0.15468391512706875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20239586223242803, 0.1605288760345429, 0.15610964038223027, 0.15468391512706875, 0.15388810576498507] ***
*** finished computation of 7 references, err: [Inf, 0.20239586223242803, 0.1605288760345429, 0.15610964038223027, 0.15468391512706875, 0.15388810576498507] ***
*** center 1: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 76, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [52, 26, 0]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(1, 52), (2, 26)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 77, 13]]
** centroid: 4, normalized-entropy: 0.5957610966703235, [(2, 77), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [73, 4, 0]]
** centroid: 5, normalized-entropy: 0.29461520565280713, [(1, 73), (2, 4)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [42, 14, 0]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(1, 42), (2, 14)]
*** center 7: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21747138836421073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21747138836421073, 0.1599989738930017] ***
*** starting iteration: 2; err: [Inf, 0.21747138836421073, 0.1599989738930017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21747138836421073, 0.1599989738930017, 0.15261025693453847] ***
*** starting iteration: 3; err: [Inf, 0.21747138836421073, 0.1599989738930017, 0.15261025693453847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21747138836421073, 0.1599989738930017, 0.15261025693453847, 0.1507483869474381] ***
*** starting iteration: 4; err: [Inf, 0.21747138836421073, 0.1599989738930017, 0.15261025693453847, 0.1507483869474381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21747138836421073, 0.1599989738930017, 0.15261025693453847, 0.1507483869474381, 0.14926141448086128] ***
*** starting iteration: 5; err: [Inf, 0.21747138836421073, 0.1599989738930017, 0.15261025693453847, 0.1507483869474381, 0.14926141448086128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21747138836421073, 0.1599989738930017, 0.15261025693453847, 0.1507483869474381, 0.14926141448086128, 0.1474141254683491] ***
*** starting iteration: 6; err: [Inf, 0.21747138836421073, 0.1599989738930017, 0.15261025693453847, 0.1507483869474381, 0.14926141448086128, 0.1474141254683491] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21747138836421073, 0.1599989738930017, 0.15261025693453847, 0.1507483869474381, 0.14926141448086128, 0.1474141254683491, 0.14619704157393426] ***
*** starting iteration: 7; err: [Inf, 0.21747138836421073, 0.1599989738930017, 0.15261025693453847, 0.1507483869474381, 0.14926141448086128, 0.1474141254683491, 0.14619704157393426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21747138836421073, 0.1599989738930017, 0.15261025693453847, 0.1507483869474381, 0.14926141448086128, 0.1474141254683491, 0.14619704157393426, 0.1454431746136397] ***
*** finished computation of 7 references, err: [Inf, 0.21747138836421073, 0.1599989738930017, 0.15261025693453847, 0.1507483869474381, 0.14926141448086128, 0.1474141254683491, 0.14619704157393426, 0.1454431746136397] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 83, 14]]
** centroid: 1, normalized-entropy: 0.5954670513561874, [(2, 83), (3, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [34, 43, 0]]
** centroid: 2, normalized-entropy: 0.9901226308935799, [(1, 34), (2, 43)]
*** center 3: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [42, 18, 0]]
** centroid: 4, normalized-entropy: 0.8812908992306927, [(1, 42), (2, 18)]
*** center 5: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 57, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18292766058817506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18292766058817506, 0.1553303167115664] ***
*** starting iteration: 2; err: [Inf, 0.18292766058817506, 0.1553303167115664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18292766058817506, 0.1553303167115664, 0.1514550516498275] ***
*** starting iteration: 3; err: [Inf, 0.18292766058817506, 0.1553303167115664, 0.1514550516498275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18292766058817506, 0.1553303167115664, 0.1514550516498275, 0.1494273908364121] ***
*** starting iteration: 4; err: [Inf, 0.18292766058817506, 0.1553303167115664, 0.1514550516498275, 0.1494273908364121] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18292766058817506, 0.1553303167115664, 0.1514550516498275, 0.1494273908364121, 0.14799194107949734] ***
*** starting iteration: 5; err: [Inf, 0.18292766058817506, 0.1553303167115664, 0.1514550516498275, 0.1494273908364121, 0.14799194107949734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18292766058817506, 0.1553303167115664, 0.1514550516498275, 0.1494273908364121, 0.14799194107949734, 0.14698612149246038] ***
*** starting iteration: 6; err: [Inf, 0.18292766058817506, 0.1553303167115664, 0.1514550516498275, 0.1494273908364121, 0.14799194107949734, 0.14698612149246038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18292766058817506, 0.1553303167115664, 0.1514550516498275, 0.1494273908364121, 0.14799194107949734, 0.14698612149246038, 0.14632680673338472] ***
*** finished computation of 7 references, err: [Inf, 0.18292766058817506, 0.1553303167115664, 0.1514550516498275, 0.1494273908364121, 0.14799194107949734, 0.14698612149246038, 0.14632680673338472] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 60, 14]]
** centroid: 1, normalized-entropy: 0.699772221773307, [(2, 60), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [1, 62, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [17, 75, 0]]
** centroid: 5, normalized-entropy: 0.6904285855304167, [(1, 17), (2, 75)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [55, 13, 0]]
** centroid: 6, normalized-entropy: 0.7039260680195971, [(1, 55), (2, 13)]
*** center 7: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2168523488296196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2168523488296196, 0.16031421813345514] ***
*** starting iteration: 2; err: [Inf, 0.2168523488296196, 0.16031421813345514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2168523488296196, 0.16031421813345514, 0.15580393831431866] ***
*** starting iteration: 3; err: [Inf, 0.2168523488296196, 0.16031421813345514, 0.15580393831431866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2168523488296196, 0.16031421813345514, 0.15580393831431866, 0.15452660739421845] ***
*** starting iteration: 4; err: [Inf, 0.2168523488296196, 0.16031421813345514, 0.15580393831431866, 0.15452660739421845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2168523488296196, 0.16031421813345514, 0.15580393831431866, 0.15452660739421845, 0.15280729391705244] ***
*** starting iteration: 5; err: [Inf, 0.2168523488296196, 0.16031421813345514, 0.15580393831431866, 0.15452660739421845, 0.15280729391705244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2168523488296196, 0.16031421813345514, 0.15580393831431866, 0.15452660739421845, 0.15280729391705244, 0.15032556597515942] ***
*** starting iteration: 6; err: [Inf, 0.2168523488296196, 0.16031421813345514, 0.15580393831431866, 0.15452660739421845, 0.15280729391705244, 0.15032556597515942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2168523488296196, 0.16031421813345514, 0.15580393831431866, 0.15452660739421845, 0.15280729391705244, 0.15032556597515942, 0.14951062976010143] ***
*** finished computation of 7 references, err: [Inf, 0.2168523488296196, 0.16031421813345514, 0.15580393831431866, 0.15452660739421845, 0.15280729391705244, 0.15032556597515942, 0.14951062976010143] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [37, 28, 0]]
** centroid: 1, normalized-entropy: 0.9861260846302384, [(1, 37), (2, 28)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [52, 25, 0]]
** centroid: 2, normalized-entropy: 0.9093934226727598, [(1, 52), (2, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [5, 76, 0]]
** centroid: 3, normalized-entropy: 0.33426813256179383, [(1, 5), (2, 76)]
*** center 4: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 64, 12]]
** centroid: 6, normalized-entropy: 0.6292492238560344, [(2, 64), (3, 12)]
*** center 7: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22659169471263885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22659169471263885, 0.16850024428777396] ***
*** starting iteration: 2; err: [Inf, 0.22659169471263885, 0.16850024428777396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22659169471263885, 0.16850024428777396, 0.157374110809993] ***
*** starting iteration: 3; err: [Inf, 0.22659169471263885, 0.16850024428777396, 0.157374110809993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22659169471263885, 0.16850024428777396, 0.157374110809993, 0.15297022499144078] ***
*** starting iteration: 4; err: [Inf, 0.22659169471263885, 0.16850024428777396, 0.157374110809993, 0.15297022499144078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22659169471263885, 0.16850024428777396, 0.157374110809993, 0.15297022499144078, 0.14994149386603386] ***
*** starting iteration: 5; err: [Inf, 0.22659169471263885, 0.16850024428777396, 0.157374110809993, 0.15297022499144078, 0.14994149386603386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22659169471263885, 0.16850024428777396, 0.157374110809993, 0.15297022499144078, 0.14994149386603386, 0.14818748016282915] ***
*** starting iteration: 6; err: [Inf, 0.22659169471263885, 0.16850024428777396, 0.157374110809993, 0.15297022499144078, 0.14994149386603386, 0.14818748016282915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22659169471263885, 0.16850024428777396, 0.157374110809993, 0.15297022499144078, 0.14994149386603386, 0.14818748016282915, 0.14726807685382665] ***
*** finished computation of 7 references, err: [Inf, 0.22659169471263885, 0.16850024428777396, 0.157374110809993, 0.15297022499144078, 0.14994149386603386, 0.14818748016282915, 0.14726807685382665] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [37, 19, 0]]
** centroid: 1, normalized-entropy: 0.9241335419915458, [(1, 37), (2, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [50, 39, 0]]
** centroid: 4, normalized-entropy: 0.9889525767600615, [(1, 50), (2, 39)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 71, 15]]
** centroid: 5, normalized-entropy: 0.6677135405281421, [(2, 71), (3, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [15, 60, 0]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(1, 15), (2, 60)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18426137099601328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18426137099601328, 0.16237920530512928] ***
*** starting iteration: 2; err: [Inf, 0.18426137099601328, 0.16237920530512928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18426137099601328, 0.16237920530512928, 0.1581255059055984] ***
*** starting iteration: 3; err: [Inf, 0.18426137099601328, 0.16237920530512928, 0.1581255059055984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18426137099601328, 0.16237920530512928, 0.1581255059055984, 0.15415199143253266] ***
*** starting iteration: 4; err: [Inf, 0.18426137099601328, 0.16237920530512928, 0.1581255059055984, 0.15415199143253266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18426137099601328, 0.16237920530512928, 0.1581255059055984, 0.15415199143253266, 0.15090858620777725] ***
*** starting iteration: 5; err: [Inf, 0.18426137099601328, 0.16237920530512928, 0.1581255059055984, 0.15415199143253266, 0.15090858620777725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18426137099601328, 0.16237920530512928, 0.1581255059055984, 0.15415199143253266, 0.15090858620777725, 0.1492470218548551] ***
*** starting iteration: 6; err: [Inf, 0.18426137099601328, 0.16237920530512928, 0.1581255059055984, 0.15415199143253266, 0.15090858620777725, 0.1492470218548551] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18426137099601328, 0.16237920530512928, 0.1581255059055984, 0.15415199143253266, 0.15090858620777725, 0.1492470218548551, 0.1481612192131579] ***
*** starting iteration: 7; err: [Inf, 0.18426137099601328, 0.16237920530512928, 0.1581255059055984, 0.15415199143253266, 0.15090858620777725, 0.1492470218548551, 0.1481612192131579] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18426137099601328, 0.16237920530512928, 0.1581255059055984, 0.15415199143253266, 0.15090858620777725, 0.1492470218548551, 0.1481612192131579, 0.14737612671218814] ***
*** finished computation of 7 references, err: [Inf, 0.18426137099601328, 0.16237920530512928, 0.1581255059055984, 0.15415199143253266, 0.15090858620777725, 0.1492470218548551, 0.1481612192131579, 0.14737612671218814] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [11, 39, 0]]
** centroid: 1, normalized-entropy: 0.7601675029619658, [(1, 11), (2, 39)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [42, 37, 0]]
** centroid: 2, normalized-entropy: 0.9971085167216716, [(1, 42), (2, 37)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [89, 4, 0]]
** centroid: 3, normalized-entropy: 0.2559300438391133, [(1, 89), (2, 4)]
*** center 4: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 45, 19]]
** centroid: 5, normalized-entropy: 0.877437311089633, [(2, 45), (3, 19)]
*** center 6: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22640167921595275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22640167921595275, 0.17047367531061172] ***
*** starting iteration: 2; err: [Inf, 0.22640167921595275, 0.17047367531061172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22640167921595275, 0.17047367531061172, 0.1532923302021809] ***
*** starting iteration: 3; err: [Inf, 0.22640167921595275, 0.17047367531061172, 0.1532923302021809] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22640167921595275, 0.17047367531061172, 0.1532923302021809, 0.1499706453094259] ***
*** starting iteration: 4; err: [Inf, 0.22640167921595275, 0.17047367531061172, 0.1532923302021809, 0.1499706453094259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22640167921595275, 0.17047367531061172, 0.1532923302021809, 0.1499706453094259, 0.14854835642222314] ***
*** starting iteration: 5; err: [Inf, 0.22640167921595275, 0.17047367531061172, 0.1532923302021809, 0.1499706453094259, 0.14854835642222314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22640167921595275, 0.17047367531061172, 0.1532923302021809, 0.1499706453094259, 0.14854835642222314, 0.1473612052369863] ***
*** starting iteration: 6; err: [Inf, 0.22640167921595275, 0.17047367531061172, 0.1532923302021809, 0.1499706453094259, 0.14854835642222314, 0.1473612052369863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22640167921595275, 0.17047367531061172, 0.1532923302021809, 0.1499706453094259, 0.14854835642222314, 0.1473612052369863, 0.14651235760375858] ***
*** finished computation of 7 references, err: [Inf, 0.22640167921595275, 0.17047367531061172, 0.1532923302021809, 0.1499706453094259, 0.14854835642222314, 0.1473612052369863, 0.14651235760375858] ***
*** center 1: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [10, 51, 0]]
** centroid: 2, normalized-entropy: 0.6436394131461666, [(1, 10), (2, 51)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 53, 13]]
** centroid: 3, normalized-entropy: 0.7158259310602146, [(2, 53), (3, 13)]
*** center 4: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [4, 59, 0]]
** centroid: 5, normalized-entropy: 0.3411538931451763, [(1, 4), (2, 59)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [43, 34, 0]]
** centroid: 6, normalized-entropy: 0.9901226308935799, [(1, 43), (2, 34)]
*** center 7: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21271232895739375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21271232895739375, 0.16328234700416214] ***
*** starting iteration: 2; err: [Inf, 0.21271232895739375, 0.16328234700416214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21271232895739375, 0.16328234700416214, 0.15523302281741053] ***
*** starting iteration: 3; err: [Inf, 0.21271232895739375, 0.16328234700416214, 0.15523302281741053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21271232895739375, 0.16328234700416214, 0.15523302281741053, 0.1516130766943097] ***
*** starting iteration: 4; err: [Inf, 0.21271232895739375, 0.16328234700416214, 0.15523302281741053, 0.1516130766943097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21271232895739375, 0.16328234700416214, 0.15523302281741053, 0.1516130766943097, 0.1489462563060224] ***
*** starting iteration: 5; err: [Inf, 0.21271232895739375, 0.16328234700416214, 0.15523302281741053, 0.1516130766943097, 0.1489462563060224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21271232895739375, 0.16328234700416214, 0.15523302281741053, 0.1516130766943097, 0.1489462563060224, 0.1478909339508973] ***
*** starting iteration: 6; err: [Inf, 0.21271232895739375, 0.16328234700416214, 0.15523302281741053, 0.1516130766943097, 0.1489462563060224, 0.1478909339508973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21271232895739375, 0.16328234700416214, 0.15523302281741053, 0.1516130766943097, 0.1489462563060224, 0.1478909339508973, 0.1476284021437168] ***
*** finished computation of 7 references, err: [Inf, 0.21271232895739375, 0.16328234700416214, 0.15523302281741053, 0.1516130766943097, 0.1489462563060224, 0.1478909339508973, 0.1476284021437168] ***
*** center 1: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [29, 13, 0]]
** centroid: 2, normalized-entropy: 0.8926230133850988, [(1, 29), (2, 13)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [22, 52, 0]]
** centroid: 3, normalized-entropy: 0.8779620013943914, [(1, 22), (2, 52)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [62, 27, 0]]
** centroid: 4, normalized-entropy: 0.8853723770068483, [(1, 62), (2, 27)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 78, 19]]
** centroid: 5, normalized-entropy: 0.7136036068604937, [(2, 78), (3, 19)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [41, 16, 0]]
** centroid: 6, normalized-entropy: 0.8564052389131375, [(1, 41), (2, 16)]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21264063391089438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21264063391089438, 0.16819772248342632] ***
*** starting iteration: 2; err: [Inf, 0.21264063391089438, 0.16819772248342632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21264063391089438, 0.16819772248342632, 0.15543205324281006] ***
*** starting iteration: 3; err: [Inf, 0.21264063391089438, 0.16819772248342632, 0.15543205324281006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21264063391089438, 0.16819772248342632, 0.15543205324281006, 0.15093640239536762] ***
*** starting iteration: 4; err: [Inf, 0.21264063391089438, 0.16819772248342632, 0.15543205324281006, 0.15093640239536762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21264063391089438, 0.16819772248342632, 0.15543205324281006, 0.15093640239536762, 0.14966049829497932] ***
*** starting iteration: 5; err: [Inf, 0.21264063391089438, 0.16819772248342632, 0.15543205324281006, 0.15093640239536762, 0.14966049829497932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21264063391089438, 0.16819772248342632, 0.15543205324281006, 0.15093640239536762, 0.14966049829497932, 0.1488033215776086] ***
*** finished computation of 7 references, err: [Inf, 0.21264063391089438, 0.16819772248342632, 0.15543205324281006, 0.15093640239536762, 0.14966049829497932, 0.1488033215776086] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 47, 16]]
** centroid: 1, normalized-entropy: 0.8175072881213616, [(2, 47), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 51, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [35, 37, 0]]
** centroid: 4, normalized-entropy: 0.9994433330902989, [(1, 35), (2, 37)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [52, 11, 0]]
** centroid: 5, normalized-entropy: 0.6681273338436138, [(1, 52), (2, 11)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [65, 45, 0]]
** centroid: 6, normalized-entropy: 0.976020648236615, [(1, 65), (2, 45)]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2946989868618548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2946989868618548, 0.18966188691090793] ***
*** starting iteration: 2; err: [Inf, 0.2946989868618548, 0.18966188691090793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277] ***
*** starting iteration: 3; err: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308] ***
*** starting iteration: 4; err: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308, 0.15491524834930898] ***
*** starting iteration: 5; err: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308, 0.15491524834930898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308, 0.15491524834930898, 0.1525985547094606] ***
*** starting iteration: 6; err: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308, 0.15491524834930898, 0.1525985547094606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308, 0.15491524834930898, 0.1525985547094606, 0.1510588004887104] ***
*** starting iteration: 7; err: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308, 0.15491524834930898, 0.1525985547094606, 0.1510588004887104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308, 0.15491524834930898, 0.1525985547094606, 0.1510588004887104, 0.14966292579378931] ***
*** starting iteration: 8; err: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308, 0.15491524834930898, 0.1525985547094606, 0.1510588004887104, 0.14966292579378931] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308, 0.15491524834930898, 0.1525985547094606, 0.1510588004887104, 0.14966292579378931, 0.14801782310195266] ***
*** starting iteration: 9; err: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308, 0.15491524834930898, 0.1525985547094606, 0.1510588004887104, 0.14966292579378931, 0.14801782310195266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308, 0.15491524834930898, 0.1525985547094606, 0.1510588004887104, 0.14966292579378931, 0.14801782310195266, 0.1469643218666315] ***
*** starting iteration: 10; err: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308, 0.15491524834930898, 0.1525985547094606, 0.1510588004887104, 0.14966292579378931, 0.14801782310195266, 0.1469643218666315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308, 0.15491524834930898, 0.1525985547094606, 0.1510588004887104, 0.14966292579378931, 0.14801782310195266, 0.1469643218666315, 0.14630410936661065] ***
*** finished computation of 7 references, err: [Inf, 0.2946989868618548, 0.18966188691090793, 0.16781435847189277, 0.15919569219276308, 0.15491524834930898, 0.1525985547094606, 0.1510588004887104, 0.14966292579378931, 0.14801782310195266, 0.1469643218666315, 0.14630410936661065] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 81, 14]]
** centroid: 1, normalized-entropy: 0.6032154068313579, [(2, 81), (3, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 37, 0]]
** centroid: 2, normalized-entropy: 0.9994433330902989, [(1, 35), (2, 37)]
*** center 3: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [39, 45, 0]]
** centroid: 5, normalized-entropy: 0.9963165195589622, [(1, 39), (2, 45)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [53, 28, 0]]
** centroid: 6, normalized-entropy: 0.9301497323974339, [(1, 53), (2, 28)]
*** center 7: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24298974676430227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24298974676430227, 0.16579220982734114] ***
*** starting iteration: 2; err: [Inf, 0.24298974676430227, 0.16579220982734114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24298974676430227, 0.16579220982734114, 0.14898028532415628] ***
*** starting iteration: 3; err: [Inf, 0.24298974676430227, 0.16579220982734114, 0.14898028532415628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24298974676430227, 0.16579220982734114, 0.14898028532415628, 0.14536485544033348] ***
*** starting iteration: 4; err: [Inf, 0.24298974676430227, 0.16579220982734114, 0.14898028532415628, 0.14536485544033348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24298974676430227, 0.16579220982734114, 0.14898028532415628, 0.14536485544033348, 0.14460951646137982] ***
*** finished computation of 7 references, err: [Inf, 0.24298974676430227, 0.16579220982734114, 0.14898028532415628, 0.14536485544033348, 0.14460951646137982] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [49, 43, 0]]
** centroid: 1, normalized-entropy: 0.996929708080541, [(1, 49), (2, 43)]
*** center 2: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [66, 13, 0]]
** centroid: 3, normalized-entropy: 0.6451006442088483, [(1, 66), (2, 13)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 58, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 27, 13]]
** centroid: 6, normalized-entropy: 0.9097361225311661, [(2, 27), (3, 13)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [7, 52, 0]]
** centroid: 7, normalized-entropy: 0.5254506799086205, [(1, 7), (2, 52)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21003479664586486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21003479664586486, 0.17263289218954742] ***
*** starting iteration: 2; err: [Inf, 0.21003479664586486, 0.17263289218954742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21003479664586486, 0.17263289218954742, 0.15352567371726036] ***
*** starting iteration: 3; err: [Inf, 0.21003479664586486, 0.17263289218954742, 0.15352567371726036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21003479664586486, 0.17263289218954742, 0.15352567371726036, 0.14946292356029153] ***
*** starting iteration: 4; err: [Inf, 0.21003479664586486, 0.17263289218954742, 0.15352567371726036, 0.14946292356029153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21003479664586486, 0.17263289218954742, 0.15352567371726036, 0.14946292356029153, 0.1483645007123705] ***
*** starting iteration: 5; err: [Inf, 0.21003479664586486, 0.17263289218954742, 0.15352567371726036, 0.14946292356029153, 0.1483645007123705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21003479664586486, 0.17263289218954742, 0.15352567371726036, 0.14946292356029153, 0.1483645007123705, 0.14798764937743544] ***
*** finished computation of 7 references, err: [Inf, 0.21003479664586486, 0.17263289218954742, 0.15352567371726036, 0.14946292356029153, 0.1483645007123705, 0.14798764937743544] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [53, 15, 0]]
** centroid: 1, normalized-entropy: 0.7612401496918493, [(1, 53), (2, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [80, 10, 0]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(1, 80), (2, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 60, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 30, 15]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 30), (3, 15)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 65, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2223326428020373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2223326428020373, 0.17728426482528448] ***
*** starting iteration: 2; err: [Inf, 0.2223326428020373, 0.17728426482528448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2223326428020373, 0.17728426482528448, 0.15923035318776965] ***
*** starting iteration: 3; err: [Inf, 0.2223326428020373, 0.17728426482528448, 0.15923035318776965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2223326428020373, 0.17728426482528448, 0.15923035318776965, 0.15187346039898694] ***
*** starting iteration: 4; err: [Inf, 0.2223326428020373, 0.17728426482528448, 0.15923035318776965, 0.15187346039898694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2223326428020373, 0.17728426482528448, 0.15923035318776965, 0.15187346039898694, 0.14994025208055972] ***
*** starting iteration: 5; err: [Inf, 0.2223326428020373, 0.17728426482528448, 0.15923035318776965, 0.15187346039898694, 0.14994025208055972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2223326428020373, 0.17728426482528448, 0.15923035318776965, 0.15187346039898694, 0.14994025208055972, 0.14933474424574525] ***
*** finished computation of 7 references, err: [Inf, 0.2223326428020373, 0.17728426482528448, 0.15923035318776965, 0.15187346039898694, 0.14994025208055972, 0.14933474424574525] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [44, 23, 0]]
** centroid: 1, normalized-entropy: 0.9279262619599757, [(1, 44), (2, 23)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 64, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 51, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [98, 2, 0]]
** centroid: 4, normalized-entropy: 0.14144054254182067, [(1, 98), (2, 2)]
*** center 5: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [59, 9, 0]]
** centroid: 6, normalized-entropy: 0.5638560041131417, [(1, 59), (2, 9)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 40, 14]]
** centroid: 7, normalized-entropy: 0.8256265261578954, [(2, 40), (3, 14)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2067204003185034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2067204003185034, 0.1552351517844945] ***
*** starting iteration: 2; err: [Inf, 0.2067204003185034, 0.1552351517844945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2067204003185034, 0.1552351517844945, 0.15036664669867605] ***
*** starting iteration: 3; err: [Inf, 0.2067204003185034, 0.1552351517844945, 0.15036664669867605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2067204003185034, 0.1552351517844945, 0.15036664669867605, 0.14817142621660606] ***
*** starting iteration: 4; err: [Inf, 0.2067204003185034, 0.1552351517844945, 0.15036664669867605, 0.14817142621660606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2067204003185034, 0.1552351517844945, 0.15036664669867605, 0.14817142621660606, 0.14742226766049862] ***
*** finished computation of 7 references, err: [Inf, 0.2067204003185034, 0.1552351517844945, 0.15036664669867605, 0.14817142621660606, 0.14742226766049862] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [43, 44, 0]]
** centroid: 1, normalized-entropy: 0.9999046950184836, [(1, 43), (2, 44)]
*** center 2: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 64, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [81, 14, 0]]
** centroid: 5, normalized-entropy: 0.6032154068313579, [(1, 81), (2, 14)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [44, 16, 0]]
** centroid: 6, normalized-entropy: 0.8366407419411671, [(1, 44), (2, 16)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 51, 14]]
** centroid: 7, normalized-entropy: 0.7516499461153354, [(2, 51), (3, 14)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23797455357573927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23797455357573927, 0.17004586299229413] ***
*** starting iteration: 2; err: [Inf, 0.23797455357573927, 0.17004586299229413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23797455357573927, 0.17004586299229413, 0.16058135097287596] ***
*** starting iteration: 3; err: [Inf, 0.23797455357573927, 0.17004586299229413, 0.16058135097287596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23797455357573927, 0.17004586299229413, 0.16058135097287596, 0.1551337526217103] ***
*** starting iteration: 4; err: [Inf, 0.23797455357573927, 0.17004586299229413, 0.16058135097287596, 0.1551337526217103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23797455357573927, 0.17004586299229413, 0.16058135097287596, 0.1551337526217103, 0.15099277400411665] ***
*** starting iteration: 5; err: [Inf, 0.23797455357573927, 0.17004586299229413, 0.16058135097287596, 0.1551337526217103, 0.15099277400411665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23797455357573927, 0.17004586299229413, 0.16058135097287596, 0.1551337526217103, 0.15099277400411665, 0.14829688960732892] ***
*** starting iteration: 6; err: [Inf, 0.23797455357573927, 0.17004586299229413, 0.16058135097287596, 0.1551337526217103, 0.15099277400411665, 0.14829688960732892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23797455357573927, 0.17004586299229413, 0.16058135097287596, 0.1551337526217103, 0.15099277400411665, 0.14829688960732892, 0.14575571135431528] ***
*** starting iteration: 7; err: [Inf, 0.23797455357573927, 0.17004586299229413, 0.16058135097287596, 0.1551337526217103, 0.15099277400411665, 0.14829688960732892, 0.14575571135431528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23797455357573927, 0.17004586299229413, 0.16058135097287596, 0.1551337526217103, 0.15099277400411665, 0.14829688960732892, 0.14575571135431528, 0.1442558808904141] ***
*** starting iteration: 8; err: [Inf, 0.23797455357573927, 0.17004586299229413, 0.16058135097287596, 0.1551337526217103, 0.15099277400411665, 0.14829688960732892, 0.14575571135431528, 0.1442558808904141] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23797455357573927, 0.17004586299229413, 0.16058135097287596, 0.1551337526217103, 0.15099277400411665, 0.14829688960732892, 0.14575571135431528, 0.1442558808904141, 0.14334557494707406] ***
*** finished computation of 7 references, err: [Inf, 0.23797455357573927, 0.17004586299229413, 0.16058135097287596, 0.1551337526217103, 0.15099277400411665, 0.14829688960732892, 0.14575571135431528, 0.1442558808904141, 0.14334557494707406] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [40, 46, 0]]
** centroid: 1, normalized-entropy: 0.996485989886783, [(1, 40), (2, 46)]
*** center 2: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [12, 57, 0]]
** centroid: 4, normalized-entropy: 0.6665783579949205, [(1, 12), (2, 57)]
*** center 5: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 60, 12]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 60), (3, 12)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [67, 16, 0]]
** centroid: 7, normalized-entropy: 0.7072324944713736, [(1, 67), (2, 16)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20854245797544718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20854245797544718, 0.17055074053630231] ***
*** starting iteration: 2; err: [Inf, 0.20854245797544718, 0.17055074053630231] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20854245797544718, 0.17055074053630231, 0.1602070130556822] ***
*** starting iteration: 3; err: [Inf, 0.20854245797544718, 0.17055074053630231, 0.1602070130556822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20854245797544718, 0.17055074053630231, 0.1602070130556822, 0.15751008473150432] ***
*** starting iteration: 4; err: [Inf, 0.20854245797544718, 0.17055074053630231, 0.1602070130556822, 0.15751008473150432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20854245797544718, 0.17055074053630231, 0.1602070130556822, 0.15751008473150432, 0.15591074583027512] ***
*** starting iteration: 5; err: [Inf, 0.20854245797544718, 0.17055074053630231, 0.1602070130556822, 0.15751008473150432, 0.15591074583027512] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20854245797544718, 0.17055074053630231, 0.1602070130556822, 0.15751008473150432, 0.15591074583027512, 0.15371165394224226] ***
*** starting iteration: 6; err: [Inf, 0.20854245797544718, 0.17055074053630231, 0.1602070130556822, 0.15751008473150432, 0.15591074583027512, 0.15371165394224226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20854245797544718, 0.17055074053630231, 0.1602070130556822, 0.15751008473150432, 0.15591074583027512, 0.15371165394224226, 0.1518843134334311] ***
*** starting iteration: 7; err: [Inf, 0.20854245797544718, 0.17055074053630231, 0.1602070130556822, 0.15751008473150432, 0.15591074583027512, 0.15371165394224226, 0.1518843134334311] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20854245797544718, 0.17055074053630231, 0.1602070130556822, 0.15751008473150432, 0.15591074583027512, 0.15371165394224226, 0.1518843134334311, 0.1508582272231579] ***
*** starting iteration: 8; err: [Inf, 0.20854245797544718, 0.17055074053630231, 0.1602070130556822, 0.15751008473150432, 0.15591074583027512, 0.15371165394224226, 0.1518843134334311, 0.1508582272231579] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20854245797544718, 0.17055074053630231, 0.1602070130556822, 0.15751008473150432, 0.15591074583027512, 0.15371165394224226, 0.1518843134334311, 0.1508582272231579, 0.15033600306510925] ***
*** finished computation of 7 references, err: [Inf, 0.20854245797544718, 0.17055074053630231, 0.1602070130556822, 0.15751008473150432, 0.15591074583027512, 0.15371165394224226, 0.1518843134334311, 0.1508582272231579, 0.15033600306510925] ***
*** center 1: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 2, 0]]
** centroid: 2, normalized-entropy: 0.19823496409776642, [(1, 63), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [33, 45, 0]]
** centroid: 3, normalized-entropy: 0.9828586897127057, [(1, 33), (2, 45)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [57, 2, 0]]
** centroid: 4, normalized-entropy: 0.21357981533827744, [(1, 57), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [23, 35, 0]]
** centroid: 5, normalized-entropy: 0.9688977092243805, [(1, 23), (2, 35)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 57, 13]]
** centroid: 6, normalized-entropy: 0.6924194863274741, [(2, 57), (3, 13)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 51, 0]]
** centroid: 7, normalized-entropy: 0.23181305002459035, [(1, 2), (2, 51)]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 383,3 => 29,1 => 588), Dict(2 => 350,3 => 35,1 => 615))
[ Info: ===== scores for single classifier: {"micro_f1":0.927,"precision":0.927,"recall":0.927,"macro_recall":0.9399148277197057,"macro_f1":0.8654902804301655,"accuracy":0.927,"class_f1":{"2":0.8915304606240713,"3":0.7446808510638298,"1":0.9602595296025953},"class_precision":{"2":0.9287925696594427,"3":0.5932203389830508,"1":0.9579288025889967},"class_recall":{"2":0.8571428571428571,"3":1.0,"1":0.9626016260162602}}
[ Info: ===== scores for 1: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.9723964382500968,"macro_f1":0.9510659443362871,"accuracy":0.968,"class_f1":{"2":0.9530791788856305,"3":0.9210526315789475,"1":0.9790660225442833},"class_precision":{"2":0.9789156626506024,"3":0.8536585365853658,"1":0.9696969696969697},"class_recall":{"2":0.9285714285714286,"3":1.0,"1":0.9886178861788618}}
[ Info: ===== scores for 5: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9711807975222609,"macro_f1":0.9380200382198475,"accuracy":0.965,"class_f1":{"2":0.9490538573508005,"3":0.8860759493670886,"1":0.9789303079416531},"class_precision":{"2":0.9673590504451038,"3":0.7954545454545454,"1":0.975767366720517},"class_recall":{"2":0.9314285714285714,"3":1.0,"1":0.9821138211382113}}
[ Info: ===== scores for 7: {"micro_f1":0.967,"precision":0.967,"recall":0.967,"macro_recall":0.9726751838946961,"macro_f1":0.9395306894512916,"accuracy":0.967,"class_f1":{"2":0.9519650655021834,"3":0.8860759493670886,"1":0.9805510534846028},"class_precision":{"2":0.9703264094955489,"3":0.7954545454545454,"1":0.9773828756058158},"class_recall":{"2":0.9342857142857143,"3":1.0,"1":0.983739837398374}}
[ Info: ===== scores for 9: {"micro_f1":0.969,"precision":0.969,"recall":0.969,"macro_recall":0.9745799457994581,"macro_f1":0.9410753544679983,"accuracy":0.969,"class_f1":{"2":0.9550072568940493,"3":0.8860759493670886,"1":0.9821428571428572},"class_precision":{"2":0.9705014749262537,"3":0.7954545454545454,"1":0.9805510534846029},"class_recall":{"2":0.94,"3":1.0,"1":0.983739837398374}}
[ Info: ===== scores for 11: {"micro_f1":0.972,"precision":0.972,"recall":0.972,"macro_recall":0.9770267131242741,"macro_f1":0.9433538777369295,"accuracy":0.972,"class_f1":{"2":0.9594202898550724,"3":0.8860759493670886,"1":0.9845653939886272},"class_precision":{"2":0.9735294117647059,"3":0.7954545454545454,"1":0.9837662337662337},"class_recall":{"2":0.9457142857142857,"3":1.0,"1":0.9853658536585366}}
(score = 0.971, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.971, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.966, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.966, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.965, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.967, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.971,"k":1,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.9666821525358111,"macro_f1":0.9415743783827898,"accuracy":0.971,"class_f1":{"2":0.957787481804949,"3":0.8831168831168832,"1":0.9838187702265373},"class_precision":{"2":0.9762611275964391,"3":0.8095238095238095,"1":0.9790660225442834},"class_recall":{"2":0.94,"3":0.9714285714285714,"1":0.9886178861788618}}
Test Summary: | Pass  Total
AKNC          |    8      8
[212, 1, 3, 6, 2, 3, 2, 1, 5, 3, 5, 8, 3, 1, 11, 6, 3, 23, 2, 9, 2, 32, 6, 3, 1, 2, 2, 3, 35, 16, 1, 1, 40, 2, 8, 6, 14, 5, 4, 3, 2, 19, 3, 17, 24, 6, 21, 15, 20, 8, 26, 6, 3, 1, 39, 202, 10, 6, 13, 1, 25, 49, 14, 21, 10, 2, 17, 11, 12, 16, 20, 47, 3, 4, 12, 2, 10, 3, 30, 11, 27, 5, 9, 18, 25, 10, 41, 63, 3, 9, 10, 2, 69, 4, 69, 7, 77, 33, 50, 5, 11, 6, 2, 11, 50, 7, 2, 1, 15, 19, 35, 16, 15, 3, 7, 9, 11, 49, 56, 22, 3, 23, 10, 15, 38, 10, 29, 49, 13, 134, 3, 9, 7, 34, 16, 3, 158, 56, 7, 559, 19, 5, 143, 8, 4, 4, 10, 11, 19, 7, 82, 15, 4, 4, 64, 6, 8, 11, 8, 30, 6, 40, 10, 34, 25, 3, 9, 9, 83, 210, 23, 30, 8, 19, 3, 3, 4, 22, 5, 648, 42, 23, 42, 45, 25, 2, 28, 16, 6, 2, 16, 13, 83, 43, 19, 9, 4, 14, 31, 26, 94, 39, 51, 14, 73, 55, 94, 10, 14, 2, 4, 721, 10, 114, 19, 3, 5, 124, 24, 24, 48, 6, 60, 22, 50, 9, 69, 10, 7, 9, 6, 240, 13, 240, 3, 34, 90, 18, 7, 2, 4, 18, 3, 55, 18, 10, 25, 96, 123, 47, 75, 4, 20, 7, 68, 4, 12, 37, 75, 11, 9, 39, 18, 27, 25, 53, 11, 17, 9, 9, 28, 19, 6, 12, 33, 22, 21, 16, 5, 2, 23, 45, 10, 52, 13, 114, 110, 7, 4, 73, 10, 96, 31, 2, 7, 182, 31, 9, 27, 164]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6829999999999998, speedup = 0.28816405113165733, eval_ratio = 0.076602)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.4165581597222224,"recall":0.41319444444444464,"f1":null,"seconds":0.00018026307225227356,"exhaustive_search_seconds":0.00036129727959632874,"evaluations":494.9140625,"distances_sum":1700.1139010505249}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5781249999999997,"recall":0.5781249999999997,"f1":0.5781249999999997,"seconds":0.0002969074994325638,"exhaustive_search_seconds":0.00036129727959632874,"evaluations":638.8046875,"distances_sum":1609.3780105016344}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6892361111111107,"recall":0.6892361111111107,"f1":0.6892361111111107,"seconds":0.00043694861233234406,"exhaustive_search_seconds":0.00036129727959632874,"evaluations":776.7421875,"distances_sum":1561.180467345184}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7690972222222217,"recall":0.7690972222222217,"f1":0.7690972222222217,"seconds":0.0004710610955953598,"exhaustive_search_seconds":0.00036129727959632874,"evaluations":917.21875,"distances_sum":1532.2208644454042}
KCenters.DeloneInvIndex> reached performance {"precision":0.8211805555555547,"recall":0.8211805555555547,"f1":0.8211805555555547,"seconds":0.0005758628249168396,"exhaustive_search_seconds":0.00036129727959632874,"evaluations":1057.8203125,"distances_sum":1517.6799861327966}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7989999999999998, speedup = 0.6156568736473318, eval_ratio = 0.10337)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
