Julia Version 1.5.0-DEV.299
Commit 6a9a92683d (2020-02-20 07:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_8r5eNj/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.0847028072577967 -0.1382981136449155; 0.0847028072577967 0.0 -0.02580124494133873; 0.1382981136449155 0.02580124494133873 0.0])
dAA = so3([0.0 0.03422249924662054 -0.11465801348144444; -0.03422249924662054 0.0 0.004249926961169434; 0.11465801348144444 -0.004249926961169434 0.0])
dAA = so3([0.0 -0.08166965238902538 -0.15684225230752213; 0.08166965238902538 0.0 -0.023917357280053467; 0.15684225230752213 0.023917357280053467 0.0])
dAA = Quaternion(0.9992304701853707, [-0.021826586561922892, 0.02659590944173909, 0.018834149121871084])
dAA = SO3([0.9811747962622138 -0.03411081437774374 0.19008543216746118; 0.037495872061947724 0.999195330604831 -0.014239061619942636; -0.18944677024989745 0.02109842742930349 0.9816642896641873])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9555904516831552 0.08579578580431703 -0.2819325660334456; -0.08277290649753333 0.9963112864771568 0.022637720472331372; 0.28283481858133025 0.0017039883956639136 0.9591671188179948]), [0.2580124494133873, -1.382981136449155, 0.847028072577967])
xj = SE3(SO3([0.986757367773169 -0.09795395886841182 0.12928619062905455; 0.08359080362822102 0.9901629399307804 0.11220485700905213; -0.1390053045540167 -0.09991183278090303 0.9852386264130156]), [0.23917357280053467, -1.5684225230752211, 0.8166965238902537])
Dx = SE3(SO3([0.8967013249038936 -0.2038210773421469 0.39291691532267775; 0.167705221440895 0.9779362270270323 0.12456201094070823; -0.40963604897159883 -0.045800701951163335 0.9110985693566414]), [-0.01123154612608701, -0.18642532730518035, -0.027979701613875085])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
