Julia Version 1.5.0-DEV.327
Commit 5286b40c7b (2020-02-23 16:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_PRYJBi/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.027770976179183268 0.0003357833612435665; 0.027770976179183268 0.0 -0.10749802085225246; -0.0003357833612435665 0.10749802085225246 0.0])
dAA = so3([0.0 -0.08990777437986615 -0.12238397045962648; 0.08990777437986615 0.0 -0.2092916785551993; 0.12238397045962648 0.2092916785551993 0.0])
dAA = so3([0.0 -0.05690173777467642 -0.08083284505787514; 0.05690173777467642 0.0 0.056899779475720294; 0.08083284505787514 -0.056899779475720294 0.0])
dAA = Quaternion(0.9931108656082976, [-0.02828048137561193, 0.024294226719541255, -0.11108921429194207])
dAA = SO3([0.9892682512685911 -0.12117579415908553 0.08163794425326268; 0.12081058149002458 0.992630912117968 0.009416777999566719; -0.08217743262006924 0.0005470080126709648 0.9966175647409632])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9304086326360299 -0.28673266455423574 -0.2283071514297818; 0.13214347078374616 0.843423601893418 -0.520744400736444; 0.34187406957179195 0.454335786447382 0.8226184496518787]), [1.0749802085225246, 0.003357833612435665, 0.27770976179183265])
xj = SE3(SO3([0.8422326590268503 0.5203749413359179 0.14090446585612984; -0.5360900210455872 0.8360416629329362 0.11679823275920055; -0.057023130428828055 -0.17390876421264834 0.9831094060816051]), [-0.5689977947572029, -0.8083284505787512, 0.5690173777467642])
Dx = SE3(SO3([0.6932850109536574 0.5351838877305992 0.48263246875914634; -0.7195542397958287 0.4769158020287122 0.504770258401936; 0.03996985837896169 -0.6972298932840382 0.7157324125204158]), [-1.5372398487320182, -0.08086170127807121, 1.0376480419977765])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
