Julia Version 1.5.0-DEV.360
Commit 012b270df6 (2020-02-28 07:57 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_vjdrn2/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.11032666150116804 0.06521583269147238; 0.11032666150116804 0.0 0.032350357281447986; -0.06521583269147238 -0.032350357281447986 0.0])
dAA = so3([0.0 0.05653598252610323 0.0037346451703204765; -0.05653598252610323 0.0 0.014537999850470693; -0.0037346451703204765 -0.014537999850470693 0.0])
dAA = so3([0.0 0.011273479446826435 -0.08570764559976787; -0.011273479446826435 0.0 0.08597177408054368; 0.08570764559976787 -0.08597177408054368 0.0])
dAA = Quaternion(0.999790223490561, [-0.01855897426921752, 0.008572784493435829, 0.0012573196880747467])
dAA = SO3([0.9891540181044277 0.11654914807937765 -0.0893902933759428; -0.11135810574014364 0.9919046978580294 0.06102821194446569; 0.09577943805344032 -0.05041196732069616 0.9941252098186749])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.98998578755907 0.14066736538588273 0.011867297352073794; -0.1410061002761319 0.9893699928084633 0.03555695452508259; -0.006739444781688139 -0.036874240949149116 0.999297188146979]), [-0.32350357281447983, 0.6521583269147238, 1.1032666150116803])
xj = SE3(SO3([0.9990623757852447 -0.0074723046449280215 0.04264427222542296; 0.0034896933521771185 0.995686812413362 0.09271242433690527; -0.04315311495883424 -0.09247667948954483 0.9947793083995755]), [-0.8597177408054368, -0.8570764559976787, -0.11273479446826434])
Dx = SE3(SO3([0.9888563128970639 -0.14717214843855733 0.022439945802150897; 0.14557930850331674 0.9874615523908016 0.061043816113053886; -0.03114253328360375 -0.057096771133991836 0.9978828094254116]), [-0.30983791990564163, -1.5237803116425286, -1.2751739947957046])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
