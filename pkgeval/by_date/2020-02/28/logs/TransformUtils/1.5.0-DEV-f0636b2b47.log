Julia Version 1.5.0-DEV.355
Commit f0636b2b47 (2020-02-27 13:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_Y9VOUz/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.05989310531679474 -0.15020328880587863; 0.05989310531679474 0.0 0.025385331099225694; 0.15020328880587863 -0.025385331099225694 0.0])
dAA = so3([0.0 0.08630598024167917 0.11311330973655842; -0.08630598024167917 0.0 -0.1819583295795676; -0.11311330973655842 0.1819583295795676 0.0])
dAA = so3([0.0 0.014928387085762662 0.04793353565519378; -0.014928387085762662 0.0 0.1777837576015063; -0.04793353565519378 -0.1777837576015063 0.0])
dAA = Quaternion(0.9973192554289835, [-0.06407837955876242, -0.027415198586989206, 0.022286114738490948])
dAA = SO3([0.9956973069755114 -0.09188323421501542 0.012014331105091829; 0.09255253685180374 0.992487337081985 -0.0800182082666554; -0.00457173971368287 0.08078587130246817 0.9967209951605772])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9384779857030411 0.2665230749480984 0.21960082165368347; -0.14142115980508593 0.8767405893537942 -0.45970207149734044; -0.31505416345470966 0.4003640711899257 0.8604937446548239]), [-0.25385331099225694, -1.502032888058786, 0.5989310531679474])
xj = SE3(SO3([0.984560127704908 -0.0966579019292595 -0.14594041567821092; 0.13817315802170102 0.9409947693406434 0.30892883076181044; 0.1074687551616998 -0.32432405718383417 0.9398214578289918]), [-1.7778375760150629, 0.47933535655193776, -0.14928387085762662])
Dx = SE3(SO3([0.8705889184356822 -0.12160824023123634 -0.476745604075015; 0.426576637046277 0.6693990474913811 0.608224701852794; 0.2451679176060315 -0.7328822218648051 0.634646626912354]), [-1.4747048514623418, 1.0314106169125627, -1.8893415450142825])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
