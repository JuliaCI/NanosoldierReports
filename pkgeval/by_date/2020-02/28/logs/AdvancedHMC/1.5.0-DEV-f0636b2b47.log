Julia Version 1.5.0-DEV.355
Commit f0636b2b47 (2020-02-27 13:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ───────────────────── v0.4.3
  Installed ProgressMeter ──────────────── v1.2.0
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed DataAPI ────────────────────── v1.1.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+2
  Installed SpecialFunctions ───────────── v0.10.0
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Requires ───────────────────── v1.0.1
  Installed Rmath ──────────────────────── v0.6.1
  Installed StatsFuns ──────────────────── v0.9.4
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed MacroTools ─────────────────── v0.5.4
  Installed StatsBase ──────────────────── v0.32.1
  Installed DataStructures ─────────────── v0.17.10
  Installed ArgCheck ───────────────────── v2.0.0
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed OrderedCollections ─────────── v1.1.0
  Installed FillArrays ─────────────────── v0.8.5
  Installed Parameters ─────────────────── v0.12.0
  Installed LazyArrays ─────────────────── v0.15.0
#=#=#                                                                                                                                                    0.7%####                                                                       6.8%############                                                              16.8%#####################                                                     29.3%###############################                                           43.7%################################################                          67.7%####################################################################      95.3%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [e66e0078] + CompilerSupportLibraries_jll v0.2.0+1
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.10
  [1a297f60] + FillArrays v0.8.5
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.0
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+2
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.1
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing AdvancedHMC
#=#=#                                                                         ##################                                                        25.3%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.6%#####                                                                      7.5%##########                                                                14.3%###############                                                           22.1%######################                                                    31.1%#############################                                             41.6%########################################                                  56.7%#######################################################                   77.3%######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.2%##################################################                        70.6%######################################################################## 100.0%
Status `/tmp/jl_UlOqNW/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.4.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [5b7e9947] AdvancedMH v0.4.1
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.7.0
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.6.0
  [e66e0078] CompilerSupportLibraries_jll v0.2.0+1
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.10
  [2b5f629d] DiffEqBase v6.18.1
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.22.5
  [ced4e74d] DistributionsAD v0.4.1
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.4.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+4
  [1a297f60] FillArrays v0.8.5
  [6a86dc24] FiniteDiff v2.2.1
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5078a376] LazyArrays v0.15.0
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [c7f686f2] MCMCChains v3.0.3
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+2
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.29.0
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.1
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v0.8.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v0.8.4
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.1
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.9.0
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.146196529
│   t_steps = 0.008132198
└   t_step / t_steps = 17.97749255490336
Sampling  0%|                               |  ETA: 5:48:33[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               3.328196127389055e-5
  log_density:                   -10.542224094441075
  hamiltonian_energy:            16.72181225290729
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  10.310495011238988
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▍                            |  ETA: 0:00:32[K
  iterations:                    920
  n_steps:                       127
  is_accept:                     true
  acceptance_rate:               0.9464336221013719
  log_density:                   -14.628604655463809
  hamiltonian_energy:            27.839339654890495
  hamiltonian_energy_error:      -1.2720448802067068
  max_hamiltonian_energy_error:  -1.435906493289167
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.8261456268985825
  nom_step_size:                 0.8261456268985825
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9426652611565238, 1.1664 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███                            |  ETA: 0:00:26[K
  iterations:                    1148
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8266847369819819
  log_density:                   -13.973191495008807
  hamiltonian_energy:            19.799047234860556
  hamiltonian_energy_error:      -0.16964064957952374
  max_hamiltonian_energy_error:  0.4023125016121796
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9934010643486266
  nom_step_size:                 0.9934010643486266
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9426652611565238, 1.1664 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▊                           |  ETA: 0:00:21[K
  iterations:                    1447
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9650961719874525
  log_density:                   -14.841267195402555
  hamiltonian_energy:            20.383980422492883
  hamiltonian_energy_error:      -0.2016952957153748
  max_hamiltonian_energy_error:  -0.5961611821977328
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7794026682168792
  nom_step_size:                 0.7794026682168792
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9426652611565238, 1.1664 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▎                          |  ETA: 0:00:19[K
  iterations:                    1658
  n_steps:                       51
  is_accept:                     true
  acceptance_rate:               0.8438382449453693
  log_density:                   -12.814245231583259
  hamiltonian_energy:            16.01717708594359
  hamiltonian_energy_error:      0.13613610382271446
  max_hamiltonian_energy_error:  0.4391643449753957
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8203083503644454
  nom_step_size:                 0.8203083503644454
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9426652611565238, 1.1664 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████                          |  ETA: 0:00:16[K
  iterations:                    1931
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.608968696707542
  hamiltonian_energy:            13.816506919252795
  hamiltonian_energy_error:      -0.022066336459511504
  max_hamiltonian_energy_error:  -0.3361407271204637
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.7937910362013263
  nom_step_size:                 0.7937910362013263
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9426652611565238, 1.1664 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▌                         |  ETA: 0:00:15[K
  iterations:                    2138
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7569101348257146
  log_density:                   -11.535640799997397
  hamiltonian_energy:            17.728592542396626
  hamiltonian_energy_error:      -0.019722037070128096
  max_hamiltonian_energy_error:  0.5626591884034831
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▋                        |  ETA: 0:00:12[K
  iterations:                    2564
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8618314513488635
  log_density:                   -12.71362736229391
  hamiltonian_energy:            15.407357876703687
  hamiltonian_energy_error:      0.18032141303176097
  max_hamiltonian_energy_error:  0.3466391502215398
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▌                       |  ETA: 0:00:11[K
  iterations:                    2880
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9122117763810086
  log_density:                   -14.871828433559195
  hamiltonian_energy:            19.29393892161028
  hamiltonian_energy_error:      0.12601128002303952
  max_hamiltonian_energy_error:  0.16003893783111423
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▌                      |  ETA: 0:00:09[K
  iterations:                    3303
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9977388412048429
  log_density:                   -15.61942917897494
  hamiltonian_energy:            19.31520414394498
  hamiltonian_energy_error:      0.01595471381746094
  max_hamiltonian_energy_error:  -0.2399901058616436
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▍                     |  ETA: 0:00:08[K
  iterations:                    3615
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9977015521634629
  log_density:                   -14.328579881398282
  hamiltonian_energy:            18.858819488172806
  hamiltonian_energy_error:      -0.04521986630403063
  max_hamiltonian_energy_error:  -0.09144050369452827
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▍                    |  ETA: 0:00:07[K
  iterations:                    4025
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9237851894097532
  log_density:                   -12.482696453835601
  hamiltonian_energy:            16.778305484697587
  hamiltonian_energy_error:      -0.026841819314139315
  max_hamiltonian_energy_error:  0.14741275137557253
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████▎                   |  ETA: 0:00:07[K
  iterations:                    4341
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8956927933657631
  log_density:                   -13.987589241969019
  hamiltonian_energy:            16.961063595849204
  hamiltonian_energy_error:      0.13970130954094628
  max_hamiltonian_energy_error:  0.21032776565614597
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▎                  |  ETA: 0:00:06[K
  iterations:                    4743
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9973317219613141
  log_density:                   -12.43902805199263
  hamiltonian_energy:            16.281619047942392
  hamiltonian_energy_error:      -0.18880498109215083
  max_hamiltonian_energy_error:  -0.30519558863943175
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████                  |  ETA: 0:00:06[K
  iterations:                    5036
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9652263710774819
  log_density:                   -13.432925445424274
  hamiltonian_energy:            18.418680351724802
  hamiltonian_energy_error:      -0.06093394013571185
  max_hamiltonian_energy_error:  0.11687583537096558
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|██████████████                 |  ETA: 0:00:05[K
  iterations:                    5434
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9142565377488298
  log_density:                   -13.078235667831395
  hamiltonian_energy:            17.296304079517192
  hamiltonian_energy_error:      0.05113165304518574
  max_hamiltonian_energy_error:  0.18353279790463617
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▉                |  ETA: 0:00:05[K
  iterations:                    5740
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9657546627973602
  log_density:                   -12.37295179070751
  hamiltonian_energy:            16.77442292784044
  hamiltonian_energy_error:      -0.08824662309257292
  max_hamiltonian_energy_error:  0.09905232148901533
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:04[K
  iterations:                    6156
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8914971101001999
  log_density:                   -11.897173148195995
  hamiltonian_energy:            17.244238957006147
  hamiltonian_energy_error:      -0.05388072921239839
  max_hamiltonian_energy_error:  0.2975208057752141
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▊              |  ETA: 0:00:04[K
  iterations:                    6472
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6703717783009029
  log_density:                   -11.711983555625983
  hamiltonian_energy:            19.395661169708006
  hamiltonian_energy_error:      0.07760094730134881
  max_hamiltonian_energy_error:  0.8529029146742353
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▊             |  ETA: 0:00:03[K
  iterations:                    6887
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.124713468782094
  hamiltonian_energy:            20.571905005109237
  hamiltonian_energy_error:      -0.15632019221528637
  max_hamiltonian_energy_error:  -0.5603134176443128
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▋            |  ETA: 0:00:03[K
  iterations:                    7187
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8875761201640758
  log_density:                   -12.673144975802677
  hamiltonian_energy:            16.37721676994234
  hamiltonian_energy_error:      0.0427202776331832
  max_hamiltonian_energy_error:  0.27923840473555117
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▋           |  ETA: 0:00:03[K
  iterations:                    7595
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9876852192385337
  log_density:                   -13.549893573562493
  hamiltonian_energy:            18.1249554789625
  hamiltonian_energy_error:      -0.14838187764859967
  max_hamiltonian_energy_error:  -0.3281909345610714
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▍          |  ETA: 0:00:03[K
  iterations:                    7898
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9834511572489397
  log_density:                   -15.041691040000373
  hamiltonian_energy:            19.79152847898528
  hamiltonian_energy_error:      -0.10644420907726371
  max_hamiltonian_energy_error:  -0.31836219066561
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▌         |  ETA: 0:00:02[K
  iterations:                    8300
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7736001046675616
  log_density:                   -15.811766068958349
  hamiltonian_energy:            19.844695151855213
  hamiltonian_energy_error:      0.37216131813423203
  max_hamiltonian_energy_error:  0.4950583355595519
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▎        |  ETA: 0:00:02[K
  iterations:                    8625
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9130104016932482
  log_density:                   -15.086748259590262
  hamiltonian_energy:            19.10706094743957
  hamiltonian_energy_error:      0.14879328404079573
  max_hamiltonian_energy_error:  0.23639041868779032
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▍       |  ETA: 0:00:02[K
  iterations:                    9058
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6669752333548216
  log_density:                   -13.97962822373243
  hamiltonian_energy:            26.079918459110026
  hamiltonian_energy_error:      -0.08816235706675002
  max_hamiltonian_energy_error:  0.9039321908192193
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████▎      |  ETA: 0:00:01[K
  iterations:                    9375
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9683591469391258
  log_density:                   -11.048992238510984
  hamiltonian_energy:            15.92702527719829
  hamiltonian_energy_error:      -0.23872240820190882
  max_hamiltonian_energy_error:  -0.23872240820190882
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▎     |  ETA: 0:00:01[K
  iterations:                    9795
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9809570526228484
  log_density:                   -14.581282468651485
  hamiltonian_energy:            16.57438636587641
  hamiltonian_energy_error:      0.08025324777212717
  max_hamiltonian_energy_error:  -0.2606840329984408
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████▏    |  ETA: 0:00:01[K
  iterations:                    10122
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8519986163382764
  log_density:                   -15.930815644716809
  hamiltonian_energy:            20.106923687817346
  hamiltonian_energy_error:      0.2351450457191291
  max_hamiltonian_energy_error:  0.24068725261482982
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:01[K
  iterations:                    10540
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9998036819253666
  log_density:                   -12.330302106652537
  hamiltonian_energy:            17.08404746426592
  hamiltonian_energy_error:      -0.21351667235402516
  max_hamiltonian_energy_error:  -0.21351667235402516
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████   |  ETA: 0:00:01[K
  iterations:                    10862
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.873974129657436
  log_density:                   -14.387096830629973
  hamiltonian_energy:            27.433404096525773
  hamiltonian_energy_error:      -0.5008604693934053
  max_hamiltonian_energy_error:  -0.5505242257040095
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▏ |  ETA: 0:00:00[K
  iterations:                    11276
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9688543037470781
  log_density:                   -17.13947364318412
  hamiltonian_energy:            23.322254518492883
  hamiltonian_energy_error:      0.043489280370195615
  max_hamiltonian_energy_error:  -0.1757179828511255
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████ |  ETA: 0:00:00[K
  iterations:                    11609
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8800508440668324
  log_density:                   -12.63382568311822
  hamiltonian_energy:            15.539464037233852
  hamiltonian_energy_error:      0.12854062482479378
  max_hamiltonian_energy_error:  0.25760201739955235
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8140527392555502
  log_density:                   -18.334307277506753
  hamiltonian_energy:            21.692614730203545
  hamiltonian_energy_error:      0.4247612729904269
  max_hamiltonian_energy_error:  0.4247612729904269
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6718159925395368
  nom_step_size:                 0.6718159925395368
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0611975440754458, 0.9927 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.039306515 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0611975440754458, 0.9927 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.672), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.067310079012859
└   average_acceptance_rate = 0.8790728147949828
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.104653294 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Matrix mode: Test Failed at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/sampler_mat.jl:48
  Expression: ≈(mean(samples), zeros(D, n_chains), atol = RNDATOL * n_chains)
   Evaluated: [0.0040751112200921175 -0.018563455548026773 … -0.8714058803156686 0.001448421339433461; 0.001118490336862261 -0.006657098132944248 … -1.3664398229307262 -0.014952807519288534; … ; 0.006208643600652728 0.0036780565802670344 … 0.24208449085217001 0.002976734118275634; 0.00164806931503688 0.002989858707108084 … -0.006726057496966954 -0.004373367004285567] ≈ [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0] (atol=1.25)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/sampler_mat.jl:48
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/sampler_mat.jl:6
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠒⠊⠁⠀⠀⢀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠘⡄⠀⠀⡀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⡸⢣⠀⠀⠀⠀⠀⠀⡠⡄⠀⠀⠀⢀⠔⠁⠀⠀⠈⠒⠉⠈⠑│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⡇⠘⡄⠀⠀⢀⠔⠉⠀⠈⠢⠔⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠇⠀⠀⠀⠀⠀⢸⠀⠀⢱⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⡇⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⡔⠁⡠⠤⠤⠤⠤⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢣⠀⠀⢠⣎⣀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠣⡣⣠⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠑⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary:                                            | Pass  Fail  Total
AdvancedHMC                                              | 2874     1   2875
  Online v.s. naive v.s. true var/cov estimation         |   12           12
  Preconditioner constructors                            |    2            2
  Stan HMC adaptors                                      |   12           12
  Adapted mass v.s. true variance                        |   20           20
  Initialisation adaptor by metric                       |    2            2
  rand momentum variables from metric via vector of RNGs |    2            2
  Passing random number generator                        |   12           12
  TreeSampler                                            |    5            5
  TerminationCriterion                                   |    2            2
  Termination                                            |   20           20
  BinaryTree                                             |    4            4
  ClassicNoUTurn                                         |    4            4
  PhasePoint                                             |    4            4
  Metric                                                 |   60           60
  step(::Leapfrog) against step(::Leapfrog)              |    2            2
  jitter                                                 |    4            4
  temper                                                 |    7            7
  Eq (2.11) from (Neal, 2011)                            |    4            4
  `gdemo`                                                |    1            1
  HMC and NUTS                                           | 2664         2664
  drop_warmup                                            |    4            4
  Matrix mode                                            |   27     1     28
ERROR: LoadError: Some tests did not pass: 2874 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/runtests.jl:3
ERROR: Package AdvancedHMC errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
