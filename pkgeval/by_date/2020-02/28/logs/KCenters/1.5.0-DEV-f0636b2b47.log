Julia Version 1.5.0-DEV.355
Commit f0636b2b47 (2020-02-27 13:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ──────────────────── v0.4.3
  Installed DataValueInterfaces ───────── v1.0.0
  Installed DataAPI ───────────────────── v1.1.0
  Installed Compat ────────────────────── v3.6.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed MLDataUtils ───────────────── v0.5.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed TableTraits ───────────────── v1.0.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Parsers ───────────────────── v0.3.11
  Installed MLDataPattern ─────────────── v0.5.0
  Installed StatsBase ─────────────────── v0.32.1
  Installed Reexport ──────────────────── v0.2.0
  Installed DataFrames ────────────────── v0.20.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed Tables ────────────────────── v1.0.2
  Installed PooledArrays ──────────────── v0.5.3
  Installed LearnBase ─────────────────── v0.2.2
  Installed OrderedCollections ────────── v1.1.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed DataStructures ────────────── v0.17.10
  Installed JSON ──────────────────────── v0.21.0
  Installed SimilaritySearch ──────────── v0.3.19
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.6.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.10
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.2
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_glQ6nZ/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.6.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.10
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.2
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.932025450070699
[ Info: 0.8307796732584636
[ Info: 0.5561161469916502
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3265590283026298
mean(cdnet.distances) = 0.34876124990483126
mean(crand.distances) = 0.3393333831926187
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.20703125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.20703125,"f1":null,"seconds":3.816559910774231e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.359375,"distances_sum":702.1527066295863}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8699186230436238,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.5703125,"distances_sum":2553.9466462624664}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.87243926525116e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.578125,"distances_sum":1207.465838662698}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8699186230436238,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.5703125,"distances_sum":2553.9466462624664}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.870816683316684,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.5546875,"distances_sum":2565.476141717895}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":3,"bsize":6}, perf: {"precision":null,"recall":0.8251953125,"f1":null,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.640625,"distances_sum":2764.107701962226}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":3,"bsize":6},"perf":{"precision":null,"recall":0.8251953125,"f1":null,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.640625,"distances_sum":2764.107701962226}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9287550990675997,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8359375,"distances_sum":3006.346734179267}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9284913003663009,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8359375,"distances_sum":3020.6583617177503}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604739010989016,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":3316.2882302752664}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9604739010989016,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":3316.2882302752664}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9604739010989016,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":3316.2882302752664}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.846252185314686,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.328125,"distances_sum":2295.1299282681025}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.846252185314686,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.328125,"distances_sum":2295.1299282681025}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8937375124875131,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.6875,"distances_sum":2585.26896167914}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9614068223443228,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.875,"distances_sum":3089.577103606846}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9614068223443228,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.875,"distances_sum":3089.577103606846}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9647722069597076,"seconds":6.077811121940613e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8828125,"distances_sum":3129.1700073934007}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9771405677655683,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9609375,"distances_sum":3214.822950641454}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9630437271062273,"seconds":6.759539246559143e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9140625,"distances_sum":3095.6576160002346}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9771405677655683,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9609375,"distances_sum":3214.822950641454}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9771405677655683,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9609375,"distances_sum":3214.822950641454}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.800336122211123,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.1640625,"distances_sum":1921.6210972554122}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2265625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2265625,"f1":null,"seconds":3.974884748458862e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.0234375,"distances_sum":595.5617129474357}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.580078125,"f1":0.7192160270285276,"seconds":4.67151403427124e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.65625,"distances_sum":1547.6141750894558}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.800336122211123,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.1640625,"distances_sum":1921.6210972554122}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8657540376290385,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.140625,"distances_sum":2321.6016901239423}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9262820512820522,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.765625,"distances_sum":2709.134718869255}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8785020535020541,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.3046875,"distances_sum":2405.606729233852}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8176583832833841,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.1640625,"distances_sum":1990.6145465050995}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.890156718281719,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.2734375,"distances_sum":2457.4698006883154}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9262820512820522,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.765625,"distances_sum":2709.134718869255}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9587683150183153,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.859375,"distances_sum":3056.3856115743893}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9390770687645695,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7109375,"distances_sum":2861.0483916861763}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9669871794871798,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9140625,"distances_sum":3111.708303765806}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9664663461538469,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.953125,"distances_sum":3082.406892500491}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9669871794871798,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9140625,"distances_sum":3111.708303765806}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9669871794871798,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9140625,"distances_sum":3111.708303765806}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5908203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5908203125,"f1":0.7281676656676664,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.5390625,"distances_sum":1644.7860140443515}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.220703125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.220703125,"f1":null,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.578125,"distances_sum":627.6539169029671}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2138671875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2138671875,"f1":null,"seconds":3.680586814880371e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.828125,"distances_sum":626.8518144650549}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5908203125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5908203125,"f1":0.7281676656676664,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.5390625,"distances_sum":1644.7860140443515}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7792839105339116,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.0078125,"distances_sum":1825.7980258918487}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9384214743589752,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8359375,"distances_sum":2851.609117410119}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9384214743589752,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8359375,"distances_sum":2851.609117410119}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9583161630036632,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8671875,"distances_sum":3054.7470854350663}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9583161630036632,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8671875,"distances_sum":3054.7470854350663}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9583161630036632,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8671875,"distances_sum":3054.7470854350663}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.856499750249751,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.953125,"distances_sum":2251.175995801632}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.856499750249751,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.953125,"distances_sum":2251.175995801632}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.947332875457876,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.75,"distances_sum":2969.5012287450286}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9722126831501836,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.90625,"distances_sum":3111.556722903052}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9334764194139203,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.6953125,"distances_sum":2834.8540435359273}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8729286338661347,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.0234375,"distances_sum":2337.7001538608174}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9722126831501836,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.90625,"distances_sum":3111.556722903052}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9770489926739929,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":3181.607791295699}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731971153846154,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9375,"distances_sum":3108.313248313497}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9774553571428573,"seconds":6.360933184623718e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.953125,"distances_sum":3161.906621533099}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9770489926739929,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":3181.607791295699}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9770489926739929,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":3181.607791295699}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.79339982933733,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.8359375,"distances_sum":1891.1070679586537}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.673828125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.673828125,"f1":0.79339982933733,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.8359375,"distances_sum":1891.1070679586537}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.8997913544788553,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.4765625,"distances_sum":2603.465597364288}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83203125,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.83203125,"f1":0.8997913544788553,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.4765625,"distances_sum":2603.465597364288}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9399267399267407,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.7734375,"distances_sum":2923.4284609959445}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635989010989013,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.953125,"distances_sum":3069.461885829566}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9635989010989013,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.953125,"distances_sum":3069.461885829566}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9635989010989013,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.953125,"distances_sum":3069.461885829566}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4130859375, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.4130859375,"f1":0.565197302697303,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.1875,"distances_sum":664.2335845070454}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8752637987012996,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.671875,"distances_sum":1555.9103703841934}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8752637987012996,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.671875,"distances_sum":1555.9103703841934}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9203817016317023,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.90625,"distances_sum":1784.1371113227535}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9020984224109231,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.609375,"distances_sum":1677.7847766557595}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.9203817016317023,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.90625,"distances_sum":1784.1371113227535}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9771233974358977,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.984375,"distances_sum":2127.861387688292}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.975709706959707,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.96875,"distances_sum":2116.724841838262}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678056318681323,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9296875,"distances_sum":2083.5232841180973}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.945398351648352,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.84375,"distances_sum":1960.201052354228}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588026556776564,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.921875,"distances_sum":2020.0120047740402}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":12,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9745364010989013,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.984375,"distances_sum":2114.760842103244}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9771233974358977,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.984375,"distances_sum":2127.861387688292}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9771233974358977,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.984375,"distances_sum":2127.861387688292}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.717715097402598,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.3359375,"distances_sum":1163.8003729714178}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.451171875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.451171875,"f1":null,"seconds":4.02890145778656e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":6.90625,"distances_sum":869.9474944618319}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.583984375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.583984375,"f1":0.717715097402598,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.3359375,"distances_sum":1163.8003729714178}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.807721792096793,"seconds":4.816800355911255e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.7265625,"distances_sum":1497.0977726133494}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8580188908313917,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.171875,"distances_sum":1719.6493929686676}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8580188908313917,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.171875,"distances_sum":1719.6493929686676}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9040953837828843,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.2890625,"distances_sum":1928.3718482082343}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.903122398434899,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.3515625,"distances_sum":1924.055232977615}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9471554487179493,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.796875,"distances_sum":2236.0405257831753}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9471554487179493,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.796875,"distances_sum":2236.0405257831753}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9091796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9471554487179493,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.796875,"distances_sum":2236.0405257831753}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8653997044622052,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.3046875,"distances_sum":1727.463543050091}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.22265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.22265625,"f1":null,"seconds":3.2652169466018677e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.0078125,"distances_sum":438.90611630862054}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23046875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.23046875,"f1":null,"seconds":3.460794687271118e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":5.90625,"distances_sum":478.48479900806745}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8653997044622052,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.3046875,"distances_sum":1727.463543050091}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9334191849816857,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7578125,"distances_sum":2163.746703516706}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8675657675657685,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.375,"distances_sum":1752.328805115364}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9662603021978025,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8828125,"distances_sum":2388.090421590641}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662603021978025,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8828125,"distances_sum":2388.090421590641}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9732715201465206,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9765625,"distances_sum":2416.8022458617884}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9712454212454216,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.921875,"distances_sum":2417.4809841524807}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9732715201465206,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9765625,"distances_sum":2416.8022458617884}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9732715201465206,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9765625,"distances_sum":2416.8022458617884}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7066870629370636,"seconds":4.235655069351196e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.8046875,"distances_sum":1162.6014467155783}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8422832375957384,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.765625,"distances_sum":1681.378772649867}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7412109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.8422832375957384,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.765625,"distances_sum":1681.378772649867}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.946789148351649,"seconds":6.837770342826843e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8203125,"distances_sum":2383.75173582955}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9212797619047625,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6640625,"distances_sum":2217.7939983533743}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.946789148351649,"seconds":6.837770342826843e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8203125,"distances_sum":2383.75173582955}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9806375915750918,"seconds":6.334856152534485e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.953125,"distances_sum":2600.198041512765}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9627461080586086,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.828125,"distances_sum":2497.627864440658}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":6,"bsize":13}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9821829212454216,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.984375,"distances_sum":2597.4345463441987}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9655734890109895,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.9140625,"distances_sum":2483.9802832889777}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9609432234432239,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.828125,"distances_sum":2468.405586032008}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9594379578754583,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.890625,"distances_sum":2431.291334591027}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9821829212454216,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.984375,"distances_sum":2597.4345463441987}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9821829212454216,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.984375,"distances_sum":2597.4345463441987}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.846362233161926e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":6.5234375,"distances_sum":803.1433721436246}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2197265625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2197265625,"f1":null,"seconds":3.25031578540802e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":6.5234375,"distances_sum":427.42273242093574}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8466616716616723,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":7.7578125,"distances_sum":1680.064837825232}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8466616716616723,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":7.7578125,"distances_sum":1680.064837825232}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9377377830502837,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.8125,"distances_sum":2206.4730366605336}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8711059773559783,"seconds":4.891306161880493e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":7.84375,"distances_sum":1804.6474331327097}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.90447052947053,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.3203125,"distances_sum":1976.9199997704425}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9377377830502837,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.8125,"distances_sum":2206.4730366605336}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9550626456876461,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.828125,"distances_sum":2360.0601671666986}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9687557234432238,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.9453125,"distances_sum":2421.196157243313}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612007783882788,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.8515625,"distances_sum":2390.364939334157}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9687557234432238,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.9453125,"distances_sum":2421.196157243313}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9687557234432238,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.9453125,"distances_sum":2421.196157243313}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8497008200133207,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.03125,"distances_sum":1793.4464922643588}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7910072566322576,"seconds":4.541128873825073e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.6328125,"distances_sum":1532.1141068521806}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8497008200133207,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.03125,"distances_sum":1793.4464922643588}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9427744130869135,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.75,"distances_sum":2408.2038062711167}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9017950799200808,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.34375,"distances_sum":2114.44170365545}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8590721778221785,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.109375,"distances_sum":1854.692979640284}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8863365800865809,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.234375,"distances_sum":2034.3519398183153}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9427744130869135,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.75,"distances_sum":2408.2038062711167}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9608859890109898,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.875,"distances_sum":2500.000210161788}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9691048534798535,"seconds":7.644295692443848e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9140625,"distances_sum":2553.2468718207137}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9480196886446894,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.796875,"distances_sum":2421.316925238887}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.961652930402931,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":2513.891670743921}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9475706585081588,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8046875,"distances_sum":2412.2258225039677}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620364010989017,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8515625,"distances_sum":2512.8766453475287}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9624115467865474,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.828125,"distances_sum":2538.9092617000606}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9622481684981689,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8359375,"distances_sum":2510.9096315374445}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9526728479853485,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.859375,"distances_sum":2451.269275399759}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9691048534798535,"seconds":7.644295692443848e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9140625,"distances_sum":2553.2468718207137}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9691048534798535,"seconds":7.644295692443848e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9140625,"distances_sum":2553.2468718207137}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2734375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2734375,"f1":null,"seconds":3.285706043243408e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.078125,"distances_sum":599.774221264033}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.7696137196137204,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.3359375,"distances_sum":1498.5306745812304}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6435546875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6435546875,"f1":0.7696137196137204,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.3359375,"distances_sum":1498.5306745812304}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8930402930402938,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.34375,"distances_sum":2081.492482149402}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.814453125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.814453125,"f1":0.8930402930402938,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.34375,"distances_sum":2081.492482149402}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9617273351648357,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9140625,"distances_sum":2564.305746169516}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524210164835168,"seconds":6.290152668952942e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.859375,"distances_sum":2496.4093901397864}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9059294871794878,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5390625,"distances_sum":2126.09700579847}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9617273351648357,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9140625,"distances_sum":2564.305746169516}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9617273351648357,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9140625,"distances_sum":2564.305746169516}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8672452547452555,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.03125,"distances_sum":1888.996635500675}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8672452547452555,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.03125,"distances_sum":1888.996635500675}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9617616758241764,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.921875,"distances_sum":2505.396723587601}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9212740384615388,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.796875,"distances_sum":2218.082442771563}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622596153846158,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.890625,"distances_sum":2523.9017822464207}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9622596153846158,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.890625,"distances_sum":2523.9017822464207}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9728823260073265,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9453125,"distances_sum":2595.414584394299}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9736328125, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.9736328125,"f1":0.9854910714285715,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.984375,"distances_sum":2683.700460709641}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9671703296703302,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9296875,"distances_sum":2534.501184693104}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9781078296703298,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.96875,"distances_sum":2627.8196997618647}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9736328125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9736328125,"f1":0.9854910714285715,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.984375,"distances_sum":2683.700460709641}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9736328125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9736328125,"f1":0.9854910714285715,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.984375,"distances_sum":2683.700460709641}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.845779741092242,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.765625,"distances_sum":1785.4527421259465}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.845779741092242,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.765625,"distances_sum":1785.4527421259465}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8772238178488186,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.0546875,"distances_sum":1951.6288271612375}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.79296875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8772238178488186,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.0546875,"distances_sum":1951.6288271612375}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9532280219780225,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7578125,"distances_sum":2531.4308486557743}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9228193681318685,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5625,"distances_sum":2317.0685694450094}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9108974358974368,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.4375,"distances_sum":2240.1629194112475}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9532280219780225,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7578125,"distances_sum":2531.4308486557743}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9532280219780225,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7578125,"distances_sum":2531.4308486557743}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5400390625,"f1":0.6856671106671112,"seconds":4.231929779052734e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.7421875,"distances_sum":1191.114430137732}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7059204684204692,"seconds":4.420056939125061e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.8046875,"distances_sum":1267.5321199187692}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2177734375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2177734375,"f1":null,"seconds":3.3713877201080322e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.4453125,"distances_sum":547.1154910066672}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5654296875,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5654296875,"f1":0.7059204684204692,"seconds":4.420056939125061e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.8046875,"distances_sum":1267.5321199187692}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.862998980186481,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.8828125,"distances_sum":1936.614329642426}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9050600441225449,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.1875,"distances_sum":2202.8758794097153}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7736366064491071,"seconds":4.63239848613739e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.59375,"distances_sum":1489.0906220567654}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9261478105228114,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6875,"distances_sum":2324.7706268281863}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9261478105228114,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6875,"distances_sum":2324.7706268281863}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.960868818681319,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8671875,"distances_sum":2551.2883498856336}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9606055402930406,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8828125,"distances_sum":2559.5199109231326}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9747596153846154,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.953125,"distances_sum":2628.9690775330296}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9446917665667673,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.75,"distances_sum":2440.943990479779}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9657967032967036,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8359375,"distances_sum":2602.1785334769543}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9270234973359979,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.625,"distances_sum":2317.13162445614}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9747596153846154,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.953125,"distances_sum":2628.9690775330296}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9747596153846154,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.953125,"distances_sum":2628.9690775330296}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.22265625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.22265625,"f1":null,"seconds":3.030523657798767e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":4.984375,"distances_sum":575.4738085301112}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.22265625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.22265625,"f1":null,"seconds":3.030523657798767e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":4.984375,"distances_sum":575.4738085301112}}, n: 9
mean(cfft.distances) = 0.3265590273982324
mean(cdnet.distances) = 0.41852552353467176
mean(crand.distances) = 0.5587232816647681
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8822222222222224
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8511111111111113
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.888888888888889
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8688888888888888
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9511111111111111
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8577777777777778
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9066666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9400000000000001
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8955555555555555
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9222222222222222
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8666666666666666
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9199999999999999
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.888888888888889
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8999999999999999
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8266666666666667
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8933333333333332
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9177777777777778
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.84
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9022222222222224
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 8, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 3, 2, 1, 3, 2, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 8, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 3, 2, 1, 3, 2, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 8, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 3, 2, 1, 3, 2, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 8, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 3, 2, 1, 3, 2, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 8, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 3, 2, 1, 3, 2, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 8, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 3, 2, 1, 3, 2, 3, 1]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 8, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 3, 2, 1, 3, 2, 3, 1]
acc = 0.96
*** finished computation of 12 references, err: [Inf, 0.5228374147415161] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 29]]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 27, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 8, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 4]]
** centroid: 9, normalized-entropy: 0.9852281360342514, [(2, 3), (3, 4)]
*** center 10: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 12, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
finished with 15 centroids; started with 12
acc = 0.96
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.41022508272162833] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41022508272162833, 0.3039491682987403] ***
*** starting iteration: 2; err: [Inf, 0.41022508272162833, 0.3039491682987403] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41022508272162833, 0.3039491682987403, 0.3011041740151318] ***
*** starting iteration: 3; err: [Inf, 0.41022508272162833, 0.3039491682987403, 0.3011041740151318] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41022508272162833, 0.3039491682987403, 0.3011041740151318, 0.30035956157790916] ***
*** finished computation of 3 references, err: [Inf, 0.41022508272162833, 0.3039491682987403, 0.3011041740151318, 0.30035956157790916] ***
*** center 1: selecting labels [1] (freq >= 1) [from [204, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [71, 150, 28]]
** centroid: 2, normalized-entropy: 0.8272520201317947, [(1, 71), (2, 150), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [106, 107, 0]]
** centroid: 3, normalized-entropy: 0.9999841003731537, [(1, 106), (2, 107)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19887349448046526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19887349448046526, 0.15364689590911418] ***
*** starting iteration: 2; err: [Inf, 0.19887349448046526, 0.15364689590911418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19887349448046526, 0.15364689590911418, 0.1486000229870934] ***
*** starting iteration: 3; err: [Inf, 0.19887349448046526, 0.15364689590911418, 0.1486000229870934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19887349448046526, 0.15364689590911418, 0.1486000229870934, 0.14741072998390542] ***
*** finished computation of 7 references, err: [Inf, 0.19887349448046526, 0.15364689590911418, 0.1486000229870934, 0.14741072998390542] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [6, 101, 0]]
** centroid: 1, normalized-entropy: 0.31166198862303296, [(1, 6), (2, 101)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [76, 9, 0]]
** centroid: 2, normalized-entropy: 0.48736957102366285, [(1, 76), (2, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 50, 28]]
** centroid: 4, normalized-entropy: 0.9418285354475157, [(2, 50), (3, 28)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [98, 8, 0]]
** centroid: 5, normalized-entropy: 0.3860189005698936, [(1, 98), (2, 8)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [108, 3, 0]]
** centroid: 6, normalized-entropy: 0.1792560669283214, [(1, 108), (2, 3)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 86, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49023930894593515] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49023930894593515, 0.34242824982360254] ***
*** starting iteration: 2; err: [Inf, 0.49023930894593515, 0.34242824982360254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49023930894593515, 0.34242824982360254, 0.30277045341795017] ***
*** starting iteration: 3; err: [Inf, 0.49023930894593515, 0.34242824982360254, 0.30277045341795017] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49023930894593515, 0.34242824982360254, 0.30277045341795017, 0.29283151944967983] ***
*** starting iteration: 4; err: [Inf, 0.49023930894593515, 0.34242824982360254, 0.30277045341795017, 0.29283151944967983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49023930894593515, 0.34242824982360254, 0.30277045341795017, 0.29283151944967983, 0.2915982225675253] ***
*** starting iteration: 5; err: [Inf, 0.49023930894593515, 0.34242824982360254, 0.30277045341795017, 0.29283151944967983, 0.2915982225675253] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49023930894593515, 0.34242824982360254, 0.30277045341795017, 0.29283151944967983, 0.2915982225675253, 0.29150461101963154] ***
*** finished computation of 3 references, err: [Inf, 0.49023930894593515, 0.34242824982360254, 0.30277045341795017, 0.29283151944967983, 0.2915982225675253, 0.29150461101963154] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [117, 69, 0]]
** centroid: 1, normalized-entropy: 0.9514122535330207, [(1, 117), (2, 69)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [38, 190, 25]]
** centroid: 2, normalized-entropy: 0.66311754159236, [(1, 38), (2, 190), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [227, 1, 0]]
** centroid: 3, normalized-entropy: 0.0406684939233483, [(1, 227), (2, 1)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3484366610143585] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3484366610143585, 0.3124507084304559] ***
*** starting iteration: 2; err: [Inf, 0.3484366610143585, 0.3124507084304559] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3484366610143585, 0.3124507084304559, 0.3044955002093713] ***
*** starting iteration: 3; err: [Inf, 0.3484366610143585, 0.3124507084304559, 0.3044955002093713] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3484366610143585, 0.3124507084304559, 0.3044955002093713, 0.30088743459394224] ***
*** starting iteration: 4; err: [Inf, 0.3484366610143585, 0.3124507084304559, 0.3044955002093713, 0.30088743459394224] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3484366610143585, 0.3124507084304559, 0.3044955002093713, 0.30088743459394224, 0.29868841724612677] ***
*** starting iteration: 5; err: [Inf, 0.3484366610143585, 0.3124507084304559, 0.3044955002093713, 0.30088743459394224, 0.29868841724612677] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3484366610143585, 0.3124507084304559, 0.3044955002093713, 0.30088743459394224, 0.29868841724612677, 0.29742544358023726] ***
*** starting iteration: 6; err: [Inf, 0.3484366610143585, 0.3124507084304559, 0.3044955002093713, 0.30088743459394224, 0.29868841724612677, 0.29742544358023726] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3484366610143585, 0.3124507084304559, 0.3044955002093713, 0.30088743459394224, 0.29868841724612677, 0.29742544358023726, 0.29721594582461214] ***
*** finished computation of 3 references, err: [Inf, 0.3484366610143585, 0.3124507084304559, 0.3044955002093713, 0.30088743459394224, 0.29868841724612677, 0.29742544358023726, 0.29721594582461214] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [83, 144, 27]]
** centroid: 1, normalized-entropy: 0.8424315032116682, [(1, 83), (2, 144), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [200, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [106, 107, 0]]
** centroid: 3, normalized-entropy: 0.9999841003731537, [(1, 106), (2, 107)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38864025979109845] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38864025979109845, 0.31382526043248743] ***
*** starting iteration: 2; err: [Inf, 0.38864025979109845, 0.31382526043248743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38864025979109845, 0.31382526043248743, 0.3019905235078577] ***
*** starting iteration: 3; err: [Inf, 0.38864025979109845, 0.31382526043248743, 0.3019905235078577] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38864025979109845, 0.31382526043248743, 0.3019905235078577, 0.299120426439476] ***
*** starting iteration: 4; err: [Inf, 0.38864025979109845, 0.31382526043248743, 0.3019905235078577, 0.299120426439476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38864025979109845, 0.31382526043248743, 0.3019905235078577, 0.299120426439476, 0.2982974215942035] ***
*** finished computation of 3 references, err: [Inf, 0.38864025979109845, 0.31382526043248743, 0.3019905235078577, 0.299120426439476, 0.2982974215942035] ***
*** center 1: selecting labels [1] (freq >= 2) [from [203, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [59, 158, 28]]
** centroid: 2, normalized-entropy: 0.7952214384089333, [(1, 59), (2, 158), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [119, 99, 0]]
** centroid: 3, normalized-entropy: 0.9939200164212996, [(1, 119), (2, 99)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3734938587205878] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3734938587205878, 0.3237326167470802] ***
*** starting iteration: 2; err: [Inf, 0.3734938587205878, 0.3237326167470802] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3734938587205878, 0.3237326167470802, 0.32245296627741077] ***
*** starting iteration: 3; err: [Inf, 0.3734938587205878, 0.3237326167470802, 0.32245296627741077] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3734938587205878, 0.3237326167470802, 0.32245296627741077, 0.32159546502995706] ***
*** finished computation of 3 references, err: [Inf, 0.3734938587205878, 0.3237326167470802, 0.32245296627741077, 0.32159546502995706] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [199, 2, 0]]
** centroid: 1, normalized-entropy: 0.08046313651133605, [(1, 199), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [109, 118, 0]]
** centroid: 2, normalized-entropy: 0.9988657946680859, [(1, 109), (2, 118)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [74, 140, 25]]
** centroid: 3, normalized-entropy: 0.8305347846813166, [(1, 74), (2, 140), (3, 25)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3593595549352523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3593595549352523, 0.30418794673366256] ***
*** starting iteration: 2; err: [Inf, 0.3593595549352523, 0.30418794673366256] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3593595549352523, 0.30418794673366256, 0.29852390759017156] ***
*** starting iteration: 3; err: [Inf, 0.3593595549352523, 0.30418794673366256, 0.29852390759017156] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3593595549352523, 0.30418794673366256, 0.29852390759017156, 0.2976043412163072] ***
*** finished computation of 3 references, err: [Inf, 0.3593595549352523, 0.30418794673366256, 0.29852390759017156, 0.2976043412163072] ***
*** center 1: selecting labels [1] (freq >= 2) [from [220, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [122, 94, 0]]
** centroid: 2, normalized-entropy: 0.9878444130876813, [(1, 122), (2, 94)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [47, 157, 27]]
** centroid: 3, normalized-entropy: 0.7621711515820502, [(1, 47), (2, 157), (3, 27)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23195905392142097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23195905392142097, 0.2048112466349616] ***
*** starting iteration: 2; err: [Inf, 0.23195905392142097, 0.2048112466349616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23195905392142097, 0.2048112466349616, 0.1959808981248846] ***
*** starting iteration: 3; err: [Inf, 0.23195905392142097, 0.2048112466349616, 0.1959808981248846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23195905392142097, 0.2048112466349616, 0.1959808981248846, 0.19209336940137609] ***
*** finished computation of 7 references, err: [Inf, 0.23195905392142097, 0.2048112466349616, 0.1959808981248846, 0.19209336940137609] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 66, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [60, 1, 0]]
** centroid: 2, normalized-entropy: 0.12068101401352371, [(1, 60), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [30, 60, 0]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(1, 30), (2, 60)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [95, 40, 0]]
** centroid: 5, normalized-entropy: 0.876716288999464, [(1, 95), (2, 40)]
*** center 6: selecting labels [1] (freq >= 1) [from [115, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 90, 28]]
** centroid: 7, normalized-entropy: 0.7905013842153699, [(2, 90), (3, 28)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2740067613340434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2740067613340434, 0.23048610761873367] ***
*** starting iteration: 2; err: [Inf, 0.2740067613340434, 0.23048610761873367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2740067613340434, 0.23048610761873367, 0.22038082394056369] ***
*** starting iteration: 3; err: [Inf, 0.2740067613340434, 0.23048610761873367, 0.22038082394056369] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2740067613340434, 0.23048610761873367, 0.22038082394056369, 0.2134013345054556] ***
*** finished computation of 7 references, err: [Inf, 0.2740067613340434, 0.23048610761873367, 0.22038082394056369, 0.2134013345054556] ***
*** center 1: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 93, 6]]
** centroid: 2, normalized-entropy: 0.32984607020714635, [(2, 93), (3, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [110, 41, 0]]
** centroid: 3, normalized-entropy: 0.843641820933993, [(1, 110), (2, 41)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [63, 27, 0]]
** centroid: 4, normalized-entropy: 0.8812908992306927, [(1, 63), (2, 27)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 94, 19]]
** centroid: 5, normalized-entropy: 0.6534358224760193, [(2, 94), (3, 19)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [73, 5, 0]]
** centroid: 6, normalized-entropy: 0.34351974100740135, [(1, 73), (2, 5)]
*** center 7: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24611747130260117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24611747130260117, 0.22142665874704473] ***
*** starting iteration: 2; err: [Inf, 0.24611747130260117, 0.22142665874704473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24611747130260117, 0.22142665874704473, 0.20729635334175744] ***
*** starting iteration: 3; err: [Inf, 0.24611747130260117, 0.22142665874704473, 0.20729635334175744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24611747130260117, 0.22142665874704473, 0.20729635334175744, 0.19182845459332218] ***
*** finished computation of 7 references, err: [Inf, 0.24611747130260117, 0.22142665874704473, 0.20729635334175744, 0.19182845459332218] ***
*** center 1: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [80, 2, 0]]
** centroid: 2, normalized-entropy: 0.16542703399626665, [(1, 80), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [63, 45, 0]]
** centroid: 3, normalized-entropy: 0.9798687566511527, [(1, 63), (2, 45)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [96, 22, 0]]
** centroid: 4, normalized-entropy: 0.693965967334286, [(1, 96), (2, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 94, 0]]
** centroid: 5, normalized-entropy: 0.08426242877623306, [(1, 1), (2, 94)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 88, 27]]
** centroid: 6, normalized-entropy: 0.7862557466096292, [(2, 88), (3, 27)]
*** center 7: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3003925711095512] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3003925711095512, 0.249410802704022] ***
*** starting iteration: 2; err: [Inf, 0.3003925711095512, 0.249410802704022] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3003925711095512, 0.249410802704022, 0.24122901473406916] ***
*** starting iteration: 3; err: [Inf, 0.3003925711095512, 0.249410802704022, 0.24122901473406916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3003925711095512, 0.249410802704022, 0.24122901473406916, 0.23927052234168034] ***
*** finished computation of 3 references, err: [Inf, 0.3003925711095512, 0.249410802704022, 0.24122901473406916, 0.23927052234168034] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [79, 117, 10]]
** centroid: 1, normalized-entropy: 0.760694473692756, [(1, 79), (2, 117), (3, 10)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [91, 138, 18]]
** centroid: 2, normalized-entropy: 0.8046330646685674, [(1, 91), (2, 138), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [211, 2, 0]]
** centroid: 3, normalized-entropy: 0.07671934408867377, [(1, 211), (2, 2)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.250000211931039] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.250000211931039, 0.22802715986475594] ***
*** starting iteration: 2; err: [Inf, 0.250000211931039, 0.22802715986475594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.250000211931039, 0.22802715986475594, 0.22591295367249217] ***
*** starting iteration: 3; err: [Inf, 0.250000211931039, 0.22802715986475594, 0.22591295367249217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.250000211931039, 0.22802715986475594, 0.22591295367249217, 0.2255792106163857] ***
*** finished computation of 3 references, err: [Inf, 0.250000211931039, 0.22802715986475594, 0.22591295367249217, 0.2255792106163857] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [139, 38, 0]]
** centroid: 1, normalized-entropy: 0.7503510042105468, [(1, 139), (2, 38)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [243, 13, 0]]
** centroid: 2, normalized-entropy: 0.28970642690609794, [(1, 243), (2, 13)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 209, 25]]
** centroid: 3, normalized-entropy: 0.4903029103984789, [(2, 209), (3, 25)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2981041847271607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2981041847271607, 0.2547513226569369] ***
*** starting iteration: 2; err: [Inf, 0.2981041847271607, 0.2547513226569369] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2981041847271607, 0.2547513226569369, 0.2448247184242489] ***
*** starting iteration: 3; err: [Inf, 0.2981041847271607, 0.2547513226569369, 0.2448247184242489] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2981041847271607, 0.2547513226569369, 0.2448247184242489, 0.24171851735668204] ***
*** finished computation of 3 references, err: [Inf, 0.2981041847271607, 0.2547513226569369, 0.2448247184242489, 0.24171851735668204] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [261, 20, 0]]
** centroid: 1, normalized-entropy: 0.37029099280994004, [(1, 261), (2, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [128, 60, 0]]
** centroid: 2, normalized-entropy: 0.9034535552068337, [(1, 128), (2, 60)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 171, 27]]
** centroid: 3, normalized-entropy: 0.5746356978376794, [(2, 171), (3, 27)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.29430121503555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29430121503555, 0.21043954791246658] ***
*** finished computation of 7 references, err: [Inf, 0.29430121503555, 0.21043954791246658] ***
*** center 1: selecting labels [1] (freq >= 1) [from [238, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 49, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 7]]
** centroid: 4, normalized-entropy: 0.9494520153879484, [(2, 12), (3, 7)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [103, 52, 0]]
** centroid: 5, normalized-entropy: 0.9204313753180552, [(1, 103), (2, 52)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [37, 74, 0]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(1, 37), (2, 74)]
*** center 7: selecting labels [1, 2, 3] (freq >= 1) [from [3, 70, 6]]
** centroid: 7, normalized-entropy: 0.38881409777555787, [(1, 3), (2, 70), (3, 6)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21271481301155182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21271481301155182, 0.17448056175902688] ***
*** finished computation of 7 references, err: [Inf, 0.21271481301155182, 0.17448056175902688] ***
*** center 1: selecting labels [1] (freq >= 1) [from [145, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [4, 87, 0]]
** centroid: 2, normalized-entropy: 0.26014536394771426, [(1, 4), (2, 87)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [145, 14, 0]]
** centroid: 3, normalized-entropy: 0.42992832030968897, [(1, 145), (2, 14)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 53, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 27, 7]]
** centroid: 5, normalized-entropy: 0.7335379291086666, [(2, 27), (3, 7)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [88, 76, 0]]
** centroid: 6, normalized-entropy: 0.9961344835095798, [(1, 88), (2, 76)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 18]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(2, 3), (3, 18)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31370227121380806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31370227121380806, 0.2095788387132102] ***
*** finished computation of 7 references, err: [Inf, 0.31370227121380806, 0.2095788387132102] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 70, 27]]
** centroid: 1, normalized-entropy: 0.8531935252328874, [(2, 70), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [31, 21, 0]]
** centroid: 2, normalized-entropy: 0.9731560354421095, [(1, 31), (2, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [126, 66, 0]]
** centroid: 3, normalized-entropy: 0.9283620723948678, [(1, 126), (2, 66)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 25, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [136, 46, 0]]
** centroid: 5, normalized-entropy: 0.8156034512499668, [(1, 136), (2, 46)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [19, 23, 0]]
** centroid: 6, normalized-entropy: 0.9934472383802028, [(1, 19), (2, 23)]
*** center 7: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2252475068745044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2252475068745044, 0.17370305670979055] ***
*** starting iteration: 2; err: [Inf, 0.2252475068745044, 0.17370305670979055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2252475068745044, 0.17370305670979055, 0.16459210625711224] ***
*** starting iteration: 3; err: [Inf, 0.2252475068745044, 0.17370305670979055, 0.16459210625711224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2252475068745044, 0.17370305670979055, 0.16459210625711224, 0.15757863572169398] ***
*** starting iteration: 4; err: [Inf, 0.2252475068745044, 0.17370305670979055, 0.16459210625711224, 0.15757863572169398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2252475068745044, 0.17370305670979055, 0.16459210625711224, 0.15757863572169398, 0.15221838349988265] ***
*** starting iteration: 5; err: [Inf, 0.2252475068745044, 0.17370305670979055, 0.16459210625711224, 0.15757863572169398, 0.15221838349988265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2252475068745044, 0.17370305670979055, 0.16459210625711224, 0.15757863572169398, 0.15221838349988265, 0.14848235587578257] ***
*** starting iteration: 6; err: [Inf, 0.2252475068745044, 0.17370305670979055, 0.16459210625711224, 0.15757863572169398, 0.15221838349988265, 0.14848235587578257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2252475068745044, 0.17370305670979055, 0.16459210625711224, 0.15757863572169398, 0.15221838349988265, 0.14848235587578257, 0.146398005669366] ***
*** starting iteration: 7; err: [Inf, 0.2252475068745044, 0.17370305670979055, 0.16459210625711224, 0.15757863572169398, 0.15221838349988265, 0.14848235587578257, 0.146398005669366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2252475068745044, 0.17370305670979055, 0.16459210625711224, 0.15757863572169398, 0.15221838349988265, 0.14848235587578257, 0.146398005669366, 0.1455493547125823] ***
*** finished computation of 7 references, err: [Inf, 0.2252475068745044, 0.17370305670979055, 0.16459210625711224, 0.15757863572169398, 0.15221838349988265, 0.14848235587578257, 0.146398005669366, 0.1455493547125823] ***
*** center 1: selecting labels [1] (freq >= 1) [from [116, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [112, 3, 0]]
** centroid: 2, normalized-entropy: 0.17437145292163486, [(1, 112), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [95, 2, 0]]
** centroid: 3, normalized-entropy: 0.14489961753310668, [(1, 95), (2, 2)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 94, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [58, 38, 0]]
** centroid: 5, normalized-entropy: 0.968461008760162, [(1, 58), (2, 38)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 47, 28]]
** centroid: 6, normalized-entropy: 0.9531971725430559, [(2, 47), (3, 28)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 73, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2372450072713988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2372450072713988, 0.1647978755387141] ***
*** starting iteration: 2; err: [Inf, 0.2372450072713988, 0.1647978755387141] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2372450072713988, 0.1647978755387141, 0.155683782514369] ***
*** starting iteration: 3; err: [Inf, 0.2372450072713988, 0.1647978755387141, 0.155683782514369] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2372450072713988, 0.1647978755387141, 0.155683782514369, 0.15119804843343554] ***
*** starting iteration: 4; err: [Inf, 0.2372450072713988, 0.1647978755387141, 0.155683782514369, 0.15119804843343554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2372450072713988, 0.1647978755387141, 0.155683782514369, 0.15119804843343554, 0.14909237973961695] ***
*** starting iteration: 5; err: [Inf, 0.2372450072713988, 0.1647978755387141, 0.155683782514369, 0.15119804843343554, 0.14909237973961695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2372450072713988, 0.1647978755387141, 0.155683782514369, 0.15119804843343554, 0.14909237973961695, 0.14780276085248684] ***
*** starting iteration: 6; err: [Inf, 0.2372450072713988, 0.1647978755387141, 0.155683782514369, 0.15119804843343554, 0.14909237973961695, 0.14780276085248684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2372450072713988, 0.1647978755387141, 0.155683782514369, 0.15119804843343554, 0.14909237973961695, 0.14780276085248684, 0.1468029681096102] ***
*** finished computation of 7 references, err: [Inf, 0.2372450072713988, 0.1647978755387141, 0.155683782514369, 0.15119804843343554, 0.14909237973961695, 0.14780276085248684, 0.1468029681096102] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [103, 7, 0]]
** centroid: 1, normalized-entropy: 0.34171390666761664, [(1, 103), (2, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [115, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [35, 60, 0]]
** centroid: 4, normalized-entropy: 0.9494520153879484, [(1, 35), (2, 60)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 98, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [42, 41, 0]]
** centroid: 6, normalized-entropy: 0.9998952874186191, [(1, 42), (2, 41)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 54, 25]]
** centroid: 7, normalized-entropy: 0.9004854334784268, [(2, 54), (3, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19682814343657898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19682814343657898, 0.1652290868046491] ***
*** starting iteration: 2; err: [Inf, 0.19682814343657898, 0.1652290868046491] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19682814343657898, 0.1652290868046491, 0.1581248805873554] ***
*** starting iteration: 3; err: [Inf, 0.19682814343657898, 0.1652290868046491, 0.1581248805873554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19682814343657898, 0.1652290868046491, 0.1581248805873554, 0.15438095446972028] ***
*** starting iteration: 4; err: [Inf, 0.19682814343657898, 0.1652290868046491, 0.1581248805873554, 0.15438095446972028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19682814343657898, 0.1652290868046491, 0.1581248805873554, 0.15438095446972028, 0.1523746324541128] ***
*** starting iteration: 5; err: [Inf, 0.19682814343657898, 0.1652290868046491, 0.1581248805873554, 0.15438095446972028, 0.1523746324541128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19682814343657898, 0.1652290868046491, 0.1581248805873554, 0.15438095446972028, 0.1523746324541128, 0.15155016726777906] ***
*** finished computation of 7 references, err: [Inf, 0.19682814343657898, 0.1652290868046491, 0.1581248805873554, 0.15438095446972028, 0.1523746324541128, 0.15155016726777906] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [102, 19, 0]]
** centroid: 1, normalized-entropy: 0.6271441658983906, [(1, 102), (2, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [120, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [58, 23, 0]]
** centroid: 3, normalized-entropy: 0.8607781176165941, [(1, 58), (2, 23)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [42, 61, 0]]
** centroid: 4, normalized-entropy: 0.9753130577847331, [(1, 42), (2, 61)]
*** center 5: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 89, 1]]
** centroid: 6, normalized-entropy: 0.08807225904068142, [(2, 89), (3, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 59, 26]]
** centroid: 7, normalized-entropy: 0.8883630233845602, [(2, 59), (3, 26)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19178217054912652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19178217054912652, 0.156687600589099] ***
*** starting iteration: 2; err: [Inf, 0.19178217054912652, 0.156687600589099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19178217054912652, 0.156687600589099, 0.152580335356485] ***
*** starting iteration: 3; err: [Inf, 0.19178217054912652, 0.156687600589099, 0.152580335356485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19178217054912652, 0.156687600589099, 0.152580335356485, 0.15173022045071113] ***
*** finished computation of 7 references, err: [Inf, 0.19178217054912652, 0.156687600589099, 0.152580335356485, 0.15173022045071113] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 107, 10]]
** centroid: 1, normalized-entropy: 0.4211660145082221, [(2, 107), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [69, 22, 0]]
** centroid: 3, normalized-entropy: 0.7979519684655734, [(1, 69), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [57, 20, 0]]
** centroid: 4, normalized-entropy: 0.8263541679009075, [(1, 57), (2, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [72, 22, 0]]
** centroid: 5, normalized-entropy: 0.7849920887641585, [(1, 72), (2, 22)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 82, 15]]
** centroid: 6, normalized-entropy: 0.6213290966942344, [(2, 82), (3, 15)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [102, 7, 0]]
** centroid: 7, normalized-entropy: 0.3439745143595339, [(1, 102), (2, 7)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19041381249653883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19041381249653883, 0.1552265091063357] ***
*** starting iteration: 2; err: [Inf, 0.19041381249653883, 0.1552265091063357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19041381249653883, 0.1552265091063357, 0.15141749770116658] ***
*** starting iteration: 3; err: [Inf, 0.19041381249653883, 0.1552265091063357, 0.15141749770116658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19041381249653883, 0.1552265091063357, 0.15141749770116658, 0.14976821983557032] ***
*** finished computation of 7 references, err: [Inf, 0.19041381249653883, 0.1552265091063357, 0.15141749770116658, 0.14976821983557032] ***
*** center 1: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 54, 27]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 54), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [53, 34, 0]]
** centroid: 3, normalized-entropy: 0.9653168212008997, [(1, 53), (2, 34)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [107, 9, 0]]
** centroid: 4, normalized-entropy: 0.3936164041111622, [(1, 107), (2, 9)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [45, 65, 0]]
** centroid: 5, normalized-entropy: 0.976020648236615, [(1, 45), (2, 65)]
*** center 6: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 89, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1931391186150792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1931391186150792, 0.1509618989877856] ***
*** finished computation of 7 references, err: [Inf, 0.1931391186150792, 0.1509618989877856] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [99, 12, 0]]
** centroid: 1, normalized-entropy: 0.4941829348497886, [(1, 99), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [80, 3, 0]]
** centroid: 2, normalized-entropy: 0.2243269603450881, [(1, 80), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 28]]
** centroid: 3, normalized-entropy: 0.995148095654003, [(2, 33), (3, 28)]
*** center 4: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [118, 25, 0]]
** centroid: 5, normalized-entropy: 0.6686245915401701, [(1, 118), (2, 25)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 92, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 92, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18920312126645694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18920312126645694, 0.15171872565279837] ***
*** finished computation of 7 references, err: [Inf, 0.18920312126645694, 0.15171872565279837] ***
*** center 1: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 38, 24]]
** centroid: 2, normalized-entropy: 0.9629004147713269, [(2, 38), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [70, 11, 0]]
** centroid: 3, normalized-entropy: 0.5731393980555147, [(1, 70), (2, 11)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [59, 31, 0]]
** centroid: 4, normalized-entropy: 0.9290083681703216, [(1, 59), (2, 31)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [40, 100, 0]]
** centroid: 5, normalized-entropy: 0.8631205685666311, [(1, 40), (2, 100)]
*** center 6: selecting labels [1] (freq >= 2) [from [124, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 80, 1]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21260756256011337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21260756256011337, 0.15164742916347695] ***
*** finished computation of 7 references, err: [Inf, 0.21260756256011337, 0.15164742916347695] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [62, 5, 0]]
** centroid: 1, normalized-entropy: 0.3829576722723533, [(1, 62), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [76, 33, 0]]
** centroid: 2, normalized-entropy: 0.8846293067903075, [(1, 76), (2, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 59, 27]]
** centroid: 4, normalized-entropy: 0.8976844934141643, [(2, 59), (3, 27)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [73, 57, 0]]
** centroid: 5, normalized-entropy: 0.9890453237543657, [(1, 73), (2, 57)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 97, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1848322485095343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1848322485095343, 0.15496168492638782] ***
*** starting iteration: 2; err: [Inf, 0.1848322485095343, 0.15496168492638782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1848322485095343, 0.15496168492638782, 0.15160767107855183] ***
*** starting iteration: 3; err: [Inf, 0.1848322485095343, 0.15496168492638782, 0.15160767107855183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1848322485095343, 0.15496168492638782, 0.15160767107855183, 0.15104806484716074] ***
*** finished computation of 7 references, err: [Inf, 0.1848322485095343, 0.15496168492638782, 0.15160767107855183, 0.15104806484716074] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [77, 72, 0]]
** centroid: 1, normalized-entropy: 0.9991875557819342, [(1, 77), (2, 72)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [69, 15, 0]]
** centroid: 2, normalized-entropy: 0.6769418697808861, [(1, 69), (2, 15)]
*** center 3: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 57, 28]]
** centroid: 4, normalized-entropy: 0.9143242464317818, [(2, 57), (3, 28)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [82, 8, 0]]
** centroid: 5, normalized-entropy: 0.43275015878875417, [(1, 82), (2, 8)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 105, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19525566150055923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19525566150055923, 0.1494431040351694] ***
*** starting iteration: 2; err: [Inf, 0.19525566150055923, 0.1494431040351694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19525566150055923, 0.1494431040351694, 0.1456296834354659] ***
*** starting iteration: 3; err: [Inf, 0.19525566150055923, 0.1494431040351694, 0.1456296834354659] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19525566150055923, 0.1494431040351694, 0.1456296834354659, 0.145187064020921] ***
*** finished computation of 7 references, err: [Inf, 0.19525566150055923, 0.1494431040351694, 0.1456296834354659, 0.145187064020921] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 91, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [57, 33, 0]]
** centroid: 2, normalized-entropy: 0.9480782435939054, [(1, 57), (2, 33)]
*** center 3: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 80, 25]]
** centroid: 4, normalized-entropy: 0.7918583525674836, [(2, 80), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [52, 54, 0]]
** centroid: 5, normalized-entropy: 0.9997431860710851, [(1, 52), (2, 54)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [105, 2, 0]]
** centroid: 6, normalized-entropy: 0.13402979616803584, [(1, 105), (2, 2)]
*** center 7: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19145491183630708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19145491183630708, 0.15525848773060955] ***
*** starting iteration: 2; err: [Inf, 0.19145491183630708, 0.15525848773060955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19145491183630708, 0.15525848773060955, 0.1504322286818115] ***
*** starting iteration: 3; err: [Inf, 0.19145491183630708, 0.15525848773060955, 0.1504322286818115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19145491183630708, 0.15525848773060955, 0.1504322286818115, 0.14937712524625205] ***
*** starting iteration: 4; err: [Inf, 0.19145491183630708, 0.15525848773060955, 0.1504322286818115, 0.14937712524625205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19145491183630708, 0.15525848773060955, 0.1504322286818115, 0.14937712524625205, 0.14883402771856832] ***
*** finished computation of 7 references, err: [Inf, 0.19145491183630708, 0.15525848773060955, 0.1504322286818115, 0.14937712524625205, 0.14883402771856832] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [61, 45, 0]]
** centroid: 1, normalized-entropy: 0.9835018986559216, [(1, 61), (2, 45)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [67, 4, 0]]
** centroid: 2, normalized-entropy: 0.3127333763966432, [(1, 67), (2, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 72, 27]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 72), (3, 27)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [3, 101, 0]]
** centroid: 5, normalized-entropy: 0.18857195602479668, [(1, 3), (2, 101)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [90, 1, 0]]
** centroid: 6, normalized-entropy: 0.08728058888363333, [(1, 90), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [70, 28, 0]]
** centroid: 7, normalized-entropy: 0.8631205685666311, [(1, 70), (2, 28)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1882963468182228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1882963468182228, 0.15437156306132227] ***
*** starting iteration: 2; err: [Inf, 0.1882963468182228, 0.15437156306132227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1882963468182228, 0.15437156306132227, 0.15167285215568255] ***
*** starting iteration: 3; err: [Inf, 0.1882963468182228, 0.15437156306132227, 0.15167285215568255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1882963468182228, 0.15437156306132227, 0.15167285215568255, 0.1514978060658249] ***
*** finished computation of 7 references, err: [Inf, 0.1882963468182228, 0.15437156306132227, 0.15167285215568255, 0.1514978060658249] ***
*** center 1: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 73, 28]]
** centroid: 2, normalized-entropy: 0.8516458330898723, [(2, 73), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [56, 37, 0]]
** centroid: 3, normalized-entropy: 0.9696787018231177, [(1, 56), (2, 37)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [39, 52, 0]]
** centroid: 4, normalized-entropy: 0.9852281360342514, [(1, 39), (2, 52)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [15, 94, 0]]
** centroid: 5, normalized-entropy: 0.5779576184299016, [(1, 15), (2, 94)]
*** center 6: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [87, 1, 0]]
** centroid: 7, normalized-entropy: 0.08970338978685011, [(1, 87), (2, 1)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.21127557290103244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21127557290103244, 0.1495233204504098] ***
*** starting iteration: 2; err: [Inf, 0.21127557290103244, 0.1495233204504098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21127557290103244, 0.1495233204504098, 0.1450892516807688] ***
*** starting iteration: 3; err: [Inf, 0.21127557290103244, 0.1495233204504098, 0.1450892516807688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21127557290103244, 0.1495233204504098, 0.1450892516807688, 0.14466842769532054] ***
*** finished computation of 7 references, err: [Inf, 0.21127557290103244, 0.1495233204504098, 0.1450892516807688, 0.14466842769532054] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 85, 25]]
** centroid: 1, normalized-entropy: 0.7732266742876346, [(2, 85), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [55, 35, 0]]
** centroid: 4, normalized-entropy: 0.9640787648082293, [(1, 55), (2, 35)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [48, 60, 0]]
** centroid: 5, normalized-entropy: 0.9910760598382222, [(1, 48), (2, 60)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 80, 0]]
** centroid: 6, normalized-entropy: 0.09597040299587173, [(1, 1), (2, 80)]
*** center 7: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19125802110534335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19125802110534335, 0.15187929822983726] ***
*** starting iteration: 2; err: [Inf, 0.19125802110534335, 0.15187929822983726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19125802110534335, 0.15187929822983726, 0.14889015138395006] ***
*** starting iteration: 3; err: [Inf, 0.19125802110534335, 0.15187929822983726, 0.14889015138395006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19125802110534335, 0.15187929822983726, 0.14889015138395006, 0.14792616792564942] ***
*** finished computation of 7 references, err: [Inf, 0.19125802110534335, 0.15187929822983726, 0.14889015138395006, 0.14792616792564942] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [114, 4, 0]]
** centroid: 1, normalized-entropy: 0.21357981533827744, [(1, 114), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [47, 38, 0]]
** centroid: 2, normalized-entropy: 0.9918977415529348, [(1, 47), (2, 38)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 63, 27]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 63), (3, 27)]
*** center 4: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [47, 64, 0]]
** centroid: 5, normalized-entropy: 0.983013379603719, [(1, 47), (2, 64)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 82, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 12)
[0.9489609369848891, 0.9430148711585837, 0.9359748970527413, 0.9340028651405897, 0.9300078521635408, 0.9269658880437324, 0.9150138162114209, 0.9109858361355366, 0.8859967752183321, 0.8700077322831814, 0.8540037043031056, 0.7910185634736533]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489609369848891
finished with 13
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.20054928801517496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20054928801517496, 0.1548668132646026] ***
*** finished computation of 7 references, err: [Inf, 0.20054928801517496, 0.1548668132646026] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [38, 107, 0]]
** centroid: 1, normalized-entropy: 0.8298524482509417, [(1, 38), (2, 107)]
*** center 2: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [54, 9, 0]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(1, 54), (2, 9)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 51, 28]]
** centroid: 4, normalized-entropy: 0.9379626436434424, [(2, 51), (3, 28)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [93, 8, 0]]
** centroid: 5, normalized-entropy: 0.39938208242459744, [(1, 93), (2, 8)]
*** center 6: selecting labels [1] (freq >= 2) [from [102, 1, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 81, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19825734761485975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19825734761485975, 0.15417173416165264] ***
*** finished computation of 7 references, err: [Inf, 0.19825734761485975, 0.15417173416165264] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [24, 100, 0]]
** centroid: 1, normalized-entropy: 0.708835673332196, [(1, 24), (2, 100)]
*** center 2: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [51, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [85, 20, 0]]
** centroid: 4, normalized-entropy: 0.7024665512903904, [(1, 85), (2, 20)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 49, 25]]
** centroid: 5, normalized-entropy: 0.9227346209530939, [(2, 49), (3, 25)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [130, 4, 0]]
** centroid: 6, normalized-entropy: 0.19364280468389852, [(1, 130), (2, 4)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 86, 0]]
** centroid: 7, normalized-entropy: 0.1564910629057016, [(1, 2), (2, 86)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21447743806775765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21447743806775765, 0.15149959965680224] ***
*** finished computation of 7 references, err: [Inf, 0.21447743806775765, 0.15149959965680224] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [77, 55, 0]]
** centroid: 1, normalized-entropy: 0.9798687566511527, [(1, 77), (2, 55)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 59, 27]]
** centroid: 2, normalized-entropy: 0.8976844934141643, [(2, 59), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [76, 34, 0]]
** centroid: 3, normalized-entropy: 0.8921212805771683, [(1, 76), (2, 34)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [60, 5, 0]]
** centroid: 4, normalized-entropy: 0.3912435636292556, [(1, 60), (2, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 98, 0]]
** centroid: 6, normalized-entropy: 0.192900074578984, [(1, 3), (2, 98)]
*** center 7: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 13)
[0.9489609369848891, 0.9480078881276487, 0.9430148711585837, 0.9359748970527413, 0.9340028651405897, 0.9300078521635408, 0.9269658880437324, 0.9150138162114209, 0.9109858361355366, 0.8859967752183321, 0.8700077322831814, 0.8540037043031056, 0.7910185634736533]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489609369848891
finished with 14
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.2618686639754152] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2618686639754152, 0.2398291628488952] ***
*** starting iteration: 2; err: [Inf, 0.2618686639754152, 0.2398291628488952] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2618686639754152, 0.2398291628488952, 0.23470485495409002] ***
*** starting iteration: 3; err: [Inf, 0.2618686639754152, 0.2398291628488952, 0.23470485495409002] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2618686639754152, 0.2398291628488952, 0.23470485495409002, 0.23303614016524418] ***
*** starting iteration: 4; err: [Inf, 0.2618686639754152, 0.2398291628488952, 0.23470485495409002, 0.23303614016524418] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2618686639754152, 0.2398291628488952, 0.23470485495409002, 0.23303614016524418, 0.23271457258019004] ***
*** finished computation of 3 references, err: [Inf, 0.2618686639754152, 0.2398291628488952, 0.23470485495409002, 0.23303614016524418, 0.23271457258019004] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [233, 25, 0]]
** centroid: 1, normalized-entropy: 0.45908858701699284, [(1, 233), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [148, 46, 0]]
** centroid: 2, normalized-entropy: 0.790206924188637, [(1, 148), (2, 46)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 186, 28]]
** centroid: 3, normalized-entropy: 0.5597404598417697, [(2, 186), (3, 28)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35068482156798264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35068482156798264, 0.24122999872135437] ***
*** starting iteration: 2; err: [Inf, 0.35068482156798264, 0.24122999872135437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35068482156798264, 0.24122999872135437, 0.23737324957178718] ***
*** starting iteration: 3; err: [Inf, 0.35068482156798264, 0.24122999872135437, 0.23737324957178718] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35068482156798264, 0.24122999872135437, 0.23737324957178718, 0.23660227740001954] ***
*** finished computation of 3 references, err: [Inf, 0.35068482156798264, 0.24122999872135437, 0.23737324957178718, 0.23660227740001954] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [38, 182, 25]]
** centroid: 1, normalized-entropy: 0.676099225716664, [(1, 38), (2, 182), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [148, 78, 0]]
** centroid: 2, normalized-entropy: 0.9296459040774003, [(1, 148), (2, 78)]
*** center 3: selecting labels [1] (freq >= 1) [from [196, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2701577923680911] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2701577923680911, 0.24746761688993296] ***
*** starting iteration: 2; err: [Inf, 0.2701577923680911, 0.24746761688993296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2701577923680911, 0.24746761688993296, 0.24323104442456092] ***
*** starting iteration: 3; err: [Inf, 0.2701577923680911, 0.24746761688993296, 0.24323104442456092] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2701577923680911, 0.24746761688993296, 0.24323104442456092, 0.24119541856196375] ***
*** starting iteration: 4; err: [Inf, 0.2701577923680911, 0.24746761688993296, 0.24323104442456092, 0.24119541856196375] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2701577923680911, 0.24746761688993296, 0.24323104442456092, 0.24119541856196375, 0.24041937065598412] ***
*** finished computation of 3 references, err: [Inf, 0.2701577923680911, 0.24746761688993296, 0.24323104442456092, 0.24119541856196375, 0.24041937065598412] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [160, 62, 0]]
** centroid: 1, normalized-entropy: 0.8544669184854021, [(1, 160), (2, 62)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [229, 10, 0]]
** centroid: 2, normalized-entropy: 0.250670371064122, [(1, 229), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 179, 27]]
** centroid: 3, normalized-entropy: 0.560359815102075, [(2, 179), (3, 27)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.9489609369848891, 0.9480078881276487, 0.9430148711585837, 0.9359748970527413, 0.9340028651405897, 0.9300078521635408, 0.9269658880437324, 0.9150138162114209, 0.9109858361355366, 0.8859967752183321, 0.8700077322831814, 0.8600037162911414, 0.8540037043031056, 0.7910185634736533]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489609369848891
finished with 16
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.35981696142742337] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35981696142742337, 0.2381880261785667] ***
*** starting iteration: 2; err: [Inf, 0.35981696142742337, 0.2381880261785667] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35981696142742337, 0.2381880261785667, 0.2362470043230209] ***
*** starting iteration: 3; err: [Inf, 0.35981696142742337, 0.2381880261785667, 0.2362470043230209] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35981696142742337, 0.2381880261785667, 0.2362470043230209, 0.23588379933960266] ***
*** finished computation of 3 references, err: [Inf, 0.35981696142742337, 0.2381880261785667, 0.2362470043230209, 0.23588379933960266] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [59, 165, 28]]
** centroid: 1, normalized-entropy: 0.7840291086426614, [(1, 59), (2, 165), (3, 28)]
*** center 2: selecting labels [1] (freq >= 2) [from [202, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [120, 92, 0]]
** centroid: 3, normalized-entropy: 0.987380023288353, [(1, 120), (2, 92)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3491097878122973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3491097878122973, 0.2392033078265132] ***
*** starting iteration: 2; err: [Inf, 0.3491097878122973, 0.2392033078265132] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3491097878122973, 0.2392033078265132, 0.23498130844475917] ***
*** starting iteration: 3; err: [Inf, 0.3491097878122973, 0.2392033078265132, 0.23498130844475917] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3491097878122973, 0.2392033078265132, 0.23498130844475917, 0.23273300026743107] ***
*** starting iteration: 4; err: [Inf, 0.3491097878122973, 0.2392033078265132, 0.23498130844475917, 0.23273300026743107] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3491097878122973, 0.2392033078265132, 0.23498130844475917, 0.23273300026743107, 0.23175101114906135] ***
*** finished computation of 3 references, err: [Inf, 0.3491097878122973, 0.2392033078265132, 0.23498130844475917, 0.23273300026743107, 0.23175101114906135] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [218, 12, 0]]
** centroid: 1, normalized-entropy: 0.295560777857315, [(1, 218), (2, 12)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 189, 25]]
** centroid: 2, normalized-entropy: 0.5201575334939, [(2, 189), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [164, 59, 0]]
** centroid: 3, normalized-entropy: 0.8335704440023032, [(1, 164), (2, 59)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3895951609994317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3895951609994317, 0.23953343214358258] ***
*** starting iteration: 2; err: [Inf, 0.3895951609994317, 0.23953343214358258] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3895951609994317, 0.23953343214358258, 0.2377944138694158] ***
*** starting iteration: 3; err: [Inf, 0.3895951609994317, 0.23953343214358258, 0.2377944138694158] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3895951609994317, 0.23953343214358258, 0.2377944138694158, 0.23739602655797884] ***
*** finished computation of 3 references, err: [Inf, 0.3895951609994317, 0.23953343214358258, 0.2377944138694158, 0.23739602655797884] ***
*** center 1: selecting labels [1] (freq >= 2) [from [238, 1, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [14, 180, 27]]
** centroid: 2, normalized-entropy: 0.5450204650190152, [(1, 14), (2, 180), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [137, 70, 0]]
** centroid: 3, normalized-entropy: 0.9230511770561378, [(1, 137), (2, 70)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.40506048950537277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40506048950537277, 0.3007347107621598] ***
*** starting iteration: 2; err: [Inf, 0.40506048950537277, 0.3007347107621598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40506048950537277, 0.3007347107621598, 0.2966375816277824] ***
*** starting iteration: 3; err: [Inf, 0.40506048950537277, 0.3007347107621598, 0.2966375816277824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40506048950537277, 0.3007347107621598, 0.2966375816277824, 0.2955358861882642] ***
*** starting iteration: 4; err: [Inf, 0.40506048950537277, 0.3007347107621598, 0.2966375816277824, 0.2955358861882642] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40506048950537277, 0.3007347107621598, 0.2966375816277824, 0.2955358861882642, 0.2951444631635404] ***
*** finished computation of 3 references, err: [Inf, 0.40506048950537277, 0.3007347107621598, 0.2966375816277824, 0.2955358861882642, 0.2951444631635404] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [224, 34, 0]]
** centroid: 1, normalized-entropy: 0.5623077238596306, [(1, 224), (2, 34)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 162, 28]]
** centroid: 2, normalized-entropy: 0.6032154068313579, [(2, 162), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [157, 61, 0]]
** centroid: 3, normalized-entropy: 0.8552006772204057, [(1, 157), (2, 61)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3942820374662618] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3942820374662618, 0.29114307558116526] ***
*** starting iteration: 2; err: [Inf, 0.3942820374662618, 0.29114307558116526] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3942820374662618, 0.29114307558116526, 0.28882802320529766] ***
*** starting iteration: 3; err: [Inf, 0.3942820374662618, 0.29114307558116526, 0.28882802320529766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3942820374662618, 0.29114307558116526, 0.28882802320529766, 0.288080416718914] ***
*** finished computation of 3 references, err: [Inf, 0.3942820374662618, 0.29114307558116526, 0.28882802320529766, 0.288080416718914] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [250, 28, 0]]
** centroid: 1, normalized-entropy: 0.471271975661872, [(1, 250), (2, 28)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 195, 25]]
** centroid: 2, normalized-entropy: 0.5107878229540133, [(2, 195), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [132, 37, 0]]
** centroid: 3, normalized-entropy: 0.7582179079769359, [(1, 132), (2, 37)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.37630594265402884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37630594265402884, 0.3102179280938818] ***
*** starting iteration: 2; err: [Inf, 0.37630594265402884, 0.3102179280938818] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37630594265402884, 0.3102179280938818, 0.3006807905349551] ***
*** starting iteration: 3; err: [Inf, 0.37630594265402884, 0.3102179280938818, 0.3006807905349551] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37630594265402884, 0.3102179280938818, 0.3006807905349551, 0.29830640689588556] ***
*** starting iteration: 4; err: [Inf, 0.37630594265402884, 0.3102179280938818, 0.3006807905349551, 0.29830640689588556] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37630594265402884, 0.3102179280938818, 0.3006807905349551, 0.29830640689588556, 0.2977163237666172] ***
*** finished computation of 3 references, err: [Inf, 0.37630594265402884, 0.3102179280938818, 0.3006807905349551, 0.29830640689588556, 0.2977163237666172] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [85, 156, 27]]
** centroid: 1, normalized-entropy: 0.8287049604377387, [(1, 85), (2, 156), (3, 27)]
*** center 2: selecting labels [1] (freq >= 2) [from [188, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [116, 95, 0]]
** centroid: 3, normalized-entropy: 0.9928428937961026, [(1, 116), (2, 95)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 16)
[0.9489609369848891, 0.9480078881276487, 0.9430148711585837, 0.9359748970527413, 0.9340028651405897, 0.9300078521635408, 0.9269658880437324, 0.9150138162114209, 0.9109858361355366, 0.8859967752183321, 0.8800177422931914, 0.8700077322831814, 0.8600037162911414, 0.8540037043031056, 0.8440056823290356, 0.7910185634736533]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489609369848891
finished with 18
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.43096629409720794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43096629409720794, 0.2602619192711226] ***
*** starting iteration: 2; err: [Inf, 0.43096629409720794, 0.2602619192711226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43096629409720794, 0.2602619192711226, 0.24393251629730872] ***
*** starting iteration: 3; err: [Inf, 0.43096629409720794, 0.2602619192711226, 0.24393251629730872] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43096629409720794, 0.2602619192711226, 0.24393251629730872, 0.2397928079478331] ***
*** finished computation of 3 references, err: [Inf, 0.43096629409720794, 0.2602619192711226, 0.24393251629730872, 0.2397928079478331] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [87, 85, 1]]
** centroid: 1, normalized-entropy: 0.6595818771566817, [(1, 87), (2, 85), (3, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [212, 2, 0]]
** centroid: 2, normalized-entropy: 0.07642429309554791, [(1, 212), (2, 2)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [82, 170, 27]]
** centroid: 3, normalized-entropy: 0.8080698623705365, [(1, 82), (2, 170), (3, 27)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34742610938944807] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34742610938944807, 0.2554900899000265] ***
*** starting iteration: 2; err: [Inf, 0.34742610938944807, 0.2554900899000265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34742610938944807, 0.2554900899000265, 0.2405118252544467] ***
*** starting iteration: 3; err: [Inf, 0.34742610938944807, 0.2554900899000265, 0.2405118252544467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34742610938944807, 0.2554900899000265, 0.2405118252544467, 0.2343002230856104] ***
*** finished computation of 3 references, err: [Inf, 0.34742610938944807, 0.2554900899000265, 0.2405118252544467, 0.2343002230856104] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [161, 82, 0]]
** centroid: 1, normalized-entropy: 0.9223562000867019, [(1, 161), (2, 82)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [221, 12, 0]]
** centroid: 2, normalized-entropy: 0.29274401746904316, [(1, 221), (2, 12)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 166, 25]]
** centroid: 3, normalized-entropy: 0.5598741141720963, [(2, 166), (3, 25)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2997508964876922] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2997508964876922, 0.2749571847314688] ***
*** starting iteration: 2; err: [Inf, 0.2997508964876922, 0.2749571847314688] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2997508964876922, 0.2749571847314688, 0.25427603449901454] ***
*** starting iteration: 3; err: [Inf, 0.2997508964876922, 0.2749571847314688, 0.25427603449901454] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2997508964876922, 0.2749571847314688, 0.25427603449901454, 0.24369136336492725] ***
*** finished computation of 3 references, err: [Inf, 0.2997508964876922, 0.2749571847314688, 0.25427603449901454, 0.24369136336492725] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [248, 37, 0]]
** centroid: 1, normalized-entropy: 0.5569568476338016, [(1, 248), (2, 37)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 183, 27]]
** centroid: 2, normalized-entropy: 0.5535072654547254, [(2, 183), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [141, 31, 0]]
** centroid: 3, normalized-entropy: 0.6805855319682431, [(1, 141), (2, 31)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4560827998382909] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4560827998382909, 0.31235343171982793] ***
*** starting iteration: 2; err: [Inf, 0.4560827998382909, 0.31235343171982793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4560827998382909, 0.31235343171982793, 0.30066821019951107] ***
*** starting iteration: 3; err: [Inf, 0.4560827998382909, 0.31235343171982793, 0.30066821019951107] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4560827998382909, 0.31235343171982793, 0.30066821019951107, 0.29871238793551297] ***
*** finished computation of 3 references, err: [Inf, 0.4560827998382909, 0.31235343171982793, 0.30066821019951107, 0.29871238793551297] ***
*** center 1: selecting labels [1] (freq >= 1) [from [205, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [105, 97, 0]]
** centroid: 2, normalized-entropy: 0.998868289449348, [(1, 105), (2, 97)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [71, 160, 28]]
** centroid: 3, normalized-entropy: 0.81267374144262, [(1, 71), (2, 160), (3, 28)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.339045950922294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.339045950922294, 0.33096703404289807] ***
*** starting iteration: 2; err: [Inf, 0.339045950922294, 0.33096703404289807] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.339045950922294, 0.33096703404289807, 0.3302949529400897] ***
*** finished computation of 3 references, err: [Inf, 0.339045950922294, 0.33096703404289807, 0.3302949529400897] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [212, 12, 0]]
** centroid: 1, normalized-entropy: 0.3013786435930858, [(1, 212), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [111, 131, 0]]
** centroid: 2, normalized-entropy: 0.995067475430513, [(1, 111), (2, 131)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [59, 117, 25]]
** centroid: 3, normalized-entropy: 0.8502056951243064, [(1, 59), (2, 117), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34693857529193634] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34693857529193634, 0.2997530763340497] ***
*** starting iteration: 2; err: [Inf, 0.34693857529193634, 0.2997530763340497] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34693857529193634, 0.2997530763340497, 0.29769057395408627] ***
*** starting iteration: 3; err: [Inf, 0.34693857529193634, 0.2997530763340497, 0.29769057395408627] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34693857529193634, 0.2997530763340497, 0.29769057395408627, 0.29686405160359625] ***
*** finished computation of 3 references, err: [Inf, 0.34693857529193634, 0.2997530763340497, 0.29769057395408627, 0.29686405160359625] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [103, 116, 0]]
** centroid: 1, normalized-entropy: 0.9974566955159229, [(1, 103), (2, 116)]
*** center 2: selecting labels [1] (freq >= 1) [from [196, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [90, 135, 27]]
** centroid: 3, normalized-entropy: 0.8569019865306673, [(1, 90), (2, 135), (3, 27)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 18)
[0.9489609369848891, 0.9480078881276487, 0.9430148711585837, 0.9359748970527413, 0.9340028651405897, 0.9300078521635408, 0.9269658880437324, 0.9180018341694988, 0.9179898461335587, 0.9150138162114209, 0.9109858361355366, 0.8859967752183321, 0.8800177422931914, 0.8700077322831814, 0.8600037162911414, 0.8540037043031056, 0.8440056823290356, 0.7910185634736533]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489609369848891
finished with 18
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9489609369848891, 0.9480078881276487, 0.9430148711585837, 0.9359748970527413, 0.9340028651405897, 0.9300078521635408, 0.9269658880437324, 0.9180018341694988, 0.9179898461335587, 0.9150138162114209, 0.9109858361355366, 0.8859967752183321, 0.8800177422931914, 0.8700077322831814, 0.8600037162911414, 0.8540037043031056, 0.8440056823290356, 0.7910185634736533]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489609369848891
finished with 18
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9489609369848891, 0.9480078881276487, 0.9430148711585837, 0.9359748970527413, 0.9340028651405897, 0.9300078521635408, 0.9269658880437324, 0.9180018341694988, 0.9179898461335587, 0.9150138162114209, 0.9109858361355366, 0.8859967752183321, 0.8800177422931914, 0.8700077322831814, 0.8600037162911414, 0.8540037043031056, 0.8440056823290356, 0.7910185634736533]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489609369848891
finished with 18
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9489609369848891, 0.9480078881276487, 0.9430148711585837, 0.9359748970527413, 0.9340028651405897, 0.9300078521635408, 0.9269658880437324, 0.9180018341694988, 0.9179898461335587, 0.9150138162114209, 0.9109858361355366, 0.8859967752183321, 0.8800177422931914, 0.8700077322831814, 0.8600037162911414, 0.8540037043031056, 0.8440056823290356, 0.7910185634736533]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489609369848891
finished with 18
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.2803636283604428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2803636283604428, 0.16664993185503407] ***
*** starting iteration: 2; err: [Inf, 0.2803636283604428, 0.16664993185503407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2803636283604428, 0.16664993185503407, 0.1566327450973913] ***
*** starting iteration: 3; err: [Inf, 0.2803636283604428, 0.16664993185503407, 0.1566327450973913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2803636283604428, 0.16664993185503407, 0.1566327450973913, 0.15356475766957736] ***
*** starting iteration: 4; err: [Inf, 0.2803636283604428, 0.16664993185503407, 0.1566327450973913, 0.15356475766957736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2803636283604428, 0.16664993185503407, 0.1566327450973913, 0.15356475766957736, 0.15217116857948712] ***
*** starting iteration: 5; err: [Inf, 0.2803636283604428, 0.16664993185503407, 0.1566327450973913, 0.15356475766957736, 0.15217116857948712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2803636283604428, 0.16664993185503407, 0.1566327450973913, 0.15356475766957736, 0.15217116857948712, 0.15101794087259623] ***
*** starting iteration: 6; err: [Inf, 0.2803636283604428, 0.16664993185503407, 0.1566327450973913, 0.15356475766957736, 0.15217116857948712, 0.15101794087259623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2803636283604428, 0.16664993185503407, 0.1566327450973913, 0.15356475766957736, 0.15217116857948712, 0.15101794087259623, 0.15046257921820508] ***
*** finished computation of 7 references, err: [Inf, 0.2803636283604428, 0.16664993185503407, 0.1566327450973913, 0.15356475766957736, 0.15217116857948712, 0.15101794087259623, 0.15046257921820508] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [127, 17, 0]]
** centroid: 1, normalized-entropy: 0.5237456714331399, [(1, 127), (2, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [97, 8, 0]]
** centroid: 2, normalized-entropy: 0.38861174916944274, [(1, 97), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [2, 160, 0]]
** centroid: 3, normalized-entropy: 0.09597040299587173, [(1, 2), (2, 160)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 145, 40]]
** centroid: 4, normalized-entropy: 0.7531979910695015, [(2, 145), (3, 40)]
*** center 5: selecting labels [1] (freq >= 1) [from [135, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [102, 54, 0]]
** centroid: 6, normalized-entropy: 0.9305861291319927, [(1, 102), (2, 54)]
*** center 7: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2519147682506591] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2519147682506591, 0.16275990348123015] ***
*** starting iteration: 2; err: [Inf, 0.2519147682506591, 0.16275990348123015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2519147682506591, 0.16275990348123015, 0.15277208278048784] ***
*** starting iteration: 3; err: [Inf, 0.2519147682506591, 0.16275990348123015, 0.15277208278048784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2519147682506591, 0.16275990348123015, 0.15277208278048784, 0.1488592861527577] ***
*** starting iteration: 4; err: [Inf, 0.2519147682506591, 0.16275990348123015, 0.15277208278048784, 0.1488592861527577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2519147682506591, 0.16275990348123015, 0.15277208278048784, 0.1488592861527577, 0.14806017281604] ***
*** finished computation of 7 references, err: [Inf, 0.2519147682506591, 0.16275990348123015, 0.15277208278048784, 0.1488592861527577, 0.14806017281604] ***
*** center 1: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [38, 28, 0]]
** centroid: 2, normalized-entropy: 0.9833761901392238, [(1, 38), (2, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [59, 14, 0]]
** centroid: 3, normalized-entropy: 0.7051819722888517, [(1, 59), (2, 14)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 69, 20]]
** centroid: 4, normalized-entropy: 0.7686913027030167, [(2, 69), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [4, 76, 0]]
** centroid: 5, normalized-entropy: 0.2863969571159561, [(1, 4), (2, 76)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [55, 2, 0]]
** centroid: 6, normalized-entropy: 0.2192973081321754, [(1, 55), (2, 2)]
*** center 7: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25312599929375573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25312599929375573, 0.18314651971496643] ***
*** starting iteration: 2; err: [Inf, 0.25312599929375573, 0.18314651971496643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25312599929375573, 0.18314651971496643, 0.1655254053492099] ***
*** starting iteration: 3; err: [Inf, 0.25312599929375573, 0.18314651971496643, 0.1655254053492099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25312599929375573, 0.18314651971496643, 0.1655254053492099, 0.15663850619643926] ***
*** starting iteration: 4; err: [Inf, 0.25312599929375573, 0.18314651971496643, 0.1655254053492099, 0.15663850619643926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25312599929375573, 0.18314651971496643, 0.1655254053492099, 0.15663850619643926, 0.15180814660526812] ***
*** starting iteration: 5; err: [Inf, 0.25312599929375573, 0.18314651971496643, 0.1655254053492099, 0.15663850619643926, 0.15180814660526812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25312599929375573, 0.18314651971496643, 0.1655254053492099, 0.15663850619643926, 0.15180814660526812, 0.14912894525751472] ***
*** starting iteration: 6; err: [Inf, 0.25312599929375573, 0.18314651971496643, 0.1655254053492099, 0.15663850619643926, 0.15180814660526812, 0.14912894525751472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25312599929375573, 0.18314651971496643, 0.1655254053492099, 0.15663850619643926, 0.15180814660526812, 0.14912894525751472, 0.14801276687905193] ***
*** starting iteration: 7; err: [Inf, 0.25312599929375573, 0.18314651971496643, 0.1655254053492099, 0.15663850619643926, 0.15180814660526812, 0.14912894525751472, 0.14801276687905193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25312599929375573, 0.18314651971496643, 0.1655254053492099, 0.15663850619643926, 0.15180814660526812, 0.14912894525751472, 0.14801276687905193, 0.14728437761589885] ***
*** finished computation of 7 references, err: [Inf, 0.25312599929375573, 0.18314651971496643, 0.1655254053492099, 0.15663850619643926, 0.15180814660526812, 0.14912894525751472, 0.14801276687905193, 0.14728437761589885] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [69, 23, 0]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(1, 69), (2, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [61, 1, 0]]
** centroid: 2, normalized-entropy: 0.11911602665564841, [(1, 61), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 59, 23]]
** centroid: 3, normalized-entropy: 0.8561146277685725, [(2, 59), (3, 23)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [45, 21, 0]]
** centroid: 4, normalized-entropy: 0.9023932827949788, [(1, 45), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [32, 7, 0]]
** centroid: 5, normalized-entropy: 0.6789538995185759, [(1, 32), (2, 7)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 75, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31727039438672366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31727039438672366, 0.19371015113033355] ***
*** starting iteration: 2; err: [Inf, 0.31727039438672366, 0.19371015113033355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31727039438672366, 0.19371015113033355, 0.17152882478386164] ***
*** starting iteration: 3; err: [Inf, 0.31727039438672366, 0.19371015113033355, 0.17152882478386164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31727039438672366, 0.19371015113033355, 0.17152882478386164, 0.15964607941824943] ***
*** starting iteration: 4; err: [Inf, 0.31727039438672366, 0.19371015113033355, 0.17152882478386164, 0.15964607941824943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31727039438672366, 0.19371015113033355, 0.17152882478386164, 0.15964607941824943, 0.15245500890351832] ***
*** starting iteration: 5; err: [Inf, 0.31727039438672366, 0.19371015113033355, 0.17152882478386164, 0.15964607941824943, 0.15245500890351832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31727039438672366, 0.19371015113033355, 0.17152882478386164, 0.15964607941824943, 0.15245500890351832, 0.1474052560189739] ***
*** starting iteration: 6; err: [Inf, 0.31727039438672366, 0.19371015113033355, 0.17152882478386164, 0.15964607941824943, 0.15245500890351832, 0.1474052560189739] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31727039438672366, 0.19371015113033355, 0.17152882478386164, 0.15964607941824943, 0.15245500890351832, 0.1474052560189739, 0.1440163504909724] ***
*** starting iteration: 7; err: [Inf, 0.31727039438672366, 0.19371015113033355, 0.17152882478386164, 0.15964607941824943, 0.15245500890351832, 0.1474052560189739, 0.1440163504909724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31727039438672366, 0.19371015113033355, 0.17152882478386164, 0.15964607941824943, 0.15245500890351832, 0.1474052560189739, 0.1440163504909724, 0.1427169635752216] ***
*** starting iteration: 8; err: [Inf, 0.31727039438672366, 0.19371015113033355, 0.17152882478386164, 0.15964607941824943, 0.15245500890351832, 0.1474052560189739, 0.1440163504909724, 0.1427169635752216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31727039438672366, 0.19371015113033355, 0.17152882478386164, 0.15964607941824943, 0.15245500890351832, 0.1474052560189739, 0.1440163504909724, 0.1427169635752216, 0.14182004595547915] ***
*** finished computation of 7 references, err: [Inf, 0.31727039438672366, 0.19371015113033355, 0.17152882478386164, 0.15964607941824943, 0.15245500890351832, 0.1474052560189739, 0.1440163504909724, 0.1427169635752216, 0.14182004595547915] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [73, 3, 0]]
** centroid: 1, normalized-entropy: 0.23987382528036535, [(1, 73), (2, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 57, 20]]
** centroid: 3, normalized-entropy: 0.8263541679009075, [(2, 57), (3, 20)]
*** center 4: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [48, 21, 0]]
** centroid: 5, normalized-entropy: 0.8865408928220899, [(1, 48), (2, 21)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [41, 45, 0]]
** centroid: 6, normalized-entropy: 0.9984389230256238, [(1, 41), (2, 45)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 61, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21844943275675177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21844943275675177, 0.1744706051442772] ***
*** starting iteration: 2; err: [Inf, 0.21844943275675177, 0.1744706051442772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21844943275675177, 0.1744706051442772, 0.15815804833266883] ***
*** starting iteration: 3; err: [Inf, 0.21844943275675177, 0.1744706051442772, 0.15815804833266883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21844943275675177, 0.1744706051442772, 0.15815804833266883, 0.15470725784823297] ***
*** starting iteration: 4; err: [Inf, 0.21844943275675177, 0.1744706051442772, 0.15815804833266883, 0.15470725784823297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21844943275675177, 0.1744706051442772, 0.15815804833266883, 0.15470725784823297, 0.1533788652131334] ***
*** starting iteration: 5; err: [Inf, 0.21844943275675177, 0.1744706051442772, 0.15815804833266883, 0.15470725784823297, 0.1533788652131334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21844943275675177, 0.1744706051442772, 0.15815804833266883, 0.15470725784823297, 0.1533788652131334, 0.15165838826447725] ***
*** starting iteration: 6; err: [Inf, 0.21844943275675177, 0.1744706051442772, 0.15815804833266883, 0.15470725784823297, 0.1533788652131334, 0.15165838826447725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21844943275675177, 0.1744706051442772, 0.15815804833266883, 0.15470725784823297, 0.1533788652131334, 0.15165838826447725, 0.15063604107126594] ***
*** starting iteration: 7; err: [Inf, 0.21844943275675177, 0.1744706051442772, 0.15815804833266883, 0.15470725784823297, 0.1533788652131334, 0.15165838826447725, 0.15063604107126594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21844943275675177, 0.1744706051442772, 0.15815804833266883, 0.15470725784823297, 0.1533788652131334, 0.15165838826447725, 0.15063604107126594, 0.14974350358359514] ***
*** finished computation of 7 references, err: [Inf, 0.21844943275675177, 0.1744706051442772, 0.15815804833266883, 0.15470725784823297, 0.1533788652131334, 0.15165838826447725, 0.15063604107126594, 0.14974350358359514] ***
*** center 1: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [78, 1, 0]]
** centroid: 2, normalized-entropy: 0.09794058271817412, [(1, 78), (2, 1)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [19, 52, 0]]
** centroid: 3, normalized-entropy: 0.8380078505079931, [(1, 19), (2, 52)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [8, 51, 0]]
** centroid: 4, normalized-entropy: 0.572580465623769, [(1, 8), (2, 51)]
*** center 5: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 58, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 37, 23]]
** centroid: 7, normalized-entropy: 0.9603622703154779, [(2, 37), (3, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21184225137345492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21184225137345492, 0.16592440119711682] ***
*** starting iteration: 2; err: [Inf, 0.21184225137345492, 0.16592440119711682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21184225137345492, 0.16592440119711682, 0.15727744106948377] ***
*** starting iteration: 3; err: [Inf, 0.21184225137345492, 0.16592440119711682, 0.15727744106948377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21184225137345492, 0.16592440119711682, 0.15727744106948377, 0.15455892261024565] ***
*** starting iteration: 4; err: [Inf, 0.21184225137345492, 0.16592440119711682, 0.15727744106948377, 0.15455892261024565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21184225137345492, 0.16592440119711682, 0.15727744106948377, 0.15455892261024565, 0.1534115556050092] ***
*** starting iteration: 5; err: [Inf, 0.21184225137345492, 0.16592440119711682, 0.15727744106948377, 0.15455892261024565, 0.1534115556050092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21184225137345492, 0.16592440119711682, 0.15727744106948377, 0.15455892261024565, 0.1534115556050092, 0.15272343604266644] ***
*** finished computation of 7 references, err: [Inf, 0.21184225137345492, 0.16592440119711682, 0.15727744106948377, 0.15455892261024565, 0.1534115556050092, 0.15272343604266644] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [6, 77, 0]]
** centroid: 1, normalized-entropy: 0.3744088453489206, [(1, 6), (2, 77)]
*** center 2: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [61, 18, 0]]
** centroid: 4, normalized-entropy: 0.7742411580847273, [(1, 61), (2, 18)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 71, 19]]
** centroid: 5, normalized-entropy: 0.7436012269934466, [(2, 71), (3, 19)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [55, 18, 0]]
** centroid: 6, normalized-entropy: 0.8058049113482652, [(1, 55), (2, 18)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [48, 13, 0]]
** centroid: 7, normalized-entropy: 0.7473944462440388, [(1, 48), (2, 13)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22972202923335136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22972202923335136, 0.16669082340784372] ***
*** starting iteration: 2; err: [Inf, 0.22972202923335136, 0.16669082340784372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22972202923335136, 0.16669082340784372, 0.1589282164387405] ***
*** starting iteration: 3; err: [Inf, 0.22972202923335136, 0.16669082340784372, 0.1589282164387405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22972202923335136, 0.16669082340784372, 0.1589282164387405, 0.15463699211459606] ***
*** starting iteration: 4; err: [Inf, 0.22972202923335136, 0.16669082340784372, 0.1589282164387405, 0.15463699211459606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22972202923335136, 0.16669082340784372, 0.1589282164387405, 0.15463699211459606, 0.15333501271903516] ***
*** starting iteration: 5; err: [Inf, 0.22972202923335136, 0.16669082340784372, 0.1589282164387405, 0.15463699211459606, 0.15333501271903516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22972202923335136, 0.16669082340784372, 0.1589282164387405, 0.15463699211459606, 0.15333501271903516, 0.15245773351378739] ***
*** finished computation of 7 references, err: [Inf, 0.22972202923335136, 0.16669082340784372, 0.1589282164387405, 0.15463699211459606, 0.15333501271903516, 0.15245773351378739] ***
*** center 1: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [83, 25, 0]]
** centroid: 2, normalized-entropy: 0.7805849322915901, [(1, 83), (2, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 48, 18]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 48), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [33, 27, 0]]
** centroid: 4, normalized-entropy: 0.9927744539878083, [(1, 33), (2, 27)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [15, 61, 0]]
** centroid: 5, normalized-entropy: 0.7166336117927455, [(1, 15), (2, 61)]
*** center 6: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 36, 4]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 36), (3, 4)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25163096232153476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25163096232153476, 0.18839966470561922] ***
*** starting iteration: 2; err: [Inf, 0.25163096232153476, 0.18839966470561922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485] ***
*** starting iteration: 3; err: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485, 0.16727254118025303] ***
*** starting iteration: 4; err: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485, 0.16727254118025303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485, 0.16727254118025303, 0.16189128621993587] ***
*** starting iteration: 5; err: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485, 0.16727254118025303, 0.16189128621993587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485, 0.16727254118025303, 0.16189128621993587, 0.1559397778995335] ***
*** starting iteration: 6; err: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485, 0.16727254118025303, 0.16189128621993587, 0.1559397778995335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485, 0.16727254118025303, 0.16189128621993587, 0.1559397778995335, 0.1521729053966701] ***
*** starting iteration: 7; err: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485, 0.16727254118025303, 0.16189128621993587, 0.1559397778995335, 0.1521729053966701] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485, 0.16727254118025303, 0.16189128621993587, 0.1559397778995335, 0.1521729053966701, 0.14982449113298207] ***
*** starting iteration: 8; err: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485, 0.16727254118025303, 0.16189128621993587, 0.1559397778995335, 0.1521729053966701, 0.14982449113298207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485, 0.16727254118025303, 0.16189128621993587, 0.1559397778995335, 0.1521729053966701, 0.14982449113298207, 0.14874105103220792] ***
*** starting iteration: 9; err: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485, 0.16727254118025303, 0.16189128621993587, 0.1559397778995335, 0.1521729053966701, 0.14982449113298207, 0.14874105103220792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485, 0.16727254118025303, 0.16189128621993587, 0.1559397778995335, 0.1521729053966701, 0.14982449113298207, 0.14874105103220792, 0.14858701351936907] ***
*** finished computation of 7 references, err: [Inf, 0.25163096232153476, 0.18839966470561922, 0.17610869879927485, 0.16727254118025303, 0.16189128621993587, 0.1559397778995335, 0.1521729053966701, 0.14982449113298207, 0.14874105103220792, 0.14858701351936907] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 54, 20]]
** centroid: 1, normalized-entropy: 0.8418521897563208, [(2, 54), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [71, 20, 0]]
** centroid: 2, normalized-entropy: 0.7597659876428757, [(1, 71), (2, 20)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 57, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [25, 53, 0]]
** centroid: 4, normalized-entropy: 0.9049382594235603, [(1, 25), (2, 53)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [72, 4, 0]]
** centroid: 5, normalized-entropy: 0.2974722489192896, [(1, 72), (2, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [39, 5, 0]]
** centroid: 7, normalized-entropy: 0.5107878229540133, [(1, 39), (2, 5)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19187961693201214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19187961693201214, 0.1575133581981063] ***
*** starting iteration: 2; err: [Inf, 0.19187961693201214, 0.1575133581981063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19187961693201214, 0.1575133581981063, 0.14955507050501182] ***
*** starting iteration: 3; err: [Inf, 0.19187961693201214, 0.1575133581981063, 0.14955507050501182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19187961693201214, 0.1575133581981063, 0.14955507050501182, 0.14831676084827633] ***
*** starting iteration: 4; err: [Inf, 0.19187961693201214, 0.1575133581981063, 0.14955507050501182, 0.14831676084827633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19187961693201214, 0.1575133581981063, 0.14955507050501182, 0.14831676084827633, 0.14792373601719738] ***
*** finished computation of 7 references, err: [Inf, 0.19187961693201214, 0.1575133581981063, 0.14955507050501182, 0.14831676084827633, 0.14792373601719738] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [40, 34, 0]]
** centroid: 1, normalized-entropy: 0.9952525494396791, [(1, 40), (2, 34)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [75, 5, 0]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(1, 75), (2, 5)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 56, 17]]
** centroid: 3, normalized-entropy: 0.7829924501610913, [(2, 56), (3, 17)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 63, 2]]
** centroid: 4, normalized-entropy: 0.19823496409776642, [(2, 63), (3, 2)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [66, 26, 0]]
** centroid: 5, normalized-entropy: 0.8589810370425965, [(1, 66), (2, 26)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [37, 5, 0]]
** centroid: 6, normalized-entropy: 0.5266170655714281, [(1, 37), (2, 5)]
*** center 7: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2716024876870215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2716024876870215, 0.17997628086060286] ***
*** starting iteration: 2; err: [Inf, 0.2716024876870215, 0.17997628086060286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2716024876870215, 0.17997628086060286, 0.16562393354438246] ***
*** starting iteration: 3; err: [Inf, 0.2716024876870215, 0.17997628086060286, 0.16562393354438246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2716024876870215, 0.17997628086060286, 0.16562393354438246, 0.15898318615322932] ***
*** starting iteration: 4; err: [Inf, 0.2716024876870215, 0.17997628086060286, 0.16562393354438246, 0.15898318615322932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2716024876870215, 0.17997628086060286, 0.16562393354438246, 0.15898318615322932, 0.15474231528677046] ***
*** starting iteration: 5; err: [Inf, 0.2716024876870215, 0.17997628086060286, 0.16562393354438246, 0.15898318615322932, 0.15474231528677046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2716024876870215, 0.17997628086060286, 0.16562393354438246, 0.15898318615322932, 0.15474231528677046, 0.15182445847429335] ***
*** starting iteration: 6; err: [Inf, 0.2716024876870215, 0.17997628086060286, 0.16562393354438246, 0.15898318615322932, 0.15474231528677046, 0.15182445847429335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2716024876870215, 0.17997628086060286, 0.16562393354438246, 0.15898318615322932, 0.15474231528677046, 0.15182445847429335, 0.14961496240645647] ***
*** starting iteration: 7; err: [Inf, 0.2716024876870215, 0.17997628086060286, 0.16562393354438246, 0.15898318615322932, 0.15474231528677046, 0.15182445847429335, 0.14961496240645647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2716024876870215, 0.17997628086060286, 0.16562393354438246, 0.15898318615322932, 0.15474231528677046, 0.15182445847429335, 0.14961496240645647, 0.14878411718085408] ***
*** finished computation of 7 references, err: [Inf, 0.2716024876870215, 0.17997628086060286, 0.16562393354438246, 0.15898318615322932, 0.15474231528677046, 0.15182445847429335, 0.14961496240645647, 0.14878411718085408] ***
*** center 1: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 56, 19]]
** centroid: 2, normalized-entropy: 0.8165187119538281, [(2, 56), (3, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [80, 20, 0]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(1, 80), (2, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [3, 58, 0]]
** centroid: 5, normalized-entropy: 0.28290479297989196, [(1, 3), (2, 58)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [42, 45, 0]]
** centroid: 6, normalized-entropy: 0.999142103991909, [(1, 42), (2, 45)]
*** center 7: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20333765049651265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20333765049651265, 0.162831932480447] ***
*** starting iteration: 2; err: [Inf, 0.20333765049651265, 0.162831932480447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20333765049651265, 0.162831932480447, 0.153492246709764] ***
*** starting iteration: 3; err: [Inf, 0.20333765049651265, 0.162831932480447, 0.153492246709764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20333765049651265, 0.162831932480447, 0.153492246709764, 0.14957074989378452] ***
*** starting iteration: 4; err: [Inf, 0.20333765049651265, 0.162831932480447, 0.153492246709764, 0.14957074989378452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20333765049651265, 0.162831932480447, 0.153492246709764, 0.14957074989378452, 0.14840935094282032] ***
*** starting iteration: 5; err: [Inf, 0.20333765049651265, 0.162831932480447, 0.153492246709764, 0.14957074989378452, 0.14840935094282032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20333765049651265, 0.162831932480447, 0.153492246709764, 0.14957074989378452, 0.14840935094282032, 0.1479730458254926] ***
*** finished computation of 7 references, err: [Inf, 0.20333765049651265, 0.162831932480447, 0.153492246709764, 0.14957074989378452, 0.14840935094282032, 0.1479730458254926] ***
*** center 1: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [17, 58, 0]]
** centroid: 2, normalized-entropy: 0.7721551435804817, [(1, 17), (2, 58)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [2, 68, 0]]
** centroid: 3, normalized-entropy: 0.18717625687320805, [(1, 2), (2, 68)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 43, 25]]
** centroid: 4, normalized-entropy: 0.9488482942421287, [(2, 43), (3, 25)]
*** center 5: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [58, 17, 0]]
** centroid: 7, normalized-entropy: 0.7721551435804817, [(1, 58), (2, 17)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3382873027846217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3382873027846217, 0.19312271923944355] ***
*** starting iteration: 2; err: [Inf, 0.3382873027846217, 0.19312271923944355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314] ***
*** starting iteration: 3; err: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787] ***
*** starting iteration: 4; err: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787, 0.15977988504152746] ***
*** starting iteration: 5; err: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787, 0.15977988504152746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787, 0.15977988504152746, 0.1587090488905087] ***
*** starting iteration: 6; err: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787, 0.15977988504152746, 0.1587090488905087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787, 0.15977988504152746, 0.1587090488905087, 0.15657799563743174] ***
*** starting iteration: 7; err: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787, 0.15977988504152746, 0.1587090488905087, 0.15657799563743174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787, 0.15977988504152746, 0.1587090488905087, 0.15657799563743174, 0.1528427880257368] ***
*** starting iteration: 8; err: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787, 0.15977988504152746, 0.1587090488905087, 0.15657799563743174, 0.1528427880257368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787, 0.15977988504152746, 0.1587090488905087, 0.15657799563743174, 0.1528427880257368, 0.14942703446000816] ***
*** starting iteration: 9; err: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787, 0.15977988504152746, 0.1587090488905087, 0.15657799563743174, 0.1528427880257368, 0.14942703446000816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787, 0.15977988504152746, 0.1587090488905087, 0.15657799563743174, 0.1528427880257368, 0.14942703446000816, 0.14747073958814144] ***
*** starting iteration: 10; err: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787, 0.15977988504152746, 0.1587090488905087, 0.15657799563743174, 0.1528427880257368, 0.14942703446000816, 0.14747073958814144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787, 0.15977988504152746, 0.1587090488905087, 0.15657799563743174, 0.1528427880257368, 0.14942703446000816, 0.14747073958814144, 0.1466419003754854] ***
*** finished computation of 7 references, err: [Inf, 0.3382873027846217, 0.19312271923944355, 0.16807556016836314, 0.1619534931834787, 0.15977988504152746, 0.1587090488905087, 0.15657799563743174, 0.1528427880257368, 0.14942703446000816, 0.14747073958814144, 0.1466419003754854] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 61, 3]]
** centroid: 1, normalized-entropy: 0.2729708579140699, [(2, 61), (3, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [34, 14, 0]]
** centroid: 3, normalized-entropy: 0.8708644692353648, [(1, 34), (2, 14)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [48, 28, 0]]
** centroid: 4, normalized-entropy: 0.9494520153879484, [(1, 48), (2, 28)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [70, 21, 0]]
** centroid: 5, normalized-entropy: 0.7793498372920851, [(1, 70), (2, 21)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [58, 2, 0]]
** centroid: 6, normalized-entropy: 0.2108423003185322, [(1, 58), (2, 2)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 67, 15]]
** centroid: 7, normalized-entropy: 0.6864381668766382, [(2, 67), (3, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18386339432327076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18386339432327076, 0.16381966100540013] ***
*** starting iteration: 2; err: [Inf, 0.18386339432327076, 0.16381966100540013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18386339432327076, 0.16381966100540013, 0.15610864219814538] ***
*** starting iteration: 3; err: [Inf, 0.18386339432327076, 0.16381966100540013, 0.15610864219814538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18386339432327076, 0.16381966100540013, 0.15610864219814538, 0.15295768807455898] ***
*** starting iteration: 4; err: [Inf, 0.18386339432327076, 0.16381966100540013, 0.15610864219814538, 0.15295768807455898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18386339432327076, 0.16381966100540013, 0.15610864219814538, 0.15295768807455898, 0.15207264322740957] ***
*** finished computation of 7 references, err: [Inf, 0.18386339432327076, 0.16381966100540013, 0.15610864219814538, 0.15295768807455898, 0.15207264322740957] ***
*** center 1: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 58, 21]]
** centroid: 2, normalized-entropy: 0.8354065254460503, [(2, 58), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [49, 10, 0]]
** centroid: 3, normalized-entropy: 0.656540281386946, [(1, 49), (2, 10)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [35, 38, 0]]
** centroid: 4, normalized-entropy: 0.998781393072756, [(1, 35), (2, 38)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [75, 25, 0]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(1, 75), (2, 25)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 62, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2271774478610605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2271774478610605, 0.18196443909592927] ***
*** starting iteration: 2; err: [Inf, 0.2271774478610605, 0.18196443909592927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2271774478610605, 0.18196443909592927, 0.16557048344332725] ***
*** starting iteration: 3; err: [Inf, 0.2271774478610605, 0.18196443909592927, 0.16557048344332725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2271774478610605, 0.18196443909592927, 0.16557048344332725, 0.1543312013130635] ***
*** starting iteration: 4; err: [Inf, 0.2271774478610605, 0.18196443909592927, 0.16557048344332725, 0.1543312013130635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2271774478610605, 0.18196443909592927, 0.16557048344332725, 0.1543312013130635, 0.14969582884386182] ***
*** starting iteration: 5; err: [Inf, 0.2271774478610605, 0.18196443909592927, 0.16557048344332725, 0.1543312013130635, 0.14969582884386182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2271774478610605, 0.18196443909592927, 0.16557048344332725, 0.1543312013130635, 0.14969582884386182, 0.14830567360296845] ***
*** starting iteration: 6; err: [Inf, 0.2271774478610605, 0.18196443909592927, 0.16557048344332725, 0.1543312013130635, 0.14969582884386182, 0.14830567360296845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2271774478610605, 0.18196443909592927, 0.16557048344332725, 0.1543312013130635, 0.14969582884386182, 0.14830567360296845, 0.14774653545953334] ***
*** finished computation of 7 references, err: [Inf, 0.2271774478610605, 0.18196443909592927, 0.16557048344332725, 0.1543312013130635, 0.14969582884386182, 0.14830567360296845, 0.14774653545953334] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [79, 1, 0]]
** centroid: 1, normalized-entropy: 0.09694460606247329, [(1, 79), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [80, 11, 0]]
** centroid: 2, normalized-entropy: 0.5318826028800231, [(1, 80), (2, 11)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [3, 79, 0]]
** centroid: 3, normalized-entropy: 0.22641094842107634, [(1, 3), (2, 79)]
*** center 4: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 4, 0]]
** centroid: 5, normalized-entropy: 0.4770713062193298, [(1, 35), (2, 4)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 61, 0]]
** centroid: 6, normalized-entropy: 0.20307392998664567, [(1, 2), (2, 61)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 32, 21]]
** centroid: 7, normalized-entropy: 0.9687003436508602, [(2, 32), (3, 21)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20853179053589702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20853179053589702, 0.1623762335795909] ***
*** starting iteration: 2; err: [Inf, 0.20853179053589702, 0.1623762335795909] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20853179053589702, 0.1623762335795909, 0.15246921402029692] ***
*** starting iteration: 3; err: [Inf, 0.20853179053589702, 0.1623762335795909, 0.15246921402029692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20853179053589702, 0.1623762335795909, 0.15246921402029692, 0.1491422925721854] ***
*** starting iteration: 4; err: [Inf, 0.20853179053589702, 0.1623762335795909, 0.15246921402029692, 0.1491422925721854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20853179053589702, 0.1623762335795909, 0.15246921402029692, 0.1491422925721854, 0.1479716792665422] ***
*** starting iteration: 5; err: [Inf, 0.20853179053589702, 0.1623762335795909, 0.15246921402029692, 0.1491422925721854, 0.1479716792665422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20853179053589702, 0.1623762335795909, 0.15246921402029692, 0.1491422925721854, 0.1479716792665422, 0.14718826433550566] ***
*** finished computation of 7 references, err: [Inf, 0.20853179053589702, 0.1623762335795909, 0.15246921402029692, 0.1491422925721854, 0.1479716792665422, 0.14718826433550566] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [63, 29, 0]]
** centroid: 1, normalized-entropy: 0.8991045208483789, [(1, 63), (2, 29)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [36, 43, 0]]
** centroid: 2, normalized-entropy: 0.9943290455933883, [(1, 36), (2, 43)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 52, 20]]
** centroid: 3, normalized-entropy: 0.8524051786494784, [(2, 52), (3, 20)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [47, 4, 0]]
** centroid: 4, normalized-entropy: 0.3966277727783787, [(1, 47), (2, 4)]
*** center 5: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 63, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2614394018063322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2614394018063322, 0.1674792100470513] ***
*** starting iteration: 2; err: [Inf, 0.2614394018063322, 0.1674792100470513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2614394018063322, 0.1674792100470513, 0.15578560033813119] ***
*** starting iteration: 3; err: [Inf, 0.2614394018063322, 0.1674792100470513, 0.15578560033813119] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2614394018063322, 0.1674792100470513, 0.15578560033813119, 0.15317113607376814] ***
*** starting iteration: 4; err: [Inf, 0.2614394018063322, 0.1674792100470513, 0.15578560033813119, 0.15317113607376814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2614394018063322, 0.1674792100470513, 0.15578560033813119, 0.15317113607376814, 0.15134917070064693] ***
*** starting iteration: 5; err: [Inf, 0.2614394018063322, 0.1674792100470513, 0.15578560033813119, 0.15317113607376814, 0.15134917070064693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2614394018063322, 0.1674792100470513, 0.15578560033813119, 0.15317113607376814, 0.15134917070064693, 0.15013622217439115] ***
*** starting iteration: 6; err: [Inf, 0.2614394018063322, 0.1674792100470513, 0.15578560033813119, 0.15317113607376814, 0.15134917070064693, 0.15013622217439115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2614394018063322, 0.1674792100470513, 0.15578560033813119, 0.15317113607376814, 0.15134917070064693, 0.15013622217439115, 0.1492370962454006] ***
*** finished computation of 7 references, err: [Inf, 0.2614394018063322, 0.1674792100470513, 0.15578560033813119, 0.15317113607376814, 0.15134917070064693, 0.15013622217439115, 0.1492370962454006] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [77, 1, 0]]
** centroid: 1, normalized-entropy: 0.098959095355743, [(1, 77), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 30, 0]]
** centroid: 2, normalized-entropy: 0.9971803988942641, [(1, 34), (2, 30)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 70, 22]]
** centroid: 3, normalized-entropy: 0.7935912300117066, [(2, 70), (3, 22)]
*** center 4: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [26, 57, 0]]
** centroid: 5, normalized-entropy: 0.8968928834064589, [(1, 26), (2, 57)]
*** center 6: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [26, 48, 0]]
** centroid: 7, normalized-entropy: 0.9352691398683568, [(1, 26), (2, 48)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19923694457672536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19923694457672536, 0.15932063420861958] ***
*** starting iteration: 2; err: [Inf, 0.19923694457672536, 0.15932063420861958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19923694457672536, 0.15932063420861958, 0.15559568170644342] ***
*** starting iteration: 3; err: [Inf, 0.19923694457672536, 0.15932063420861958, 0.15559568170644342] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19923694457672536, 0.15932063420861958, 0.15559568170644342, 0.15322909753210842] ***
*** starting iteration: 4; err: [Inf, 0.19923694457672536, 0.15932063420861958, 0.15559568170644342, 0.15322909753210842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19923694457672536, 0.15932063420861958, 0.15559568170644342, 0.15322909753210842, 0.1509485688591376] ***
*** starting iteration: 5; err: [Inf, 0.19923694457672536, 0.15932063420861958, 0.15559568170644342, 0.15322909753210842, 0.1509485688591376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19923694457672536, 0.15932063420861958, 0.15559568170644342, 0.15322909753210842, 0.1509485688591376, 0.1505751614565961] ***
*** finished computation of 7 references, err: [Inf, 0.19923694457672536, 0.15932063420861958, 0.15559568170644342, 0.15322909753210842, 0.1509485688591376, 0.1505751614565961] ***
*** center 1: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [64, 33, 0]]
** centroid: 2, normalized-entropy: 0.925015873745592, [(1, 64), (2, 33)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [31, 43, 0]]
** centroid: 3, normalized-entropy: 0.9809470132751208, [(1, 31), (2, 43)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [6, 51, 0]]
** centroid: 4, normalized-entropy: 0.48546076074591343, [(1, 6), (2, 51)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 62, 19]]
** centroid: 5, normalized-entropy: 0.785889583138768, [(2, 62), (3, 19)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [41, 1, 0]]
** centroid: 6, normalized-entropy: 0.1623261801753929, [(1, 41), (2, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21400557217001914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21400557217001914, 0.1726687493920326] ***
*** starting iteration: 2; err: [Inf, 0.21400557217001914, 0.1726687493920326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21400557217001914, 0.1726687493920326, 0.16282065389119088] ***
*** starting iteration: 3; err: [Inf, 0.21400557217001914, 0.1726687493920326, 0.16282065389119088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21400557217001914, 0.1726687493920326, 0.16282065389119088, 0.1553551103109494] ***
*** starting iteration: 4; err: [Inf, 0.21400557217001914, 0.1726687493920326, 0.16282065389119088, 0.1553551103109494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21400557217001914, 0.1726687493920326, 0.16282065389119088, 0.1553551103109494, 0.15230215393519028] ***
*** starting iteration: 5; err: [Inf, 0.21400557217001914, 0.1726687493920326, 0.16282065389119088, 0.1553551103109494, 0.15230215393519028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21400557217001914, 0.1726687493920326, 0.16282065389119088, 0.1553551103109494, 0.15230215393519028, 0.15054999869363384] ***
*** starting iteration: 6; err: [Inf, 0.21400557217001914, 0.1726687493920326, 0.16282065389119088, 0.1553551103109494, 0.15230215393519028, 0.15054999869363384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21400557217001914, 0.1726687493920326, 0.16282065389119088, 0.1553551103109494, 0.15230215393519028, 0.15054999869363384, 0.14881437641568482] ***
*** starting iteration: 7; err: [Inf, 0.21400557217001914, 0.1726687493920326, 0.16282065389119088, 0.1553551103109494, 0.15230215393519028, 0.15054999869363384, 0.14881437641568482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21400557217001914, 0.1726687493920326, 0.16282065389119088, 0.1553551103109494, 0.15230215393519028, 0.15054999869363384, 0.14881437641568482, 0.1477965550776571] ***
*** starting iteration: 8; err: [Inf, 0.21400557217001914, 0.1726687493920326, 0.16282065389119088, 0.1553551103109494, 0.15230215393519028, 0.15054999869363384, 0.14881437641568482, 0.1477965550776571] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21400557217001914, 0.1726687493920326, 0.16282065389119088, 0.1553551103109494, 0.15230215393519028, 0.15054999869363384, 0.14881437641568482, 0.1477965550776571, 0.14734536679275334] ***
*** finished computation of 7 references, err: [Inf, 0.21400557217001914, 0.1726687493920326, 0.16282065389119088, 0.1553551103109494, 0.15230215393519028, 0.15054999869363384, 0.14881437641568482, 0.1477965550776571, 0.14734536679275334] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [1, 64, 0]]
** centroid: 1, normalized-entropy: 0.11467550533614682, [(1, 1), (2, 64)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [54, 25, 0]]
** centroid: 2, normalized-entropy: 0.9004854334784268, [(1, 54), (2, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [66, 4, 0]]
** centroid: 4, normalized-entropy: 0.3159971329784246, [(1, 66), (2, 4)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 81, 19]]
** centroid: 5, normalized-entropy: 0.7014714598838974, [(2, 81), (3, 19)]
*** center 6: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [63, 14, 0]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(1, 63), (2, 14)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20789643619349227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20789643619349227, 0.15986216738028453] ***
*** starting iteration: 2; err: [Inf, 0.20789643619349227, 0.15986216738028453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20789643619349227, 0.15986216738028453, 0.1523194846753031] ***
*** starting iteration: 3; err: [Inf, 0.20789643619349227, 0.15986216738028453, 0.1523194846753031] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20789643619349227, 0.15986216738028453, 0.1523194846753031, 0.1495388016551733] ***
*** starting iteration: 4; err: [Inf, 0.20789643619349227, 0.15986216738028453, 0.1523194846753031, 0.1495388016551733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20789643619349227, 0.15986216738028453, 0.1523194846753031, 0.1495388016551733, 0.1485017473748885] ***
*** starting iteration: 5; err: [Inf, 0.20789643619349227, 0.15986216738028453, 0.1523194846753031, 0.1495388016551733, 0.1485017473748885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20789643619349227, 0.15986216738028453, 0.1523194846753031, 0.1495388016551733, 0.1485017473748885, 0.1482381577398628] ***
*** finished computation of 7 references, err: [Inf, 0.20789643619349227, 0.15986216738028453, 0.1523194846753031, 0.1495388016551733, 0.1485017473748885, 0.1482381577398628] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 58, 21]]
** centroid: 1, normalized-entropy: 0.8354065254460503, [(2, 58), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [19, 37, 0]]
** centroid: 2, normalized-entropy: 0.9241335419915458, [(1, 19), (2, 37)]
*** center 3: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [22, 58, 0]]
** centroid: 4, normalized-entropy: 0.8485481782946159, [(1, 22), (2, 58)]
*** center 5: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [64, 1, 0]]
** centroid: 6, normalized-entropy: 0.11467550533614682, [(1, 64), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [46, 33, 0]]
** centroid: 7, normalized-entropy: 0.980377508715691, [(1, 46), (2, 33)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20547762592788785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20547762592788785, 0.17030622899066658] ***
*** starting iteration: 2; err: [Inf, 0.20547762592788785, 0.17030622899066658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20547762592788785, 0.17030622899066658, 0.16264086790941656] ***
*** starting iteration: 3; err: [Inf, 0.20547762592788785, 0.17030622899066658, 0.16264086790941656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20547762592788785, 0.17030622899066658, 0.16264086790941656, 0.15802041844278575] ***
*** starting iteration: 4; err: [Inf, 0.20547762592788785, 0.17030622899066658, 0.16264086790941656, 0.15802041844278575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20547762592788785, 0.17030622899066658, 0.16264086790941656, 0.15802041844278575, 0.15394028610736132] ***
*** starting iteration: 5; err: [Inf, 0.20547762592788785, 0.17030622899066658, 0.16264086790941656, 0.15802041844278575, 0.15394028610736132] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20547762592788785, 0.17030622899066658, 0.16264086790941656, 0.15802041844278575, 0.15394028610736132, 0.15031146013271063] ***
*** starting iteration: 6; err: [Inf, 0.20547762592788785, 0.17030622899066658, 0.16264086790941656, 0.15802041844278575, 0.15394028610736132, 0.15031146013271063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20547762592788785, 0.17030622899066658, 0.16264086790941656, 0.15802041844278575, 0.15394028610736132, 0.15031146013271063, 0.14814102420397102] ***
*** starting iteration: 7; err: [Inf, 0.20547762592788785, 0.17030622899066658, 0.16264086790941656, 0.15802041844278575, 0.15394028610736132, 0.15031146013271063, 0.14814102420397102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20547762592788785, 0.17030622899066658, 0.16264086790941656, 0.15802041844278575, 0.15394028610736132, 0.15031146013271063, 0.14814102420397102, 0.14756282691657543] ***
*** finished computation of 7 references, err: [Inf, 0.20547762592788785, 0.17030622899066658, 0.16264086790941656, 0.15802041844278575, 0.15394028610736132, 0.15031146013271063, 0.14814102420397102, 0.14756282691657543] ***
*** center 1: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [63, 2, 0]]
** centroid: 2, normalized-entropy: 0.19823496409776642, [(1, 63), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [3, 57, 0]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(1, 3), (2, 57)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [85, 7, 0]]
** centroid: 4, normalized-entropy: 0.3882389775123619, [(1, 85), (2, 7)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [68, 17, 0]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(1, 68), (2, 17)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 26, 19]]
** centroid: 6, normalized-entropy: 0.9824740868386409, [(2, 26), (3, 19)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 72, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21682761594839395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682761594839395, 0.17731958173401655] ***
*** starting iteration: 2; err: [Inf, 0.21682761594839395, 0.17731958173401655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747] ***
*** starting iteration: 3; err: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747, 0.16055035004206003] ***
*** starting iteration: 4; err: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747, 0.16055035004206003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747, 0.16055035004206003, 0.15548933752439917] ***
*** starting iteration: 5; err: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747, 0.16055035004206003, 0.15548933752439917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747, 0.16055035004206003, 0.15548933752439917, 0.15255320401675998] ***
*** starting iteration: 6; err: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747, 0.16055035004206003, 0.15548933752439917, 0.15255320401675998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747, 0.16055035004206003, 0.15548933752439917, 0.15255320401675998, 0.15066890796273946] ***
*** starting iteration: 7; err: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747, 0.16055035004206003, 0.15548933752439917, 0.15255320401675998, 0.15066890796273946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747, 0.16055035004206003, 0.15548933752439917, 0.15255320401675998, 0.15066890796273946, 0.14881995690893382] ***
*** starting iteration: 8; err: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747, 0.16055035004206003, 0.15548933752439917, 0.15255320401675998, 0.15066890796273946, 0.14881995690893382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747, 0.16055035004206003, 0.15548933752439917, 0.15255320401675998, 0.15066890796273946, 0.14881995690893382, 0.14777403447404505] ***
*** starting iteration: 9; err: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747, 0.16055035004206003, 0.15548933752439917, 0.15255320401675998, 0.15066890796273946, 0.14881995690893382, 0.14777403447404505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747, 0.16055035004206003, 0.15548933752439917, 0.15255320401675998, 0.15066890796273946, 0.14881995690893382, 0.14777403447404505, 0.14723353896662592] ***
*** finished computation of 7 references, err: [Inf, 0.21682761594839395, 0.17731958173401655, 0.16809106764476747, 0.16055035004206003, 0.15548933752439917, 0.15255320401675998, 0.15066890796273946, 0.14881995690893382, 0.14777403447404505, 0.14723353896662592] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [42, 36, 0]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(1, 42), (2, 36)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 52, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [71, 5, 0]]
** centroid: 3, normalized-entropy: 0.35001059292688486, [(1, 71), (2, 5)]
*** center 4: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [36, 35, 0]]
** centroid: 5, normalized-entropy: 0.9998568991526107, [(1, 36), (2, 35)]
*** center 6: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 65, 18]]
** centroid: 7, normalized-entropy: 0.7544062039636575, [(2, 65), (3, 18)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22517800116539002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22517800116539002, 0.1705665721790865] ***
*** starting iteration: 2; err: [Inf, 0.22517800116539002, 0.1705665721790865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22517800116539002, 0.1705665721790865, 0.1640810500914231] ***
*** starting iteration: 3; err: [Inf, 0.22517800116539002, 0.1705665721790865, 0.1640810500914231] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22517800116539002, 0.1705665721790865, 0.1640810500914231, 0.15950360141322018] ***
*** starting iteration: 4; err: [Inf, 0.22517800116539002, 0.1705665721790865, 0.1640810500914231, 0.15950360141322018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22517800116539002, 0.1705665721790865, 0.1640810500914231, 0.15950360141322018, 0.15549143506214022] ***
*** starting iteration: 5; err: [Inf, 0.22517800116539002, 0.1705665721790865, 0.1640810500914231, 0.15950360141322018, 0.15549143506214022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22517800116539002, 0.1705665721790865, 0.1640810500914231, 0.15950360141322018, 0.15549143506214022, 0.15305813213437797] ***
*** starting iteration: 6; err: [Inf, 0.22517800116539002, 0.1705665721790865, 0.1640810500914231, 0.15950360141322018, 0.15549143506214022, 0.15305813213437797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22517800116539002, 0.1705665721790865, 0.1640810500914231, 0.15950360141322018, 0.15549143506214022, 0.15305813213437797, 0.1512139969142154] ***
*** starting iteration: 7; err: [Inf, 0.22517800116539002, 0.1705665721790865, 0.1640810500914231, 0.15950360141322018, 0.15549143506214022, 0.15305813213437797, 0.1512139969142154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22517800116539002, 0.1705665721790865, 0.1640810500914231, 0.15950360141322018, 0.15549143506214022, 0.15305813213437797, 0.1512139969142154, 0.15065287670865654] ***
*** finished computation of 7 references, err: [Inf, 0.22517800116539002, 0.1705665721790865, 0.1640810500914231, 0.15950360141322018, 0.15549143506214022, 0.15305813213437797, 0.1512139969142154, 0.15065287670865654] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 20]]
** centroid: 1, normalized-entropy: 0.9561550236844027, [(2, 33), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [80, 12, 0]]
** centroid: 2, normalized-entropy: 0.5586293734521991, [(1, 80), (2, 12)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [42, 8, 0]]
** centroid: 3, normalized-entropy: 0.634309554640566, [(1, 42), (2, 8)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 65, 3]]
** centroid: 4, normalized-entropy: 0.260862909647207, [(2, 65), (3, 3)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [17, 72, 0]]
** centroid: 5, normalized-entropy: 0.7035821005719904, [(1, 17), (2, 72)]
*** center 6: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2129789656624198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2129789656624198, 0.16898706995509566] ***
*** starting iteration: 2; err: [Inf, 0.2129789656624198, 0.16898706995509566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2129789656624198, 0.16898706995509566, 0.15782351387292146] ***
*** starting iteration: 3; err: [Inf, 0.2129789656624198, 0.16898706995509566, 0.15782351387292146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2129789656624198, 0.16898706995509566, 0.15782351387292146, 0.15101291058119387] ***
*** starting iteration: 4; err: [Inf, 0.2129789656624198, 0.16898706995509566, 0.15782351387292146, 0.15101291058119387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2129789656624198, 0.16898706995509566, 0.15782351387292146, 0.15101291058119387, 0.1468940308317542] ***
*** starting iteration: 5; err: [Inf, 0.2129789656624198, 0.16898706995509566, 0.15782351387292146, 0.15101291058119387, 0.1468940308317542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2129789656624198, 0.16898706995509566, 0.15782351387292146, 0.15101291058119387, 0.1468940308317542, 0.14550888950750232] ***
*** starting iteration: 6; err: [Inf, 0.2129789656624198, 0.16898706995509566, 0.15782351387292146, 0.15101291058119387, 0.1468940308317542, 0.14550888950750232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2129789656624198, 0.16898706995509566, 0.15782351387292146, 0.15101291058119387, 0.1468940308317542, 0.14550888950750232, 0.1452411242891103] ***
*** finished computation of 7 references, err: [Inf, 0.2129789656624198, 0.16898706995509566, 0.15782351387292146, 0.15101291058119387, 0.1468940308317542, 0.14550888950750232, 0.1452411242891103] ***
*** center 1: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 59, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [4, 78, 0]]
** centroid: 4, normalized-entropy: 0.2811937964320427, [(1, 4), (2, 78)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [53, 21, 0]]
** centroid: 5, normalized-entropy: 0.8605553930586318, [(1, 53), (2, 21)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [62, 7, 0]]
** centroid: 6, normalized-entropy: 0.47357292491745173, [(1, 62), (2, 7)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 22, 21]]
** centroid: 7, normalized-entropy: 0.9996098363678071, [(2, 22), (3, 21)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2553668902553618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2553668902553618, 0.19237893172539772] ***
*** starting iteration: 2; err: [Inf, 0.2553668902553618, 0.19237893172539772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2553668902553618, 0.19237893172539772, 0.17039271442312748] ***
*** starting iteration: 3; err: [Inf, 0.2553668902553618, 0.19237893172539772, 0.17039271442312748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2553668902553618, 0.19237893172539772, 0.17039271442312748, 0.15659144128672778] ***
*** starting iteration: 4; err: [Inf, 0.2553668902553618, 0.19237893172539772, 0.17039271442312748, 0.15659144128672778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2553668902553618, 0.19237893172539772, 0.17039271442312748, 0.15659144128672778, 0.15121919871727005] ***
*** starting iteration: 5; err: [Inf, 0.2553668902553618, 0.19237893172539772, 0.17039271442312748, 0.15659144128672778, 0.15121919871727005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2553668902553618, 0.19237893172539772, 0.17039271442312748, 0.15659144128672778, 0.15121919871727005, 0.14929300213977695] ***
*** starting iteration: 6; err: [Inf, 0.2553668902553618, 0.19237893172539772, 0.17039271442312748, 0.15659144128672778, 0.15121919871727005, 0.14929300213977695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2553668902553618, 0.19237893172539772, 0.17039271442312748, 0.15659144128672778, 0.15121919871727005, 0.14929300213977695, 0.14842983012087643] ***
*** finished computation of 7 references, err: [Inf, 0.2553668902553618, 0.19237893172539772, 0.17039271442312748, 0.15659144128672778, 0.15121919871727005, 0.14929300213977695, 0.14842983012087643] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [77, 20, 0]]
** centroid: 1, normalized-entropy: 0.7341280428958428, [(1, 77), (2, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [41, 46, 0]]
** centroid: 2, normalized-entropy: 0.9976161146077627, [(1, 41), (2, 46)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 70, 21]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 70), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [45, 9, 0]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(1, 45), (2, 9)]
*** center 6: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 46, 1]]
** centroid: 7, normalized-entropy: 0.14854949043034832, [(2, 46), (3, 1)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21922311364021152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21922311364021152, 0.17213391778804363] ***
*** starting iteration: 2; err: [Inf, 0.21922311364021152, 0.17213391778804363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21922311364021152, 0.17213391778804363, 0.16073356767371297] ***
*** starting iteration: 3; err: [Inf, 0.21922311364021152, 0.17213391778804363, 0.16073356767371297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21922311364021152, 0.17213391778804363, 0.16073356767371297, 0.1576107682995498] ***
*** starting iteration: 4; err: [Inf, 0.21922311364021152, 0.17213391778804363, 0.16073356767371297, 0.1576107682995498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21922311364021152, 0.17213391778804363, 0.16073356767371297, 0.1576107682995498, 0.15570650394400581] ***
*** starting iteration: 5; err: [Inf, 0.21922311364021152, 0.17213391778804363, 0.16073356767371297, 0.1576107682995498, 0.15570650394400581] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21922311364021152, 0.17213391778804363, 0.16073356767371297, 0.1576107682995498, 0.15570650394400581, 0.15491070714313537] ***
*** finished computation of 7 references, err: [Inf, 0.21922311364021152, 0.17213391778804363, 0.16073356767371297, 0.1576107682995498, 0.15570650394400581, 0.15491070714313537] ***
*** center 1: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [25, 26, 0]]
** centroid: 2, normalized-entropy: 0.9997226475394071, [(1, 25), (2, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 63, 17]]
** centroid: 4, normalized-entropy: 0.7462343013654809, [(2, 63), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [69, 25, 0]]
** centroid: 5, normalized-entropy: 0.8356038276131503, [(1, 69), (2, 25)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 98, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [59, 1, 0]]
** centroid: 7, normalized-entropy: 0.12229159706937456, [(1, 59), (2, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22385897508636116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22385897508636116, 0.1717825608290732] ***
*** starting iteration: 2; err: [Inf, 0.22385897508636116, 0.1717825608290732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22385897508636116, 0.1717825608290732, 0.16139302849955856] ***
*** starting iteration: 3; err: [Inf, 0.22385897508636116, 0.1717825608290732, 0.16139302849955856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22385897508636116, 0.1717825608290732, 0.16139302849955856, 0.1559388034241274] ***
*** starting iteration: 4; err: [Inf, 0.22385897508636116, 0.1717825608290732, 0.16139302849955856, 0.1559388034241274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22385897508636116, 0.1717825608290732, 0.16139302849955856, 0.1559388034241274, 0.15314164778683334] ***
*** starting iteration: 5; err: [Inf, 0.22385897508636116, 0.1717825608290732, 0.16139302849955856, 0.1559388034241274, 0.15314164778683334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22385897508636116, 0.1717825608290732, 0.16139302849955856, 0.1559388034241274, 0.15314164778683334, 0.15116849484294653] ***
*** starting iteration: 6; err: [Inf, 0.22385897508636116, 0.1717825608290732, 0.16139302849955856, 0.1559388034241274, 0.15314164778683334, 0.15116849484294653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22385897508636116, 0.1717825608290732, 0.16139302849955856, 0.1559388034241274, 0.15314164778683334, 0.15116849484294653, 0.1496135244779289] ***
*** starting iteration: 7; err: [Inf, 0.22385897508636116, 0.1717825608290732, 0.16139302849955856, 0.1559388034241274, 0.15314164778683334, 0.15116849484294653, 0.1496135244779289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22385897508636116, 0.1717825608290732, 0.16139302849955856, 0.1559388034241274, 0.15314164778683334, 0.15116849484294653, 0.1496135244779289, 0.14913155352137983] ***
*** finished computation of 7 references, err: [Inf, 0.22385897508636116, 0.1717825608290732, 0.16139302849955856, 0.1559388034241274, 0.15314164778683334, 0.15116849484294653, 0.1496135244779289, 0.14913155352137983] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [36, 44, 0]]
** centroid: 1, normalized-entropy: 0.9927744539878083, [(1, 36), (2, 44)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [22, 59, 0]]
** centroid: 2, normalized-entropy: 0.8437582063121657, [(1, 22), (2, 59)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 57, 22]]
** centroid: 3, normalized-entropy: 0.8533728188427888, [(2, 57), (3, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [29, 23, 0]]
** centroid: 4, normalized-entropy: 0.990374836448575, [(1, 29), (2, 23)]
*** center 5: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20975657841563225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20975657841563225, 0.1687258540056646] ***
*** starting iteration: 2; err: [Inf, 0.20975657841563225, 0.1687258540056646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20975657841563225, 0.1687258540056646, 0.15759146501496435] ***
*** starting iteration: 3; err: [Inf, 0.20975657841563225, 0.1687258540056646, 0.15759146501496435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20975657841563225, 0.1687258540056646, 0.15759146501496435, 0.15045126222353428] ***
*** starting iteration: 4; err: [Inf, 0.20975657841563225, 0.1687258540056646, 0.15759146501496435, 0.15045126222353428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20975657841563225, 0.1687258540056646, 0.15759146501496435, 0.15045126222353428, 0.14684195672068745] ***
*** starting iteration: 5; err: [Inf, 0.20975657841563225, 0.1687258540056646, 0.15759146501496435, 0.15045126222353428, 0.14684195672068745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20975657841563225, 0.1687258540056646, 0.15759146501496435, 0.15045126222353428, 0.14684195672068745, 0.145305220419541] ***
*** starting iteration: 6; err: [Inf, 0.20975657841563225, 0.1687258540056646, 0.15759146501496435, 0.15045126222353428, 0.14684195672068745, 0.145305220419541] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20975657841563225, 0.1687258540056646, 0.15759146501496435, 0.15045126222353428, 0.14684195672068745, 0.145305220419541, 0.14463452566415072] ***
*** finished computation of 7 references, err: [Inf, 0.20975657841563225, 0.1687258540056646, 0.15759146501496435, 0.15045126222353428, 0.14684195672068745, 0.145305220419541, 0.14463452566415072] ***
*** center 1: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [63, 7, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 63), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 55, 17]]
** centroid: 3, normalized-entropy: 0.7885131605379784, [(2, 55), (3, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [22, 59, 0]]
** centroid: 4, normalized-entropy: 0.8437582063121657, [(1, 22), (2, 59)]
*** center 5: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [68, 7, 0]]
** centroid: 6, normalized-entropy: 0.44749925503686355, [(1, 68), (2, 7)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 55, 0]]
** centroid: 7, normalized-entropy: 0.12923377484588472, [(1, 1), (2, 55)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22457637493964286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22457637493964286, 0.18319440317340197] ***
*** starting iteration: 2; err: [Inf, 0.22457637493964286, 0.18319440317340197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22457637493964286, 0.18319440317340197, 0.16499805928394198] ***
*** starting iteration: 3; err: [Inf, 0.22457637493964286, 0.18319440317340197, 0.16499805928394198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22457637493964286, 0.18319440317340197, 0.16499805928394198, 0.15655918782018124] ***
*** starting iteration: 4; err: [Inf, 0.22457637493964286, 0.18319440317340197, 0.16499805928394198, 0.15655918782018124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22457637493964286, 0.18319440317340197, 0.16499805928394198, 0.15655918782018124, 0.15145049694553017] ***
*** starting iteration: 5; err: [Inf, 0.22457637493964286, 0.18319440317340197, 0.16499805928394198, 0.15655918782018124, 0.15145049694553017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22457637493964286, 0.18319440317340197, 0.16499805928394198, 0.15655918782018124, 0.15145049694553017, 0.14860930174123496] ***
*** starting iteration: 6; err: [Inf, 0.22457637493964286, 0.18319440317340197, 0.16499805928394198, 0.15655918782018124, 0.15145049694553017, 0.14860930174123496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22457637493964286, 0.18319440317340197, 0.16499805928394198, 0.15655918782018124, 0.15145049694553017, 0.14860930174123496, 0.1475884244143963] ***
*** starting iteration: 7; err: [Inf, 0.22457637493964286, 0.18319440317340197, 0.16499805928394198, 0.15655918782018124, 0.15145049694553017, 0.14860930174123496, 0.1475884244143963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22457637493964286, 0.18319440317340197, 0.16499805928394198, 0.15655918782018124, 0.15145049694553017, 0.14860930174123496, 0.1475884244143963, 0.1472599867777899] ***
*** finished computation of 7 references, err: [Inf, 0.22457637493964286, 0.18319440317340197, 0.16499805928394198, 0.15655918782018124, 0.15145049694553017, 0.14860930174123496, 0.1475884244143963, 0.1472599867777899] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [68, 38, 0]]
** centroid: 1, normalized-entropy: 0.9414231081869789, [(1, 68), (2, 38)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [60, 2, 0]]
** centroid: 2, normalized-entropy: 0.2055925081850832, [(1, 60), (2, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 50, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 56, 19]]
** centroid: 5, normalized-entropy: 0.8165187119538281, [(2, 56), (3, 19)]
*** center 6: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [24, 47, 0]]
** centroid: 7, normalized-entropy: 0.9229192878686723, [(1, 24), (2, 47)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4017151366397739] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4017151366397739, 0.2076100408853963] ***
*** starting iteration: 2; err: [Inf, 0.4017151366397739, 0.2076100408853963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4017151366397739, 0.2076100408853963, 0.18218927455879746] ***
*** starting iteration: 3; err: [Inf, 0.4017151366397739, 0.2076100408853963, 0.18218927455879746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4017151366397739, 0.2076100408853963, 0.18218927455879746, 0.16553359374031423] ***
*** starting iteration: 4; err: [Inf, 0.4017151366397739, 0.2076100408853963, 0.18218927455879746, 0.16553359374031423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4017151366397739, 0.2076100408853963, 0.18218927455879746, 0.16553359374031423, 0.15533418809855357] ***
*** starting iteration: 5; err: [Inf, 0.4017151366397739, 0.2076100408853963, 0.18218927455879746, 0.16553359374031423, 0.15533418809855357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4017151366397739, 0.2076100408853963, 0.18218927455879746, 0.16553359374031423, 0.15533418809855357, 0.14997218711860477] ***
*** starting iteration: 6; err: [Inf, 0.4017151366397739, 0.2076100408853963, 0.18218927455879746, 0.16553359374031423, 0.15533418809855357, 0.14997218711860477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4017151366397739, 0.2076100408853963, 0.18218927455879746, 0.16553359374031423, 0.15533418809855357, 0.14997218711860477, 0.14779648688063027] ***
*** starting iteration: 7; err: [Inf, 0.4017151366397739, 0.2076100408853963, 0.18218927455879746, 0.16553359374031423, 0.15533418809855357, 0.14997218711860477, 0.14779648688063027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4017151366397739, 0.2076100408853963, 0.18218927455879746, 0.16553359374031423, 0.15533418809855357, 0.14997218711860477, 0.14779648688063027, 0.14674329126719385] ***
*** starting iteration: 8; err: [Inf, 0.4017151366397739, 0.2076100408853963, 0.18218927455879746, 0.16553359374031423, 0.15533418809855357, 0.14997218711860477, 0.14779648688063027, 0.14674329126719385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4017151366397739, 0.2076100408853963, 0.18218927455879746, 0.16553359374031423, 0.15533418809855357, 0.14997218711860477, 0.14779648688063027, 0.14674329126719385, 0.1465400147261098] ***
*** finished computation of 7 references, err: [Inf, 0.4017151366397739, 0.2076100408853963, 0.18218927455879746, 0.16553359374031423, 0.15533418809855357, 0.14997218711860477, 0.14779648688063027, 0.14674329126719385, 0.1465400147261098] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [77, 3, 0]]
** centroid: 1, normalized-entropy: 0.2307099556914763, [(1, 77), (2, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 66, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [52, 28, 0]]
** centroid: 4, normalized-entropy: 0.9340680553754911, [(1, 52), (2, 28)]
*** center 5: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 62, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 28, 20]]
** centroid: 7, normalized-entropy: 0.9798687566511527, [(2, 28), (3, 20)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23559734850935637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559734850935637, 0.16078293961146847] ***
*** starting iteration: 2; err: [Inf, 0.23559734850935637, 0.16078293961146847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559734850935637, 0.16078293961146847, 0.15502266642078757] ***
*** starting iteration: 3; err: [Inf, 0.23559734850935637, 0.16078293961146847, 0.15502266642078757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559734850935637, 0.16078293961146847, 0.15502266642078757, 0.15134845323022456] ***
*** starting iteration: 4; err: [Inf, 0.23559734850935637, 0.16078293961146847, 0.15502266642078757, 0.15134845323022456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559734850935637, 0.16078293961146847, 0.15502266642078757, 0.15134845323022456, 0.14940834559034555] ***
*** starting iteration: 5; err: [Inf, 0.23559734850935637, 0.16078293961146847, 0.15502266642078757, 0.15134845323022456, 0.14940834559034555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559734850935637, 0.16078293961146847, 0.15502266642078757, 0.15134845323022456, 0.14940834559034555, 0.14871547446306796] ***
*** finished computation of 7 references, err: [Inf, 0.23559734850935637, 0.16078293961146847, 0.15502266642078757, 0.15134845323022456, 0.14940834559034555, 0.14871547446306796] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [33, 43, 0]]
** centroid: 1, normalized-entropy: 0.9874750082985965, [(1, 33), (2, 43)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [65, 30, 0]]
** centroid: 2, normalized-entropy: 0.8997437586982626, [(1, 65), (2, 30)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 42, 21]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 42), (3, 21)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [8, 32, 0]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(1, 8), (2, 32)]
*** center 5: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 43, 1]]
** centroid: 6, normalized-entropy: 0.1564910629057016, [(2, 43), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2155121092107147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2155121092107147, 0.16738998685684056] ***
*** starting iteration: 2; err: [Inf, 0.2155121092107147, 0.16738998685684056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2155121092107147, 0.16738998685684056, 0.15359422591980545] ***
*** starting iteration: 3; err: [Inf, 0.2155121092107147, 0.16738998685684056, 0.15359422591980545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2155121092107147, 0.16738998685684056, 0.15359422591980545, 0.14916642384417356] ***
*** starting iteration: 4; err: [Inf, 0.2155121092107147, 0.16738998685684056, 0.15359422591980545, 0.14916642384417356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2155121092107147, 0.16738998685684056, 0.15359422591980545, 0.14916642384417356, 0.14747015480417758] ***
*** starting iteration: 5; err: [Inf, 0.2155121092107147, 0.16738998685684056, 0.15359422591980545, 0.14916642384417356, 0.14747015480417758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2155121092107147, 0.16738998685684056, 0.15359422591980545, 0.14916642384417356, 0.14747015480417758, 0.14717165321484207] ***
*** finished computation of 7 references, err: [Inf, 0.2155121092107147, 0.16738998685684056, 0.15359422591980545, 0.14916642384417356, 0.14747015480417758, 0.14717165321484207] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 60, 19]]
** centroid: 1, normalized-entropy: 0.7958812735955936, [(2, 60), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [61, 26, 0]]
** centroid: 2, normalized-entropy: 0.8798813089176428, [(1, 61), (2, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [4, 52, 0]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(1, 4), (2, 52)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [38, 44, 0]]
** centroid: 5, normalized-entropy: 0.9961344835095798, [(1, 38), (2, 44)]
*** center 6: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [45, 0, 0]]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 384,3 => 40,1 => 576), Dict(2 => 353,3 => 37,1 => 610))
[ Info: ===== scores for single classifier: {"micro_f1":0.903,"precision":0.903,"recall":0.903,"macro_recall":0.9326723323890462,"macro_f1":0.8291335851131373,"accuracy":0.903,"class_f1":{"2":0.8673050615595076,"3":0.6727272727272727,"1":0.9473684210526316},"class_precision":{"2":0.8386243386243386,"3":0.5068493150684932,"1":1.0},"class_recall":{"2":0.8980169971671388,"3":1.0,"1":0.9}}
[ Info: ===== scores for 1: {"micro_f1":0.956,"precision":0.956,"recall":0.956,"macro_recall":0.9514722217689756,"macro_f1":0.925019754794984,"accuracy":0.956,"class_f1":{"2":0.9382022471910112,"3":0.8641975308641975,"1":0.9726594863297431},"class_precision":{"2":0.9303621169916435,"3":0.7954545454545454,"1":0.983249581239531},"class_recall":{"2":0.9461756373937678,"3":0.9459459459459459,"1":0.9622950819672131}}
[ Info: ===== scores for 5: {"micro_f1":0.955,"precision":0.955,"recall":0.955,"macro_recall":0.951721451633215,"macro_f1":0.9277148539622585,"accuracy":0.955,"class_f1":{"2":0.9372384937238494,"3":0.875,"1":0.970906068162926},"class_precision":{"2":0.9230769230769231,"3":0.813953488372093,"1":0.984822934232715},"class_recall":{"2":0.9518413597733711,"3":0.9459459459459459,"1":0.9573770491803278}}
[ Info: ===== scores for 7: {"micro_f1":0.958,"precision":0.958,"recall":0.958,"macro_recall":0.9537586348713457,"macro_f1":0.9265898006438028,"accuracy":0.958,"class_f1":{"2":0.9413407821229051,"3":0.8641975308641975,"1":0.9742310889443059},"class_precision":{"2":0.928374655647383,"3":0.7954545454545454,"1":0.9881956155143339},"class_recall":{"2":0.9546742209631728,"3":0.9459459459459459,"1":0.9606557377049181}}
[ Info: ===== scores for 9: {"micro_f1":0.961,"precision":0.961,"recall":0.961,"macro_recall":0.9634627010793825,"macro_f1":0.9330566492664811,"accuracy":0.961,"class_f1":{"2":0.9451476793248945,"3":0.8780487804878049,"1":0.9759734879867439},"class_precision":{"2":0.9385474860335196,"3":0.8,"1":0.9865996649916248},"class_recall":{"2":0.9518413597733711,"3":0.972972972972973,"1":0.9655737704918033}}
[ Info: ===== scores for 11: {"micro_f1":0.964,"precision":0.964,"recall":0.964,"macro_recall":0.9747581231907615,"macro_f1":0.9331173601830408,"accuracy":0.964,"class_f1":{"2":0.9495798319327731,"3":0.8705882352941177,"1":0.9791840133222316},"class_precision":{"2":0.9390581717451524,"3":0.7708333333333334,"1":0.9949238578680203},"class_recall":{"2":0.9603399433427762,"3":1.0,"1":0.9639344262295082}}
(score = 0.953, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.953, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.956, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.956, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.955, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.955, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.953, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.953, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.958, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.955, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.955, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.958, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.958, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.958,"k":5,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.958,"precision":0.958,"recall":0.958,"macro_recall":0.9537586348713457,"macro_f1":0.9233469720153472,"accuracy":0.958,"class_f1":{"2":0.9413407821229051,"3":0.8536585365853658,"1":0.9750415973377704},"class_precision":{"2":0.928374655647383,"3":0.7777777777777778,"1":0.9898648648648649},"class_recall":{"2":0.9546742209631728,"3":0.9459459459459459,"1":0.9606557377049181}}
Test Summary: | Pass  Total
AKNC          |    8      8
[455, 2, 2, 1, 1, 2, 7, 7, 1, 8, 2, 2, 2, 5, 3, 2, 2, 18, 2, 2, 9, 1, 13, 2, 9, 6, 22, 7, 3, 3, 3, 13, 8, 15, 5, 46, 9, 13, 1, 5, 9, 30, 9, 5, 20, 10, 73, 19, 40, 5, 1, 48, 23, 11, 17, 4, 9, 5, 3, 1, 9, 11, 3, 28, 16, 9, 2, 14, 7, 21, 2, 25, 79, 2, 97, 7, 24, 6, 16, 30, 49, 10, 21, 11, 18, 50, 11, 4, 12, 12, 7, 67, 3, 2, 20, 14, 37, 1, 37, 1, 38, 1, 7, 18, 2, 24, 5, 26, 84, 8, 32, 16, 7, 6, 3, 77, 23, 17, 19, 32, 81, 81, 16, 5, 13, 14, 6, 6, 15, 15, 4, 22, 29, 31, 7, 45, 40, 7, 15, 27, 115, 43, 109, 8, 10, 12, 51, 12, 157, 6, 11, 13, 16, 8, 3, 8, 24, 120, 1, 13, 42, 34, 32, 6, 42, 15, 11, 49, 22, 18, 5, 147, 5, 18, 152, 140, 40, 5, 16, 9, 331, 9, 5, 23, 23, 32, 15, 66, 2, 21, 15, 6, 11, 8, 5, 10, 32, 50, 35, 18, 21, 16, 62, 17, 10, 4, 14, 20, 8, 77, 3, 2, 19, 24, 193, 31, 39, 16, 31, 24, 116, 8, 22, 4, 130, 13, 7, 11, 7, 2, 10, 21, 36, 9, 267, 11, 7, 30, 31, 7, 9, 12, 146, 34, 44, 46, 4, 19, 82, 25, 14, 246, 25, 23, 20, 93, 13, 602, 55, 19, 13, 11, 267, 7, 5, 4, 14, 10, 12, 48, 20, 10, 24, 19, 4, 43, 34, 4, 43, 12, 13, 67, 20, 14, 23, 4, 5, 4, 30, 8, 53, 7, 65, 3, 62, 145, 22, 12, 878, 5]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.643, speedup = 0.31478370975244196, eval_ratio = 0.079182)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.43472532242063494,"recall":0.4236111111111111,"f1":null,"seconds":0.0001707654446363449,"exhaustive_search_seconds":0.0003901328891515732,"evaluations":489.6640625,"distances_sum":1739.1557544042598}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.6085069444444442,"recall":0.6085069444444442,"f1":0.6085069444444442,"seconds":0.0002927985042333603,"exhaustive_search_seconds":0.0003901328891515732,"evaluations":673.9765625,"distances_sum":1681.2186806450616}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.7126736111111108,"recall":0.7126736111111108,"f1":0.7126736111111108,"seconds":0.00039501115679740906,"exhaustive_search_seconds":0.0003901328891515732,"evaluations":828.4140625,"distances_sum":1627.3513907689753}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.774305555555555,"recall":0.774305555555555,"f1":0.774305555555555,"seconds":0.0004864223301410675,"exhaustive_search_seconds":0.0003901328891515732,"evaluations":966.921875,"distances_sum":1606.2348762436745}
KCenters.DeloneInvIndex> reached performance {"precision":0.8203124999999991,"recall":0.8203124999999991,"f1":0.8203124999999991,"seconds":0.0005835536867380142,"exhaustive_search_seconds":0.0003901328891515732,"evaluations":1094.1015625,"distances_sum":1588.9148124591438}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7940000000000004, speedup = 0.4183771849126035, eval_ratio = 0.10625899999999999)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
