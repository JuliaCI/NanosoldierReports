Julia Version 1.5.0-DEV.360
Commit 012b270df6 (2020-02-28 07:57 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed DataAPI ───────────────────── v1.1.0
  Installed Missings ──────────────────── v0.4.3
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Parsers ───────────────────── v0.3.11
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Tables ────────────────────── v1.0.2
  Installed StatsBase ─────────────────── v0.32.1
  Installed JSON ──────────────────────── v0.21.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed LearnBase ─────────────────── v0.2.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed MLDataPattern ─────────────── v0.5.0
  Installed Compat ────────────────────── v3.6.0
  Installed DataStructures ────────────── v0.17.10
  Installed SimilaritySearch ──────────── v0.3.19
  Installed TableTraits ───────────────── v1.0.0
  Installed OrderedCollections ────────── v1.1.0
  Installed MLDataUtils ───────────────── v0.5.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed CategoricalArrays ─────────── v0.7.7
  Installed DataFrames ────────────────── v0.20.2
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.6.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.10
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.2
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_bWeVST/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.6.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.10
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.2
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9370718047022819
[ Info: 0.8321307849884033
[ Info: 0.5538560461501281
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3297804680218299
mean(cdnet.distances) = 0.35653072173396744
mean(crand.distances) = 0.33491548798978327
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.451171875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.451171875,"f1":null,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":6.6640625,"distances_sum":1196.4829478879976}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7832714160839168,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":7.9296875,"distances_sum":1790.0125063996813}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7832714160839168,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":7.9296875,"distances_sum":1790.0125063996813}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9649782509157511,"seconds":6.509944796562195e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.9609375,"distances_sum":2899.017485822476}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7888720654345663,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.0,"distances_sum":1823.8154453601455}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9649782509157511,"seconds":6.509944796562195e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.9609375,"distances_sum":2899.017485822476}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.977346611721612,"seconds":6.748363375663757e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":9.0,"distances_sum":2975.9275429969102}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.977346611721612,"seconds":6.748363375663757e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":9.0,"distances_sum":2975.9275429969102}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.977346611721612,"seconds":6.748363375663757e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":9.0,"distances_sum":2975.9275429969102}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.419921875,"f1":null,"seconds":4.295259714126587e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":6.6875,"distances_sum":927.7368289375613}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.189453125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.189453125,"f1":null,"seconds":3.4924596548080444e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":5.921875,"distances_sum":466.1186226996962}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.7994883588633597,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":7.9296875,"distances_sum":1675.4364767131854}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6826171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.7994883588633597,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":7.9296875,"distances_sum":1675.4364767131854}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8968521062271069,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.59375,"distances_sum":2135.3120855291045}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8757299991674999,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.40625,"distances_sum":2016.8720981728982}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8087572150072158,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.0234375,"distances_sum":1726.3352583170188}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8232421875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8232421875,"f1":0.8968521062271069,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.59375,"distances_sum":2135.3120855291045}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9435153388278394,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.7890625,"distances_sum":2450.054990842557}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.938072344322345,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8203125,"distances_sum":2384.0618183725505}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9665407509157512,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.9453125,"distances_sum":2629.4616437758395}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9665407509157512,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.9453125,"distances_sum":2629.4616437758395}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9665407509157512,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.9453125,"distances_sum":2629.4616437758395}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.846362233161926e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":6.8828125,"distances_sum":930.998545899724}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4208984375,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.846362233161926e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":6.8828125,"distances_sum":930.998545899724}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7060546875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7060546875,"f1":0.817479222166723,"seconds":4.82611358165741e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.96875,"distances_sum":1725.4762149554458}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.595703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.595703125,"f1":null,"seconds":4.557892680168152e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.5234375,"distances_sum":1382.200338970353}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.599609375, conf: {"ssize":8,"bsize":3}, perf: {"precision":null,"recall":0.599609375,"f1":null,"seconds":4.468485713005066e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.4921875,"distances_sum":1389.268657452901}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.812292395104896,"seconds":4.86522912979126e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.9765625,"distances_sum":1748.7492080783259}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7060546875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.7060546875,"f1":0.817479222166723,"seconds":4.82611358165741e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.96875,"distances_sum":1725.4762149554458}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.917719780219781,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.953125,"distances_sum":2203.61067097953}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9528674450549455,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.875,"distances_sum":2485.921757792962}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8679867007992016,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.6484375,"distances_sum":1985.1424936514547}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9058181401931409,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.890625,"distances_sum":2147.3156909291874}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9508044039294048,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8984375,"distances_sum":2471.068748314969}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8977907509157518,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.921875,"distances_sum":2074.000825209756}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9269693847818853,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.890625,"distances_sum":2313.8972145297344}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.866805590243091,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.7265625,"distances_sum":1925.850514721421}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9528674450549455,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.875,"distances_sum":2485.921757792962}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9528674450549455,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.875,"distances_sum":2485.921757792962}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1806640625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1806640625,"f1":null,"seconds":3.3620744943618774e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.046875,"distances_sum":429.0248007421952}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.427734375,"f1":null,"seconds":4.06801700592041e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.0859375,"distances_sum":997.7515376267191}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.7156413031413038,"seconds":4.597008228302002e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.5390625,"distances_sum":1359.0293787012338}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5751953125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5751953125,"f1":0.7156413031413038,"seconds":4.597008228302002e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.5390625,"distances_sum":1359.0293787012338}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9154735889110893,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.875,"distances_sum":2323.9820419734024}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.609375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.609375,"f1":0.7437666500166508,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.7890625,"distances_sum":1504.8640256878991}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8121704684204691,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.234375,"distances_sum":1762.5473616272154}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7911919677544685,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.09375,"distances_sum":1643.3072789289808}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.85546875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.9154735889110893,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.875,"distances_sum":2323.9820419734024}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620192307692311,"seconds":6.413087248802185e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8671875,"distances_sum":2658.927145869871}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9325034340659347,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.890625,"distances_sum":2433.1318510573647}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9582646520146524,"seconds":6.424263119697571e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.875,"distances_sum":2635.9775553080754}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620192307692311,"seconds":6.413087248802185e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8671875,"distances_sum":2658.927145869871}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620192307692311,"seconds":6.413087248802185e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8671875,"distances_sum":2658.927145869871}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1142578125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1142578125,"f1":null,"seconds":2.9187649488449097e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":4.1328125,"distances_sum":303.9540411358141}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3408203125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3408203125,"f1":null,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.4765625,"distances_sum":839.243453904284}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3408203125,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.3408203125,"f1":null,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.4765625,"distances_sum":839.243453904284}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8832849442224449,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.1640625,"distances_sum":2165.565254835018}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.771267621267622,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.375,"distances_sum":1663.5701631654558}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8037109375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8037109375,"f1":0.8832849442224449,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.1640625,"distances_sum":2165.565254835018}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9234723609723616,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.5234375,"distances_sum":2382.4639919183933}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9317364926739934,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.515625,"distances_sum":2397.389546732127}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9317364926739934,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.515625,"distances_sum":2397.389546732127}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8818359375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9317364926739934,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.515625,"distances_sum":2397.389546732127}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.294921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.294921875,"f1":null,"seconds":3.419816493988037e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":4.8359375,"distances_sum":587.6250968298446}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.470703125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.470703125,"f1":0.6267683705183709,"seconds":3.7476420402526855e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.390625,"distances_sum":914.2763094438722}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6357421875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6357421875,"f1":0.7623825826950835,"seconds":4.384666681289673e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.6015625,"distances_sum":1166.9144225990958}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.642578125,"f1":0.7696933275058283,"seconds":4.353001713752747e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.5546875,"distances_sum":1230.9390696079333}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.642578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.642578125,"f1":0.7696933275058283,"seconds":4.353001713752747e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.5546875,"distances_sum":1230.9390696079333}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.773876644189145,"seconds":4.507601261138916e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.46875,"distances_sum":1276.5437929050497}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8951647311022319,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.703125,"distances_sum":1674.4552361387566}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.948205960705961,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8359375,"distances_sum":1969.5034397139145}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9013226356976366,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.75,"distances_sum":1672.2158255200618}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.892708333333334,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7421875,"distances_sum":1638.2327013397194}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.948205960705961,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8359375,"distances_sum":1969.5034397139145}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9757841117216122,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.984375,"distances_sum":2107.8724935769965}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9694196428571433,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.921875,"distances_sum":2089.6145629207745}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9757841117216122,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.984375,"distances_sum":2107.8724935769965}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9757841117216122,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.984375,"distances_sum":2107.8724935769965}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.62890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.62890625,"f1":0.7568108974358982,"seconds":4.688277840614319e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.4921875,"distances_sum":1377.058623871725}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8625950438450446,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.578125,"distances_sum":1695.3469912554667}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8625950438450446,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.578125,"distances_sum":1695.3469912554667}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9418612637362642,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7421875,"distances_sum":2177.8787180653976}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9418612637362642,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7421875,"distances_sum":2177.8787180653976}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9699061355311358,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9140625,"distances_sum":2326.9465781385784}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9699061355311358,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9140625,"distances_sum":2326.9465781385784}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9699061355311358,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9140625,"distances_sum":2326.9465781385784}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8739359598734608,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.640625,"distances_sum":1785.4484992219773}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8739359598734608,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.640625,"distances_sum":1785.4484992219773}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9127580752580758,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.828125,"distances_sum":1966.326104398918}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9550511988011993,"seconds":6.346032023429871e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2235.1060829494586}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9550511988011993,"seconds":6.346032023429871e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2235.1060829494586}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764136904761906,"seconds":6.9998204708099365e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9921875,"distances_sum":2361.902951601167}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9659429112554115,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9375,"distances_sum":2313.189905681214}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764136904761906,"seconds":6.9998204708099365e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9921875,"distances_sum":2361.902951601167}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764136904761906,"seconds":6.9998204708099365e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9921875,"distances_sum":2361.902951601167}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8609463453213463,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.2578125,"distances_sum":1722.2708686793592}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8609463453213463,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.2578125,"distances_sum":1722.2708686793592}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9465831043956049,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8359375,"distances_sum":2162.6673633125824}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9465831043956049,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8359375,"distances_sum":2162.6673633125824}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9731799450549453,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9453125,"distances_sum":2347.364827883176}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9731799450549453,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9453125,"distances_sum":2347.364827883176}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9731799450549453,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9453125,"distances_sum":2347.364827883176}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.60546875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.60546875,"f1":0.739137078199579,"seconds":4.732981324195862e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.1171875,"distances_sum":1406.1585734912103}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6181640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6181640625,"f1":0.7547296453546462,"seconds":4.600733518600464e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.1484375,"distances_sum":1465.0488526716053}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6181640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6181640625,"f1":0.7547296453546462,"seconds":4.600733518600464e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.1484375,"distances_sum":1465.0488526716053}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8100772491397501,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.546875,"distances_sum":1669.7857086699182}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7216796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7216796875,"f1":0.8265633671883681,"seconds":4.9639493227005005e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.6953125,"distances_sum":1737.7148272544873}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.903108349983351,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.234375,"distances_sum":2078.4301128816537}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9321745962370969,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.578125,"distances_sum":2212.061062547041}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9321745962370969,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.578125,"distances_sum":2212.061062547041}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9352621336996343,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.546875,"distances_sum":2276.5729107247303}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9429429945054949,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.671875,"distances_sum":2293.942804586383}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9429429945054949,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.671875,"distances_sum":2293.942804586383}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90234375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9429429945054949,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.671875,"distances_sum":2293.942804586383}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.17578125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.17578125,"f1":null,"seconds":2.9690563678741455e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":4.4140625,"distances_sum":383.8065923153655}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1884765625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1884765625,"f1":null,"seconds":3.119930624961853e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":4.5703125,"distances_sum":418.4423774136786}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1884765625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1884765625,"f1":null,"seconds":3.119930624961853e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":4.5703125,"distances_sum":418.4423774136786}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.193359375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.193359375,"f1":null,"seconds":3.0528753995895386e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":4.5703125,"distances_sum":420.2188157970914}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4921875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.4921875,"f1":0.6438171203796208,"seconds":4.237517714500427e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":6.5234375,"distances_sum":1090.111790438656}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3310546875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3310546875,"f1":null,"seconds":3.293156623840332e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":5.203125,"distances_sum":789.5838276443058}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8693965756465764,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.578125,"distances_sum":1829.5457929243266}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.6814746017871024,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":7.0859375,"distances_sum":1211.5621641211935}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8693965756465764,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.578125,"distances_sum":1829.5457929243266}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9331819222444229,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.7734375,"distances_sum":2201.8215592066076}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9427770146520155,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.7421875,"distances_sum":2279.1697237297417}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9486893315018318,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.8515625,"distances_sum":2281.6463338932554}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":10,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8997283966033974,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.7265625,"distances_sum":1971.5934896066608}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9081304112554122,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.7890625,"distances_sum":2022.6934461206872}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8748936827061837,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.6484375,"distances_sum":1849.0494758491825}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9486893315018318,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.8515625,"distances_sum":2281.6463338932554}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91015625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9486893315018318,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.8515625,"distances_sum":2281.6463338932554}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1767578125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1767578125,"f1":null,"seconds":3.168359398841858e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.5390625,"distances_sum":272.99508302341945}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1728515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1728515625,"f1":null,"seconds":3.3061951398849487e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.1015625,"distances_sum":279.82462155837055}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1767578125,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1767578125,"f1":null,"seconds":3.168359398841858e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.5390625,"distances_sum":272.99508302341945}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9936755952380951,"recall":0.7578125,"f1":0.8525021853146862,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7578125,"distances_sum":1117.558659487806}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":0.9936755952380951,"recall":0.7578125,"f1":0.8525021853146862,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7578125,"distances_sum":1117.558659487806}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.989164806547619,"recall":0.9248046875,"f1":0.9534905849358976,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.984375,"distances_sum":1494.6808763011336}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":5,"bsize":7}, perf: {"precision":0.9866071428571429,"recall":0.8896484375,"f1":0.9312757554945056,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.953125,"distances_sum":1414.8501996393973}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":0.989164806547619,"recall":0.9248046875,"f1":0.9534905849358976,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.984375,"distances_sum":1494.6808763011336}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":0.989164806547619,"recall":0.9248046875,"f1":0.9534905849358976,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.984375,"distances_sum":1494.6808763011336}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8540027680652689,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.1875,"distances_sum":1204.369675913965}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1962890625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1962890625,"f1":null,"seconds":3.21120023727417e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":4.640625,"distances_sum":350.1768851910263}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.177734375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.177734375,"f1":null,"seconds":3.203749656677246e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":4.5078125,"distances_sum":331.38876009533504}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8540027680652689,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.1875,"distances_sum":1204.369675913965}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9495020604395609,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.734375,"distances_sum":1556.7102403716922}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9350191475191482,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.578125,"distances_sum":1510.166277236194}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8737814269064277,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.359375,"distances_sum":1258.4595333011573}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9495020604395609,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.734375,"distances_sum":1556.7102403716922}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9675251831501832,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.796875,"distances_sum":1645.761869234054}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9613667582417588,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7734375,"distances_sum":1611.1217496811457}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9691620879120884,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8359375,"distances_sum":1652.7014252880253}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9691620879120884,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8359375,"distances_sum":1652.7014252880253}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9691620879120884,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8359375,"distances_sum":1652.7014252880253}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8589806027306035,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.1328125,"distances_sum":1297.484428115628}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2626953125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2626953125,"f1":null,"seconds":3.3602118492126465e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":5.6171875,"distances_sum":419.1294566463502}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8589806027306035,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.1328125,"distances_sum":1297.484428115628}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9547103937728944,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.8125,"distances_sum":1668.7245850214827}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552140567765572,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.8046875,"distances_sum":1680.3796830263052}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9552140567765572,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.8046875,"distances_sum":1680.3796830263052}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9638221153846157,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.859375,"distances_sum":1709.4941080723638}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.961034798534799,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.8828125,"distances_sum":1682.8609149949516}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9675251831501834,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.875,"distances_sum":1725.5259647953892}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9700377747252751,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.90625,"distances_sum":1738.1368331353478}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9700377747252751,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.90625,"distances_sum":1738.1368331353478}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9700377747252751,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.90625,"distances_sum":1738.1368331353478}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.878917957042958,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.3046875,"distances_sum":1354.4974873780159}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2041015625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2041015625,"f1":null,"seconds":3.4570693969726562e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.953125,"distances_sum":319.9777597581833}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8770843739593748,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.2734375,"distances_sum":1353.9257884653275}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7958984375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7958984375,"f1":0.878917957042958,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.3046875,"distances_sum":1354.4974873780159}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7958984375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7958984375,"f1":0.878917957042958,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.3046875,"distances_sum":1354.4974873780159}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7958984375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7958984375,"f1":0.878917957042958,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.3046875,"distances_sum":1354.4974873780159}}, n: 9
mean(cfft.distances) = 0.33973140631719373
mean(cdnet.distances) = 0.4344786819926423
mean(crand.distances) = 0.3777426148304795
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8533333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8666666666666667
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8288888888888888
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9288888888888889
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.8888888888888888
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8577777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8711111111111111
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9177777777777777
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.931111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9288888888888889
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8333333333333334
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8533333333333332
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9111111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.9466666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.6191535857319832] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.2300318828958727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2300318828958727, 0.19542705675261235] ***
*** starting iteration: 2; err: [Inf, 0.2300318828958727, 0.19542705675261235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2300318828958727, 0.19542705675261235, 0.19067773374368077] ***
*** starting iteration: 3; err: [Inf, 0.2300318828958727, 0.19542705675261235, 0.19067773374368077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2300318828958727, 0.19542705675261235, 0.19067773374368077, 0.18997139499911495] ***
*** finished computation of 7 references, err: [Inf, 0.2300318828958727, 0.19542705675261235, 0.19067773374368077, 0.18997139499911495] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [48, 41, 0]]
** centroid: 1, normalized-entropy: 0.995533068899466, [(1, 48), (2, 41)]
*** center 2: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [14, 85, 0]]
** centroid: 3, normalized-entropy: 0.5879303728017198, [(1, 14), (2, 85)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 79, 16]]
** centroid: 4, normalized-entropy: 0.6540800387941991, [(2, 79), (3, 16)]
*** center 5: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [66, 21, 0]]
** centroid: 6, normalized-entropy: 0.7973265101474423, [(1, 66), (2, 21)]
*** center 7: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.421005776445675] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.421005776445675, 0.3033646494639596] ***
*** starting iteration: 2; err: [Inf, 0.421005776445675, 0.3033646494639596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.421005776445675, 0.3033646494639596, 0.29985918771397246] ***
*** starting iteration: 3; err: [Inf, 0.421005776445675, 0.3033646494639596, 0.29985918771397246] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.421005776445675, 0.3033646494639596, 0.29985918771397246, 0.2984065022179717] ***
*** finished computation of 3 references, err: [Inf, 0.421005776445675, 0.3033646494639596, 0.29985918771397246, 0.2984065022179717] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [257, 11, 0]]
** centroid: 1, normalized-entropy: 0.24706211229420189, [(1, 257), (2, 11)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 165, 16]]
** centroid: 2, normalized-entropy: 0.43109911719061084, [(2, 165), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [167, 50, 0]]
** centroid: 3, normalized-entropy: 0.778733599578567, [(1, 167), (2, 50)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3860204142715218] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3860204142715218, 0.31616172273650295] ***
*** starting iteration: 2; err: [Inf, 0.3860204142715218, 0.31616172273650295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3860204142715218, 0.31616172273650295, 0.30127847074311803] ***
*** starting iteration: 3; err: [Inf, 0.3860204142715218, 0.31616172273650295, 0.30127847074311803] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3860204142715218, 0.31616172273650295, 0.30127847074311803, 0.29651196514056627] ***
*** finished computation of 3 references, err: [Inf, 0.3860204142715218, 0.31616172273650295, 0.30127847074311803, 0.29651196514056627] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [80, 166, 24]]
** centroid: 1, normalized-entropy: 0.7961172532398958, [(1, 80), (2, 166), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [108, 82, 0]]
** centroid: 2, normalized-entropy: 0.9864497419502243, [(1, 108), (2, 82)]
*** center 3: selecting labels [1] (freq >= 2) [from [207, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39327813466281997] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39327813466281997, 0.31207449176813706] ***
*** starting iteration: 2; err: [Inf, 0.39327813466281997, 0.31207449176813706] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39327813466281997, 0.31207449176813706, 0.3021091393054068] ***
*** starting iteration: 3; err: [Inf, 0.39327813466281997, 0.31207449176813706, 0.3021091393054068] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39327813466281997, 0.31207449176813706, 0.3021091393054068, 0.29909333317768183] ***
*** finished computation of 3 references, err: [Inf, 0.39327813466281997, 0.31207449176813706, 0.3021091393054068, 0.29909333317768183] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [252, 30, 0]]
** centroid: 1, normalized-entropy: 0.48890859144051524, [(1, 252), (2, 30)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [157, 47, 0]]
** centroid: 2, normalized-entropy: 0.7786942948889739, [(1, 157), (2, 47)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 163, 18]]
** centroid: 3, normalized-entropy: 0.4672418032952095, [(2, 163), (3, 18)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3096131549357832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3096131549357832, 0.23671112317631002] ***
*** starting iteration: 2; err: [Inf, 0.3096131549357832, 0.23671112317631002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434] ***
*** starting iteration: 3; err: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434, 0.22376279670303909] ***
*** starting iteration: 4; err: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434, 0.22376279670303909] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434, 0.22376279670303909, 0.21779236662644205] ***
*** starting iteration: 5; err: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434, 0.22376279670303909, 0.21779236662644205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434, 0.22376279670303909, 0.21779236662644205, 0.20747533540563962] ***
*** starting iteration: 6; err: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434, 0.22376279670303909, 0.21779236662644205, 0.20747533540563962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434, 0.22376279670303909, 0.21779236662644205, 0.20747533540563962, 0.2010347066985407] ***
*** starting iteration: 7; err: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434, 0.22376279670303909, 0.21779236662644205, 0.20747533540563962, 0.2010347066985407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434, 0.22376279670303909, 0.21779236662644205, 0.20747533540563962, 0.2010347066985407, 0.1971972259054745] ***
*** starting iteration: 8; err: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434, 0.22376279670303909, 0.21779236662644205, 0.20747533540563962, 0.2010347066985407, 0.1971972259054745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434, 0.22376279670303909, 0.21779236662644205, 0.20747533540563962, 0.2010347066985407, 0.1971972259054745, 0.196098018207935] ***
*** starting iteration: 9; err: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434, 0.22376279670303909, 0.21779236662644205, 0.20747533540563962, 0.2010347066985407, 0.1971972259054745, 0.196098018207935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434, 0.22376279670303909, 0.21779236662644205, 0.20747533540563962, 0.2010347066985407, 0.1971972259054745, 0.196098018207935, 0.19513768780937438] ***
*** finished computation of 7 references, err: [Inf, 0.3096131549357832, 0.23671112317631002, 0.2274931348871434, 0.22376279670303909, 0.21779236662644205, 0.20747533540563962, 0.2010347066985407, 0.1971972259054745, 0.196098018207935, 0.19513768780937438] ***
*** center 1: selecting labels [1] (freq >= 2) [from [130, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [89, 19, 0]]
** centroid: 2, normalized-entropy: 0.6710828900205286, [(1, 89), (2, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [29, 56, 0]]
** centroid: 3, normalized-entropy: 0.9259400597385792, [(1, 29), (2, 56)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 68, 19]]
** centroid: 4, normalized-entropy: 0.7572182549240017, [(2, 68), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [49, 32, 0]]
** centroid: 5, normalized-entropy: 0.9679884922470298, [(1, 49), (2, 32)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 73, 5]]
** centroid: 6, normalized-entropy: 0.34351974100740135, [(2, 73), (3, 5)]
*** center 7: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24333626277901155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24333626277901155, 0.21067746904311418] ***
*** starting iteration: 2; err: [Inf, 0.24333626277901155, 0.21067746904311418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24333626277901155, 0.21067746904311418, 0.20407499721332423] ***
*** starting iteration: 3; err: [Inf, 0.24333626277901155, 0.21067746904311418, 0.20407499721332423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24333626277901155, 0.21067746904311418, 0.20407499721332423, 0.19932563298952946] ***
*** starting iteration: 4; err: [Inf, 0.24333626277901155, 0.21067746904311418, 0.20407499721332423, 0.19932563298952946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24333626277901155, 0.21067746904311418, 0.20407499721332423, 0.19932563298952946, 0.19610290997696558] ***
*** starting iteration: 5; err: [Inf, 0.24333626277901155, 0.21067746904311418, 0.20407499721332423, 0.19932563298952946, 0.19610290997696558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24333626277901155, 0.21067746904311418, 0.20407499721332423, 0.19932563298952946, 0.19610290997696558, 0.19498380749434724] ***
*** starting iteration: 6; err: [Inf, 0.24333626277901155, 0.21067746904311418, 0.20407499721332423, 0.19932563298952946, 0.19610290997696558, 0.19498380749434724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24333626277901155, 0.21067746904311418, 0.20407499721332423, 0.19932563298952946, 0.19610290997696558, 0.19498380749434724, 0.19447565397769184] ***
*** finished computation of 7 references, err: [Inf, 0.24333626277901155, 0.21067746904311418, 0.20407499721332423, 0.19932563298952946, 0.19610290997696558, 0.19498380749434724, 0.19447565397769184] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [32, 53, 0]]
** centroid: 1, normalized-entropy: 0.9555111232924128, [(1, 32), (2, 53)]
*** center 2: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [131, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [45, 32, 0]]
** centroid: 4, normalized-entropy: 0.9793399259567798, [(1, 45), (2, 32)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [99, 23, 0]]
** centroid: 5, normalized-entropy: 0.6983747934875366, [(1, 99), (2, 23)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 58, 17]]
** centroid: 6, normalized-entropy: 0.7721551435804817, [(2, 58), (3, 17)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 74, 1]]
** centroid: 7, normalized-entropy: 0.23750814382859295, [(1, 3), (2, 74)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3658121065544272] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3658121065544272, 0.2911032706285147] ***
*** starting iteration: 2; err: [Inf, 0.3658121065544272, 0.2911032706285147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3658121065544272, 0.2911032706285147, 0.27833491086948653] ***
*** starting iteration: 3; err: [Inf, 0.3658121065544272, 0.2911032706285147, 0.27833491086948653] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3658121065544272, 0.2911032706285147, 0.27833491086948653, 0.26557126156454375] ***
*** starting iteration: 4; err: [Inf, 0.3658121065544272, 0.2911032706285147, 0.27833491086948653, 0.26557126156454375] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3658121065544272, 0.2911032706285147, 0.27833491086948653, 0.26557126156454375, 0.24456771359535623] ***
*** starting iteration: 5; err: [Inf, 0.3658121065544272, 0.2911032706285147, 0.27833491086948653, 0.26557126156454375, 0.24456771359535623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3658121065544272, 0.2911032706285147, 0.27833491086948653, 0.26557126156454375, 0.24456771359535623, 0.2372610643366212] ***
*** starting iteration: 6; err: [Inf, 0.3658121065544272, 0.2911032706285147, 0.27833491086948653, 0.26557126156454375, 0.24456771359535623, 0.2372610643366212] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3658121065544272, 0.2911032706285147, 0.27833491086948653, 0.26557126156454375, 0.24456771359535623, 0.2372610643366212, 0.23632136183474828] ***
*** finished computation of 3 references, err: [Inf, 0.3658121065544272, 0.2911032706285147, 0.27833491086948653, 0.26557126156454375, 0.24456771359535623, 0.2372610643366212, 0.23632136183474828] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [121, 124, 9]]
** centroid: 1, normalized-entropy: 0.7479095728424323, [(1, 121), (2, 124), (3, 9)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [101, 102, 7]]
** centroid: 2, normalized-entropy: 0.7429147662843145, [(1, 101), (2, 102), (3, 7)]
*** center 3: selecting labels [1] (freq >= 1) [from [202, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31659861409344126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31659861409344126, 0.25248114290651397] ***
*** starting iteration: 2; err: [Inf, 0.31659861409344126, 0.25248114290651397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31659861409344126, 0.25248114290651397, 0.2429316263492994] ***
*** starting iteration: 3; err: [Inf, 0.31659861409344126, 0.25248114290651397, 0.2429316263492994] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31659861409344126, 0.25248114290651397, 0.2429316263492994, 0.24011863926998053] ***
*** starting iteration: 4; err: [Inf, 0.31659861409344126, 0.25248114290651397, 0.2429316263492994, 0.24011863926998053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31659861409344126, 0.25248114290651397, 0.2429316263492994, 0.24011863926998053, 0.2391851105653252] ***
*** finished computation of 3 references, err: [Inf, 0.31659861409344126, 0.25248114290651397, 0.2429316263492994, 0.24011863926998053, 0.2391851105653252] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [171, 54, 0]]
** centroid: 1, normalized-entropy: 0.7950402793845225, [(1, 171), (2, 54)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [224, 17, 0]]
** centroid: 2, normalized-entropy: 0.36793344061934313, [(1, 224), (2, 17)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 177, 24]]
** centroid: 3, normalized-entropy: 0.52764232609436, [(2, 177), (3, 24)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31651907625874837] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31651907625874837, 0.26558953920948963] ***
*** starting iteration: 2; err: [Inf, 0.31651907625874837, 0.26558953920948963] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31651907625874837, 0.26558953920948963, 0.24101730839752855] ***
*** starting iteration: 3; err: [Inf, 0.31651907625874837, 0.26558953920948963, 0.24101730839752855] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31651907625874837, 0.26558953920948963, 0.24101730839752855, 0.23350159722663785] ***
*** starting iteration: 4; err: [Inf, 0.31651907625874837, 0.26558953920948963, 0.24101730839752855, 0.23350159722663785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31651907625874837, 0.26558953920948963, 0.24101730839752855, 0.23350159722663785, 0.23128656505410192] ***
*** starting iteration: 5; err: [Inf, 0.31651907625874837, 0.26558953920948963, 0.24101730839752855, 0.23350159722663785, 0.23128656505410192] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31651907625874837, 0.26558953920948963, 0.24101730839752855, 0.23350159722663785, 0.23128656505410192, 0.23081256207176434] ***
*** finished computation of 3 references, err: [Inf, 0.31651907625874837, 0.26558953920948963, 0.24101730839752855, 0.23350159722663785, 0.23128656505410192, 0.23081256207176434] ***
*** center 1: selecting labels [1] (freq >= 1) [from [203, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [72, 147, 18]]
** centroid: 2, normalized-entropy: 0.7773136163400156, [(1, 72), (2, 147), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [134, 93, 0]]
** centroid: 3, normalized-entropy: 0.9763382628222436, [(1, 134), (2, 93)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4070181075774424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4070181075774424, 0.25152313027128176] ***
*** starting iteration: 2; err: [Inf, 0.4070181075774424, 0.25152313027128176] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4070181075774424, 0.25152313027128176, 0.24051214395127296] ***
*** starting iteration: 3; err: [Inf, 0.4070181075774424, 0.25152313027128176, 0.24051214395127296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4070181075774424, 0.25152313027128176, 0.24051214395127296, 0.2370371236409936] ***
*** starting iteration: 4; err: [Inf, 0.4070181075774424, 0.25152313027128176, 0.24051214395127296, 0.2370371236409936] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4070181075774424, 0.25152313027128176, 0.24051214395127296, 0.2370371236409936, 0.23619183880072814] ***
*** finished computation of 3 references, err: [Inf, 0.4070181075774424, 0.25152313027128176, 0.24051214395127296, 0.2370371236409936, 0.23619183880072814] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [105, 126, 14]]
** centroid: 1, normalized-entropy: 0.7906973303879763, [(1, 105), (2, 126), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [199, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [120, 100, 2]]
** centroid: 3, normalized-entropy: 0.6682962325244339, [(1, 120), (2, 100), (3, 2)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35549064414824233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35549064414824233, 0.2500017493882257] ***
*** starting iteration: 2; err: [Inf, 0.35549064414824233, 0.2500017493882257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35549064414824233, 0.2500017493882257, 0.24054171530895682] ***
*** starting iteration: 3; err: [Inf, 0.35549064414824233, 0.2500017493882257, 0.24054171530895682] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35549064414824233, 0.2500017493882257, 0.24054171530895682, 0.2380075015304289] ***
*** starting iteration: 4; err: [Inf, 0.35549064414824233, 0.2500017493882257, 0.24054171530895682, 0.2380075015304289] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35549064414824233, 0.2500017493882257, 0.24054171530895682, 0.2380075015304289, 0.23724727881611554] ***
*** finished computation of 3 references, err: [Inf, 0.35549064414824233, 0.2500017493882257, 0.24054171530895682, 0.2380075015304289, 0.23724727881611554] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [115, 104, 1]]
** centroid: 1, normalized-entropy: 0.653362318800171, [(1, 115), (2, 104), (3, 1)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [70, 144, 23]]
** centroid: 2, normalized-entropy: 0.809483442482872, [(1, 70), (2, 144), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [210, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3434995389061755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3434995389061755, 0.23292883487091562] ***
*** starting iteration: 2; err: [Inf, 0.3434995389061755, 0.23292883487091562] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3434995389061755, 0.23292883487091562, 0.2321310015660578] ***
*** finished computation of 3 references, err: [Inf, 0.3434995389061755, 0.23292883487091562, 0.2321310015660578] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [24, 183, 18]]
** centroid: 1, normalized-entropy: 0.5541805072069886, [(1, 24), (2, 183), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [231, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [154, 57, 0]]
** centroid: 3, normalized-entropy: 0.8416685817194832, [(1, 154), (2, 57)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2134868588002102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2134868588002102, 0.18026415209842472] ***
*** finished computation of 7 references, err: [Inf, 0.2134868588002102, 0.18026415209842472] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [66, 22, 0]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(1, 66), (2, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [8, 170, 16]]
** centroid: 3, normalized-entropy: 0.4123374156489789, [(1, 8), (2, 170), (3, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [153, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [28, 11, 0]]
** centroid: 5, normalized-entropy: 0.8582307926411409, [(1, 28), (2, 11)]
*** center 6: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [42, 23, 0]]
** centroid: 7, normalized-entropy: 0.937456170782005, [(1, 42), (2, 23)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19549285571441344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19549285571441344, 0.1659822211303431] ***
*** finished computation of 7 references, err: [Inf, 0.19549285571441344, 0.1659822211303431] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 86, 24]]
** centroid: 1, normalized-entropy: 0.7568336324184036, [(2, 86), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [140, 3, 0]]
** centroid: 2, normalized-entropy: 0.14690273625769862, [(1, 140), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [45, 62, 0]]
** centroid: 3, normalized-entropy: 0.9817140837953373, [(1, 45), (2, 62)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [64, 3, 0]]
** centroid: 4, normalized-entropy: 0.26377743669413856, [(1, 64), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 88, 0]]
** centroid: 5, normalized-entropy: 0.08887969568457589, [(1, 1), (2, 88)]
*** center 6: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [55, 6, 0]]
** centroid: 7, normalized-entropy: 0.4637773498877517, [(1, 55), (2, 6)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20272016349615812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20272016349615812, 0.1523008284087794] ***
*** finished computation of 7 references, err: [Inf, 0.20272016349615812, 0.1523008284087794] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 63, 9]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 63), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [128, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [56, 32, 0]]
** centroid: 4, normalized-entropy: 0.9456603046006401, [(1, 56), (2, 32)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [47, 60, 0]]
** centroid: 5, normalized-entropy: 0.9893257549491837, [(1, 47), (2, 60)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 82, 9]]
** centroid: 6, normalized-entropy: 0.4655024490815131, [(2, 82), (3, 9)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [95, 3, 0]]
** centroid: 7, normalized-entropy: 0.19745300438456026, [(1, 95), (2, 3)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21868542080336772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21868542080336772, 0.1745668976587263] ***
*** starting iteration: 2; err: [Inf, 0.21868542080336772, 0.1745668976587263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21868542080336772, 0.1745668976587263, 0.15790434338448867] ***
*** starting iteration: 3; err: [Inf, 0.21868542080336772, 0.1745668976587263, 0.15790434338448867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21868542080336772, 0.1745668976587263, 0.15790434338448867, 0.15170965145632914] ***
*** finished computation of 7 references, err: [Inf, 0.21868542080336772, 0.1745668976587263, 0.15790434338448867, 0.15170965145632914] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [15, 92, 1]]
** centroid: 1, normalized-entropy: 0.41335708263974813, [(1, 15), (2, 92), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [125, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 96, 15]]
** centroid: 3, normalized-entropy: 0.5713549744279549, [(2, 96), (3, 15)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 13, 0]]
** centroid: 4, normalized-entropy: 0.6758635715876156, [(1, 60), (2, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [64, 20, 0]]
** centroid: 5, normalized-entropy: 0.7918583525674836, [(1, 64), (2, 20)]
*** center 6: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [71, 5, 0]]
** centroid: 7, normalized-entropy: 0.35001059292688486, [(1, 71), (2, 5)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35581037439014956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35581037439014956, 0.20415508249883485] ***
*** starting iteration: 2; err: [Inf, 0.35581037439014956, 0.20415508249883485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35581037439014956, 0.20415508249883485, 0.17411571412697724] ***
*** starting iteration: 3; err: [Inf, 0.35581037439014956, 0.20415508249883485, 0.17411571412697724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35581037439014956, 0.20415508249883485, 0.17411571412697724, 0.16353941942262148] ***
*** finished computation of 7 references, err: [Inf, 0.35581037439014956, 0.20415508249883485, 0.17411571412697724, 0.16353941942262148] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [28, 1, 0]]
** centroid: 1, normalized-entropy: 0.21639693245126485, [(1, 28), (2, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 51, 18]]
** centroid: 3, normalized-entropy: 0.828055725379504, [(2, 51), (3, 18)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 117, 6]]
** centroid: 4, normalized-entropy: 0.2811937964320427, [(2, 117), (3, 6)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [140, 21, 0]]
** centroid: 5, normalized-entropy: 0.5586293734521991, [(1, 140), (2, 21)]
*** center 6: selecting labels [1] (freq >= 1) [from [142, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [38, 58, 0]]
** centroid: 7, normalized-entropy: 0.968461008760162, [(1, 38), (2, 58)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22814767446991677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22814767446991677, 0.1686151340601036] ***
*** starting iteration: 2; err: [Inf, 0.22814767446991677, 0.1686151340601036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22814767446991677, 0.1686151340601036, 0.15656973285749945] ***
*** starting iteration: 3; err: [Inf, 0.22814767446991677, 0.1686151340601036, 0.15656973285749945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22814767446991677, 0.1686151340601036, 0.15656973285749945, 0.15195140416867964] ***
*** finished computation of 7 references, err: [Inf, 0.22814767446991677, 0.1686151340601036, 0.15656973285749945, 0.15195140416867964] ***
*** center 1: selecting labels [1] (freq >= 1) [from [126, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [140, 14, 0]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(1, 140), (2, 14)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [69, 30, 0]]
** centroid: 3, normalized-entropy: 0.8849636363831529, [(1, 69), (2, 30)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 94, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 40, 18]]
** centroid: 5, normalized-entropy: 0.8935711016541908, [(2, 40), (3, 18)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 62, 0]]
** centroid: 6, normalized-entropy: 0.2006223243127146, [(1, 2), (2, 62)]
*** center 7: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2794757967244263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2794757967244263, 0.2454616026617251] ***
*** starting iteration: 2; err: [Inf, 0.2794757967244263, 0.2454616026617251] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2794757967244263, 0.2454616026617251, 0.228057404605297] ***
*** starting iteration: 3; err: [Inf, 0.2794757967244263, 0.2454616026617251, 0.228057404605297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2794757967244263, 0.2454616026617251, 0.228057404605297, 0.21358629424186484] ***
*** starting iteration: 4; err: [Inf, 0.2794757967244263, 0.2454616026617251, 0.228057404605297, 0.21358629424186484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2794757967244263, 0.2454616026617251, 0.228057404605297, 0.21358629424186484, 0.2036367033722925] ***
*** starting iteration: 5; err: [Inf, 0.2794757967244263, 0.2454616026617251, 0.228057404605297, 0.21358629424186484, 0.2036367033722925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2794757967244263, 0.2454616026617251, 0.228057404605297, 0.21358629424186484, 0.2036367033722925, 0.19807880390022933] ***
*** starting iteration: 6; err: [Inf, 0.2794757967244263, 0.2454616026617251, 0.228057404605297, 0.21358629424186484, 0.2036367033722925, 0.19807880390022933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2794757967244263, 0.2454616026617251, 0.228057404605297, 0.21358629424186484, 0.2036367033722925, 0.19807880390022933, 0.1933072521966566] ***
*** starting iteration: 7; err: [Inf, 0.2794757967244263, 0.2454616026617251, 0.228057404605297, 0.21358629424186484, 0.2036367033722925, 0.19807880390022933, 0.1933072521966566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2794757967244263, 0.2454616026617251, 0.228057404605297, 0.21358629424186484, 0.2036367033722925, 0.19807880390022933, 0.1933072521966566, 0.19183785439533246] ***
*** starting iteration: 8; err: [Inf, 0.2794757967244263, 0.2454616026617251, 0.228057404605297, 0.21358629424186484, 0.2036367033722925, 0.19807880390022933, 0.1933072521966566, 0.19183785439533246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2794757967244263, 0.2454616026617251, 0.228057404605297, 0.21358629424186484, 0.2036367033722925, 0.19807880390022933, 0.1933072521966566, 0.19183785439533246, 0.19115885120729828] ***
*** finished computation of 7 references, err: [Inf, 0.2794757967244263, 0.2454616026617251, 0.228057404605297, 0.21358629424186484, 0.2036367033722925, 0.19807880390022933, 0.1933072521966566, 0.19183785439533246, 0.19115885120729828] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [13, 85, 0]]
** centroid: 1, normalized-entropy: 0.5646695797525669, [(1, 13), (2, 85)]
*** center 2: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 68, 16]]
** centroid: 3, normalized-entropy: 0.7024665512903904, [(2, 68), (3, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [26, 71, 0]]
** centroid: 5, normalized-entropy: 0.8386398715015523, [(1, 26), (2, 71)]
*** center 6: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [98, 2, 0]]
** centroid: 7, normalized-entropy: 0.14144054254182067, [(1, 98), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3727402976781096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3727402976781096, 0.22998527616731587] ***
*** starting iteration: 2; err: [Inf, 0.3727402976781096, 0.22998527616731587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3727402976781096, 0.22998527616731587, 0.205271520935672] ***
*** starting iteration: 3; err: [Inf, 0.3727402976781096, 0.22998527616731587, 0.205271520935672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3727402976781096, 0.22998527616731587, 0.205271520935672, 0.20078224778689188] ***
*** starting iteration: 4; err: [Inf, 0.3727402976781096, 0.22998527616731587, 0.205271520935672, 0.20078224778689188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3727402976781096, 0.22998527616731587, 0.205271520935672, 0.20078224778689188, 0.19926322485436163] ***
*** starting iteration: 5; err: [Inf, 0.3727402976781096, 0.22998527616731587, 0.205271520935672, 0.20078224778689188, 0.19926322485436163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3727402976781096, 0.22998527616731587, 0.205271520935672, 0.20078224778689188, 0.19926322485436163, 0.19838134602209304] ***
*** finished computation of 7 references, err: [Inf, 0.3727402976781096, 0.22998527616731587, 0.205271520935672, 0.20078224778689188, 0.19926322485436163, 0.19838134602209304] ***
*** center 1: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [112, 15, 0]]
** centroid: 2, normalized-entropy: 0.5239042914605166, [(1, 112), (2, 15)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 93, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 51, 11]]
** centroid: 4, normalized-entropy: 0.674398887071447, [(2, 51), (3, 11)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 62, 13]]
** centroid: 5, normalized-entropy: 0.6652735227649414, [(2, 62), (3, 13)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [86, 22, 0]]
** centroid: 6, normalized-entropy: 0.7292739418449411, [(1, 86), (2, 22)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [97, 5, 0]]
** centroid: 7, normalized-entropy: 0.28221763445592507, [(1, 97), (2, 5)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29909104244180323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29909104244180323, 0.2092922431077512] ***
*** starting iteration: 2; err: [Inf, 0.29909104244180323, 0.2092922431077512] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29909104244180323, 0.2092922431077512, 0.19804934152846002] ***
*** starting iteration: 3; err: [Inf, 0.29909104244180323, 0.2092922431077512, 0.19804934152846002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29909104244180323, 0.2092922431077512, 0.19804934152846002, 0.19372666598684427] ***
*** starting iteration: 4; err: [Inf, 0.29909104244180323, 0.2092922431077512, 0.19804934152846002, 0.19372666598684427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29909104244180323, 0.2092922431077512, 0.19804934152846002, 0.19372666598684427, 0.19141601550642742] ***
*** starting iteration: 5; err: [Inf, 0.29909104244180323, 0.2092922431077512, 0.19804934152846002, 0.19372666598684427, 0.19141601550642742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29909104244180323, 0.2092922431077512, 0.19804934152846002, 0.19372666598684427, 0.19141601550642742, 0.18971540915571722] ***
*** starting iteration: 6; err: [Inf, 0.29909104244180323, 0.2092922431077512, 0.19804934152846002, 0.19372666598684427, 0.19141601550642742, 0.18971540915571722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29909104244180323, 0.2092922431077512, 0.19804934152846002, 0.19372666598684427, 0.19141601550642742, 0.18971540915571722, 0.18894397746771574] ***
*** finished computation of 7 references, err: [Inf, 0.29909104244180323, 0.2092922431077512, 0.19804934152846002, 0.19372666598684427, 0.19141601550642742, 0.18971540915571722, 0.18894397746771574] ***
*** center 1: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [91, 4, 0]]
** centroid: 2, normalized-entropy: 0.25186284771956524, [(1, 91), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [95, 35, 0]]
** centroid: 4, normalized-entropy: 0.8403586716091169, [(1, 95), (2, 35)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 65, 18]]
** centroid: 5, normalized-entropy: 0.7544062039636575, [(2, 65), (3, 18)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [53, 62, 0]]
** centroid: 6, normalized-entropy: 0.9955773958501508, [(1, 53), (2, 62)]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 74, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24442708519127992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24442708519127992, 0.19854120421013585] ***
*** finished computation of 7 references, err: [Inf, 0.24442708519127992, 0.19854120421013585] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 74, 16]]
** centroid: 1, normalized-entropy: 0.6751914401458716, [(2, 74), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [82, 25, 0]]
** centroid: 2, normalized-entropy: 0.7843112002044088, [(1, 82), (2, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [3, 99, 0]]
** centroid: 4, normalized-entropy: 0.1914332548141934, [(1, 3), (2, 99)]
*** center 5: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [97, 28, 0]]
** centroid: 7, normalized-entropy: 0.7674044165839727, [(1, 97), (2, 28)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23215123395138104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23215123395138104, 0.20657490926125888] ***
*** finished computation of 7 references, err: [Inf, 0.23215123395138104, 0.20657490926125888] ***
*** center 1: selecting labels [1] (freq >= 2) [from [145, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 65, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 40, 14]]
** centroid: 3, normalized-entropy: 0.8256265261578954, [(2, 40), (3, 14)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [97, 16, 0]]
** centroid: 4, normalized-entropy: 0.5883953722191577, [(1, 97), (2, 16)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 53, 10]]
** centroid: 5, normalized-entropy: 0.6312630180916119, [(2, 53), (3, 10)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [65, 35, 0]]
** centroid: 6, normalized-entropy: 0.9340680553754911, [(1, 65), (2, 35)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [88, 39, 0]]
** centroid: 7, normalized-entropy: 0.889781781451616, [(1, 88), (2, 39)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2536571158331468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2536571158331468, 0.21265642808658117] ***
*** finished computation of 7 references, err: [Inf, 0.2536571158331468, 0.21265642808658117] ***
*** center 1: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [87, 39, 0]]
** centroid: 2, normalized-entropy: 0.8926230133850988, [(1, 87), (2, 39)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [70, 11, 0]]
** centroid: 3, normalized-entropy: 0.5731393980555147, [(1, 70), (2, 11)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [8, 111, 0]]
** centroid: 4, normalized-entropy: 0.35548867788893707, [(1, 8), (2, 111)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 57, 18]]
** centroid: 5, normalized-entropy: 0.7950402793845225, [(2, 57), (3, 18)]
*** center 6: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [34, 22, 0]]
** centroid: 7, normalized-entropy: 0.9666186325481027, [(1, 34), (2, 22)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 10)
[0.9390228551905198, 0.9359868850886816, 0.9090287892683103, 0.906996817176458, 0.9059988131844419, 0.8909628191065316, 0.8809887732043421, 0.8750337163510816, 0.8031324737911564, 0.7740135344925764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9390228551905198
finished with 11
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.22289487191436774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22289487191436774, 0.17591125335280053] ***
*** starting iteration: 2; err: [Inf, 0.22289487191436774, 0.17591125335280053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22289487191436774, 0.17591125335280053, 0.1640910127440708] ***
*** starting iteration: 3; err: [Inf, 0.22289487191436774, 0.17591125335280053, 0.1640910127440708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22289487191436774, 0.17591125335280053, 0.1640910127440708, 0.15840878094862532] ***
*** starting iteration: 4; err: [Inf, 0.22289487191436774, 0.17591125335280053, 0.1640910127440708, 0.15840878094862532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22289487191436774, 0.17591125335280053, 0.1640910127440708, 0.15840878094862532, 0.15470167407038826] ***
*** starting iteration: 5; err: [Inf, 0.22289487191436774, 0.17591125335280053, 0.1640910127440708, 0.15840878094862532, 0.15470167407038826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22289487191436774, 0.17591125335280053, 0.1640910127440708, 0.15840878094862532, 0.15470167407038826, 0.15305264616194922] ***
*** starting iteration: 6; err: [Inf, 0.22289487191436774, 0.17591125335280053, 0.1640910127440708, 0.15840878094862532, 0.15470167407038826, 0.15305264616194922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22289487191436774, 0.17591125335280053, 0.1640910127440708, 0.15840878094862532, 0.15470167407038826, 0.15305264616194922, 0.15192954318091698] ***
*** starting iteration: 7; err: [Inf, 0.22289487191436774, 0.17591125335280053, 0.1640910127440708, 0.15840878094862532, 0.15470167407038826, 0.15305264616194922, 0.15192954318091698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22289487191436774, 0.17591125335280053, 0.1640910127440708, 0.15840878094862532, 0.15470167407038826, 0.15305264616194922, 0.15192954318091698, 0.15122555373110683] ***
*** finished computation of 7 references, err: [Inf, 0.22289487191436774, 0.17591125335280053, 0.1640910127440708, 0.15840878094862532, 0.15470167407038826, 0.15305264616194922, 0.15192954318091698, 0.15122555373110683] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [81, 40, 0]]
** centroid: 1, normalized-entropy: 0.9155163444717095, [(1, 81), (2, 40)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [45, 52, 0]]
** centroid: 2, normalized-entropy: 0.9962401135461777, [(1, 45), (2, 52)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 105, 16]]
** centroid: 3, normalized-entropy: 0.5635262178122566, [(2, 105), (3, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [66, 29, 0]]
** centroid: 7, normalized-entropy: 0.8876297058429742, [(1, 66), (2, 29)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19183868499342882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19183868499342882, 0.1692772289414121] ***
*** starting iteration: 2; err: [Inf, 0.19183868499342882, 0.1692772289414121] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19183868499342882, 0.1692772289414121, 0.161358128691363] ***
*** starting iteration: 3; err: [Inf, 0.19183868499342882, 0.1692772289414121, 0.161358128691363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19183868499342882, 0.1692772289414121, 0.161358128691363, 0.15813193414248583] ***
*** starting iteration: 4; err: [Inf, 0.19183868499342882, 0.1692772289414121, 0.161358128691363, 0.15813193414248583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19183868499342882, 0.1692772289414121, 0.161358128691363, 0.15813193414248583, 0.15644856025443887] ***
*** starting iteration: 5; err: [Inf, 0.19183868499342882, 0.1692772289414121, 0.161358128691363, 0.15813193414248583, 0.15644856025443887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19183868499342882, 0.1692772289414121, 0.161358128691363, 0.15813193414248583, 0.15644856025443887, 0.15556353168468504] ***
*** finished computation of 7 references, err: [Inf, 0.19183868499342882, 0.1692772289414121, 0.161358128691363, 0.15813193414248583, 0.15644856025443887, 0.15556353168468504] ***
*** center 1: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 78, 20]]
** centroid: 2, normalized-entropy: 0.7300166301457938, [(2, 78), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [110, 35, 0]]
** centroid: 4, normalized-entropy: 0.7973265101474423, [(1, 110), (2, 35)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 86, 4]]
** centroid: 5, normalized-entropy: 0.2623112196143368, [(2, 86), (3, 4)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [53, 37, 0]]
** centroid: 6, normalized-entropy: 0.9770802227727781, [(1, 53), (2, 37)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [77, 12, 0]]
** centroid: 7, normalized-entropy: 0.5705411428522262, [(1, 77), (2, 12)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22818053148601714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22818053148601714, 0.17384856119137565] ***
*** starting iteration: 2; err: [Inf, 0.22818053148601714, 0.17384856119137565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22818053148601714, 0.17384856119137565, 0.16022103797851028] ***
*** starting iteration: 3; err: [Inf, 0.22818053148601714, 0.17384856119137565, 0.16022103797851028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22818053148601714, 0.17384856119137565, 0.16022103797851028, 0.15300664545149953] ***
*** starting iteration: 4; err: [Inf, 0.22818053148601714, 0.17384856119137565, 0.16022103797851028, 0.15300664545149953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22818053148601714, 0.17384856119137565, 0.16022103797851028, 0.15300664545149953, 0.15105038706068022] ***
*** starting iteration: 5; err: [Inf, 0.22818053148601714, 0.17384856119137565, 0.16022103797851028, 0.15300664545149953, 0.15105038706068022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22818053148601714, 0.17384856119137565, 0.16022103797851028, 0.15300664545149953, 0.15105038706068022, 0.15033028697150982] ***
*** finished computation of 7 references, err: [Inf, 0.22818053148601714, 0.17384856119137565, 0.16022103797851028, 0.15300664545149953, 0.15105038706068022, 0.15033028697150982] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [31, 80, 0]]
** centroid: 1, normalized-entropy: 0.8544669184854021, [(1, 31), (2, 80)]
*** center 2: selecting labels [1] (freq >= 2) [from [129, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [23, 81, 0]]
** centroid: 4, normalized-entropy: 0.7622688025356508, [(1, 23), (2, 81)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 72, 18]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 72), (3, 18)]
*** center 6: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [51, 7, 0]]
** centroid: 7, normalized-entropy: 0.5313400141801669, [(1, 51), (2, 7)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 11)
[0.9390228551905198, 0.9359868850886816, 0.9189758620896346, 0.9090287892683103, 0.906996817176458, 0.9059988131844419, 0.8909628191065316, 0.8809887732043421, 0.8750337163510816, 0.8031324737911564, 0.7740135344925764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9390228551905198
finished with 11
iteration 3 finished
generating 4 configurations using top 12 configurations, starting with 11)
[0.9390228551905198, 0.9359868850886816, 0.9189758620896346, 0.9090287892683103, 0.906996817176458, 0.9059988131844419, 0.8909628191065316, 0.8809887732043421, 0.8750337163510816, 0.8031324737911564, 0.7740135344925764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9390228551905198
finished with 12
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.24120868659052472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24120868659052472, 0.17077080890334942] ***
*** starting iteration: 2; err: [Inf, 0.24120868659052472, 0.17077080890334942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24120868659052472, 0.17077080890334942, 0.1597128603761238] ***
*** starting iteration: 3; err: [Inf, 0.24120868659052472, 0.17077080890334942, 0.1597128603761238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24120868659052472, 0.17077080890334942, 0.1597128603761238, 0.15480275828546533] ***
*** starting iteration: 4; err: [Inf, 0.24120868659052472, 0.17077080890334942, 0.1597128603761238, 0.15480275828546533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24120868659052472, 0.17077080890334942, 0.1597128603761238, 0.15480275828546533, 0.1532119325929889] ***
*** starting iteration: 5; err: [Inf, 0.24120868659052472, 0.17077080890334942, 0.1597128603761238, 0.15480275828546533, 0.1532119325929889] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24120868659052472, 0.17077080890334942, 0.1597128603761238, 0.15480275828546533, 0.1532119325929889, 0.15229257793856543] ***
*** finished computation of 7 references, err: [Inf, 0.24120868659052472, 0.17077080890334942, 0.1597128603761238, 0.15480275828546533, 0.1532119325929889, 0.15229257793856543] ***
*** center 1: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [140, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 49, 16]]
** centroid: 3, normalized-entropy: 0.8051250074646822, [(2, 49), (3, 16)]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 75, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [127, 1, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 68, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [54, 33, 0]]
** centroid: 7, normalized-entropy: 0.9575534837147484, [(1, 54), (2, 33)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2549815165825646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2549815165825646, 0.16889932400140648] ***
*** starting iteration: 2; err: [Inf, 0.2549815165825646, 0.16889932400140648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2549815165825646, 0.16889932400140648, 0.15627527860449864] ***
*** starting iteration: 3; err: [Inf, 0.2549815165825646, 0.16889932400140648, 0.15627527860449864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2549815165825646, 0.16889932400140648, 0.15627527860449864, 0.152119939986231] ***
*** starting iteration: 4; err: [Inf, 0.2549815165825646, 0.16889932400140648, 0.15627527860449864, 0.152119939986231] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2549815165825646, 0.16889932400140648, 0.15627527860449864, 0.152119939986231, 0.15083063703667055] ***
*** starting iteration: 5; err: [Inf, 0.2549815165825646, 0.16889932400140648, 0.15627527860449864, 0.152119939986231, 0.15083063703667055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2549815165825646, 0.16889932400140648, 0.15627527860449864, 0.152119939986231, 0.15083063703667055, 0.15004433458670974] ***
*** finished computation of 7 references, err: [Inf, 0.2549815165825646, 0.16889932400140648, 0.15627527860449864, 0.152119939986231, 0.15083063703667055, 0.15004433458670974] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 59, 24]]
** centroid: 1, normalized-entropy: 0.8676293117125105, [(2, 59), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [68, 29, 0]]
** centroid: 3, normalized-entropy: 0.8800270477157599, [(1, 68), (2, 29)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [4, 71, 0]]
** centroid: 4, normalized-entropy: 0.3003914173647818, [(1, 4), (2, 71)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [14, 89, 0]]
** centroid: 5, normalized-entropy: 0.5734593207286953, [(1, 14), (2, 89)]
*** center 6: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [113, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24814884392076872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24814884392076872, 0.1838682280068678] ***
*** starting iteration: 2; err: [Inf, 0.24814884392076872, 0.1838682280068678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328] ***
*** starting iteration: 3; err: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328, 0.16283856662523666] ***
*** starting iteration: 4; err: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328, 0.16283856662523666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328, 0.16283856662523666, 0.15878627135389034] ***
*** starting iteration: 5; err: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328, 0.16283856662523666, 0.15878627135389034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328, 0.16283856662523666, 0.15878627135389034, 0.15545315459613043] ***
*** starting iteration: 6; err: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328, 0.16283856662523666, 0.15878627135389034, 0.15545315459613043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328, 0.16283856662523666, 0.15878627135389034, 0.15545315459613043, 0.15298488246963948] ***
*** starting iteration: 7; err: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328, 0.16283856662523666, 0.15878627135389034, 0.15545315459613043, 0.15298488246963948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328, 0.16283856662523666, 0.15878627135389034, 0.15545315459613043, 0.15298488246963948, 0.15116468367217084] ***
*** starting iteration: 8; err: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328, 0.16283856662523666, 0.15878627135389034, 0.15545315459613043, 0.15298488246963948, 0.15116468367217084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328, 0.16283856662523666, 0.15878627135389034, 0.15545315459613043, 0.15298488246963948, 0.15116468367217084, 0.15004989714536263] ***
*** starting iteration: 9; err: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328, 0.16283856662523666, 0.15878627135389034, 0.15545315459613043, 0.15298488246963948, 0.15116468367217084, 0.15004989714536263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328, 0.16283856662523666, 0.15878627135389034, 0.15545315459613043, 0.15298488246963948, 0.15116468367217084, 0.15004989714536263, 0.1494194746793791] ***
*** finished computation of 7 references, err: [Inf, 0.24814884392076872, 0.1838682280068678, 0.17128614824533328, 0.16283856662523666, 0.15878627135389034, 0.15545315459613043, 0.15298488246963948, 0.15116468367217084, 0.15004989714536263, 0.1494194746793791] ***
*** center 1: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [40, 63, 0]]
** centroid: 2, normalized-entropy: 0.9637261681930318, [(1, 40), (2, 63)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [55, 50, 0]]
** centroid: 3, normalized-entropy: 0.998363672593813, [(1, 55), (2, 50)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [70, 27, 0]]
** centroid: 4, normalized-entropy: 0.8531935252328874, [(1, 70), (2, 27)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 100, 18]]
** centroid: 5, normalized-entropy: 0.6161661934005354, [(2, 100), (3, 18)]
*** center 6: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 12)
[0.9479839120557684, 0.9390228551905198, 0.9359868850886816, 0.9189758620896346, 0.9090287892683103, 0.906996817176458, 0.9059988131844419, 0.8909628191065316, 0.8809887732043421, 0.8750337163510816, 0.8031324737911564, 0.7740135344925764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9479839120557684
finished with 14
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.26088199573610954] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26088199573610954, 0.23880196624510996] ***
*** starting iteration: 2; err: [Inf, 0.26088199573610954, 0.23880196624510996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26088199573610954, 0.23880196624510996, 0.2364663001312105] ***
*** starting iteration: 3; err: [Inf, 0.26088199573610954, 0.23880196624510996, 0.2364663001312105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26088199573610954, 0.23880196624510996, 0.2364663001312105, 0.23615988283543973] ***
*** finished computation of 3 references, err: [Inf, 0.26088199573610954, 0.23880196624510996, 0.2364663001312105, 0.23615988283543973] ***
*** center 1: selecting labels [1] (freq >= 1) [from [246, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [173, 37, 0]]
** centroid: 2, normalized-entropy: 0.6716719085736249, [(1, 173), (2, 37)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [5, 189, 16]]
** centroid: 3, normalized-entropy: 0.3458639738142749, [(1, 5), (2, 189), (3, 16)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2995690198606816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2995690198606816, 0.27803321111517243] ***
*** starting iteration: 2; err: [Inf, 0.2995690198606816, 0.27803321111517243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2995690198606816, 0.27803321111517243, 0.25733596364502564] ***
*** starting iteration: 3; err: [Inf, 0.2995690198606816, 0.27803321111517243, 0.25733596364502564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2995690198606816, 0.27803321111517243, 0.25733596364502564, 0.2356946271281505] ***
*** finished computation of 3 references, err: [Inf, 0.2995690198606816, 0.27803321111517243, 0.25733596364502564, 0.2356946271281505] ***
*** center 1: selecting labels [1] (freq >= 1) [from [217, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [47, 167, 24]]
** centroid: 2, normalized-entropy: 0.7284408344707173, [(1, 47), (2, 167), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [131, 81, 0]]
** centroid: 3, normalized-entropy: 0.9594946836431022, [(1, 131), (2, 81)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35454420951743804] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35454420951743804, 0.23722256219358012] ***
*** starting iteration: 2; err: [Inf, 0.35454420951743804, 0.23722256219358012] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35454420951743804, 0.23722256219358012, 0.23133267041133798] ***
*** starting iteration: 3; err: [Inf, 0.35454420951743804, 0.23722256219358012, 0.23133267041133798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35454420951743804, 0.23722256219358012, 0.23133267041133798, 0.23071337480941365] ***
*** finished computation of 3 references, err: [Inf, 0.35454420951743804, 0.23722256219358012, 0.23133267041133798, 0.23071337480941365] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [138, 90, 0]]
** centroid: 1, normalized-entropy: 0.9677884628267678, [(1, 138), (2, 90)]
*** center 2: selecting labels [1] (freq >= 1) [from [203, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [68, 150, 18]]
** centroid: 3, normalized-entropy: 0.7672074600317481, [(1, 68), (2, 150), (3, 18)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3779963827342377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3779963827342377, 0.3383601402833096] ***
*** starting iteration: 2; err: [Inf, 0.3779963827342377, 0.3383601402833096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3779963827342377, 0.3383601402833096, 0.3357540541370441] ***
*** starting iteration: 3; err: [Inf, 0.3779963827342377, 0.3383601402833096, 0.3357540541370441] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3779963827342377, 0.3383601402833096, 0.3357540541370441, 0.33478543451601256] ***
*** finished computation of 3 references, err: [Inf, 0.3779963827342377, 0.3383601402833096, 0.3357540541370441, 0.33478543451601256] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [102, 119, 0]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(1, 102), (2, 119)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [256, 20, 0]]
** centroid: 2, normalized-entropy: 0.3750514064240124, [(1, 256), (2, 20)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [66, 87, 16]]
** centroid: 3, normalized-entropy: 0.8485166262329803, [(1, 66), (2, 87), (3, 16)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.406649527683815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.406649527683815, 0.3086263547292624] ***
*** starting iteration: 2; err: [Inf, 0.406649527683815, 0.3086263547292624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.406649527683815, 0.3086263547292624, 0.30137399320156943] ***
*** starting iteration: 3; err: [Inf, 0.406649527683815, 0.3086263547292624, 0.30137399320156943] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.406649527683815, 0.3086263547292624, 0.30137399320156943, 0.2990422132501806] ***
*** finished computation of 3 references, err: [Inf, 0.406649527683815, 0.3086263547292624, 0.30137399320156943, 0.2990422132501806] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [153, 50, 0]]
** centroid: 1, normalized-entropy: 0.8053696638811764, [(1, 153), (2, 50)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [242, 25, 0]]
** centroid: 2, normalized-entropy: 0.44848129436613077, [(1, 242), (2, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 173, 24]]
** centroid: 3, normalized-entropy: 0.5345909900225635, [(2, 173), (3, 24)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4467178992375542] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4467178992375542, 0.30003954087854595] ***
*** starting iteration: 2; err: [Inf, 0.4467178992375542, 0.30003954087854595] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4467178992375542, 0.30003954087854595, 0.2975619340223306] ***
*** starting iteration: 3; err: [Inf, 0.4467178992375542, 0.30003954087854595, 0.2975619340223306] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4467178992375542, 0.30003954087854595, 0.2975619340223306, 0.29660667888987724] ***
*** finished computation of 3 references, err: [Inf, 0.4467178992375542, 0.30003954087854595, 0.2975619340223306, 0.29660667888987724] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [172, 44, 0]]
** centroid: 1, normalized-entropy: 0.7292739418449411, [(1, 172), (2, 44)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 169, 18]]
** centroid: 2, normalized-entropy: 0.457015985247793, [(2, 169), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [237, 27, 0]]
** centroid: 3, normalized-entropy: 0.4761588445580706, [(1, 237), (2, 27)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.9479839120557684, 0.9390228551905198, 0.9359868850886816, 0.9189758620896346, 0.9090287892683103, 0.906996817176458, 0.9059988131844419, 0.8909628191065316, 0.8829997662332992, 0.8809887732043421, 0.8750337163510816, 0.8700137263011515, 0.8031324737911564, 0.7740135344925764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9479839120557684
finished with 14
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9479839120557684, 0.9390228551905198, 0.9359868850886816, 0.9189758620896346, 0.9090287892683103, 0.906996817176458, 0.9059988131844419, 0.8909628191065316, 0.8829997662332992, 0.8809887732043421, 0.8750337163510816, 0.8700137263011515, 0.8031324737911564, 0.7740135344925764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9479839120557684
finished with 15
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.326246640152737] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.326246640152737, 0.2417868829609172] ***
*** starting iteration: 2; err: [Inf, 0.326246640152737, 0.2417868829609172] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.326246640152737, 0.2417868829609172, 0.23774500349368732] ***
*** starting iteration: 3; err: [Inf, 0.326246640152737, 0.2417868829609172, 0.23774500349368732] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.326246640152737, 0.2417868829609172, 0.23774500349368732, 0.2367360754016865] ***
*** finished computation of 3 references, err: [Inf, 0.326246640152737, 0.2417868829609172, 0.23774500349368732, 0.2367360754016865] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [264, 2, 0]]
** centroid: 1, normalized-entropy: 0.06385368546122076, [(1, 264), (2, 2)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [4, 179, 16]]
** centroid: 2, normalized-entropy: 0.3426845032475026, [(1, 4), (2, 179), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [156, 45, 0]]
** centroid: 3, normalized-entropy: 0.7671903206448686, [(1, 156), (2, 45)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3474265123805453] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3474265123805453, 0.23466630290629625] ***
*** starting iteration: 2; err: [Inf, 0.3474265123805453, 0.23466630290629625] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3474265123805453, 0.23466630290629625, 0.23374773174066327] ***
*** finished computation of 3 references, err: [Inf, 0.3474265123805453, 0.23466630290629625, 0.23374773174066327] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [68, 170, 24]]
** centroid: 1, normalized-entropy: 0.7734278729977853, [(1, 68), (2, 170), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [214, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [113, 78, 0]]
** centroid: 3, normalized-entropy: 0.9756403682233321, [(1, 113), (2, 78)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3849986248567276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3849986248567276, 0.23138939726761246] ***
*** starting iteration: 2; err: [Inf, 0.3849986248567276, 0.23138939726761246] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3849986248567276, 0.23138939726761246, 0.23061976532104134] ***
*** finished computation of 3 references, err: [Inf, 0.3849986248567276, 0.23138939726761246, 0.23061976532104134] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [65, 170, 18]]
** centroid: 1, normalized-entropy: 0.7321487350755769, [(1, 65), (2, 170), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [205, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [139, 70, 0]]
** centroid: 3, normalized-entropy: 0.9198824799530589, [(1, 139), (2, 70)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 15)
[0.9479839120557684, 0.9390228551905198, 0.9359868850886816, 0.9189758620896346, 0.9090287892683103, 0.906996817176458, 0.9059988131844419, 0.8909628191065316, 0.8900277523032014, 0.8829997662332992, 0.8809887732043421, 0.8750337163510816, 0.8700137263011515, 0.8031324737911564, 0.7740135344925764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9479839120557684
finished with 15
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9479839120557684, 0.9390228551905198, 0.9359868850886816, 0.9189758620896346, 0.9090287892683103, 0.906996817176458, 0.9059988131844419, 0.8909628191065316, 0.8900277523032014, 0.8829997662332992, 0.8809887732043421, 0.8750337163510816, 0.8700137263011515, 0.8031324737911564, 0.7740135344925764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9479839120557684
finished with 17
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.21605601939848168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21605601939848168, 0.19516189038884957] ***
*** starting iteration: 2; err: [Inf, 0.21605601939848168, 0.19516189038884957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21605601939848168, 0.19516189038884957, 0.19366362070533316] ***
*** starting iteration: 3; err: [Inf, 0.21605601939848168, 0.19516189038884957, 0.19366362070533316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21605601939848168, 0.19516189038884957, 0.19366362070533316, 0.19320335670712743] ***
*** finished computation of 7 references, err: [Inf, 0.21605601939848168, 0.19516189038884957, 0.19366362070533316, 0.19320335670712743] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [5, 84, 0]]
** centroid: 1, normalized-entropy: 0.3120895659343452, [(1, 5), (2, 84)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [66, 18, 0]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(1, 66), (2, 18)]
*** center 3: selecting labels [1] (freq >= 2) [from [111, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [22, 67, 0]]
** centroid: 4, normalized-entropy: 0.8067955503968327, [(1, 22), (2, 67)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 57, 16]]
** centroid: 5, normalized-entropy: 0.7586638628883696, [(2, 57), (3, 16)]
*** center 6: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23319719787170437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23319719787170437, 0.19481310160688195] ***
*** starting iteration: 2; err: [Inf, 0.23319719787170437, 0.19481310160688195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23319719787170437, 0.19481310160688195, 0.19193137272064206] ***
*** starting iteration: 3; err: [Inf, 0.23319719787170437, 0.19481310160688195, 0.19193137272064206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23319719787170437, 0.19481310160688195, 0.19193137272064206, 0.19135291768709892] ***
*** finished computation of 7 references, err: [Inf, 0.23319719787170437, 0.19481310160688195, 0.19193137272064206, 0.19135291768709892] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [67, 38, 0]]
** centroid: 1, normalized-entropy: 0.9442529341277702, [(1, 67), (2, 38)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [69, 8, 0]]
** centroid: 2, normalized-entropy: 0.481225663841737, [(1, 69), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 69, 24]]
** centroid: 3, normalized-entropy: 0.8238116333123173, [(2, 69), (3, 24)]
*** center 4: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [71, 39, 0]]
** centroid: 5, normalized-entropy: 0.938062149702295, [(1, 71), (2, 39)]
*** center 6: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [6, 94, 0]]
** centroid: 7, normalized-entropy: 0.3274449191544762, [(1, 6), (2, 94)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22813685400330502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22813685400330502, 0.19592164089621186] ***
*** starting iteration: 2; err: [Inf, 0.22813685400330502, 0.19592164089621186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22813685400330502, 0.19592164089621186, 0.19318749441875555] ***
*** starting iteration: 3; err: [Inf, 0.22813685400330502, 0.19592164089621186, 0.19318749441875555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22813685400330502, 0.19592164089621186, 0.19318749441875555, 0.19205390248095794] ***
*** starting iteration: 4; err: [Inf, 0.22813685400330502, 0.19592164089621186, 0.19318749441875555, 0.19205390248095794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22813685400330502, 0.19592164089621186, 0.19318749441875555, 0.19205390248095794, 0.19138361750075641] ***
*** finished computation of 7 references, err: [Inf, 0.22813685400330502, 0.19592164089621186, 0.19318749441875555, 0.19205390248095794, 0.19138361750075641] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [62, 50, 0]]
** centroid: 1, normalized-entropy: 0.9917033083725819, [(1, 62), (2, 50)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [71, 22, 0]]
** centroid: 2, normalized-entropy: 0.7892712724536985, [(1, 71), (2, 22)]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 64, 18]]
** centroid: 4, normalized-entropy: 0.7592757847892834, [(2, 64), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [19, 104, 0]]
** centroid: 5, normalized-entropy: 0.6209181358912585, [(1, 19), (2, 104)]
*** center 6: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.191544637831093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.191544637831093, 0.15432676720200805] ***
*** starting iteration: 2; err: [Inf, 0.191544637831093, 0.15432676720200805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.191544637831093, 0.15432676720200805, 0.15138432191819087] ***
*** starting iteration: 3; err: [Inf, 0.191544637831093, 0.15432676720200805, 0.15138432191819087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.191544637831093, 0.15432676720200805, 0.15138432191819087, 0.15052958038375452] ***
*** finished computation of 7 references, err: [Inf, 0.191544637831093, 0.15432676720200805, 0.15138432191819087, 0.15052958038375452] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 87, 15]]
** centroid: 1, normalized-entropy: 0.6024308020404452, [(2, 87), (3, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [93, 2, 0]]
** centroid: 3, normalized-entropy: 0.14731066693045392, [(1, 93), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [62, 36, 0]]
** centroid: 4, normalized-entropy: 0.9486131982385807, [(1, 62), (2, 36)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [77, 22, 0]]
** centroid: 5, normalized-entropy: 0.7642045065086204, [(1, 77), (2, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 79, 1]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18504679664645507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18504679664645507, 0.15290300899242487] ***
*** starting iteration: 2; err: [Inf, 0.18504679664645507, 0.15290300899242487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18504679664645507, 0.15290300899242487, 0.14962702167933917] ***
*** starting iteration: 3; err: [Inf, 0.18504679664645507, 0.15290300899242487, 0.14962702167933917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18504679664645507, 0.15290300899242487, 0.14962702167933917, 0.14907958009140637] ***
*** finished computation of 7 references, err: [Inf, 0.18504679664645507, 0.15290300899242487, 0.14962702167933917, 0.14907958009140637] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [128, 6, 0]]
** centroid: 1, normalized-entropy: 0.26377743669413856, [(1, 128), (2, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 49, 24]]
** centroid: 3, normalized-entropy: 0.9136617865655933, [(2, 49), (3, 24)]
*** center 4: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [76, 19, 0]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(1, 76), (2, 19)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 105, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [7, 69, 0]]
** centroid: 7, normalized-entropy: 0.4434581453896789, [(1, 7), (2, 69)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19003111544599954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19003111544599954, 0.15713920536125708] ***
*** starting iteration: 2; err: [Inf, 0.19003111544599954, 0.15713920536125708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19003111544599954, 0.15713920536125708, 0.1522155240690545] ***
*** starting iteration: 3; err: [Inf, 0.19003111544599954, 0.15713920536125708, 0.1522155240690545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19003111544599954, 0.15713920536125708, 0.1522155240690545, 0.15133391787762987] ***
*** finished computation of 7 references, err: [Inf, 0.19003111544599954, 0.15713920536125708, 0.1522155240690545, 0.15133391787762987] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [107, 4, 0]]
** centroid: 1, normalized-entropy: 0.22381255513458592, [(1, 107), (2, 4)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 39, 18]]
** centroid: 2, normalized-entropy: 0.8997437586982626, [(2, 39), (3, 18)]
*** center 3: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [84, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [5, 105, 0]]
** centroid: 5, normalized-entropy: 0.2667649878030262, [(1, 5), (2, 105)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [14, 91, 0]]
** centroid: 6, normalized-entropy: 0.5665095065529052, [(1, 14), (2, 91)]
*** center 7: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
finished with 9 centroids; started with 7
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.19827112081460654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19827112081460654, 0.16629616014612839] ***
*** starting iteration: 2; err: [Inf, 0.19827112081460654, 0.16629616014612839] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19827112081460654, 0.16629616014612839, 0.15868019087798893] ***
*** starting iteration: 3; err: [Inf, 0.19827112081460654, 0.16629616014612839, 0.15868019087798893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19827112081460654, 0.16629616014612839, 0.15868019087798893, 0.15613306580437347] ***
*** starting iteration: 4; err: [Inf, 0.19827112081460654, 0.16629616014612839, 0.15868019087798893, 0.15613306580437347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19827112081460654, 0.16629616014612839, 0.15868019087798893, 0.15613306580437347, 0.15460182725451888] ***
*** starting iteration: 5; err: [Inf, 0.19827112081460654, 0.16629616014612839, 0.15868019087798893, 0.15613306580437347, 0.15460182725451888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19827112081460654, 0.16629616014612839, 0.15868019087798893, 0.15613306580437347, 0.15460182725451888, 0.15355749107711017] ***
*** starting iteration: 6; err: [Inf, 0.19827112081460654, 0.16629616014612839, 0.15868019087798893, 0.15613306580437347, 0.15460182725451888, 0.15355749107711017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19827112081460654, 0.16629616014612839, 0.15868019087798893, 0.15613306580437347, 0.15460182725451888, 0.15355749107711017, 0.15232028379151596] ***
*** starting iteration: 7; err: [Inf, 0.19827112081460654, 0.16629616014612839, 0.15868019087798893, 0.15613306580437347, 0.15460182725451888, 0.15355749107711017, 0.15232028379151596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19827112081460654, 0.16629616014612839, 0.15868019087798893, 0.15613306580437347, 0.15460182725451888, 0.15355749107711017, 0.15232028379151596, 0.1514839336145669] ***
*** finished computation of 7 references, err: [Inf, 0.19827112081460654, 0.16629616014612839, 0.15868019087798893, 0.15613306580437347, 0.15460182725451888, 0.15355749107711017, 0.15232028379151596, 0.1514839336145669] ***
*** center 1: selecting labels [1] (freq >= 2) [from [135, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [117, 54, 0]]
** centroid: 2, normalized-entropy: 0.8997437586982626, [(1, 117), (2, 54)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [25, 107, 0]]
** centroid: 3, normalized-entropy: 0.700201905045644, [(1, 25), (2, 107)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 99, 29]]
** centroid: 4, normalized-entropy: 0.7719706699485864, [(2, 99), (3, 29)]
*** center 5: selecting labels [1] (freq >= 2) [from [152, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [154, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [31, 97, 0]]
** centroid: 7, normalized-entropy: 0.798659130358246, [(1, 31), (2, 97)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2149425032287836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2149425032287836, 0.16652154148183762] ***
*** starting iteration: 2; err: [Inf, 0.2149425032287836, 0.16652154148183762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2149425032287836, 0.16652154148183762, 0.16181101237796247] ***
*** starting iteration: 3; err: [Inf, 0.2149425032287836, 0.16652154148183762, 0.16181101237796247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2149425032287836, 0.16652154148183762, 0.16181101237796247, 0.15840473852306605] ***
*** starting iteration: 4; err: [Inf, 0.2149425032287836, 0.16652154148183762, 0.16181101237796247, 0.15840473852306605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2149425032287836, 0.16652154148183762, 0.16181101237796247, 0.15840473852306605, 0.15583862913772464] ***
*** starting iteration: 5; err: [Inf, 0.2149425032287836, 0.16652154148183762, 0.16181101237796247, 0.15840473852306605, 0.15583862913772464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2149425032287836, 0.16652154148183762, 0.16181101237796247, 0.15840473852306605, 0.15583862913772464, 0.15342516134306788] ***
*** starting iteration: 6; err: [Inf, 0.2149425032287836, 0.16652154148183762, 0.16181101237796247, 0.15840473852306605, 0.15583862913772464, 0.15342516134306788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2149425032287836, 0.16652154148183762, 0.16181101237796247, 0.15840473852306605, 0.15583862913772464, 0.15342516134306788, 0.15184832870867104] ***
*** starting iteration: 7; err: [Inf, 0.2149425032287836, 0.16652154148183762, 0.16181101237796247, 0.15840473852306605, 0.15583862913772464, 0.15342516134306788, 0.15184832870867104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2149425032287836, 0.16652154148183762, 0.16181101237796247, 0.15840473852306605, 0.15583862913772464, 0.15342516134306788, 0.15184832870867104, 0.15107273240480573] ***
*** finished computation of 7 references, err: [Inf, 0.2149425032287836, 0.16652154148183762, 0.16181101237796247, 0.15840473852306605, 0.15583862913772464, 0.15342516134306788, 0.15184832870867104, 0.15107273240480573] ***
*** center 1: selecting labels [1] (freq >= 2) [from [66, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 69, 14]]
** centroid: 2, normalized-entropy: 0.6546640527143932, [(2, 69), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [65, 26, 0]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(1, 65), (2, 26)]
*** center 4: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [35, 27, 0]]
** centroid: 5, normalized-entropy: 0.9879565014919159, [(1, 35), (2, 27)]
*** center 6: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [14, 55, 0]]
** centroid: 7, normalized-entropy: 0.7276874545656657, [(1, 14), (2, 55)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17881152611225842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17881152611225842, 0.15111997744068503] ***
*** starting iteration: 2; err: [Inf, 0.17881152611225842, 0.15111997744068503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17881152611225842, 0.15111997744068503, 0.14912438910454512] ***
*** starting iteration: 3; err: [Inf, 0.17881152611225842, 0.15111997744068503, 0.14912438910454512] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17881152611225842, 0.15111997744068503, 0.14912438910454512, 0.14798332382179796] ***
*** starting iteration: 4; err: [Inf, 0.17881152611225842, 0.15111997744068503, 0.14912438910454512, 0.14798332382179796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17881152611225842, 0.15111997744068503, 0.14912438910454512, 0.14798332382179796, 0.14633377962186933] ***
*** starting iteration: 5; err: [Inf, 0.17881152611225842, 0.15111997744068503, 0.14912438910454512, 0.14798332382179796, 0.14633377962186933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17881152611225842, 0.15111997744068503, 0.14912438910454512, 0.14798332382179796, 0.14633377962186933, 0.1451124533340335] ***
*** starting iteration: 6; err: [Inf, 0.17881152611225842, 0.15111997744068503, 0.14912438910454512, 0.14798332382179796, 0.14633377962186933, 0.1451124533340335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17881152611225842, 0.15111997744068503, 0.14912438910454512, 0.14798332382179796, 0.14633377962186933, 0.1451124533340335, 0.14488073076074942] ***
*** finished computation of 7 references, err: [Inf, 0.17881152611225842, 0.15111997744068503, 0.14912438910454512, 0.14798332382179796, 0.14633377962186933, 0.1451124533340335, 0.14488073076074942] ***
*** center 1: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [59, 1, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [61, 10, 0]]
** centroid: 3, normalized-entropy: 0.5864477034453907, [(1, 61), (2, 10)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [34, 50, 0]]
** centroid: 4, normalized-entropy: 0.9736680645496202, [(1, 34), (2, 50)]
*** center 5: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 41, 6]]
** centroid: 6, normalized-entropy: 0.5509844433017146, [(2, 41), (3, 6)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 81, 3]]
** centroid: 7, normalized-entropy: 0.2222848306856879, [(2, 81), (3, 3)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18954202711116522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18954202711116522, 0.15340054646693171] ***
*** starting iteration: 2; err: [Inf, 0.18954202711116522, 0.15340054646693171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18954202711116522, 0.15340054646693171, 0.14841299949446693] ***
*** starting iteration: 3; err: [Inf, 0.18954202711116522, 0.15340054646693171, 0.14841299949446693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18954202711116522, 0.15340054646693171, 0.14841299949446693, 0.14605165340704843] ***
*** starting iteration: 4; err: [Inf, 0.18954202711116522, 0.15340054646693171, 0.14841299949446693, 0.14605165340704843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18954202711116522, 0.15340054646693171, 0.14841299949446693, 0.14605165340704843, 0.14462495834566652] ***
*** starting iteration: 5; err: [Inf, 0.18954202711116522, 0.15340054646693171, 0.14841299949446693, 0.14605165340704843, 0.14462495834566652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18954202711116522, 0.15340054646693171, 0.14841299949446693, 0.14605165340704843, 0.14462495834566652, 0.14439221211336553] ***
*** finished computation of 7 references, err: [Inf, 0.18954202711116522, 0.15340054646693171, 0.14841299949446693, 0.14605165340704843, 0.14462495834566652, 0.14439221211336553] ***
*** center 1: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [79, 14, 0]]
** centroid: 2, normalized-entropy: 0.6111841012714984, [(1, 79), (2, 14)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [12, 54, 0]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(1, 12), (2, 54)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [43, 22, 0]]
** centroid: 4, normalized-entropy: 0.9233388889944429, [(1, 43), (2, 22)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 42, 10]]
** centroid: 5, normalized-entropy: 0.7062740891876008, [(2, 42), (3, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [76, 1, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 45, 2]]
** centroid: 7, normalized-entropy: 0.2538784402981617, [(2, 45), (3, 2)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23128762531280517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23128762531280517, 0.17102529569901526] ***
*** starting iteration: 2; err: [Inf, 0.23128762531280517, 0.17102529569901526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23128762531280517, 0.17102529569901526, 0.15899948451295495] ***
*** starting iteration: 3; err: [Inf, 0.23128762531280517, 0.17102529569901526, 0.15899948451295495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23128762531280517, 0.17102529569901526, 0.15899948451295495, 0.1537704952247441] ***
*** starting iteration: 4; err: [Inf, 0.23128762531280517, 0.17102529569901526, 0.15899948451295495, 0.1537704952247441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23128762531280517, 0.17102529569901526, 0.15899948451295495, 0.1537704952247441, 0.1499293200802058] ***
*** starting iteration: 5; err: [Inf, 0.23128762531280517, 0.17102529569901526, 0.15899948451295495, 0.1537704952247441, 0.1499293200802058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23128762531280517, 0.17102529569901526, 0.15899948451295495, 0.1537704952247441, 0.1499293200802058, 0.14781363757699728] ***
*** starting iteration: 6; err: [Inf, 0.23128762531280517, 0.17102529569901526, 0.15899948451295495, 0.1537704952247441, 0.1499293200802058, 0.14781363757699728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23128762531280517, 0.17102529569901526, 0.15899948451295495, 0.1537704952247441, 0.1499293200802058, 0.14781363757699728, 0.14646838514320554] ***
*** starting iteration: 7; err: [Inf, 0.23128762531280517, 0.17102529569901526, 0.15899948451295495, 0.1537704952247441, 0.1499293200802058, 0.14781363757699728, 0.14646838514320554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23128762531280517, 0.17102529569901526, 0.15899948451295495, 0.1537704952247441, 0.1499293200802058, 0.14781363757699728, 0.14646838514320554, 0.14555769612733274] ***
*** finished computation of 7 references, err: [Inf, 0.23128762531280517, 0.17102529569901526, 0.15899948451295495, 0.1537704952247441, 0.1499293200802058, 0.14781363757699728, 0.14646838514320554, 0.14555769612733274] ***
*** center 1: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 66, 7]]
** centroid: 2, normalized-entropy: 0.4558314584408233, [(2, 66), (3, 7)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [44, 21, 0]]
** centroid: 3, normalized-entropy: 0.9076961653608385, [(1, 44), (2, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [69, 15, 0]]
** centroid: 5, normalized-entropy: 0.6769418697808861, [(1, 69), (2, 15)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [52, 15, 0]]
** centroid: 6, normalized-entropy: 0.7671903206448686, [(1, 52), (2, 15)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 63, 7]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 63), (3, 7)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.210771198913455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210771198913455, 0.15925759298633785] ***
*** starting iteration: 2; err: [Inf, 0.210771198913455, 0.15925759298633785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210771198913455, 0.15925759298633785, 0.1534365271180868] ***
*** starting iteration: 3; err: [Inf, 0.210771198913455, 0.15925759298633785, 0.1534365271180868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210771198913455, 0.15925759298633785, 0.1534365271180868, 0.15153555031865834] ***
*** starting iteration: 4; err: [Inf, 0.210771198913455, 0.15925759298633785, 0.1534365271180868, 0.15153555031865834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210771198913455, 0.15925759298633785, 0.1534365271180868, 0.15153555031865834, 0.15086647198162972] ***
*** finished computation of 7 references, err: [Inf, 0.210771198913455, 0.15925759298633785, 0.1534365271180868, 0.15153555031865834, 0.15086647198162972] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [13, 37, 0]]
** centroid: 1, normalized-entropy: 0.8267463724926181, [(1, 13), (2, 37)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 39, 18]]
** centroid: 2, normalized-entropy: 0.8997437586982626, [(2, 39), (3, 18)]
*** center 3: selecting labels [1] (freq >= 2) [from [98, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [31, 39, 0]]
** centroid: 4, normalized-entropy: 0.9905577004075262, [(1, 31), (2, 39)]
*** center 5: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 67, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17378440899960695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17378440899960695, 0.15759831522218884] ***
*** starting iteration: 2; err: [Inf, 0.17378440899960695, 0.15759831522218884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17378440899960695, 0.15759831522218884, 0.15481744709890335] ***
*** starting iteration: 3; err: [Inf, 0.17378440899960695, 0.15759831522218884, 0.15481744709890335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17378440899960695, 0.15759831522218884, 0.15481744709890335, 0.1537826101728715] ***
*** starting iteration: 4; err: [Inf, 0.17378440899960695, 0.15759831522218884, 0.15481744709890335, 0.1537826101728715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17378440899960695, 0.15759831522218884, 0.15481744709890335, 0.1537826101728715, 0.15253463599737735] ***
*** starting iteration: 5; err: [Inf, 0.17378440899960695, 0.15759831522218884, 0.15481744709890335, 0.1537826101728715, 0.15253463599737735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17378440899960695, 0.15759831522218884, 0.15481744709890335, 0.1537826101728715, 0.15253463599737735, 0.15085875646490604] ***
*** starting iteration: 6; err: [Inf, 0.17378440899960695, 0.15759831522218884, 0.15481744709890335, 0.1537826101728715, 0.15253463599737735, 0.15085875646490604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17378440899960695, 0.15759831522218884, 0.15481744709890335, 0.1537826101728715, 0.15253463599737735, 0.15085875646490604, 0.14970308797527104] ***
*** starting iteration: 7; err: [Inf, 0.17378440899960695, 0.15759831522218884, 0.15481744709890335, 0.1537826101728715, 0.15253463599737735, 0.15085875646490604, 0.14970308797527104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17378440899960695, 0.15759831522218884, 0.15481744709890335, 0.1537826101728715, 0.15253463599737735, 0.15085875646490604, 0.14970308797527104, 0.1491413843203336] ***
*** finished computation of 7 references, err: [Inf, 0.17378440899960695, 0.15759831522218884, 0.15481744709890335, 0.1537826101728715, 0.15253463599737735, 0.15085875646490604, 0.14970308797527104, 0.1491413843203336] ***
*** center 1: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 65, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [19, 67, 0]]
** centroid: 3, normalized-entropy: 0.7618624463753669, [(1, 19), (2, 67)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [45, 13, 0]]
** centroid: 4, normalized-entropy: 0.7676515870125797, [(1, 45), (2, 13)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 28, 14]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 28), (3, 14)]
*** center 6: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22331735776923597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22331735776923597, 0.16335301814042033] ***
*** starting iteration: 2; err: [Inf, 0.22331735776923597, 0.16335301814042033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22331735776923597, 0.16335301814042033, 0.15516767681296914] ***
*** starting iteration: 3; err: [Inf, 0.22331735776923597, 0.16335301814042033, 0.15516767681296914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22331735776923597, 0.16335301814042033, 0.15516767681296914, 0.15172610010392965] ***
*** starting iteration: 4; err: [Inf, 0.22331735776923597, 0.16335301814042033, 0.15516767681296914, 0.15172610010392965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22331735776923597, 0.16335301814042033, 0.15516767681296914, 0.15172610010392965, 0.15015722864307463] ***
*** starting iteration: 5; err: [Inf, 0.22331735776923597, 0.16335301814042033, 0.15516767681296914, 0.15172610010392965, 0.15015722864307463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22331735776923597, 0.16335301814042033, 0.15516767681296914, 0.15172610010392965, 0.15015722864307463, 0.14948265822231768] ***
*** finished computation of 7 references, err: [Inf, 0.22331735776923597, 0.16335301814042033, 0.15516767681296914, 0.15172610010392965, 0.15015722864307463, 0.14948265822231768] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [62, 19, 0]]
** centroid: 1, normalized-entropy: 0.785889583138768, [(1, 62), (2, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 20, 0]]
** centroid: 3, normalized-entropy: 0.868533960265235, [(1, 49), (2, 20)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [4, 71, 1]]
** centroid: 4, normalized-entropy: 0.3003914173647818, [(1, 4), (2, 71)]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 64, 11]]
** centroid: 6, normalized-entropy: 0.6014353864290773, [(2, 64), (3, 11)]
*** center 7: selecting labels [1] (freq >= 2) [from [42, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2378885015179403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2378885015179403, 0.16339631861634552] ***
*** starting iteration: 2; err: [Inf, 0.2378885015179403, 0.16339631861634552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2378885015179403, 0.16339631861634552, 0.15570519162900745] ***
*** starting iteration: 3; err: [Inf, 0.2378885015179403, 0.16339631861634552, 0.15570519162900745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2378885015179403, 0.16339631861634552, 0.15570519162900745, 0.15017364693898708] ***
*** starting iteration: 4; err: [Inf, 0.2378885015179403, 0.16339631861634552, 0.15570519162900745, 0.15017364693898708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2378885015179403, 0.16339631861634552, 0.15570519162900745, 0.15017364693898708, 0.14778053332678973] ***
*** starting iteration: 5; err: [Inf, 0.2378885015179403, 0.16339631861634552, 0.15570519162900745, 0.15017364693898708, 0.14778053332678973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2378885015179403, 0.16339631861634552, 0.15570519162900745, 0.15017364693898708, 0.14778053332678973, 0.14665359603241085] ***
*** starting iteration: 6; err: [Inf, 0.2378885015179403, 0.16339631861634552, 0.15570519162900745, 0.15017364693898708, 0.14778053332678973, 0.14665359603241085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2378885015179403, 0.16339631861634552, 0.15570519162900745, 0.15017364693898708, 0.14778053332678973, 0.14665359603241085, 0.14575014051795004] ***
*** finished computation of 7 references, err: [Inf, 0.2378885015179403, 0.16339631861634552, 0.15570519162900745, 0.15017364693898708, 0.14778053332678973, 0.14665359603241085, 0.14575014051795004] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [84, 5, 0]]
** centroid: 1, normalized-entropy: 0.3120895659343452, [(1, 84), (2, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 38, 13]]
** centroid: 3, normalized-entropy: 0.8189555018403103, [(2, 38), (3, 13)]
*** center 4: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [26, 48, 0]]
** centroid: 5, normalized-entropy: 0.9352691398683568, [(1, 26), (2, 48)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [58, 14, 0]]
** centroid: 6, normalized-entropy: 0.710676853856123, [(1, 58), (2, 14)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 71, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23400103188958019] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23400103188958019, 0.16124471178464592] ***
*** starting iteration: 2; err: [Inf, 0.23400103188958019, 0.16124471178464592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23400103188958019, 0.16124471178464592, 0.15118610033486038] ***
*** starting iteration: 3; err: [Inf, 0.23400103188958019, 0.16124471178464592, 0.15118610033486038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23400103188958019, 0.16124471178464592, 0.15118610033486038, 0.14845003124698997] ***
*** starting iteration: 4; err: [Inf, 0.23400103188958019, 0.16124471178464592, 0.15118610033486038, 0.14845003124698997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23400103188958019, 0.16124471178464592, 0.15118610033486038, 0.14845003124698997, 0.14634263488464058] ***
*** starting iteration: 5; err: [Inf, 0.23400103188958019, 0.16124471178464592, 0.15118610033486038, 0.14845003124698997, 0.14634263488464058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23400103188958019, 0.16124471178464592, 0.15118610033486038, 0.14845003124698997, 0.14634263488464058, 0.14517503196559847] ***
*** starting iteration: 6; err: [Inf, 0.23400103188958019, 0.16124471178464592, 0.15118610033486038, 0.14845003124698997, 0.14634263488464058, 0.14517503196559847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23400103188958019, 0.16124471178464592, 0.15118610033486038, 0.14845003124698997, 0.14634263488464058, 0.14517503196559847, 0.14485902143456042] ***
*** finished computation of 7 references, err: [Inf, 0.23400103188958019, 0.16124471178464592, 0.15118610033486038, 0.14845003124698997, 0.14634263488464058, 0.14517503196559847, 0.14485902143456042] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [5, 56, 0]]
** centroid: 1, normalized-entropy: 0.4090731390438265, [(1, 5), (2, 56)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [80, 20, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(1, 80), (2, 20)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 51, 18]]
** centroid: 3, normalized-entropy: 0.828055725379504, [(2, 51), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [20, 40, 0]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(1, 20), (2, 40)]
*** center 5: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [49, 2, 0]]
** centroid: 7, normalized-entropy: 0.23868451135100152, [(1, 49), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1659437631308101] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1659437631308101, 0.14811490034870803] ***
*** starting iteration: 2; err: [Inf, 0.1659437631308101, 0.14811490034870803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1659437631308101, 0.14811490034870803, 0.14654293225333095] ***
*** starting iteration: 3; err: [Inf, 0.1659437631308101, 0.14811490034870803, 0.14654293225333095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1659437631308101, 0.14811490034870803, 0.14654293225333095, 0.14638137273862958] ***
*** finished computation of 7 references, err: [Inf, 0.1659437631308101, 0.14811490034870803, 0.14654293225333095, 0.14638137273862958] ***
*** center 1: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [62, 8, 0]]
** centroid: 3, normalized-entropy: 0.5127091420308771, [(1, 62), (2, 8)]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 65, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 82, 14]]
** centroid: 5, normalized-entropy: 0.5993142373098089, [(2, 82), (3, 14)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [46, 32, 0]]
** centroid: 6, normalized-entropy: 0.9766349114440099, [(1, 46), (2, 32)]
*** center 7: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3180433385688812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3180433385688812, 0.19596806619502605] ***
*** starting iteration: 2; err: [Inf, 0.3180433385688812, 0.19596806619502605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3180433385688812, 0.19596806619502605, 0.17801739395502955] ***
*** starting iteration: 3; err: [Inf, 0.3180433385688812, 0.19596806619502605, 0.17801739395502955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3180433385688812, 0.19596806619502605, 0.17801739395502955, 0.16046771403076127] ***
*** starting iteration: 4; err: [Inf, 0.3180433385688812, 0.19596806619502605, 0.17801739395502955, 0.16046771403076127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3180433385688812, 0.19596806619502605, 0.17801739395502955, 0.16046771403076127, 0.15468666057102382] ***
*** starting iteration: 5; err: [Inf, 0.3180433385688812, 0.19596806619502605, 0.17801739395502955, 0.16046771403076127, 0.15468666057102382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3180433385688812, 0.19596806619502605, 0.17801739395502955, 0.16046771403076127, 0.15468666057102382, 0.15147275774925947] ***
*** starting iteration: 6; err: [Inf, 0.3180433385688812, 0.19596806619502605, 0.17801739395502955, 0.16046771403076127, 0.15468666057102382, 0.15147275774925947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3180433385688812, 0.19596806619502605, 0.17801739395502955, 0.16046771403076127, 0.15468666057102382, 0.15147275774925947, 0.1493891167603433] ***
*** starting iteration: 7; err: [Inf, 0.3180433385688812, 0.19596806619502605, 0.17801739395502955, 0.16046771403076127, 0.15468666057102382, 0.15147275774925947, 0.1493891167603433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3180433385688812, 0.19596806619502605, 0.17801739395502955, 0.16046771403076127, 0.15468666057102382, 0.15147275774925947, 0.1493891167603433, 0.14862817814946175] ***
*** finished computation of 7 references, err: [Inf, 0.3180433385688812, 0.19596806619502605, 0.17801739395502955, 0.16046771403076127, 0.15468666057102382, 0.15147275774925947, 0.1493891167603433, 0.14862817814946175] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 52, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [51, 36, 0]]
** centroid: 2, normalized-entropy: 0.9784493292686188, [(1, 51), (2, 36)]
*** center 3: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [35, 28, 0]]
** centroid: 4, normalized-entropy: 0.9910760598382222, [(1, 35), (2, 28)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 46, 15]]
** centroid: 5, normalized-entropy: 0.8047175193210769, [(2, 46), (3, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [78, 8, 0]]
** centroid: 7, normalized-entropy: 0.446481346896803, [(1, 78), (2, 8)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1957140426710248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957140426710248, 0.16477038444764913] ***
*** starting iteration: 2; err: [Inf, 0.1957140426710248, 0.16477038444764913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957140426710248, 0.16477038444764913, 0.15988952342048288] ***
*** starting iteration: 3; err: [Inf, 0.1957140426710248, 0.16477038444764913, 0.15988952342048288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957140426710248, 0.16477038444764913, 0.15988952342048288, 0.15753807834722103] ***
*** starting iteration: 4; err: [Inf, 0.1957140426710248, 0.16477038444764913, 0.15988952342048288, 0.15753807834722103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957140426710248, 0.16477038444764913, 0.15988952342048288, 0.15753807834722103, 0.1558857858804986] ***
*** starting iteration: 5; err: [Inf, 0.1957140426710248, 0.16477038444764913, 0.15988952342048288, 0.15753807834722103, 0.1558857858804986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957140426710248, 0.16477038444764913, 0.15988952342048288, 0.15753807834722103, 0.1558857858804986, 0.15365712063317188] ***
*** starting iteration: 6; err: [Inf, 0.1957140426710248, 0.16477038444764913, 0.15988952342048288, 0.15753807834722103, 0.1558857858804986, 0.15365712063317188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957140426710248, 0.16477038444764913, 0.15988952342048288, 0.15753807834722103, 0.1558857858804986, 0.15365712063317188, 0.15142583564110101] ***
*** starting iteration: 7; err: [Inf, 0.1957140426710248, 0.16477038444764913, 0.15988952342048288, 0.15753807834722103, 0.1558857858804986, 0.15365712063317188, 0.15142583564110101] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957140426710248, 0.16477038444764913, 0.15988952342048288, 0.15753807834722103, 0.1558857858804986, 0.15365712063317188, 0.15142583564110101, 0.14938054926134645] ***
*** starting iteration: 8; err: [Inf, 0.1957140426710248, 0.16477038444764913, 0.15988952342048288, 0.15753807834722103, 0.1558857858804986, 0.15365712063317188, 0.15142583564110101, 0.14938054926134645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957140426710248, 0.16477038444764913, 0.15988952342048288, 0.15753807834722103, 0.1558857858804986, 0.15365712063317188, 0.15142583564110101, 0.14938054926134645, 0.1485101269092411] ***
*** finished computation of 7 references, err: [Inf, 0.1957140426710248, 0.16477038444764913, 0.15988952342048288, 0.15753807834722103, 0.1558857858804986, 0.15365712063317188, 0.15142583564110101, 0.14938054926134645, 0.1485101269092411] ***
*** center 1: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 59, 12]]
** centroid: 4, normalized-entropy: 0.6554444445609846, [(2, 59), (3, 12)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [32, 46, 0]]
** centroid: 5, normalized-entropy: 0.9766349114440099, [(1, 32), (2, 46)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [16, 53, 0]]
** centroid: 6, normalized-entropy: 0.7812812090702043, [(1, 16), (2, 53)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [64, 24, 0]]
** centroid: 7, normalized-entropy: 0.8453509366224364, [(1, 64), (2, 24)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24900071682594715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24900071682594715, 0.1691937297694385] ***
*** starting iteration: 2; err: [Inf, 0.24900071682594715, 0.1691937297694385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24900071682594715, 0.1691937297694385, 0.1633469982482493] ***
*** starting iteration: 3; err: [Inf, 0.24900071682594715, 0.1691937297694385, 0.1633469982482493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24900071682594715, 0.1691937297694385, 0.1633469982482493, 0.16012499133497476] ***
*** starting iteration: 4; err: [Inf, 0.24900071682594715, 0.1691937297694385, 0.1633469982482493, 0.16012499133497476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24900071682594715, 0.1691937297694385, 0.1633469982482493, 0.16012499133497476, 0.15733890807442366] ***
*** starting iteration: 5; err: [Inf, 0.24900071682594715, 0.1691937297694385, 0.1633469982482493, 0.16012499133497476, 0.15733890807442366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24900071682594715, 0.1691937297694385, 0.1633469982482493, 0.16012499133497476, 0.15733890807442366, 0.1549466997589916] ***
*** starting iteration: 6; err: [Inf, 0.24900071682594715, 0.1691937297694385, 0.1633469982482493, 0.16012499133497476, 0.15733890807442366, 0.1549466997589916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24900071682594715, 0.1691937297694385, 0.1633469982482493, 0.16012499133497476, 0.15733890807442366, 0.1549466997589916, 0.15250140331685544] ***
*** starting iteration: 7; err: [Inf, 0.24900071682594715, 0.1691937297694385, 0.1633469982482493, 0.16012499133497476, 0.15733890807442366, 0.1549466997589916, 0.15250140331685544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24900071682594715, 0.1691937297694385, 0.1633469982482493, 0.16012499133497476, 0.15733890807442366, 0.1549466997589916, 0.15250140331685544, 0.15093720373976977] ***
*** starting iteration: 8; err: [Inf, 0.24900071682594715, 0.1691937297694385, 0.1633469982482493, 0.16012499133497476, 0.15733890807442366, 0.1549466997589916, 0.15250140331685544, 0.15093720373976977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24900071682594715, 0.1691937297694385, 0.1633469982482493, 0.16012499133497476, 0.15733890807442366, 0.1549466997589916, 0.15250140331685544, 0.15093720373976977, 0.15039562303200363] ***
*** finished computation of 7 references, err: [Inf, 0.24900071682594715, 0.1691937297694385, 0.1633469982482493, 0.16012499133497476, 0.15733890807442366, 0.1549466997589916, 0.15250140331685544, 0.15093720373976977, 0.15039562303200363] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [10, 61, 0]]
** centroid: 1, normalized-entropy: 0.5864477034453907, [(1, 10), (2, 61)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 45, 15]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 45), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [23, 60, 0]]
** centroid: 3, normalized-entropy: 0.8514808683852091, [(1, 23), (2, 60)]
*** center 4: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [81, 7, 0]]
** centroid: 7, normalized-entropy: 0.40057554263664, [(1, 81), (2, 7)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20159410010650755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20159410010650755, 0.17066238832473754] ***
*** starting iteration: 2; err: [Inf, 0.20159410010650755, 0.17066238832473754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20159410010650755, 0.17066238832473754, 0.16142486807797105] ***
*** starting iteration: 3; err: [Inf, 0.20159410010650755, 0.17066238832473754, 0.16142486807797105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20159410010650755, 0.17066238832473754, 0.16142486807797105, 0.15741524894721806] ***
*** starting iteration: 4; err: [Inf, 0.20159410010650755, 0.17066238832473754, 0.16142486807797105, 0.15741524894721806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20159410010650755, 0.17066238832473754, 0.16142486807797105, 0.15741524894721806, 0.15470807197131217] ***
*** starting iteration: 5; err: [Inf, 0.20159410010650755, 0.17066238832473754, 0.16142486807797105, 0.15741524894721806, 0.15470807197131217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20159410010650755, 0.17066238832473754, 0.16142486807797105, 0.15741524894721806, 0.15470807197131217, 0.1529206012468785] ***
*** starting iteration: 6; err: [Inf, 0.20159410010650755, 0.17066238832473754, 0.16142486807797105, 0.15741524894721806, 0.15470807197131217, 0.1529206012468785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20159410010650755, 0.17066238832473754, 0.16142486807797105, 0.15741524894721806, 0.15470807197131217, 0.1529206012468785, 0.1517501436509192] ***
*** starting iteration: 7; err: [Inf, 0.20159410010650755, 0.17066238832473754, 0.16142486807797105, 0.15741524894721806, 0.15470807197131217, 0.1529206012468785, 0.1517501436509192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20159410010650755, 0.17066238832473754, 0.16142486807797105, 0.15741524894721806, 0.15470807197131217, 0.1529206012468785, 0.1517501436509192, 0.15135681972280143] ***
*** finished computation of 7 references, err: [Inf, 0.20159410010650755, 0.17066238832473754, 0.16142486807797105, 0.15741524894721806, 0.15470807197131217, 0.1529206012468785, 0.1517501436509192, 0.15135681972280143] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 58, 15]]
** centroid: 1, normalized-entropy: 0.7327525499549903, [(2, 58), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [84, 29, 0]]
** centroid: 2, normalized-entropy: 0.8216292954053165, [(1, 84), (2, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 35, 0]]
** centroid: 4, normalized-entropy: 0.9967916319816367, [(1, 40), (2, 35)]
*** center 5: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 55, 0]]
** centroid: 6, normalized-entropy: 0.29367630985136944, [(1, 3), (2, 55)]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22462157313525677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22462157313525677, 0.18188448552787304] ***
*** starting iteration: 2; err: [Inf, 0.22462157313525677, 0.18188448552787304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017] ***
*** starting iteration: 3; err: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017, 0.16351221993006765] ***
*** starting iteration: 4; err: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017, 0.16351221993006765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017, 0.16351221993006765, 0.1599764965409413] ***
*** starting iteration: 5; err: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017, 0.16351221993006765, 0.1599764965409413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017, 0.16351221993006765, 0.1599764965409413, 0.15653832776471974] ***
*** starting iteration: 6; err: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017, 0.16351221993006765, 0.1599764965409413, 0.15653832776471974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017, 0.16351221993006765, 0.1599764965409413, 0.15653832776471974, 0.15392670005746187] ***
*** starting iteration: 7; err: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017, 0.16351221993006765, 0.1599764965409413, 0.15653832776471974, 0.15392670005746187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017, 0.16351221993006765, 0.1599764965409413, 0.15653832776471974, 0.15392670005746187, 0.15241572138713672] ***
*** starting iteration: 8; err: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017, 0.16351221993006765, 0.1599764965409413, 0.15653832776471974, 0.15392670005746187, 0.15241572138713672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017, 0.16351221993006765, 0.1599764965409413, 0.15653832776471974, 0.15392670005746187, 0.15241572138713672, 0.15112999398913235] ***
*** starting iteration: 9; err: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017, 0.16351221993006765, 0.1599764965409413, 0.15653832776471974, 0.15392670005746187, 0.15241572138713672, 0.15112999398913235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017, 0.16351221993006765, 0.1599764965409413, 0.15653832776471974, 0.15392670005746187, 0.15241572138713672, 0.15112999398913235, 0.1505054787285626] ***
*** finished computation of 7 references, err: [Inf, 0.22462157313525677, 0.18188448552787304, 0.16974044234585017, 0.16351221993006765, 0.1599764965409413, 0.15653832776471974, 0.15392670005746187, 0.15241572138713672, 0.15112999398913235, 0.1505054787285626] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 46, 11]]
** centroid: 1, normalized-entropy: 0.7076690004167966, [(2, 46), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [77, 15, 0]]
** centroid: 3, normalized-entropy: 0.6415410585827175, [(1, 77), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [4, 52, 0]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(1, 4), (2, 52)]
*** center 5: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [13, 64, 0]]
** centroid: 6, normalized-entropy: 0.6550239908788728, [(1, 13), (2, 64)]
*** center 7: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22637847010884435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22637847010884435, 0.16612809768225997] ***
*** starting iteration: 2; err: [Inf, 0.22637847010884435, 0.16612809768225997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22637847010884435, 0.16612809768225997, 0.16079451010446064] ***
*** starting iteration: 3; err: [Inf, 0.22637847010884435, 0.16612809768225997, 0.16079451010446064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22637847010884435, 0.16612809768225997, 0.16079451010446064, 0.15840099190548063] ***
*** starting iteration: 4; err: [Inf, 0.22637847010884435, 0.16612809768225997, 0.16079451010446064, 0.15840099190548063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22637847010884435, 0.16612809768225997, 0.16079451010446064, 0.15840099190548063, 0.1567424556137994] ***
*** starting iteration: 5; err: [Inf, 0.22637847010884435, 0.16612809768225997, 0.16079451010446064, 0.15840099190548063, 0.1567424556137994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22637847010884435, 0.16612809768225997, 0.16079451010446064, 0.15840099190548063, 0.1567424556137994, 0.15604256073012948] ***
*** finished computation of 7 references, err: [Inf, 0.22637847010884435, 0.16612809768225997, 0.16079451010446064, 0.15840099190548063, 0.1567424556137994, 0.15604256073012948] ***
*** center 1: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 53, 7]]
** centroid: 2, normalized-entropy: 0.5197027865043053, [(2, 53), (3, 7)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [47, 25, 0]]
** centroid: 3, normalized-entropy: 0.9315627684809641, [(1, 47), (2, 25)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 75, 8]]
** centroid: 4, normalized-entropy: 0.4574321808988397, [(2, 75), (3, 8)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [64, 20, 0]]
** centroid: 5, normalized-entropy: 0.7918583525674836, [(1, 64), (2, 20)]
*** center 6: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21146742681413888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21146742681413888, 0.157226758393459] ***
*** starting iteration: 2; err: [Inf, 0.21146742681413888, 0.157226758393459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21146742681413888, 0.157226758393459, 0.15114537411089987] ***
*** starting iteration: 3; err: [Inf, 0.21146742681413888, 0.157226758393459, 0.15114537411089987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21146742681413888, 0.157226758393459, 0.15114537411089987, 0.1504515604423359] ***
*** finished computation of 7 references, err: [Inf, 0.21146742681413888, 0.157226758393459, 0.15114537411089987, 0.1504515604423359] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 54, 13]]
** centroid: 1, normalized-entropy: 0.709825885194168, [(2, 54), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [85, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 68, 1]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [51, 20, 0]]
** centroid: 5, normalized-entropy: 0.8577435372751958, [(1, 51), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [59, 18, 0]]
** centroid: 6, normalized-entropy: 0.7845191388986644, [(1, 59), (2, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19247444153763354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19247444153763354, 0.16551053312048317] ***
*** starting iteration: 2; err: [Inf, 0.19247444153763354, 0.16551053312048317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19247444153763354, 0.16551053312048317, 0.15737032567244022] ***
*** starting iteration: 3; err: [Inf, 0.19247444153763354, 0.16551053312048317, 0.15737032567244022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19247444153763354, 0.16551053312048317, 0.15737032567244022, 0.15438203676301054] ***
*** starting iteration: 4; err: [Inf, 0.19247444153763354, 0.16551053312048317, 0.15737032567244022, 0.15438203676301054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19247444153763354, 0.16551053312048317, 0.15737032567244022, 0.15438203676301054, 0.15157532742246985] ***
*** starting iteration: 5; err: [Inf, 0.19247444153763354, 0.16551053312048317, 0.15737032567244022, 0.15438203676301054, 0.15157532742246985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19247444153763354, 0.16551053312048317, 0.15737032567244022, 0.15438203676301054, 0.15157532742246985, 0.15022100679669528] ***
*** starting iteration: 6; err: [Inf, 0.19247444153763354, 0.16551053312048317, 0.15737032567244022, 0.15438203676301054, 0.15157532742246985, 0.15022100679669528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19247444153763354, 0.16551053312048317, 0.15737032567244022, 0.15438203676301054, 0.15157532742246985, 0.15022100679669528, 0.1498543349998072] ***
*** finished computation of 7 references, err: [Inf, 0.19247444153763354, 0.16551053312048317, 0.15737032567244022, 0.15438203676301054, 0.15157532742246985, 0.15022100679669528, 0.1498543349998072] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [24, 46, 0]]
** centroid: 1, normalized-entropy: 0.927526588431676, [(1, 24), (2, 46)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 40, 10]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 40), (3, 10)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 58, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [34, 33, 0]]
** centroid: 4, normalized-entropy: 0.9998393017810486, [(1, 34), (2, 33)]
*** center 5: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [90, 15, 0]]
** centroid: 6, normalized-entropy: 0.5916727785823274, [(1, 90), (2, 15)]
*** center 7: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2310471409149468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2310471409149468, 0.16584725560899824] ***
*** starting iteration: 2; err: [Inf, 0.2310471409149468, 0.16584725560899824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2310471409149468, 0.16584725560899824, 0.15511377709079535] ***
*** starting iteration: 3; err: [Inf, 0.2310471409149468, 0.16584725560899824, 0.15511377709079535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2310471409149468, 0.16584725560899824, 0.15511377709079535, 0.15240938611794264] ***
*** starting iteration: 4; err: [Inf, 0.2310471409149468, 0.16584725560899824, 0.15511377709079535, 0.15240938611794264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2310471409149468, 0.16584725560899824, 0.15511377709079535, 0.15240938611794264, 0.1517774545121938] ***
*** finished computation of 7 references, err: [Inf, 0.2310471409149468, 0.16584725560899824, 0.15511377709079535, 0.15240938611794264, 0.1517774545121938] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 92, 17]]
** centroid: 1, normalized-entropy: 0.6245644324971011, [(2, 92), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [44, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [41, 23, 0]]
** centroid: 4, normalized-entropy: 0.9421631690835511, [(1, 41), (2, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [39, 26, 0]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(1, 39), (2, 26)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [55, 13, 0]]
** centroid: 6, normalized-entropy: 0.7039260680195971, [(1, 55), (2, 13)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [71, 19, 0]]
** centroid: 7, normalized-entropy: 0.7436012269934466, [(1, 71), (2, 19)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22816660710051656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22816660710051656, 0.17609040750749408] ***
*** starting iteration: 2; err: [Inf, 0.22816660710051656, 0.17609040750749408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22816660710051656, 0.17609040750749408, 0.16467150355130433] ***
*** starting iteration: 3; err: [Inf, 0.22816660710051656, 0.17609040750749408, 0.16467150355130433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22816660710051656, 0.17609040750749408, 0.16467150355130433, 0.15808680805470796] ***
*** starting iteration: 4; err: [Inf, 0.22816660710051656, 0.17609040750749408, 0.16467150355130433, 0.15808680805470796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22816660710051656, 0.17609040750749408, 0.16467150355130433, 0.15808680805470796, 0.1548671231730841] ***
*** starting iteration: 5; err: [Inf, 0.22816660710051656, 0.17609040750749408, 0.16467150355130433, 0.15808680805470796, 0.1548671231730841] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22816660710051656, 0.17609040750749408, 0.16467150355130433, 0.15808680805470796, 0.1548671231730841, 0.15341928595956414] ***
*** starting iteration: 6; err: [Inf, 0.22816660710051656, 0.17609040750749408, 0.16467150355130433, 0.15808680805470796, 0.1548671231730841, 0.15341928595956414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22816660710051656, 0.17609040750749408, 0.16467150355130433, 0.15808680805470796, 0.1548671231730841, 0.15341928595956414, 0.15299062430672347] ***
*** finished computation of 7 references, err: [Inf, 0.22816660710051656, 0.17609040750749408, 0.16467150355130433, 0.15808680805470796, 0.1548671231730841, 0.15341928595956414, 0.15299062430672347] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 70, 16]]
** centroid: 1, normalized-entropy: 0.6931274153282881, [(2, 70), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [44, 36, 0]]
** centroid: 2, normalized-entropy: 0.9927744539878083, [(1, 44), (2, 36)]
*** center 3: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [14, 42, 0]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(1, 14), (2, 42)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [84, 24, 0]]
** centroid: 5, normalized-entropy: 0.7642045065086204, [(1, 84), (2, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1813387049753219] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1813387049753219, 0.16397712909057735] ***
*** starting iteration: 2; err: [Inf, 0.1813387049753219, 0.16397712909057735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1813387049753219, 0.16397712909057735, 0.15926865606568755] ***
*** starting iteration: 3; err: [Inf, 0.1813387049753219, 0.16397712909057735, 0.15926865606568755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1813387049753219, 0.16397712909057735, 0.15926865606568755, 0.15689282806683333] ***
*** starting iteration: 4; err: [Inf, 0.1813387049753219, 0.16397712909057735, 0.15926865606568755, 0.15689282806683333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1813387049753219, 0.16397712909057735, 0.15926865606568755, 0.15689282806683333, 0.1538453406430781] ***
*** starting iteration: 5; err: [Inf, 0.1813387049753219, 0.16397712909057735, 0.15926865606568755, 0.15689282806683333, 0.1538453406430781] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1813387049753219, 0.16397712909057735, 0.15926865606568755, 0.15689282806683333, 0.1538453406430781, 0.15158508875174448] ***
*** starting iteration: 6; err: [Inf, 0.1813387049753219, 0.16397712909057735, 0.15926865606568755, 0.15689282806683333, 0.1538453406430781, 0.15158508875174448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1813387049753219, 0.16397712909057735, 0.15926865606568755, 0.15689282806683333, 0.1538453406430781, 0.15158508875174448, 0.15063982695527375] ***
*** finished computation of 7 references, err: [Inf, 0.1813387049753219, 0.16397712909057735, 0.15926865606568755, 0.15689282806683333, 0.1538453406430781, 0.15158508875174448, 0.15063982695527375] ***
*** center 1: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 62, 13]]
** centroid: 3, normalized-entropy: 0.6652735227649414, [(2, 62), (3, 13)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [35, 33, 0]]
** centroid: 4, normalized-entropy: 0.9993759069576513, [(1, 35), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [55, 2, 0]]
** centroid: 5, normalized-entropy: 0.2192973081321754, [(1, 55), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [68, 33, 0]]
** centroid: 6, normalized-entropy: 0.9115532734067251, [(1, 68), (2, 33)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [10, 55, 0]]
** centroid: 7, normalized-entropy: 0.6193821946787638, [(1, 10), (2, 55)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21911005486315116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21911005486315116, 0.17554255490005016] ***
*** starting iteration: 2; err: [Inf, 0.21911005486315116, 0.17554255490005016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21911005486315116, 0.17554255490005016, 0.16250974406208843] ***
*** starting iteration: 3; err: [Inf, 0.21911005486315116, 0.17554255490005016, 0.16250974406208843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21911005486315116, 0.17554255490005016, 0.16250974406208843, 0.15878239736333488] ***
*** starting iteration: 4; err: [Inf, 0.21911005486315116, 0.17554255490005016, 0.16250974406208843, 0.15878239736333488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21911005486315116, 0.17554255490005016, 0.16250974406208843, 0.15878239736333488, 0.1577600424103439] ***
*** starting iteration: 5; err: [Inf, 0.21911005486315116, 0.17554255490005016, 0.16250974406208843, 0.15878239736333488, 0.1577600424103439] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21911005486315116, 0.17554255490005016, 0.16250974406208843, 0.15878239736333488, 0.1577600424103439, 0.15725085514690726] ***
*** finished computation of 7 references, err: [Inf, 0.21911005486315116, 0.17554255490005016, 0.16250974406208843, 0.15878239736333488, 0.1577600424103439, 0.15725085514690726] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 55, 2]]
** centroid: 1, normalized-entropy: 0.2192973081321754, [(2, 55), (3, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 61, 10]]
** centroid: 3, normalized-entropy: 0.5864477034453907, [(2, 61), (3, 10)]
*** center 4: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [32, 33, 0]]
** centroid: 5, normalized-entropy: 0.9998292601233937, [(1, 32), (2, 33)]
*** center 6: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [78, 27, 0]]
** centroid: 7, normalized-entropy: 0.8224042259549892, [(1, 78), (2, 27)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1785160754295066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1785160754295066, 0.16108391653746368] ***
*** starting iteration: 2; err: [Inf, 0.1785160754295066, 0.16108391653746368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1785160754295066, 0.16108391653746368, 0.15789434463717045] ***
*** starting iteration: 3; err: [Inf, 0.1785160754295066, 0.16108391653746368, 0.15789434463717045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1785160754295066, 0.16108391653746368, 0.15789434463717045, 0.15632234664075076] ***
*** starting iteration: 4; err: [Inf, 0.1785160754295066, 0.16108391653746368, 0.15789434463717045, 0.15632234664075076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1785160754295066, 0.16108391653746368, 0.15789434463717045, 0.15632234664075076, 0.1546003365619108] ***
*** starting iteration: 5; err: [Inf, 0.1785160754295066, 0.16108391653746368, 0.15789434463717045, 0.15632234664075076, 0.1546003365619108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1785160754295066, 0.16108391653746368, 0.15789434463717045, 0.15632234664075076, 0.1546003365619108, 0.15174236252252013] ***
*** starting iteration: 6; err: [Inf, 0.1785160754295066, 0.16108391653746368, 0.15789434463717045, 0.15632234664075076, 0.1546003365619108, 0.15174236252252013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1785160754295066, 0.16108391653746368, 0.15789434463717045, 0.15632234664075076, 0.1546003365619108, 0.15174236252252013, 0.1495406322143972] ***
*** starting iteration: 7; err: [Inf, 0.1785160754295066, 0.16108391653746368, 0.15789434463717045, 0.15632234664075076, 0.1546003365619108, 0.15174236252252013, 0.1495406322143972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1785160754295066, 0.16108391653746368, 0.15789434463717045, 0.15632234664075076, 0.1546003365619108, 0.15174236252252013, 0.1495406322143972, 0.14834674966149033] ***
*** starting iteration: 8; err: [Inf, 0.1785160754295066, 0.16108391653746368, 0.15789434463717045, 0.15632234664075076, 0.1546003365619108, 0.15174236252252013, 0.1495406322143972, 0.14834674966149033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1785160754295066, 0.16108391653746368, 0.15789434463717045, 0.15632234664075076, 0.1546003365619108, 0.15174236252252013, 0.1495406322143972, 0.14834674966149033, 0.14785774530656637] ***
*** finished computation of 7 references, err: [Inf, 0.1785160754295066, 0.16108391653746368, 0.15789434463717045, 0.15632234664075076, 0.1546003365619108, 0.15174236252252013, 0.1495406322143972, 0.14834674966149033, 0.14785774530656637] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [46, 3, 0]]
** centroid: 1, normalized-entropy: 0.3322866302216152, [(1, 46), (2, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [76, 2, 0]]
** centroid: 3, normalized-entropy: 0.17203694935311387, [(1, 76), (2, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 34, 14]]
** centroid: 5, normalized-entropy: 0.8708644692353648, [(2, 34), (3, 14)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 86, 0]]
** centroid: 6, normalized-entropy: 0.3478169135710632, [(1, 6), (2, 86)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [6, 65, 0]]
** centroid: 7, normalized-entropy: 0.4178642624458583, [(1, 6), (2, 65)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.207896433448419] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.207896433448419, 0.14882812145352364] ***
*** starting iteration: 2; err: [Inf, 0.207896433448419, 0.14882812145352364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.207896433448419, 0.14882812145352364, 0.14715842857211828] ***
*** starting iteration: 3; err: [Inf, 0.207896433448419, 0.14882812145352364, 0.14715842857211828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.207896433448419, 0.14882812145352364, 0.14715842857211828, 0.14686253681592643] ***
*** finished computation of 7 references, err: [Inf, 0.207896433448419, 0.14882812145352364, 0.14715842857211828, 0.14686253681592643] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [4, 55, 0]]
** centroid: 1, normalized-entropy: 0.3576467062456333, [(1, 4), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 2, 0]]
** centroid: 2, normalized-entropy: 0.1792560669283214, [(1, 72), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 46, 11]]
** centroid: 3, normalized-entropy: 0.7076690004167966, [(2, 46), (3, 11)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [15, 78, 0]]
** centroid: 4, normalized-entropy: 0.6373874992221911, [(1, 15), (2, 78)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [65, 7, 0]]
** centroid: 5, normalized-entropy: 0.460127886147135, [(1, 65), (2, 7)]
*** center 6: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23739313864521683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23739313864521683, 0.16018650281615554] ***
*** starting iteration: 2; err: [Inf, 0.23739313864521683, 0.16018650281615554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23739313864521683, 0.16018650281615554, 0.1520329498760402] ***
*** starting iteration: 3; err: [Inf, 0.23739313864521683, 0.16018650281615554, 0.1520329498760402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23739313864521683, 0.16018650281615554, 0.1520329498760402, 0.14951171649992465] ***
*** starting iteration: 4; err: [Inf, 0.23739313864521683, 0.16018650281615554, 0.1520329498760402, 0.14951171649992465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23739313864521683, 0.16018650281615554, 0.1520329498760402, 0.14951171649992465, 0.14722119212290272] ***
*** starting iteration: 5; err: [Inf, 0.23739313864521683, 0.16018650281615554, 0.1520329498760402, 0.14951171649992465, 0.14722119212290272] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23739313864521683, 0.16018650281615554, 0.1520329498760402, 0.14951171649992465, 0.14722119212290272, 0.14599088932108134] ***
*** starting iteration: 6; err: [Inf, 0.23739313864521683, 0.16018650281615554, 0.1520329498760402, 0.14951171649992465, 0.14722119212290272, 0.14599088932108134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23739313864521683, 0.16018650281615554, 0.1520329498760402, 0.14951171649992465, 0.14722119212290272, 0.14599088932108134, 0.14523605674132706] ***
*** finished computation of 7 references, err: [Inf, 0.23739313864521683, 0.16018650281615554, 0.1520329498760402, 0.14951171649992465, 0.14722119212290272, 0.14599088932108134, 0.14523605674132706] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 45, 13]]
** centroid: 1, normalized-entropy: 0.7676515870125797, [(2, 45), (3, 13)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [3, 84, 0]]
** centroid: 2, normalized-entropy: 0.21639693245126485, [(1, 3), (2, 84)]
*** center 3: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [58, 5, 0]]
** centroid: 4, normalized-entropy: 0.39993804743902767, [(1, 58), (2, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [45, 36, 0]]
** centroid: 7, normalized-entropy: 0.9910760598382222, [(1, 45), (2, 36)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1787689218292944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1787689218292944, 0.15976374248415232] ***
*** starting iteration: 2; err: [Inf, 0.1787689218292944, 0.15976374248415232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1787689218292944, 0.15976374248415232, 0.1546157933957875] ***
*** starting iteration: 3; err: [Inf, 0.1787689218292944, 0.15976374248415232, 0.1546157933957875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1787689218292944, 0.15976374248415232, 0.1546157933957875, 0.15116882069222629] ***
*** starting iteration: 4; err: [Inf, 0.1787689218292944, 0.15976374248415232, 0.1546157933957875, 0.15116882069222629] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1787689218292944, 0.15976374248415232, 0.1546157933957875, 0.15116882069222629, 0.15019939664565027] ***
*** finished computation of 7 references, err: [Inf, 0.1787689218292944, 0.15976374248415232, 0.1546157933957875, 0.15116882069222629, 0.15019939664565027] ***
*** center 1: selecting labels [1] (freq >= 2) [from [52, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 66, 18]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(2, 66), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [65, 22, 0]]
** centroid: 3, normalized-entropy: 0.8158009273789572, [(1, 65), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [4, 57, 0]]
** centroid: 4, normalized-entropy: 0.34918437350730797, [(1, 4), (2, 57)]
*** center 5: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [41, 32, 0]]
** centroid: 6, normalized-entropy: 0.9890076795739703, [(1, 41), (2, 32)]
*** center 7: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21436089641787112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21436089641787112, 0.1652449701288715] ***
*** starting iteration: 2; err: [Inf, 0.21436089641787112, 0.1652449701288715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21436089641787112, 0.1652449701288715, 0.15767539598047733] ***
*** starting iteration: 3; err: [Inf, 0.21436089641787112, 0.1652449701288715, 0.15767539598047733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21436089641787112, 0.1652449701288715, 0.15767539598047733, 0.15380471554584801] ***
*** starting iteration: 4; err: [Inf, 0.21436089641787112, 0.1652449701288715, 0.15767539598047733, 0.15380471554584801] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21436089641787112, 0.1652449701288715, 0.15767539598047733, 0.15380471554584801, 0.15209286461304874] ***
*** starting iteration: 5; err: [Inf, 0.21436089641787112, 0.1652449701288715, 0.15767539598047733, 0.15380471554584801, 0.15209286461304874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21436089641787112, 0.1652449701288715, 0.15767539598047733, 0.15380471554584801, 0.15209286461304874, 0.15170961769204586] ***
*** finished computation of 7 references, err: [Inf, 0.21436089641787112, 0.1652449701288715, 0.15767539598047733, 0.15380471554584801, 0.15209286461304874, 0.15170961769204586] ***
*** center 1: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [46, 30, 0]]
** centroid: 2, normalized-entropy: 0.9677884628267678, [(1, 46), (2, 30)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [14, 61, 0]]
** centroid: 3, normalized-entropy: 0.6944460704939805, [(1, 14), (2, 61)]
*** center 4: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [55, 19, 0]]
** centroid: 5, normalized-entropy: 0.8218127305034848, [(1, 55), (2, 19)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 68, 16]]
** centroid: 6, normalized-entropy: 0.7024665512903904, [(2, 68), (3, 16)]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.16477630053274334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16477630053274334, 0.15698252641782165] ***
*** starting iteration: 2; err: [Inf, 0.16477630053274334, 0.15698252641782165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16477630053274334, 0.15698252641782165, 0.15394284868543037] ***
*** starting iteration: 3; err: [Inf, 0.16477630053274334, 0.15698252641782165, 0.15394284868543037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16477630053274334, 0.15698252641782165, 0.15394284868543037, 0.1516092417538166] ***
*** starting iteration: 4; err: [Inf, 0.16477630053274334, 0.15698252641782165, 0.15394284868543037, 0.1516092417538166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16477630053274334, 0.15698252641782165, 0.15394284868543037, 0.1516092417538166, 0.15020724602416158] ***
*** starting iteration: 5; err: [Inf, 0.16477630053274334, 0.15698252641782165, 0.15394284868543037, 0.1516092417538166, 0.15020724602416158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16477630053274334, 0.15698252641782165, 0.15394284868543037, 0.1516092417538166, 0.15020724602416158, 0.14974556373991071] ***
*** finished computation of 7 references, err: [Inf, 0.16477630053274334, 0.15698252641782165, 0.15394284868543037, 0.1516092417538166, 0.15020724602416158, 0.14974556373991071] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [36, 10, 0]]
** centroid: 1, normalized-entropy: 0.7553754125614286, [(1, 36), (2, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [67, 13, 0]]
** centroid: 4, normalized-entropy: 0.6402569436810504, [(1, 67), (2, 13)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [48, 22, 0]]
** centroid: 5, normalized-entropy: 0.8980587934501658, [(1, 48), (2, 22)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 58, 16]]
** centroid: 6, normalized-entropy: 0.7531979910695015, [(2, 58), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 73, 0]]
** centroid: 7, normalized-entropy: 0.23987382528036535, [(1, 3), (2, 73)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20703897676989436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20703897676989436, 0.1810397663693875] ***
*** starting iteration: 2; err: [Inf, 0.20703897676989436, 0.1810397663693875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20703897676989436, 0.1810397663693875, 0.16631639550533145] ***
*** starting iteration: 3; err: [Inf, 0.20703897676989436, 0.1810397663693875, 0.16631639550533145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20703897676989436, 0.1810397663693875, 0.16631639550533145, 0.1584652349166572] ***
*** starting iteration: 4; err: [Inf, 0.20703897676989436, 0.1810397663693875, 0.16631639550533145, 0.1584652349166572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20703897676989436, 0.1810397663693875, 0.16631639550533145, 0.1584652349166572, 0.1539023605529219] ***
*** starting iteration: 5; err: [Inf, 0.20703897676989436, 0.1810397663693875, 0.16631639550533145, 0.1584652349166572, 0.1539023605529219] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20703897676989436, 0.1810397663693875, 0.16631639550533145, 0.1584652349166572, 0.1539023605529219, 0.15210764739895238] ***
*** starting iteration: 6; err: [Inf, 0.20703897676989436, 0.1810397663693875, 0.16631639550533145, 0.1584652349166572, 0.1539023605529219, 0.15210764739895238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20703897676989436, 0.1810397663693875, 0.16631639550533145, 0.1584652349166572, 0.1539023605529219, 0.15210764739895238, 0.15107511871680618] ***
*** starting iteration: 7; err: [Inf, 0.20703897676989436, 0.1810397663693875, 0.16631639550533145, 0.1584652349166572, 0.1539023605529219, 0.15210764739895238, 0.15107511871680618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20703897676989436, 0.1810397663693875, 0.16631639550533145, 0.1584652349166572, 0.1539023605529219, 0.15210764739895238, 0.15107511871680618, 0.15030477453861385] ***
*** finished computation of 7 references, err: [Inf, 0.20703897676989436, 0.1810397663693875, 0.16631639550533145, 0.1584652349166572, 0.1539023605529219, 0.15210764739895238, 0.15107511871680618, 0.15030477453861385] ***
*** center 1: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [80, 2, 0]]
** centroid: 2, normalized-entropy: 0.16542703399626665, [(1, 80), (2, 2)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 11, 0]]
** centroid: 4, normalized-entropy: 0.6167482598263911, [(1, 61), (2, 11)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [73, 7, 0]]
** centroid: 5, normalized-entropy: 0.4280696292293062, [(1, 73), (2, 7)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 25, 20]]
** centroid: 6, normalized-entropy: 0.9910760598382222, [(2, 25), (3, 20)]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 65, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20801567587908357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20801567587908357, 0.16454670245945455] ***
*** starting iteration: 2; err: [Inf, 0.20801567587908357, 0.16454670245945455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20801567587908357, 0.16454670245945455, 0.157024414264597] ***
*** starting iteration: 3; err: [Inf, 0.20801567587908357, 0.16454670245945455, 0.157024414264597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20801567587908357, 0.16454670245945455, 0.157024414264597, 0.15422937232628464] ***
*** starting iteration: 4; err: [Inf, 0.20801567587908357, 0.16454670245945455, 0.157024414264597, 0.15422937232628464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20801567587908357, 0.16454670245945455, 0.157024414264597, 0.15422937232628464, 0.15275250461511314] ***
*** starting iteration: 5; err: [Inf, 0.20801567587908357, 0.16454670245945455, 0.157024414264597, 0.15422937232628464, 0.15275250461511314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20801567587908357, 0.16454670245945455, 0.157024414264597, 0.15422937232628464, 0.15275250461511314, 0.15203290983568876] ***
*** finished computation of 7 references, err: [Inf, 0.20801567587908357, 0.16454670245945455, 0.157024414264597, 0.15422937232628464, 0.15275250461511314, 0.15203290983568876] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [51, 24, 0]]
** centroid: 1, normalized-entropy: 0.9043814577244941, [(1, 51), (2, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [42, 36, 0]]
** centroid: 3, normalized-entropy: 0.9957274520849256, [(1, 42), (2, 36)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 21, 0]]
** centroid: 4, normalized-entropy: 0.8208002549877175, [(1, 61), (2, 21)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 88, 15]]
** centroid: 5, normalized-entropy: 0.5987981837442868, [(2, 88), (3, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 357,3 => 29,1 => 614), Dict(2 => 357,3 => 26,1 => 617))
[ Info: ===== scores for single classifier: {"micro_f1":0.941,"precision":0.941,"recall":0.941,"macro_recall":0.9504197140768786,"macro_f1":0.8713026785694288,"accuracy":0.941,"class_f1":{"2":0.9136163982430453,"3":0.732394366197183,"1":0.9678972712680578},"class_precision":{"2":0.9570552147239264,"3":0.5777777777777777,"1":0.958664546899841},"class_recall":{"2":0.8739495798319328,"3":1.0,"1":0.9773095623987034}}
[ Info: ===== scores for 1: {"micro_f1":0.97,"precision":0.97,"recall":0.97,"macro_recall":0.9291630711213131,"macro_f1":0.9142136117689663,"accuracy":0.97,"class_f1":{"2":0.958100558659218,"3":0.8,"1":0.9845402766476811},"class_precision":{"2":0.9554317548746518,"3":0.7586206896551724,"1":0.988562091503268},"class_recall":{"2":0.9607843137254902,"3":0.8461538461538461,"1":0.9805510534846029}}
[ Info: ===== scores for 5: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.9768101730157217,"macro_f1":0.9341220286997481,"accuracy":0.968,"class_f1":{"2":0.9553072625698324,"3":0.8666666666666666,"1":0.9803921568627452},"class_precision":{"2":0.9526462395543176,"3":0.7647058823529411,"1":0.9884678747940692},"class_recall":{"2":0.957983193277311,"3":1.0,"1":0.9724473257698542}}
[ Info: ===== scores for 7: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.979611293463901,"macro_f1":0.9507796872256454,"accuracy":0.971,"class_f1":{"2":0.9596662030598051,"3":0.9122807017543859,"1":0.9803921568627452},"class_precision":{"2":0.9530386740331491,"3":0.8387096774193549,"1":0.9884678747940692},"class_recall":{"2":0.9663865546218487,"3":1.0,"1":0.9724473257698542}}
[ Info: ===== scores for 9: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.9784309185586716,"macro_f1":0.9362928468200109,"accuracy":0.971,"class_f1":{"2":0.9593267882187938,"3":0.8666666666666666,"1":0.9828850855745722},"class_precision":{"2":0.9606741573033708,"3":0.7647058823529411,"1":0.9885245901639345},"class_recall":{"2":0.957983193277311,"3":1.0,"1":0.9773095623987034}}
[ Info: ===== scores for 11: {"micro_f1":0.969,"precision":0.969,"recall":0.969,"macro_recall":0.9765635049265519,"macro_f1":0.9259980668020075,"accuracy":0.969,"class_f1":{"2":0.9563994374120957,"3":0.8387096774193548,"1":0.9828850855745722},"class_precision":{"2":0.96045197740113,"3":0.7222222222222222,"1":0.9885245901639345},"class_recall":{"2":0.9523809523809523,"3":1.0,"1":0.9773095623987034}}
(score = 0.97, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.97, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.967, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.967, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.966, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.966, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.971, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.971, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.971,"k":7,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.979611293463901,"macro_f1":0.9507796872256454,"accuracy":0.971,"class_f1":{"2":0.9596662030598051,"3":0.9122807017543859,"1":0.9803921568627452},"class_precision":{"2":0.9530386740331491,"3":0.8387096774193549,"1":0.9884678747940692},"class_recall":{"2":0.9663865546218487,"3":1.0,"1":0.9724473257698542}}
Test Summary: | Pass  Total
AKNC          |    8      8
[263, 5, 7, 1, 2, 2, 6, 2, 8, 4, 3, 2, 2, 3, 11, 7, 7, 1, 2, 8, 4, 7, 7, 4, 10, 1, 48, 18, 12, 12, 2, 12, 1, 8, 6, 9, 1, 1, 7, 13, 37, 29, 10, 3, 7, 29, 8, 28, 6, 17, 8, 13, 10, 15, 22, 2, 1, 54, 22, 2, 3, 17, 13, 10, 13, 5, 3, 38, 14, 5, 1, 18, 3, 18, 9, 25, 18, 5, 22, 5, 62, 40, 13, 5, 10, 25, 22, 1, 17, 16, 3, 13, 24, 32, 7, 20, 2, 24, 66, 1, 15, 38, 21, 16, 16, 4, 8, 81, 7, 69, 14, 9, 3, 7, 26, 4, 13, 6, 38, 132, 49, 102, 24, 3, 120, 4, 8, 8, 27, 71, 8, 47, 53, 6, 6, 42, 6, 10, 76, 8, 81, 1, 1373, 24, 64, 3, 2, 20, 36, 40, 154, 18, 346, 19, 3, 52, 31, 26, 6, 62, 45, 13, 342, 13, 16, 14, 12, 6, 12, 14, 27, 6, 119, 8, 18, 14, 19, 37, 6, 81, 20, 37, 70, 33, 3, 2, 6, 3, 25, 133, 16, 22, 26, 21, 8, 12, 22, 8, 5, 23, 6, 30, 42, 5, 31, 29, 63, 86, 38, 14, 8, 55, 9, 25, 18, 8, 74, 74, 27, 28, 23, 164, 10, 5, 44, 82, 11, 20, 9, 97, 19, 14, 22, 38, 18, 14, 15, 18, 27, 3, 30, 3, 337, 6, 2, 12, 34, 2, 60, 6, 9, 17, 39, 162, 11, 9, 6, 20, 49, 2, 36, 141, 7, 89, 286, 4, 13, 40, 1, 40, 91, 28, 5, 13, 42, 32, 14, 11, 119, 23, 18, 21, 46, 5, 17, 93, 26, 5, 23, 10, 22, 25, 56, 1, 3, 8, 7, 9, 21, 27]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.693, speedup = 0.282227103286542, eval_ratio = 0.10277599999999999)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3787202380952381,"recall":0.3723958333333333,"f1":null,"seconds":0.0001809634268283844,"exhaustive_search_seconds":0.0003635156899690628,"evaluations":528.1640625,"distances_sum":1829.8574307161368}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5403645833333333,"recall":0.5381944444444443,"f1":null,"seconds":0.00030261464416980743,"exhaustive_search_seconds":0.0003635156899690628,"evaluations":724.203125,"distances_sum":1695.1804073333956}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6336805555555552,"recall":0.6336805555555552,"f1":null,"seconds":0.00039440393447875977,"exhaustive_search_seconds":0.0003635156899690628,"evaluations":864.4609375,"distances_sum":1662.544293205714}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7196180555555551,"recall":0.7196180555555551,"f1":0.7196180555555551,"seconds":0.0005374010652303696,"exhaustive_search_seconds":0.0003635156899690628,"evaluations":1054.8984375,"distances_sum":1632.3296990885378}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.777777777777777,"recall":0.777777777777777,"f1":0.777777777777777,"seconds":0.0007822904735803604,"exhaustive_search_seconds":0.0003635156899690628,"evaluations":1207.0703125,"distances_sum":1615.420285862514}
KCenters.DeloneInvIndex> reached performance {"precision":0.8255208333333327,"recall":0.8255208333333327,"f1":0.8255208333333327,"seconds":0.0006716009229421616,"exhaustive_search_seconds":0.0003635156899690628,"evaluations":1309.296875,"distances_sum":1601.2543732513896}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8290000000000002, speedup = 0.4613361117101902, eval_ratio = 0.143823)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
