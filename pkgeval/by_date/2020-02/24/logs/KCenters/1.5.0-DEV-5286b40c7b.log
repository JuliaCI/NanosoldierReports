Julia Version 1.5.0-DEV.327
Commit 5286b40c7b (2020-02-23 16:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Reexport ──────────────────── v0.2.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed InvertedIndices ───────────── v1.0.0
  Installed Parsers ───────────────────── v0.3.11
  Installed OrderedCollections ────────── v1.1.0
  Installed KCenters ──────────────────── v0.2.1
  Installed CategoricalArrays ─────────── v0.7.7
  Installed DataFrames ────────────────── v0.20.2
  Installed Missings ──────────────────── v0.4.3
  Installed MappedArrays ──────────────── v0.2.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed DataAPI ───────────────────── v1.1.0
  Installed Compat ────────────────────── v3.6.0
  Installed SimilaritySearch ──────────── v0.3.19
  Installed LearnBase ─────────────────── v0.2.2
  Installed MLDataPattern ─────────────── v0.5.0
  Installed TableTraits ───────────────── v1.0.0
  Installed MLDataUtils ───────────────── v0.5.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed JSON ──────────────────────── v0.21.0
  Installed Tables ────────────────────── v1.0.2
  Installed DataStructures ────────────── v0.17.9
  Installed StatsBase ─────────────────── v0.32.1
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.6.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.1
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.2
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_l6X2VQ/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.6.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.1
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.2
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9326678744951884
[ Info: 0.8307796732584636
[ Info: 0.5563809144993623
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.33293488835295043
mean(cdnet.distances) = 0.3855708528558413
mean(crand.distances) = 0.342766505976518
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3623046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3623046875,"f1":null,"seconds":3.769993782043457e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":5.5234375,"distances_sum":976.3745243153269}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1728515625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1728515625,"f1":null,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":4.9140625,"distances_sum":457.1277131395566}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8432468573093581,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.0546875,"distances_sum":2125.3278047799267}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.8432468573093581,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.0546875,"distances_sum":2125.3278047799267}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8806412337662345,"seconds":4.844740033149719e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.3984375,"distances_sum":2337.790986786531}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9156770313020322,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.5234375,"distances_sum":2593.862411562415}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8564453125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8564453125,"f1":0.9156770313020322,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.5234375,"distances_sum":2593.862411562415}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.974559294871795,"seconds":8.286908268928528e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.8828125,"distances_sum":3044.2910167709315}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644691,"seconds":1.348927617073059e-5,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.953125,"distances_sum":3032.7654791450855}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9601820054945059,"seconds":1.3209879398345947e-5,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.8203125,"distances_sum":2927.127945427986}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.925203442390943,"seconds":6.575137376785278e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.5546875,"distances_sum":2629.0015431161264}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644691,"seconds":1.348927617073059e-5,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.953125,"distances_sum":3032.7654791450855}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644691,"seconds":1.348927617073059e-5,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.953125,"distances_sum":3032.7654791450855}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8098484848484855,"seconds":9.851530194282532e-6,"exhaustive_search_seconds":3.820285201072693e-6,"evaluations":7.9296875,"distances_sum":1887.734626560042}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.451171875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.451171875,"f1":null,"seconds":3.67872416973114e-6,"exhaustive_search_seconds":3.820285201072693e-6,"evaluations":6.1875,"distances_sum":1125.7659303471337}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6943359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6943359375,"f1":0.8098484848484855,"seconds":9.851530194282532e-6,"exhaustive_search_seconds":3.820285201072693e-6,"evaluations":7.9296875,"distances_sum":1887.734626560042}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8381222943722954,"seconds":5.159527063369751e-6,"exhaustive_search_seconds":3.820285201072693e-6,"evaluations":8.109375,"distances_sum":1974.6015867465956}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8968895687645694,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":3.820285201072693e-6,"evaluations":8.40625,"distances_sum":2332.42327377348}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8639530608280616,"seconds":1.0035932064056396e-5,"exhaustive_search_seconds":3.820285201072693e-6,"evaluations":8.2578125,"distances_sum":2081.4601105965035}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.8968895687645694,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":3.820285201072693e-6,"evaluations":8.40625,"distances_sum":2332.42327377348}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9637133699633701,"seconds":8.841976523399353e-6,"exhaustive_search_seconds":3.820285201072693e-6,"evaluations":8.90625,"distances_sum":2821.4589826980227}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9609088827838831,"seconds":6.67572021484375e-6,"exhaustive_search_seconds":3.820285201072693e-6,"evaluations":8.8671875,"distances_sum":2791.1156469955686}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.908090347152848,"seconds":6.413087248802185e-6,"exhaustive_search_seconds":3.820285201072693e-6,"evaluations":8.5234375,"distances_sum":2361.5114036782097}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9583936896436902,"seconds":1.033395528793335e-5,"exhaustive_search_seconds":3.820285201072693e-6,"evaluations":8.8671875,"distances_sum":2779.7349434448547}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9270609598734606,"seconds":9.492039680480957e-6,"exhaustive_search_seconds":3.820285201072693e-6,"evaluations":8.6640625,"distances_sum":2570.9629886725857}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9637133699633701,"seconds":8.841976523399353e-6,"exhaustive_search_seconds":3.820285201072693e-6,"evaluations":8.90625,"distances_sum":2821.4589826980227}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9637133699633701,"seconds":8.841976523399353e-6,"exhaustive_search_seconds":3.820285201072693e-6,"evaluations":8.90625,"distances_sum":2821.4589826980227}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.862801261238762,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.46875,"distances_sum":2016.0999584024016}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7812952672327681,"seconds":4.3120235204696655e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.578125,"distances_sum":1628.3584156099414}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.862801261238762,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.46875,"distances_sum":2016.0999584024016}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9533195970695975,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8671875,"distances_sum":2668.3111284525057}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9533195970695975,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8671875,"distances_sum":2668.3111284525057}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9648637820512826,"seconds":6.293877959251404e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.921875,"distances_sum":2723.0697573876173}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":9,"bsize":13}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.97950434981685,"seconds":1.383759081363678e-5,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9609375,"distances_sum":2855.648206009207}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9762305402930408,"seconds":1.3940036296844482e-5,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9375,"distances_sum":2839.9442119653845}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":9,"bsize":13},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.97950434981685,"seconds":1.383759081363678e-5,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9609375,"distances_sum":2855.648206009207}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":9,"bsize":13},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.97950434981685,"seconds":1.383759081363678e-5,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9609375,"distances_sum":2855.648206009207}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2021484375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2021484375,"f1":null,"seconds":7.627531886100769e-6,"exhaustive_search_seconds":3.1329691410064697e-6,"evaluations":5.6796875,"distances_sum":524.5223950345506}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2021484375,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2021484375,"f1":null,"seconds":7.627531886100769e-6,"exhaustive_search_seconds":3.1329691410064697e-6,"evaluations":5.6796875,"distances_sum":524.5223950345506}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2021484375,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2021484375,"f1":null,"seconds":7.627531886100769e-6,"exhaustive_search_seconds":3.1329691410064697e-6,"evaluations":5.6796875,"distances_sum":524.5223950345506}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4287109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4287109375,"f1":null,"seconds":3.38628888130188e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.203125,"distances_sum":874.2618445822401}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":3.689900040626526e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.0703125,"distances_sum":875.0506039336583}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2919921875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2919921875,"f1":null,"seconds":7.748603820800781e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.234375,"distances_sum":572.4440091559835}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4287109375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4287109375,"f1":null,"seconds":3.38628888130188e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.203125,"distances_sum":874.2618445822401}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.642578125,"f1":0.7712506243756251,"seconds":7.5660645961761475e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.4140625,"distances_sum":1343.9743393596434}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8934898434898444,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.3515625,"distances_sum":1782.6204541913974}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.713410374347875,"seconds":4.36045229434967e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.984375,"distances_sum":1170.2187273120935}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.541015625,"f1":null,"seconds":4.14624810218811e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.8203125,"distances_sum":1137.1116369272968}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5625,"f1":null,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.9765625,"distances_sum":1163.6163409205808}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8684809981684989,"seconds":6.631016731262207e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.2421875,"distances_sum":1666.1192779634082}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8193359375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8193359375,"f1":0.8934898434898444,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.3515625,"distances_sum":1782.6204541913974}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9098505661005669,"seconds":9.253621101379395e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5234375,"distances_sum":1858.0224200298742}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9512133699633706,"seconds":1.1766329407691956e-5,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2074.1692290448514}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8995369214119222,"seconds":1.095607876777649e-5,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4296875,"distances_sum":1829.845487149406}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.9014995421245431,"seconds":1.1090189218521118e-5,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4375,"distances_sum":1756.728174684965}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9512133699633706,"seconds":1.1766329407691956e-5,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2074.1692290448514}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9512133699633706,"seconds":1.1766329407691956e-5,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2074.1692290448514}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1923828125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1923828125,"f1":null,"seconds":2.814456820487976e-6,"exhaustive_search_seconds":2.3506581783294678e-6,"evaluations":4.390625,"distances_sum":446.7311999818209}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8332917082917091,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":2.3506581783294678e-6,"evaluations":7.890625,"distances_sum":1516.0317185812526}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73046875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.73046875,"f1":0.8332917082917091,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":2.3506581783294678e-6,"evaluations":7.890625,"distances_sum":1516.0317185812526}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8496321386946395,"seconds":1.2267380952835083e-5,"exhaustive_search_seconds":2.3506581783294678e-6,"evaluations":7.9375,"distances_sum":1591.7378732717027}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9221700174825181,"seconds":1.3306736946105957e-5,"exhaustive_search_seconds":2.3506581783294678e-6,"evaluations":8.53125,"distances_sum":1907.2020910461881}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9376259157509163,"seconds":1.2658536434173584e-5,"exhaustive_search_seconds":2.3506581783294678e-6,"evaluations":8.6015625,"distances_sum":1995.15853022631}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9376259157509163,"seconds":1.2658536434173584e-5,"exhaustive_search_seconds":2.3506581783294678e-6,"evaluations":8.6015625,"distances_sum":1995.15853022631}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9741643772893775,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":2.3506581783294678e-6,"evaluations":8.9453125,"distances_sum":2158.7779452391087}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9665006868131872,"seconds":6.53974711894989e-6,"exhaustive_search_seconds":2.3506581783294678e-6,"evaluations":8.8359375,"distances_sum":2142.0459238926214}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9701293498168504,"seconds":8.730217814445496e-6,"exhaustive_search_seconds":2.3506581783294678e-6,"evaluations":8.921875,"distances_sum":2136.434414193939}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9561787171162177,"seconds":7.774680852890015e-6,"exhaustive_search_seconds":2.3506581783294678e-6,"evaluations":8.75,"distances_sum":2082.69991072429}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9741643772893775,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":2.3506581783294678e-6,"evaluations":8.9453125,"distances_sum":2158.7779452391087}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9741643772893775,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":2.3506581783294678e-6,"evaluations":8.9453125,"distances_sum":2158.7779452391087}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8035381285381293,"seconds":6.319954991340637e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":7.8359375,"distances_sum":1395.6567706441263}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.443359375, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.443359375,"f1":0.5984730547230549,"seconds":7.146969437599182e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":6.6875,"distances_sum":889.6341288275243}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6845703125,"f1":0.8035381285381293,"seconds":6.319954991340637e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":7.8359375,"distances_sum":1395.6567706441263}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8950180028305037,"seconds":1.1388212442398071e-5,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.4453125,"distances_sum":1768.5445413522336}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8601539085914096,"seconds":1.255236566066742e-5,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.203125,"distances_sum":1648.2448950691926}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.818359375,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.818359375,"f1":0.8950180028305037,"seconds":1.1388212442398071e-5,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.4453125,"distances_sum":1768.5445413522336}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9561813186813191,"seconds":1.2699514627456665e-5,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.828125,"distances_sum":2179.8242055935016}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9650698260073267,"seconds":1.1686235666275024e-5,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.8203125,"distances_sum":2234.8177184437955}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9263278388278393,"seconds":1.2589618563652039e-5,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.4375,"distances_sum":1974.0022782624685}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9650698260073267,"seconds":1.1686235666275024e-5,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.8203125,"distances_sum":2234.8177184437955}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9650698260073267,"seconds":1.1686235666275024e-5,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.8203125,"distances_sum":2234.8177184437955}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6995724761349766,"seconds":9.94652509689331e-6,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":7.1875,"distances_sum":1194.363678074528}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2734375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2734375,"f1":null,"seconds":9.581446647644043e-6,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":5.75,"distances_sum":692.1769394359978}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7867491883116889,"seconds":1.1006370186805725e-5,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":7.65625,"distances_sum":1461.1480354981845}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.66796875,"f1":0.7867491883116889,"seconds":1.1006370186805725e-5,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":7.65625,"distances_sum":1461.1480354981845}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8751893939393947,"seconds":1.1475756764411926e-5,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":8.1171875,"distances_sum":1815.9029687748173}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8900073884448891,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":8.3359375,"distances_sum":1911.5766903602253}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7974551490176497,"seconds":1.1390075087547302e-5,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":7.703125,"distances_sum":1468.8961352419649}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.818359375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.818359375,"f1":0.8900073884448891,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":8.3359375,"distances_sum":1911.5766903602253}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9300480769230776,"seconds":1.2071803212165833e-5,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":8.3671875,"distances_sum":2146.757437252966}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635989010989017,"seconds":1.2557953596115112e-5,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":8.7421875,"distances_sum":2381.7107807291018}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9655334249084252,"seconds":7.115304470062256e-6,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":8.8359375,"distances_sum":2327.7259843816764}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9331392565767571,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":8.5625,"distances_sum":2161.3261411761505}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9098385989010995,"seconds":4.280358552932739e-6,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":8.4296875,"distances_sum":1999.6791115535373}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9655334249084252,"seconds":7.115304470062256e-6,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":8.8359375,"distances_sum":2327.7259843816764}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9655334249084252,"seconds":7.115304470062256e-6,"exhaustive_search_seconds":3.164634108543396e-6,"evaluations":8.8359375,"distances_sum":2327.7259843816764}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7129500707625713,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":7.25,"distances_sum":1279.7038507507611}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.396484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.396484375,"f1":null,"seconds":4.829838871955872e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":6.0546875,"distances_sum":828.657251249085}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5712890625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5712890625,"f1":0.7129500707625713,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":7.25,"distances_sum":1279.7038507507611}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8067463786213793,"seconds":6.398186087608337e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":7.6875,"distances_sum":1555.7739801452653}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.689453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.689453125,"f1":0.8067463786213793,"seconds":6.398186087608337e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":7.6875,"distances_sum":1555.7739801452653}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.843103771228772,"seconds":1.0363757610321045e-5,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":7.9765625,"distances_sum":1662.0125103148057}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9428342490842496,"seconds":7.08363950252533e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.5078125,"distances_sum":2176.8445723821555}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9428342490842496,"seconds":7.08363950252533e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.5078125,"distances_sum":2176.8445723821555}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8994140625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9428342490842496,"seconds":7.08363950252533e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.5078125,"distances_sum":2176.8445723821555}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.376953125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.376953125,"f1":null,"seconds":4.258006811141968e-6,"exhaustive_search_seconds":1.7173588275909424e-6,"evaluations":5.953125,"distances_sum":768.1441643765777}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1953125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1953125,"f1":null,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":1.7173588275909424e-6,"evaluations":5.1796875,"distances_sum":437.0028528989651}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.376953125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.376953125,"f1":null,"seconds":4.258006811141968e-6,"exhaustive_search_seconds":1.7173588275909424e-6,"evaluations":5.953125,"distances_sum":768.1441643765777}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7080105658230663,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.7173588275909424e-6,"evaluations":7.3984375,"distances_sum":1155.4778479948352}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5634765625,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5634765625,"f1":0.7080105658230663,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.7173588275909424e-6,"evaluations":7.3984375,"distances_sum":1155.4778479948352}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":3,"bsize":4}, perf: {"precision":null,"recall":0.671875,"f1":null,"seconds":3.713555634021759e-5,"exhaustive_search_seconds":1.7173588275909424e-6,"evaluations":7.5703125,"distances_sum":1445.2877919182238}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.671875,"state":{"ssize":3,"bsize":4},"perf":{"precision":null,"recall":0.671875,"f1":null,"seconds":3.713555634021759e-5,"exhaustive_search_seconds":1.7173588275909424e-6,"evaluations":7.5703125,"distances_sum":1445.2877919182238}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.671875,"state":{"ssize":3,"bsize":4},"perf":{"precision":null,"recall":0.671875,"f1":null,"seconds":3.713555634021759e-5,"exhaustive_search_seconds":1.7173588275909424e-6,"evaluations":7.5703125,"distances_sum":1445.2877919182238}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.7229714729714736,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.203125,"distances_sum":1210.237626824733}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.870576620101929e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.7890625,"distances_sum":801.6809337563799}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5859375,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5859375,"f1":0.7229714729714736,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.203125,"distances_sum":1210.237626824733}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8446699134199142,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.375,"distances_sum":1704.5064658649937}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8446699134199142,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.375,"distances_sum":1704.5064658649937}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9220040376290383,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.828125,"distances_sum":2093.591755226388}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9540636446886451,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2304.904474838984}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9446688727938733,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.921875,"distances_sum":2240.643278006886}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9205070970695975,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.59375,"distances_sum":2080.899070410628}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9540636446886451,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2304.904474838984}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9540636446886451,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2304.904474838984}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.7000943500943507,"seconds":4.637986421585083e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.8125,"distances_sum":1060.375890509395}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.435546875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.435546875,"f1":null,"seconds":3.725290298461914e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.546875,"distances_sum":812.5549867631663}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5556640625,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5556640625,"f1":0.7000943500943507,"seconds":4.637986421585083e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.8125,"distances_sum":1060.375890509395}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7067106504606512,"seconds":4.172325134277344e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.9296875,"distances_sum":1072.43432182455}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9029023060273069,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.4140625,"distances_sum":1857.607376285301}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8349609375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8349609375,"f1":0.9029023060273069,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.4140625,"distances_sum":1857.607376285301}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9448717948717956,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.796875,"distances_sum":2144.6515208351125}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9455815018315027,"seconds":6.418675184249878e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.796875,"distances_sum":2158.571398404756}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9625801282051286,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2233.893201556187}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9291411713286718,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.5703125,"distances_sum":2034.3361270276016}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9625801282051286,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2233.893201556187}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9625801282051286,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2233.893201556187}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.56640625,"f1":null,"seconds":4.2691826820373535e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.390625,"distances_sum":1078.462876310449}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7987710206460215,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.890625,"distances_sum":1430.7660885934981}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6787109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6787109375,"f1":0.7987710206460215,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.890625,"distances_sum":1430.7660885934981}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9449493215118218,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.78125,"distances_sum":2167.60258594181}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9549736721611725,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.796875,"distances_sum":2261.643466131801}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9549736721611725,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.796875,"distances_sum":2261.643466131801}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9792811355311357,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9140625,"distances_sum":2402.525929460642}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9792811355311357,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9140625,"distances_sum":2402.525929460642}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9792811355311357,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9140625,"distances_sum":2402.525929460642}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.41015625,"f1":0.5621600621600623,"seconds":3.928318619728088e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.0078125,"distances_sum":757.0329875227385}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.41015625,"state":{"ssize":1,"bsize":2},"perf":{"precision":1.0,"recall":0.41015625,"f1":0.5621600621600623,"seconds":3.928318619728088e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.0078125,"distances_sum":757.0329875227385}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8965659340659347,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.5625,"distances_sum":1828.0661793915986}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.710721743534244,"seconds":4.24310564994812e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.640625,"distances_sum":1073.1643889081822}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8832639582639591,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.171875,"distances_sum":1762.6377925502431}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6083984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.6083984375,"f1":null,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.734375,"distances_sum":1178.772869421099}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8756072052947061,"seconds":4.9602240324020386e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.1640625,"distances_sum":1709.8579719566105}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8232421875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8232421875,"f1":0.8965659340659347,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.5625,"distances_sum":1828.0661793915986}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.942479395604396,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.828125,"distances_sum":2070.7095005800397}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9315304487179493,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.640625,"distances_sum":2001.0974059076443}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9576923076923083,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8203125,"distances_sum":2197.661584879261}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552712912087917,"seconds":6.411224603652954e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8515625,"distances_sum":2180.042569143209}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9008158508158516,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6328125,"distances_sum":1842.7310823167743}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9608859890109895,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.875,"distances_sum":2211.5893465713852}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9608859890109895,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.875,"distances_sum":2211.5893465713852}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9608859890109895,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.875,"distances_sum":2211.5893465713852}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7838952713952722,"seconds":4.447996616363525e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":7.3046875,"distances_sum":1315.608882411272}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6552734375,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6552734375,"f1":0.7838952713952722,"seconds":4.447996616363525e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":7.3046875,"distances_sum":1315.608882411272}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9318795787545792,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.5859375,"distances_sum":2077.9145054872315}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9318795787545792,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.5859375,"distances_sum":2077.9145054872315}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9667983058608063,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.875,"distances_sum":2277.8079497989947}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9458250083250088,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.7421875,"distances_sum":2175.5266969496342}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.977644230769231,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.9375,"distances_sum":2332.687259625256}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9652217574092576,"seconds":6.709247827529907e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.8359375,"distances_sum":2271.9550060930646}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.977644230769231,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.9375,"distances_sum":2332.687259625256}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.977644230769231,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.9375,"distances_sum":2332.687259625256}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2265625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2265625,"f1":null,"seconds":3.4496188163757324e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.6015625,"distances_sum":468.3899789116242}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2275390625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2275390625,"f1":null,"seconds":3.164634108543396e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.4453125,"distances_sum":452.46407670456404}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2275390625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.2275390625,"f1":null,"seconds":3.164634108543396e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.4453125,"distances_sum":452.46407670456404}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2275390625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.2275390625,"f1":null,"seconds":3.164634108543396e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.4453125,"distances_sum":452.46407670456404}}, n: 9
mean(cfft.distances) = 0.6396062868341462
mean(cdnet.distances) = 0.3642116249773006
mean(crand.distances) = 0.4361849463794647
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8577777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8422222222222223
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8777777777777778
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8688888888888888
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9266666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.8666666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8577777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8755555555555555
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8755555555555555
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.931111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8711111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9177777777777778
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8733333333333334
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9133333333333334
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 9: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 11, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 1, 2, 2, 3, 1, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 9: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 11, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 1, 2, 2, 3, 1, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 9: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 11, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 1, 2, 2, 3, 1, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 9: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 11, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 1, 2, 2, 3, 1, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 9: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 11, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 1, 2, 2, 3, 1, 3, 3, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 9: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 11, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 1, 2, 2, 3, 1, 3, 3, 3]
acc = 0.9266666666666666
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 9: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 11, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 1, 2, 2, 3, 1, 3, 3, 3]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.5163071986039479] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 25, 2]]
** centroid: 5, normalized-entropy: 0.38094658570539014, [(2, 25), (3, 2)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 8, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 6]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
*** center 10: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 14 centroids; started with 12
acc = 0.96
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.3828547950106877] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3828547950106877, 0.3004155039826447] ***
*** starting iteration: 2; err: [Inf, 0.3828547950106877, 0.3004155039826447] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3828547950106877, 0.3004155039826447, 0.2970519579063217] ***
*** starting iteration: 3; err: [Inf, 0.3828547950106877, 0.3004155039826447, 0.2970519579063217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3828547950106877, 0.3004155039826447, 0.2970519579063217, 0.2954038653394079] ***
*** starting iteration: 4; err: [Inf, 0.3828547950106877, 0.3004155039826447, 0.2970519579063217, 0.2954038653394079] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3828547950106877, 0.3004155039826447, 0.2970519579063217, 0.2954038653394079, 0.29456300082317255] ***
*** finished computation of 3 references, err: [Inf, 0.3828547950106877, 0.3004155039826447, 0.2970519579063217, 0.2954038653394079, 0.29456300082317255] ***
*** center 1: selecting labels [1] (freq >= 1) [from [211, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [87, 147, 27]]
** centroid: 2, normalized-entropy: 0.8412725080988396, [(1, 87), (2, 147), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [109, 85, 0]]
** centroid: 3, normalized-entropy: 0.988931806246975, [(1, 109), (2, 85)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1890811912328083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1890811912328083, 0.15169784064717903] ***
*** finished computation of 7 references, err: [Inf, 0.1890811912328083, 0.15169784064717903] ***
*** center 1: selecting labels [1] (freq >= 1) [from [119, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 62, 27]]
** centroid: 2, normalized-entropy: 0.8853723770068483, [(2, 62), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [73, 15, 0]]
** centroid: 3, normalized-entropy: 0.6587435307694671, [(1, 73), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [25, 71, 0]]
** centroid: 4, normalized-entropy: 0.8273744775003173, [(1, 25), (2, 71)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [29, 84, 0]]
** centroid: 5, normalized-entropy: 0.8216292954053165, [(1, 29), (2, 84)]
*** center 6: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3717570450028469] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3717570450028469, 0.3053693157918137] ***
*** starting iteration: 2; err: [Inf, 0.3717570450028469, 0.3053693157918137] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3717570450028469, 0.3053693157918137, 0.30320796610108913] ***
*** starting iteration: 3; err: [Inf, 0.3717570450028469, 0.3053693157918137, 0.30320796610108913] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3717570450028469, 0.3053693157918137, 0.30320796610108913, 0.30185699978120056] ***
*** starting iteration: 4; err: [Inf, 0.3717570450028469, 0.3053693157918137, 0.30320796610108913, 0.30185699978120056] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3717570450028469, 0.3053693157918137, 0.30320796610108913, 0.30185699978120056, 0.30060549221396715] ***
*** starting iteration: 5; err: [Inf, 0.3717570450028469, 0.3053693157918137, 0.30320796610108913, 0.30185699978120056, 0.30060549221396715] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3717570450028469, 0.3053693157918137, 0.30320796610108913, 0.30185699978120056, 0.30060549221396715, 0.2996860434632117] ***
*** finished computation of 3 references, err: [Inf, 0.3717570450028469, 0.3053693157918137, 0.30320796610108913, 0.30185699978120056, 0.30060549221396715, 0.2996860434632117] ***
*** center 1: selecting labels [1] (freq >= 1) [from [204, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [89, 155, 23]]
** centroid: 2, normalized-entropy: 0.8129407720098263, [(1, 89), (2, 155), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [103, 93, 0]]
** centroid: 3, normalized-entropy: 0.9981214577227674, [(1, 103), (2, 93)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.39007134590510173] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39007134590510173, 0.3309193802564621] ***
*** starting iteration: 2; err: [Inf, 0.39007134590510173, 0.3309193802564621] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035] ***
*** starting iteration: 3; err: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035, 0.32547926906820224] ***
*** starting iteration: 4; err: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035, 0.32547926906820224] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035, 0.32547926906820224, 0.3235307699725635] ***
*** starting iteration: 5; err: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035, 0.32547926906820224, 0.3235307699725635] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035, 0.32547926906820224, 0.3235307699725635, 0.320148483875195] ***
*** starting iteration: 6; err: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035, 0.32547926906820224, 0.3235307699725635, 0.320148483875195] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035, 0.32547926906820224, 0.3235307699725635, 0.320148483875195, 0.3165498178206507] ***
*** starting iteration: 7; err: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035, 0.32547926906820224, 0.3235307699725635, 0.320148483875195, 0.3165498178206507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035, 0.32547926906820224, 0.3235307699725635, 0.320148483875195, 0.3165498178206507, 0.30722562399884124] ***
*** starting iteration: 8; err: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035, 0.32547926906820224, 0.3235307699725635, 0.320148483875195, 0.3165498178206507, 0.30722562399884124] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035, 0.32547926906820224, 0.3235307699725635, 0.320148483875195, 0.3165498178206507, 0.30722562399884124, 0.29553406939295856] ***
*** starting iteration: 9; err: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035, 0.32547926906820224, 0.3235307699725635, 0.320148483875195, 0.3165498178206507, 0.30722562399884124, 0.29553406939295856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035, 0.32547926906820224, 0.3235307699725635, 0.320148483875195, 0.3165498178206507, 0.30722562399884124, 0.29553406939295856, 0.29470388392458435] ***
*** finished computation of 3 references, err: [Inf, 0.39007134590510173, 0.3309193802564621, 0.32752326166193035, 0.32547926906820224, 0.3235307699725635, 0.320148483875195, 0.3165498178206507, 0.30722562399884124, 0.29553406939295856, 0.29470388392458435] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [247, 1, 0]]
** centroid: 1, normalized-entropy: 0.037878946671490506, [(1, 247), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [137, 74, 0]]
** centroid: 2, normalized-entropy: 0.9347013478439888, [(1, 137), (2, 74)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [11, 179, 18]]
** centroid: 3, normalized-entropy: 0.4518914222803423, [(1, 11), (2, 179), (3, 18)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2180308112021614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2180308112021614, 0.14922931076477733] ***
*** starting iteration: 2; err: [Inf, 0.2180308112021614, 0.14922931076477733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2180308112021614, 0.14922931076477733, 0.1455081196029198] ***
*** starting iteration: 3; err: [Inf, 0.2180308112021614, 0.14922931076477733, 0.1455081196029198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2180308112021614, 0.14922931076477733, 0.1455081196029198, 0.14400465274194685] ***
*** finished computation of 7 references, err: [Inf, 0.2180308112021614, 0.14922931076477733, 0.1455081196029198, 0.14400465274194685] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [67, 40, 0]]
** centroid: 1, normalized-entropy: 0.9535688597080136, [(1, 67), (2, 40)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 87, 0]]
** centroid: 2, normalized-entropy: 0.08970338978685011, [(1, 1), (2, 87)]
*** center 3: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 23, 0]]
** centroid: 4, normalized-entropy: 0.8514808683852091, [(1, 60), (2, 23)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [98, 5, 0]]
** centroid: 5, normalized-entropy: 0.28017814662275986, [(1, 98), (2, 5)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [97, 1, 0]]
** centroid: 6, normalized-entropy: 0.08214305133815322, [(1, 97), (2, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 76, 27]]
** centroid: 7, normalized-entropy: 0.829952434172285, [(2, 76), (3, 27)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2307077347185055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2307077347185055, 0.1730412018556578] ***
*** starting iteration: 2; err: [Inf, 0.2307077347185055, 0.1730412018556578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2307077347185055, 0.1730412018556578, 0.1601527686087021] ***
*** starting iteration: 3; err: [Inf, 0.2307077347185055, 0.1730412018556578, 0.1601527686087021] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2307077347185055, 0.1730412018556578, 0.1601527686087021, 0.15631921388239584] ***
*** finished computation of 7 references, err: [Inf, 0.2307077347185055, 0.1730412018556578, 0.1601527686087021, 0.15631921388239584] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [87, 3, 0]]
** centroid: 1, normalized-entropy: 0.2108423003185322, [(1, 87), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [49, 3, 0]]
** centroid: 2, normalized-entropy: 0.3182152976832332, [(1, 49), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 125, 23]]
** centroid: 3, normalized-entropy: 0.6232036320338675, [(2, 125), (3, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [71, 63, 0]]
** centroid: 6, normalized-entropy: 0.9974273944478681, [(1, 71), (2, 63)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [26, 54, 0]]
** centroid: 7, normalized-entropy: 0.9097361225311661, [(1, 26), (2, 54)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2500695536835357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500695536835357, 0.15041687504306012] ***
*** starting iteration: 2; err: [Inf, 0.2500695536835357, 0.15041687504306012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500695536835357, 0.15041687504306012, 0.14768951056794594] ***
*** starting iteration: 3; err: [Inf, 0.2500695536835357, 0.15041687504306012, 0.14768951056794594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500695536835357, 0.15041687504306012, 0.14768951056794594, 0.14581046184501156] ***
*** finished computation of 7 references, err: [Inf, 0.2500695536835357, 0.15041687504306012, 0.14768951056794594, 0.14581046184501156] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [111, 3, 0]]
** centroid: 1, normalized-entropy: 0.17556502585750275, [(1, 111), (2, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 102, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [72, 14, 0]]
** centroid: 4, normalized-entropy: 0.6409441847875289, [(1, 72), (2, 14)]
*** center 5: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 55, 18]]
** centroid: 6, normalized-entropy: 0.8058049113482652, [(2, 55), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [13, 80, 0]]
** centroid: 7, normalized-entropy: 0.5836753280239112, [(1, 13), (2, 80)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23837990476330323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23837990476330323, 0.20324319124420373] ***
*** finished computation of 7 references, err: [Inf, 0.23837990476330323, 0.20324319124420373] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [94, 3, 0]]
** centroid: 1, normalized-entropy: 0.19902377455969078, [(1, 94), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [30, 21, 0]]
** centroid: 2, normalized-entropy: 0.9774178175281716, [(1, 30), (2, 21)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [3, 91, 2]]
** centroid: 3, normalized-entropy: 0.21814527876503223, [(1, 3), (2, 91), (3, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [150, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 111, 25]]
** centroid: 5, normalized-entropy: 0.6883704448589432, [(2, 111), (3, 25)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [96, 6, 0]]
** centroid: 6, normalized-entropy: 0.32275695889739825, [(1, 96), (2, 6)]
*** center 7: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2836048652416561] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2836048652416561, 0.22205794560325065] ***
*** finished computation of 7 references, err: [Inf, 0.2836048652416561, 0.22205794560325065] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [137, 50, 0]]
** centroid: 1, normalized-entropy: 0.8376794606666293, [(1, 137), (2, 50)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [21, 35, 0]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(1, 21), (2, 35)]
*** center 3: selecting labels [1] (freq >= 2) [from [152, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 45, 23]]
** centroid: 4, normalized-entropy: 0.9231199835423002, [(2, 45), (3, 23)]
*** center 5: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 103, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [16, 15, 0]]
** centroid: 7, normalized-entropy: 0.9992492479956566, [(1, 16), (2, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3943378501348309] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3943378501348309, 0.23962018057016998] ***
*** finished computation of 7 references, err: [Inf, 0.3943378501348309, 0.23962018057016998] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [47, 42, 0]]
** centroid: 1, normalized-entropy: 0.9977221075331744, [(1, 47), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [88, 2, 0]]
** centroid: 2, normalized-entropy: 0.1537421803287618, [(1, 88), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [157, 0, 0]]
*** center 4: selecting labels [1, 2, 3] (freq >= 2) [from [26, 80, 4]]
** centroid: 4, normalized-entropy: 0.6308373408605887, [(1, 26), (2, 80), (3, 4)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [37, 16, 0]]
** centroid: 5, normalized-entropy: 0.8835850861052531, [(1, 37), (2, 16)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 71, 14]]
** centroid: 6, normalized-entropy: 0.6454495903301855, [(2, 71), (3, 14)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [40, 43, 0]]
** centroid: 7, normalized-entropy: 0.9990574042663861, [(1, 40), (2, 43)]
finished with 13 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23158484780265987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23158484780265987, 0.16657343516042372] ***
*** finished computation of 7 references, err: [Inf, 0.23158484780265987, 0.16657343516042372] ***
*** center 1: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [38, 52, 0]]
** centroid: 2, normalized-entropy: 0.9824740868386409, [(1, 38), (2, 52)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [33, 53, 0]]
** centroid: 3, normalized-entropy: 0.9606276613221153, [(1, 33), (2, 53)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 67, 2]]
** centroid: 4, normalized-entropy: 0.18927843126120178, [(2, 67), (3, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [154, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 6, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [75, 59, 0]]
** centroid: 7, normalized-entropy: 0.9896911180731478, [(1, 75), (2, 59)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1634467823271719] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1634467823271719, 0.15172178616797527] ***
*** finished computation of 7 references, err: [Inf, 0.1634467823271719, 0.15172178616797527] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [101, 8, 0]]
** centroid: 1, normalized-entropy: 0.3784654279151717, [(1, 101), (2, 8)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 57, 0]]
** centroid: 2, normalized-entropy: 0.12565805017256745, [(1, 1), (2, 57)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 60, 20]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 60), (3, 20)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [79, 6, 0]]
** centroid: 4, normalized-entropy: 0.3681150054280774, [(1, 79), (2, 6)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 104, 3]]
** centroid: 5, normalized-entropy: 0.18445186314098744, [(2, 104), (3, 3)]
*** center 6: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [132, 13, 0]]
** centroid: 7, normalized-entropy: 0.4353177790414857, [(1, 132), (2, 13)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20611174052826936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20611174052826936, 0.17388255664774369] ***
*** finished computation of 7 references, err: [Inf, 0.20611174052826936, 0.17388255664774369] ***
*** center 1: selecting labels [1] (freq >= 1) [from [149, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [40, 99, 2]]
** centroid: 2, normalized-entropy: 0.6062890896336047, [(1, 40), (2, 99), (3, 2)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [3, 24, 0]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(1, 3), (2, 24)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 74, 16]]
** centroid: 4, normalized-entropy: 0.6751914401458716, [(2, 74), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [51, 1, 0]]
** centroid: 5, normalized-entropy: 0.13709947889981755, [(1, 51), (2, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [35, 56, 0]]
** centroid: 6, normalized-entropy: 0.961236604722876, [(1, 35), (2, 56)]
*** center 7: selecting labels [1] (freq >= 1) [from [117, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19720597036236018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19720597036236018, 0.1570356953770269] ***
*** starting iteration: 2; err: [Inf, 0.19720597036236018, 0.1570356953770269] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19720597036236018, 0.1570356953770269, 0.15032424901712788] ***
*** starting iteration: 3; err: [Inf, 0.19720597036236018, 0.1570356953770269, 0.15032424901712788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19720597036236018, 0.1570356953770269, 0.15032424901712788, 0.14759413312208858] ***
*** starting iteration: 4; err: [Inf, 0.19720597036236018, 0.1570356953770269, 0.15032424901712788, 0.14759413312208858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19720597036236018, 0.1570356953770269, 0.15032424901712788, 0.14759413312208858, 0.146598822986791] ***
*** finished computation of 7 references, err: [Inf, 0.19720597036236018, 0.1570356953770269, 0.15032424901712788, 0.14759413312208858, 0.146598822986791] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 68, 27]]
** centroid: 1, normalized-entropy: 0.8611247055579295, [(2, 68), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [46, 46, 0]]
** centroid: 2, normalized-entropy: 1.0, [(1, 46), (2, 46)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [15, 71, 0]]
** centroid: 3, normalized-entropy: 0.6677135405281421, [(1, 15), (2, 71)]
*** center 4: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [53, 47, 0]]
** centroid: 6, normalized-entropy: 0.9974015885677396, [(1, 53), (2, 47)]
*** center 7: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23314368700667254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23314368700667254, 0.1879937141586369] ***
*** starting iteration: 2; err: [Inf, 0.23314368700667254, 0.1879937141586369] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23314368700667254, 0.1879937141586369, 0.1681024191169434] ***
*** starting iteration: 3; err: [Inf, 0.23314368700667254, 0.1879937141586369, 0.1681024191169434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23314368700667254, 0.1879937141586369, 0.1681024191169434, 0.15632152030973331] ***
*** starting iteration: 4; err: [Inf, 0.23314368700667254, 0.1879937141586369, 0.1681024191169434, 0.15632152030973331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23314368700667254, 0.1879937141586369, 0.1681024191169434, 0.15632152030973331, 0.15158620601411033] ***
*** starting iteration: 5; err: [Inf, 0.23314368700667254, 0.1879937141586369, 0.1681024191169434, 0.15632152030973331, 0.15158620601411033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23314368700667254, 0.1879937141586369, 0.1681024191169434, 0.15632152030973331, 0.15158620601411033, 0.14984882807860367] ***
*** starting iteration: 6; err: [Inf, 0.23314368700667254, 0.1879937141586369, 0.1681024191169434, 0.15632152030973331, 0.15158620601411033, 0.14984882807860367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23314368700667254, 0.1879937141586369, 0.1681024191169434, 0.15632152030973331, 0.15158620601411033, 0.14984882807860367, 0.14866418729506914] ***
*** starting iteration: 7; err: [Inf, 0.23314368700667254, 0.1879937141586369, 0.1681024191169434, 0.15632152030973331, 0.15158620601411033, 0.14984882807860367, 0.14866418729506914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23314368700667254, 0.1879937141586369, 0.1681024191169434, 0.15632152030973331, 0.15158620601411033, 0.14984882807860367, 0.14866418729506914, 0.14785371436437275] ***
*** finished computation of 7 references, err: [Inf, 0.23314368700667254, 0.1879937141586369, 0.1681024191169434, 0.15632152030973331, 0.15158620601411033, 0.14984882807860367, 0.14866418729506914, 0.14785371436437275] ***
*** center 1: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [67, 8, 0]]
** centroid: 2, normalized-entropy: 0.48977901368693744, [(1, 67), (2, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [2, 90, 0]]
** centroid: 4, normalized-entropy: 0.1510969705171136, [(1, 2), (2, 90)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [98, 24, 0]]
** centroid: 5, normalized-entropy: 0.7153220528038851, [(1, 98), (2, 24)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [55, 38, 0]]
** centroid: 6, normalized-entropy: 0.9757606417025202, [(1, 55), (2, 38)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 88, 23]]
** centroid: 7, normalized-entropy: 0.7361103940132281, [(2, 88), (3, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2113959935355535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2113959935355535, 0.1707267909250718] ***
*** starting iteration: 2; err: [Inf, 0.2113959935355535, 0.1707267909250718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2113959935355535, 0.1707267909250718, 0.1609337207579544] ***
*** starting iteration: 3; err: [Inf, 0.2113959935355535, 0.1707267909250718, 0.1609337207579544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2113959935355535, 0.1707267909250718, 0.1609337207579544, 0.15637891595230913] ***
*** starting iteration: 4; err: [Inf, 0.2113959935355535, 0.1707267909250718, 0.1609337207579544, 0.15637891595230913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2113959935355535, 0.1707267909250718, 0.1609337207579544, 0.15637891595230913, 0.1531830350610091] ***
*** starting iteration: 5; err: [Inf, 0.2113959935355535, 0.1707267909250718, 0.1609337207579544, 0.15637891595230913, 0.1531830350610091] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2113959935355535, 0.1707267909250718, 0.1609337207579544, 0.15637891595230913, 0.1531830350610091, 0.15064206470091684] ***
*** starting iteration: 6; err: [Inf, 0.2113959935355535, 0.1707267909250718, 0.1609337207579544, 0.15637891595230913, 0.1531830350610091, 0.15064206470091684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2113959935355535, 0.1707267909250718, 0.1609337207579544, 0.15637891595230913, 0.1531830350610091, 0.15064206470091684, 0.14920650668703356] ***
*** starting iteration: 7; err: [Inf, 0.2113959935355535, 0.1707267909250718, 0.1609337207579544, 0.15637891595230913, 0.1531830350610091, 0.15064206470091684, 0.14920650668703356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2113959935355535, 0.1707267909250718, 0.1609337207579544, 0.15637891595230913, 0.1531830350610091, 0.15064206470091684, 0.14920650668703356, 0.1480858873972471] ***
*** starting iteration: 8; err: [Inf, 0.2113959935355535, 0.1707267909250718, 0.1609337207579544, 0.15637891595230913, 0.1531830350610091, 0.15064206470091684, 0.14920650668703356, 0.1480858873972471] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2113959935355535, 0.1707267909250718, 0.1609337207579544, 0.15637891595230913, 0.1531830350610091, 0.15064206470091684, 0.14920650668703356, 0.1480858873972471, 0.14750618607354193] ***
*** finished computation of 7 references, err: [Inf, 0.2113959935355535, 0.1707267909250718, 0.1609337207579544, 0.15637891595230913, 0.1531830350610091, 0.15064206470091684, 0.14920650668703356, 0.1480858873972471, 0.14750618607354193] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 84, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 49, 18]]
** centroid: 2, normalized-entropy: 0.8395304981054318, [(2, 49), (3, 18)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 94, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [95, 3, 0]]
** centroid: 4, normalized-entropy: 0.19745300438456026, [(1, 95), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [100, 4, 0]]
** centroid: 5, normalized-entropy: 0.23519338181924157, [(1, 100), (2, 4)]
*** center 6: selecting labels [1] (freq >= 2) [from [124, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [76, 20, 0]]
** centroid: 7, normalized-entropy: 0.7382848661434506, [(1, 76), (2, 20)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24220809756355868] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.24220809756355868, 0.2354185237792564] ***
*** starting iteration: 2; err: [Inf, 0.24220809756355868, 0.2354185237792564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.24220809756355868, 0.2354185237792564, 0.23432981636369596] ***
*** starting iteration: 3; err: [Inf, 0.24220809756355868, 0.2354185237792564, 0.23432981636369596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.24220809756355868, 0.2354185237792564, 0.23432981636369596, 0.23419696687861952] ***
*** finished computation of 3 references, err: [Inf, 0.24220809756355868, 0.2354185237792564, 0.23432981636369596, 0.23419696687861952] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [53, 148, 27]]
** centroid: 1, normalized-entropy: 0.7940253120041908, [(1, 53), (2, 148), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [130, 84, 0]]
** centroid: 2, normalized-entropy: 0.9664086723492078, [(1, 130), (2, 84)]
*** center 3: selecting labels [1] (freq >= 2) [from [224, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3209161499956402] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3209161499956402, 0.23631988951972668] ***
*** starting iteration: 2; err: [Inf, 0.3209161499956402, 0.23631988951972668] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3209161499956402, 0.23631988951972668, 0.2310228217770157] ***
*** starting iteration: 3; err: [Inf, 0.3209161499956402, 0.23631988951972668, 0.2310228217770157] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3209161499956402, 0.23631988951972668, 0.2310228217770157, 0.2292205577791631] ***
*** finished computation of 3 references, err: [Inf, 0.3209161499956402, 0.23631988951972668, 0.2310228217770157, 0.2292205577791631] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 201, 23]]
** centroid: 1, normalized-entropy: 0.47742940903851516, [(2, 201), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [219, 11, 0]]
** centroid: 2, normalized-entropy: 0.27708955591103945, [(1, 219), (2, 11)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [177, 36, 0]]
** centroid: 3, normalized-entropy: 0.6554444445609846, [(1, 177), (2, 36)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31125062359413175] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31125062359413175, 0.25056244318570375] ***
*** starting iteration: 2; err: [Inf, 0.31125062359413175, 0.25056244318570375] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31125062359413175, 0.25056244318570375, 0.23573873596715517] ***
*** starting iteration: 3; err: [Inf, 0.31125062359413175, 0.25056244318570375, 0.23573873596715517] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31125062359413175, 0.25056244318570375, 0.23573873596715517, 0.23271767767648893] ***
*** finished computation of 3 references, err: [Inf, 0.31125062359413175, 0.25056244318570375, 0.23573873596715517, 0.23271767767648893] ***
*** center 1: selecting labels [1] (freq >= 2) [from [187, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [71, 178, 18]]
** centroid: 2, normalized-entropy: 0.7321492409907135, [(1, 71), (2, 178), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [137, 76, 0]]
** centroid: 3, normalized-entropy: 0.9400012334309807, [(1, 137), (2, 76)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2686327247609113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2686327247609113, 0.2131311444862111] ***
*** starting iteration: 2; err: [Inf, 0.2686327247609113, 0.2131311444862111] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2686327247609113, 0.2131311444862111, 0.19846165726763998] ***
*** starting iteration: 3; err: [Inf, 0.2686327247609113, 0.2131311444862111, 0.19846165726763998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2686327247609113, 0.2131311444862111, 0.19846165726763998, 0.19250144311555525] ***
*** starting iteration: 4; err: [Inf, 0.2686327247609113, 0.2131311444862111, 0.19846165726763998, 0.19250144311555525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2686327247609113, 0.2131311444862111, 0.19846165726763998, 0.19250144311555525, 0.18901026046446137] ***
*** starting iteration: 5; err: [Inf, 0.2686327247609113, 0.2131311444862111, 0.19846165726763998, 0.19250144311555525, 0.18901026046446137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2686327247609113, 0.2131311444862111, 0.19846165726763998, 0.19250144311555525, 0.18901026046446137, 0.18671919995700023] ***
*** starting iteration: 6; err: [Inf, 0.2686327247609113, 0.2131311444862111, 0.19846165726763998, 0.19250144311555525, 0.18901026046446137, 0.18671919995700023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2686327247609113, 0.2131311444862111, 0.19846165726763998, 0.19250144311555525, 0.18901026046446137, 0.18671919995700023, 0.18633704553651917] ***
*** finished computation of 7 references, err: [Inf, 0.2686327247609113, 0.2131311444862111, 0.19846165726763998, 0.19250144311555525, 0.18901026046446137, 0.18671919995700023, 0.18633704553651917] ***
*** center 1: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [55, 44, 0]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(1, 55), (2, 44)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [86, 44, 0]]
** centroid: 3, normalized-entropy: 0.9233388889944429, [(1, 86), (2, 44)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 85, 27]]
** centroid: 4, normalized-entropy: 0.7968174923244049, [(2, 85), (3, 27)]
*** center 5: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [16, 59, 0]]
** centroid: 6, normalized-entropy: 0.7478061583312324, [(1, 16), (2, 59)]
*** center 7: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31041486091308595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31041486091308595, 0.22671436511728538] ***
*** starting iteration: 2; err: [Inf, 0.31041486091308595, 0.22671436511728538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31041486091308595, 0.22671436511728538, 0.20070050911757273] ***
*** starting iteration: 3; err: [Inf, 0.31041486091308595, 0.22671436511728538, 0.20070050911757273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31041486091308595, 0.22671436511728538, 0.20070050911757273, 0.19390960371560198] ***
*** starting iteration: 4; err: [Inf, 0.31041486091308595, 0.22671436511728538, 0.20070050911757273, 0.19390960371560198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31041486091308595, 0.22671436511728538, 0.20070050911757273, 0.19390960371560198, 0.1897767539449578] ***
*** starting iteration: 5; err: [Inf, 0.31041486091308595, 0.22671436511728538, 0.20070050911757273, 0.19390960371560198, 0.1897767539449578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31041486091308595, 0.22671436511728538, 0.20070050911757273, 0.19390960371560198, 0.1897767539449578, 0.1866687359483815] ***
*** starting iteration: 6; err: [Inf, 0.31041486091308595, 0.22671436511728538, 0.20070050911757273, 0.19390960371560198, 0.1897767539449578, 0.1866687359483815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31041486091308595, 0.22671436511728538, 0.20070050911757273, 0.19390960371560198, 0.1897767539449578, 0.1866687359483815, 0.18464816872008155] ***
*** starting iteration: 7; err: [Inf, 0.31041486091308595, 0.22671436511728538, 0.20070050911757273, 0.19390960371560198, 0.1897767539449578, 0.1866687359483815, 0.18464816872008155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31041486091308595, 0.22671436511728538, 0.20070050911757273, 0.19390960371560198, 0.1897767539449578, 0.1866687359483815, 0.18464816872008155, 0.18322366518924932] ***
*** starting iteration: 8; err: [Inf, 0.31041486091308595, 0.22671436511728538, 0.20070050911757273, 0.19390960371560198, 0.1897767539449578, 0.1866687359483815, 0.18464816872008155, 0.18322366518924932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31041486091308595, 0.22671436511728538, 0.20070050911757273, 0.19390960371560198, 0.1897767539449578, 0.1866687359483815, 0.18464816872008155, 0.18322366518924932, 0.18255759472086064] ***
*** finished computation of 7 references, err: [Inf, 0.31041486091308595, 0.22671436511728538, 0.20070050911757273, 0.19390960371560198, 0.1897767539449578, 0.1866687359483815, 0.18464816872008155, 0.18322366518924932, 0.18255759472086064] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [10, 84, 0]]
** centroid: 1, normalized-entropy: 0.48890859144051524, [(1, 10), (2, 84)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [79, 8, 0]]
** centroid: 2, normalized-entropy: 0.4429586785384856, [(1, 79), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 89, 23]]
** centroid: 3, normalized-entropy: 0.7325138475458123, [(2, 89), (3, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [73, 10, 0]]
** centroid: 6, normalized-entropy: 0.530744566923854, [(1, 73), (2, 10)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [39, 57, 0]]
** centroid: 7, normalized-entropy: 0.9744894033980525, [(1, 39), (2, 57)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2877338222595214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2877338222595214, 0.23458748201475196] ***
*** starting iteration: 2; err: [Inf, 0.2877338222595214, 0.23458748201475196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699] ***
*** starting iteration: 3; err: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699, 0.20786420297020045] ***
*** starting iteration: 4; err: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699, 0.20786420297020045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699, 0.20786420297020045, 0.1985732748953701] ***
*** starting iteration: 5; err: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699, 0.20786420297020045, 0.1985732748953701] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699, 0.20786420297020045, 0.1985732748953701, 0.19309468013604453] ***
*** starting iteration: 6; err: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699, 0.20786420297020045, 0.1985732748953701, 0.19309468013604453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699, 0.20786420297020045, 0.1985732748953701, 0.19309468013604453, 0.19042162800199355] ***
*** starting iteration: 7; err: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699, 0.20786420297020045, 0.1985732748953701, 0.19309468013604453, 0.19042162800199355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699, 0.20786420297020045, 0.1985732748953701, 0.19309468013604453, 0.19042162800199355, 0.18802058217332124] ***
*** starting iteration: 8; err: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699, 0.20786420297020045, 0.1985732748953701, 0.19309468013604453, 0.19042162800199355, 0.18802058217332124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699, 0.20786420297020045, 0.1985732748953701, 0.19309468013604453, 0.19042162800199355, 0.18802058217332124, 0.1869244742607963] ***
*** starting iteration: 9; err: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699, 0.20786420297020045, 0.1985732748953701, 0.19309468013604453, 0.19042162800199355, 0.18802058217332124, 0.1869244742607963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699, 0.20786420297020045, 0.1985732748953701, 0.19309468013604453, 0.19042162800199355, 0.18802058217332124, 0.1869244742607963, 0.1863968895442471] ***
*** finished computation of 7 references, err: [Inf, 0.2877338222595214, 0.23458748201475196, 0.2174237724358699, 0.20786420297020045, 0.1985732748953701, 0.19309468013604453, 0.19042162800199355, 0.18802058217332124, 0.1869244742607963, 0.1863968895442471] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [8, 81, 0]]
** centroid: 1, normalized-entropy: 0.43609466429612137, [(1, 8), (2, 81)]
*** center 2: selecting labels [1] (freq >= 1) [from [115, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [2, 79, 0]]
** centroid: 3, normalized-entropy: 0.16702680404522793, [(1, 2), (2, 79)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [91, 1, 0]]
** centroid: 4, normalized-entropy: 0.08650421412134586, [(1, 91), (2, 1)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [67, 31, 0]]
** centroid: 5, normalized-entropy: 0.9003418708227195, [(1, 67), (2, 31)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 62, 18]]
** centroid: 6, normalized-entropy: 0.7691928290130138, [(2, 62), (3, 18)]
*** center 7: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.20704031134633957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20704031134633957, 0.15992108276029965] ***
*** finished computation of 7 references, err: [Inf, 0.20704031134633957, 0.15992108276029965] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [82, 7, 0]]
** centroid: 1, normalized-entropy: 0.3974104103699249, [(1, 82), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [65, 4, 0]]
** centroid: 2, normalized-entropy: 0.3193373865339728, [(1, 65), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [26, 93, 0]]
** centroid: 4, normalized-entropy: 0.7573958968817643, [(1, 26), (2, 93)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [80, 6, 0]]
** centroid: 5, normalized-entropy: 0.3650551896402848, [(1, 80), (2, 6)]
*** center 6: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 122, 27]]
** centroid: 7, normalized-entropy: 0.6827126966964852, [(2, 122), (3, 27)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21002361837165734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21002361837165734, 0.16591880474703155] ***
*** finished computation of 7 references, err: [Inf, 0.21002361837165734, 0.16591880474703155] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [117, 9, 0]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(1, 117), (2, 9)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 40, 23]]
** centroid: 2, normalized-entropy: 0.9468188316776024, [(2, 40), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [60, 42, 0]]
** centroid: 3, normalized-entropy: 0.9774178175281716, [(1, 60), (2, 42)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 68, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [133, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [86, 66, 0]]
** centroid: 7, normalized-entropy: 0.9874750082985965, [(1, 86), (2, 66)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17925486272700814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17925486272700814, 0.1508296960964799] ***
*** finished computation of 7 references, err: [Inf, 0.17925486272700814, 0.1508296960964799] ***
*** center 1: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [26, 56, 0]]
** centroid: 2, normalized-entropy: 0.9011701959974223, [(1, 26), (2, 56)]
*** center 3: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [57, 21, 0]]
** centroid: 4, normalized-entropy: 0.8403586716091169, [(1, 57), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [123, 6, 0]]
** centroid: 5, normalized-entropy: 0.2713895875081112, [(1, 123), (2, 6)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 78, 18]]
** centroid: 6, normalized-entropy: 0.6962122601251459, [(2, 78), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 93, 0]]
** centroid: 7, normalized-entropy: 0.14731066693045392, [(1, 2), (2, 93)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4633417263132025] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4633417263132025, 0.29376810831758937] ***
*** starting iteration: 2; err: [Inf, 0.4633417263132025, 0.29376810831758937] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4633417263132025, 0.29376810831758937, 0.2927331227771434] ***
*** starting iteration: 3; err: [Inf, 0.4633417263132025, 0.29376810831758937, 0.2927331227771434] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4633417263132025, 0.29376810831758937, 0.2927331227771434, 0.2928756238338915] ***
*** finished computation of 3 references, err: [Inf, 0.4633417263132025, 0.29376810831758937, 0.2927331227771434, 0.2928756238338915] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [236, 27, 0]]
** centroid: 1, normalized-entropy: 0.47737631930063623, [(1, 236), (2, 27)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [171, 43, 0]]
** centroid: 2, normalized-entropy: 0.7237933205241435, [(1, 171), (2, 43)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 162, 27]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 162), (3, 27)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3807172182517341] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3807172182517341, 0.30382531778845023] ***
*** starting iteration: 2; err: [Inf, 0.3807172182517341, 0.30382531778845023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3807172182517341, 0.30382531778845023, 0.2919611788132805] ***
*** starting iteration: 3; err: [Inf, 0.3807172182517341, 0.30382531778845023, 0.2919611788132805] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3807172182517341, 0.30382531778845023, 0.2919611788132805, 0.2899121418595314] ***
*** finished computation of 3 references, err: [Inf, 0.3807172182517341, 0.30382531778845023, 0.2919611788132805, 0.2899121418595314] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [232, 23, 0]]
** centroid: 1, normalized-entropy: 0.4371239629023557, [(1, 232), (2, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [164, 31, 0]]
** centroid: 2, normalized-entropy: 0.6318502400093088, [(1, 164), (2, 31)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 194, 23]]
** centroid: 3, normalized-entropy: 0.4877032307227556, [(2, 194), (3, 23)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37595634199287936] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37595634199287936, 0.3087734520669909] ***
*** starting iteration: 2; err: [Inf, 0.37595634199287936, 0.3087734520669909] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37595634199287936, 0.3087734520669909, 0.29743488311119703] ***
*** starting iteration: 3; err: [Inf, 0.37595634199287936, 0.3087734520669909, 0.29743488311119703] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37595634199287936, 0.3087734520669909, 0.29743488311119703, 0.29527187477127054] ***
*** finished computation of 3 references, err: [Inf, 0.37595634199287936, 0.3087734520669909, 0.29743488311119703, 0.29527187477127054] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [247, 19, 0]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(1, 247), (2, 19)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 188, 18]]
** centroid: 2, normalized-entropy: 0.4276590022251725, [(2, 188), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [148, 47, 0]]
** centroid: 3, normalized-entropy: 0.7967417284063618, [(1, 148), (2, 47)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.18898922891943887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18898922891943887, 0.15283888906542062] ***
*** finished computation of 7 references, err: [Inf, 0.18898922891943887, 0.15283888906542062] ***
*** center 1: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [81, 10, 0]]
** centroid: 2, normalized-entropy: 0.49958440742366095, [(1, 81), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 23]]
** centroid: 3, normalized-entropy: 0.9987472979361685, [(2, 25), (3, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [117, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [47, 53, 0]]
** centroid: 5, normalized-entropy: 0.9974015885677396, [(1, 47), (2, 53)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [40, 76, 0]]
** centroid: 6, normalized-entropy: 0.9293636260137188, [(1, 40), (2, 76)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 84, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19297675744419557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19297675744419557, 0.14860560169696216] ***
*** finished computation of 7 references, err: [Inf, 0.19297675744419557, 0.14860560169696216] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 101, 2]]
** centroid: 1, normalized-entropy: 0.13815722856252646, [(2, 101), (3, 2)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [62, 17, 0]]
** centroid: 2, normalized-entropy: 0.751286576718343, [(1, 62), (2, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 100, 16]]
** centroid: 4, normalized-entropy: 0.5787946246321198, [(2, 100), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [90, 4, 0]]
** centroid: 5, normalized-entropy: 0.2538784402981617, [(1, 90), (2, 4)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [76, 32, 0]]
** centroid: 6, normalized-entropy: 0.876716288999464, [(1, 76), (2, 32)]
*** center 7: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 12)
[0.9459998921076765, 0.9409948871026715, 0.9399759040477603, 0.9390198581815348, 0.9349888810966656, 0.928020835206464, 0.9159908411405416, 0.9159848471225717, 0.8829997662332992, 0.8540186893480307, 0.8259966553379727, 0.7970095844347341]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9459998921076765
finished with 13
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.2140602608345583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2140602608345583, 0.16054396327254963] ***
*** finished computation of 7 references, err: [Inf, 0.2140602608345583, 0.16054396327254963] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [27, 96, 1]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(1, 27), (2, 96)]
*** center 2: selecting labels [1] (freq >= 2) [from [149, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 68, 26]]
** centroid: 3, normalized-entropy: 0.8507707040532602, [(2, 68), (3, 26)]
*** center 4: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [37, 52, 0]]
** centroid: 5, normalized-entropy: 0.9794116346561961, [(1, 37), (2, 52)]
*** center 6: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [57, 16, 0]]
** centroid: 7, normalized-entropy: 0.7586638628883696, [(1, 57), (2, 16)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2616033223464616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2616033223464616, 0.17421890604847307] ***
*** finished computation of 7 references, err: [Inf, 0.2616033223464616, 0.17421890604847307] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [21, 76, 0]]
** centroid: 1, normalized-entropy: 0.7537153483720096, [(1, 21), (2, 76)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 86, 23]]
** centroid: 2, normalized-entropy: 0.7434073165779199, [(2, 86), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 11, 0]]
** centroid: 4, normalized-entropy: 0.7522121733341471, [(1, 40), (2, 11)]
*** center 5: selecting labels [1] (freq >= 2) [from [156, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [86, 32, 0]]
** centroid: 6, normalized-entropy: 0.8431619569518377, [(1, 86), (2, 32)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [46, 43, 0]]
** centroid: 7, normalized-entropy: 0.9991802351145687, [(1, 46), (2, 43)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2374120470048438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2374120470048438, 0.1726345558374327] ***
*** finished computation of 7 references, err: [Inf, 0.2374120470048438, 0.1726345558374327] ***
*** center 1: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [136, 58, 0]]
** centroid: 3, normalized-entropy: 0.8800270477157599, [(1, 136), (2, 58)]
*** center 4: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [54, 35, 0]]
** centroid: 5, normalized-entropy: 0.9668701645630143, [(1, 54), (2, 35)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 98, 18]]
** centroid: 6, normalized-entropy: 0.6226343162547099, [(2, 98), (3, 18)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 63, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 13)
[0.9459998921076765, 0.9409948871026715, 0.9399759040477603, 0.9390198581815348, 0.9349888810966656, 0.928020835206464, 0.9249818680956405, 0.9159908411405416, 0.9159848471225717, 0.8829997662332992, 0.8540186893480307, 0.8259966553379727, 0.7970095844347341]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9459998921076765
finished with 14
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.28975883478441417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28975883478441417, 0.2533487127772211] ***
*** starting iteration: 2; err: [Inf, 0.28975883478441417, 0.2533487127772211] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28975883478441417, 0.2533487127772211, 0.22749738814449078] ***
*** starting iteration: 3; err: [Inf, 0.28975883478441417, 0.2533487127772211, 0.22749738814449078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28975883478441417, 0.2533487127772211, 0.22749738814449078, 0.21621406832556087] ***
*** starting iteration: 4; err: [Inf, 0.28975883478441417, 0.2533487127772211, 0.22749738814449078, 0.21621406832556087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28975883478441417, 0.2533487127772211, 0.22749738814449078, 0.21621406832556087, 0.2100983856514365] ***
*** starting iteration: 5; err: [Inf, 0.28975883478441417, 0.2533487127772211, 0.22749738814449078, 0.21621406832556087, 0.2100983856514365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28975883478441417, 0.2533487127772211, 0.22749738814449078, 0.21621406832556087, 0.2100983856514365, 0.20049785833257633] ***
*** starting iteration: 6; err: [Inf, 0.28975883478441417, 0.2533487127772211, 0.22749738814449078, 0.21621406832556087, 0.2100983856514365, 0.20049785833257633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28975883478441417, 0.2533487127772211, 0.22749738814449078, 0.21621406832556087, 0.2100983856514365, 0.20049785833257633, 0.19771993309035674] ***
*** starting iteration: 7; err: [Inf, 0.28975883478441417, 0.2533487127772211, 0.22749738814449078, 0.21621406832556087, 0.2100983856514365, 0.20049785833257633, 0.19771993309035674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28975883478441417, 0.2533487127772211, 0.22749738814449078, 0.21621406832556087, 0.2100983856514365, 0.20049785833257633, 0.19771993309035674, 0.1961462063974961] ***
*** starting iteration: 8; err: [Inf, 0.28975883478441417, 0.2533487127772211, 0.22749738814449078, 0.21621406832556087, 0.2100983856514365, 0.20049785833257633, 0.19771993309035674, 0.1961462063974961] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28975883478441417, 0.2533487127772211, 0.22749738814449078, 0.21621406832556087, 0.2100983856514365, 0.20049785833257633, 0.19771993309035674, 0.1961462063974961, 0.1952454517735308] ***
*** finished computation of 7 references, err: [Inf, 0.28975883478441417, 0.2533487127772211, 0.22749738814449078, 0.21621406832556087, 0.2100983856514365, 0.20049785833257633, 0.19771993309035674, 0.1961462063974961, 0.1952454517735308] ***
*** center 1: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [91, 26, 0]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(1, 91), (2, 26)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 65, 27]]
** centroid: 3, normalized-entropy: 0.8731720603476306, [(2, 65), (3, 27)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [53, 33, 0]]
** centroid: 4, normalized-entropy: 0.9606276613221153, [(1, 53), (2, 33)]
*** center 5: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [55, 21, 0]]
** centroid: 6, normalized-entropy: 0.8503821170987139, [(1, 55), (2, 21)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [4, 87, 0]]
** centroid: 7, normalized-entropy: 0.26014536394771426, [(1, 4), (2, 87)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24311447386368773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24311447386368773, 0.2051873611742868] ***
*** starting iteration: 2; err: [Inf, 0.24311447386368773, 0.2051873611742868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24311447386368773, 0.2051873611742868, 0.19173411184829706] ***
*** starting iteration: 3; err: [Inf, 0.24311447386368773, 0.2051873611742868, 0.19173411184829706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24311447386368773, 0.2051873611742868, 0.19173411184829706, 0.18957114410328343] ***
*** starting iteration: 4; err: [Inf, 0.24311447386368773, 0.2051873611742868, 0.19173411184829706, 0.18957114410328343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24311447386368773, 0.2051873611742868, 0.19173411184829706, 0.18957114410328343, 0.18840185587812422] ***
*** starting iteration: 5; err: [Inf, 0.24311447386368773, 0.2051873611742868, 0.19173411184829706, 0.18957114410328343, 0.18840185587812422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24311447386368773, 0.2051873611742868, 0.19173411184829706, 0.18957114410328343, 0.18840185587812422, 0.18743558677201017] ***
*** finished computation of 7 references, err: [Inf, 0.24311447386368773, 0.2051873611742868, 0.19173411184829706, 0.18957114410328343, 0.18840185587812422, 0.18743558677201017] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [10, 68, 0]]
** centroid: 1, normalized-entropy: 0.552495114325111, [(1, 10), (2, 68)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 25, 0]]
** centroid: 2, normalized-entropy: 0.8609652558547648, [(1, 63), (2, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 70, 23]]
** centroid: 5, normalized-entropy: 0.8069896049203007, [(2, 70), (3, 23)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 85, 0]]
** centroid: 6, normalized-entropy: 0.15790637433488164, [(1, 2), (2, 85)]
*** center 7: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2617596475445181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617596475445181, 0.20623990921289667] ***
*** starting iteration: 2; err: [Inf, 0.2617596475445181, 0.20623990921289667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616] ***
*** starting iteration: 3; err: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616, 0.19540149931107526] ***
*** starting iteration: 4; err: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616, 0.19540149931107526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616, 0.19540149931107526, 0.19427063466556582] ***
*** starting iteration: 5; err: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616, 0.19540149931107526, 0.19427063466556582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616, 0.19540149931107526, 0.19427063466556582, 0.1914062270743848] ***
*** starting iteration: 6; err: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616, 0.19540149931107526, 0.19427063466556582, 0.1914062270743848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616, 0.19540149931107526, 0.19427063466556582, 0.1914062270743848, 0.18977797988975334] ***
*** starting iteration: 7; err: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616, 0.19540149931107526, 0.19427063466556582, 0.1914062270743848, 0.18977797988975334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616, 0.19540149931107526, 0.19427063466556582, 0.1914062270743848, 0.18977797988975334, 0.18786123709130412] ***
*** starting iteration: 8; err: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616, 0.19540149931107526, 0.19427063466556582, 0.1914062270743848, 0.18977797988975334, 0.18786123709130412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616, 0.19540149931107526, 0.19427063466556582, 0.1914062270743848, 0.18977797988975334, 0.18786123709130412, 0.18683996853855686] ***
*** starting iteration: 9; err: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616, 0.19540149931107526, 0.19427063466556582, 0.1914062270743848, 0.18977797988975334, 0.18786123709130412, 0.18683996853855686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616, 0.19540149931107526, 0.19427063466556582, 0.1914062270743848, 0.18977797988975334, 0.18786123709130412, 0.18683996853855686, 0.18610735362356548] ***
*** finished computation of 7 references, err: [Inf, 0.2617596475445181, 0.20623990921289667, 0.19799608769065616, 0.19540149931107526, 0.19427063466556582, 0.1914062270743848, 0.18977797988975334, 0.18786123709130412, 0.18683996853855686, 0.18610735362356548] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [73, 26, 0]]
** centroid: 1, normalized-entropy: 0.8306836355350677, [(1, 73), (2, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [119, 2, 0]]
** centroid: 2, normalized-entropy: 0.12148047831884834, [(1, 119), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [5, 85, 0]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(1, 5), (2, 85)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [2, 80, 0]]
** centroid: 4, normalized-entropy: 0.16542703399626665, [(1, 2), (2, 80)]
*** center 5: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 61, 18]]
** centroid: 6, normalized-entropy: 0.7742411580847273, [(2, 61), (3, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 14)
[0.9459998921076765, 0.9409948871026715, 0.9399759040477603, 0.9390198581815348, 0.9349888810966656, 0.9330138521755288, 0.928020835206464, 0.9249818680956405, 0.9159908411405416, 0.9159848471225717, 0.8829997662332992, 0.8540186893480307, 0.8259966553379727, 0.7970095844347341]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9459998921076765
finished with 15
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.22899864452007274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22899864452007274, 0.1986598380398727] ***
*** finished computation of 7 references, err: [Inf, 0.22899864452007274, 0.1986598380398727] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [14, 81, 0]]
** centroid: 1, normalized-entropy: 0.6032154068313579, [(1, 14), (2, 81)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [103, 3, 0]]
** centroid: 2, normalized-entropy: 0.1858030790723033, [(1, 103), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [135, 4, 0]]
** centroid: 3, normalized-entropy: 0.18822088853744873, [(1, 135), (2, 4)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 51, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [58, 37, 0]]
** centroid: 6, normalized-entropy: 0.9644590583765235, [(1, 58), (2, 37)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 56, 26]]
** centroid: 7, normalized-entropy: 0.9011701959974223, [(2, 56), (3, 26)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2381303514119355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2381303514119355, 0.20657865971472042] ***
*** finished computation of 7 references, err: [Inf, 0.2381303514119355, 0.20657865971472042] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [12, 51, 0]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(1, 12), (2, 51)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [125, 2, 0]]
** centroid: 2, normalized-entropy: 0.116849760923655, [(1, 125), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [33, 82, 0]]
** centroid: 3, normalized-entropy: 0.8647572655747071, [(1, 33), (2, 82)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 52, 23]]
** centroid: 4, normalized-entropy: 0.8892881527272397, [(2, 52), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [115, 3, 0]]
** centroid: 5, normalized-entropy: 0.17089522427059886, [(1, 115), (2, 3)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 58, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33093375561973903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33093375561973903, 0.22531582929355942] ***
*** finished computation of 7 references, err: [Inf, 0.33093375561973903, 0.22531582929355942] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 32, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 22, 18]]
** centroid: 2, normalized-entropy: 0.9927744539878083, [(2, 22), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [104, 42, 0]]
** centroid: 3, normalized-entropy: 0.8656939941993219, [(1, 104), (2, 42)]
*** center 4: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [149, 12, 0]]
** centroid: 5, normalized-entropy: 0.38262085601824475, [(1, 149), (2, 12)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 70, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [25, 76, 0]]
** centroid: 7, normalized-entropy: 0.8073313266519867, [(1, 25), (2, 76)]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 15)
[0.9459998921076765, 0.9409948871026715, 0.9399759040477603, 0.9390198581815348, 0.9369908830986676, 0.9349888810966656, 0.9330138521755288, 0.928020835206464, 0.9249818680956405, 0.9159908411405416, 0.9159848471225717, 0.8829997662332992, 0.8540186893480307, 0.8259966553379727, 0.7970095844347341]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9459998921076765
finished with 15
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9459998921076765, 0.9409948871026715, 0.9399759040477603, 0.9390198581815348, 0.9369908830986676, 0.9349888810966656, 0.9330138521755288, 0.928020835206464, 0.9249818680956405, 0.9159908411405416, 0.9159848471225717, 0.8829997662332992, 0.8540186893480307, 0.8259966553379727, 0.7970095844347341]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9459998921076765
finished with 15
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9459998921076765, 0.9409948871026715, 0.9399759040477603, 0.9390198581815348, 0.9369908830986676, 0.9349888810966656, 0.9330138521755288, 0.928020835206464, 0.9249818680956405, 0.9159908411405416, 0.9159848471225717, 0.8829997662332992, 0.8540186893480307, 0.8259966553379727, 0.7970095844347341]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9459998921076765
finished with 15
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9459998921076765, 0.9409948871026715, 0.9399759040477603, 0.9390198581815348, 0.9369908830986676, 0.9349888810966656, 0.9330138521755288, 0.928020835206464, 0.9249818680956405, 0.9159908411405416, 0.9159848471225717, 0.8829997662332992, 0.8540186893480307, 0.8259966553379727, 0.7970095844347341]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9459998921076765
finished with 17
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.39477638573897583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39477638573897583, 0.32054958097894004] ***
*** finished computation of 3 references, err: [Inf, 0.39477638573897583, 0.32054958097894004] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [150, 180, 27]]
** centroid: 1, normalized-entropy: 0.8236429712986425, [(1, 150), (2, 180), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [154, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [103, 52, 0]]
** centroid: 3, normalized-entropy: 0.9204313753180552, [(1, 103), (2, 52)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4140566200090536] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4140566200090536, 0.305030203858639] ***
*** finished computation of 3 references, err: [Inf, 0.4140566200090536, 0.305030203858639] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [113, 162, 23]]
** centroid: 1, normalized-entropy: 0.8162587436839294, [(1, 113), (2, 162), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [115, 86, 0]]
** centroid: 2, normalized-entropy: 0.984931667482493, [(1, 115), (2, 86)]
*** center 3: selecting labels [1] (freq >= 1) [from [168, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38600108458491594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38600108458491594, 0.2948337882272676] ***
*** finished computation of 3 references, err: [Inf, 0.38600108458491594, 0.2948337882272676] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [109, 176, 18]]
** centroid: 1, normalized-entropy: 0.7746713989859356, [(1, 109), (2, 176), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [164, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [122, 78, 0]]
** centroid: 3, normalized-entropy: 0.9647995485050873, [(1, 122), (2, 78)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3486371739703166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3486371739703166, 0.2405691991903464] ***
*** finished computation of 3 references, err: [Inf, 0.3486371739703166, 0.2405691991903464] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [282, 23, 0]]
** centroid: 1, normalized-entropy: 0.38579524764444173, [(1, 282), (2, 23)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [5, 155, 27]]
** centroid: 2, normalized-entropy: 0.48408972068528333, [(1, 5), (2, 155), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [120, 54, 0]]
** centroid: 3, normalized-entropy: 0.8935711016541908, [(1, 120), (2, 54)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31452620384385294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31452620384385294, 0.23783481702197348] ***
*** finished computation of 3 references, err: [Inf, 0.31452620384385294, 0.23783481702197348] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [267, 39, 0]]
** centroid: 1, normalized-entropy: 0.550405815580872, [(1, 267), (2, 39)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 170, 23]]
** centroid: 2, normalized-entropy: 0.5269731816581291, [(2, 170), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [129, 39, 0]]
** centroid: 3, normalized-entropy: 0.7817281222714539, [(1, 129), (2, 39)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.349158127408201] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.349158127408201, 0.23824169701370207] ***
*** finished computation of 3 references, err: [Inf, 0.349158127408201, 0.23824169701370207] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [259, 21, 0]]
** centroid: 1, normalized-entropy: 0.3843115441264972, [(1, 259), (2, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [136, 65, 0]]
** centroid: 2, normalized-entropy: 0.9080225655227313, [(1, 136), (2, 65)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 168, 18]]
** centroid: 3, normalized-entropy: 0.45868581620054033, [(2, 168), (3, 18)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 17)
[0.9459998921076765, 0.9409948871026715, 0.9399759040477603, 0.9390198581815348, 0.9369908830986676, 0.9349888810966656, 0.9330138521755288, 0.928020835206464, 0.9249818680956405, 0.9159908411405416, 0.9159848471225717, 0.908009806213399, 0.8829997662332992, 0.8540186893480307, 0.8439727152302003, 0.8259966553379727, 0.7970095844347341]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9459998921076765
finished with 17
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.20636280523240566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20636280523240566, 0.156182403302053] ***
*** starting iteration: 2; err: [Inf, 0.20636280523240566, 0.156182403302053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20636280523240566, 0.156182403302053, 0.1540571400281042] ***
*** starting iteration: 3; err: [Inf, 0.20636280523240566, 0.156182403302053, 0.1540571400281042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20636280523240566, 0.156182403302053, 0.1540571400281042, 0.15102907322440295] ***
*** starting iteration: 4; err: [Inf, 0.20636280523240566, 0.156182403302053, 0.1540571400281042, 0.15102907322440295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20636280523240566, 0.156182403302053, 0.1540571400281042, 0.15102907322440295, 0.14925828739954158] ***
*** starting iteration: 5; err: [Inf, 0.20636280523240566, 0.156182403302053, 0.1540571400281042, 0.15102907322440295, 0.14925828739954158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20636280523240566, 0.156182403302053, 0.1540571400281042, 0.15102907322440295, 0.14925828739954158, 0.1485355365704745] ***
*** finished computation of 7 references, err: [Inf, 0.20636280523240566, 0.156182403302053, 0.1540571400281042, 0.15102907322440295, 0.14925828739954158, 0.1485355365704745] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [128, 5, 0]]
** centroid: 1, normalized-entropy: 0.2311498003550482, [(1, 128), (2, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 157, 34]]
** centroid: 3, normalized-entropy: 0.6757052983053979, [(2, 157), (3, 34)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [96, 62, 0]]
** centroid: 4, normalized-entropy: 0.966334094295981, [(1, 96), (2, 62)]
*** center 5: selecting labels [1] (freq >= 2) [from [119, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [81, 62, 0]]
** centroid: 6, normalized-entropy: 0.9872278299417402, [(1, 81), (2, 62)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [58, 81, 0]]
** centroid: 7, normalized-entropy: 0.9801587133634083, [(1, 58), (2, 81)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3803525510150939] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3803525510150939, 0.20946140408981592] ***
*** starting iteration: 2; err: [Inf, 0.3803525510150939, 0.20946140408981592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545] ***
*** starting iteration: 3; err: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598] ***
*** starting iteration: 4; err: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598, 0.15797309623099864] ***
*** starting iteration: 5; err: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598, 0.15797309623099864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598, 0.15797309623099864, 0.15236230986006558] ***
*** starting iteration: 6; err: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598, 0.15797309623099864, 0.15236230986006558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598, 0.15797309623099864, 0.15236230986006558, 0.148350497065112] ***
*** starting iteration: 7; err: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598, 0.15797309623099864, 0.15236230986006558, 0.148350497065112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598, 0.15797309623099864, 0.15236230986006558, 0.148350497065112, 0.14631235719332472] ***
*** starting iteration: 8; err: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598, 0.15797309623099864, 0.15236230986006558, 0.148350497065112, 0.14631235719332472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598, 0.15797309623099864, 0.15236230986006558, 0.148350497065112, 0.14631235719332472, 0.14458533951453864] ***
*** starting iteration: 9; err: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598, 0.15797309623099864, 0.15236230986006558, 0.148350497065112, 0.14631235719332472, 0.14458533951453864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598, 0.15797309623099864, 0.15236230986006558, 0.148350497065112, 0.14631235719332472, 0.14458533951453864, 0.1434759079478681] ***
*** starting iteration: 10; err: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598, 0.15797309623099864, 0.15236230986006558, 0.148350497065112, 0.14631235719332472, 0.14458533951453864, 0.1434759079478681] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598, 0.15797309623099864, 0.15236230986006558, 0.148350497065112, 0.14631235719332472, 0.14458533951453864, 0.1434759079478681, 0.1429877266008407] ***
*** finished computation of 7 references, err: [Inf, 0.3803525510150939, 0.20946140408981592, 0.18615537626482545, 0.16855862800171598, 0.15797309623099864, 0.15236230986006558, 0.148350497065112, 0.14631235719332472, 0.14458533951453864, 0.1434759079478681, 0.1429877266008407] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 63, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [64, 14, 0]]
** centroid: 2, normalized-entropy: 0.6789538995185759, [(1, 64), (2, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 52, 17]]
** centroid: 4, normalized-entropy: 0.8054848387405957, [(2, 52), (3, 17)]
*** center 5: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [47, 37, 0]]
** centroid: 6, normalized-entropy: 0.9897525351939971, [(1, 47), (2, 37)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [28, 49, 0]]
** centroid: 7, normalized-entropy: 0.9456603046006401, [(1, 28), (2, 49)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1876634449958801] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1876634449958801, 0.1558762383768335] ***
*** starting iteration: 2; err: [Inf, 0.1876634449958801, 0.1558762383768335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1876634449958801, 0.1558762383768335, 0.15065190063603223] ***
*** starting iteration: 3; err: [Inf, 0.1876634449958801, 0.1558762383768335, 0.15065190063603223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1876634449958801, 0.1558762383768335, 0.15065190063603223, 0.1478374560000375] ***
*** starting iteration: 4; err: [Inf, 0.1876634449958801, 0.1558762383768335, 0.15065190063603223, 0.1478374560000375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1876634449958801, 0.1558762383768335, 0.15065190063603223, 0.1478374560000375, 0.14636003357358277] ***
*** starting iteration: 5; err: [Inf, 0.1876634449958801, 0.1558762383768335, 0.15065190063603223, 0.1478374560000375, 0.14636003357358277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1876634449958801, 0.1558762383768335, 0.15065190063603223, 0.1478374560000375, 0.14636003357358277, 0.14582771905884145] ***
*** finished computation of 7 references, err: [Inf, 0.1876634449958801, 0.1558762383768335, 0.15065190063603223, 0.1478374560000375, 0.14636003357358277, 0.14582771905884145] ***
*** center 1: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [9, 64, 0]]
** centroid: 2, normalized-entropy: 0.5387379148665815, [(1, 9), (2, 64)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [77, 7, 0]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(1, 77), (2, 7)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [60, 11, 0]]
** centroid: 4, normalized-entropy: 0.6220403090607189, [(1, 60), (2, 11)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 38, 18]]
** centroid: 5, normalized-entropy: 0.9059282160429994, [(2, 38), (3, 18)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 67, 0]]
** centroid: 6, normalized-entropy: 0.25524211319019174, [(1, 3), (2, 67)]
*** center 7: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18457928355783224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18457928355783224, 0.15379814323596655] ***
*** starting iteration: 2; err: [Inf, 0.18457928355783224, 0.15379814323596655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18457928355783224, 0.15379814323596655, 0.15173461477085948] ***
*** starting iteration: 3; err: [Inf, 0.18457928355783224, 0.15379814323596655, 0.15173461477085948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18457928355783224, 0.15379814323596655, 0.15173461477085948, 0.15107128055300564] ***
*** finished computation of 7 references, err: [Inf, 0.18457928355783224, 0.15379814323596655, 0.15173461477085948, 0.15107128055300564] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 70, 16]]
** centroid: 1, normalized-entropy: 0.6931274153282881, [(2, 70), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [72, 44, 0]]
** centroid: 3, normalized-entropy: 0.9575534837147484, [(1, 72), (2, 44)]
*** center 4: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [37, 29, 0]]
** centroid: 5, normalized-entropy: 0.9893755831922303, [(1, 37), (2, 29)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [11, 48, 0]]
** centroid: 6, normalized-entropy: 0.693965967334286, [(1, 11), (2, 48)]
*** center 7: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2343603971581906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2343603971581906, 0.1640592967569828] ***
*** starting iteration: 2; err: [Inf, 0.2343603971581906, 0.1640592967569828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2343603971581906, 0.1640592967569828, 0.15567040062975138] ***
*** starting iteration: 3; err: [Inf, 0.2343603971581906, 0.1640592967569828, 0.15567040062975138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2343603971581906, 0.1640592967569828, 0.15567040062975138, 0.15283365892153233] ***
*** starting iteration: 4; err: [Inf, 0.2343603971581906, 0.1640592967569828, 0.15567040062975138, 0.15283365892153233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2343603971581906, 0.1640592967569828, 0.15567040062975138, 0.15283365892153233, 0.15158965403214097] ***
*** starting iteration: 5; err: [Inf, 0.2343603971581906, 0.1640592967569828, 0.15567040062975138, 0.15283365892153233, 0.15158965403214097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2343603971581906, 0.1640592967569828, 0.15567040062975138, 0.15283365892153233, 0.15158965403214097, 0.15084999807737767] ***
*** finished computation of 7 references, err: [Inf, 0.2343603971581906, 0.1640592967569828, 0.15567040062975138, 0.15283365892153233, 0.15158965403214097, 0.15084999807737767] ***
*** center 1: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 18]]
** centroid: 2, normalized-entropy: 0.9486131982385807, [(2, 31), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [63, 38, 0]]
** centroid: 3, normalized-entropy: 0.9553413768968346, [(1, 63), (2, 38)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [68, 12, 0]]
** centroid: 4, normalized-entropy: 0.6098403047164005, [(1, 68), (2, 12)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 75, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [41, 22, 0]]
** centroid: 6, normalized-entropy: 0.9333572600179806, [(1, 41), (2, 22)]
*** center 7: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2094671527855098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2094671527855098, 0.1679272569671739] ***
*** starting iteration: 2; err: [Inf, 0.2094671527855098, 0.1679272569671739] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2094671527855098, 0.1679272569671739, 0.1551490750964731] ***
*** starting iteration: 3; err: [Inf, 0.2094671527855098, 0.1679272569671739, 0.1551490750964731] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2094671527855098, 0.1679272569671739, 0.1551490750964731, 0.1490679942825809] ***
*** starting iteration: 4; err: [Inf, 0.2094671527855098, 0.1679272569671739, 0.1551490750964731, 0.1490679942825809] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2094671527855098, 0.1679272569671739, 0.1551490750964731, 0.1490679942825809, 0.14559274259395896] ***
*** starting iteration: 5; err: [Inf, 0.2094671527855098, 0.1679272569671739, 0.1551490750964731, 0.1490679942825809, 0.14559274259395896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2094671527855098, 0.1679272569671739, 0.1551490750964731, 0.1490679942825809, 0.14559274259395896, 0.14429152282699942] ***
*** starting iteration: 6; err: [Inf, 0.2094671527855098, 0.1679272569671739, 0.1551490750964731, 0.1490679942825809, 0.14559274259395896, 0.14429152282699942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2094671527855098, 0.1679272569671739, 0.1551490750964731, 0.1490679942825809, 0.14559274259395896, 0.14429152282699942, 0.14405000197235496] ***
*** finished computation of 7 references, err: [Inf, 0.2094671527855098, 0.1679272569671739, 0.1551490750964731, 0.1490679942825809, 0.14559274259395896, 0.14429152282699942, 0.14405000197235496] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 61, 15]]
** centroid: 1, normalized-entropy: 0.7166336117927455, [(2, 61), (3, 15)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 59, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [69, 7, 0]]
** centroid: 4, normalized-entropy: 0.4434581453896789, [(1, 69), (2, 7)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [57, 22, 0]]
** centroid: 5, normalized-entropy: 0.8533728188427888, [(1, 57), (2, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [41, 32, 0]]
** centroid: 7, normalized-entropy: 0.9890076795739703, [(1, 41), (2, 32)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21433336701616645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21433336701616645, 0.17316440185438842] ***
*** starting iteration: 2; err: [Inf, 0.21433336701616645, 0.17316440185438842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21433336701616645, 0.17316440185438842, 0.1567895474974066] ***
*** starting iteration: 3; err: [Inf, 0.21433336701616645, 0.17316440185438842, 0.1567895474974066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21433336701616645, 0.17316440185438842, 0.1567895474974066, 0.15036050028167666] ***
*** starting iteration: 4; err: [Inf, 0.21433336701616645, 0.17316440185438842, 0.1567895474974066, 0.15036050028167666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21433336701616645, 0.17316440185438842, 0.1567895474974066, 0.15036050028167666, 0.1464546735305339] ***
*** starting iteration: 5; err: [Inf, 0.21433336701616645, 0.17316440185438842, 0.1567895474974066, 0.15036050028167666, 0.1464546735305339] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21433336701616645, 0.17316440185438842, 0.1567895474974066, 0.15036050028167666, 0.1464546735305339, 0.14464078493695706] ***
*** starting iteration: 6; err: [Inf, 0.21433336701616645, 0.17316440185438842, 0.1567895474974066, 0.15036050028167666, 0.1464546735305339, 0.14464078493695706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21433336701616645, 0.17316440185438842, 0.1567895474974066, 0.15036050028167666, 0.1464546735305339, 0.14464078493695706, 0.14382104547508062] ***
*** finished computation of 7 references, err: [Inf, 0.21433336701616645, 0.17316440185438842, 0.1567895474974066, 0.15036050028167666, 0.1464546735305339, 0.14464078493695706, 0.14382104547508062] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [50, 32, 0]]
** centroid: 1, normalized-entropy: 0.9649567669505686, [(1, 50), (2, 32)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 66, 17]]
** centroid: 2, normalized-entropy: 0.7314625617214586, [(2, 66), (3, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [41, 35, 0]]
** centroid: 4, normalized-entropy: 0.9954993847275952, [(1, 41), (2, 35)]
*** center 5: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [9, 50, 0]]
** centroid: 7, normalized-entropy: 0.6161661934005354, [(1, 9), (2, 50)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20052628582902252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20052628582902252, 0.1687251852415502] ***
*** starting iteration: 2; err: [Inf, 0.20052628582902252, 0.1687251852415502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307] ***
*** starting iteration: 3; err: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307, 0.1579606741629541] ***
*** starting iteration: 4; err: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307, 0.1579606741629541] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307, 0.1579606741629541, 0.15527171752788127] ***
*** starting iteration: 5; err: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307, 0.1579606741629541, 0.15527171752788127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307, 0.1579606741629541, 0.15527171752788127, 0.15303704637661578] ***
*** starting iteration: 6; err: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307, 0.1579606741629541, 0.15527171752788127, 0.15303704637661578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307, 0.1579606741629541, 0.15527171752788127, 0.15303704637661578, 0.14899965668830556] ***
*** starting iteration: 7; err: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307, 0.1579606741629541, 0.15527171752788127, 0.15303704637661578, 0.14899965668830556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307, 0.1579606741629541, 0.15527171752788127, 0.15303704637661578, 0.14899965668830556, 0.14528693175478838] ***
*** starting iteration: 8; err: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307, 0.1579606741629541, 0.15527171752788127, 0.15303704637661578, 0.14899965668830556, 0.14528693175478838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307, 0.1579606741629541, 0.15527171752788127, 0.15303704637661578, 0.14899965668830556, 0.14528693175478838, 0.14415980121679603] ***
*** starting iteration: 9; err: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307, 0.1579606741629541, 0.15527171752788127, 0.15303704637661578, 0.14899965668830556, 0.14528693175478838, 0.14415980121679603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307, 0.1579606741629541, 0.15527171752788127, 0.15303704637661578, 0.14899965668830556, 0.14528693175478838, 0.14415980121679603, 0.14362371910735966] ***
*** finished computation of 7 references, err: [Inf, 0.20052628582902252, 0.1687251852415502, 0.1621644149888307, 0.1579606741629541, 0.15527171752788127, 0.15303704637661578, 0.14899965668830556, 0.14528693175478838, 0.14415980121679603, 0.14362371910735966] ***
*** center 1: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [59, 15, 0]]
** centroid: 4, normalized-entropy: 0.7273006785144036, [(1, 59), (2, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [31, 50, 0]]
** centroid: 5, normalized-entropy: 0.9599377175669783, [(1, 31), (2, 50)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [41, 36, 0]]
** centroid: 6, normalized-entropy: 0.9969562518473082, [(1, 41), (2, 36)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 83, 13]]
** centroid: 7, normalized-entropy: 0.572108447204188, [(2, 83), (3, 13)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22556499461457133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22556499461457133, 0.17234791717864573] ***
*** starting iteration: 2; err: [Inf, 0.22556499461457133, 0.17234791717864573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22556499461457133, 0.17234791717864573, 0.1593875948310597] ***
*** starting iteration: 3; err: [Inf, 0.22556499461457133, 0.17234791717864573, 0.1593875948310597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22556499461457133, 0.17234791717864573, 0.1593875948310597, 0.15418506825529038] ***
*** starting iteration: 4; err: [Inf, 0.22556499461457133, 0.17234791717864573, 0.1593875948310597, 0.15418506825529038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22556499461457133, 0.17234791717864573, 0.1593875948310597, 0.15418506825529038, 0.1481810496058315] ***
*** starting iteration: 5; err: [Inf, 0.22556499461457133, 0.17234791717864573, 0.1593875948310597, 0.15418506825529038, 0.1481810496058315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22556499461457133, 0.17234791717864573, 0.1593875948310597, 0.15418506825529038, 0.1481810496058315, 0.14574136557336898] ***
*** starting iteration: 6; err: [Inf, 0.22556499461457133, 0.17234791717864573, 0.1593875948310597, 0.15418506825529038, 0.1481810496058315, 0.14574136557336898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22556499461457133, 0.17234791717864573, 0.1593875948310597, 0.15418506825529038, 0.1481810496058315, 0.14574136557336898, 0.14473339376971125] ***
*** starting iteration: 7; err: [Inf, 0.22556499461457133, 0.17234791717864573, 0.1593875948310597, 0.15418506825529038, 0.1481810496058315, 0.14574136557336898, 0.14473339376971125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22556499461457133, 0.17234791717864573, 0.1593875948310597, 0.15418506825529038, 0.1481810496058315, 0.14574136557336898, 0.14473339376971125, 0.14391087403707206] ***
*** finished computation of 7 references, err: [Inf, 0.22556499461457133, 0.17234791717864573, 0.1593875948310597, 0.15418506825529038, 0.1481810496058315, 0.14574136557336898, 0.14473339376971125, 0.14391087403707206] ***
*** center 1: selecting labels [1] (freq >= 2) [from [60, 1, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 76, 16]]
** centroid: 3, normalized-entropy: 0.6665783579949205, [(2, 76), (3, 16)]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 60, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [59, 15, 0]]
** centroid: 5, normalized-entropy: 0.7273006785144036, [(1, 59), (2, 15)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [73, 2, 0]]
** centroid: 6, normalized-entropy: 0.1773894531859976, [(1, 73), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [41, 22, 0]]
** centroid: 7, normalized-entropy: 0.9333572600179806, [(1, 41), (2, 22)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19784881829284132] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19784881829284132, 0.16601901597809046] ***
*** starting iteration: 2; err: [Inf, 0.19784881829284132, 0.16601901597809046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19784881829284132, 0.16601901597809046, 0.1571386704556644] ***
*** starting iteration: 3; err: [Inf, 0.19784881829284132, 0.16601901597809046, 0.1571386704556644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19784881829284132, 0.16601901597809046, 0.1571386704556644, 0.15427351973578335] ***
*** starting iteration: 4; err: [Inf, 0.19784881829284132, 0.16601901597809046, 0.1571386704556644, 0.15427351973578335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19784881829284132, 0.16601901597809046, 0.1571386704556644, 0.15427351973578335, 0.15354973634518682] ***
*** finished computation of 7 references, err: [Inf, 0.19784881829284132, 0.16601901597809046, 0.1571386704556644, 0.15427351973578335, 0.15354973634518682] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 48, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 5, 0]]
** centroid: 2, normalized-entropy: 0.378958787501346, [(1, 63), (2, 5)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [86, 7, 0]]
** centroid: 3, normalized-entropy: 0.3852851190780996, [(1, 86), (2, 7)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 68, 6]]
** centroid: 4, normalized-entropy: 0.40597703847557104, [(2, 68), (3, 6)]
*** center 5: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [70, 23, 0]]
** centroid: 6, normalized-entropy: 0.8069896049203007, [(1, 70), (2, 23)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 32, 11]]
** centroid: 7, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1927281684987247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1927281684987247, 0.1527889188490808] ***
*** starting iteration: 2; err: [Inf, 0.1927281684987247, 0.1527889188490808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1927281684987247, 0.1527889188490808, 0.15024592232890427] ***
*** starting iteration: 3; err: [Inf, 0.1927281684987247, 0.1527889188490808, 0.15024592232890427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1927281684987247, 0.1527889188490808, 0.15024592232890427, 0.14903327760938556] ***
*** starting iteration: 4; err: [Inf, 0.1927281684987247, 0.1527889188490808, 0.15024592232890427, 0.14903327760938556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1927281684987247, 0.1527889188490808, 0.15024592232890427, 0.14903327760938556, 0.14829225625097753] ***
*** finished computation of 7 references, err: [Inf, 0.1927281684987247, 0.1527889188490808, 0.15024592232890427, 0.14903327760938556, 0.14829225625097753] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 66, 16]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 66), (3, 16)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 54, 2]]
** centroid: 2, normalized-entropy: 0.2222848306856879, [(2, 54), (3, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [33, 33, 0]]
** centroid: 4, normalized-entropy: 1.0, [(1, 33), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [57, 8, 0]]
** centroid: 5, normalized-entropy: 0.5381411852224502, [(1, 57), (2, 8)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [69, 8, 0]]
** centroid: 6, normalized-entropy: 0.481225663841737, [(1, 69), (2, 8)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [53, 10, 0]]
** centroid: 7, normalized-entropy: 0.6312630180916119, [(1, 53), (2, 10)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2688014605306089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2688014605306089, 0.17445738803315908] ***
*** starting iteration: 2; err: [Inf, 0.2688014605306089, 0.17445738803315908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2688014605306089, 0.17445738803315908, 0.1637416795063764] ***
*** starting iteration: 3; err: [Inf, 0.2688014605306089, 0.17445738803315908, 0.1637416795063764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2688014605306089, 0.17445738803315908, 0.1637416795063764, 0.15714349013380707] ***
*** starting iteration: 4; err: [Inf, 0.2688014605306089, 0.17445738803315908, 0.1637416795063764, 0.15714349013380707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2688014605306089, 0.17445738803315908, 0.1637416795063764, 0.15714349013380707, 0.15027734651789068] ***
*** starting iteration: 5; err: [Inf, 0.2688014605306089, 0.17445738803315908, 0.1637416795063764, 0.15714349013380707, 0.15027734651789068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2688014605306089, 0.17445738803315908, 0.1637416795063764, 0.15714349013380707, 0.15027734651789068, 0.14792274776659906] ***
*** starting iteration: 6; err: [Inf, 0.2688014605306089, 0.17445738803315908, 0.1637416795063764, 0.15714349013380707, 0.15027734651789068, 0.14792274776659906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2688014605306089, 0.17445738803315908, 0.1637416795063764, 0.15714349013380707, 0.15027734651789068, 0.14792274776659906, 0.14721320441924035] ***
*** finished computation of 7 references, err: [Inf, 0.2688014605306089, 0.17445738803315908, 0.1637416795063764, 0.15714349013380707, 0.15027734651789068, 0.14792274776659906, 0.14721320441924035] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 67, 17]]
** centroid: 1, normalized-entropy: 0.7266645172796352, [(2, 67), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [52, 9, 0]]
** centroid: 4, normalized-entropy: 0.603652249754401, [(1, 52), (2, 9)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [72, 12, 0]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(1, 72), (2, 12)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [41, 31, 0]]
** centroid: 6, normalized-entropy: 0.9860400318404435, [(1, 41), (2, 31)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 64, 1]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27286419509351256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27286419509351256, 0.1857828928567469] ***
*** starting iteration: 2; err: [Inf, 0.27286419509351256, 0.1857828928567469] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27286419509351256, 0.1857828928567469, 0.16512116735987364] ***
*** starting iteration: 3; err: [Inf, 0.27286419509351256, 0.1857828928567469, 0.16512116735987364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27286419509351256, 0.1857828928567469, 0.16512116735987364, 0.15635429630149156] ***
*** starting iteration: 4; err: [Inf, 0.27286419509351256, 0.1857828928567469, 0.16512116735987364, 0.15635429630149156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27286419509351256, 0.1857828928567469, 0.16512116735987364, 0.15635429630149156, 0.15212304648384453] ***
*** starting iteration: 5; err: [Inf, 0.27286419509351256, 0.1857828928567469, 0.16512116735987364, 0.15635429630149156, 0.15212304648384453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27286419509351256, 0.1857828928567469, 0.16512116735987364, 0.15635429630149156, 0.15212304648384453, 0.15016239031217993] ***
*** starting iteration: 6; err: [Inf, 0.27286419509351256, 0.1857828928567469, 0.16512116735987364, 0.15635429630149156, 0.15212304648384453, 0.15016239031217993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27286419509351256, 0.1857828928567469, 0.16512116735987364, 0.15635429630149156, 0.15212304648384453, 0.15016239031217993, 0.14911943125817925] ***
*** starting iteration: 7; err: [Inf, 0.27286419509351256, 0.1857828928567469, 0.16512116735987364, 0.15635429630149156, 0.15212304648384453, 0.15016239031217993, 0.14911943125817925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27286419509351256, 0.1857828928567469, 0.16512116735987364, 0.15635429630149156, 0.15212304648384453, 0.15016239031217993, 0.14911943125817925, 0.14827962735807523] ***
*** finished computation of 7 references, err: [Inf, 0.27286419509351256, 0.1857828928567469, 0.16512116735987364, 0.15635429630149156, 0.15212304648384453, 0.15016239031217993, 0.14911943125817925, 0.14827962735807523] ***
*** center 1: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 39, 14]]
** centroid: 2, normalized-entropy: 0.8329458235361399, [(2, 39), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [84, 18, 0]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(1, 84), (2, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [46, 16, 0]]
** centroid: 4, normalized-entropy: 0.8238116333123173, [(1, 46), (2, 16)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [20, 57, 0]]
** centroid: 5, normalized-entropy: 0.8263541679009075, [(1, 20), (2, 57)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 52, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1805830838829279] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1805830838829279, 0.1534897995190695] ***
*** starting iteration: 2; err: [Inf, 0.1805830838829279, 0.1534897995190695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1805830838829279, 0.1534897995190695, 0.14780929896049202] ***
*** starting iteration: 3; err: [Inf, 0.1805830838829279, 0.1534897995190695, 0.14780929896049202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1805830838829279, 0.1534897995190695, 0.14780929896049202, 0.14500073996558785] ***
*** starting iteration: 4; err: [Inf, 0.1805830838829279, 0.1534897995190695, 0.14780929896049202, 0.14500073996558785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1805830838829279, 0.1534897995190695, 0.14780929896049202, 0.14500073996558785, 0.1434241099106148] ***
*** starting iteration: 5; err: [Inf, 0.1805830838829279, 0.1534897995190695, 0.14780929896049202, 0.14500073996558785, 0.1434241099106148] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1805830838829279, 0.1534897995190695, 0.14780929896049202, 0.14500073996558785, 0.1434241099106148, 0.1428317870236933] ***
*** finished computation of 7 references, err: [Inf, 0.1805830838829279, 0.1534897995190695, 0.14780929896049202, 0.14500073996558785, 0.1434241099106148, 0.1428317870236933] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 53, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [71, 16, 0]]
** centroid: 3, normalized-entropy: 0.6885521684368613, [(1, 71), (2, 16)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [41, 24, 0]]
** centroid: 4, normalized-entropy: 0.9500796252338518, [(1, 41), (2, 24)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [54, 12, 0]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(1, 54), (2, 12)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 67, 19]]
** centroid: 6, normalized-entropy: 0.7618624463753669, [(2, 67), (3, 19)]
*** center 7: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19898486629128456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19898486629128456, 0.1525788918323815] ***
*** starting iteration: 2; err: [Inf, 0.19898486629128456, 0.1525788918323815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19898486629128456, 0.1525788918323815, 0.14620751881971955] ***
*** starting iteration: 3; err: [Inf, 0.19898486629128456, 0.1525788918323815, 0.14620751881971955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19898486629128456, 0.1525788918323815, 0.14620751881971955, 0.14346537607349455] ***
*** starting iteration: 4; err: [Inf, 0.19898486629128456, 0.1525788918323815, 0.14620751881971955, 0.14346537607349455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19898486629128456, 0.1525788918323815, 0.14620751881971955, 0.14346537607349455, 0.14254092363570817] ***
*** finished computation of 7 references, err: [Inf, 0.19898486629128456, 0.1525788918323815, 0.14620751881971955, 0.14346537607349455, 0.14254092363570817] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [51, 8, 0]]
** centroid: 2, normalized-entropy: 0.572580465623769, [(1, 51), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [18, 59, 0]]
** centroid: 3, normalized-entropy: 0.7845191388986644, [(1, 18), (2, 59)]
*** center 4: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 56, 21]]
** centroid: 5, normalized-entropy: 0.8453509366224364, [(2, 56), (3, 21)]
*** center 6: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [70, 9, 0]]
** centroid: 7, normalized-entropy: 0.511639783631173, [(1, 70), (2, 9)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24185492447577417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24185492447577417, 0.1602410328844562] ***
*** starting iteration: 2; err: [Inf, 0.24185492447577417, 0.1602410328844562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24185492447577417, 0.1602410328844562, 0.14543189761787653] ***
*** starting iteration: 3; err: [Inf, 0.24185492447577417, 0.1602410328844562, 0.14543189761787653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24185492447577417, 0.1602410328844562, 0.14543189761787653, 0.14210851981770248] ***
*** starting iteration: 4; err: [Inf, 0.24185492447577417, 0.1602410328844562, 0.14543189761787653, 0.14210851981770248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24185492447577417, 0.1602410328844562, 0.14543189761787653, 0.14210851981770248, 0.1415136153739877] ***
*** finished computation of 7 references, err: [Inf, 0.24185492447577417, 0.1602410328844562, 0.14543189761787653, 0.14210851981770248, 0.1415136153739877] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [72, 5, 0]]
** centroid: 1, normalized-entropy: 0.34673146824966367, [(1, 72), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [52, 29, 0]]
** centroid: 2, normalized-entropy: 0.9410313090323237, [(1, 52), (2, 29)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 8, 0]]
** centroid: 3, normalized-entropy: 0.5851569902762294, [(1, 49), (2, 8)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 71, 16]]
** centroid: 4, normalized-entropy: 0.6885521684368613, [(2, 71), (3, 16)]
*** center 5: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 76, 0]]
** centroid: 7, normalized-entropy: 0.17203694935311387, [(1, 2), (2, 76)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2501412998270243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2501412998270243, 0.17395162933226674] ***
*** starting iteration: 2; err: [Inf, 0.2501412998270243, 0.17395162933226674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726] ***
*** starting iteration: 3; err: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726, 0.15862687878031284] ***
*** starting iteration: 4; err: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726, 0.15862687878031284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726, 0.15862687878031284, 0.15557228118553756] ***
*** starting iteration: 5; err: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726, 0.15862687878031284, 0.15557228118553756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726, 0.15862687878031284, 0.15557228118553756, 0.15271675697900355] ***
*** starting iteration: 6; err: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726, 0.15862687878031284, 0.15557228118553756, 0.15271675697900355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726, 0.15862687878031284, 0.15557228118553756, 0.15271675697900355, 0.1495003870166838] ***
*** starting iteration: 7; err: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726, 0.15862687878031284, 0.15557228118553756, 0.15271675697900355, 0.1495003870166838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726, 0.15862687878031284, 0.15557228118553756, 0.15271675697900355, 0.1495003870166838, 0.14670474830269814] ***
*** starting iteration: 8; err: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726, 0.15862687878031284, 0.15557228118553756, 0.15271675697900355, 0.1495003870166838, 0.14670474830269814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726, 0.15862687878031284, 0.15557228118553756, 0.15271675697900355, 0.1495003870166838, 0.14670474830269814, 0.14490847693197428] ***
*** starting iteration: 9; err: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726, 0.15862687878031284, 0.15557228118553756, 0.15271675697900355, 0.1495003870166838, 0.14670474830269814, 0.14490847693197428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726, 0.15862687878031284, 0.15557228118553756, 0.15271675697900355, 0.1495003870166838, 0.14670474830269814, 0.14490847693197428, 0.14396663891151548] ***
*** finished computation of 7 references, err: [Inf, 0.2501412998270243, 0.17395162933226674, 0.16305666596628726, 0.15862687878031284, 0.15557228118553756, 0.15271675697900355, 0.1495003870166838, 0.14670474830269814, 0.14490847693197428, 0.14396663891151548] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [76, 8, 0]]
** centroid: 1, normalized-entropy: 0.45371633918694493, [(1, 76), (2, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [30, 42, 0]]
** centroid: 3, normalized-entropy: 0.9798687566511527, [(1, 30), (2, 42)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 65, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 51, 15]]
** centroid: 5, normalized-entropy: 0.7732266742876346, [(2, 51), (3, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [57, 20, 0]]
** centroid: 7, normalized-entropy: 0.8263541679009075, [(1, 57), (2, 20)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17540421895496547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17540421895496547, 0.16143912829831242] ***
*** starting iteration: 2; err: [Inf, 0.17540421895496547, 0.16143912829831242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17540421895496547, 0.16143912829831242, 0.15806930936011485] ***
*** starting iteration: 3; err: [Inf, 0.17540421895496547, 0.16143912829831242, 0.15806930936011485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17540421895496547, 0.16143912829831242, 0.15806930936011485, 0.15697628160193564] ***
*** starting iteration: 4; err: [Inf, 0.17540421895496547, 0.16143912829831242, 0.15806930936011485, 0.15697628160193564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17540421895496547, 0.16143912829831242, 0.15806930936011485, 0.15697628160193564, 0.15458390133827923] ***
*** starting iteration: 5; err: [Inf, 0.17540421895496547, 0.16143912829831242, 0.15806930936011485, 0.15697628160193564, 0.15458390133827923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17540421895496547, 0.16143912829831242, 0.15806930936011485, 0.15697628160193564, 0.15458390133827923, 0.1508159174537286] ***
*** starting iteration: 6; err: [Inf, 0.17540421895496547, 0.16143912829831242, 0.15806930936011485, 0.15697628160193564, 0.15458390133827923, 0.1508159174537286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17540421895496547, 0.16143912829831242, 0.15806930936011485, 0.15697628160193564, 0.15458390133827923, 0.1508159174537286, 0.14853605238348247] ***
*** starting iteration: 7; err: [Inf, 0.17540421895496547, 0.16143912829831242, 0.15806930936011485, 0.15697628160193564, 0.15458390133827923, 0.1508159174537286, 0.14853605238348247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17540421895496547, 0.16143912829831242, 0.15806930936011485, 0.15697628160193564, 0.15458390133827923, 0.1508159174537286, 0.14853605238348247, 0.14732462418824435] ***
*** starting iteration: 8; err: [Inf, 0.17540421895496547, 0.16143912829831242, 0.15806930936011485, 0.15697628160193564, 0.15458390133827923, 0.1508159174537286, 0.14853605238348247, 0.14732462418824435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17540421895496547, 0.16143912829831242, 0.15806930936011485, 0.15697628160193564, 0.15458390133827923, 0.1508159174537286, 0.14853605238348247, 0.14732462418824435, 0.14671175326453523] ***
*** finished computation of 7 references, err: [Inf, 0.17540421895496547, 0.16143912829831242, 0.15806930936011485, 0.15697628160193564, 0.15458390133827923, 0.1508159174537286, 0.14853605238348247, 0.14732462418824435, 0.14671175326453523] ***
*** center 1: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [14, 55, 0]]
** centroid: 3, normalized-entropy: 0.7276874545656657, [(1, 14), (2, 55)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 63, 18]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(2, 63), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [49, 25, 0]]
** centroid: 5, normalized-entropy: 0.9227346209530939, [(1, 49), (2, 25)]
*** center 6: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [42, 39, 0]]
** centroid: 7, normalized-entropy: 0.9990102708804813, [(1, 42), (2, 39)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18505336827225982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18505336827225982, 0.16042251698020846] ***
*** starting iteration: 2; err: [Inf, 0.18505336827225982, 0.16042251698020846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18505336827225982, 0.16042251698020846, 0.15476500356569886] ***
*** starting iteration: 3; err: [Inf, 0.18505336827225982, 0.16042251698020846, 0.15476500356569886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18505336827225982, 0.16042251698020846, 0.15476500356569886, 0.1535813801959157] ***
*** starting iteration: 4; err: [Inf, 0.18505336827225982, 0.16042251698020846, 0.15476500356569886, 0.1535813801959157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18505336827225982, 0.16042251698020846, 0.15476500356569886, 0.1535813801959157, 0.15188710904307665] ***
*** starting iteration: 5; err: [Inf, 0.18505336827225982, 0.16042251698020846, 0.15476500356569886, 0.1535813801959157, 0.15188710904307665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18505336827225982, 0.16042251698020846, 0.15476500356569886, 0.1535813801959157, 0.15188710904307665, 0.14986077267955988] ***
*** starting iteration: 6; err: [Inf, 0.18505336827225982, 0.16042251698020846, 0.15476500356569886, 0.1535813801959157, 0.15188710904307665, 0.14986077267955988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18505336827225982, 0.16042251698020846, 0.15476500356569886, 0.1535813801959157, 0.15188710904307665, 0.14986077267955988, 0.1487509545320645] ***
*** starting iteration: 7; err: [Inf, 0.18505336827225982, 0.16042251698020846, 0.15476500356569886, 0.1535813801959157, 0.15188710904307665, 0.14986077267955988, 0.1487509545320645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18505336827225982, 0.16042251698020846, 0.15476500356569886, 0.1535813801959157, 0.15188710904307665, 0.14986077267955988, 0.1487509545320645, 0.14830595205537975] ***
*** finished computation of 7 references, err: [Inf, 0.18505336827225982, 0.16042251698020846, 0.15476500356569886, 0.1535813801959157, 0.15188710904307665, 0.14986077267955988, 0.1487509545320645, 0.14830595205537975] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 59, 18]]
** centroid: 1, normalized-entropy: 0.7845191388986644, [(2, 59), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [54, 10, 0]]
** centroid: 2, normalized-entropy: 0.625262405223423, [(1, 54), (2, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [39, 59, 0]]
** centroid: 6, normalized-entropy: 0.9697442681154499, [(1, 39), (2, 59)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [20, 54, 0]]
** centroid: 7, normalized-entropy: 0.8418521897563208, [(1, 20), (2, 54)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1829787679826841] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1829787679826841, 0.1534945119144395] ***
*** starting iteration: 2; err: [Inf, 0.1829787679826841, 0.1534945119144395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1829787679826841, 0.1534945119144395, 0.15050631331652403] ***
*** starting iteration: 3; err: [Inf, 0.1829787679826841, 0.1534945119144395, 0.15050631331652403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1829787679826841, 0.1534945119144395, 0.15050631331652403, 0.14973422132991254] ***
*** finished computation of 7 references, err: [Inf, 0.1829787679826841, 0.1534945119144395, 0.15050631331652403, 0.14973422132991254] ***
*** center 1: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [46, 20, 0]]
** centroid: 2, normalized-entropy: 0.8849636363831529, [(1, 46), (2, 20)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 57, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 66, 15]]
** centroid: 5, normalized-entropy: 0.6912898694057888, [(2, 66), (3, 15)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [71, 38, 0]]
** centroid: 6, normalized-entropy: 0.9328330312384981, [(1, 71), (2, 38)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [45, 10, 0]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(1, 45), (2, 10)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2718704385459423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2718704385459423, 0.20833962833695113] ***
*** starting iteration: 2; err: [Inf, 0.2718704385459423, 0.20833962833695113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284] ***
*** starting iteration: 3; err: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284, 0.18172020931728183] ***
*** starting iteration: 4; err: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284, 0.18172020931728183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284, 0.18172020931728183, 0.17157493614405395] ***
*** starting iteration: 5; err: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284, 0.18172020931728183, 0.17157493614405395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284, 0.18172020931728183, 0.17157493614405395, 0.1627490718178451] ***
*** starting iteration: 6; err: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284, 0.18172020931728183, 0.17157493614405395, 0.1627490718178451] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284, 0.18172020931728183, 0.17157493614405395, 0.1627490718178451, 0.15803459736611694] ***
*** starting iteration: 7; err: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284, 0.18172020931728183, 0.17157493614405395, 0.1627490718178451, 0.15803459736611694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284, 0.18172020931728183, 0.17157493614405395, 0.1627490718178451, 0.15803459736611694, 0.15549205634836108] ***
*** starting iteration: 8; err: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284, 0.18172020931728183, 0.17157493614405395, 0.1627490718178451, 0.15803459736611694, 0.15549205634836108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284, 0.18172020931728183, 0.17157493614405395, 0.1627490718178451, 0.15803459736611694, 0.15549205634836108, 0.1543297887351364] ***
*** starting iteration: 9; err: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284, 0.18172020931728183, 0.17157493614405395, 0.1627490718178451, 0.15803459736611694, 0.15549205634836108, 0.1543297887351364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284, 0.18172020931728183, 0.17157493614405395, 0.1627490718178451, 0.15803459736611694, 0.15549205634836108, 0.1543297887351364, 0.15378984540514648] ***
*** finished computation of 7 references, err: [Inf, 0.2718704385459423, 0.20833962833695113, 0.19428588591702284, 0.18172020931728183, 0.17157493614405395, 0.1627490718178451, 0.15803459736611694, 0.15549205634836108, 0.1543297887351364, 0.15378984540514648] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 82, 17]]
** centroid: 1, normalized-entropy: 0.6616179061408356, [(2, 82), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [15, 21, 0]]
** centroid: 2, normalized-entropy: 0.9798687566511527, [(1, 15), (2, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [3, 53, 0]]
** centroid: 3, normalized-entropy: 0.3013786435930858, [(1, 3), (2, 53)]
*** center 4: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [102, 29, 0]]
** centroid: 6, normalized-entropy: 0.7626685455085028, [(1, 102), (2, 29)]
*** center 7: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20429873321391642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20429873321391642, 0.15687369703687729] ***
*** starting iteration: 2; err: [Inf, 0.20429873321391642, 0.15687369703687729] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20429873321391642, 0.15687369703687729, 0.14947079561837018] ***
*** starting iteration: 3; err: [Inf, 0.20429873321391642, 0.15687369703687729, 0.14947079561837018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20429873321391642, 0.15687369703687729, 0.14947079561837018, 0.14549879835732282] ***
*** starting iteration: 4; err: [Inf, 0.20429873321391642, 0.15687369703687729, 0.14947079561837018, 0.14549879835732282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20429873321391642, 0.15687369703687729, 0.14947079561837018, 0.14549879835732282, 0.14311332016711822] ***
*** starting iteration: 5; err: [Inf, 0.20429873321391642, 0.15687369703687729, 0.14947079561837018, 0.14549879835732282, 0.14311332016711822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20429873321391642, 0.15687369703687729, 0.14947079561837018, 0.14549879835732282, 0.14311332016711822, 0.14206463809963316] ***
*** starting iteration: 6; err: [Inf, 0.20429873321391642, 0.15687369703687729, 0.14947079561837018, 0.14549879835732282, 0.14311332016711822, 0.14206463809963316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20429873321391642, 0.15687369703687729, 0.14947079561837018, 0.14549879835732282, 0.14311332016711822, 0.14206463809963316, 0.14161981453280895] ***
*** finished computation of 7 references, err: [Inf, 0.20429873321391642, 0.15687369703687729, 0.14947079561837018, 0.14549879835732282, 0.14311332016711822, 0.14206463809963316, 0.14161981453280895] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [9, 74, 0]]
** centroid: 1, normalized-entropy: 0.4951734787020683, [(1, 9), (2, 74)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 37, 16]]
** centroid: 2, normalized-entropy: 0.8835850861052531, [(2, 37), (3, 16)]
*** center 3: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 60, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [51, 6, 0]]
** centroid: 5, normalized-entropy: 0.48546076074591343, [(1, 51), (2, 6)]
*** center 6: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [81, 8, 0]]
** centroid: 7, normalized-entropy: 0.43609466429612137, [(1, 81), (2, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19650944446306676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19650944446306676, 0.16515694051911123] ***
*** starting iteration: 2; err: [Inf, 0.19650944446306676, 0.16515694051911123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19650944446306676, 0.16515694051911123, 0.15293416817486286] ***
*** starting iteration: 3; err: [Inf, 0.19650944446306676, 0.16515694051911123, 0.15293416817486286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19650944446306676, 0.16515694051911123, 0.15293416817486286, 0.14777918428368866] ***
*** starting iteration: 4; err: [Inf, 0.19650944446306676, 0.16515694051911123, 0.15293416817486286, 0.14777918428368866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19650944446306676, 0.16515694051911123, 0.15293416817486286, 0.14777918428368866, 0.14620402961876244] ***
*** starting iteration: 5; err: [Inf, 0.19650944446306676, 0.16515694051911123, 0.15293416817486286, 0.14777918428368866, 0.14620402961876244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19650944446306676, 0.16515694051911123, 0.15293416817486286, 0.14777918428368866, 0.14620402961876244, 0.14543698847200723] ***
*** finished computation of 7 references, err: [Inf, 0.19650944446306676, 0.16515694051911123, 0.15293416817486286, 0.14777918428368866, 0.14620402961876244, 0.14543698847200723] ***
*** center 1: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [47, 20, 0]]
** centroid: 2, normalized-entropy: 0.8794587736429037, [(1, 47), (2, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [62, 1, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 65, 18]]
** centroid: 4, normalized-entropy: 0.7544062039636575, [(2, 65), (3, 18)]
*** center 5: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 60, 0]]
** centroid: 6, normalized-entropy: 0.2055925081850832, [(1, 2), (2, 60)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [52, 38, 0]]
** centroid: 7, normalized-entropy: 0.9824740868386409, [(1, 52), (2, 38)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18719610878638923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18719610878638923, 0.15585570674575866] ***
*** starting iteration: 2; err: [Inf, 0.18719610878638923, 0.15585570674575866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18719610878638923, 0.15585570674575866, 0.1496127470806241] ***
*** starting iteration: 3; err: [Inf, 0.18719610878638923, 0.15585570674575866, 0.1496127470806241] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18719610878638923, 0.15585570674575866, 0.1496127470806241, 0.1475577347949147] ***
*** starting iteration: 4; err: [Inf, 0.18719610878638923, 0.15585570674575866, 0.1496127470806241, 0.1475577347949147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18719610878638923, 0.15585570674575866, 0.1496127470806241, 0.1475577347949147, 0.1453476110221818] ***
*** starting iteration: 5; err: [Inf, 0.18719610878638923, 0.15585570674575866, 0.1496127470806241, 0.1475577347949147, 0.1453476110221818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18719610878638923, 0.15585570674575866, 0.1496127470806241, 0.1475577347949147, 0.1453476110221818, 0.14461934118159114] ***
*** finished computation of 7 references, err: [Inf, 0.18719610878638923, 0.15585570674575866, 0.1496127470806241, 0.1475577347949147, 0.1453476110221818, 0.14461934118159114] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 45, 20]]
** centroid: 1, normalized-entropy: 0.8904916402194913, [(2, 45), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [58, 37, 0]]
** centroid: 2, normalized-entropy: 0.9644590583765235, [(1, 58), (2, 37)]
*** center 3: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [35, 27, 0]]
** centroid: 5, normalized-entropy: 0.9879565014919159, [(1, 35), (2, 27)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [65, 8, 0]]
** centroid: 6, normalized-entropy: 0.4986751363204345, [(1, 65), (2, 8)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 78, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.191796082329005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.191796082329005, 0.14798283763136716] ***
*** starting iteration: 2; err: [Inf, 0.191796082329005, 0.14798283763136716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.191796082329005, 0.14798283763136716, 0.14247891027480364] ***
*** starting iteration: 3; err: [Inf, 0.191796082329005, 0.14798283763136716, 0.14247891027480364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.191796082329005, 0.14798283763136716, 0.14247891027480364, 0.14139920568140224] ***
*** starting iteration: 4; err: [Inf, 0.191796082329005, 0.14798283763136716, 0.14247891027480364, 0.14139920568140224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.191796082329005, 0.14798283763136716, 0.14247891027480364, 0.14139920568140224, 0.14106059019453823] ***
*** finished computation of 7 references, err: [Inf, 0.191796082329005, 0.14798283763136716, 0.14247891027480364, 0.14139920568140224, 0.14106059019453823] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 56, 17]]
** centroid: 1, normalized-entropy: 0.7829924501610913, [(2, 56), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [40, 15, 0]]
** centroid: 2, normalized-entropy: 0.8453509366224364, [(1, 40), (2, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [22, 56, 0]]
** centroid: 5, normalized-entropy: 0.8582307926411409, [(1, 22), (2, 56)]
*** center 6: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [14, 66, 0]]
** centroid: 7, normalized-entropy: 0.6690158350565576, [(1, 14), (2, 66)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19488630553893746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19488630553893746, 0.17322474516369402] ***
*** starting iteration: 2; err: [Inf, 0.19488630553893746, 0.17322474516369402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19488630553893746, 0.17322474516369402, 0.16158714421559126] ***
*** starting iteration: 3; err: [Inf, 0.19488630553893746, 0.17322474516369402, 0.16158714421559126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19488630553893746, 0.17322474516369402, 0.16158714421559126, 0.15680628142505884] ***
*** starting iteration: 4; err: [Inf, 0.19488630553893746, 0.17322474516369402, 0.16158714421559126, 0.15680628142505884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19488630553893746, 0.17322474516369402, 0.16158714421559126, 0.15680628142505884, 0.1532487448982429] ***
*** starting iteration: 5; err: [Inf, 0.19488630553893746, 0.17322474516369402, 0.16158714421559126, 0.15680628142505884, 0.1532487448982429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19488630553893746, 0.17322474516369402, 0.16158714421559126, 0.15680628142505884, 0.1532487448982429, 0.1497643131967634] ***
*** starting iteration: 6; err: [Inf, 0.19488630553893746, 0.17322474516369402, 0.16158714421559126, 0.15680628142505884, 0.1532487448982429, 0.1497643131967634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19488630553893746, 0.17322474516369402, 0.16158714421559126, 0.15680628142505884, 0.1532487448982429, 0.1497643131967634, 0.14839947893004865] ***
*** starting iteration: 7; err: [Inf, 0.19488630553893746, 0.17322474516369402, 0.16158714421559126, 0.15680628142505884, 0.1532487448982429, 0.1497643131967634, 0.14839947893004865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19488630553893746, 0.17322474516369402, 0.16158714421559126, 0.15680628142505884, 0.1532487448982429, 0.1497643131967634, 0.14839947893004865, 0.14759945811424405] ***
*** finished computation of 7 references, err: [Inf, 0.19488630553893746, 0.17322474516369402, 0.16158714421559126, 0.15680628142505884, 0.1532487448982429, 0.1497643131967634, 0.14839947893004865, 0.14759945811424405] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [67, 13, 0]]
** centroid: 1, normalized-entropy: 0.6402569436810504, [(1, 67), (2, 13)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 63, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [88, 4, 0]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(1, 88), (2, 4)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 24, 14]]
** centroid: 4, normalized-entropy: 0.9494520153879484, [(2, 24), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [62, 15, 0]]
** centroid: 5, normalized-entropy: 0.7114160189012126, [(1, 62), (2, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 62, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2312255113106221] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312255113106221, 0.17083089100476354] ***
*** starting iteration: 2; err: [Inf, 0.2312255113106221, 0.17083089100476354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204] ***
*** starting iteration: 3; err: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911] ***
*** starting iteration: 4; err: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911, 0.15171075660549105] ***
*** starting iteration: 5; err: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911, 0.15171075660549105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911, 0.15171075660549105, 0.14985173620050773] ***
*** starting iteration: 6; err: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911, 0.15171075660549105, 0.14985173620050773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911, 0.15171075660549105, 0.14985173620050773, 0.148312890432775] ***
*** starting iteration: 7; err: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911, 0.15171075660549105, 0.14985173620050773, 0.148312890432775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911, 0.15171075660549105, 0.14985173620050773, 0.148312890432775, 0.14673074335232378] ***
*** starting iteration: 8; err: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911, 0.15171075660549105, 0.14985173620050773, 0.148312890432775, 0.14673074335232378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911, 0.15171075660549105, 0.14985173620050773, 0.148312890432775, 0.14673074335232378, 0.14401043128035962] ***
*** starting iteration: 9; err: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911, 0.15171075660549105, 0.14985173620050773, 0.148312890432775, 0.14673074335232378, 0.14401043128035962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911, 0.15171075660549105, 0.14985173620050773, 0.148312890432775, 0.14673074335232378, 0.14401043128035962, 0.142235512802843] ***
*** starting iteration: 10; err: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911, 0.15171075660549105, 0.14985173620050773, 0.148312890432775, 0.14673074335232378, 0.14401043128035962, 0.142235512802843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911, 0.15171075660549105, 0.14985173620050773, 0.148312890432775, 0.14673074335232378, 0.14401043128035962, 0.142235512802843, 0.14156971057737247] ***
*** finished computation of 7 references, err: [Inf, 0.2312255113106221, 0.17083089100476354, 0.1588770626243204, 0.1541247915159911, 0.15171075660549105, 0.14985173620050773, 0.148312890432775, 0.14673074335232378, 0.14401043128035962, 0.142235512802843, 0.14156971057737247] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [37, 3, 0]]
** centroid: 1, normalized-entropy: 0.3843115441264972, [(1, 37), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [52, 17, 0]]
** centroid: 2, normalized-entropy: 0.8054848387405957, [(1, 52), (2, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [67, 29, 0]]
** centroid: 3, normalized-entropy: 0.8838226609360483, [(1, 67), (2, 29)]
*** center 4: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 67, 22]]
** centroid: 5, normalized-entropy: 0.8067955503968327, [(2, 67), (3, 22)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 71, 0]]
** centroid: 6, normalized-entropy: 0.18116640155354563, [(1, 2), (2, 71)]
*** center 7: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1858882251493633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1858882251493633, 0.14252018938399852] ***
*** starting iteration: 2; err: [Inf, 0.1858882251493633, 0.14252018938399852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1858882251493633, 0.14252018938399852, 0.14034525864943861] ***
*** starting iteration: 3; err: [Inf, 0.1858882251493633, 0.14252018938399852, 0.14034525864943861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1858882251493633, 0.14252018938399852, 0.14034525864943861, 0.14025112452171742] ***
*** finished computation of 7 references, err: [Inf, 0.1858882251493633, 0.14252018938399852, 0.14034525864943861, 0.14025112452171742] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [13, 44, 0]]
** centroid: 1, normalized-entropy: 0.7746319868686841, [(1, 13), (2, 44)]
*** center 2: selecting labels [1] (freq >= 2) [from [81, 1, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [47, 19, 0]]
** centroid: 3, normalized-entropy: 0.8659653498997099, [(1, 47), (2, 19)]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 65, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 59, 20]]
** centroid: 7, normalized-entropy: 0.8162554088088008, [(2, 59), (3, 20)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3020271749738604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3020271749738604, 0.17982425294583662] ***
*** starting iteration: 2; err: [Inf, 0.3020271749738604, 0.17982425294583662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3020271749738604, 0.17982425294583662, 0.16073667551763357] ***
*** starting iteration: 3; err: [Inf, 0.3020271749738604, 0.17982425294583662, 0.16073667551763357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3020271749738604, 0.17982425294583662, 0.16073667551763357, 0.15368179980805144] ***
*** starting iteration: 4; err: [Inf, 0.3020271749738604, 0.17982425294583662, 0.16073667551763357, 0.15368179980805144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3020271749738604, 0.17982425294583662, 0.16073667551763357, 0.15368179980805144, 0.15062042251229285] ***
*** starting iteration: 5; err: [Inf, 0.3020271749738604, 0.17982425294583662, 0.16073667551763357, 0.15368179980805144, 0.15062042251229285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3020271749738604, 0.17982425294583662, 0.16073667551763357, 0.15368179980805144, 0.15062042251229285, 0.14851658406853677] ***
*** starting iteration: 6; err: [Inf, 0.3020271749738604, 0.17982425294583662, 0.16073667551763357, 0.15368179980805144, 0.15062042251229285, 0.14851658406853677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3020271749738604, 0.17982425294583662, 0.16073667551763357, 0.15368179980805144, 0.15062042251229285, 0.14851658406853677, 0.1473061326444149] ***
*** starting iteration: 7; err: [Inf, 0.3020271749738604, 0.17982425294583662, 0.16073667551763357, 0.15368179980805144, 0.15062042251229285, 0.14851658406853677, 0.1473061326444149] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3020271749738604, 0.17982425294583662, 0.16073667551763357, 0.15368179980805144, 0.15062042251229285, 0.14851658406853677, 0.1473061326444149, 0.14660225148126482] ***
*** finished computation of 7 references, err: [Inf, 0.3020271749738604, 0.17982425294583662, 0.16073667551763357, 0.15368179980805144, 0.15062042251229285, 0.14851658406853677, 0.1473061326444149, 0.14660225148126482] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [5, 77, 0]]
** centroid: 1, normalized-entropy: 0.3313056130577883, [(1, 5), (2, 77)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 75, 12]]
** centroid: 2, normalized-entropy: 0.5787946246321198, [(2, 75), (3, 12)]
*** center 3: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [67, 3, 0]]
** centroid: 5, normalized-entropy: 0.25524211319019174, [(1, 67), (2, 3)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [49, 21, 0]]
** centroid: 6, normalized-entropy: 0.8812908992306927, [(1, 49), (2, 21)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [53, 9, 0]]
** centroid: 7, normalized-entropy: 0.5975977764379984, [(1, 53), (2, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19360969754122198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19360969754122198, 0.15223865891154856] ***
*** starting iteration: 2; err: [Inf, 0.19360969754122198, 0.15223865891154856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19360969754122198, 0.15223865891154856, 0.14825739155057818] ***
*** starting iteration: 3; err: [Inf, 0.19360969754122198, 0.15223865891154856, 0.14825739155057818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19360969754122198, 0.15223865891154856, 0.14825739155057818, 0.14619493621587754] ***
*** starting iteration: 4; err: [Inf, 0.19360969754122198, 0.15223865891154856, 0.14825739155057818, 0.14619493621587754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19360969754122198, 0.15223865891154856, 0.14825739155057818, 0.14619493621587754, 0.1452104011278134] ***
*** finished computation of 7 references, err: [Inf, 0.19360969754122198, 0.15223865891154856, 0.14825739155057818, 0.14619493621587754, 0.1452104011278134] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [15, 55, 0]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(1, 15), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [42, 9, 0]]
** centroid: 2, normalized-entropy: 0.6722948170756378, [(1, 42), (2, 9)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [59, 7, 0]]
** centroid: 3, normalized-entropy: 0.48791799258948565, [(1, 59), (2, 7)]
*** center 4: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [9, 63, 0]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(1, 9), (2, 63)]
*** center 6: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 58, 14]]
** centroid: 7, normalized-entropy: 0.710676853856123, [(2, 58), (3, 14)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2312063602451235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312063602451235, 0.15834160884469747] ***
*** starting iteration: 2; err: [Inf, 0.2312063602451235, 0.15834160884469747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312063602451235, 0.15834160884469747, 0.15411124157812447] ***
*** starting iteration: 3; err: [Inf, 0.2312063602451235, 0.15834160884469747, 0.15411124157812447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312063602451235, 0.15834160884469747, 0.15411124157812447, 0.15230931019224225] ***
*** starting iteration: 4; err: [Inf, 0.2312063602451235, 0.15834160884469747, 0.15411124157812447, 0.15230931019224225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312063602451235, 0.15834160884469747, 0.15411124157812447, 0.15230931019224225, 0.15085512793436645] ***
*** starting iteration: 5; err: [Inf, 0.2312063602451235, 0.15834160884469747, 0.15411124157812447, 0.15230931019224225, 0.15085512793436645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312063602451235, 0.15834160884469747, 0.15411124157812447, 0.15230931019224225, 0.15085512793436645, 0.14916428705956786] ***
*** starting iteration: 6; err: [Inf, 0.2312063602451235, 0.15834160884469747, 0.15411124157812447, 0.15230931019224225, 0.15085512793436645, 0.14916428705956786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312063602451235, 0.15834160884469747, 0.15411124157812447, 0.15230931019224225, 0.15085512793436645, 0.14916428705956786, 0.14782186829485] ***
*** starting iteration: 7; err: [Inf, 0.2312063602451235, 0.15834160884469747, 0.15411124157812447, 0.15230931019224225, 0.15085512793436645, 0.14916428705956786, 0.14782186829485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312063602451235, 0.15834160884469747, 0.15411124157812447, 0.15230931019224225, 0.15085512793436645, 0.14916428705956786, 0.14782186829485, 0.14663097822852433] ***
*** starting iteration: 8; err: [Inf, 0.2312063602451235, 0.15834160884469747, 0.15411124157812447, 0.15230931019224225, 0.15085512793436645, 0.14916428705956786, 0.14782186829485, 0.14663097822852433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2312063602451235, 0.15834160884469747, 0.15411124157812447, 0.15230931019224225, 0.15085512793436645, 0.14916428705956786, 0.14782186829485, 0.14663097822852433, 0.14589461483061314] ***
*** finished computation of 7 references, err: [Inf, 0.2312063602451235, 0.15834160884469747, 0.15411124157812447, 0.15230931019224225, 0.15085512793436645, 0.14916428705956786, 0.14782186829485, 0.14663097822852433, 0.14589461483061314] ***
*** center 1: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 75, 18]]
** centroid: 2, normalized-entropy: 0.708835673332196, [(2, 75), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [21, 52, 0]]
** centroid: 3, normalized-entropy: 0.8656939941993219, [(1, 21), (2, 52)]
*** center 4: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [13, 45, 0]]
** centroid: 5, normalized-entropy: 0.7676515870125797, [(1, 13), (2, 45)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [52, 24, 0]]
** centroid: 6, normalized-entropy: 0.8997437586982626, [(1, 52), (2, 24)]
*** center 7: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 367,3 => 34,1 => 599), Dict(2 => 371,3 => 33,1 => 596))
[ Info: ===== scores for single classifier: {"micro_f1":0.953,"precision":0.953,"recall":0.953,"macro_recall":0.9608244842827597,"macro_f1":0.8779664763380222,"accuracy":0.953,"class_f1":{"2":0.9340813464235626,"3":0.717391304347826,"1":0.9824267782426778},"class_precision":{"2":0.9736842105263158,"3":0.559322033898305,"1":0.9799666110183639},"class_recall":{"2":0.8975741239892183,"3":1.0,"1":0.9848993288590604}}
[ Info: ===== scores for 1: {"micro_f1":0.974,"precision":0.974,"recall":0.974,"macro_recall":0.9687939289053636,"macro_f1":0.9539539154761142,"accuracy":0.974,"class_f1":{"2":0.9641873278236914,"3":0.9142857142857143,"1":0.9833887043189369},"class_precision":{"2":0.9859154929577465,"3":0.8648648648648649,"1":0.9736842105263158},"class_recall":{"2":0.9433962264150944,"3":0.9696969696969697,"1":0.9932885906040269}}
[ Info: ===== scores for 5: {"micro_f1":0.972,"precision":0.972,"recall":0.972,"macro_recall":0.9789130290586541,"macro_f1":0.9495024362934544,"accuracy":0.972,"class_f1":{"2":0.9620596205962059,"3":0.9041095890410958,"1":0.9823380992430614},"class_precision":{"2":0.9673024523160763,"3":0.825,"1":0.984822934232715},"class_recall":{"2":0.9568733153638814,"3":1.0,"1":0.9798657718120806}}
[ Info: ===== scores for 7: {"micro_f1":0.97,"precision":0.97,"recall":0.97,"macro_recall":0.9781336493062464,"macro_f1":0.9442931813214832,"accuracy":0.97,"class_f1":{"2":0.9595687331536388,"3":0.8918918918918919,"1":0.981418918918919},"class_precision":{"2":0.9595687331536388,"3":0.8048780487804879,"1":0.9880952380952381},"class_recall":{"2":0.9595687331536388,"3":1.0,"1":0.9748322147651006}}
[ Info: ===== scores for 9: {"micro_f1":0.969,"precision":0.969,"recall":0.969,"macro_recall":0.9775743651899154,"macro_f1":0.9363055886462819,"accuracy":0.969,"class_f1":{"2":0.9582772543741589,"3":0.868421052631579,"1":0.9822184589331076},"class_precision":{"2":0.956989247311828,"3":0.7674418604651163,"1":0.9914529914529915},"class_recall":{"2":0.9595687331536388,"3":1.0,"1":0.9731543624161074}}
[ Info: ===== scores for 11: {"micro_f1":0.967,"precision":0.967,"recall":0.967,"macro_recall":0.9761166084769984,"macro_f1":0.9313614178933429,"accuracy":0.967,"class_f1":{"2":0.955585464333782,"3":0.8571428571428571,"1":0.9813559322033899},"class_precision":{"2":0.9543010752688172,"3":0.75,"1":0.9914383561643836},"class_recall":{"2":0.9568733153638814,"3":1.0,"1":0.9714765100671141}}
(score = 0.973, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.98, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.98, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.977, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.97, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.972, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.972, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.965, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.97, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.98,"k":3,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.98,"precision":0.98,"recall":0.98,"macro_recall":0.9643038500199448,"macro_f1":0.9494390084801044,"accuracy":0.98,"class_f1":{"2":0.9726027397260274,"3":0.8857142857142858,"1":0.99},"class_precision":{"2":0.9888579387186629,"3":0.8378378378378378,"1":0.9834437086092715},"class_recall":{"2":0.9568733153638814,"3":0.9393939393939394,"1":0.9966442953020134}}
Test Summary: | Pass  Total
AKNC          |    8      8
[427, 2, 2, 1, 2, 1, 1, 3, 3, 12, 6, 7, 7, 4, 17, 9, 2, 2, 2, 4, 2, 12, 2, 3, 12, 2, 3, 3, 9, 10, 10, 8, 24, 31, 1, 5, 24, 11, 20, 7, 1, 5, 5, 2, 3, 8, 9, 3, 19, 2, 7, 23, 28, 6, 18, 9, 7, 15, 9, 8, 15, 8, 5, 9, 2, 10, 41, 31, 5, 11, 4, 18, 4, 39, 21, 27, 53, 4, 6, 4, 15, 18, 27, 2, 10, 25, 19, 14, 36, 28, 29, 15, 29, 19, 7, 2, 123, 13, 5, 34, 13, 380, 22, 6, 16, 194, 1, 4, 29, 1, 90, 113, 13, 38, 45, 9, 21, 120, 73, 21, 28, 11, 20, 32, 25, 4, 11, 4, 15, 9, 9, 20, 7, 14, 15, 28, 19, 95, 39, 136, 15, 10, 21, 343, 23, 79, 7, 3, 4, 81, 42, 8, 13, 8, 4, 77, 20, 53, 1, 95, 9, 704, 6, 7, 37, 103, 8, 10, 44, 22, 26, 9, 15, 15, 281, 91, 19, 9, 44, 8, 2, 53, 91, 19, 14, 2, 11, 4, 25, 16, 2, 47, 4, 19, 36, 82, 1, 76, 19, 2, 73, 13, 213, 9, 85, 27, 29, 13, 49, 78, 230, 3, 33, 19, 23, 8, 1, 3, 139, 49, 11, 5, 87, 8, 24, 45, 3, 10, 2, 10, 37, 16, 31, 5, 12, 8, 13, 19, 4, 13, 37, 32, 13, 17, 43, 32, 3, 43, 2, 13, 3, 20, 173, 3, 25, 16, 6, 16, 8, 4, 62, 94, 21, 93, 24, 17, 4, 13, 26, 10, 2, 5, 11, 14, 6, 20, 51, 41, 77, 12, 80, 109, 26, 163, 17, 20, 8, 19, 7, 18, 59, 6, 146, 122, 68, 23, 9, 33, 66, 93]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6249999999999999, speedup = 0.373623141516787, eval_ratio = 0.071038)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3906250000000002,"recall":0.3888888888888891,"f1":null,"seconds":0.00013394467532634735,"exhaustive_search_seconds":0.0004475228488445282,"evaluations":454.90625,"distances_sum":1746.8685370482688}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.568576388888889,"recall":0.568576388888889,"f1":null,"seconds":0.0003790799528360367,"exhaustive_search_seconds":0.0004475228488445282,"evaluations":596.609375,"distances_sum":1638.3710523977747}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6788194444444443,"recall":0.6788194444444443,"f1":0.6788194444444443,"seconds":0.00042265281081199646,"exhaustive_search_seconds":0.0004475228488445282,"evaluations":723.7578125,"distances_sum":1588.5358100462718}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7473958333333327,"recall":0.7473958333333327,"f1":0.7473958333333327,"seconds":0.0006274785846471786,"exhaustive_search_seconds":0.0004475228488445282,"evaluations":815.4375,"distances_sum":1565.9741158742331}
KCenters.DeloneInvIndex> reached performance {"precision":0.8003472222222212,"recall":0.8003472222222212,"f1":0.8003472222222212,"seconds":0.0005142819136381149,"exhaustive_search_seconds":0.0004475228488445282,"evaluations":914.21875,"distances_sum":1548.4257064719839}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7509999999999999, speedup = 0.6001140554822557, eval_ratio = 0.093529)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
