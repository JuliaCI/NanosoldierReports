Julia Version 1.5.0-DEV.327
Commit 5286b40c7b (2020-02-23 16:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ArgCheck ─────────── v1.1.0
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.3
  Installed OrderedCollections ─ v1.1.0
  Installed AdvancedHMC ──────── v0.2.20
  Installed SpecialFunctions ─── v0.10.0
  Installed StaticArrays ─────── v0.12.1
  Installed BinaryProvider ───── v0.5.8
  Installed ArrayLayouts ─────── v0.1.5
  Installed ProgressMeter ────── v1.2.0
  Installed DataAPI ──────────── v1.1.0
  Installed Rmath ────────────── v0.6.0
  Installed Parameters ───────── v0.12.0
  Installed MacroTools ───────── v0.5.4
  Installed InplaceOps ───────── v0.3.0
  Installed OpenSpecFun_jll ──── v0.5.3+1
  Installed StatsFuns ────────── v0.9.4
  Installed Requires ─────────── v1.0.1
  Installed FillArrays ───────── v0.8.5
  Installed DataStructures ───── v0.17.9
  Installed LazyArrays ───────── v0.14.11
  Installed StatsBase ────────── v0.32.1
#####                                                                      7.0%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.1.0
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.5
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.1
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######                                                                     8.9%################################                                          44.7%##########################################################                81.6%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       ######################################################################## 100.0%
#=#=#                                                                         #########################                                                 35.7%######################################################################## 100.0%
Status `/tmp/jl_6HRGg6/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.4.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.17.3
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.1.1
  [ffbed154] DocStringExtensions v0.8.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+4
  [1a297f60] FillArrays v0.8.5
  [6a86dc24] FiniteDiff v2.2.1
  [26cc04aa] FiniteDifferences v0.9.2
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.4.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.1
  [c7f686f2] MCMCChains v2.0.0
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.29.0
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.5.3
  [2dfb63ee] PooledArrays v0.5.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v0.8.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.1
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.2
  [9f7883ad] Tracker v0.2.6
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.7.1
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
DenseEuclideanMetric: Test Failed at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/adaptation/precond.jl:148
  Expression: ≈(res.adaptor.pc.var, diag(Σ), rtol = 0.2)
   Evaluated: [7.457302922453487, 11.31193287359097, 10.835674969216294, 6.546027720984349, 7.119339149062955, 8.580721253684645, 12.869981769481246, 9.173901198641866, 3.987210702186643, 4.276411338115352] ≈ [10.510282542325431, 14.505281681714456, 16.10838636403987, 6.344172855420998, 11.488000818008022, 9.184116599594992, 20.972389696378546, 10.671548475299046, 4.349591307382806, 4.828837750412239] (rtol=0.2)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/adaptation/precond.jl:148
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/adaptation/precond.jl:138
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/adaptation/precond.jl:116
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.153926183
│   t_steps = 0.007823007
└   t_step / t_steps = 19.676089130432835
Sampling  0%|                               |  ETA: 5:44:42[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.00021648281161192956
  log_density:                   -10.504388809239092
  hamiltonian_energy:            16.28112453246193
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  8.437999405766153
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  3%|█▏                             |  ETA: 0:01:07[K
  iterations:                    416
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6605761711377132
  log_density:                   -12.342444750809378
  hamiltonian_energy:            17.17637616192269
  hamiltonian_energy_error:      0.15185666605441384
  max_hamiltonian_energy_error:  0.7269752347934713
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9565521421247523
  nom_step_size:                 0.9565521421247523
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.2668927425644956, 1.2829 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  6%|█▉                             |  ETA: 0:00:41[K
  iterations:                    703
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9440144806470325
  log_density:                   -17.836604443975602
  hamiltonian_energy:            21.911945994554987
  hamiltonian_energy_error:      0.24727184044750672
  max_hamiltonian_energy_error:  -0.3626655251486639
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7078643751075335
  nom_step_size:                 0.7078643751075335
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.058470158116179, 0.87374 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▍                            |  ETA: 0:00:32[K
  iterations:                    903
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9865106494494725
  log_density:                   -12.903898475565832
  hamiltonian_energy:            14.931219901495293
  hamiltonian_energy_error:      0.014994231603235875
  max_hamiltonian_energy_error:  -0.03386213144547234
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.28727926440353824
  nom_step_size:                 0.28727926440353824
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9528922414646909, 0.9218 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▊                            |  ETA: 0:00:28[K
  iterations:                    1073
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.9984993786176738
  log_density:                   -13.974484723040696
  hamiltonian_energy:            19.502754634777563
  hamiltonian_energy_error:      -0.4257720179940918
  max_hamiltonian_energy_error:  -0.599678318507987
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8168757778662833
  nom_step_size:                 0.8168757778662833
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9528922414646909, 0.9218 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:23[K
  iterations:                    1334
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7244271948014028
  log_density:                   -12.904893226237807
  hamiltonian_energy:            21.337095309843953
  hamiltonian_energy_error:      0.06232481759695219
  max_hamiltonian_energy_error:  0.9188094871569952
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6477799529795265
  nom_step_size:                 0.6477799529795265
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9528922414646909, 0.9218 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|███▉                           |  ETA: 0:00:20[K
  iterations:                    1516
  n_steps:                       19
  is_accept:                     true
  acceptance_rate:               0.6152435973029406
  log_density:                   -15.009117583905928
  hamiltonian_energy:            21.263313678941632
  hamiltonian_energy_error:      0.22823902116100925
  max_hamiltonian_energy_error:  1.1950285891025239
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.9144810581995962
  nom_step_size:                 0.9144810581995962
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9528922414646909, 0.9218 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:18[K
  iterations:                    1767
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.9083145377511791
  log_density:                   -13.334195303922899
  hamiltonian_energy:            18.005654028080464
  hamiltonian_energy_error:      -0.02653657362423445
  max_hamiltonian_energy_error:  0.27468961356911237
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8248507776360445
  nom_step_size:                 0.8248507776360445
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9528922414646909, 0.9218 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████                          |  ETA: 0:00:16[K
  iterations:                    1939
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.821402828461317
  log_density:                   -15.578054001361679
  hamiltonian_energy:            17.451472122417538
  hamiltonian_energy_error:      0.3386421776077242
  max_hamiltonian_energy_error:  0.4078149110279057
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6604568335198953
  nom_step_size:                 0.6604568335198953
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9528922414646909, 0.9218 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|█████▉                         |  ETA: 0:00:14[K
  iterations:                    2278
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8953868556179888
  log_density:                   -15.32124823771521
  hamiltonian_energy:            19.65036258443014
  hamiltonian_energy_error:      0.16304007443075363
  max_hamiltonian_energy_error:  0.18635421888361137
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▊                        |  ETA: 0:00:12[K
  iterations:                    2594
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8583236776889064
  log_density:                   -15.548015066986746
  hamiltonian_energy:            19.611898739919884
  hamiltonian_energy_error:      0.25568319476367307
  max_hamiltonian_energy_error:  0.3062056208462174
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▊                       |  ETA: 0:00:10[K
  iterations:                    2983
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8614720607389111
  log_density:                   -16.79724945711693
  hamiltonian_energy:            20.59859903176902
  hamiltonian_energy_error:      0.25207398969025974
  max_hamiltonian_energy_error:  0.4851538313717292
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▌                      |  ETA: 0:00:09[K
  iterations:                    3304
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5068259507179571
  log_density:                   -14.41591187045631
  hamiltonian_energy:            19.72371434427852
  hamiltonian_energy_error:      0.4283462025479885
  max_hamiltonian_energy_error:  1.0141464667458777
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▌                     |  ETA: 0:00:08[K
  iterations:                    3684
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9988489506447483
  log_density:                   -15.465903931882675
  hamiltonian_energy:            19.08090406269744
  hamiltonian_energy_error:      0.00808998131857308
  max_hamiltonian_energy_error:  -0.25082011599600307
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 33%|██████████▍                    |  ETA: 0:00:08[K
  iterations:                    3999
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7977046093115702
  log_density:                   -12.794699635187973
  hamiltonian_energy:            18.529158072169043
  hamiltonian_energy_error:      0.047053331386397446
  max_hamiltonian_energy_error:  0.4300416144420005
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▍                   |  ETA: 0:00:07[K
  iterations:                    4395
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.038965742363954
  hamiltonian_energy:            14.813894357479798
  hamiltonian_energy_error:      -0.31810436788656204
  max_hamiltonian_energy_error:  -0.35121938526459573
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████▏                  |  ETA: 0:00:06[K
  iterations:                    4708
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.838303221244342
  hamiltonian_energy:            14.121245809336733
  hamiltonian_energy_error:      -0.0022346521897738114
  max_hamiltonian_energy_error:  -0.29300375502438847
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▎                 |  ETA: 0:00:05[K
  iterations:                    5113
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9966633889867962
  log_density:                   -14.635445513588314
  hamiltonian_energy:            17.691256654170395
  hamiltonian_energy_error:      0.023633357818582112
  max_hamiltonian_energy_error:  -0.21044617624055206
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|██████████████▏                |  ETA: 0:00:05[K
  iterations:                    5446
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.997759673683212
  log_density:                   -14.026822480142961
  hamiltonian_energy:            19.36688176686924
  hamiltonian_energy_error:      -0.11596861613125853
  max_hamiltonian_energy_error:  -0.12834742119593656
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████                |  ETA: 0:00:05[K
  iterations:                    5829
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7965764036033356
  log_density:                   -15.948616486938086
  hamiltonian_energy:            18.64982197146326
  hamiltonian_energy_error:      0.38521502213500014
  max_hamiltonian_energy_error:  0.4875934413328409
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:04[K
  iterations:                    6140
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7953780164045651
  log_density:                   -12.803165091448498
  hamiltonian_energy:            18.241363400908853
  hamiltonian_energy_error:      0.07236732293308279
  max_hamiltonian_energy_error:  0.4566128355797403
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▊              |  ETA: 0:00:04[K
  iterations:                    6507
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7373923951110127
  log_density:                   -12.542242970772316
  hamiltonian_energy:            19.349729178619185
  hamiltonian_energy_error:      0.03331790231203513
  max_hamiltonian_energy_error:  0.6113107680528529
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▋             |  ETA: 0:00:03[K
  iterations:                    6829
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9334729437531512
  log_density:                   -18.58500421157693
  hamiltonian_energy:            23.142164340388103
  hamiltonian_energy_error:      0.05785865245793431
  max_hamiltonian_energy_error:  -0.5840107861079922
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▋            |  ETA: 0:00:03[K
  iterations:                    7211
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9002798633899772
  log_density:                   -12.07571128964992
  hamiltonian_energy:            18.403641379323176
  hamiltonian_energy_error:      -0.2621707753306488
  max_hamiltonian_energy_error:  -0.29130873377225797
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▍           |  ETA: 0:00:03[K
  iterations:                    7509
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9919876997134006
  log_density:                   -11.138224088972512
  hamiltonian_energy:            17.802312639404636
  hamiltonian_energy_error:      -0.5462295108613056
  max_hamiltonian_energy_error:  -0.5462295108613056
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▎          |  ETA: 0:00:03[K
  iterations:                    7861
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5468799652987015
  log_density:                   -18.2688328672605
  hamiltonian_energy:            19.962112649644602
  hamiltonian_energy_error:      0.8662673576786801
  max_hamiltonian_energy_error:  0.8662673576786801
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████▏         |  ETA: 0:00:02[K
  iterations:                    8168
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9509869083319584
  log_density:                   -13.649662127450114
  hamiltonian_energy:            19.449755387676564
  hamiltonian_energy_error:      -0.16403107329354683
  max_hamiltonian_energy_error:  -0.21161200531892987
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▏        |  ETA: 0:00:02[K
  iterations:                    8588
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9884184728332166
  log_density:                   -11.476793934816198
  hamiltonian_energy:            16.328782508096307
  hamiltonian_energy_error:      -0.278750882034025
  max_hamiltonian_energy_error:  -0.278750882034025
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 74%|███████████████████████        |  ETA: 0:00:02[K
  iterations:                    8915
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8297629322098008
  log_density:                   -11.995411560776088
  hamiltonian_energy:            17.61874512971966
  hamiltonian_energy_error:      -0.06494633497035451
  max_hamiltonian_energy_error:  0.33339759296597293
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████       |  ETA: 0:00:02[K
  iterations:                    9311
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7636533748309977
  log_density:                   -15.114209578906548
  hamiltonian_energy:            22.325437355990157
  hamiltonian_energy_error:      0.10111721476751612
  max_hamiltonian_energy_error:  0.4806205736305067
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▉      |  ETA: 0:00:01[K
  iterations:                    9649
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8916657847634085
  log_density:                   -15.943116180889692
  hamiltonian_energy:            24.542538104189468
  hamiltonian_energy_error:      -0.09133879920369736
  max_hamiltonian_energy_error:  0.3313439592814582
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|█████████████████████████▉     |  ETA: 0:00:01[K
  iterations:                    10033
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.981967915670268
  hamiltonian_energy:            20.574348110027813
  hamiltonian_energy_error:      -0.3312577566185695
  max_hamiltonian_energy_error:  -0.3523791667484275
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▊    |  ETA: 0:00:01[K
  iterations:                    10345
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.457962344972461
  hamiltonian_energy:            20.087718272244764
  hamiltonian_energy_error:      -0.005800064907759861
  max_hamiltonian_energy_error:  -0.132298553825148
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▊   |  ETA: 0:00:01[K
  iterations:                    10728
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7060332739309335
  log_density:                   -12.53261727394591
  hamiltonian_energy:            17.581086295849826
  hamiltonian_energy_error:      0.2247082401055387
  max_hamiltonian_energy_error:  0.7530865197919105
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▌  |  ETA: 0:00:01[K
  iterations:                    11039
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7547011995942915
  log_density:                   -16.566040711399825
  hamiltonian_energy:            19.40780237626574
  hamiltonian_energy_error:      0.4484049041321043
  max_hamiltonian_energy_error:  0.4692718050444107
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▌ |  ETA: 0:00:00[K
  iterations:                    11426
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8403128445366719
  log_density:                   -15.06013024925473
  hamiltonian_energy:            23.131205027860666
  hamiltonian_energy_error:      -0.026458464483646082
  max_hamiltonian_energy_error:  0.5139174505050903
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▍|  ETA: 0:00:00[K
  iterations:                    11753
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7549282425904188
  log_density:                   -15.818475452977587
  hamiltonian_energy:            19.803061450855274
  hamiltonian_energy_error:      0.3534292202928455
  max_hamiltonian_energy_error:  0.5124923816924145
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9765737523453054
  log_density:                   -14.863831642280648
  hamiltonian_energy:            18.25984687768434
  hamiltonian_energy_error:      0.07747890505629584
  max_hamiltonian_energy_error:  -0.1729223220926528
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7017997728650462
  nom_step_size:                 0.7017997728650462
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0425354302272352, 0.9581 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.122213265 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0425354302272352, 0.9581 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.702), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.06220855711782
└   average_acceptance_rate = 0.8707060731385563
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.958224777 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠈⠢⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢆⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⢀⠇⠈⢆│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠉⠁⠑⢄⡜⠀⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⢀⡀⠀⠀⠀⣀⠀⠀⢀⡀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠁⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠇⠀⠀⠀⠀⡜⠑⢄⡠⠊⠀⠉⠉⠁⠈⠢⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⢀⠤⢄⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢇⠀⠀⠀⠀⡠⠃⠀⠀⣀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡌⢆⠀⠀⡔⣁⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠘⢌⢒⠎⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary:                                            | Pass  Fail  Total
AdvancedHMC                                              | 2874     1   2875
  Online v.s. naive v.s. true var/cov estimation         |   12           12
  Preconditioner constructors                            |    2            2
  Stan HMC adaptors                                      |   12           12
  Adapted mass v.s. true variance                        |   19     1     20
    DiagEuclideanMetric                                  |   10           10
    DenseEuclideanMetric                                 |    9     1     10
  Initialisation adaptor by metric                       |    2            2
  rand momentum variables from metric via vector of RNGs |    2            2
  Passing random number generator                        |   12           12
  TreeSampler                                            |    5            5
  TerminationCriterion                                   |    2            2
  Termination                                            |   20           20
  BinaryTree                                             |    4            4
  ClassicNoUTurn                                         |    4            4
  PhasePoint                                             |    4            4
  Metric                                                 |   60           60
  step(::Leapfrog) against step(::Leapfrog)              |    2            2
  jitter                                                 |    4            4
  temper                                                 |    7            7
  Eq (2.11) from (Neal, 2011)                            |    4            4
  `gdemo`                                                |    1            1
  HMC and NUTS                                           | 2664         2664
  drop_warmup                                            |    4            4
  Matrix mode                                            |   28           28
ERROR: LoadError: Some tests did not pass: 2874 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/runtests.jl:3
ERROR: Package AdvancedHMC errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
