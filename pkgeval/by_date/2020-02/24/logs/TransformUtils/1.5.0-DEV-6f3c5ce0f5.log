Julia Version 1.5.0-DEV.335
Commit 6f3c5ce0f5 (2020-02-24 18:44 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_4B8DtA/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.16923951522709937 0.07059932225318248; -0.16923951522709937 0.0 0.05958592434884616; -0.07059932225318248 -0.05958592434884616 0.0])
dAA = so3([0.0 0.11826866329626354 0.07093762564152578; -0.11826866329626354 0.0 -0.040275588905328286; -0.07093762564152578 0.040275588905328286 0.0])
dAA = so3([0.0 0.16651590777687764 -0.007769826473132762; -0.16651590777687764 0.0 -0.052657748263619054; 0.007769826473132762 0.052657748263619054 0.0])
dAA = Quaternion(0.996071744958865, [0.07404716961278644, -0.039230316082636024, 0.028619536456652325])
dAA = SO3([0.9998271464188644 -0.007527164589875196 0.017000561083319918; 0.009137272239006308 0.995270644822742 -0.09671015360423149; -0.016192206148053064 0.09684877566268296 0.9951673864796307])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9411999296736167 0.29818778344809277 0.15882927370196137; -0.28052234283728567 0.9517421800047949 -0.12447504958344421; -0.18828145833156162 0.07260074794403899 0.9794280085062437]), [-0.5958592434884615, 0.7059932225318247, -1.6923951522709937])
xj = SE3(SO3([0.9709530412947194 -0.16151990324215845 -0.17652623730533265; 0.08731040597503409 0.9260707812483043 -0.36711006677375385; 0.222771372956692 0.34103405837951006 0.913273609832339]), [0.5265774826361905, -0.07769826473132761, -1.6651590777687761])
Dx = SE3(SO3([0.8474246955699727 -0.4760164566137638 -0.2351163932417638; 0.3887966996328157 0.8579766899662186 -0.3357277555240873; 0.3615363214018323 0.19309151329742086 0.9121442626030944]), [1.2711522919337988, -0.4091979657352682, 0.30250162093122435])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
