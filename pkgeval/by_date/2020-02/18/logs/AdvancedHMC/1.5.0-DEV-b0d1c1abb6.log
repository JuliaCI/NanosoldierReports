Julia Version 1.5.0-DEV.288
Commit b0d1c1abb6 (2020-02-18 18:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ProgressMeter ────── v1.2.0
  Installed InplaceOps ───────── v0.3.0
  Installed OrderedCollections ─ v1.1.0
  Installed AdvancedHMC ──────── v0.2.20
  Installed Parameters ───────── v0.12.0
  Installed MacroTools ───────── v0.5.4
  Installed StaticArrays ─────── v0.12.1
  Installed StatsBase ────────── v0.32.1
  Installed SortingAlgorithms ── v0.3.1
  Installed StatsFuns ────────── v0.9.4
  Installed ArgCheck ─────────── v1.1.0
  Installed Missings ─────────── v0.4.3
  Installed OpenSpecFun_jll ──── v0.5.3+1
  Installed FillArrays ───────── v0.8.4
  Installed SpecialFunctions ─── v0.10.0
  Installed BinaryProvider ───── v0.5.8
  Installed DataAPI ──────────── v1.1.0
  Installed Requires ─────────── v1.0.1
  Installed ArrayLayouts ─────── v0.1.5
  Installed Rmath ────────────── v0.6.0
  Installed LazyArrays ───────── v0.14.11
  Installed DataStructures ───── v0.17.9
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.1.0
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.1
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         #######                                                                   10.9%#####################################                                     52.2%######################################################################    98.2%######################################################################## 100.0%
#######                                                                   10.8%######################################################################## 100.0%
#=#=#                                                                         ###########################################################               82.6%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
Status `/tmp/jl_fpIxi6/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.4.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.16.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.1.1
  [ffbed154] DocStringExtensions v0.8.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [26cc04aa] FiniteDifferences v0.9.2
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.4.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [c7f686f2] MCMCChains v2.0.0
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.29.0
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.5.3
  [2dfb63ee] PooledArrays v0.5.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v0.8.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.1
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.1
  [9f7883ad] Tracker v0.2.6
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.7.1
  [b8865327] UnicodePlots v1.1.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.148285122
│   t_steps = 0.008469974
└   t_step / t_steps = 17.507151970006046
Sampling  0%|                               |  ETA: 5:51:18[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.01317088194256478
  log_density:                   -11.32747556307647
  hamiltonian_energy:            14.792762946008752
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  4.329746799442892
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▌                            |  ETA: 0:00:31[K
  iterations:                    967
  n_steps:                       127
  is_accept:                     true
  acceptance_rate:               0.8055645813396579
  log_density:                   -14.98011844474506
  hamiltonian_energy:            21.83879887631243
  hamiltonian_energy_error:      0.04129483230166997
  max_hamiltonian_energy_error:  0.599562475639587
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.8168501465827596
  nom_step_size:                 0.8168501465827596
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9374730236125246, 0.8623 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███                            |  ETA: 0:00:26[K
  iterations:                    1166
  n_steps:                       67
  is_accept:                     true
  acceptance_rate:               0.9829485541596451
  log_density:                   -14.11370477748826
  hamiltonian_energy:            16.406387511145486
  hamiltonian_energy_error:      0.04225472555307519
  max_hamiltonian_energy_error:  -0.3628735696386123
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.8397568268727884
  nom_step_size:                 0.8397568268727884
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9374730236125246, 0.8623 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▋                           |  ETA: 0:00:22[K
  iterations:                    1408
  n_steps:                       39
  is_accept:                     true
  acceptance_rate:               0.6544790818060375
  log_density:                   -15.443105370720673
  hamiltonian_energy:            21.031633170654672
  hamiltonian_energy_error:      0.35721423939743246
  max_hamiltonian_energy_error:  1.1243202464749373
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8841582886653785
  nom_step_size:                 0.8841582886653785
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9374730236125246, 0.8623 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▎                          |  ETA: 0:00:19[K
  iterations:                    1633
  n_steps:                       55
  is_accept:                     true
  acceptance_rate:               0.998176683151319
  log_density:                   -16.4296438754448
  hamiltonian_energy:            23.3793570118493
  hamiltonian_energy_error:      -0.46130433972090756
  max_hamiltonian_energy_error:  -0.811483147649632
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8836091310670294
  nom_step_size:                 0.8836091310670294
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9374730236125246, 0.8623 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:17[K
  iterations:                    1893
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               0.9895428553803757
  log_density:                   -11.50126767008057
  hamiltonian_energy:            13.876991648027465
  hamiltonian_energy_error:      -0.13994900569601398
  max_hamiltonian_energy_error:  -0.2682719482914653
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8235270076526156
  nom_step_size:                 0.8235270076526156
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9374730236125246, 0.8623 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▋                         |  ETA: 0:00:14[K
  iterations:                    2172
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9866728722736376
  log_density:                   -12.674067489047614
  hamiltonian_energy:            21.01200802062402
  hamiltonian_energy_error:      -0.5747695008540887
  max_hamiltonian_energy_error:  -0.6001256199121059
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▌                        |  ETA: 0:00:13[K
  iterations:                    2505
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7563558006275464
  log_density:                   -17.732946906122834
  hamiltonian_energy:            21.204704674757053
  hamiltonian_energy_error:      0.5654078227266659
  max_hamiltonian_energy_error:  0.5654078227266659
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▌                       |  ETA: 0:00:11[K
  iterations:                    2888
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7578010950510902
  log_density:                   -18.063458737013992
  hamiltonian_energy:            27.440995369767784
  hamiltonian_energy_error:      0.12199480484174074
  max_hamiltonian_energy_error:  0.4610583501317045
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▍                      |  ETA: 0:00:09[K
  iterations:                    3237
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.842355069834497
  log_density:                   -12.372179292282494
  hamiltonian_energy:            16.652068820697437
  hamiltonian_energy_error:      0.06579460920269398
  max_hamiltonian_energy_error:  0.28552300016228216
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▎                     |  ETA: 0:00:08[K
  iterations:                    3577
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9031522560313819
  log_density:                   -16.64779612095858
  hamiltonian_energy:            22.454918036724845
  hamiltonian_energy_error:      -0.20709572815709265
  max_hamiltonian_energy_error:  -0.8135828620696692
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 33%|██████████▎                    |  ETA: 0:00:07[K
  iterations:                    3977
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9434809453584568
  log_density:                   -16.515371776511138
  hamiltonian_energy:            20.395247121983815
  hamiltonian_energy_error:      0.0934369819865104
  max_hamiltonian_energy_error:  -0.3008044460367678
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████                    |  ETA: 0:00:07[K
  iterations:                    4262
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.021321903472252
  hamiltonian_energy:            17.557373811167878
  hamiltonian_energy_error:      -0.13717562664610838
  max_hamiltonian_energy_error:  -0.3767478351863218
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████                   |  ETA: 0:00:06[K
  iterations:                    4649
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7283866111105571
  log_density:                   -11.367418072519362
  hamiltonian_energy:            21.20645923712909
  hamiltonian_energy_error:      -0.1527934324260798
  max_hamiltonian_energy_error:  0.8131636368467596
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████                  |  ETA: 0:00:06[K
  iterations:                    5029
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9317554040396058
  log_density:                   -14.096108106302667
  hamiltonian_energy:            19.96390161042617
  hamiltonian_energy_error:      -0.18370714273973476
  max_hamiltonian_energy_error:  -0.4500983904457705
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|██████████████                 |  ETA: 0:00:05[K
  iterations:                    5408
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9668739428661492
  log_density:                   -13.948896292657789
  hamiltonian_energy:            19.686086578972105
  hamiltonian_energy_error:      -0.11303076029652814
  max_hamiltonian_energy_error:  -0.11303076029652814
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▉                |  ETA: 0:00:05[K
  iterations:                    5758
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7896852191573324
  log_density:                   -12.92105693875056
  hamiltonian_energy:            22.71347309003022
  hamiltonian_energy_error:      -0.23968990239214705
  max_hamiltonian_energy_error:  0.47432002762278813
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:04[K
  iterations:                    6150
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9935848403556838
  log_density:                   -12.699422382493307
  hamiltonian_energy:            16.680781806799356
  hamiltonian_energy_error:      -0.20138515281182023
  max_hamiltonian_energy_error:  -0.32762378433408657
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▎              |  ETA: 0:00:04[K
  iterations:                    6309
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9847164065846395
  log_density:                   -10.419178156473828
  hamiltonian_energy:            16.110937231232167
  hamiltonian_energy_error:      -0.4597633702164643
  max_hamiltonian_energy_error:  -0.4597633702164643
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▍             |  ETA: 0:00:04[K
  iterations:                    6728
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9600432757029197
  log_density:                   -15.73947845004214
  hamiltonian_energy:            22.271718772250086
  hamiltonian_energy_error:      -0.03661622894319194
  max_hamiltonian_energy_error:  0.09278189469469567
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▍            |  ETA: 0:00:03[K
  iterations:                    7112
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7269268886890087
  log_density:                   -16.787285702042293
  hamiltonian_energy:            23.250076293053596
  hamiltonian_energy_error:      0.31843053606912264
  max_hamiltonian_energy_error:  0.7916748929224653
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▎           |  ETA: 0:00:03[K
  iterations:                    7472
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6980518336447897
  log_density:                   -15.734443908747057
  hamiltonian_energy:            28.43913245392976
  hamiltonian_energy_error:      -0.14667692038366198
  max_hamiltonian_energy_error:  0.6630516665789017
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▍          |  ETA: 0:00:03[K
  iterations:                    7893
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9653605078720966
  log_density:                   -11.853204176943153
  hamiltonian_energy:            17.242986980007124
  hamiltonian_energy_error:      -0.23485813162208657
  max_hamiltonian_energy_error:  -0.23485813162208657
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▌         |  ETA: 0:00:02[K
  iterations:                    8310
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8025845380036769
  log_density:                   -15.283659490629734
  hamiltonian_energy:            18.36383172995901
  hamiltonian_energy_error:      0.3342375271470317
  max_hamiltonian_energy_error:  0.3835485123079785
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▌        |  ETA: 0:00:02[K
  iterations:                    8692
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.810202088238357
  log_density:                   -13.034290420127846
  hamiltonian_energy:            20.045878741671963
  hamiltonian_energy_error:      -0.02070783981846347
  max_hamiltonian_energy_error:  0.5875632606692278
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:02[K
  iterations:                    9085
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.026136518757841
  hamiltonian_energy:            19.69733020331258
  hamiltonian_energy_error:      -0.3407422130898219
  max_hamiltonian_energy_error:  -0.6812307612584583
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▍      |  ETA: 0:00:01[K
  iterations:                    9441
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8940484452712721
  log_density:                   -11.909354279543038
  hamiltonian_energy:            17.28517733049241
  hamiltonian_energy_error:      -0.18137904361348944
  max_hamiltonian_energy_error:  0.2961656852533636
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▎     |  ETA: 0:00:01[K
  iterations:                    9788
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8709841262095696
  log_density:                   -17.95765682306378
  hamiltonian_energy:            22.987552691785368
  hamiltonian_energy_error:      0.23597322792296538
  max_hamiltonian_energy_error:  0.43318929396168215
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▎    |  ETA: 0:00:01[K
  iterations:                    10163
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9483042973295807
  log_density:                   -15.028974267376999
  hamiltonian_energy:            22.130327765432767
  hamiltonian_energy_error:      -0.03701109466380359
  max_hamiltonian_energy_error:  0.14311831854487167
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|███████████████████████████▏   |  ETA: 0:00:01[K
  iterations:                    10483
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.177923445799863
  hamiltonian_energy:            15.324759346852552
  hamiltonian_energy_error:      -0.07169554489247254
  max_hamiltonian_energy_error:  -0.11570585236072262
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 90%|███████████████████████████▉   |  ETA: 0:00:01[K
  iterations:                    10771
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9999273111931654
  log_density:                   -15.413478853053643
  hamiltonian_energy:            20.112035727714506
  hamiltonian_energy_error:      -0.17987636103183036
  max_hamiltonian_energy_error:  -0.4277513069637955
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|████████████████████████████▉  |  ETA: 0:00:00[K
  iterations:                    11167
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9877351015342578
  log_density:                   -21.557111909605233
  hamiltonian_energy:            25.15052296854153
  hamiltonian_energy_error:      0.08976529929345034
  max_hamiltonian_energy_error:  -0.8241969619685214
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▋ |  ETA: 0:00:00[K
  iterations:                    11465
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9335760088397703
  log_density:                   -16.443539310750868
  hamiltonian_energy:            20.5345295559531
  hamiltonian_energy_error:      0.08925704989485794
  max_hamiltonian_energy_error:  -0.4000784998134961
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▍|  ETA: 0:00:00[K
  iterations:                    11773
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.621105944305814
  hamiltonian_energy:            19.517231156334276
  hamiltonian_energy_error:      -0.055118772746034495
  max_hamiltonian_energy_error:  -0.5661941051131656
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8774376269737082
  log_density:                   -12.94566502655282
  hamiltonian_energy:            17.171873267007253
  hamiltonian_energy_error:      0.09416781022096998
  max_hamiltonian_energy_error:  0.2506474823108995
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6746235367275979
  nom_step_size:                 0.6746235367275979
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.8957912976720546, 0.9450 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.06168537 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.8957912976720546, 0.9450 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.675), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0892561139687131
└   average_acceptance_rate = 0.8772076615447637
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.109802834 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Matrix mode: Test Failed at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:48
  Expression: ≈(mean(samples), zeros(D, n_chains), atol = RNDATOL * n_chains)
   Evaluated: [0.022082228747170224 -0.015757585094909946 … 0.02053529057499616 0.0036088888463604953; -0.0037731592729645046 0.0019490893436197704 … 0.002198525436268373 0.0015285658093256783; … ; -0.0015182718306455947 0.0458992196810648 … -0.04608835746586243 -0.0005696984969619981; 0.00973706556766394 -0.004258812938066549 … -0.0004477646109193039 0.006765951956697668] ≈ [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0] (atol=1.25)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:48
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:6
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢇⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⢀⠇⠈⢆│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⢣⠀⠀⠀⠀⡜⠱⡀⡜⠀⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠱⢄⠀⢰⠁⠀⠘⠃⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠑⠇⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⢁⡀⠀⠀⠀⠀⠀⠀⡠⠢⡀⠀⣀⠔⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡜⠱⡀⠀⠀⢀⠤⠊⠀⠀⠈⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡄⠀⠀⠀⠀⡰⠃⠀⢰⠁⠀⠑⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠙⡍⠒⠤⡜⢀⣀⡠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠘⠤⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary:                                            | Pass  Fail  Total
AdvancedHMC                                              | 2874     1   2875
  Online v.s. naive v.s. true var/cov estimation         |   12           12
  Preconditioner constructors                            |    2            2
  Stan HMC adaptors                                      |   12           12
  Adapted mass v.s. true variance                        |   20           20
  Initialisation adaptor by metric                       |    2            2
  rand momentum variables from metric via vector of RNGs |    2            2
  Passing random number generator                        |   12           12
  TreeSampler                                            |    5            5
  TerminationCriterion                                   |    2            2
  Termination                                            |   20           20
  BinaryTree                                             |    4            4
  ClassicNoUTurn                                         |    4            4
  PhasePoint                                             |    4            4
  Metric                                                 |   60           60
  step(::Leapfrog) against step(::Leapfrog)              |    2            2
  jitter                                                 |    4            4
  temper                                                 |    7            7
  Eq (2.11) from (Neal, 2011)                            |    4            4
  `gdemo`                                                |    1            1
  HMC and NUTS                                           | 2664         2664
  drop_warmup                                            |    4            4
  Matrix mode                                            |   27     1     28
ERROR: LoadError: Some tests did not pass: 2874 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/runtests.jl:3
ERROR: Package AdvancedHMC errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
