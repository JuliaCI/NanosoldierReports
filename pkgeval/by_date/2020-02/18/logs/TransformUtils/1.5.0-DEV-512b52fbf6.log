Julia Version 1.5.0-DEV.282
Commit 512b52fbf6 (2020-02-17 17:51 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_qDDYi7/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.04517416967001961 -0.1446356696016999; 0.04517416967001961 0.0 -0.09016019107193218; 0.1446356696016999 0.09016019107193218 0.0])
dAA = so3([0.0 -0.02213535780780375 0.0912378605660298; 0.02213535780780375 0.0 -0.0687805837934117; -0.0912378605660298 0.0687805837934117 0.0])
dAA = so3([0.0 0.06899851590725595 0.11150348812050935; -0.06899851590725595 0.0 -0.07209252026015368; -0.11150348812050935 0.07209252026015368 0.0])
dAA = Quaternion(0.9970141125918882, [0.051339616800978365, -0.046913073903408396, -0.033559894759544594])
dAA = SO3([0.9947854832177876 0.03498763562882622 -0.09580035350800029; -0.021634372178001682 0.9903302812115362 0.13703243432101817; 0.09966843191109731 -0.13424529588996756 0.9859231228710474])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9726490194413027 -0.03508825118576695 0.22961424086627774; 0.07403354381694635 0.983799951265989 -0.16326876700380258; -0.22016566346680122 0.17580236209380753 0.959489765506887]), [0.9016019107193217, -1.446356696016999, 0.45174169670019604])
xj = SE3(SO3([0.9588523007004534 0.1460980620083001 -0.24342888431504212; -0.2051927503748845 0.9492016903010579 -0.2385625417436794; 0.19620958344341288 0.27869608430516807 0.9401224877418521]), [0.7209252026015368, 1.1150348812050934, -0.6899851590725594])
Dx = SE3(SO3([0.8742369904721706 0.15101559337802384 -0.46141518727372344; -0.2010189599611796 0.9776936810894176 -0.06088056910008083; 0.4419287976883691 0.14597724656434452 0.8850929788780414]), [0.26526292327705703, 2.325518260451277, -1.555156422921976])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
