Julia Version 1.5.0-DEV.282
Commit 512b52fbf6 (2020-02-17 17:51 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed MappedArrays ──────────────── v0.2.2
  Installed PooledArrays ──────────────── v0.5.3
  Installed DataValueInterfaces ───────── v1.0.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed OrderedCollections ────────── v1.1.0
  Installed KCenters ──────────────────── v0.2.1
  Installed MLDataPattern ─────────────── v0.5.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MLDataUtils ───────────────── v0.5.0
  Installed Missings ──────────────────── v0.4.3
  Installed DataAPI ───────────────────── v1.1.0
  Installed Reexport ──────────────────── v0.2.0
  Installed Compat ────────────────────── v3.5.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DataStructures ────────────── v0.17.9
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed StatsBase ─────────────────── v0.32.1
  Installed InvertedIndices ───────────── v1.0.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Parsers ───────────────────── v0.3.11
  Installed TableTraits ───────────────── v1.0.0
  Installed Tables ────────────────────── v1.0.1
  Installed JSON ──────────────────────── v0.21.0
  Installed SimilaritySearch ──────────── v0.3.19
  Installed DataFrames ────────────────── v0.20.2
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.5.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.1
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_xSh9Z8/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.5.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.1
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.1
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9364293802777927
[ Info: 0.8321307849884033
[ Info: 0.5546240802109241
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.33364159616331257
mean(cdnet.distances) = 0.3507394145677487
mean(crand.distances) = 0.33588484674692154
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.255859375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.255859375,"f1":null,"seconds":2.3525208234786987e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.0859375,"distances_sum":762.614968423022}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.255859375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.255859375,"f1":null,"seconds":2.3525208234786987e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.0859375,"distances_sum":762.614968423022}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.255859375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.255859375,"f1":null,"seconds":2.3525208234786987e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.0859375,"distances_sum":762.614968423022}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7917800949050957,"seconds":4.6584755182266235e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.296875,"distances_sum":1836.961776702966}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6728515625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6728515625,"f1":0.7917800949050957,"seconds":4.6584755182266235e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.296875,"distances_sum":1836.961776702966}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8852080211455221,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.125,"distances_sum":2394.152466673687}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8652217574092583,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.7265625,"distances_sum":2211.6708670853723}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8037109375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8037109375,"f1":0.8852080211455221,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.125,"distances_sum":2394.152466673687}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9018575174825183,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.15625,"distances_sum":2478.0598179485405}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.940024038461539,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.65625,"distances_sum":2837.2789420988715}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9566454378954384,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.796875,"distances_sum":2985.157732915787}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9262794497169502,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.453125,"distances_sum":2731.086311783986}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9566454378954384,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.796875,"distances_sum":2985.157732915787}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9566454378954384,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.796875,"distances_sum":2985.157732915787}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.515625,"distances_sum":1037.6328339144345}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4169921875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.515625,"distances_sum":1037.6328339144345}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7914406773781782,"seconds":5.0086528062820435e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.8125,"distances_sum":1727.13342432903}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9018403471528478,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.484375,"distances_sum":2414.9767267238426}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9053170787545796,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.5546875,"distances_sum":2426.487044817646}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8359375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8359375,"f1":0.9053170787545796,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.5546875,"distances_sum":2426.487044817646}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9394288003663009,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6796875,"distances_sum":2747.705338364495}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678800366300367,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.875,"distances_sum":3013.556264922554}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.936538461538462,"seconds":6.5248459577560425e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6875,"distances_sum":2735.1453711538297}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688644688644692,"seconds":6.288290023803711e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8671875,"distances_sum":3032.6772484898934}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688644688644692,"seconds":6.288290023803711e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8671875,"distances_sum":3032.6772484898934}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688644688644692,"seconds":6.288290023803711e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8671875,"distances_sum":3032.6772484898934}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.220703125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.220703125,"f1":null,"seconds":3.2223761081695557e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":5.5546875,"distances_sum":642.0661695273558}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8560616466866475,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.21875,"distances_sum":2021.100411746588}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.840198690198691,"seconds":4.889443516731262e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.0546875,"distances_sum":1928.3475378168168}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8560616466866475,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.21875,"distances_sum":2021.100411746588}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9612179487179492,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.7734375,"distances_sum":2905.8206328667006}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8962396978021988,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.421875,"distances_sum":2282.148182537037}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9612179487179492,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.7734375,"distances_sum":2905.8206328667006}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786286630036634,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.9296875,"distances_sum":2995.839256937838}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9831101190476191,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.90625,"distances_sum":3063.6627903421177}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.973162774725275,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.8359375,"distances_sum":2987.0710918021277}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9697265625, conf: {"ssize":6,"bsize":13}, perf: {"precision":1.0,"recall":0.9697265625,"f1":0.9836309523809526,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.9375,"distances_sum":3047.2009344607245}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9697265625,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9836309523809526,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.9375,"distances_sum":3047.2009344607245}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9697265625,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9836309523809526,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.9375,"distances_sum":3047.2009344607245}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7960836038961047,"seconds":4.51505184173584e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.859375,"distances_sum":1773.5073843323828}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2666015625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2666015625,"f1":null,"seconds":3.430992364883423e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":6.40625,"distances_sum":652.9673180966605}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2822265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2822265625,"f1":null,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":6.578125,"distances_sum":706.6778973462164}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6748046875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6748046875,"f1":0.7960836038961047,"seconds":4.51505184173584e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.859375,"distances_sum":1773.5073843323828}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9019345238095245,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.5703125,"distances_sum":2365.98743932155}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9097813644688653,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.59375,"distances_sum":2407.0653562837538}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9039637445887452,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.5,"distances_sum":2396.960357086415}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8749344405594414,"seconds":5.00120222568512e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.15625,"distances_sum":2164.1406010094524}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.841796875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.841796875,"f1":0.9097813644688653,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.59375,"distances_sum":2407.0653562837538}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9419528388278394,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.703125,"distances_sum":2724.4481758803176}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9698145604395609,"seconds":6.750226020812988e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.9375,"distances_sum":2943.2939217878625}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9428800366300373,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.6640625,"distances_sum":2693.391563283033}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9535027472527474,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8125,"distances_sum":2877.941140504325}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9343635531135539,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.6796875,"distances_sum":2659.4081174887115}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9698145604395609,"seconds":6.750226020812988e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.9375,"distances_sum":2943.2939217878625}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9698145604395609,"seconds":6.750226020812988e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.9375,"distances_sum":2943.2939217878625}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.7128021284271291,"seconds":4.135072231292725e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.6015625,"distances_sum":1511.9992364127665}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8677000083250092,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.96875,"distances_sum":2199.4351467788483}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8677000083250092,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.96875,"distances_sum":2199.4351467788483}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9077927281052288,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.3046875,"distances_sum":2480.7620771678767}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8996284965034972,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.1796875,"distances_sum":2479.3781037398603}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.83984375,"f1":0.9077927281052288,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.3046875,"distances_sum":2480.7620771678767}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.957652243589744,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.796875,"distances_sum":2978.8638298863084}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635302197802202,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8828125,"distances_sum":2986.7186329896595}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9522409881784885,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7578125,"distances_sum":2930.8097699735476}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.945100732600733,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6796875,"distances_sum":2898.2785833243356}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9468292124542129,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.71875,"distances_sum":2886.747953509767}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9635302197802202,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8828125,"distances_sum":2986.7186329896595}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9635302197802202,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8828125,"distances_sum":2986.7186329896595}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.777825126262627,"seconds":4.757195711135864e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.5078125,"distances_sum":1739.4888381426485}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6494140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6494140625,"f1":0.777825126262627,"seconds":4.757195711135864e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.5078125,"distances_sum":1739.4888381426485}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9340175449550455,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.65625,"distances_sum":2776.7011112229193}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9340175449550455,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.65625,"distances_sum":2776.7011112229193}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9601991758241765,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8203125,"distances_sum":2990.1287881998264}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.965888278388279,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8671875,"distances_sum":3036.7658209931224}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.965888278388279,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8671875,"distances_sum":3036.7658209931224}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.965888278388279,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8671875,"distances_sum":3036.7658209931224}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.552734375,"f1":null,"seconds":4.563480615615845e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.265625,"distances_sum":1013.4939868286373}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8018762487512496,"seconds":4.712492227554321e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.25,"distances_sum":1324.4106220817994}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6845703125,"f1":0.8018762487512496,"seconds":4.712492227554321e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.25,"distances_sum":1324.4106220817994}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8817921661671667,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.1953125,"distances_sum":1771.6689004041534}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8115207708957716,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.5,"distances_sum":1405.9337843528792}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7060546875, conf: {"ssize":6,"bsize":4}, perf: {"precision":null,"recall":0.7060546875,"f1":null,"seconds":4.692003130912781e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.5546875,"distances_sum":1406.3030537147583}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8696038336663346,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3515625,"distances_sum":1658.4617632111556}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8046875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8046875,"f1":0.8817921661671667,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.1953125,"distances_sum":1771.6689004041534}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9557749542124545,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8203125,"distances_sum":2142.6650291014957}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9657394688644692,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.921875,"distances_sum":2183.9658808888353}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9282509157509166,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8046875,"distances_sum":1965.5520326103392}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9526900183150189,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.78125,"distances_sum":2142.645645731459}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9509901556776562,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8515625,"distances_sum":2109.558857731183}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8872632575757584,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.0703125,"distances_sum":1763.1208782474532}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9657394688644692,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.921875,"distances_sum":2183.9658808888353}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9657394688644692,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.921875,"distances_sum":2183.9658808888353}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8545022685647695,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5625,"distances_sum":1643.1103401165667}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23046875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.23046875,"f1":null,"seconds":3.889203071594238e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.125,"distances_sum":451.7385418678096}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4189453125, conf: {"ssize":5,"bsize":2}, perf: {"precision":1.0,"recall":0.4189453125,"f1":0.5713585026085028,"seconds":4.388391971588135e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.8828125,"distances_sum":797.5536298549266}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8545022685647695,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5625,"distances_sum":1643.1103401165667}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9372653388278395,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8671875,"distances_sum":2142.5319240026156}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9060673701298708,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.625,"distances_sum":1938.3840671670202}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8963141025641033,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.609375,"distances_sum":1909.5948121528063}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8588546869796878,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5859375,"distances_sum":1684.388593344208}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9372653388278395,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8671875,"distances_sum":2142.5319240026156}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9639365842490846,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9453125,"distances_sum":2298.58869932291}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9692193223443226,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.953125,"distances_sum":2336.074295849318}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591918498168502,"seconds":4.4405460357666016e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9609375,"distances_sum":2262.3235168455267}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9717490842490848,"seconds":3.7364661693573e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9140625,"distances_sum":2365.1987803610623}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.940968406593407,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.859375,"distances_sum":2162.4664043090934}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9543956043956047,"seconds":6.472691893577576e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8828125,"distances_sum":2252.7946287288664}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9717490842490848,"seconds":3.7364661693573e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9140625,"distances_sum":2365.1987803610623}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9717490842490848,"seconds":3.7364661693573e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9140625,"distances_sum":2365.1987803610623}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2158203125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2158203125,"f1":null,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":7.0546875,"distances_sum":459.41261147834433}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8477319555444562,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.5703125,"distances_sum":1610.8644586531534}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8477319555444562,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.5703125,"distances_sum":1610.8644586531534}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9374771062271069,"seconds":6.511807441711426e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.75,"distances_sum":2184.434342755892}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9374771062271069,"seconds":6.511807441711426e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.75,"distances_sum":2184.434342755892}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9452323717948723,"seconds":6.511807441711426e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.8125,"distances_sum":2230.789412440621}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.963656135531136,"seconds":6.925314664840698e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.953125,"distances_sum":2290.047707856126}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9397607600732605,"seconds":6.446614861488342e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.8671875,"distances_sum":2153.5536922497104}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.963656135531136,"seconds":6.925314664840698e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.953125,"distances_sum":2290.047707856126}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.963656135531136,"seconds":6.925314664840698e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.953125,"distances_sum":2290.047707856126}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8503819097569105,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":2.477318048477173e-6,"evaluations":8.3203125,"distances_sum":1707.5376085112944}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.6939801517926525,"seconds":4.848465323448181e-6,"exhaustive_search_seconds":2.477318048477173e-6,"evaluations":7.46875,"distances_sum":1128.8768150361977}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8503819097569105,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":2.477318048477173e-6,"evaluations":8.3203125,"distances_sum":1707.5376085112944}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9578353937728943,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":2.477318048477173e-6,"evaluations":8.8828125,"distances_sum":2287.893324299003}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9578353937728943,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":2.477318048477173e-6,"evaluations":8.8828125,"distances_sum":2287.893324299003}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.970703125, conf: {"ssize":6,"bsize":13}, perf: {"precision":1.0,"recall":0.970703125,"f1":0.9839114010989013,"seconds":7.092952728271484e-6,"exhaustive_search_seconds":2.477318048477173e-6,"evaluations":8.9375,"distances_sum":2466.4824260116684}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.970703125,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9839114010989013,"seconds":7.092952728271484e-6,"exhaustive_search_seconds":2.477318048477173e-6,"evaluations":8.9375,"distances_sum":2466.4824260116684}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.970703125,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9839114010989013,"seconds":7.092952728271484e-6,"exhaustive_search_seconds":2.477318048477173e-6,"evaluations":8.9375,"distances_sum":2466.4824260116684}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1669921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1669921875,"f1":null,"seconds":3.382563591003418e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":5.8515625,"distances_sum":413.13760895299845}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3759765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3759765625,"f1":null,"seconds":4.0531158447265625e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":6.9140625,"distances_sum":766.0044451514414}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3759765625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3759765625,"f1":null,"seconds":4.0531158447265625e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":6.9140625,"distances_sum":766.0044451514414}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7970399392274399,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.21875,"distances_sum":1514.2145545390906}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9096903096903104,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.6953125,"distances_sum":2071.2873877287457}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7275390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7275390625,"f1":0.8318353521478528,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.21875,"distances_sum":1700.0747515585265}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.845703125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.845703125,"f1":0.9096903096903104,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.6953125,"distances_sum":2071.2873877287457}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9470695970695976,"seconds":6.642192602157593e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.84375,"distances_sum":2302.4208431770985}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.946437416749917,"seconds":8.03731381893158e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.828125,"distances_sum":2294.595430134613}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9407623626373629,"seconds":7.4766576290130615e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.7890625,"distances_sum":2269.1115654621867}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9537831959706966,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.859375,"distances_sum":2340.782106146368}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9293498168498174,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.8046875,"distances_sum":2167.1872068843168}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9537831959706966,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.859375,"distances_sum":2340.782106146368}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9537831959706966,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.859375,"distances_sum":2340.782106146368}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.544921875,"f1":null,"seconds":4.036352038383484e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.8828125,"distances_sum":1131.6916598478751}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8817198426573435,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.1484375,"distances_sum":1828.7299989267333}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7079488220113226,"seconds":4.244968295097351e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.0859375,"distances_sum":1223.6912808895627}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7978515625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7978515625,"f1":0.8817198426573435,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.1484375,"distances_sum":1828.7299989267333}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7978515625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7978515625,"f1":0.8817198426573435,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.1484375,"distances_sum":1828.7299989267333}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7978515625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7978515625,"f1":0.8817198426573435,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.1484375,"distances_sum":1828.7299989267333}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8058354839604845,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.265625,"distances_sum":1521.2204975156121}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.546875,"f1":0.6929237429237435,"seconds":4.334375262260437e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":7.6484375,"distances_sum":1190.7946513697655}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.373046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.373046875,"f1":null,"seconds":3.4999102354049683e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":6.1484375,"distances_sum":815.0944611776703}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6962890625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6962890625,"f1":0.8058354839604845,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.265625,"distances_sum":1521.2204975156121}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9351648351648358,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.8125,"distances_sum":2218.370547129629}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9249255952380959,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.8046875,"distances_sum":2130.5711663231727}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.882109557109558,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.546875,"distances_sum":1869.849572781022}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9123860514485523,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.7578125,"distances_sum":2030.7065828162786}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8608521686646696,"seconds":4.289671778678894e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.5078125,"distances_sum":1736.346570957784}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9351648351648358,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.8125,"distances_sum":2218.370547129629}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519402472527477,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.8515625,"distances_sum":2304.5316301010353}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519402472527476,"seconds":6.17634505033493e-5,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.8828125,"distances_sum":2299.844111514425}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620592948717953,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.8671875,"distances_sum":2367.882218350055}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620592948717953,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.8671875,"distances_sum":2367.882218350055}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620592948717953,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.8671875,"distances_sum":2367.882218350055}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1826171875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1826171875,"f1":null,"seconds":3.164634108543396e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.7109375,"distances_sum":356.9928967469365}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1826171875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1826171875,"f1":null,"seconds":3.164634108543396e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.7109375,"distances_sum":356.9928967469365}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2900390625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2900390625,"f1":null,"seconds":3.4496188163757324e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":6.7890625,"distances_sum":614.0674114543075}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2900390625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2900390625,"f1":null,"seconds":3.4496188163757324e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":6.7890625,"distances_sum":614.0674114543075}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2509765625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2509765625,"f1":null,"seconds":3.037974238395691e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.9140625,"distances_sum":520.0960488450487}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4326171875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4326171875,"f1":null,"seconds":3.382563591003418e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.0859375,"distances_sum":863.1527274412849}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4326171875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4326171875,"f1":null,"seconds":3.382563591003418e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.0859375,"distances_sum":863.1527274412849}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8892857142857151,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.4453125,"distances_sum":1967.4546725140576}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8092313936063944,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.375,"distances_sum":1502.3532672949343}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8741420038295045,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.9296875,"distances_sum":1816.2613703014097}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8154296875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8154296875,"f1":0.8892857142857151,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.4453125,"distances_sum":1967.4546725140576}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684008699633702,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8984375,"distances_sum":2413.8072715465323}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635645604395608,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2373.28898055265}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9524839743589751,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.859375,"distances_sum":2311.207431617704}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9300168581418587,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7578125,"distances_sum":2184.411588230216}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.930074092574093,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.75,"distances_sum":2186.7855493426437}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9276530760905765,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.875,"distances_sum":2125.3426182735457}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9285428113553121,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7421875,"distances_sum":2171.291340159584}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684008699633702,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8984375,"distances_sum":2413.8072715465323}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684008699633702,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8984375,"distances_sum":2413.8072715465323}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7060546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7060546875,"f1":0.8185736138861148,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.28125,"distances_sum":1533.1397119519213}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5322265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5322265625,"f1":0.6789875055500062,"seconds":4.161149263381958e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.9296875,"distances_sum":1069.1009427510423}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4462890625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4462890625,"f1":null,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.265625,"distances_sum":900.00280927478}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7060546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7060546875,"f1":0.8185736138861148,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.28125,"distances_sum":1533.1397119519213}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9316881035631042,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7109375,"distances_sum":2192.065163617006}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7265625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7265625,"f1":0.8351913711288719,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.2734375,"distances_sum":1635.9810939695178}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9256410256410261,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.796875,"distances_sum":2121.566300298801}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8996024808524818,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.5546875,"distances_sum":1961.9642540021878}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9316881035631042,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7109375,"distances_sum":2192.065163617006}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9615728021978026,"seconds":6.0070306062698364e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.875,"distances_sum":2348.283020710745}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9795959249084252,"seconds":6.297603249549866e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9921875,"distances_sum":2443.849019878508}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9673019688644692,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.953125,"distances_sum":2357.0374021209136}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9643086080586083,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9453125,"distances_sum":2341.884587116961}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9608344780219784,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9296875,"distances_sum":2319.5992599692754}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9623740842490849,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.859375,"distances_sum":2353.755360301381}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9578010531135537,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8671875,"distances_sum":2332.6391316502963}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9690934065934069,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9140625,"distances_sum":2392.9718199677745}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9795959249084252,"seconds":6.297603249549866e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9921875,"distances_sum":2443.849019878508}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9795959249084252,"seconds":6.297603249549866e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9921875,"distances_sum":2443.849019878508}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8407977439227446,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.0546875,"distances_sum":1654.1935357480388}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8516634407259416,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.015625,"distances_sum":1707.8934122134135}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8516634407259416,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.015625,"distances_sum":1707.8934122134135}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9588198260073265,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":2332.1487781379633}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9588198260073265,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":2332.1487781379633}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9798763736263738,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9609375,"distances_sum":2463.034475707418}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9798763736263738,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9609375,"distances_sum":2463.034475707418}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9798763736263738,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9609375,"distances_sum":2463.034475707418}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.525390625,"f1":0.6722784160284163,"seconds":4.427507519721985e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.2265625,"distances_sum":1140.492737901425}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3583984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3583984375,"f1":null,"seconds":3.5315752029418945e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.6953125,"distances_sum":704.1908058381889}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.525390625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.525390625,"f1":0.6722784160284163,"seconds":4.427507519721985e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.2265625,"distances_sum":1140.492737901425}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7177734375,"f1":0.8278513153513163,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3359375,"distances_sum":1616.5705060339374}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9194914460539466,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7734375,"distances_sum":2102.597590720761}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8405854562104571,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3046875,"distances_sum":1708.0836082368685}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.6838708166833173,"seconds":4.2710453271865845e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.359375,"distances_sum":1152.2720802197346}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8623046875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9194914460539466,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7734375,"distances_sum":2102.597590720761}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9570028929403936,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8671875,"distances_sum":2351.7216781618495}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.96856684981685,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9140625,"distances_sum":2427.4781217849822}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.96856684981685,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9140625,"distances_sum":2427.4781217849822}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.96856684981685,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9140625,"distances_sum":2427.4781217849822}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7742637570762578,"seconds":4.546716809272766e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.2109375,"distances_sum":1450.2860581546122}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5126953125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5126953125,"f1":0.6628640456765462,"seconds":4.030764102935791e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.4375,"distances_sum":1095.1500209699082}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.650390625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.650390625,"f1":0.7742637570762578,"seconds":4.546716809272766e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.2109375,"distances_sum":1450.2860581546122}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.787527403152404,"seconds":4.423782229423523e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.40625,"distances_sum":1481.6041513533987}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8128225940725948,"seconds":4.816800355911255e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.890625,"distances_sum":1592.7886665264634}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8833229270729277,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3515625,"distances_sum":1943.0942366921145}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.834144501332002,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.9140625,"distances_sum":1734.0422852175254}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7907321844821853,"seconds":4.794448614120483e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.484375,"distances_sum":1512.7779558599539}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8037109375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8037109375,"f1":0.8833229270729277,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3515625,"distances_sum":1943.0942366921145}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9664262820512823,"seconds":5.4795295000076294e-5,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8125,"distances_sum":2450.607886151182}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9361726814851818,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6484375,"distances_sum":2272.71318388975}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9365556318681324,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.71875,"distances_sum":2268.080164564225}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9406312437562444,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.703125,"distances_sum":2284.8692943611672}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9495764652014658,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.78125,"distances_sum":2314.3511262935176}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.951259157509158,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8515625,"distances_sum":2322.190334550688}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9064539627039636,"seconds":5.209818482398987e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.53125,"distances_sum":2098.6390456211193}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9664262820512823,"seconds":5.4795295000076294e-5,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8125,"distances_sum":2450.607886151182}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9664262820512823,"seconds":5.4795295000076294e-5,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8125,"distances_sum":2450.607886151182}}, n: 9
mean(cfft.distances) = 0.34047502829156856
mean(cdnet.distances) = 0.9388474715987689
mean(crand.distances) = 0.3513426944820806
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8733333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9488888888888889
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8466666666666667
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8777777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9222222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8822222222222221
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.88
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9133333333333334
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.928888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8333333333333334
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8711111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9333333333333332
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.888888888888889
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333332
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8955555555555555
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8622222222222223
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8488888888888889
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.888888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 3, 2, 3, 2, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 3, 2, 3, 2, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 3, 2, 3, 2, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 3, 2, 3, 2, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 3, 2, 3, 2, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 3, 2, 3, 2, 1]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 3, 2, 3, 2, 1]
acc = 0.96
*** finished computation of 12 references, err: [Inf, 0.6141229119896888] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 2]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 30), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 9, 2]]
** centroid: 9, normalized-entropy: 0.6840384356390419, [(2, 9), (3, 2)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 1, 1]]
** centroid: 10, normalized-entropy: 1.0, [(2, 1), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 15 centroids; started with 12
acc = 0.9466666666666667
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.24470000956403287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24470000956403287, 0.210981789345688] ***
*** finished computation of 7 references, err: [Inf, 0.24470000956403287, 0.210981789345688] ***
*** center 1: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [31, 107, 20]]
** centroid: 3, normalized-entropy: 0.7692620729842662, [(1, 31), (2, 107), (3, 20)]
*** center 4: selecting labels [1] (freq >= 1) [from [131, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [18, 67, 0]]
** centroid: 5, normalized-entropy: 0.7448423974714387, [(1, 18), (2, 67)]
*** center 6: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 7: selecting labels [1, 2, 3] (freq >= 1) [from [17, 58, 3]]
** centroid: 7, normalized-entropy: 0.6168286317195503, [(1, 17), (2, 58), (3, 3)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24442071449738723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24442071449738723, 0.19595414295222038] ***
*** finished computation of 7 references, err: [Inf, 0.24442071449738723, 0.19595414295222038] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [58, 57, 0]]
** centroid: 1, normalized-entropy: 0.9999454550766408, [(1, 58), (2, 57)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [82, 7, 0]]
** centroid: 2, normalized-entropy: 0.3974104103699249, [(1, 82), (2, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 78, 23]]
** centroid: 4, normalized-entropy: 0.7740204128451942, [(2, 78), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [20, 90, 0]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(1, 20), (2, 90)]
*** center 6: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23381581329538123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23381581329538123, 0.19572601660337674] ***
*** finished computation of 7 references, err: [Inf, 0.23381581329538123, 0.19572601660337674] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [55, 60, 0]]
** centroid: 1, normalized-entropy: 0.9986359641585719, [(1, 55), (2, 60)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [67, 14, 0]]
** centroid: 2, normalized-entropy: 0.6641593279528072, [(1, 67), (2, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 47, 24]]
** centroid: 4, normalized-entropy: 0.9229192878686723, [(2, 47), (3, 24)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [106, 10, 0]]
** centroid: 5, normalized-entropy: 0.4236805715709106, [(1, 106), (2, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [62, 1, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 109, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23682403717904926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23682403717904926, 0.19217328307242587] ***
*** finished computation of 7 references, err: [Inf, 0.23682403717904926, 0.19217328307242587] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 110, 0]]
** centroid: 1, normalized-entropy: 0.12923377484588472, [(1, 2), (2, 110)]
*** center 2: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [91, 5, 0]]
** centroid: 3, normalized-entropy: 0.29518174309075856, [(1, 91), (2, 5)]
*** center 4: selecting labels [1] (freq >= 2) [from [116, 1, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 34, 27]]
** centroid: 6, normalized-entropy: 0.9904799742690307, [(2, 34), (3, 27)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [8, 83, 0]]
** centroid: 7, normalized-entropy: 0.4294619720471057, [(1, 8), (2, 83)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24871868989814347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24871868989814347, 0.2057812958648582] ***
*** finished computation of 7 references, err: [Inf, 0.24871868989814347, 0.2057812958648582] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 23]]
** centroid: 1, normalized-entropy: 0.9953784388202258, [(2, 27), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [78, 45, 0]]
** centroid: 2, normalized-entropy: 0.9474351361840305, [(1, 78), (2, 45)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 63, 1]]
** centroid: 3, normalized-entropy: 0.11611507530476962, [(2, 63), (3, 1)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [23, 52, 0]]
** centroid: 4, normalized-entropy: 0.8892881527272397, [(1, 23), (2, 52)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [73, 54, 0]]
** centroid: 5, normalized-entropy: 0.9837939945275316, [(1, 73), (2, 54)]
*** center 6: selecting labels [1] (freq >= 1) [from [144, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23614136308342262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23614136308342262, 0.20078476789970134] ***
*** finished computation of 7 references, err: [Inf, 0.23614136308342262, 0.20078476789970134] ***
*** center 1: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [5, 100, 0]]
** centroid: 2, normalized-entropy: 0.2761954276479391, [(1, 5), (2, 100)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [128, 3, 0]]
** centroid: 3, normalized-entropy: 0.15743149388734748, [(1, 128), (2, 3)]
*** center 4: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [21, 85, 0]]
** centroid: 5, normalized-entropy: 0.7181384220154764, [(1, 21), (2, 85)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [70, 5, 0]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(1, 70), (2, 5)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 40, 27]]
** centroid: 7, normalized-entropy: 0.9726699911457106, [(2, 40), (3, 27)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26523781415563097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26523781415563097, 0.19562397280836608] ***
*** starting iteration: 2; err: [Inf, 0.26523781415563097, 0.19562397280836608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26523781415563097, 0.19562397280836608, 0.1918882174814517] ***
*** starting iteration: 3; err: [Inf, 0.26523781415563097, 0.19562397280836608, 0.1918882174814517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26523781415563097, 0.19562397280836608, 0.1918882174814517, 0.18936502988318782] ***
*** finished computation of 7 references, err: [Inf, 0.26523781415563097, 0.19562397280836608, 0.1918882174814517, 0.18936502988318782] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [114, 12, 0]]
** centroid: 1, normalized-entropy: 0.45371633918694493, [(1, 114), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [62, 27, 0]]
** centroid: 2, normalized-entropy: 0.8853723770068483, [(1, 62), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [64, 31, 0]]
** centroid: 3, normalized-entropy: 0.9111178649415465, [(1, 64), (2, 31)]
*** center 4: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 78, 23]]
** centroid: 5, normalized-entropy: 0.7740204128451942, [(2, 78), (3, 23)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 84, 0]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(1, 6), (2, 84)]
*** center 7: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.301519305919991] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.301519305919991, 0.21438287183463664] ***
*** starting iteration: 2; err: [Inf, 0.301519305919991, 0.21438287183463664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.301519305919991, 0.21438287183463664, 0.20782383655252373] ***
*** starting iteration: 3; err: [Inf, 0.301519305919991, 0.21438287183463664, 0.20782383655252373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.301519305919991, 0.21438287183463664, 0.20782383655252373, 0.20412245005748977] ***
*** finished computation of 7 references, err: [Inf, 0.301519305919991, 0.21438287183463664, 0.20782383655252373, 0.20412245005748977] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 97, 24]]
** centroid: 1, normalized-entropy: 0.718609966948486, [(2, 97), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 40, 0]]
** centroid: 2, normalized-entropy: 0.9967916319816367, [(1, 35), (2, 40)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [113, 35, 0]]
** centroid: 3, normalized-entropy: 0.7891484443722605, [(1, 113), (2, 35)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [76, 10, 0]]
** centroid: 4, normalized-entropy: 0.5185697317883058, [(1, 76), (2, 10)]
*** center 5: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 59, 0]]
** centroid: 6, normalized-entropy: 0.20818094555717087, [(1, 2), (2, 59)]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3226183411236601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3226183411236601, 0.20330354972495354] ***
*** starting iteration: 2; err: [Inf, 0.3226183411236601, 0.20330354972495354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3226183411236601, 0.20330354972495354, 0.19379528287680878] ***
*** starting iteration: 3; err: [Inf, 0.3226183411236601, 0.20330354972495354, 0.19379528287680878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3226183411236601, 0.20330354972495354, 0.19379528287680878, 0.19178758359708262] ***
*** finished computation of 7 references, err: [Inf, 0.3226183411236601, 0.20330354972495354, 0.19379528287680878, 0.19178758359708262] ***
*** center 1: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 72, 27]]
** centroid: 2, normalized-entropy: 0.8453509366224364, [(2, 72), (3, 27)]
*** center 3: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [60, 28, 0]]
** centroid: 4, normalized-entropy: 0.9023932827949788, [(1, 60), (2, 28)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [55, 30, 0]]
** centroid: 5, normalized-entropy: 0.9366673818775627, [(1, 55), (2, 30)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [107, 7, 0]]
** centroid: 6, normalized-entropy: 0.3329913124162683, [(1, 107), (2, 7)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [5, 96, 0]]
** centroid: 7, normalized-entropy: 0.2842902892501332, [(1, 5), (2, 96)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2856127156200609] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2856127156200609, 0.2455759043497657] ***
*** starting iteration: 2; err: [Inf, 0.2856127156200609, 0.2455759043497657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2856127156200609, 0.2455759043497657, 0.23695867477326063] ***
*** starting iteration: 3; err: [Inf, 0.2856127156200609, 0.2455759043497657, 0.23695867477326063] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2856127156200609, 0.2455759043497657, 0.23695867477326063, 0.23503614675013107] ***
*** starting iteration: 4; err: [Inf, 0.2856127156200609, 0.2455759043497657, 0.23695867477326063, 0.23503614675013107] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2856127156200609, 0.2455759043497657, 0.23695867477326063, 0.23503614675013107, 0.2349005719736308] ***
*** finished computation of 3 references, err: [Inf, 0.2856127156200609, 0.2455759043497657, 0.23695867477326063, 0.23503614675013107, 0.2349005719736308] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [6, 186, 23]]
** centroid: 1, normalized-entropy: 0.4226531622847658, [(1, 6), (2, 186), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [249, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [156, 46, 0]]
** centroid: 3, normalized-entropy: 0.7740204128451942, [(1, 156), (2, 46)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3236408900899598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3236408900899598, 0.2644466766179993] ***
*** starting iteration: 2; err: [Inf, 0.3236408900899598, 0.2644466766179993] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3236408900899598, 0.2644466766179993, 0.2463908734657373] ***
*** starting iteration: 3; err: [Inf, 0.3236408900899598, 0.2644466766179993, 0.2463908734657373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3236408900899598, 0.2644466766179993, 0.2463908734657373, 0.24235181559318456] ***
*** starting iteration: 4; err: [Inf, 0.3236408900899598, 0.2644466766179993, 0.2463908734657373, 0.24235181559318456] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3236408900899598, 0.2644466766179993, 0.2463908734657373, 0.24235181559318456, 0.24151314631791443] ***
*** finished computation of 3 references, err: [Inf, 0.3236408900899598, 0.2644466766179993, 0.2463908734657373, 0.24235181559318456, 0.24151314631791443] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [249, 8, 0]]
** centroid: 1, normalized-entropy: 0.20001956442752727, [(1, 249), (2, 8)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [144, 54, 0]]
** centroid: 2, normalized-entropy: 0.8453509366224364, [(1, 144), (2, 54)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [9, 179, 24]]
** centroid: 3, normalized-entropy: 0.476612928417123, [(1, 9), (2, 179), (3, 24)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.435386940950311] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.435386940950311, 0.27829890464805346] ***
*** starting iteration: 2; err: [Inf, 0.435386940950311, 0.27829890464805346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.435386940950311, 0.27829890464805346, 0.2647931740145901] ***
*** starting iteration: 3; err: [Inf, 0.435386940950311, 0.27829890464805346, 0.2647931740145901] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.435386940950311, 0.27829890464805346, 0.2647931740145901, 0.24200299251238178] ***
*** starting iteration: 4; err: [Inf, 0.435386940950311, 0.27829890464805346, 0.2647931740145901, 0.24200299251238178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.435386940950311, 0.27829890464805346, 0.2647931740145901, 0.24200299251238178, 0.23490725654265335] ***
*** starting iteration: 5; err: [Inf, 0.435386940950311, 0.27829890464805346, 0.2647931740145901, 0.24200299251238178, 0.23490725654265335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.435386940950311, 0.27829890464805346, 0.2647931740145901, 0.24200299251238178, 0.23490725654265335, 0.23432416346823348] ***
*** finished computation of 3 references, err: [Inf, 0.435386940950311, 0.27829890464805346, 0.2647931740145901, 0.24200299251238178, 0.23490725654265335, 0.23432416346823348] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [83, 159, 27]]
** centroid: 1, normalized-entropy: 0.823175105593799, [(1, 83), (2, 159), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [199, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [125, 74, 0]]
** centroid: 3, normalized-entropy: 0.9520890193411206, [(1, 125), (2, 74)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.27860968558442173] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27860968558442173, 0.247136163077801] ***
*** starting iteration: 2; err: [Inf, 0.27860968558442173, 0.247136163077801] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27860968558442173, 0.247136163077801, 0.2457639698467746] ***
*** starting iteration: 3; err: [Inf, 0.27860968558442173, 0.247136163077801, 0.2457639698467746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27860968558442173, 0.247136163077801, 0.2457639698467746, 0.2457367270854903] ***
*** finished computation of 3 references, err: [Inf, 0.27860968558442173, 0.247136163077801, 0.2457639698467746, 0.2457367270854903] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [104, 163, 23]]
** centroid: 1, normalized-entropy: 0.8124706336057971, [(1, 104), (2, 163), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [190, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [117, 69, 0]]
** centroid: 3, normalized-entropy: 0.9514122535330207, [(1, 117), (2, 69)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3474788550815281] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3474788550815281, 0.24335395073381322] ***
*** starting iteration: 2; err: [Inf, 0.3474788550815281, 0.24335395073381322] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3474788550815281, 0.24335395073381322, 0.24153635200710669] ***
*** starting iteration: 3; err: [Inf, 0.3474788550815281, 0.24335395073381322, 0.24153635200710669] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3474788550815281, 0.24335395073381322, 0.24153635200710669, 0.2409500744098845] ***
*** finished computation of 3 references, err: [Inf, 0.3474788550815281, 0.24335395073381322, 0.24153635200710669, 0.2409500744098845] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [161, 48, 0]]
** centroid: 1, normalized-entropy: 0.7774269913580653, [(1, 161), (2, 48)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [241, 15, 0]]
** centroid: 2, normalized-entropy: 0.32183715247832606, [(1, 241), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 178, 24]]
** centroid: 3, normalized-entropy: 0.5259359840917625, [(2, 178), (3, 24)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2975567272170328] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2975567272170328, 0.2412301242292888] ***
*** starting iteration: 2; err: [Inf, 0.2975567272170328, 0.2412301242292888] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2975567272170328, 0.2412301242292888, 0.2395684325765969] ***
*** starting iteration: 3; err: [Inf, 0.2975567272170328, 0.2412301242292888, 0.2395684325765969] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2975567272170328, 0.2412301242292888, 0.2395684325765969, 0.23917276327563883] ***
*** finished computation of 3 references, err: [Inf, 0.2975567272170328, 0.2412301242292888, 0.2395684325765969, 0.23917276327563883] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [180, 45, 0]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(1, 180), (2, 45)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 173, 27]]
** centroid: 2, normalized-entropy: 0.5709929600768897, [(2, 173), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [227, 15, 0]]
** centroid: 3, normalized-entropy: 0.33526875153424135, [(1, 227), (2, 15)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.37623717385000205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37623717385000205, 0.3195144470540566] ***
*** starting iteration: 2; err: [Inf, 0.37623717385000205, 0.3195144470540566] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37623717385000205, 0.3195144470540566, 0.3058734730014706] ***
*** starting iteration: 3; err: [Inf, 0.37623717385000205, 0.3195144470540566, 0.3058734730014706] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37623717385000205, 0.3195144470540566, 0.3058734730014706, 0.3043381568749209] ***
*** finished computation of 3 references, err: [Inf, 0.37623717385000205, 0.3195144470540566, 0.3058734730014706, 0.3043381568749209] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 182, 23]]
** centroid: 1, normalized-entropy: 0.506501809234841, [(2, 182), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [191, 29, 0]]
** centroid: 2, normalized-entropy: 0.5624035543722615, [(1, 191), (2, 29)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [220, 21, 0]]
** centroid: 3, normalized-entropy: 0.42684036173295303, [(1, 220), (2, 21)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4686968528450574] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4686968528450574, 0.3156951934293281] ***
*** starting iteration: 2; err: [Inf, 0.4686968528450574, 0.3156951934293281] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4686968528450574, 0.3156951934293281, 0.301312539620378] ***
*** starting iteration: 3; err: [Inf, 0.4686968528450574, 0.3156951934293281, 0.301312539620378] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4686968528450574, 0.3156951934293281, 0.301312539620378, 0.29973084651034276] ***
*** finished computation of 3 references, err: [Inf, 0.4686968528450574, 0.3156951934293281, 0.301312539620378, 0.29973084651034276] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [92, 164, 24]]
** centroid: 1, normalized-entropy: 0.8097395631243333, [(1, 92), (2, 164), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [189, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [121, 77, 0]]
** centroid: 3, normalized-entropy: 0.9640787648082293, [(1, 121), (2, 77)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.42590169158988983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42590169158988983, 0.31560230476996753] ***
*** starting iteration: 2; err: [Inf, 0.42590169158988983, 0.31560230476996753] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42590169158988983, 0.31560230476996753, 0.29859379796043173] ***
*** starting iteration: 3; err: [Inf, 0.42590169158988983, 0.31560230476996753, 0.29859379796043173] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42590169158988983, 0.31560230476996753, 0.29859379796043173, 0.2971460038720668] ***
*** finished computation of 3 references, err: [Inf, 0.42590169158988983, 0.31560230476996753, 0.29859379796043173, 0.2971460038720668] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [127, 86, 0]]
** centroid: 1, normalized-entropy: 0.9731052816134181, [(1, 127), (2, 86)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [67, 147, 27]]
** centroid: 2, normalized-entropy: 0.8216343112914909, [(1, 67), (2, 147), (3, 27)]
*** center 3: selecting labels [1] (freq >= 2) [from [213, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18358669985105303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18358669985105303, 0.15745417963553993] ***
*** starting iteration: 2; err: [Inf, 0.18358669985105303, 0.15745417963553993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18358669985105303, 0.15745417963553993, 0.1531900196048143] ***
*** starting iteration: 3; err: [Inf, 0.18358669985105303, 0.15745417963553993, 0.1531900196048143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18358669985105303, 0.15745417963553993, 0.1531900196048143, 0.15117850995974969] ***
*** starting iteration: 4; err: [Inf, 0.18358669985105303, 0.15745417963553993, 0.1531900196048143, 0.15117850995974969] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18358669985105303, 0.15745417963553993, 0.1531900196048143, 0.15117850995974969, 0.14975856942601512] ***
*** starting iteration: 5; err: [Inf, 0.18358669985105303, 0.15745417963553993, 0.1531900196048143, 0.15117850995974969, 0.14975856942601512] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18358669985105303, 0.15745417963553993, 0.1531900196048143, 0.15117850995974969, 0.14975856942601512, 0.14869561092928052] ***
*** starting iteration: 6; err: [Inf, 0.18358669985105303, 0.15745417963553993, 0.1531900196048143, 0.15117850995974969, 0.14975856942601512, 0.14869561092928052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18358669985105303, 0.15745417963553993, 0.1531900196048143, 0.15117850995974969, 0.14975856942601512, 0.14869561092928052, 0.1476926862670517] ***
*** starting iteration: 7; err: [Inf, 0.18358669985105303, 0.15745417963553993, 0.1531900196048143, 0.15117850995974969, 0.14975856942601512, 0.14869561092928052, 0.1476926862670517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18358669985105303, 0.15745417963553993, 0.1531900196048143, 0.15117850995974969, 0.14975856942601512, 0.14869561092928052, 0.1476926862670517, 0.14716679436383998] ***
*** finished computation of 7 references, err: [Inf, 0.18358669985105303, 0.15745417963553993, 0.1531900196048143, 0.15117850995974969, 0.14975856942601512, 0.14869561092928052, 0.1476926862670517, 0.14716679436383998] ***
*** center 1: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [43, 69, 0]]
** centroid: 2, normalized-entropy: 0.960769458040784, [(1, 43), (2, 69)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [104, 14, 0]]
** centroid: 3, normalized-entropy: 0.5254506799086205, [(1, 104), (2, 14)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [39, 34, 0]]
** centroid: 4, normalized-entropy: 0.9966132830150962, [(1, 39), (2, 34)]
*** center 5: selecting labels [1] (freq >= 1) [from [124, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 67, 10]]
** centroid: 6, normalized-entropy: 0.557081908103416, [(2, 67), (3, 10)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 48, 13]]
** centroid: 7, normalized-entropy: 0.7473944462440388, [(2, 48), (3, 13)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2901921295183899] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2901921295183899, 0.18120263471523637] ***
*** starting iteration: 2; err: [Inf, 0.2901921295183899, 0.18120263471523637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2901921295183899, 0.18120263471523637, 0.16812678520055277] ***
*** starting iteration: 3; err: [Inf, 0.2901921295183899, 0.18120263471523637, 0.16812678520055277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2901921295183899, 0.18120263471523637, 0.16812678520055277, 0.16239507279443977] ***
*** starting iteration: 4; err: [Inf, 0.2901921295183899, 0.18120263471523637, 0.16812678520055277, 0.16239507279443977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2901921295183899, 0.18120263471523637, 0.16812678520055277, 0.16239507279443977, 0.15997307848135034] ***
*** starting iteration: 5; err: [Inf, 0.2901921295183899, 0.18120263471523637, 0.16812678520055277, 0.16239507279443977, 0.15997307848135034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2901921295183899, 0.18120263471523637, 0.16812678520055277, 0.16239507279443977, 0.15997307848135034, 0.1593562112765099] ***
*** finished computation of 7 references, err: [Inf, 0.2901921295183899, 0.18120263471523637, 0.16812678520055277, 0.16239507279443977, 0.15997307848135034, 0.1593562112765099] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 49, 24]]
** centroid: 1, normalized-entropy: 0.9136617865655933, [(2, 49), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [157, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [115, 12, 0]]
** centroid: 4, normalized-entropy: 0.45127597915596884, [(1, 115), (2, 12)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [17, 81, 0]]
** centroid: 5, normalized-entropy: 0.665580063146735, [(1, 17), (2, 81)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [55, 17, 0]]
** centroid: 6, normalized-entropy: 0.7885131605379784, [(1, 55), (2, 17)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 82, 0]]
** centroid: 7, normalized-entropy: 0.2713895875081112, [(1, 4), (2, 82)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20007649306598854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20007649306598854, 0.17922734225872552] ***
*** starting iteration: 2; err: [Inf, 0.20007649306598854, 0.17922734225872552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20007649306598854, 0.17922734225872552, 0.15843645104443072] ***
*** starting iteration: 3; err: [Inf, 0.20007649306598854, 0.17922734225872552, 0.15843645104443072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20007649306598854, 0.17922734225872552, 0.15843645104443072, 0.15081764286072616] ***
*** starting iteration: 4; err: [Inf, 0.20007649306598854, 0.17922734225872552, 0.15843645104443072, 0.15081764286072616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20007649306598854, 0.17922734225872552, 0.15843645104443072, 0.15081764286072616, 0.14947309784697316] ***
*** starting iteration: 5; err: [Inf, 0.20007649306598854, 0.17922734225872552, 0.15843645104443072, 0.15081764286072616, 0.14947309784697316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20007649306598854, 0.17922734225872552, 0.15843645104443072, 0.15081764286072616, 0.14947309784697316, 0.14866088655801013] ***
*** finished computation of 7 references, err: [Inf, 0.20007649306598854, 0.17922734225872552, 0.15843645104443072, 0.15081764286072616, 0.14947309784697316, 0.14866088655801013] ***
*** center 1: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [14, 93, 0]]
** centroid: 2, normalized-entropy: 0.5597404598417697, [(1, 14), (2, 93)]
*** center 3: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [57, 11, 0]]
** centroid: 4, normalized-entropy: 0.6385146263620961, [(1, 57), (2, 11)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 71, 27]]
** centroid: 5, normalized-entropy: 0.8492607824494318, [(2, 71), (3, 27)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [54, 58, 0]]
** centroid: 6, normalized-entropy: 0.9990797181805819, [(1, 54), (2, 58)]
*** center 7: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4490192878009701] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4490192878009701, 0.3075629925332941] ***
*** starting iteration: 2; err: [Inf, 0.4490192878009701, 0.3075629925332941] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4490192878009701, 0.3075629925332941, 0.2983497084138003] ***
*** starting iteration: 3; err: [Inf, 0.4490192878009701, 0.3075629925332941, 0.2983497084138003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4490192878009701, 0.3075629925332941, 0.2983497084138003, 0.2961414241219392] ***
*** finished computation of 3 references, err: [Inf, 0.4490192878009701, 0.3075629925332941, 0.2983497084138003, 0.2961414241219392] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [159, 52, 0]]
** centroid: 1, normalized-entropy: 0.8055956094012642, [(1, 159), (2, 52)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [247, 6, 0]]
** centroid: 2, normalized-entropy: 0.16182171222102035, [(1, 247), (2, 6)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [5, 174, 23]]
** centroid: 3, normalized-entropy: 0.42551834654690956, [(1, 5), (2, 174), (3, 23)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.428832383279031] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.428832383279031, 0.3082198745332312] ***
*** starting iteration: 2; err: [Inf, 0.428832383279031, 0.3082198745332312] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.428832383279031, 0.3082198745332312, 0.30610535949932177] ***
*** starting iteration: 3; err: [Inf, 0.428832383279031, 0.3082198745332312, 0.30610535949932177] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.428832383279031, 0.3082198745332312, 0.30610535949932177, 0.3056128917951723] ***
*** finished computation of 3 references, err: [Inf, 0.428832383279031, 0.3082198745332312, 0.30610535949932177, 0.3056128917951723] ***
*** center 1: selecting labels [1] (freq >= 2) [from [250, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [138, 58, 0]]
** centroid: 2, normalized-entropy: 0.8762441668050731, [(1, 138), (2, 58)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [14, 183, 24]]
** centroid: 3, normalized-entropy: 0.5207634984024678, [(1, 14), (2, 183), (3, 24)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5921210158096886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5921210158096886, 0.3427560532401348] ***
*** starting iteration: 2; err: [Inf, 0.5921210158096886, 0.3427560532401348] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5921210158096886, 0.3427560532401348, 0.3089645057050944] ***
*** starting iteration: 3; err: [Inf, 0.5921210158096886, 0.3427560532401348, 0.3089645057050944] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5921210158096886, 0.3427560532401348, 0.3089645057050944, 0.30485680256167363] ***
*** finished computation of 3 references, err: [Inf, 0.5921210158096886, 0.3427560532401348, 0.3089645057050944, 0.30485680256167363] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [159, 57, 0]]
** centroid: 1, normalized-entropy: 0.8325582396745668, [(1, 159), (2, 57)]
*** center 2: selecting labels [1] (freq >= 2) [from [219, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [29, 176, 27]]
** centroid: 3, normalized-entropy: 0.6552102545195023, [(1, 29), (2, 176), (3, 27)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2550360676203225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2550360676203225, 0.20891607437120588] ***
*** starting iteration: 2; err: [Inf, 0.2550360676203225, 0.20891607437120588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2550360676203225, 0.20891607437120588, 0.20171729503856697] ***
*** starting iteration: 3; err: [Inf, 0.2550360676203225, 0.20891607437120588, 0.20171729503856697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2550360676203225, 0.20891607437120588, 0.20171729503856697, 0.19879575402758368] ***
*** finished computation of 7 references, err: [Inf, 0.2550360676203225, 0.20891607437120588, 0.20171729503856697, 0.19879575402758368] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [90, 50, 0]]
** centroid: 1, normalized-entropy: 0.940285958670631, [(1, 90), (2, 50)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [3, 69, 0]]
** centroid: 2, normalized-entropy: 0.24988229283318547, [(1, 3), (2, 69)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 92, 23]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 92), (3, 23)]
*** center 4: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [83, 21, 0]]
** centroid: 5, normalized-entropy: 0.7257576154473545, [(1, 83), (2, 21)]
*** center 6: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3032365263561192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3032365263561192, 0.19952879995044817] ***
*** starting iteration: 2; err: [Inf, 0.3032365263561192, 0.19952879995044817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3032365263561192, 0.19952879995044817, 0.19618018911355573] ***
*** starting iteration: 3; err: [Inf, 0.3032365263561192, 0.19952879995044817, 0.19618018911355573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3032365263561192, 0.19952879995044817, 0.19618018911355573, 0.19472751599028595] ***
*** finished computation of 7 references, err: [Inf, 0.3032365263561192, 0.19952879995044817, 0.19618018911355573, 0.19472751599028595] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 50, 24]]
** centroid: 1, normalized-entropy: 0.9090221560878149, [(2, 50), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [28, 64, 0]]
** centroid: 2, normalized-entropy: 0.8865408928220899, [(1, 28), (2, 64)]
*** center 3: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [2, 92, 0]]
** centroid: 5, normalized-entropy: 0.14854949043034832, [(1, 2), (2, 92)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [88, 10, 0]]
** centroid: 6, normalized-entropy: 0.47543164626872053, [(1, 88), (2, 10)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [88, 25, 0]]
** centroid: 7, normalized-entropy: 0.7624233236147429, [(1, 88), (2, 25)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29964258735426985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29964258735426985, 0.2179956860753751] ***
*** starting iteration: 2; err: [Inf, 0.29964258735426985, 0.2179956860753751] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29964258735426985, 0.2179956860753751, 0.2058970590067589] ***
*** starting iteration: 3; err: [Inf, 0.29964258735426985, 0.2179956860753751, 0.2058970590067589] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29964258735426985, 0.2179956860753751, 0.2058970590067589, 0.19938556959285683] ***
*** finished computation of 7 references, err: [Inf, 0.29964258735426985, 0.2179956860753751, 0.2058970590067589, 0.19938556959285683] ***
*** center 1: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [1, 116, 27]]
** centroid: 2, normalized-entropy: 0.6989779242384453, [(2, 116), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [118, 3, 0]]
** centroid: 3, normalized-entropy: 0.1675676395319437, [(1, 118), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [77, 11, 0]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(1, 77), (2, 11)]
*** center 5: selecting labels [2] (freq >= 2) [from [1, 94, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [76, 9, 0]]
** centroid: 6, normalized-entropy: 0.48736957102366285, [(1, 76), (2, 9)]
*** center 7: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 11)
[0.9439829050607494, 0.9309938681196167, 0.9139858421295548, 0.9069938201674729, 0.89400478322634, 0.8890387393381406, 0.8819747891604179, 0.8579987172801543, 0.8549927172681664, 0.8509737282192372, 0.8099986213758669]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9439829050607494
finished with 11
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 11)
[0.9439829050607494, 0.9309938681196167, 0.9139858421295548, 0.9069938201674729, 0.89400478322634, 0.8890387393381406, 0.8819747891604179, 0.8579987172801543, 0.8549927172681664, 0.8509737282192372, 0.8099986213758669]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9439829050607494
finished with 13
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.6912338755809486] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6912338755809486, 0.3863016192384579] ***
*** starting iteration: 2; err: [Inf, 0.6912338755809486, 0.3863016192384579] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6912338755809486, 0.3863016192384579, 0.3613409743449922] ***
*** starting iteration: 3; err: [Inf, 0.6912338755809486, 0.3863016192384579, 0.3613409743449922] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6912338755809486, 0.3863016192384579, 0.3613409743449922, 0.3376072884464564] ***
*** finished computation of 3 references, err: [Inf, 0.6912338755809486, 0.3863016192384579, 0.3613409743449922, 0.3376072884464564] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [132, 67, 0]]
** centroid: 1, normalized-entropy: 0.9216095475989926, [(1, 132), (2, 67)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [279, 46, 0]]
** centroid: 2, normalized-entropy: 0.5882537664420755, [(1, 279), (2, 46)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 119, 23]]
** centroid: 3, normalized-entropy: 0.6390060010331569, [(2, 119), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3291514949982] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3291514949982, 0.3018557807986347] ***
*** starting iteration: 2; err: [Inf, 0.3291514949982, 0.3018557807986347] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3291514949982, 0.3018557807986347, 0.30036219912043577] ***
*** starting iteration: 3; err: [Inf, 0.3291514949982, 0.3018557807986347, 0.30036219912043577] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3291514949982, 0.3018557807986347, 0.30036219912043577, 0.29993546143805294] ***
*** finished computation of 3 references, err: [Inf, 0.3291514949982, 0.3018557807986347, 0.30036219912043577, 0.29993546143805294] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [118, 73, 0]]
** centroid: 1, normalized-entropy: 0.9595802802716726, [(1, 118), (2, 73)]
*** center 2: selecting labels [1] (freq >= 2) [from [203, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [81, 168, 24]]
** centroid: 3, normalized-entropy: 0.7946627780983964, [(1, 81), (2, 168), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4142726095926681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4142726095926681, 0.3210942548332454] ***
*** starting iteration: 2; err: [Inf, 0.4142726095926681, 0.3210942548332454] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4142726095926681, 0.3210942548332454, 0.3056640006766572] ***
*** starting iteration: 3; err: [Inf, 0.4142726095926681, 0.3210942548332454, 0.3056640006766572] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4142726095926681, 0.3210942548332454, 0.3056640006766572, 0.30295017232344873] ***
*** finished computation of 3 references, err: [Inf, 0.4142726095926681, 0.3210942548332454, 0.3056640006766572, 0.30295017232344873] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 170, 27]]
** centroid: 1, normalized-entropy: 0.5764760747770721, [(2, 170), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [231, 11, 0]]
** centroid: 2, normalized-entropy: 0.2667649878030262, [(1, 231), (2, 11)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [176, 52, 0]]
** centroid: 3, normalized-entropy: 0.7746319868686841, [(1, 176), (2, 52)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3198361606728677] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3198361606728677, 0.2549932961017956] ***
*** starting iteration: 2; err: [Inf, 0.3198361606728677, 0.2549932961017956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3198361606728677, 0.2549932961017956, 0.24642023238333854] ***
*** starting iteration: 3; err: [Inf, 0.3198361606728677, 0.2549932961017956, 0.24642023238333854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3198361606728677, 0.2549932961017956, 0.24642023238333854, 0.2427756014733097] ***
*** finished computation of 3 references, err: [Inf, 0.3198361606728677, 0.2549932961017956, 0.24642023238333854, 0.2427756014733097] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [157, 43, 0]]
** centroid: 1, normalized-entropy: 0.7509319796338464, [(1, 157), (2, 43)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [254, 29, 0]]
** centroid: 2, normalized-entropy: 0.4767877152741802, [(1, 254), (2, 29)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 160, 23]]
** centroid: 3, normalized-entropy: 0.5454789630310957, [(2, 160), (3, 23)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3437729506268874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3437729506268874, 0.2410844058298256] ***
*** starting iteration: 2; err: [Inf, 0.3437729506268874, 0.2410844058298256] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3437729506268874, 0.2410844058298256, 0.24023058429790445] ***
*** finished computation of 3 references, err: [Inf, 0.3437729506268874, 0.2410844058298256, 0.24023058429790445] ***
*** center 1: selecting labels [1] (freq >= 2) [from [215, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [139, 62, 0]]
** centroid: 2, normalized-entropy: 0.8913851222607504, [(1, 139), (2, 62)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [48, 179, 24]]
** centroid: 3, normalized-entropy: 0.7117116561301917, [(1, 48), (2, 179), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2799369597394226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2799369597394226, 0.23580373097015642] ***
*** starting iteration: 2; err: [Inf, 0.2799369597394226, 0.23580373097015642] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2799369597394226, 0.23580373097015642, 0.23392827288251833] ***
*** starting iteration: 3; err: [Inf, 0.2799369597394226, 0.23580373097015642, 0.23392827288251833] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2799369597394226, 0.23580373097015642, 0.23392827288251833, 0.2338662119086614] ***
*** finished computation of 3 references, err: [Inf, 0.2799369597394226, 0.23580373097015642, 0.23392827288251833, 0.2338662119086614] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [93, 161, 27]]
** centroid: 1, normalized-entropy: 0.8284544299535007, [(1, 93), (2, 161), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [124, 72, 0]]
** centroid: 2, normalized-entropy: 0.9486131982385807, [(1, 124), (2, 72)]
*** center 3: selecting labels [1] (freq >= 2) [from [190, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 13)
[0.9439829050607494, 0.9309938681196167, 0.9139858421295548, 0.9069938201674729, 0.89400478322634, 0.8890387393381406, 0.8830147512782243, 0.8820227413041785, 0.8819747891604179, 0.8579987172801543, 0.8549927172681664, 0.8509737282192372, 0.8099986213758669]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9439829050607494
finished with 13
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 13)
[0.9439829050607494, 0.9309938681196167, 0.9139858421295548, 0.9069938201674729, 0.89400478322634, 0.8890387393381406, 0.8830147512782243, 0.8820227413041785, 0.8819747891604179, 0.8579987172801543, 0.8549927172681664, 0.8509737282192372, 0.8099986213758669]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9439829050607494
finished with 14
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.48395677892821237] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48395677892821237, 0.3452444560158097] ***
*** starting iteration: 2; err: [Inf, 0.48395677892821237, 0.3452444560158097] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48395677892821237, 0.3452444560158097, 0.3365299757772794] ***
*** starting iteration: 3; err: [Inf, 0.48395677892821237, 0.3452444560158097, 0.3365299757772794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48395677892821237, 0.3452444560158097, 0.3365299757772794, 0.3249283695940275] ***
*** starting iteration: 4; err: [Inf, 0.48395677892821237, 0.3452444560158097, 0.3365299757772794, 0.3249283695940275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48395677892821237, 0.3452444560158097, 0.3365299757772794, 0.3249283695940275, 0.3004401706147928] ***
*** starting iteration: 5; err: [Inf, 0.48395677892821237, 0.3452444560158097, 0.3365299757772794, 0.3249283695940275, 0.3004401706147928] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48395677892821237, 0.3452444560158097, 0.3365299757772794, 0.3249283695940275, 0.3004401706147928, 0.2972992778680212] ***
*** starting iteration: 6; err: [Inf, 0.48395677892821237, 0.3452444560158097, 0.3365299757772794, 0.3249283695940275, 0.3004401706147928, 0.2972992778680212] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48395677892821237, 0.3452444560158097, 0.3365299757772794, 0.3249283695940275, 0.3004401706147928, 0.2972992778680212, 0.29648361957209696] ***
*** finished computation of 3 references, err: [Inf, 0.48395677892821237, 0.3452444560158097, 0.3365299757772794, 0.3249283695940275, 0.3004401706147928, 0.2972992778680212, 0.29648361957209696] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [7, 184, 23]]
** centroid: 1, normalized-entropy: 0.43824594648346865, [(1, 7), (2, 184), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [250, 2, 0]]
** centroid: 2, normalized-entropy: 0.06677964109705235, [(1, 250), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [154, 46, 0]]
** centroid: 3, normalized-entropy: 0.7780113035465377, [(1, 154), (2, 46)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3512659291565737] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3512659291565737, 0.3146322307307266] ***
*** starting iteration: 2; err: [Inf, 0.3512659291565737, 0.3146322307307266] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3512659291565737, 0.3146322307307266, 0.31062294523660344] ***
*** starting iteration: 3; err: [Inf, 0.3512659291565737, 0.3146322307307266, 0.31062294523660344] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3512659291565737, 0.3146322307307266, 0.31062294523660344, 0.3072876457915246] ***
*** starting iteration: 4; err: [Inf, 0.3512659291565737, 0.3146322307307266, 0.31062294523660344, 0.3072876457915246] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3512659291565737, 0.3146322307307266, 0.31062294523660344, 0.3072876457915246, 0.3057922555117643] ***
*** starting iteration: 5; err: [Inf, 0.3512659291565737, 0.3146322307307266, 0.31062294523660344, 0.3072876457915246, 0.3057922555117643] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3512659291565737, 0.3146322307307266, 0.31062294523660344, 0.3072876457915246, 0.3057922555117643, 0.305015010102282] ***
*** finished computation of 3 references, err: [Inf, 0.3512659291565737, 0.3146322307307266, 0.31062294523660344, 0.3072876457915246, 0.3057922555117643, 0.305015010102282] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [151, 56, 0]]
** centroid: 1, normalized-entropy: 0.8422261300920172, [(1, 151), (2, 56)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [251, 13, 0]]
** centroid: 2, normalized-entropy: 0.2831700724740671, [(1, 251), (2, 13)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 172, 24]]
** centroid: 3, normalized-entropy: 0.5363596511250623, [(2, 172), (3, 24)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.48109668190835386] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48109668190835386, 0.33283665706159205] ***
*** starting iteration: 2; err: [Inf, 0.48109668190835386, 0.33283665706159205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48109668190835386, 0.33283665706159205, 0.32735470500167296] ***
*** starting iteration: 3; err: [Inf, 0.48109668190835386, 0.33283665706159205, 0.32735470500167296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48109668190835386, 0.33283665706159205, 0.32735470500167296, 0.3244672633785715] ***
*** starting iteration: 4; err: [Inf, 0.48109668190835386, 0.33283665706159205, 0.32735470500167296, 0.3244672633785715] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48109668190835386, 0.33283665706159205, 0.32735470500167296, 0.3244672633785715, 0.3226450956028619] ***
*** starting iteration: 5; err: [Inf, 0.48109668190835386, 0.33283665706159205, 0.32735470500167296, 0.3244672633785715, 0.3226450956028619] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48109668190835386, 0.33283665706159205, 0.32735470500167296, 0.3244672633785715, 0.3226450956028619, 0.3198729150703755] ***
*** starting iteration: 6; err: [Inf, 0.48109668190835386, 0.33283665706159205, 0.32735470500167296, 0.3244672633785715, 0.3226450956028619, 0.3198729150703755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48109668190835386, 0.33283665706159205, 0.32735470500167296, 0.3244672633785715, 0.3226450956028619, 0.3198729150703755, 0.29916128870853775] ***
*** starting iteration: 7; err: [Inf, 0.48109668190835386, 0.33283665706159205, 0.32735470500167296, 0.3244672633785715, 0.3226450956028619, 0.3198729150703755, 0.29916128870853775] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48109668190835386, 0.33283665706159205, 0.32735470500167296, 0.3244672633785715, 0.3226450956028619, 0.3198729150703755, 0.29916128870853775, 0.29712462931245875] ***
*** starting iteration: 8; err: [Inf, 0.48109668190835386, 0.33283665706159205, 0.32735470500167296, 0.3244672633785715, 0.3226450956028619, 0.3198729150703755, 0.29916128870853775, 0.29712462931245875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48109668190835386, 0.33283665706159205, 0.32735470500167296, 0.3244672633785715, 0.3226450956028619, 0.3198729150703755, 0.29916128870853775, 0.29712462931245875, 0.2968514887630001] ***
*** finished computation of 3 references, err: [Inf, 0.48109668190835386, 0.33283665706159205, 0.32735470500167296, 0.3244672633785715, 0.3226450956028619, 0.3198729150703755, 0.29916128870853775, 0.29712462931245875, 0.2968514887630001] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [80, 164, 27]]
** centroid: 1, normalized-entropy: 0.8136610985647932, [(1, 80), (2, 164), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [120, 69, 0]]
** centroid: 2, normalized-entropy: 0.9468188316776024, [(1, 120), (2, 69)]
*** center 3: selecting labels [1] (freq >= 1) [from [207, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.9439829050607494, 0.9309938681196167, 0.9139858421295548, 0.9069938201674729, 0.89400478322634, 0.8890387393381406, 0.8830147512782243, 0.8820227413041785, 0.8819747891604179, 0.8800057542572514, 0.8579987172801543, 0.8549927172681664, 0.8509737282192372, 0.8099986213758669]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9439829050607494
finished with 15
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.26270933147497455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26270933147497455, 0.20002782268501404] ***
*** starting iteration: 2; err: [Inf, 0.26270933147497455, 0.20002782268501404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26270933147497455, 0.20002782268501404, 0.19435916135965794] ***
*** starting iteration: 3; err: [Inf, 0.26270933147497455, 0.20002782268501404, 0.19435916135965794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26270933147497455, 0.20002782268501404, 0.19435916135965794, 0.1928433980541052] ***
*** starting iteration: 4; err: [Inf, 0.26270933147497455, 0.20002782268501404, 0.19435916135965794, 0.1928433980541052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26270933147497455, 0.20002782268501404, 0.19435916135965794, 0.1928433980541052, 0.19244737580401805] ***
*** finished computation of 7 references, err: [Inf, 0.26270933147497455, 0.20002782268501404, 0.19435916135965794, 0.1928433980541052, 0.19244737580401805] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [110, 19, 0]]
** centroid: 1, normalized-entropy: 0.6030087186547216, [(1, 110), (2, 19)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 61, 6]]
** centroid: 2, normalized-entropy: 0.43497348007474274, [(2, 61), (3, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [75, 1, 0]]
** centroid: 3, normalized-entropy: 0.10106696361212422, [(1, 75), (2, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 81, 17]]
** centroid: 4, normalized-entropy: 0.665580063146735, [(2, 81), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [43, 58, 0]]
** centroid: 5, normalized-entropy: 0.9840304711717017, [(1, 43), (2, 58)]
*** center 6: selecting labels [1] (freq >= 1) [from [124, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [59, 12, 0]]
** centroid: 7, normalized-entropy: 0.6554444445609846, [(1, 59), (2, 12)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20328777964468459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20328777964468459, 0.19151874248502493] ***
*** starting iteration: 2; err: [Inf, 0.20328777964468459, 0.19151874248502493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20328777964468459, 0.19151874248502493, 0.19075548086200897] ***
*** finished computation of 7 references, err: [Inf, 0.20328777964468459, 0.19151874248502493, 0.19075548086200897] ***
*** center 1: selecting labels [1] (freq >= 1) [from [135, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 53, 23]]
** centroid: 2, normalized-entropy: 0.8844839729019952, [(2, 53), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [57, 30, 0]]
** centroid: 3, normalized-entropy: 0.9293636260137188, [(1, 57), (2, 30)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 15, 0]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(1, 60), (2, 15)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [65, 37, 0]]
** centroid: 5, normalized-entropy: 0.9449382598624693, [(1, 65), (2, 37)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [85, 19, 0]]
** centroid: 6, normalized-entropy: 0.6859315226878925, [(1, 85), (2, 19)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 87, 1]]
** centroid: 7, normalized-entropy: 0.08970338978685011, [(2, 87), (3, 1)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2061228748771182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2061228748771182, 0.19196753662269467] ***
*** starting iteration: 2; err: [Inf, 0.2061228748771182, 0.19196753662269467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2061228748771182, 0.19196753662269467, 0.18932219582010826] ***
*** starting iteration: 3; err: [Inf, 0.2061228748771182, 0.19196753662269467, 0.18932219582010826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2061228748771182, 0.19196753662269467, 0.18932219582010826, 0.18883253812700554] ***
*** finished computation of 7 references, err: [Inf, 0.2061228748771182, 0.19196753662269467, 0.18932219582010826, 0.18883253812700554] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [82, 23, 0]]
** centroid: 1, normalized-entropy: 0.7584246665423688, [(1, 82), (2, 23)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 73, 27]]
** centroid: 2, normalized-entropy: 0.8414646362081756, [(2, 73), (3, 27)]
*** center 3: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [28, 89, 0]]
** centroid: 6, normalized-entropy: 0.7939013591250944, [(1, 28), (2, 89)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [58, 48, 0]]
** centroid: 7, normalized-entropy: 0.9935704757706079, [(1, 58), (2, 48)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 15)
[0.9439829050607494, 0.9309938681196167, 0.9169918421415427, 0.9139858421295548, 0.9069938201674729, 0.89400478322634, 0.8890387393381406, 0.8830147512782243, 0.8820227413041785, 0.8819747891604179, 0.8800057542572514, 0.8579987172801543, 0.8549927172681664, 0.8509737282192372, 0.8099986213758669]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9439829050607494
finished with 16
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.31569888741134555] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31569888741134555, 0.3054494085573443] ***
*** starting iteration: 2; err: [Inf, 0.31569888741134555, 0.3054494085573443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31569888741134555, 0.3054494085573443, 0.30282694660127163] ***
*** starting iteration: 3; err: [Inf, 0.31569888741134555, 0.3054494085573443, 0.30282694660127163] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31569888741134555, 0.3054494085573443, 0.30282694660127163, 0.30127069281341434] ***
*** finished computation of 3 references, err: [Inf, 0.31569888741134555, 0.3054494085573443, 0.30282694660127163, 0.30127069281341434] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [129, 75, 0]]
** centroid: 1, normalized-entropy: 0.9488482942421287, [(1, 129), (2, 75)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [75, 157, 23]]
** centroid: 2, normalized-entropy: 0.7969541974997929, [(1, 75), (2, 157), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [207, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.43340470579995966] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43340470579995966, 0.3391830010487624] ***
*** starting iteration: 2; err: [Inf, 0.43340470579995966, 0.3391830010487624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43340470579995966, 0.3391830010487624, 0.337356507760016] ***
*** starting iteration: 3; err: [Inf, 0.43340470579995966, 0.3391830010487624, 0.337356507760016] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43340470579995966, 0.3391830010487624, 0.337356507760016, 0.33661101997454373] ***
*** finished computation of 3 references, err: [Inf, 0.43340470579995966, 0.3391830010487624, 0.337356507760016, 0.33661101997454373] ***
*** center 1: selecting labels [1] (freq >= 2) [from [189, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [86, 142, 24]]
** centroid: 2, normalized-entropy: 0.8320075187784199, [(1, 86), (2, 142), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [127, 99, 0]]
** centroid: 3, normalized-entropy: 0.9888990482207346, [(1, 127), (2, 99)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36113138796658306] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36113138796658306, 0.30881494826272776] ***
*** starting iteration: 2; err: [Inf, 0.36113138796658306, 0.30881494826272776] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36113138796658306, 0.30881494826272776, 0.2995272848833313] ***
*** starting iteration: 3; err: [Inf, 0.36113138796658306, 0.30881494826272776, 0.2995272848833313] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36113138796658306, 0.30881494826272776, 0.2995272848833313, 0.29845382340009446] ***
*** finished computation of 3 references, err: [Inf, 0.36113138796658306, 0.30881494826272776, 0.2995272848833313, 0.29845382340009446] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [146, 61, 0]]
** centroid: 1, normalized-entropy: 0.874697763355274, [(1, 146), (2, 61)]
*** center 2: selecting labels [1] (freq >= 2) [from [242, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [19, 172, 27]]
** centroid: 3, normalized-entropy: 0.5992503066472225, [(1, 19), (2, 172), (3, 27)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 16)
[0.9439829050607494, 0.9309938681196167, 0.9169918421415427, 0.9139858421295548, 0.9069938201674729, 0.90399681118244, 0.89400478322634, 0.8890387393381406, 0.8830147512782243, 0.8820227413041785, 0.8819747891604179, 0.8800057542572514, 0.8579987172801543, 0.8549927172681664, 0.8509737282192372, 0.8099986213758669]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9439829050607494
finished with 16
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9439829050607494, 0.9309938681196167, 0.9169918421415427, 0.9139858421295548, 0.9069938201674729, 0.90399681118244, 0.89400478322634, 0.8890387393381406, 0.8830147512782243, 0.8820227413041785, 0.8819747891604179, 0.8800057542572514, 0.8579987172801543, 0.8549927172681664, 0.8509737282192372, 0.8099986213758669]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9439829050607494
finished with 18
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.24177794408699213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24177794408699213, 0.1674426800051184] ***
*** finished computation of 7 references, err: [Inf, 0.24177794408699213, 0.1674426800051184] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 67, 23]]
** centroid: 1, normalized-entropy: 0.8199653102187632, [(2, 67), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [73, 45, 0]]
** centroid: 2, normalized-entropy: 0.9589940482340734, [(1, 73), (2, 45)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [120, 7, 0]]
** centroid: 3, normalized-entropy: 0.30775275033574495, [(1, 120), (2, 7)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [77, 2, 0]]
** centroid: 4, normalized-entropy: 0.17033057560105982, [(1, 77), (2, 2)]
*** center 5: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 91, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [52, 20, 0]]
** centroid: 7, normalized-entropy: 0.8524051786494784, [(1, 52), (2, 20)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23092393391637195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23092393391637195, 0.16277515526506295] ***
*** finished computation of 7 references, err: [Inf, 0.23092393391637195, 0.16277515526506295] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [94, 16, 0]]
** centroid: 1, normalized-entropy: 0.5983474220910422, [(1, 94), (2, 16)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 61, 21]]
** centroid: 2, normalized-entropy: 0.8208002549877175, [(2, 61), (3, 21)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 83, 3]]
** centroid: 3, normalized-entropy: 0.21832103023746746, [(2, 83), (3, 3)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [73, 23, 0]]
** centroid: 4, normalized-entropy: 0.7943466904341503, [(1, 73), (2, 23)]
*** center 5: selecting labels [1] (freq >= 2) [from [141, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [68, 11, 0]]
** centroid: 6, normalized-entropy: 0.5822463050121238, [(1, 68), (2, 11)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [26, 47, 0]]
** centroid: 7, normalized-entropy: 0.9394532068181357, [(1, 26), (2, 47)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18585232400085436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18585232400085436, 0.15559792237543407] ***
*** finished computation of 7 references, err: [Inf, 0.18585232400085436, 0.15559792237543407] ***
*** center 1: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [78, 7, 0]]
** centroid: 2, normalized-entropy: 0.4104161417181887, [(1, 78), (2, 7)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [40, 81, 0]]
** centroid: 3, normalized-entropy: 0.9155163444717095, [(1, 40), (2, 81)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [82, 32, 0]]
** centroid: 4, normalized-entropy: 0.8564052389131375, [(1, 82), (2, 32)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [49, 17, 0]]
** centroid: 5, normalized-entropy: 0.8230660790114689, [(1, 49), (2, 17)]
*** center 6: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 96, 27]]
** centroid: 7, normalized-entropy: 0.7592757847892834, [(2, 96), (3, 27)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24956311065949746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24956311065949746, 0.20780952181125217] ***
*** finished computation of 7 references, err: [Inf, 0.24956311065949746, 0.20780952181125217] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [66, 29, 0]]
** centroid: 1, normalized-entropy: 0.8876297058429742, [(1, 66), (2, 29)]
*** center 2: selecting labels [2] (freq >= 2) [from [1, 79, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 57, 4]]
** centroid: 3, normalized-entropy: 0.34918437350730797, [(2, 57), (3, 4)]
*** center 4: selecting labels [1] (freq >= 2) [from [144, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [137, 6, 0]]
** centroid: 5, normalized-entropy: 0.2511988167090251, [(1, 137), (2, 6)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [63, 40, 0]]
** centroid: 6, normalized-entropy: 0.9637261681930318, [(1, 63), (2, 40)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 21, 19]]
** centroid: 7, normalized-entropy: 0.99819587904281, [(2, 21), (3, 19)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24494771595284723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24494771595284723, 0.1996627694115914] ***
*** finished computation of 7 references, err: [Inf, 0.24494771595284723, 0.1996627694115914] ***
*** center 1: selecting labels [1] (freq >= 2) [from [58, 1, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [101, 34, 0]]
** centroid: 3, normalized-entropy: 0.8142000684549584, [(1, 101), (2, 34)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [57, 31, 0]]
** centroid: 4, normalized-entropy: 0.9360814319397586, [(1, 57), (2, 31)]
*** center 5: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 72, 24]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 72), (3, 24)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [23, 103, 0]]
** centroid: 7, normalized-entropy: 0.68560151644291, [(1, 23), (2, 103)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2562331491095158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2562331491095158, 0.19779984766095207] ***
*** finished computation of 7 references, err: [Inf, 0.2562331491095158, 0.19779984766095207] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [127, 15, 0]]
** centroid: 1, normalized-entropy: 0.4866040620807888, [(1, 127), (2, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [113, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [29, 33, 0]]
** centroid: 4, normalized-entropy: 0.9969954265557693, [(1, 29), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [70, 28, 0]]
** centroid: 5, normalized-entropy: 0.8631205685666311, [(1, 70), (2, 28)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 56, 27]]
** centroid: 6, normalized-entropy: 0.9100534290139191, [(2, 56), (3, 27)]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 101, 0]]
finished with 9 centroids; started with 7
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.24022415810264647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24022415810264647, 0.17276795887108892] ***
*** starting iteration: 2; err: [Inf, 0.24022415810264647, 0.17276795887108892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24022415810264647, 0.17276795887108892, 0.15687061676569283] ***
*** starting iteration: 3; err: [Inf, 0.24022415810264647, 0.17276795887108892, 0.15687061676569283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24022415810264647, 0.17276795887108892, 0.15687061676569283, 0.15214880146388896] ***
*** starting iteration: 4; err: [Inf, 0.24022415810264647, 0.17276795887108892, 0.15687061676569283, 0.15214880146388896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24022415810264647, 0.17276795887108892, 0.15687061676569283, 0.15214880146388896, 0.15046427772939205] ***
*** starting iteration: 5; err: [Inf, 0.24022415810264647, 0.17276795887108892, 0.15687061676569283, 0.15214880146388896, 0.15046427772939205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24022415810264647, 0.17276795887108892, 0.15687061676569283, 0.15214880146388896, 0.15046427772939205, 0.1495418229661882] ***
*** finished computation of 7 references, err: [Inf, 0.24022415810264647, 0.17276795887108892, 0.15687061676569283, 0.15214880146388896, 0.15046427772939205, 0.1495418229661882] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [181, 3, 0]]
** centroid: 1, normalized-entropy: 0.12015438505579754, [(1, 181), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 92, 37]]
** centroid: 2, normalized-entropy: 0.8645801663882439, [(2, 92), (3, 37)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [2, 120, 0]]
** centroid: 3, normalized-entropy: 0.12068101401352371, [(1, 2), (2, 120)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [43, 112, 0]]
** centroid: 4, normalized-entropy: 0.8519106264184835, [(1, 43), (2, 112)]
*** center 5: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [88, 26, 0]]
** centroid: 6, normalized-entropy: 0.7746319868686841, [(1, 88), (2, 26)]
*** center 7: selecting labels [1] (freq >= 1) [from [187, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24947861038846894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24947861038846894, 0.1667636993676424] ***
*** starting iteration: 2; err: [Inf, 0.24947861038846894, 0.1667636993676424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24947861038846894, 0.1667636993676424, 0.15783772847056388] ***
*** starting iteration: 3; err: [Inf, 0.24947861038846894, 0.1667636993676424, 0.15783772847056388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24947861038846894, 0.1667636993676424, 0.15783772847056388, 0.15423815137520433] ***
*** starting iteration: 4; err: [Inf, 0.24947861038846894, 0.1667636993676424, 0.15783772847056388, 0.15423815137520433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24947861038846894, 0.1667636993676424, 0.15783772847056388, 0.15423815137520433, 0.15303766993386672] ***
*** starting iteration: 5; err: [Inf, 0.24947861038846894, 0.1667636993676424, 0.15783772847056388, 0.15423815137520433, 0.15303766993386672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24947861038846894, 0.1667636993676424, 0.15783772847056388, 0.15423815137520433, 0.15303766993386672, 0.1515959761403501] ***
*** starting iteration: 6; err: [Inf, 0.24947861038846894, 0.1667636993676424, 0.15783772847056388, 0.15423815137520433, 0.15303766993386672, 0.1515959761403501] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24947861038846894, 0.1667636993676424, 0.15783772847056388, 0.15423815137520433, 0.15303766993386672, 0.1515959761403501, 0.15069242828898133] ***
*** finished computation of 7 references, err: [Inf, 0.24947861038846894, 0.1667636993676424, 0.15783772847056388, 0.15423815137520433, 0.15303766993386672, 0.1515959761403501, 0.15069242828898133] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 13]]
** centroid: 1, normalized-entropy: 0.8672816222000259, [(2, 32), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [22, 39, 0]]
** centroid: 3, normalized-entropy: 0.9432261548473416, [(1, 22), (2, 39)]
*** center 4: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [26, 59, 0]]
** centroid: 5, normalized-entropy: 0.8883630233845602, [(1, 26), (2, 59)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 48, 2]]
** centroid: 6, normalized-entropy: 0.24229218908241482, [(2, 48), (3, 2)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [81, 8, 0]]
** centroid: 7, normalized-entropy: 0.43609466429612137, [(1, 81), (2, 8)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1984410987291485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1984410987291485, 0.16150164513103665] ***
*** starting iteration: 2; err: [Inf, 0.1984410987291485, 0.16150164513103665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1984410987291485, 0.16150164513103665, 0.1577244253437966] ***
*** starting iteration: 3; err: [Inf, 0.1984410987291485, 0.16150164513103665, 0.1577244253437966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1984410987291485, 0.16150164513103665, 0.1577244253437966, 0.15602376936376094] ***
*** starting iteration: 4; err: [Inf, 0.1984410987291485, 0.16150164513103665, 0.1577244253437966, 0.15602376936376094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1984410987291485, 0.16150164513103665, 0.1577244253437966, 0.15602376936376094, 0.1547470606546849] ***
*** starting iteration: 5; err: [Inf, 0.1984410987291485, 0.16150164513103665, 0.1577244253437966, 0.15602376936376094, 0.1547470606546849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1984410987291485, 0.16150164513103665, 0.1577244253437966, 0.15602376936376094, 0.1547470606546849, 0.153557139698416] ***
*** starting iteration: 6; err: [Inf, 0.1984410987291485, 0.16150164513103665, 0.1577244253437966, 0.15602376936376094, 0.1547470606546849, 0.153557139698416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1984410987291485, 0.16150164513103665, 0.1577244253437966, 0.15602376936376094, 0.1547470606546849, 0.153557139698416, 0.15264152264967562] ***
*** finished computation of 7 references, err: [Inf, 0.1984410987291485, 0.16150164513103665, 0.1577244253437966, 0.15602376936376094, 0.1547470606546849, 0.153557139698416, 0.15264152264967562] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [71, 4, 0]]
** centroid: 1, normalized-entropy: 0.3003914173647818, [(1, 71), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 19, 0]]
** centroid: 2, normalized-entropy: 0.849054424254048, [(1, 50), (2, 19)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 49, 22]]
** centroid: 3, normalized-entropy: 0.893010810044601, [(2, 49), (3, 22)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 50, 1]]
** centroid: 4, normalized-entropy: 0.13923299905509884, [(2, 50), (3, 1)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 24, 0]]
** centroid: 5, normalized-entropy: 0.9747785474909672, [(1, 35), (2, 24)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [53, 19, 0]]
** centroid: 6, normalized-entropy: 0.8325582396745668, [(1, 53), (2, 19)]
*** center 7: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20722279185056686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20722279185056686, 0.16555170513968914] ***
*** starting iteration: 2; err: [Inf, 0.20722279185056686, 0.16555170513968914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20722279185056686, 0.16555170513968914, 0.1537820705953636] ***
*** starting iteration: 3; err: [Inf, 0.20722279185056686, 0.16555170513968914, 0.1537820705953636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20722279185056686, 0.16555170513968914, 0.1537820705953636, 0.14852263098396362] ***
*** starting iteration: 4; err: [Inf, 0.20722279185056686, 0.16555170513968914, 0.1537820705953636, 0.14852263098396362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20722279185056686, 0.16555170513968914, 0.1537820705953636, 0.14852263098396362, 0.14628222296759485] ***
*** starting iteration: 5; err: [Inf, 0.20722279185056686, 0.16555170513968914, 0.1537820705953636, 0.14852263098396362, 0.14628222296759485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20722279185056686, 0.16555170513968914, 0.1537820705953636, 0.14852263098396362, 0.14628222296759485, 0.14497928833868354] ***
*** starting iteration: 6; err: [Inf, 0.20722279185056686, 0.16555170513968914, 0.1537820705953636, 0.14852263098396362, 0.14628222296759485, 0.14497928833868354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20722279185056686, 0.16555170513968914, 0.1537820705953636, 0.14852263098396362, 0.14628222296759485, 0.14497928833868354, 0.1440715513145551] ***
*** finished computation of 7 references, err: [Inf, 0.20722279185056686, 0.16555170513968914, 0.1537820705953636, 0.14852263098396362, 0.14628222296759485, 0.14497928833868354, 0.1440715513145551] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [20, 55, 0]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(1, 20), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [83, 11, 0]]
** centroid: 2, normalized-entropy: 0.5207375686265202, [(1, 83), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 38, 17]]
** centroid: 3, normalized-entropy: 0.8921212805771683, [(2, 38), (3, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [52, 17, 0]]
** centroid: 4, normalized-entropy: 0.8054848387405957, [(1, 52), (2, 17)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 58, 5]]
** centroid: 5, normalized-entropy: 0.39993804743902767, [(2, 58), (3, 5)]
*** center 6: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.179515524180606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.179515524180606, 0.1525440705101937] ***
*** starting iteration: 2; err: [Inf, 0.179515524180606, 0.1525440705101937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.179515524180606, 0.1525440705101937, 0.1504311525542289] ***
*** starting iteration: 3; err: [Inf, 0.179515524180606, 0.1525440705101937, 0.1504311525542289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.179515524180606, 0.1525440705101937, 0.1504311525542289, 0.1491734132161364] ***
*** starting iteration: 4; err: [Inf, 0.179515524180606, 0.1525440705101937, 0.1504311525542289, 0.1491734132161364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.179515524180606, 0.1525440705101937, 0.1504311525542289, 0.1491734132161364, 0.1487148027662188] ***
*** finished computation of 7 references, err: [Inf, 0.179515524180606, 0.1525440705101937, 0.1504311525542289, 0.1491734132161364, 0.1487148027662188] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [25, 63, 0]]
** centroid: 1, normalized-entropy: 0.8609652558547648, [(1, 25), (2, 63)]
*** center 2: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [70, 39, 0]]
** centroid: 3, normalized-entropy: 0.9408403089808224, [(1, 70), (2, 39)]
*** center 4: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 68, 17]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 68), (3, 17)]
*** center 6: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [36, 12, 0]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(1, 36), (2, 12)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1811285128518939] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1811285128518939, 0.15276705589331688] ***
*** starting iteration: 2; err: [Inf, 0.1811285128518939, 0.15276705589331688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1811285128518939, 0.15276705589331688, 0.15087458121217787] ***
*** starting iteration: 3; err: [Inf, 0.1811285128518939, 0.15276705589331688, 0.15087458121217787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1811285128518939, 0.15276705589331688, 0.15087458121217787, 0.1504501610249281] ***
*** finished computation of 7 references, err: [Inf, 0.1811285128518939, 0.15276705589331688, 0.15087458121217787, 0.1504501610249281] ***
*** center 1: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [62, 6, 0]]
** centroid: 2, normalized-entropy: 0.43055186701043935, [(1, 62), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [13, 63, 0]]
** centroid: 3, normalized-entropy: 0.6601070987550468, [(1, 13), (2, 63)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [78, 6, 0]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(1, 78), (2, 6)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 63, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [77, 2, 0]]
** centroid: 6, normalized-entropy: 0.17033057560105982, [(1, 77), (2, 2)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 30, 18]]
** centroid: 7, normalized-entropy: 0.954434002924965, [(2, 30), (3, 18)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19272510191053152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19272510191053152, 0.1696240811292082] ***
*** starting iteration: 2; err: [Inf, 0.19272510191053152, 0.1696240811292082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19272510191053152, 0.1696240811292082, 0.15615885517373682] ***
*** starting iteration: 3; err: [Inf, 0.19272510191053152, 0.1696240811292082, 0.15615885517373682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19272510191053152, 0.1696240811292082, 0.15615885517373682, 0.14995867837499827] ***
*** starting iteration: 4; err: [Inf, 0.19272510191053152, 0.1696240811292082, 0.15615885517373682, 0.14995867837499827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19272510191053152, 0.1696240811292082, 0.15615885517373682, 0.14995867837499827, 0.1468791191718774] ***
*** starting iteration: 5; err: [Inf, 0.19272510191053152, 0.1696240811292082, 0.15615885517373682, 0.14995867837499827, 0.1468791191718774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19272510191053152, 0.1696240811292082, 0.15615885517373682, 0.14995867837499827, 0.1468791191718774, 0.14624082147120498] ***
*** finished computation of 7 references, err: [Inf, 0.19272510191053152, 0.1696240811292082, 0.15615885517373682, 0.14995867837499827, 0.1468791191718774, 0.14624082147120498] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [75, 7, 0]]
** centroid: 1, normalized-entropy: 0.42080948947668984, [(1, 75), (2, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [46, 39, 0]]
** centroid: 4, normalized-entropy: 0.9951022712641691, [(1, 46), (2, 39)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 42, 14]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 42), (3, 14)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 58, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [36, 41, 0]]
** centroid: 7, normalized-entropy: 0.9969562518473082, [(1, 36), (2, 41)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2317666440103203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2317666440103203, 0.16742364360019565] ***
*** starting iteration: 2; err: [Inf, 0.2317666440103203, 0.16742364360019565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2317666440103203, 0.16742364360019565, 0.15396905445121228] ***
*** starting iteration: 3; err: [Inf, 0.2317666440103203, 0.16742364360019565, 0.15396905445121228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2317666440103203, 0.16742364360019565, 0.15396905445121228, 0.15005299666663632] ***
*** starting iteration: 4; err: [Inf, 0.2317666440103203, 0.16742364360019565, 0.15396905445121228, 0.15005299666663632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2317666440103203, 0.16742364360019565, 0.15396905445121228, 0.15005299666663632, 0.14892035597749054] ***
*** starting iteration: 5; err: [Inf, 0.2317666440103203, 0.16742364360019565, 0.15396905445121228, 0.15005299666663632, 0.14892035597749054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2317666440103203, 0.16742364360019565, 0.15396905445121228, 0.15005299666663632, 0.14892035597749054, 0.14836049373820423] ***
*** finished computation of 7 references, err: [Inf, 0.2317666440103203, 0.16742364360019565, 0.15396905445121228, 0.15005299666663632, 0.14892035597749054, 0.14836049373820423] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [21, 42, 0]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(1, 21), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [53, 22, 0]]
** centroid: 2, normalized-entropy: 0.8729882944709463, [(1, 53), (2, 22)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 46, 18]]
** centroid: 3, normalized-entropy: 0.8571484374283717, [(2, 46), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [87, 4, 0]]
** centroid: 4, normalized-entropy: 0.26014536394771426, [(1, 87), (2, 4)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 64, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20317733808234334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20317733808234334, 0.15765554956858976] ***
*** starting iteration: 2; err: [Inf, 0.20317733808234334, 0.15765554956858976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20317733808234334, 0.15765554956858976, 0.15049966822378338] ***
*** starting iteration: 3; err: [Inf, 0.20317733808234334, 0.15765554956858976, 0.15049966822378338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20317733808234334, 0.15765554956858976, 0.15049966822378338, 0.14830051085352897] ***
*** starting iteration: 4; err: [Inf, 0.20317733808234334, 0.15765554956858976, 0.15049966822378338, 0.14830051085352897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20317733808234334, 0.15765554956858976, 0.15049966822378338, 0.14830051085352897, 0.1469491743268445] ***
*** starting iteration: 5; err: [Inf, 0.20317733808234334, 0.15765554956858976, 0.15049966822378338, 0.14830051085352897, 0.1469491743268445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20317733808234334, 0.15765554956858976, 0.15049966822378338, 0.14830051085352897, 0.1469491743268445, 0.14618055037222802] ***
*** finished computation of 7 references, err: [Inf, 0.20317733808234334, 0.15765554956858976, 0.15049966822378338, 0.14830051085352897, 0.1469491743268445, 0.14618055037222802] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [3, 66, 0]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(1, 3), (2, 66)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [74, 3, 0]]
** centroid: 2, normalized-entropy: 0.23750814382859295, [(1, 74), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 50, 22]]
** centroid: 4, normalized-entropy: 0.887976319515135, [(2, 50), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [65, 26, 0]]
** centroid: 5, normalized-entropy: 0.8631205685666311, [(1, 65), (2, 26)]
*** center 6: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [21, 44, 0]]
** centroid: 7, normalized-entropy: 0.9076961653608385, [(1, 21), (2, 44)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21156523671746255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21156523671746255, 0.16806846082070842] ***
*** starting iteration: 2; err: [Inf, 0.21156523671746255, 0.16806846082070842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21156523671746255, 0.16806846082070842, 0.15252473687566817] ***
*** starting iteration: 3; err: [Inf, 0.21156523671746255, 0.16806846082070842, 0.15252473687566817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21156523671746255, 0.16806846082070842, 0.15252473687566817, 0.15075537253171206] ***
*** starting iteration: 4; err: [Inf, 0.21156523671746255, 0.16806846082070842, 0.15252473687566817, 0.15075537253171206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21156523671746255, 0.16806846082070842, 0.15252473687566817, 0.15075537253171206, 0.1502705606315285] ***
*** finished computation of 7 references, err: [Inf, 0.21156523671746255, 0.16806846082070842, 0.15252473687566817, 0.15075537253171206, 0.1502705606315285] ***
*** center 1: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 47, 17]]
** centroid: 2, normalized-entropy: 0.8351164948421137, [(2, 47), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [29, 48, 0]]
** centroid: 3, normalized-entropy: 0.9556222693531471, [(1, 29), (2, 48)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [31, 24, 0]]
** centroid: 4, normalized-entropy: 0.9882836109919163, [(1, 31), (2, 24)]
*** center 5: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [7, 63, 0]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(1, 7), (2, 63)]
*** center 7: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24167058936599642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24167058936599642, 0.1669445582088083] ***
*** starting iteration: 2; err: [Inf, 0.24167058936599642, 0.1669445582088083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24167058936599642, 0.1669445582088083, 0.16064957235008478] ***
*** starting iteration: 3; err: [Inf, 0.24167058936599642, 0.1669445582088083, 0.16064957235008478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24167058936599642, 0.1669445582088083, 0.16064957235008478, 0.1577509527541697] ***
*** starting iteration: 4; err: [Inf, 0.24167058936599642, 0.1669445582088083, 0.16064957235008478, 0.1577509527541697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24167058936599642, 0.1669445582088083, 0.16064957235008478, 0.1577509527541697, 0.154061116958037] ***
*** starting iteration: 5; err: [Inf, 0.24167058936599642, 0.1669445582088083, 0.16064957235008478, 0.1577509527541697, 0.154061116958037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24167058936599642, 0.1669445582088083, 0.16064957235008478, 0.1577509527541697, 0.154061116958037, 0.15022157707996667] ***
*** starting iteration: 6; err: [Inf, 0.24167058936599642, 0.1669445582088083, 0.16064957235008478, 0.1577509527541697, 0.154061116958037, 0.15022157707996667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24167058936599642, 0.1669445582088083, 0.16064957235008478, 0.1577509527541697, 0.154061116958037, 0.15022157707996667, 0.14690847827866674] ***
*** starting iteration: 7; err: [Inf, 0.24167058936599642, 0.1669445582088083, 0.16064957235008478, 0.1577509527541697, 0.154061116958037, 0.15022157707996667, 0.14690847827866674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24167058936599642, 0.1669445582088083, 0.16064957235008478, 0.1577509527541697, 0.154061116958037, 0.15022157707996667, 0.14690847827866674, 0.14542987520061434] ***
*** starting iteration: 8; err: [Inf, 0.24167058936599642, 0.1669445582088083, 0.16064957235008478, 0.1577509527541697, 0.154061116958037, 0.15022157707996667, 0.14690847827866674, 0.14542987520061434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24167058936599642, 0.1669445582088083, 0.16064957235008478, 0.1577509527541697, 0.154061116958037, 0.15022157707996667, 0.14690847827866674, 0.14542987520061434, 0.1448328548911959] ***
*** finished computation of 7 references, err: [Inf, 0.24167058936599642, 0.1669445582088083, 0.16064957235008478, 0.1577509527541697, 0.154061116958037, 0.15022157707996667, 0.14690847827866674, 0.14542987520061434, 0.1448328548911959] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 52, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [68, 6, 0]]
** centroid: 2, normalized-entropy: 0.40597703847557104, [(1, 68), (2, 6)]
*** center 3: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [1, 65, 0]]
** centroid: 4, normalized-entropy: 0.11327430349709665, [(1, 1), (2, 65)]
*** center 5: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [54, 27, 0]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(1, 54), (2, 27)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 33, 17]]
** centroid: 7, normalized-entropy: 0.9248187049730301, [(2, 33), (3, 17)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3070181461684406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3070181461684406, 0.17022259096149356] ***
*** starting iteration: 2; err: [Inf, 0.3070181461684406, 0.17022259096149356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3070181461684406, 0.17022259096149356, 0.1581925195455551] ***
*** starting iteration: 3; err: [Inf, 0.3070181461684406, 0.17022259096149356, 0.1581925195455551] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3070181461684406, 0.17022259096149356, 0.1581925195455551, 0.15669674061005934] ***
*** starting iteration: 4; err: [Inf, 0.3070181461684406, 0.17022259096149356, 0.1581925195455551, 0.15669674061005934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3070181461684406, 0.17022259096149356, 0.1581925195455551, 0.15669674061005934, 0.1561033125477843] ***
*** finished computation of 7 references, err: [Inf, 0.3070181461684406, 0.17022259096149356, 0.1581925195455551, 0.15669674061005934, 0.1561033125477843] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [28, 11, 0]]
** centroid: 1, normalized-entropy: 0.8582307926411409, [(1, 28), (2, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [95, 38, 0]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(1, 95), (2, 38)]
*** center 4: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 61, 19]]
** centroid: 5, normalized-entropy: 0.79085809055281, [(2, 61), (3, 19)]
*** center 6: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [10, 53, 0]]
** centroid: 7, normalized-entropy: 0.6312630180916119, [(1, 10), (2, 53)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2071190495043993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071190495043993, 0.1722902065515518] ***
*** starting iteration: 2; err: [Inf, 0.2071190495043993, 0.1722902065515518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071190495043993, 0.1722902065515518, 0.16354151142947376] ***
*** starting iteration: 3; err: [Inf, 0.2071190495043993, 0.1722902065515518, 0.16354151142947376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071190495043993, 0.1722902065515518, 0.16354151142947376, 0.15709002705849706] ***
*** starting iteration: 4; err: [Inf, 0.2071190495043993, 0.1722902065515518, 0.16354151142947376, 0.15709002705849706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071190495043993, 0.1722902065515518, 0.16354151142947376, 0.15709002705849706, 0.1538288674186915] ***
*** starting iteration: 5; err: [Inf, 0.2071190495043993, 0.1722902065515518, 0.16354151142947376, 0.15709002705849706, 0.1538288674186915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071190495043993, 0.1722902065515518, 0.16354151142947376, 0.15709002705849706, 0.1538288674186915, 0.15178007288835943] ***
*** starting iteration: 6; err: [Inf, 0.2071190495043993, 0.1722902065515518, 0.16354151142947376, 0.15709002705849706, 0.1538288674186915, 0.15178007288835943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071190495043993, 0.1722902065515518, 0.16354151142947376, 0.15709002705849706, 0.1538288674186915, 0.15178007288835943, 0.1501094572097063] ***
*** starting iteration: 7; err: [Inf, 0.2071190495043993, 0.1722902065515518, 0.16354151142947376, 0.15709002705849706, 0.1538288674186915, 0.15178007288835943, 0.1501094572097063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071190495043993, 0.1722902065515518, 0.16354151142947376, 0.15709002705849706, 0.1538288674186915, 0.15178007288835943, 0.1501094572097063, 0.14906332551501691] ***
*** starting iteration: 8; err: [Inf, 0.2071190495043993, 0.1722902065515518, 0.16354151142947376, 0.15709002705849706, 0.1538288674186915, 0.15178007288835943, 0.1501094572097063, 0.14906332551501691] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071190495043993, 0.1722902065515518, 0.16354151142947376, 0.15709002705849706, 0.1538288674186915, 0.15178007288835943, 0.1501094572097063, 0.14906332551501691, 0.14833850352093578] ***
*** finished computation of 7 references, err: [Inf, 0.2071190495043993, 0.1722902065515518, 0.16354151142947376, 0.15709002705849706, 0.1538288674186915, 0.15178007288835943, 0.1501094572097063, 0.14906332551501691, 0.14833850352093578] ***
*** center 1: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [35, 42, 0]]
** centroid: 2, normalized-entropy: 0.9940302114769566, [(1, 35), (2, 42)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 54, 17]]
** centroid: 3, normalized-entropy: 0.7941021417852022, [(2, 54), (3, 17)]
*** center 4: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [37, 32, 0]]
** centroid: 5, normalized-entropy: 0.9962088839046743, [(1, 37), (2, 32)]
*** center 6: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 60, 0]]
** centroid: 7, normalized-entropy: 0.2055925081850832, [(1, 2), (2, 60)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1902358520287089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1902358520287089, 0.15653178881993518] ***
*** starting iteration: 2; err: [Inf, 0.1902358520287089, 0.15653178881993518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1902358520287089, 0.15653178881993518, 0.15049977934639902] ***
*** starting iteration: 3; err: [Inf, 0.1902358520287089, 0.15653178881993518, 0.15049977934639902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1902358520287089, 0.15653178881993518, 0.15049977934639902, 0.14925576380454003] ***
*** starting iteration: 4; err: [Inf, 0.1902358520287089, 0.15653178881993518, 0.15049977934639902, 0.14925576380454003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1902358520287089, 0.15653178881993518, 0.15049977934639902, 0.14925576380454003, 0.14884145667776466] ***
*** finished computation of 7 references, err: [Inf, 0.1902358520287089, 0.15653178881993518, 0.15049977934639902, 0.14925576380454003, 0.14884145667776466] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [51, 19, 0]]
** centroid: 1, normalized-entropy: 0.8435070855739035, [(1, 51), (2, 19)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 43, 18]]
** centroid: 2, normalized-entropy: 0.8751957887407251, [(2, 43), (3, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [13, 70, 0]]
** centroid: 4, normalized-entropy: 0.6261776539736496, [(1, 13), (2, 70)]
*** center 5: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [78, 18, 0]]
** centroid: 6, normalized-entropy: 0.6962122601251459, [(1, 78), (2, 18)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 45, 1]]
** centroid: 7, normalized-entropy: 0.1510969705171136, [(2, 45), (3, 1)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.186453666055575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.186453666055575, 0.1563816158156842] ***
*** starting iteration: 2; err: [Inf, 0.186453666055575, 0.1563816158156842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.186453666055575, 0.1563816158156842, 0.15082870003115387] ***
*** starting iteration: 3; err: [Inf, 0.186453666055575, 0.1563816158156842, 0.15082870003115387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.186453666055575, 0.1563816158156842, 0.15082870003115387, 0.14928107338864358] ***
*** starting iteration: 4; err: [Inf, 0.186453666055575, 0.1563816158156842, 0.15082870003115387, 0.14928107338864358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.186453666055575, 0.1563816158156842, 0.15082870003115387, 0.14928107338864358, 0.14829830119013787] ***
*** finished computation of 7 references, err: [Inf, 0.186453666055575, 0.1563816158156842, 0.15082870003115387, 0.14928107338864358, 0.14829830119013787] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [60, 30, 0]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(1, 60), (2, 30)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [51, 24, 0]]
** centroid: 2, normalized-entropy: 0.9043814577244941, [(1, 51), (2, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [6, 50, 0]]
** centroid: 5, normalized-entropy: 0.4912373418243334, [(1, 6), (2, 50)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 67, 19]]
** centroid: 6, normalized-entropy: 0.7618624463753669, [(2, 67), (3, 19)]
*** center 7: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18822754050651566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18822754050651566, 0.16983306861296296] ***
*** starting iteration: 2; err: [Inf, 0.18822754050651566, 0.16983306861296296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18822754050651566, 0.16983306861296296, 0.1619704330312088] ***
*** starting iteration: 3; err: [Inf, 0.18822754050651566, 0.16983306861296296, 0.1619704330312088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18822754050651566, 0.16983306861296296, 0.1619704330312088, 0.1567971667344682] ***
*** starting iteration: 4; err: [Inf, 0.18822754050651566, 0.16983306861296296, 0.1619704330312088, 0.1567971667344682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18822754050651566, 0.16983306861296296, 0.1619704330312088, 0.1567971667344682, 0.15353092688834294] ***
*** starting iteration: 5; err: [Inf, 0.18822754050651566, 0.16983306861296296, 0.1619704330312088, 0.1567971667344682, 0.15353092688834294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18822754050651566, 0.16983306861296296, 0.1619704330312088, 0.1567971667344682, 0.15353092688834294, 0.15226269851624966] ***
*** starting iteration: 6; err: [Inf, 0.18822754050651566, 0.16983306861296296, 0.1619704330312088, 0.1567971667344682, 0.15353092688834294, 0.15226269851624966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18822754050651566, 0.16983306861296296, 0.1619704330312088, 0.1567971667344682, 0.15353092688834294, 0.15226269851624966, 0.1511755359005183] ***
*** starting iteration: 7; err: [Inf, 0.18822754050651566, 0.16983306861296296, 0.1619704330312088, 0.1567971667344682, 0.15353092688834294, 0.15226269851624966, 0.1511755359005183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18822754050651566, 0.16983306861296296, 0.1619704330312088, 0.1567971667344682, 0.15353092688834294, 0.15226269851624966, 0.1511755359005183, 0.15041369404131547] ***
*** finished computation of 7 references, err: [Inf, 0.18822754050651566, 0.16983306861296296, 0.1619704330312088, 0.1567971667344682, 0.15353092688834294, 0.15226269851624966, 0.1511755359005183, 0.15041369404131547] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [74, 5, 0]]
** centroid: 1, normalized-entropy: 0.340373285759646, [(1, 74), (2, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [8, 59, 0]]
** centroid: 4, normalized-entropy: 0.52764232609436, [(1, 8), (2, 59)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 51, 19]]
** centroid: 5, normalized-entropy: 0.8435070855739035, [(2, 51), (3, 19)]
*** center 6: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [25, 59, 0]]
** centroid: 7, normalized-entropy: 0.8783609387702275, [(1, 25), (2, 59)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2936095110680908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2936095110680908, 0.17866034900955857] ***
*** starting iteration: 2; err: [Inf, 0.2936095110680908, 0.17866034900955857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2936095110680908, 0.17866034900955857, 0.16400220939144491] ***
*** starting iteration: 3; err: [Inf, 0.2936095110680908, 0.17866034900955857, 0.16400220939144491] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2936095110680908, 0.17866034900955857, 0.16400220939144491, 0.15936561876162886] ***
*** starting iteration: 4; err: [Inf, 0.2936095110680908, 0.17866034900955857, 0.16400220939144491, 0.15936561876162886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2936095110680908, 0.17866034900955857, 0.16400220939144491, 0.15936561876162886, 0.15778637833334505] ***
*** starting iteration: 5; err: [Inf, 0.2936095110680908, 0.17866034900955857, 0.16400220939144491, 0.15936561876162886, 0.15778637833334505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2936095110680908, 0.17866034900955857, 0.16400220939144491, 0.15936561876162886, 0.15778637833334505, 0.15696642623096704] ***
*** finished computation of 7 references, err: [Inf, 0.2936095110680908, 0.17866034900955857, 0.16400220939144491, 0.15936561876162886, 0.15778637833334505, 0.15696642623096704] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [61, 1, 0]]
** centroid: 1, normalized-entropy: 0.11911602665564841, [(1, 61), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 104, 15]]
** centroid: 2, normalized-entropy: 0.5465060858222177, [(2, 104), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [49, 11, 0]]
** centroid: 3, normalized-entropy: 0.6873150928309273, [(1, 49), (2, 11)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [47, 42, 0]]
** centroid: 4, normalized-entropy: 0.9977221075331744, [(1, 47), (2, 42)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [59, 20, 0]]
** centroid: 5, normalized-entropy: 0.8162554088088008, [(1, 59), (2, 20)]
*** center 6: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.212620621310547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.212620621310547, 0.1552902991194278] ***
*** starting iteration: 2; err: [Inf, 0.212620621310547, 0.1552902991194278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.212620621310547, 0.1552902991194278, 0.1531426980700344] ***
*** starting iteration: 3; err: [Inf, 0.212620621310547, 0.1552902991194278, 0.1531426980700344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.212620621310547, 0.1552902991194278, 0.1531426980700344, 0.15261253540590405] ***
*** finished computation of 7 references, err: [Inf, 0.212620621310547, 0.1552902991194278, 0.1531426980700344, 0.15261253540590405] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [60, 19, 0]]
** centroid: 1, normalized-entropy: 0.7958812735955936, [(1, 60), (2, 19)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 60, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 53, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [69, 22, 0]]
** centroid: 5, normalized-entropy: 0.7979519684655734, [(1, 69), (2, 22)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 20, 14]]
** centroid: 6, normalized-entropy: 0.9774178175281716, [(2, 20), (3, 14)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [78, 3, 0]]
** centroid: 7, normalized-entropy: 0.22853814395352806, [(1, 78), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2984055025614798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2984055025614798, 0.18737558491528034] ***
*** starting iteration: 2; err: [Inf, 0.2984055025614798, 0.18737558491528034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2984055025614798, 0.18737558491528034, 0.1662452357970178] ***
*** starting iteration: 3; err: [Inf, 0.2984055025614798, 0.18737558491528034, 0.1662452357970178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2984055025614798, 0.18737558491528034, 0.1662452357970178, 0.15417455674149097] ***
*** starting iteration: 4; err: [Inf, 0.2984055025614798, 0.18737558491528034, 0.1662452357970178, 0.15417455674149097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2984055025614798, 0.18737558491528034, 0.1662452357970178, 0.15417455674149097, 0.1500014333873987] ***
*** starting iteration: 5; err: [Inf, 0.2984055025614798, 0.18737558491528034, 0.1662452357970178, 0.15417455674149097, 0.1500014333873987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2984055025614798, 0.18737558491528034, 0.1662452357970178, 0.15417455674149097, 0.1500014333873987, 0.1480762296859175] ***
*** starting iteration: 6; err: [Inf, 0.2984055025614798, 0.18737558491528034, 0.1662452357970178, 0.15417455674149097, 0.1500014333873987, 0.1480762296859175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2984055025614798, 0.18737558491528034, 0.1662452357970178, 0.15417455674149097, 0.1500014333873987, 0.1480762296859175, 0.14688015902228654] ***
*** starting iteration: 7; err: [Inf, 0.2984055025614798, 0.18737558491528034, 0.1662452357970178, 0.15417455674149097, 0.1500014333873987, 0.1480762296859175, 0.14688015902228654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2984055025614798, 0.18737558491528034, 0.1662452357970178, 0.15417455674149097, 0.1500014333873987, 0.1480762296859175, 0.14688015902228654, 0.1463045188393444] ***
*** finished computation of 7 references, err: [Inf, 0.2984055025614798, 0.18737558491528034, 0.1662452357970178, 0.15417455674149097, 0.1500014333873987, 0.1480762296859175, 0.14688015902228654, 0.1463045188393444] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [72, 22, 0]]
** centroid: 1, normalized-entropy: 0.7849920887641585, [(1, 72), (2, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [25, 44, 0]]
** centroid: 3, normalized-entropy: 0.9445911819316588, [(1, 25), (2, 44)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 67, 21]]
** centroid: 4, normalized-entropy: 0.7927652363756529, [(2, 67), (3, 21)]
*** center 5: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [35, 34, 0]]
** centroid: 7, normalized-entropy: 0.9998484829291058, [(1, 35), (2, 34)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2338068528473377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2338068528473377, 0.18325439110770822] ***
*** starting iteration: 2; err: [Inf, 0.2338068528473377, 0.18325439110770822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2338068528473377, 0.18325439110770822, 0.16560122037865221] ***
*** starting iteration: 3; err: [Inf, 0.2338068528473377, 0.18325439110770822, 0.16560122037865221] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2338068528473377, 0.18325439110770822, 0.16560122037865221, 0.1558551873713732] ***
*** starting iteration: 4; err: [Inf, 0.2338068528473377, 0.18325439110770822, 0.16560122037865221, 0.1558551873713732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2338068528473377, 0.18325439110770822, 0.16560122037865221, 0.1558551873713732, 0.14924061888549478] ***
*** starting iteration: 5; err: [Inf, 0.2338068528473377, 0.18325439110770822, 0.16560122037865221, 0.1558551873713732, 0.14924061888549478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2338068528473377, 0.18325439110770822, 0.16560122037865221, 0.1558551873713732, 0.14924061888549478, 0.14736015365086497] ***
*** starting iteration: 6; err: [Inf, 0.2338068528473377, 0.18325439110770822, 0.16560122037865221, 0.1558551873713732, 0.14924061888549478, 0.14736015365086497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2338068528473377, 0.18325439110770822, 0.16560122037865221, 0.1558551873713732, 0.14924061888549478, 0.14736015365086497, 0.14693212784640491] ***
*** finished computation of 7 references, err: [Inf, 0.2338068528473377, 0.18325439110770822, 0.16560122037865221, 0.1558551873713732, 0.14924061888549478, 0.14736015365086497, 0.14693212784640491] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 46, 17]]
** centroid: 1, normalized-entropy: 0.8412367762002599, [(2, 46), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 45, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 7, 0]]
** centroid: 4, normalized-entropy: 0.4830306801456181, [(1, 60), (2, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [68, 31, 0]]
** centroid: 6, normalized-entropy: 0.8967550157663144, [(1, 68), (2, 31)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [22, 62, 0]]
** centroid: 7, normalized-entropy: 0.8296071030882032, [(1, 22), (2, 62)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20732171275652944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20732171275652944, 0.15869553883746265] ***
*** starting iteration: 2; err: [Inf, 0.20732171275652944, 0.15869553883746265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075] ***
*** starting iteration: 3; err: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727] ***
*** starting iteration: 4; err: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727, 0.15368461169768124] ***
*** starting iteration: 5; err: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727, 0.15368461169768124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727, 0.15368461169768124, 0.15248569559119643] ***
*** starting iteration: 6; err: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727, 0.15368461169768124, 0.15248569559119643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727, 0.15368461169768124, 0.15248569559119643, 0.15141398586146534] ***
*** starting iteration: 7; err: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727, 0.15368461169768124, 0.15248569559119643, 0.15141398586146534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727, 0.15368461169768124, 0.15248569559119643, 0.15141398586146534, 0.15035179575509391] ***
*** starting iteration: 8; err: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727, 0.15368461169768124, 0.15248569559119643, 0.15141398586146534, 0.15035179575509391] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727, 0.15368461169768124, 0.15248569559119643, 0.15141398586146534, 0.15035179575509391, 0.14896976026985795] ***
*** starting iteration: 9; err: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727, 0.15368461169768124, 0.15248569559119643, 0.15141398586146534, 0.15035179575509391, 0.14896976026985795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727, 0.15368461169768124, 0.15248569559119643, 0.15141398586146534, 0.15035179575509391, 0.14896976026985795, 0.14713396727805958] ***
*** starting iteration: 10; err: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727, 0.15368461169768124, 0.15248569559119643, 0.15141398586146534, 0.15035179575509391, 0.14896976026985795, 0.14713396727805958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727, 0.15368461169768124, 0.15248569559119643, 0.15141398586146534, 0.15035179575509391, 0.14896976026985795, 0.14713396727805958, 0.14635512727871539] ***
*** finished computation of 7 references, err: [Inf, 0.20732171275652944, 0.15869553883746265, 0.15635290037468075, 0.15506751514598727, 0.15368461169768124, 0.15248569559119643, 0.15141398586146534, 0.15035179575509391, 0.14896976026985795, 0.14713396727805958, 0.14635512727871539] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [39, 24, 0]]
** centroid: 1, normalized-entropy: 0.9587118829771317, [(1, 39), (2, 24)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 61, 1]]
** centroid: 2, normalized-entropy: 0.11911602665564841, [(2, 61), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 48, 16]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 48), (3, 16)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [32, 45, 0]]
** centroid: 4, normalized-entropy: 0.9793399259567798, [(1, 32), (2, 45)]
*** center 5: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [64, 7, 0]]
** centroid: 7, normalized-entropy: 0.4645149440905521, [(1, 64), (2, 7)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1816178528741002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1816178528741002, 0.15488793203793466] ***
*** starting iteration: 2; err: [Inf, 0.1816178528741002, 0.15488793203793466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1816178528741002, 0.15488793203793466, 0.15034186480659992] ***
*** starting iteration: 3; err: [Inf, 0.1816178528741002, 0.15488793203793466, 0.15034186480659992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1816178528741002, 0.15488793203793466, 0.15034186480659992, 0.14861197144945618] ***
*** starting iteration: 4; err: [Inf, 0.1816178528741002, 0.15488793203793466, 0.15034186480659992, 0.14861197144945618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1816178528741002, 0.15488793203793466, 0.15034186480659992, 0.14861197144945618, 0.14782125746458769] ***
*** finished computation of 7 references, err: [Inf, 0.1816178528741002, 0.15488793203793466, 0.15034186480659992, 0.14861197144945618, 0.14782125746458769] ***
*** center 1: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 21]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(2, 28), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [57, 22, 0]]
** centroid: 3, normalized-entropy: 0.8533728188427888, [(1, 57), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [11, 56, 0]]
** centroid: 4, normalized-entropy: 0.6442142137378306, [(1, 11), (2, 56)]
*** center 5: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [85, 5, 0]]
** centroid: 6, normalized-entropy: 0.3095434291503252, [(1, 85), (2, 5)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 65, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24522583280876278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24522583280876278, 0.18015794113278388] ***
*** starting iteration: 2; err: [Inf, 0.24522583280876278, 0.18015794113278388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24522583280876278, 0.18015794113278388, 0.16287614805996417] ***
*** starting iteration: 3; err: [Inf, 0.24522583280876278, 0.18015794113278388, 0.16287614805996417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24522583280876278, 0.18015794113278388, 0.16287614805996417, 0.1546576085947454] ***
*** starting iteration: 4; err: [Inf, 0.24522583280876278, 0.18015794113278388, 0.16287614805996417, 0.1546576085947454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24522583280876278, 0.18015794113278388, 0.16287614805996417, 0.1546576085947454, 0.15135459325183184] ***
*** starting iteration: 5; err: [Inf, 0.24522583280876278, 0.18015794113278388, 0.16287614805996417, 0.1546576085947454, 0.15135459325183184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24522583280876278, 0.18015794113278388, 0.16287614805996417, 0.1546576085947454, 0.15135459325183184, 0.15041914201248438] ***
*** finished computation of 7 references, err: [Inf, 0.24522583280876278, 0.18015794113278388, 0.16287614805996417, 0.1546576085947454, 0.15135459325183184, 0.15041914201248438] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [68, 32, 0]]
** centroid: 1, normalized-entropy: 0.9043814577244941, [(1, 68), (2, 32)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 27, 0]]
** centroid: 2, normalized-entropy: 0.9904799742690307, [(1, 34), (2, 27)]
*** center 3: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 86, 19]]
** centroid: 5, normalized-entropy: 0.6821560732869936, [(2, 86), (3, 19)]
*** center 6: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [47, 29, 0]]
** centroid: 7, normalized-entropy: 0.9591495543968941, [(1, 47), (2, 29)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21314610647666268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21314610647666268, 0.17875662618596105] ***
*** starting iteration: 2; err: [Inf, 0.21314610647666268, 0.17875662618596105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21314610647666268, 0.17875662618596105, 0.1664096935149282] ***
*** starting iteration: 3; err: [Inf, 0.21314610647666268, 0.17875662618596105, 0.1664096935149282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21314610647666268, 0.17875662618596105, 0.1664096935149282, 0.15912002944946288] ***
*** starting iteration: 4; err: [Inf, 0.21314610647666268, 0.17875662618596105, 0.1664096935149282, 0.15912002944946288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21314610647666268, 0.17875662618596105, 0.1664096935149282, 0.15912002944946288, 0.15688856172468513] ***
*** starting iteration: 5; err: [Inf, 0.21314610647666268, 0.17875662618596105, 0.1664096935149282, 0.15912002944946288, 0.15688856172468513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21314610647666268, 0.17875662618596105, 0.1664096935149282, 0.15912002944946288, 0.15688856172468513, 0.15617414657771586] ***
*** finished computation of 7 references, err: [Inf, 0.21314610647666268, 0.17875662618596105, 0.1664096935149282, 0.15912002944946288, 0.15688856172468513, 0.15617414657771586] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [40, 38, 0]]
** centroid: 1, normalized-entropy: 0.9995256892936492, [(1, 40), (2, 38)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 66, 23]]
** centroid: 2, normalized-entropy: 0.8243633538094403, [(2, 66), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [13, 50, 0]]
** centroid: 4, normalized-entropy: 0.7344461802527668, [(1, 13), (2, 50)]
*** center 5: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [92, 26, 0]]
** centroid: 6, normalized-entropy: 0.7607859931846075, [(1, 92), (2, 26)]
*** center 7: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1979366242699325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1979366242699325, 0.16198019940871744] ***
*** starting iteration: 2; err: [Inf, 0.1979366242699325, 0.16198019940871744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1979366242699325, 0.16198019940871744, 0.15115014727599918] ***
*** starting iteration: 3; err: [Inf, 0.1979366242699325, 0.16198019940871744, 0.15115014727599918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1979366242699325, 0.16198019940871744, 0.15115014727599918, 0.1481523233447224] ***
*** starting iteration: 4; err: [Inf, 0.1979366242699325, 0.16198019940871744, 0.15115014727599918, 0.1481523233447224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1979366242699325, 0.16198019940871744, 0.15115014727599918, 0.1481523233447224, 0.1466953632310033] ***
*** starting iteration: 5; err: [Inf, 0.1979366242699325, 0.16198019940871744, 0.15115014727599918, 0.1481523233447224, 0.1466953632310033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1979366242699325, 0.16198019940871744, 0.15115014727599918, 0.1481523233447224, 0.1466953632310033, 0.1447233846578747] ***
*** starting iteration: 6; err: [Inf, 0.1979366242699325, 0.16198019940871744, 0.15115014727599918, 0.1481523233447224, 0.1466953632310033, 0.1447233846578747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1979366242699325, 0.16198019940871744, 0.15115014727599918, 0.1481523233447224, 0.1466953632310033, 0.1447233846578747, 0.14354834213666617] ***
*** starting iteration: 7; err: [Inf, 0.1979366242699325, 0.16198019940871744, 0.15115014727599918, 0.1481523233447224, 0.1466953632310033, 0.1447233846578747, 0.14354834213666617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1979366242699325, 0.16198019940871744, 0.15115014727599918, 0.1481523233447224, 0.1466953632310033, 0.1447233846578747, 0.14354834213666617, 0.1431007187757641] ***
*** finished computation of 7 references, err: [Inf, 0.1979366242699325, 0.16198019940871744, 0.15115014727599918, 0.1481523233447224, 0.1466953632310033, 0.1447233846578747, 0.14354834213666617, 0.1431007187757641] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [52, 12, 0]]
** centroid: 1, normalized-entropy: 0.6962122601251459, [(1, 52), (2, 12)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 49, 13]]
** centroid: 2, normalized-entropy: 0.7408656862339816, [(2, 49), (3, 13)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 47, 4]]
** centroid: 3, normalized-entropy: 0.3966277727783787, [(2, 47), (3, 4)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [35, 43, 0]]
** centroid: 4, normalized-entropy: 0.9923985003332222, [(1, 35), (2, 43)]
*** center 5: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [77, 28, 0]]
** centroid: 7, normalized-entropy: 0.8366407419411671, [(1, 77), (2, 28)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20893196227401495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20893196227401495, 0.18716926173795945] ***
*** starting iteration: 2; err: [Inf, 0.20893196227401495, 0.18716926173795945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20893196227401495, 0.18716926173795945, 0.16243978303298354] ***
*** starting iteration: 3; err: [Inf, 0.20893196227401495, 0.18716926173795945, 0.16243978303298354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20893196227401495, 0.18716926173795945, 0.16243978303298354, 0.15012039677612485] ***
*** starting iteration: 4; err: [Inf, 0.20893196227401495, 0.18716926173795945, 0.16243978303298354, 0.15012039677612485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20893196227401495, 0.18716926173795945, 0.16243978303298354, 0.15012039677612485, 0.14832002072315664] ***
*** starting iteration: 5; err: [Inf, 0.20893196227401495, 0.18716926173795945, 0.16243978303298354, 0.15012039677612485, 0.14832002072315664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20893196227401495, 0.18716926173795945, 0.16243978303298354, 0.15012039677612485, 0.14832002072315664, 0.14760093100974336] ***
*** finished computation of 7 references, err: [Inf, 0.20893196227401495, 0.18716926173795945, 0.16243978303298354, 0.15012039677612485, 0.14832002072315664, 0.14760093100974336] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 44, 13]]
** centroid: 1, normalized-entropy: 0.7746319868686841, [(2, 44), (3, 13)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 50, 2]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(2, 50), (3, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [76, 22, 0]]
** centroid: 4, normalized-entropy: 0.7682814090975241, [(1, 76), (2, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [65, 16, 0]]
** centroid: 5, normalized-entropy: 0.7169622516889513, [(1, 65), (2, 16)]
*** center 6: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [35, 54, 0]]
** centroid: 7, normalized-entropy: 0.9668701645630143, [(1, 35), (2, 54)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21916195127367974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21916195127367974, 0.16642213955614715] ***
*** starting iteration: 2; err: [Inf, 0.21916195127367974, 0.16642213955614715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21916195127367974, 0.16642213955614715, 0.15399005393870174] ***
*** starting iteration: 3; err: [Inf, 0.21916195127367974, 0.16642213955614715, 0.15399005393870174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21916195127367974, 0.16642213955614715, 0.15399005393870174, 0.15034123611450195] ***
*** starting iteration: 4; err: [Inf, 0.21916195127367974, 0.16642213955614715, 0.15399005393870174, 0.15034123611450195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21916195127367974, 0.16642213955614715, 0.15399005393870174, 0.15034123611450195, 0.14961414829455316] ***
*** finished computation of 7 references, err: [Inf, 0.21916195127367974, 0.16642213955614715, 0.15399005393870174, 0.15034123611450195, 0.14961414829455316] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 60, 21]]
** centroid: 1, normalized-entropy: 0.8256265261578954, [(2, 60), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [80, 8, 0]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(1, 80), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [55, 34, 0]]
** centroid: 3, normalized-entropy: 0.9594579158386692, [(1, 55), (2, 34)]
*** center 4: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [17, 69, 0]]
** centroid: 5, normalized-entropy: 0.7172524777375696, [(1, 17), (2, 69)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [51, 3, 0]]
** centroid: 6, normalized-entropy: 0.3095434291503252, [(1, 51), (2, 3)]
*** center 7: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18598616522923112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18598616522923112, 0.1564790172316134] ***
*** starting iteration: 2; err: [Inf, 0.18598616522923112, 0.1564790172316134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18598616522923112, 0.1564790172316134, 0.1536683805696666] ***
*** starting iteration: 3; err: [Inf, 0.18598616522923112, 0.1564790172316134, 0.1536683805696666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18598616522923112, 0.1564790172316134, 0.1536683805696666, 0.15301315863244236] ***
*** finished computation of 7 references, err: [Inf, 0.18598616522923112, 0.1564790172316134, 0.1536683805696666, 0.15301315863244236] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 74, 19]]
** centroid: 1, normalized-entropy: 0.7304472862481346, [(2, 74), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [48, 24, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 48), (2, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [68, 22, 0]]
** centroid: 3, normalized-entropy: 0.80235344282919, [(1, 68), (2, 22)]
*** center 4: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [21, 52, 0]]
** centroid: 7, normalized-entropy: 0.8656939941993219, [(1, 21), (2, 52)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23765905363671483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23765905363671483, 0.18229357246030123] ***
*** starting iteration: 2; err: [Inf, 0.23765905363671483, 0.18229357246030123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23765905363671483, 0.18229357246030123, 0.1572851203531027] ***
*** starting iteration: 3; err: [Inf, 0.23765905363671483, 0.18229357246030123, 0.1572851203531027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23765905363671483, 0.18229357246030123, 0.1572851203531027, 0.15193864873051643] ***
*** starting iteration: 4; err: [Inf, 0.23765905363671483, 0.18229357246030123, 0.1572851203531027, 0.15193864873051643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23765905363671483, 0.18229357246030123, 0.1572851203531027, 0.15193864873051643, 0.14957866239687428] ***
*** starting iteration: 5; err: [Inf, 0.23765905363671483, 0.18229357246030123, 0.1572851203531027, 0.15193864873051643, 0.14957866239687428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23765905363671483, 0.18229357246030123, 0.1572851203531027, 0.15193864873051643, 0.14957866239687428, 0.14833106903731824] ***
*** starting iteration: 6; err: [Inf, 0.23765905363671483, 0.18229357246030123, 0.1572851203531027, 0.15193864873051643, 0.14957866239687428, 0.14833106903731824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23765905363671483, 0.18229357246030123, 0.1572851203531027, 0.15193864873051643, 0.14957866239687428, 0.14833106903731824, 0.1476200485918671] ***
*** finished computation of 7 references, err: [Inf, 0.23765905363671483, 0.18229357246030123, 0.1572851203531027, 0.15193864873051643, 0.14957866239687428, 0.14833106903731824, 0.1476200485918671] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [38, 28, 0]]
** centroid: 1, normalized-entropy: 0.9833761901392238, [(1, 38), (2, 28)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 54, 22]]
** centroid: 2, normalized-entropy: 0.8680403986166402, [(2, 54), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [6, 71, 0]]
** centroid: 3, normalized-entropy: 0.39481484603049416, [(1, 6), (2, 71)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [77, 9, 0]]
** centroid: 4, normalized-entropy: 0.48356837509176975, [(1, 77), (2, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [55, 3, 0]]
** centroid: 6, normalized-entropy: 0.29367630985136944, [(1, 55), (2, 3)]
*** center 7: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2028761894730851] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2028761894730851, 0.16872872847877443] ***
*** starting iteration: 2; err: [Inf, 0.2028761894730851, 0.16872872847877443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2028761894730851, 0.16872872847877443, 0.15685210549179465] ***
*** starting iteration: 3; err: [Inf, 0.2028761894730851, 0.16872872847877443, 0.15685210549179465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2028761894730851, 0.16872872847877443, 0.15685210549179465, 0.15277649381570518] ***
*** starting iteration: 4; err: [Inf, 0.2028761894730851, 0.16872872847877443, 0.15685210549179465, 0.15277649381570518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2028761894730851, 0.16872872847877443, 0.15685210549179465, 0.15277649381570518, 0.15146522879973054] ***
*** starting iteration: 5; err: [Inf, 0.2028761894730851, 0.16872872847877443, 0.15685210549179465, 0.15277649381570518, 0.15146522879973054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2028761894730851, 0.16872872847877443, 0.15685210549179465, 0.15277649381570518, 0.15146522879973054, 0.15094360246509314] ***
*** finished computation of 7 references, err: [Inf, 0.2028761894730851, 0.16872872847877443, 0.15685210549179465, 0.15277649381570518, 0.15146522879973054, 0.15094360246509314] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [67, 18, 0]]
** centroid: 1, normalized-entropy: 0.7448423974714387, [(1, 67), (2, 18)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 65, 18]]
** centroid: 2, normalized-entropy: 0.7544062039636575, [(2, 65), (3, 18)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 65, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [34, 39, 0]]
** centroid: 4, normalized-entropy: 0.9966132830150962, [(1, 34), (2, 39)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [56, 8, 0]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(1, 56), (2, 8)]
*** center 6: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24424648441374303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24424648441374303, 0.16529967704974116] ***
*** starting iteration: 2; err: [Inf, 0.24424648441374303, 0.16529967704974116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24424648441374303, 0.16529967704974116, 0.15227856946486282] ***
*** starting iteration: 3; err: [Inf, 0.24424648441374303, 0.16529967704974116, 0.15227856946486282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24424648441374303, 0.16529967704974116, 0.15227856946486282, 0.14926723999436944] ***
*** starting iteration: 4; err: [Inf, 0.24424648441374303, 0.16529967704974116, 0.15227856946486282, 0.14926723999436944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24424648441374303, 0.16529967704974116, 0.15227856946486282, 0.14926723999436944, 0.14721297362260521] ***
*** starting iteration: 5; err: [Inf, 0.24424648441374303, 0.16529967704974116, 0.15227856946486282, 0.14926723999436944, 0.14721297362260521] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24424648441374303, 0.16529967704974116, 0.15227856946486282, 0.14926723999436944, 0.14721297362260521, 0.14645028146356345] ***
*** finished computation of 7 references, err: [Inf, 0.24424648441374303, 0.16529967704974116, 0.15227856946486282, 0.14926723999436944, 0.14721297362260521, 0.14645028146356345] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 49, 17]]
** centroid: 1, normalized-entropy: 0.8230660790114689, [(2, 49), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [67, 1, 0]]
** centroid: 2, normalized-entropy: 0.11058084476988722, [(1, 67), (2, 1)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [70, 31, 0]]
** centroid: 3, normalized-entropy: 0.8895986430672326, [(1, 70), (2, 31)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [34, 6, 0]]
** centroid: 4, normalized-entropy: 0.6098403047164005, [(1, 34), (2, 6)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 64, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [51, 29, 0]]
** centroid: 7, normalized-entropy: 0.9447388286467892, [(1, 51), (2, 29)]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 353,3 => 37,1 => 610), Dict(2 => 384,3 => 34,1 => 582))
[ Info: ===== scores for single classifier: {"micro_f1":0.954,"precision":0.954,"recall":0.954,"macro_recall":0.9463321625901219,"macro_f1":0.9044210181490597,"accuracy":0.954,"class_f1":{"2":0.9389920424403183,"3":0.7999999999999999,"1":0.9742710120068611},"class_precision":{"2":0.9567567567567568,"3":0.6956521739130435,"1":0.9726027397260274},"class_recall":{"2":0.921875,"3":0.9411764705882353,"1":0.9759450171821306}}
[ Info: ===== scores for 1: {"micro_f1":0.966,"precision":0.966,"recall":0.966,"macro_recall":0.957930100734452,"macro_f1":0.9528479201625383,"accuracy":0.966,"class_f1":{"2":0.9560723514211885,"3":0.9275362318840579,"1":0.9749351771823681},"class_precision":{"2":0.9487179487179487,"3":0.9142857142857143,"1":0.9808695652173913},"class_recall":{"2":0.9635416666666666,"3":0.9411764705882353,"1":0.9690721649484536}}
[ Info: ===== scores for 5: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.9700249730476384,"macro_f1":0.9570588320741003,"accuracy":0.971,"class_f1":{"2":0.9622886866059818,"3":0.9295774647887325,"1":0.9793103448275862},"class_precision":{"2":0.961038961038961,"3":0.8918918918918919,"1":0.9826989619377162},"class_recall":{"2":0.9635416666666666,"3":0.9705882352941176,"1":0.9759450171821306}}
[ Info: ===== scores for 7: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.9703202909170541,"macro_f1":0.9530580600947408,"accuracy":0.971,"class_f1":{"2":0.9623865110246433,"3":0.9166666666666667,"1":0.9801210025929128},"class_precision":{"2":0.958656330749354,"3":0.868421052631579,"1":0.9860869565217392},"class_recall":{"2":0.9661458333333334,"3":0.9705882352941176,"1":0.9742268041237113}}
[ Info: ===== scores for 9: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.9703202909170541,"macro_f1":0.9530580600947408,"accuracy":0.971,"class_f1":{"2":0.9623865110246433,"3":0.9166666666666667,"1":0.9801210025929128},"class_precision":{"2":0.958656330749354,"3":0.868421052631579,"1":0.9860869565217392},"class_recall":{"2":0.9661458333333334,"3":0.9705882352941176,"1":0.9742268041237113}}
[ Info: ===== scores for 11: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.9795514747995419,"macro_f1":0.9577107048883238,"accuracy":0.971,"class_f1":{"2":0.9623865110246433,"3":0.9315068493150686,"1":0.9792387543252595},"class_precision":{"2":0.958656330749354,"3":0.8717948717948718,"1":0.9860627177700348},"class_recall":{"2":0.9661458333333334,"3":1.0,"1":0.9725085910652921}}
(score = 0.967, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.966, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.966, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.966, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.966, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.97, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.971, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.971, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.971, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.971, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.973,"k":7,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.973,"precision":0.973,"recall":0.973,"macro_recall":0.9809922680412372,"macro_f1":0.9514387296278063,"accuracy":0.973,"class_f1":{"2":0.9649805447470817,"3":0.9066666666666667,"1":0.9826689774696706},"class_precision":{"2":0.9612403100775194,"3":0.8292682926829268,"1":0.9912587412587412},"class_recall":{"2":0.96875,"3":1.0,"1":0.9742268041237113}}
Test Summary: | Pass  Total
AKNC          |    8      8
[155, 3, 1, 2, 2, 2, 5, 1, 3, 1, 1, 11, 4, 4, 15, 5, 6, 1, 6, 12, 9, 14, 2, 6, 3, 13, 2, 2, 5, 3, 17, 4, 2, 2, 14, 14, 4, 9, 3, 20, 108, 4, 41, 7, 9, 38, 2, 8, 9, 13, 9, 22, 4, 7, 2, 5, 17, 15, 4, 8, 5, 21, 2, 16, 35, 13, 20, 6, 24, 1, 23, 7, 2, 33, 62, 22, 1, 1, 39, 39, 7, 14, 6, 1, 21, 31, 6, 5, 16, 19, 2, 26, 8, 9, 19, 12, 16, 6, 189, 9, 10, 1, 14, 77, 5, 13, 16, 6, 8, 79, 4, 14, 3, 9, 21, 3, 5, 74, 2, 45, 15, 6, 68, 7, 20, 4, 3, 32, 138, 3, 10, 2, 3, 122, 516, 15, 131, 112, 45, 12, 5, 31, 29, 11, 4, 1, 22, 10, 7, 10, 15, 27, 14, 2, 6, 32, 17, 12, 1, 10, 17, 2, 21, 5, 22, 31, 11, 4, 70, 39, 82, 839, 7, 12, 2, 163, 11, 3, 15, 6, 6, 4, 15, 33, 350, 10, 7, 19, 121, 7, 9, 2, 5, 29, 8, 27, 4, 6, 11, 23, 49, 8, 7, 20, 100, 17, 48, 118, 32, 25, 65, 177, 45, 101, 14, 7, 13, 55, 28, 18, 1, 62, 35, 8, 59, 5, 30, 48, 21, 123, 7, 9, 8, 19, 28, 71, 35, 8, 11, 3, 14, 3, 36, 2, 38, 279, 82, 39, 2, 23, 20, 92, 5, 49, 4, 14, 147, 60, 12, 17, 19, 1, 41, 42, 3, 73, 143, 65, 3, 19, 64, 107, 2, 102, 193, 7, 20, 16, 80, 8, 94, 51, 46, 63, 125, 5, 17, 28, 1, 6, 26, 1, 10, 13, 9, 23, 45, 153, 137, 152]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6970000000000001, speedup = 0.26364467871654584, eval_ratio = 0.082334)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.35329861111111116,"f1":null,"seconds":0.0001667756587266922,"exhaustive_search_seconds":0.00040354765951633453,"evaluations":481.8515625,"distances_sum":1755.0225776113075}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5486111111111109,"recall":0.5486111111111109,"f1":null,"seconds":0.0002643931657075882,"exhaustive_search_seconds":0.00040354765951633453,"evaluations":628.0078125,"distances_sum":1657.9550922466378}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6701388888888886,"recall":0.6701388888888886,"f1":0.6701388888888886,"seconds":0.00036208145320415497,"exhaustive_search_seconds":0.00040354765951633453,"evaluations":769.5390625,"distances_sum":1611.1231034512107}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7369791666666664,"recall":0.7369791666666664,"f1":0.7369791666666664,"seconds":0.0004664286971092224,"exhaustive_search_seconds":0.00040354765951633453,"evaluations":875.7109375,"distances_sum":1586.4873668968312}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.793402777777777,"recall":0.793402777777777,"f1":0.793402777777777,"seconds":0.0006946846842765808,"exhaustive_search_seconds":0.00040354765951633453,"evaluations":998.265625,"distances_sum":1566.2586281006822}
KCenters.DeloneInvIndex> reached performance {"precision":0.8298611111111102,"recall":0.8298611111111102,"f1":0.8298611111111102,"seconds":0.000615118071436882,"exhaustive_search_seconds":0.00040354765951633453,"evaluations":1096.421875,"distances_sum":1556.6031732521626}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8580000000000001, speedup = 0.6398959313918064, eval_ratio = 0.11417100000000001)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
