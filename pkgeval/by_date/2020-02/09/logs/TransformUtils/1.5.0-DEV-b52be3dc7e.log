Julia Version 1.5.0-DEV.252
Commit b52be3dc7e (2020-02-08 18:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_VCC7gs/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.04765472118560148 -0.0320191028908101; 0.04765472118560148 0.0 0.18191941252508767; 0.0320191028908101 -0.18191941252508767 0.0])
dAA = so3([0.0 -0.03302915852674284 0.007637027917056018; 0.03302915852674284 0.0 0.2288804691330234; -0.007637027917056018 -0.2288804691330234 0.0])
dAA = so3([0.0 0.07037090593443686 -0.10534381327441755; -0.07037090593443686 0.0 0.13952437626872902; 0.10534381327441755 -0.13952437626872902 0.0])
dAA = Quaternion(0.9945779534843027, [-0.09295722203670956, -0.04282993787172031, -0.018418624707036833])
dAA = SO3([0.9912187998421973 0.1091364127297901 0.074662803696803; -0.10584635624665703 0.9932853200541223 -0.04669927016866878; -0.07925805768942487 0.03838640881162835 0.9961147744661991])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9965076244907793 -0.08335632443656615 -0.004927221140741307; 0.07273277321595827 0.8374918215037328 0.5415878438579247; -0.04101826461541037 -0.5400547861937581 0.8406297222185011]), [-1.8191941252508765, -0.32019102890810097, 0.4765472118560148])
xj = SE3(SO3([0.9734060989719752 0.11899345490736944 -0.19575782020999613; -0.018609354138182575 0.8927636761327471 0.45014076744558845; 0.22832927631541478 -0.4345268418258549 0.8712359986307543]), [-1.39524376268729, -1.0534381327441755, -0.7037090593443686])
Dx = SE3(SO3([0.9592874187418206 0.20133460005181317 -0.19807076277338648; -0.22003505499093157 0.9724317209214074 -0.07720830733132383; 0.1770655890307104 0.11764746902422873 0.9771421852593412]), [0.4175507374317715, -0.01202434837389571, -1.3913651165765177])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
