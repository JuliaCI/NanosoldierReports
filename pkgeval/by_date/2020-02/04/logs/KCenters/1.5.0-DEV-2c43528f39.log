Julia Version 1.5.0-DEV.225
Commit 2c43528f39 (2020-02-03 15:22 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed DataValueInterfaces ───────── v1.0.0
  Installed KCenters ──────────────────── v0.1.9
  Installed Compat ────────────────────── v3.2.0
  Installed TableTraits ───────────────── v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed MLDataPattern ─────────────── v0.5.0
  Installed MLDataUtils ───────────────── v0.5.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed InvertedIndices ───────────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed Parsers ───────────────────── v0.3.11
  Installed Tables ────────────────────── v0.2.11
  Installed Missings ──────────────────── v0.4.3
  Installed JSON ──────────────────────── v0.21.0
  Installed StatsBase ─────────────────── v0.32.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed SimilaritySearch ──────────── v0.3.17
  Installed LearnBase ─────────────────── v0.2.2
  Installed DataAPI ───────────────────── v1.1.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed OrderedCollections ────────── v1.1.0
  Installed DataStructures ────────────── v0.17.9
  Installed DataFrames ────────────────── v0.20.0
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_r5UW10/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 131.3300000000001
[ Info: 87.33000000000004
[ Info: 49.30999999999999
[ Info: 25.180000000000007
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999835129265
[ Info: 75.46000112136034
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.911017061715942
inertia(cdnet.distances) = 26.479819868067764
inertia(crand.distances) = 21.905679098965592
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8558795371295379,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.1875,"distances_sum":2273.734230545239}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8558795371295379,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.1875,"distances_sum":2273.734230545239}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9054664085914094,"seconds":2.2158026695251465e-5,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.5234375,"distances_sum":2635.9106300708813}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9580815018315022,"seconds":6.614252924919128e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.828125,"distances_sum":3042.0019949148573}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9322833416583424,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.765625,"distances_sum":2801.34781867636}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9580815018315022,"seconds":6.614252924919128e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.828125,"distances_sum":3042.0019949148573}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9601076007326012,"seconds":8.421018719673157e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.921875,"distances_sum":3046.6126760482475}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9614239926739933,"seconds":7.59027898311615e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.859375,"distances_sum":3081.7119479080948}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9614239926739933,"seconds":7.59027898311615e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.859375,"distances_sum":3081.7119479080948}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9614239926739933,"seconds":7.59027898311615e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.859375,"distances_sum":3081.7119479080948}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.7038381757131763,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.4140625,"distances_sum":1382.5367805656317}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":9.642168879508972e-5,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":6.25,"distances_sum":1072.9994225697078}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5595703125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5595703125,"f1":0.7038381757131763,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.4140625,"distances_sum":1382.5367805656317}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8571324508824516,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.9375,"distances_sum":2103.1965772081558}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9071256868131875,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.5234375,"distances_sum":2351.655974631005}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8074659715284722,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.8125,"distances_sum":1860.430516226956}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8587464618714629,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.90625,"distances_sum":2121.712934916502}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83984375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.83984375,"f1":0.9071256868131875,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.5234375,"distances_sum":2351.655974631005}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9411375083250086,"seconds":6.44288957118988e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.796875,"distances_sum":2653.2911116471187}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9663347069597075,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.890625,"distances_sum":2826.1725699836425}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.929550137362638,"seconds":7.770955562591553e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.75,"distances_sum":2556.2960075177507}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9084249084249092,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.5859375,"distances_sum":2374.5582438390657}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9452838827838832,"seconds":6.977468729019165e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.734375,"distances_sum":2697.9115344696856}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9663347069597075,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.890625,"distances_sum":2826.1725699836425}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9663347069597075,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.890625,"distances_sum":2826.1725699836425}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.181640625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.181640625,"f1":null,"seconds":3.5315752029418945e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.578125,"distances_sum":491.1692184684205}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5673828125,"f1":0.7097255175380182,"seconds":4.7441571950912476e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.7734375,"distances_sum":1437.164302876774}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5673828125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5673828125,"f1":0.7097255175380182,"seconds":4.7441571950912476e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.7734375,"distances_sum":1437.164302876774}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8776057276057283,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.203125,"distances_sum":2293.2435613395587}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8652456918081924,"seconds":6.20819628238678e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.0546875,"distances_sum":2206.127438124439}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8107895576645582,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.8984375,"distances_sum":1923.8485107394338}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7998046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7998046875,"f1":0.8776057276057283,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.203125,"distances_sum":2293.2435613395587}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9523351648351653,"seconds":6.649643182754517e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8359375,"distances_sum":2760.0966319757977}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9580414377289385,"seconds":9.037554264068604e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8671875,"distances_sum":2785.405647834566}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9383241758241765,"seconds":6.4391642808914185e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.703125,"distances_sum":2634.2098356923752}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9612179487179493,"seconds":7.64988362789154e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8984375,"distances_sum":2807.0258009500194}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9612179487179493,"seconds":7.64988362789154e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8984375,"distances_sum":2807.0258009500194}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9612179487179493,"seconds":7.64988362789154e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8984375,"distances_sum":2807.0258009500194}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.228515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.228515625,"f1":null,"seconds":3.8035213947296143e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":6.0625,"distances_sum":521.3554101175642}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.388671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.388671875,"f1":null,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":6.4140625,"distances_sum":842.2502597756796}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.388671875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.388671875,"f1":null,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":6.4140625,"distances_sum":842.2502597756796}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.809712683150184,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":7.5546875,"distances_sum":1626.424979213068}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":7,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":6.4765625,"distances_sum":937.8695635323112}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7970564158064167,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":7.4765625,"distances_sum":1588.6429673809366}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8597995754245763,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":8.046875,"distances_sum":1888.5895099404293}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8597995754245763,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":8.046875,"distances_sum":1888.5895099404293}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9022524350649356,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":8.578125,"distances_sum":2149.2444613141743}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8825580669330676,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":8.5390625,"distances_sum":2045.4224201111792}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.930093864468865,"seconds":7.638707756996155e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":8.796875,"distances_sum":2346.216711493753}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9594780219780226,"seconds":6.75395131111145e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":8.9375,"distances_sum":2552.303803568396}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8847964535464543,"seconds":7.212162017822266e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":8.5859375,"distances_sum":2069.3724979447065}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9594780219780226,"seconds":6.75395131111145e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":8.9375,"distances_sum":2552.303803568396}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9594780219780226,"seconds":6.75395131111145e-6,"exhaustive_search_seconds":2.469867467880249e-6,"evaluations":8.9375,"distances_sum":2552.303803568396}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8523216366966376,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":7.8203125,"distances_sum":1808.2158890171197}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8129292582417592,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":7.6328125,"distances_sum":1665.7753086525256}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3876953125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3876953125,"f1":null,"seconds":4.848465323448181e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":6.3359375,"distances_sum":793.4291423533343}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8523216366966376,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":7.8203125,"distances_sum":1808.2158890171197}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9204384157509166,"seconds":7.005408406257629e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.703125,"distances_sum":2260.216193139196}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9477163461538465,"seconds":6.759539246559143e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.796875,"distances_sum":2429.536885182818}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9105425824175835,"seconds":6.379559636116028e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.625,"distances_sum":2173.043842567651}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.90498511904762,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.6015625,"distances_sum":2127.9658790320705}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9477163461538465,"seconds":6.759539246559143e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.796875,"distances_sum":2429.536885182818}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.960162233599734,"seconds":7.368624210357666e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.8828125,"distances_sum":2534.24514637104}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9591975732600736,"seconds":6.554648280143738e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.8515625,"distances_sum":2519.0907392659115}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9743532509157512,"seconds":6.774440407752991e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9453125,"distances_sum":2607.704454106521}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591002747252753,"seconds":7.33695924282074e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.890625,"distances_sum":2500.6769319907767}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9743532509157512,"seconds":6.774440407752991e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9453125,"distances_sum":2607.704454106521}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9743532509157512,"seconds":6.774440407752991e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.9453125,"distances_sum":2607.704454106521}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8125379828504836,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":7.6640625,"distances_sum":1452.3726696035144}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.697265625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.697265625,"f1":0.8125379828504836,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":7.6640625,"distances_sum":1452.3726696035144}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8746597152847163,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.3828125,"distances_sum":1750.2191860616897}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9208505036630041,"seconds":6.679445505142212e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.7578125,"distances_sum":2048.4806411210366}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8623046875,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9208505036630041,"seconds":6.679445505142212e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.7578125,"distances_sum":2048.4806411210366}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9422447344322351,"seconds":6.852671504020691e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.953125,"distances_sum":2123.755348941958}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9617273351648357,"seconds":6.707385182380676e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.890625,"distances_sum":2315.052780071526}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9413747710622717,"seconds":6.5676867961883545e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.8515625,"distances_sum":2170.4869519191475}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9617273351648357,"seconds":6.707385182380676e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.890625,"distances_sum":2315.052780071526}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9617273351648357,"seconds":6.707385182380676e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.890625,"distances_sum":2315.052780071526}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2548828125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2548828125,"f1":null,"seconds":4.189088940620422e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":6.8203125,"distances_sum":570.256302630659}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7979234307359315,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":7.640625,"distances_sum":1556.4590170319666}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.248046875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.248046875,"f1":null,"seconds":4.202127456665039e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":6.65625,"distances_sum":557.3004224648926}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.677734375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.677734375,"f1":0.7979234307359315,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":7.640625,"distances_sum":1556.4590170319666}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9377461080586087,"seconds":6.562098860740662e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.8515625,"distances_sum":2304.4765538035194}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9377461080586087,"seconds":6.562098860740662e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.8515625,"distances_sum":2304.4765538035194}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9704097985347989,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.9765625,"distances_sum":2556.0624943836665}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519803113553119,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.8046875,"distances_sum":2473.7907052907563}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9704097985347989,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.9765625,"distances_sum":2556.0624943836665}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9704097985347989,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":8.9765625,"distances_sum":2556.0624943836665}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8657056485181492,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.8984375,"distances_sum":1826.9338486703798}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8657056485181492,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.8984375,"distances_sum":1826.9338486703798}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.951791437728938,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7578125,"distances_sum":2353.856172532272}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.951791437728938,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7578125,"distances_sum":2353.856172532272}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9569081959706965,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7890625,"distances_sum":2388.677121545667}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9569081959706965,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7890625,"distances_sum":2388.677121545667}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9569081959706965,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7890625,"distances_sum":2388.677121545667}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7158203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7158203125,"f1":0.8271468115218125,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8046875,"distances_sum":1498.2993518939484}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7158203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7158203125,"f1":0.8271468115218125,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8046875,"distances_sum":1498.2993518939484}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7158203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7158203125,"f1":0.8271468115218125,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8046875,"distances_sum":1498.2993518939484}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7158203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7158203125,"f1":0.8271468115218125,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8046875,"distances_sum":1498.2993518939484}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8499802281052291,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.6875,"distances_sum":1731.1601595630564}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8499802281052291,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.6875,"distances_sum":1731.1601595630564}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8697094572094581,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.859375,"distances_sum":1828.9173045473885}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9400583791208796,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.671875,"distances_sum":2316.000014327377}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9400583791208796,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.671875,"distances_sum":2316.000014327377}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714288,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.890625,"distances_sum":2488.6621899772804}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9546016483516491,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8046875,"distances_sum":2333.4963203331345}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9633413461538466,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8359375,"distances_sum":2422.20254425618}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714288,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.890625,"distances_sum":2488.6621899772804}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714288,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.890625,"distances_sum":2488.6621899772804}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4521484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4521484375,"f1":0.6036123598623602,"seconds":3.7923455238342285e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.8046875,"distances_sum":952.2659529402138}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5419921875,"f1":null,"seconds":4.217028617858887e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.7265625,"distances_sum":1150.6230863518188}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.805089008214009,"seconds":4.4852495193481445e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.5,"distances_sum":1568.9894370809698}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.805089008214009,"seconds":4.4852495193481445e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.5,"distances_sum":1568.9894370809698}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9405823343323348,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.71875,"distances_sum":2322.623805271883}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9431433150183157,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.84375,"distances_sum":2286.7966819740823}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8911499958374965,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.5234375,"distances_sum":2054.5503470365097}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.911730457042958,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6640625,"distances_sum":2087.5842455570814}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8864149739149747,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.5625,"distances_sum":1955.5645938612422}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8456194846819856,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.03125,"distances_sum":1749.3980194741298}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8593500249750259,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.0625,"distances_sum":1824.4433020031947}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9431433150183157,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.84375,"distances_sum":2286.7966819740823}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9735519688644692,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9296875,"distances_sum":2535.689765481073}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9674336080586083,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.875,"distances_sum":2487.4640065694243}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9632097069597073,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8671875,"distances_sum":2465.673254254867}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9507898351648356,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8359375,"distances_sum":2371.126205533073}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9581501831501835,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.828125,"distances_sum":2443.465481445745}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9614983974358977,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.90625,"distances_sum":2430.022867230125}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9735519688644692,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9296875,"distances_sum":2535.689765481073}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9735519688644692,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9296875,"distances_sum":2535.689765481073}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5908203125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5908203125,"f1":0.7262317543567549,"seconds":4.24310564994812e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.171875,"distances_sum":1309.2184722594686}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2177734375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2177734375,"f1":null,"seconds":3.38628888130188e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.3984375,"distances_sum":509.1567626063091}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5908203125,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.5908203125,"f1":0.7262317543567549,"seconds":4.24310564994812e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.171875,"distances_sum":1309.2184722594686}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8787150349650358,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.4296875,"distances_sum":1972.2639467432248}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8081319721944729,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.703125,"distances_sum":1588.8017744300166}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8565059940059948,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.9453125,"distances_sum":1804.3132935287092}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5927734375, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.5927734375,"f1":0.7257851523476531,"seconds":4.254281520843506e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.3203125,"distances_sum":1335.7364723890983}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7958984375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.7958984375,"f1":0.8787150349650358,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.4296875,"distances_sum":1972.2639467432248}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9332532051282058,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8203125,"distances_sum":2273.6789559396725}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9607715201465206,"seconds":3.139860928058624e-5,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.875,"distances_sum":2475.7795276924594}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9100763819513829,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6640625,"distances_sum":2136.030268940306}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9607715201465206,"seconds":3.139860928058624e-5,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.875,"distances_sum":2475.7795276924594}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9607715201465206,"seconds":3.139860928058624e-5,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.875,"distances_sum":2475.7795276924594}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.248046875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.248046875,"f1":null,"seconds":3.725290298461914e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":6.953125,"distances_sum":573.9139861825578}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.7004877067377073,"seconds":4.367902874946594e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":6.9765625,"distances_sum":1214.6923609367086}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8116234459984469,"seconds":4.59328293800354e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.6328125,"distances_sum":1631.7716205886247}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7001953125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.7001953125,"f1":0.8116234459984469,"seconds":4.59328293800354e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.6328125,"distances_sum":1631.7716205886247}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8555813977688989,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.0625,"distances_sum":1816.8103376093666}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7080078125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.7080078125,"f1":0.8185323357198366,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.421875,"distances_sum":1629.9356344504051}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9358001373626383,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.859375,"distances_sum":2282.6290136505345}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8154236388611397,"seconds":4.628673195838928e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.5,"distances_sum":1579.0193606546031}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9358001373626383,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.859375,"distances_sum":2282.6290136505345}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588198260073264,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.96875,"distances_sum":2445.1577529294636}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9663175366300372,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.9140625,"distances_sum":2531.3647143153917}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9392570970695976,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.8984375,"distances_sum":2304.4737363745276}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9663175366300372,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.9140625,"distances_sum":2531.3647143153917}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9663175366300372,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.9140625,"distances_sum":2531.3647143153917}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":3,"bsize":4}, perf: {"precision":0.9828683035714284,"recall":0.65234375,"f1":0.7725303342490848,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.2265625,"distances_sum":1459.9382307172652}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3720703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3720703125,"f1":null,"seconds":3.7960708141326904e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.234375,"distances_sum":824.1038012602423}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.349609375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.349609375,"f1":null,"seconds":3.5408884286880493e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.875,"distances_sum":714.5738878021016}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9898995535714284,"recall":0.74609375,"f1":0.8443111575924082,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.7578125,"distances_sum":1711.2767225790553}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":0.9898995535714284,"recall":0.74609375,"f1":0.8443111575924082,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.7578125,"distances_sum":1711.2767225790553}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":3,"bsize":6}, perf: {"precision":0.9862816220238094,"recall":0.806640625,"f1":0.8816227392399275,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.484375,"distances_sum":1985.5876525429223}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":7,"bsize":8}, perf: {"precision":0.9862351190476191,"recall":0.8955078125,"f1":0.9352366383616388,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8125,"distances_sum":2350.6065614150575}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":5,"bsize":6}, perf: {"precision":0.9834449404761906,"recall":0.7880859375,"f1":0.8704730165667672,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.4921875,"distances_sum":1920.2248254389867}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9879092261904762,"recall":0.814453125,"f1":0.8872567536630044,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.53125,"distances_sum":2030.621874124187}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":7,"bsize":8},"perf":{"precision":0.9862351190476191,"recall":0.8955078125,"f1":0.9352366383616388,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8125,"distances_sum":2350.6065614150575}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":4,"bsize":9}, perf: {"precision":0.9900669642857143,"recall":0.91796875,"f1":0.949602220695971,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8671875,"distances_sum":2406.344292204306}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":9,"bsize":8}, perf: {"precision":0.9868117559523809,"recall":0.908203125,"f1":0.9420401213369968,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8046875,"distances_sum":2404.1417868483086}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":3,"bsize":8}, perf: {"precision":0.9935825892857143,"recall":0.9111328125,"f1":0.9478293841575097,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.84375,"distances_sum":2387.9312985811193}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":2,"bsize":9}, perf: {"precision":0.9870907738095238,"recall":0.9033203125,"f1":0.939655136530137,"seconds":6.513670086860657e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.84375,"distances_sum":2386.689483157}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":4,"bsize":9},"perf":{"precision":0.9900669642857143,"recall":0.91796875,"f1":0.949602220695971,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8671875,"distances_sum":2406.344292204306}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":4,"bsize":9},"perf":{"precision":0.9900669642857143,"recall":0.91796875,"f1":0.949602220695971,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8671875,"distances_sum":2406.344292204306}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.64453125,"f1":0.7760427072927081,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.2265625,"distances_sum":1448.2060507227557}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2333984375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.1497329473495483e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.4140625,"distances_sum":603.4399870067444}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.64453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.64453125,"f1":0.7760427072927081,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.2265625,"distances_sum":1448.2060507227557}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9449862637362642,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7421875,"distances_sum":2386.142315140559}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9449862637362642,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7421875,"distances_sum":2386.142315140559}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790922619047623,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9375,"distances_sum":2627.1463799384924}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9792811355311359,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9140625,"distances_sum":2642.9690406383584}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.958711080586081,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8125,"distances_sum":2509.354744355286}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9792811355311359,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9140625,"distances_sum":2642.9690406383584}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9792811355311359,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9140625,"distances_sum":2642.9690406383584}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3056640625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.3056640625,"f1":null,"seconds":3.345310688018799e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":6.1015625,"distances_sum":751.3356411558568}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7941985098235107,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.5078125,"distances_sum":1519.8861669493178}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6728515625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6728515625,"f1":0.7941985098235107,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.5078125,"distances_sum":1519.8861669493178}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8434357309357318,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.96875,"distances_sum":1731.2565006765642}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9465086996337001,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.734375,"distances_sum":2383.727662791936}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9347184065934072,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8046875,"distances_sum":2273.8456124502145}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9338801823176829,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8046875,"distances_sum":2271.0498407614064}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8475611194361203,"seconds":4.934147000312805e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.015625,"distances_sum":1745.6419047377688}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9465086996337001,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.734375,"distances_sum":2383.727662791936}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9495364010989016,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8046875,"distances_sum":2401.155898345188}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9530391483516489,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.828125,"distances_sum":2410.140216354237}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9740728021978025,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.9140625,"distances_sum":2535.02515928039}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9516082875457881,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.71875,"distances_sum":2439.1414951755864}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9694024725274726,"seconds":6.16908073425293e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8984375,"distances_sum":2508.0425286244263}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604941933066936,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8203125,"distances_sum":2459.9778225108744}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9595295329670334,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.890625,"distances_sum":2445.071730352347}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9503605769230773,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.765625,"distances_sum":2417.3079924998747}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9740728021978025,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.9140625,"distances_sum":2535.02515928039}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9740728021978025,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.9140625,"distances_sum":2535.02515928039}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2587890625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2587890625,"f1":null,"seconds":3.123655915260315e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.5234375,"distances_sum":646.1147194837162}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7154562451437458,"seconds":4.218891263008118e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.7578125,"distances_sum":1308.9868275495971}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.700011620324121,"seconds":4.04752790927887e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.640625,"distances_sum":1221.5977600202048}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.578125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.578125,"f1":0.7154562451437458,"seconds":4.218891263008118e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.7578125,"distances_sum":1308.9868275495971}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8943082958707966,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.234375,"distances_sum":2070.2477103190404}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":4,"bsize":4}, perf: {"precision":null,"recall":0.673828125,"f1":null,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.328125,"distances_sum":1553.2555253310327}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8309508200133209,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.734375,"distances_sum":1769.7574224290722}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8937619671994679,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.3359375,"distances_sum":2068.5829527452283}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7842055513930521,"seconds":4.425644874572754e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.3203125,"distances_sum":1525.710325250095}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.818359375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.818359375,"f1":0.8943082958707966,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.234375,"distances_sum":2070.2477103190404}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9608688186813191,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8125,"distances_sum":2598.331867940741}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9244021603396613,"seconds":5.4331496357917786e-5,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.71875,"distances_sum":2313.0543727958393}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.920255265567766,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.6875,"distances_sum":2273.1337442097465}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9125718031968039,"seconds":6.20819628238678e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.640625,"distances_sum":2267.322896270303}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8981430028305036,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.328125,"distances_sum":2101.6717112201413}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9241045412920419,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.703125,"distances_sum":2323.374656460132}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9608688186813191,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8125,"distances_sum":2598.331867940741}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9608688186813191,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8125,"distances_sum":2598.331867940741}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8460685148185157,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.6015625,"distances_sum":1723.6820816977954}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4052734375,"f1":0.5541734307359307,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":5.6875,"distances_sum":851.5685369033667}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8460685148185157,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.6015625,"distances_sum":1723.6820816977954}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9571142399267405,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.7734375,"distances_sum":2532.1162032409657}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8514847999223006,"seconds":4.8074871301651e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.71875,"distances_sum":1785.8113788977241}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9571142399267405,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.7734375,"distances_sum":2532.1162032409657}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9631410256410263,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8125,"distances_sum":2550.34533426496}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9631410256410263,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8125,"distances_sum":2550.34533426496}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9631410256410263,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8125,"distances_sum":2550.34533426496}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.3046875,"f1":null,"seconds":4.151836037635803e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.2421875,"distances_sum":768.749348934427}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8347537878787887,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.6796875,"distances_sum":1748.9356388861893}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.73046875,"f1":0.8347537878787887,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.6796875,"distances_sum":1748.9356388861893}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9603651556776561,"seconds":6.452202796936035e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2523.1455703650963}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8899012445887454,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.21875,"distances_sum":1996.9202819801885}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8990956959706967,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.1875,"distances_sum":2055.198697063785}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9603651556776561,"seconds":6.452202796936035e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2523.1455703650963}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790006868131871,"seconds":6.835907697677612e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9375,"distances_sum":2660.5208326500997}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857145,"seconds":6.2659382820129395e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9765625,"distances_sum":2679.4706954601106}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9729567307692312,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9453125,"distances_sum":2622.102964348055}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609947344322348,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8203125,"distances_sum":2557.5364248762767}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679143772893777,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.890625,"distances_sum":2578.8245647138333}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857145,"seconds":6.2659382820129395e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9765625,"distances_sum":2679.4706954601106}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857145,"seconds":6.2659382820129395e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9765625,"distances_sum":2679.4706954601106}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2626953125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2626953125,"f1":null,"seconds":3.287568688392639e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.9296875,"distances_sum":643.5854511256911}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8429485445110453,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.9765625,"distances_sum":1753.1122208729048}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.8429485445110453,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.9765625,"distances_sum":1753.1122208729048}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9329186438561445,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8046875,"distances_sum":2305.658090160979}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8462469821844829,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.9453125,"distances_sum":1776.644291267843}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9329186438561445,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8046875,"distances_sum":2305.658090160979}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9406338453213461,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.734375,"distances_sum":2390.1696373170757}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9656650641025646,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":2576.3588464637337}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9656650641025646,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":2576.3588464637337}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9656650641025646,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":2576.3588464637337}}, n: 9
inertia(cfft.distances) = 21.17163994301601
inertia(cdnet.distances) = 21.800695503842572
inertia(crand.distances) = 22.897457379921683
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9355555555555556
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9422222222222222
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9422222222222222
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9333333333333332
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8688888888888888
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9444444444444443
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8711111111111111
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9155555555555556
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9133333333333334
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8711111111111111
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.931111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8777777777777778
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8933333333333332
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8866666666666666
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9111111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 3, 2, 1, 2, 2, 3, 1, 3, 3, 1, 3, 2, 2, 3, 3, 2, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 1, 3]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.44066666672893395] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.44066666672893395, 0.18482268567108892] ***
*** starting iteration: 2; err: [Inf, 0.44066666672893395, 0.18482268567108892] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.44066666672893395, 0.18482268567108892, 0.16808938383638877] ***
*** starting iteration: 3; err: [Inf, 0.44066666672893395, 0.18482268567108892, 0.16808938383638877] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.44066666672893395, 0.18482268567108892, 0.16808938383638877, 0.16418100697894997] ***
*** starting iteration: 4; err: [Inf, 0.44066666672893395, 0.18482268567108892, 0.16808938383638877, 0.16418100697894997] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.44066666672893395, 0.18482268567108892, 0.16808938383638877, 0.16418100697894997, 0.16349131641382694] ***
*** finished computation of 12 references, err: [Inf, 0.44066666672893395, 0.18482268567108892, 0.16808938383638877, 0.16418100697894997, 0.16349131641382694] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 2.977109882901075] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.977109882901075, 0.9341329823628751] ***
*** starting iteration: 2; err: [Inf, 2.977109882901075, 0.9341329823628751] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.977109882901075, 0.9341329823628751, 0.4439156201791013] ***
*** starting iteration: 3; err: [Inf, 2.977109882901075, 0.9341329823628751, 0.4439156201791013] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.977109882901075, 0.9341329823628751, 0.4439156201791013, 0.40311497220096615] ***
*** starting iteration: 4; err: [Inf, 2.977109882901075, 0.9341329823628751, 0.4439156201791013, 0.40311497220096615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.977109882901075, 0.9341329823628751, 0.4439156201791013, 0.40311497220096615, 0.3841896896938668] ***
*** starting iteration: 5; err: [Inf, 2.977109882901075, 0.9341329823628751, 0.4439156201791013, 0.40311497220096615, 0.3841896896938668] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.977109882901075, 0.9341329823628751, 0.4439156201791013, 0.40311497220096615, 0.3841896896938668, 0.37998028624417357] ***
*** starting iteration: 6; err: [Inf, 2.977109882901075, 0.9341329823628751, 0.4439156201791013, 0.40311497220096615, 0.3841896896938668, 0.37998028624417357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.977109882901075, 0.9341329823628751, 0.4439156201791013, 0.40311497220096615, 0.3841896896938668, 0.37998028624417357, 0.3775711010822633] ***
*** starting iteration: 7; err: [Inf, 2.977109882901075, 0.9341329823628751, 0.4439156201791013, 0.40311497220096615, 0.3841896896938668, 0.37998028624417357, 0.3775711010822633] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.977109882901075, 0.9341329823628751, 0.4439156201791013, 0.40311497220096615, 0.3841896896938668, 0.37998028624417357, 0.3775711010822633, 0.3773543305754798] ***
*** finished computation of 3 references, err: [Inf, 2.977109882901075, 0.9341329823628751, 0.4439156201791013, 0.40311497220096615, 0.3841896896938668, 0.37998028624417357, 0.3775711010822633, 0.3773543305754798] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 12]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8619162884384802] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8619162884384802, 0.38110523914892996] ***
*** starting iteration: 2; err: [Inf, 0.8619162884384802, 0.38110523914892996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8619162884384802, 0.38110523914892996, 0.3775711010822633] ***
*** starting iteration: 3; err: [Inf, 0.8619162884384802, 0.38110523914892996, 0.3775711010822633] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8619162884384802, 0.38110523914892996, 0.3775711010822633, 0.3773543305754798] ***
*** finished computation of 3 references, err: [Inf, 0.8619162884384802, 0.38110523914892996, 0.3775711010822633, 0.3773543305754798] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 12]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.924880098119709] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.924880098119709, 0.38598315411247114] ***
*** starting iteration: 2; err: [Inf, 0.924880098119709, 0.38598315411247114] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.924880098119709, 0.38598315411247114, 0.36605705115169485] ***
*** starting iteration: 3; err: [Inf, 0.924880098119709, 0.38598315411247114, 0.36605705115169485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.924880098119709, 0.38598315411247114, 0.36605705115169485, 0.3589688517968513] ***
*** starting iteration: 4; err: [Inf, 0.924880098119709, 0.38598315411247114, 0.36605705115169485, 0.3589688517968513] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.924880098119709, 0.38598315411247114, 0.36605705115169485, 0.3589688517968513, 0.3582663442030889] ***
*** finished computation of 3 references, err: [Inf, 0.924880098119709, 0.38598315411247114, 0.36605705115169485, 0.3589688517968513, 0.3582663442030889] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 11]]
** centroid: 1, normalized-entropy: 0.7849920887641585, [(2, 36), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8253389179684036] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8253389179684036, 0.3884494428755741] ***
*** starting iteration: 2; err: [Inf, 0.8253389179684036, 0.3884494428755741] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8253389179684036, 0.3884494428755741, 0.35332626641389675] ***
*** starting iteration: 3; err: [Inf, 0.8253389179684036, 0.3884494428755741, 0.35332626641389675] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8253389179684036, 0.3884494428755741, 0.35332626641389675, 0.347895493960506] ***
*** starting iteration: 4; err: [Inf, 0.8253389179684036, 0.3884494428755741, 0.35332626641389675, 0.347895493960506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8253389179684036, 0.3884494428755741, 0.35332626641389675, 0.347895493960506, 0.3471638428375245] ***
*** finished computation of 3 references, err: [Inf, 0.8253389179684036, 0.3884494428755741, 0.35332626641389675, 0.347895493960506, 0.3471638428375245] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 6]]
** centroid: 1, normalized-entropy: 0.6394571324851642, [(2, 31), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 27]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 3), (3, 27)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5774000026439472] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5774000026439472, 0.5510489147338223] ***
*** starting iteration: 2; err: [Inf, 1.5774000026439472, 0.5510489147338223] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5774000026439472, 0.5510489147338223, 0.5453475531846935] ***
*** starting iteration: 3; err: [Inf, 1.5774000026439472, 0.5510489147338223, 0.5453475531846935] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5774000026439472, 0.5510489147338223, 0.5453475531846935, 0.5426785741776544] ***
*** finished computation of 3 references, err: [Inf, 1.5774000026439472, 0.5510489147338223, 0.5453475531846935, 0.5426785741776544] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 12]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2841000078836478] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2841000078836478, 0.5395847921492757] ***
*** starting iteration: 2; err: [Inf, 1.2841000078836478, 0.5395847921492757] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2841000078836478, 0.5395847921492757, 0.5151782779014021] ***
*** starting iteration: 3; err: [Inf, 1.2841000078836478, 0.5395847921492757, 0.5151782779014021] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2841000078836478, 0.5395847921492757, 0.5151782779014021, 0.5146539671294419] ***
*** finished computation of 3 references, err: [Inf, 1.2841000078836478, 0.5395847921492757, 0.5151782779014021, 0.5146539671294419] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 36, 12]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 36), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9913000017121916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9913000017121916, 0.5160824038396619] ***
*** starting iteration: 2; err: [Inf, 0.9913000017121916, 0.5160824038396619] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9913000017121916, 0.5160824038396619, 0.5129571507774816] ***
*** starting iteration: 3; err: [Inf, 0.9913000017121916, 0.5160824038396619, 0.5129571507774816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9913000017121916, 0.5160824038396619, 0.5129571507774816, 0.5120314152840586] ***
*** finished computation of 3 references, err: [Inf, 0.9913000017121916, 0.5160824038396619, 0.5129571507774816, 0.5120314152840586] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 31]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 8), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 26, 2]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 26), (3, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.795211617937313] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.795211617937313, 1.7328520203167808] ***
*** starting iteration: 2; err: [Inf, 4.795211617937313, 1.7328520203167808] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.795211617937313, 1.7328520203167808, 0.5864491173196569] ***
*** starting iteration: 3; err: [Inf, 4.795211617937313, 1.7328520203167808, 0.5864491173196569] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.795211617937313, 1.7328520203167808, 0.5864491173196569, 0.37976846074761] ***
*** starting iteration: 4; err: [Inf, 4.795211617937313, 1.7328520203167808, 0.5864491173196569, 0.37976846074761] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.795211617937313, 1.7328520203167808, 0.5864491173196569, 0.37976846074761, 0.35923967908850046] ***
*** starting iteration: 5; err: [Inf, 4.795211617937313, 1.7328520203167808, 0.5864491173196569, 0.37976846074761, 0.35923967908850046] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.795211617937313, 1.7328520203167808, 0.5864491173196569, 0.37976846074761, 0.35923967908850046, 0.3582663442030889] ***
*** finished computation of 3 references, err: [Inf, 4.795211617937313, 1.7328520203167808, 0.5864491173196569, 0.37976846074761, 0.35923967908850046, 0.3582663442030889] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 36, 11]]
** centroid: 2, normalized-entropy: 0.7849920887641585, [(2, 36), (3, 11)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.48139947208332357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48139947208332357, 0.34584084363068357] ***
*** starting iteration: 2; err: [Inf, 0.48139947208332357, 0.34584084363068357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48139947208332357, 0.34584084363068357, 0.34589199052739517] ***
*** finished computation of 3 references, err: [Inf, 0.48139947208332357, 0.34584084363068357, 0.34589199052739517] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 3]]
** centroid: 1, normalized-entropy: 0.44886448872302936, [(2, 29), (3, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 30]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 5), (3, 30)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31785863656195434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31785863656195434, 0.17058227099479012] ***
*** starting iteration: 2; err: [Inf, 0.31785863656195434, 0.17058227099479012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31785863656195434, 0.17058227099479012, 0.166604485602849] ***
*** starting iteration: 3; err: [Inf, 0.31785863656195434, 0.17058227099479012, 0.166604485602849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31785863656195434, 0.17058227099479012, 0.166604485602849, 0.16632507770920932] ***
*** finished computation of 7 references, err: [Inf, 0.31785863656195434, 0.17058227099479012, 0.166604485602849, 0.16632507770920932] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 4]]
** centroid: 2, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 7, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41235268448141327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41235268448141327, 0.25748747054592597] ***
*** starting iteration: 2; err: [Inf, 0.41235268448141327, 0.25748747054592597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41235268448141327, 0.25748747054592597, 0.2159173196303376] ***
*** starting iteration: 3; err: [Inf, 0.41235268448141327, 0.25748747054592597, 0.2159173196303376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41235268448141327, 0.25748747054592597, 0.2159173196303376, 0.21302427183038547] ***
*** finished computation of 7 references, err: [Inf, 0.41235268448141327, 0.25748747054592597, 0.2159173196303376, 0.21302427183038547] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 5, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 11, 12]]
** centroid: 7, normalized-entropy: 0.9986359641585719, [(2, 11), (3, 12)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2691972250910745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2691972250910745, 0.18675553404697812] ***
*** starting iteration: 2; err: [Inf, 0.2691972250910745, 0.18675553404697812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2691972250910745, 0.18675553404697812, 0.1678863723354036] ***
*** starting iteration: 3; err: [Inf, 0.2691972250910745, 0.18675553404697812, 0.1678863723354036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2691972250910745, 0.18675553404697812, 0.1678863723354036, 0.1644644578962348] ***
*** finished computation of 7 references, err: [Inf, 0.2691972250910745, 0.18675553404697812, 0.1678863723354036, 0.1644644578962348] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 4, 11]]
** centroid: 6, normalized-entropy: 0.8366407419411671, [(2, 4), (3, 11)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 7, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.728875757606005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.728875757606005, 0.2522236155125833] ***
*** starting iteration: 2; err: [Inf, 0.728875757606005, 0.2522236155125833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.728875757606005, 0.2522236155125833, 0.23643443404432893] ***
*** starting iteration: 3; err: [Inf, 0.728875757606005, 0.2522236155125833, 0.23643443404432893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.728875757606005, 0.2522236155125833, 0.23643443404432893, 0.22499616413822465] ***
*** finished computation of 7 references, err: [Inf, 0.728875757606005, 0.2522236155125833, 0.23643443404432893, 0.22499616413822465] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 13]]
** centroid: 1, normalized-entropy: 0.9876925088958032, [(2, 10), (3, 13)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 4, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 7: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7101662160396622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7101662160396622, 0.2919996213770077] ***
*** starting iteration: 2; err: [Inf, 0.7101662160396622, 0.2919996213770077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7101662160396622, 0.2919996213770077, 0.24340735029781382] ***
*** starting iteration: 3; err: [Inf, 0.7101662160396622, 0.2919996213770077, 0.24340735029781382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7101662160396622, 0.2919996213770077, 0.24340735029781382, 0.22278265540716918] ***
*** finished computation of 7 references, err: [Inf, 0.7101662160396622, 0.2919996213770077, 0.24340735029781382, 0.22278265540716918] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 4]]
** centroid: 2, normalized-entropy: 1.0, [(2, 4), (3, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 6, 7]]
** centroid: 6, normalized-entropy: 0.9957274520849256, [(2, 6), (3, 7)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 5, 6]]
** centroid: 7, normalized-entropy: 0.9940302114769566, [(2, 5), (3, 6)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3157043265051985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3157043265051985, 0.23273409565814782] ***
*** starting iteration: 2; err: [Inf, 0.3157043265051985, 0.23273409565814782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3157043265051985, 0.23273409565814782, 0.2112048425795196] ***
*** starting iteration: 3; err: [Inf, 0.3157043265051985, 0.23273409565814782, 0.2112048425795196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3157043265051985, 0.23273409565814782, 0.2112048425795196, 0.19971887921766832] ***
*** finished computation of 7 references, err: [Inf, 0.3157043265051985, 0.23273409565814782, 0.2112048425795196, 0.19971887921766832] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 11]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 12, 5]]
** centroid: 5, normalized-entropy: 0.8739810481273581, [(2, 12), (3, 5)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.7614209990077523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7614209990077523, 0.6945909198789866] ***
*** starting iteration: 2; err: [Inf, 1.7614209990077523, 0.6945909198789866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7614209990077523, 0.6945909198789866, 0.6926333047073681] ***
*** starting iteration: 3; err: [Inf, 1.7614209990077523, 0.6945909198789866, 0.6926333047073681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7614209990077523, 0.6945909198789866, 0.6926333047073681, 0.6851050903912079] ***
*** finished computation of 3 references, err: [Inf, 1.7614209990077523, 0.6945909198789866, 0.6926333047073681, 0.6851050903912079] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 35]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(2, 30), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7421206179679656] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7421206179679656, 0.36485611143882823] ***
*** starting iteration: 2; err: [Inf, 0.7421206179679656, 0.36485611143882823] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7421206179679656, 0.36485611143882823, 0.36241202836937236] ***
*** starting iteration: 3; err: [Inf, 0.7421206179679656, 0.36485611143882823, 0.36241202836937236] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7421206179679656, 0.36485611143882823, 0.36241202836937236, 0.3611677870480514] ***
*** finished computation of 3 references, err: [Inf, 0.7421206179679656, 0.36485611143882823, 0.36241202836937236, 0.3611677870480514] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 8]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(2, 34), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.3924018944004657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3924018944004657, 0.4730808065415198] ***
*** starting iteration: 2; err: [Inf, 2.3924018944004657, 0.4730808065415198] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3924018944004657, 0.4730808065415198, 0.3678826833672788] ***
*** starting iteration: 3; err: [Inf, 2.3924018944004657, 0.4730808065415198, 0.3678826833672788] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3924018944004657, 0.4730808065415198, 0.3678826833672788, 0.347895493960506] ***
*** finished computation of 3 references, err: [Inf, 2.3924018944004657, 0.4730808065415198, 0.3678826833672788, 0.347895493960506] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 27]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 3), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 6]]
** centroid: 3, normalized-entropy: 0.6394571324851642, [(2, 31), (3, 6)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7862999986896784] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7862999986896784, 1.0350462549791963] ***
*** finished computation of 3 references, err: [Inf, 1.7862999986896784, 1.0350462549791963] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [5, 3, 0]]
** centroid: 1, normalized-entropy: 0.954434002924965, [(1, 5), (2, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 35]]
** centroid: 3, normalized-entropy: 0.9879565014919159, [(2, 27), (3, 35)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.046600000363482] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.046600000363482, 0.5273367048874382] ***
*** finished computation of 3 references, err: [Inf, 1.046600000363482, 0.5273367048874382] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 9]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.0356000051700973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0356000051700973, 1.0577949235035062] ***
*** finished computation of 3 references, err: [Inf, 2.0356000051700973, 1.0577949235035062] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [20, 3, 0]]
** centroid: 2, normalized-entropy: 0.5586293734521991, [(1, 20), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 33]]
** centroid: 3, normalized-entropy: 0.9992954443621548, [(2, 31), (3, 33)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7335307306071313] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7335307306071313, 0.42675276872203793] ***
*** finished computation of 3 references, err: [Inf, 1.7335307306071313, 0.42675276872203793] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 11]]
** centroid: 3, normalized-entropy: 0.8680403986166402, [(2, 27), (3, 11)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.5852908168341644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5852908168341644, 0.762040450532981] ***
*** finished computation of 3 references, err: [Inf, 2.5852908168341644, 0.762040450532981] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 26]]
** centroid: 1, normalized-entropy: 0.9922666387194963, [(2, 32), (3, 26)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [32, 4, 0]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(1, 32), (2, 4)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.196400549263695] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.196400549263695, 1.3994280513726522] ***
*** finished computation of 3 references, err: [Inf, 4.196400549263695, 1.3994280513726522] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [33, 20, 1]]
** centroid: 1, normalized-entropy: 0.6760337214886167, [(1, 33), (2, 20), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 24]]
** centroid: 3, normalized-entropy: 0.9494520153879484, [(2, 14), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3503507123661095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3503507123661095, 0.21835181882675248] ***
*** starting iteration: 2; err: [Inf, 0.3503507123661095, 0.21835181882675248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3503507123661095, 0.21835181882675248, 0.2101444468554696] ***
*** starting iteration: 3; err: [Inf, 0.3503507123661095, 0.21835181882675248, 0.2101444468554696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3503507123661095, 0.21835181882675248, 0.2101444468554696, 0.2049268418043494] ***
*** starting iteration: 4; err: [Inf, 0.3503507123661095, 0.21835181882675248, 0.2101444468554696, 0.2049268418043494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3503507123661095, 0.21835181882675248, 0.2101444468554696, 0.2049268418043494, 0.20478552234346156] ***
*** finished computation of 7 references, err: [Inf, 0.3503507123661095, 0.21835181882675248, 0.2101444468554696, 0.2049268418043494, 0.20478552234346156] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 7, 4]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(2, 7), (3, 4)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 6, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 5, 8]]
** centroid: 7, normalized-entropy: 0.961236604722876, [(2, 5), (3, 8)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29716702231424363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29716702231424363, 0.20243552196900186] ***
*** starting iteration: 2; err: [Inf, 0.29716702231424363, 0.20243552196900186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29716702231424363, 0.20243552196900186, 0.18980213263926213] ***
*** starting iteration: 3; err: [Inf, 0.29716702231424363, 0.20243552196900186, 0.18980213263926213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29716702231424363, 0.20243552196900186, 0.18980213263926213, 0.18356070643579767] ***
*** starting iteration: 4; err: [Inf, 0.29716702231424363, 0.20243552196900186, 0.18980213263926213, 0.18356070643579767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29716702231424363, 0.20243552196900186, 0.18980213263926213, 0.18356070643579767, 0.17647113896027616] ***
*** starting iteration: 5; err: [Inf, 0.29716702231424363, 0.20243552196900186, 0.18980213263926213, 0.18356070643579767, 0.17647113896027616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29716702231424363, 0.20243552196900186, 0.18980213263926213, 0.18356070643579767, 0.17647113896027616, 0.17427106601023873] ***
*** starting iteration: 6; err: [Inf, 0.29716702231424363, 0.20243552196900186, 0.18980213263926213, 0.18356070643579767, 0.17647113896027616, 0.17427106601023873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29716702231424363, 0.20243552196900186, 0.18980213263926213, 0.18356070643579767, 0.17647113896027616, 0.17427106601023873, 0.17348700155205196] ***
*** finished computation of 7 references, err: [Inf, 0.29716702231424363, 0.20243552196900186, 0.18980213263926213, 0.18356070643579767, 0.17647113896027616, 0.17427106601023873, 0.17348700155205196] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 4, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 5, 11]]
** centroid: 7, normalized-entropy: 0.8960382325345574, [(2, 5), (3, 11)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.7825138583464162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7825138583464162, 0.22759181649598687] ***
*** starting iteration: 2; err: [Inf, 1.7825138583464162, 0.22759181649598687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7825138583464162, 0.22759181649598687, 0.1997494144813867] ***
*** starting iteration: 3; err: [Inf, 1.7825138583464162, 0.22759181649598687, 0.1997494144813867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7825138583464162, 0.22759181649598687, 0.1997494144813867, 0.19892358053476603] ***
*** finished computation of 7 references, err: [Inf, 1.7825138583464162, 0.22759181649598687, 0.1997494144813867, 0.19892358053476603] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 13]]
** centroid: 1, normalized-entropy: 0.6962122601251459, [(2, 3), (3, 13)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 5, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 4]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 8), (3, 4)]
*** center 7: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5507380156889099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5507380156889099, 0.255397055032666] ***
*** starting iteration: 2; err: [Inf, 0.5507380156889099, 0.255397055032666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5507380156889099, 0.255397055032666, 0.20655281369527623] ***
*** starting iteration: 3; err: [Inf, 0.5507380156889099, 0.255397055032666, 0.20655281369527623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5507380156889099, 0.255397055032666, 0.20655281369527623, 0.19217608410183884] ***
*** finished computation of 7 references, err: [Inf, 0.5507380156889099, 0.255397055032666, 0.20655281369527623, 0.19217608410183884] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 2]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3922532018886858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3922532018886858, 0.2184823490718046] ***
*** starting iteration: 2; err: [Inf, 0.3922532018886858, 0.2184823490718046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3922532018886858, 0.2184823490718046, 0.19930989681925712] ***
*** starting iteration: 3; err: [Inf, 0.3922532018886858, 0.2184823490718046, 0.19930989681925712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3922532018886858, 0.2184823490718046, 0.19930989681925712, 0.18856275764051972] ***
*** finished computation of 7 references, err: [Inf, 0.3922532018886858, 0.2184823490718046, 0.19930989681925712, 0.18856275764051972] ***
*** center 1: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 18]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 4), (3, 18)]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.318059315268654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.318059315268654, 0.22113364209524178] ***
*** starting iteration: 2; err: [Inf, 0.318059315268654, 0.22113364209524178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.318059315268654, 0.22113364209524178, 0.18901625725422286] ***
*** starting iteration: 3; err: [Inf, 0.318059315268654, 0.22113364209524178, 0.18901625725422286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.318059315268654, 0.22113364209524178, 0.18901625725422286, 0.18545026899073125] ***
*** finished computation of 7 references, err: [Inf, 0.318059315268654, 0.22113364209524178, 0.18901625725422286, 0.18545026899073125] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 5]]
** centroid: 3, normalized-entropy: 0.9798687566511527, [(2, 7), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 4, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 3]]
** centroid: 6, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 7: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4215848452387139] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215848452387139, 0.21493553543587157] ***
*** starting iteration: 2; err: [Inf, 0.4215848452387139, 0.21493553543587157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158] ***
*** starting iteration: 3; err: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158, 0.20674570479166018] ***
*** starting iteration: 4; err: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158, 0.20674570479166018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158, 0.20674570479166018, 0.19327950464891472] ***
*** starting iteration: 5; err: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158, 0.20674570479166018, 0.19327950464891472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158, 0.20674570479166018, 0.19327950464891472, 0.18771110220449588] ***
*** starting iteration: 6; err: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158, 0.20674570479166018, 0.19327950464891472, 0.18771110220449588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158, 0.20674570479166018, 0.19327950464891472, 0.18771110220449588, 0.1811370528354572] ***
*** starting iteration: 7; err: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158, 0.20674570479166018, 0.19327950464891472, 0.18771110220449588, 0.1811370528354572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158, 0.20674570479166018, 0.19327950464891472, 0.18771110220449588, 0.1811370528354572, 0.17469627034768404] ***
*** starting iteration: 8; err: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158, 0.20674570479166018, 0.19327950464891472, 0.18771110220449588, 0.1811370528354572, 0.17469627034768404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158, 0.20674570479166018, 0.19327950464891472, 0.18771110220449588, 0.1811370528354572, 0.17469627034768404, 0.1718639821082473] ***
*** starting iteration: 9; err: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158, 0.20674570479166018, 0.19327950464891472, 0.18771110220449588, 0.1811370528354572, 0.17469627034768404, 0.1718639821082473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158, 0.20674570479166018, 0.19327950464891472, 0.18771110220449588, 0.1811370528354572, 0.17469627034768404, 0.1718639821082473, 0.17133960510663354] ***
*** finished computation of 7 references, err: [Inf, 0.4215848452387139, 0.21493553543587157, 0.2094740808966158, 0.20674570479166018, 0.19327950464891472, 0.18771110220449588, 0.1811370528354572, 0.17469627034768404, 0.1718639821082473, 0.17133960510663354] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 13, 10]]
** centroid: 6, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 7: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3252160890847891] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3252160890847891, 0.1935703409036573] ***
*** starting iteration: 2; err: [Inf, 0.3252160890847891, 0.1935703409036573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3252160890847891, 0.1935703409036573, 0.18493778335950523] ***
*** starting iteration: 3; err: [Inf, 0.3252160890847891, 0.1935703409036573, 0.18493778335950523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3252160890847891, 0.1935703409036573, 0.18493778335950523, 0.1832085192067322] ***
*** starting iteration: 4; err: [Inf, 0.3252160890847891, 0.1935703409036573, 0.18493778335950523, 0.1832085192067322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3252160890847891, 0.1935703409036573, 0.18493778335950523, 0.1832085192067322, 0.18274027930262382] ***
*** finished computation of 7 references, err: [Inf, 0.3252160890847891, 0.1935703409036573, 0.18493778335950523, 0.1832085192067322, 0.18274027930262382] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 4, 10]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 8, 3]]
** centroid: 6, normalized-entropy: 0.8453509366224364, [(2, 8), (3, 3)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2789000863343663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2789000863343663, 0.17708530000627667] ***
*** starting iteration: 2; err: [Inf, 0.2789000863343663, 0.17708530000627667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2789000863343663, 0.17708530000627667, 0.16470389258212165] ***
*** starting iteration: 3; err: [Inf, 0.2789000863343663, 0.17708530000627667, 0.16470389258212165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2789000863343663, 0.17708530000627667, 0.16470389258212165, 0.15791711297331532] ***
*** starting iteration: 4; err: [Inf, 0.2789000863343663, 0.17708530000627667, 0.16470389258212165, 0.15791711297331532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2789000863343663, 0.17708530000627667, 0.16470389258212165, 0.15791711297331532, 0.15564736485936645] ***
*** starting iteration: 5; err: [Inf, 0.2789000863343663, 0.17708530000627667, 0.16470389258212165, 0.15791711297331532, 0.15564736485936645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2789000863343663, 0.17708530000627667, 0.16470389258212165, 0.15791711297331532, 0.15564736485936645, 0.15460229129569408] ***
*** starting iteration: 6; err: [Inf, 0.2789000863343663, 0.17708530000627667, 0.16470389258212165, 0.15791711297331532, 0.15564736485936645, 0.15460229129569408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2789000863343663, 0.17708530000627667, 0.16470389258212165, 0.15791711297331532, 0.15564736485936645, 0.15460229129569408, 0.1533610765115057] ***
*** starting iteration: 7; err: [Inf, 0.2789000863343663, 0.17708530000627667, 0.16470389258212165, 0.15791711297331532, 0.15564736485936645, 0.15460229129569408, 0.1533610765115057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2789000863343663, 0.17708530000627667, 0.16470389258212165, 0.15791711297331532, 0.15564736485936645, 0.15460229129569408, 0.1533610765115057, 0.15305453911650918] ***
*** finished computation of 7 references, err: [Inf, 0.2789000863343663, 0.17708530000627667, 0.16470389258212165, 0.15791711297331532, 0.15564736485936645, 0.15460229129569408, 0.1533610765115057, 0.15305453911650918] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 13, 5]]
** centroid: 6, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5298000156642408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5298000156642408, 0.2863013847522141] ***
*** starting iteration: 2; err: [Inf, 0.5298000156642408, 0.2863013847522141] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5298000156642408, 0.2863013847522141, 0.27380854087595885] ***
*** starting iteration: 3; err: [Inf, 0.5298000156642408, 0.2863013847522141, 0.27380854087595885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5298000156642408, 0.2863013847522141, 0.27380854087595885, 0.2661881436185538] ***
*** finished computation of 7 references, err: [Inf, 0.5298000156642408, 0.2863013847522141, 0.27380854087595885, 0.2661881436185538] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 11]]
** centroid: 3, normalized-entropy: 0.9949848281859699, [(2, 13), (3, 11)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 6, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 5.22559997935046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 5.22559997935046, 1.2071768621534167] ***
*** starting iteration: 2; err: [Inf, 5.22559997935046, 1.2071768621534167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 5.22559997935046, 1.2071768621534167, 0.4255088708442136] ***
*** starting iteration: 3; err: [Inf, 5.22559997935046, 1.2071768621534167, 0.4255088708442136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 5.22559997935046, 1.2071768621534167, 0.4255088708442136, 0.34891122588276874] ***
*** finished computation of 7 references, err: [Inf, 5.22559997935046, 1.2071768621534167, 0.4255088708442136, 0.34891122588276874] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 8]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 8)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 27, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 5, 8]]
** centroid: 7, normalized-entropy: 0.961236604722876, [(2, 5), (3, 8)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.7593999967054064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7593999967054064, 0.8482402165025941] ***
*** starting iteration: 2; err: [Inf, 2.7593999967054064, 0.8482402165025941] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7593999967054064, 0.8482402165025941, 0.3907124707129026] ***
*** starting iteration: 3; err: [Inf, 2.7593999967054064, 0.8482402165025941, 0.3907124707129026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7593999967054064, 0.8482402165025941, 0.3907124707129026, 0.29422829063071954] ***
*** finished computation of 7 references, err: [Inf, 2.7593999967054064, 0.8482402165025941, 0.3907124707129026, 0.29422829063071954] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 2, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 4]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 1), (3, 4)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 2]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4365551304385755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4365551304385755, 0.3869371075271469] ***
*** finished computation of 3 references, err: [Inf, 0.4365551304385755, 0.3869371075271469] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 14]]
** centroid: 1, normalized-entropy: 0.9023932827949788, [(2, 30), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.544841484921676] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.544841484921676, 0.7051318022314131] ***
*** finished computation of 3 references, err: [Inf, 2.544841484921676, 0.7051318022314131] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [32, 3, 0]]
** centroid: 1, normalized-entropy: 0.4220005168831531, [(1, 32), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 11]]
** centroid: 2, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.0045284294306067] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0045284294306067, 0.5584609278705867] ***
*** finished computation of 3 references, err: [Inf, 2.0045284294306067, 0.5584609278705867] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 7]]
** centroid: 1, normalized-entropy: 0.6892019851173655, [(2, 31), (3, 7)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [33, 3, 0]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(1, 33), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9979000045617876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9979000045617876, 0.5473667981686756] ***
*** starting iteration: 2; err: [Inf, 0.9979000045617876, 0.5473667981686756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9979000045617876, 0.5473667981686756, 0.54177274713549] ***
*** starting iteration: 3; err: [Inf, 0.9979000045617876, 0.5473667981686756, 0.54177274713549] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9979000045617876, 0.5473667981686756, 0.54177274713549, 0.54177274713549] ***
*** finished computation of 3 references, err: [Inf, 0.9979000045617876, 0.5473667981686756, 0.54177274713549, 0.54177274713549] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 27, 11]]
** centroid: 2, normalized-entropy: 0.8680403986166402, [(2, 27), (3, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2054999938324193] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2054999938324193, 0.8821599152457754] ***
*** starting iteration: 2; err: [Inf, 1.2054999938324193, 0.8821599152457754] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2054999938324193, 0.8821599152457754, 0.8729765026703944] ***
*** starting iteration: 3; err: [Inf, 1.2054999938324193, 0.8821599152457754, 0.8729765026703944] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2054999938324193, 0.8821599152457754, 0.8729765026703944, 0.8664377245391428] ***
*** finished computation of 3 references, err: [Inf, 1.2054999938324193, 0.8821599152457754, 0.8729765026703944, 0.8664377245391428] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 32]]
** centroid: 2, normalized-entropy: 0.9993375041688846, [(2, 34), (3, 32)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [20, 2, 0]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(1, 20), (2, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7006999901427746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7006999901427746, 0.49594292952613583] ***
*** starting iteration: 2; err: [Inf, 1.7006999901427746, 0.49594292952613583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7006999901427746, 0.49594292952613583, 0.4953749824684688] ***
*** finished computation of 3 references, err: [Inf, 1.7006999901427746, 0.49594292952613583, 0.4953749824684688] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 6]]
** centroid: 1, normalized-entropy: 0.6394571324851642, [(2, 31), (3, 6)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 27]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 3), (3, 27)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5196000008851857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5196000008851857, 0.2873144071762413] ***
*** starting iteration: 2; err: [Inf, 0.5196000008851857, 0.2873144071762413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5196000008851857, 0.2873144071762413, 0.28252415180131024] ***
*** starting iteration: 3; err: [Inf, 0.5196000008851857, 0.2873144071762413, 0.28252415180131024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5196000008851857, 0.2873144071762413, 0.28252415180131024, 0.28252415180131024] ***
*** finished computation of 7 references, err: [Inf, 0.5196000008851857, 0.2873144071762413, 0.28252415180131024, 0.28252415180131024] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 4]]
** centroid: 3, normalized-entropy: 0.9852281360342514, [(2, 3), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 6]]
** centroid: 4, normalized-entropy: 0.8997437586982626, [(2, 13), (3, 6)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4645000017082441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4645000017082441, 0.2900858361145416] ***
*** starting iteration: 2; err: [Inf, 0.4645000017082441, 0.2900858361145416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4645000017082441, 0.2900858361145416, 0.27901428145699286] ***
*** starting iteration: 3; err: [Inf, 0.4645000017082441, 0.2900858361145416, 0.27901428145699286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4645000017082441, 0.2900858361145416, 0.27901428145699286, 0.27306488624966574] ***
*** starting iteration: 4; err: [Inf, 0.4645000017082441, 0.2900858361145416, 0.27901428145699286, 0.27306488624966574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4645000017082441, 0.2900858361145416, 0.27901428145699286, 0.27306488624966574, 0.26106906120410045] ***
*** starting iteration: 5; err: [Inf, 0.4645000017082441, 0.2900858361145416, 0.27901428145699286, 0.27306488624966574, 0.26106906120410045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4645000017082441, 0.2900858361145416, 0.27901428145699286, 0.27306488624966574, 0.26106906120410045, 0.256516508114421] ***
*** starting iteration: 6; err: [Inf, 0.4645000017082441, 0.2900858361145416, 0.27901428145699286, 0.27306488624966574, 0.26106906120410045, 0.256516508114421] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4645000017082441, 0.2900858361145416, 0.27901428145699286, 0.27306488624966574, 0.26106906120410045, 0.256516508114421, 0.2546918758138322] ***
*** starting iteration: 7; err: [Inf, 0.4645000017082441, 0.2900858361145416, 0.27901428145699286, 0.27306488624966574, 0.26106906120410045, 0.256516508114421, 0.2546918758138322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4645000017082441, 0.2900858361145416, 0.27901428145699286, 0.27306488624966574, 0.26106906120410045, 0.256516508114421, 0.2546918758138322, 0.25445473007713526] ***
*** finished computation of 7 references, err: [Inf, 0.4645000017082441, 0.2900858361145416, 0.27901428145699286, 0.27306488624966574, 0.26106906120410045, 0.256516508114421, 0.2546918758138322, 0.25445473007713526] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 12]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 8), (3, 12)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6623000065406269] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6623000065406269, 0.23976756843602332] ***
*** starting iteration: 2; err: [Inf, 0.6623000065406269, 0.23976756843602332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6623000065406269, 0.23976756843602332, 0.21992245862010065] ***
*** starting iteration: 3; err: [Inf, 0.6623000065406269, 0.23976756843602332, 0.21992245862010065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6623000065406269, 0.23976756843602332, 0.21992245862010065, 0.21685734611398236] ***
*** starting iteration: 4; err: [Inf, 0.6623000065406269, 0.23976756843602332, 0.21992245862010065, 0.21685734611398236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6623000065406269, 0.23976756843602332, 0.21992245862010065, 0.21685734611398236, 0.21685734611398236] ***
*** finished computation of 7 references, err: [Inf, 0.6623000065406269, 0.23976756843602332, 0.21992245862010065, 0.21685734611398236, 0.21685734611398236] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 6]]
** centroid: 4, normalized-entropy: 0.9366673818775627, [(2, 11), (3, 6)]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 15
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 16
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.4589000022715906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4589000022715906, 0.25625700192372736] ***
*** starting iteration: 2; err: [Inf, 0.4589000022715906, 0.25625700192372736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4589000022715906, 0.25625700192372736, 0.24399838931284712] ***
*** starting iteration: 3; err: [Inf, 0.4589000022715906, 0.25625700192372736, 0.24399838931284712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4589000022715906, 0.25625700192372736, 0.24399838931284712, 0.24007656022968082] ***
*** finished computation of 7 references, err: [Inf, 0.4589000022715906, 0.25625700192372736, 0.24399838931284712, 0.24007656022968082] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 5]]
** centroid: 3, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
*** center 4: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4894000033911831] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4894000033911831, 0.23701185784341539] ***
*** starting iteration: 2; err: [Inf, 0.4894000033911831, 0.23701185784341539] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4894000033911831, 0.23701185784341539, 0.22260142707880845] ***
*** starting iteration: 3; err: [Inf, 0.4894000033911831, 0.23701185784341539, 0.22260142707880845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4894000033911831, 0.23701185784341539, 0.22260142707880845, 0.21825253665165875] ***
*** finished computation of 7 references, err: [Inf, 0.4894000033911831, 0.23701185784341539, 0.22260142707880845, 0.21825253665165875] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 13]]
** centroid: 6, normalized-entropy: 0.6962122601251459, [(2, 3), (3, 13)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6019999941708989] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6019999941708989, 0.28360623231068405] ***
*** starting iteration: 2; err: [Inf, 0.6019999941708989, 0.28360623231068405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6019999941708989, 0.28360623231068405, 0.26189537636096] ***
*** starting iteration: 3; err: [Inf, 0.6019999941708989, 0.28360623231068405, 0.26189537636096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6019999941708989, 0.28360623231068405, 0.26189537636096, 0.25068904516487556] ***
*** finished computation of 7 references, err: [Inf, 0.6019999941708989, 0.28360623231068405, 0.26189537636096, 0.25068904516487556] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 14]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 5]]
** centroid: 7, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
finished with 10 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 16
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 16
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 16
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 17
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.5917000021965143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5917000021965143, 0.34888571265944035] ***
*** starting iteration: 2; err: [Inf, 0.5917000021965143, 0.34888571265944035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5917000021965143, 0.34888571265944035, 0.30915590848392116] ***
*** starting iteration: 3; err: [Inf, 0.5917000021965143, 0.34888571265944035, 0.30915590848392116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5917000021965143, 0.34888571265944035, 0.30915590848392116, 0.30620297227982113] ***
*** finished computation of 7 references, err: [Inf, 0.5917000021965143, 0.34888571265944035, 0.30915590848392116, 0.30620297227982113] ***
*** center 1: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 4, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 7, 23]]
** centroid: 7, normalized-entropy: 0.7837769474847011, [(2, 7), (3, 23)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5156000006716998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5156000006716998, 0.30663581355194824] ***
*** starting iteration: 2; err: [Inf, 0.5156000006716998, 0.30663581355194824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5156000006716998, 0.30663581355194824, 0.28384270137554873] ***
*** starting iteration: 3; err: [Inf, 0.5156000006716998, 0.30663581355194824, 0.28384270137554873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5156000006716998, 0.30663581355194824, 0.28384270137554873, 0.26766281528391767] ***
*** finished computation of 7 references, err: [Inf, 0.5156000006716998, 0.30663581355194824, 0.28384270137554873, 0.26766281528391767] ***
*** center 1: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 7, 13]]
** centroid: 5, normalized-entropy: 0.9340680553754911, [(2, 7), (3, 13)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5049000041171732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5049000041171732, 0.27073553016143154] ***
*** starting iteration: 2; err: [Inf, 0.5049000041171732, 0.27073553016143154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5049000041171732, 0.27073553016143154, 0.2540597863832062] ***
*** starting iteration: 3; err: [Inf, 0.5049000041171732, 0.27073553016143154, 0.2540597863832062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5049000041171732, 0.27073553016143154, 0.2540597863832062, 0.24511079453516538] ***
*** finished computation of 7 references, err: [Inf, 0.5049000041171732, 0.27073553016143154, 0.2540597863832062, 0.24511079453516538] ***
*** center 1: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 4, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 17]]
** centroid: 5, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 17
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 17
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.5, 3.02, 4.700000000000001, 1.4600000000000002], [6.092307692307691, 2.7769230769230764, 5.061538461538461, 1.8307692307692305], [7.7, 3.8, 6.7, 2.2], [6.666666666666667, 3.188888888888889, 5.644444444444444, 2.266666666666667], [5.678260869565217, 2.7086956521739127, 4.117391304347825, 1.2434782608695654], [7.485714285714287, 2.9285714285714293, 6.342857142857143, 1.9857142857142855], [7.9, 3.8, 6.4, 2.0], [4.965714285714285, 3.3800000000000012, 1.4542857142857142, 0.2542857142857143]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 3, 3, 2, 3, 3, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.5600000000000005, 2.9999999999999996, 6.4, 2.06], [6.8, 3.05, 4.6499999999999995, 1.4249999999999998], [6.725, 3.0749999999999997, 5.3, 2.125], [5.015625, 3.4562500000000007, 1.471875, 0.22812500000000008], [5.896296296296295, 2.7185185185185183, 4.151851851851851, 1.2999999999999998], [6.533333333333334, 3.0666666666666664, 5.722222222222222, 2.2111111111111112], [6.016666666666667, 3.1833333333333336, 4.6000000000000005, 1.5666666666666667], [5.8428571428571425, 2.8285714285714287, 4.985714285714286, 1.9571428571428573], [6.3, 2.76, 4.779999999999999, 1.4600000000000002], [6.233333333333333, 2.583333333333333, 5.1499999999999995, 1.6666666666666667]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 1, 2, 3, 2, 3, 2, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.522727272727273, 2.6136363636363633, 3.940909090909092, 1.231818181818182], [5.039393939393939, 3.4212121212121205, 1.4666666666666666, 0.24848484848484853], [6.8, 2.966666666666667, 4.8999999999999995, 1.5333333333333332], [6.536363636363637, 2.9909090909090907, 5.3545454545454545, 2.072727272727273], [7.371428571428573, 3.1, 6.128571428571429, 1.957142857142857], [6.1499999999999995, 2.841666666666667, 4.616666666666666, 1.4583333333333333], [5.9399999999999995, 2.7399999999999998, 4.959999999999999, 1.8799999999999997], [6.612500000000001, 3.325, 5.750000000000001, 2.375], [7.6, 3.0, 6.6, 2.1]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 2, 3, 3, 2, 3, 3, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[34, 14, 1, 20, 4, 19, 14, 37, 41, 7, 15, 28, 34, 4, 17, 40, 40, 1, 1, 24, 38, 51, 32, 22, 21, 34, 30, 9, 34, 10, 23, 32, 31, 37, 46, 33, 34, 58, 35, 26, 13, 34, 35, 40, 41, 22, 29, 10, 44, 36, 39, 42, 70, 30, 10, 23, 47, 36, 42, 1, 9, 22, 31, 20, 26, 47, 48, 20, 43, 26, 9, 38, 21, 32, 5, 34, 55, 12, 24, 25, 27, 39, 53, 25, 35, 1, 43, 53, 37, 42, 32, 50, 20, 26, 40, 36, 44, 33, 26, 45, 31, 22, 43, 55, 47, 38, 21, 34, 33, 27, 64, 42, 33, 31, 51, 37, 26, 6, 36, 9, 54, 29, 23, 49, 45, 36, 35, 16, 34, 50, 53, 32, 34, 42, 14, 37, 66, 29, 46, 45, 33, 27, 38, 27, 35, 42, 26, 45, 60, 40, 48, 22, 30, 44, 36, 42, 30, 39, 23, 39, 41, 30, 40, 19, 37, 36, 7, 37, 38, 75, 44, 4, 49, 31, 21, 41, 29, 25, 12, 71, 25, 33, 47, 26, 21, 51, 40, 37, 34, 37, 23, 50, 13, 35, 27, 41, 15, 42, 55, 35, 51, 34, 21, 39, 33, 22, 30, 67, 47, 48, 27, 45, 30, 34, 48, 59, 30, 31, 17, 37, 52, 41, 60, 3, 30, 28, 35, 32, 34, 40, 54, 47, 34, 23, 79, 19, 39, 39, 19, 23, 35, 34, 44, 11, 52, 21, 60, 14, 42, 34, 31, 54, 23, 43, 9, 30, 18, 40, 48, 22, 31, 1, 38, 29, 41, 49, 31, 51, 38, 49, 15, 32, 11, 38, 35, 36, 48, 39, 26, 21, 59, 34, 33, 37, 52, 32, 26, 45, 1, 25, 44, 20, 45, 26, 43, 21, 40, 50, 36, 42]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6320000000000001, speedup = 0.32806156289518196, eval_ratio = 0.041384)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3819444444444445,"recall":0.3819444444444445,"f1":null,"seconds":7.363222539424896e-5,"exhaustive_search_seconds":0.0003808271139860153,"evaluations":341.1953125,"distances_sum":1705.1129188035334}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5338541666666666,"recall":0.5338541666666666,"f1":null,"seconds":0.00010795146226882935,"exhaustive_search_seconds":0.0003808271139860153,"evaluations":377.1015625,"distances_sum":1596.2469616845647}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6406249999999998,"recall":0.6406249999999998,"f1":0.6406249999999998,"seconds":0.00013992935419082642,"exhaustive_search_seconds":0.0003808271139860153,"evaluations":415.890625,"distances_sum":1551.3831134013033}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7161458333333329,"recall":0.7161458333333329,"f1":0.7161458333333329,"seconds":0.00016318820416927338,"exhaustive_search_seconds":0.0003808271139860153,"evaluations":456.7421875,"distances_sum":1526.5047356967182}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7638888888888884,"recall":0.7638888888888884,"f1":0.7638888888888884,"seconds":0.00019443966448307037,"exhaustive_search_seconds":0.0003808271139860153,"evaluations":497.46875,"distances_sum":1512.6751955988186}
KCenters.DeloneInvIndex> reached performance {"precision":0.8081597222222214,"recall":0.8081597222222214,"f1":0.8081597222222214,"seconds":0.00022556260228157043,"exhaustive_search_seconds":0.0003808271139860153,"evaluations":540.1171875,"distances_sum":1502.9018368757786}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8229999999999997, speedup = 0.9794237555243414, eval_ratio = 0.053015999999999994)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
