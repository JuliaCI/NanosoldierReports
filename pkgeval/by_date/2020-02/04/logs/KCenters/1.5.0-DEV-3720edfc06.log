Julia Version 1.5.0-DEV.230
Commit 3720edfc06 (2020-02-03 20:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed LearnBase ─────────────────── v0.2.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Missings ──────────────────── v0.4.3
  Installed InvertedIndices ───────────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed KCenters ──────────────────── v0.1.9
  Installed StatsBase ─────────────────── v0.32.0
  Installed JSON ──────────────────────── v0.21.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed CategoricalArrays ─────────── v0.7.7
  Installed Parsers ───────────────────── v0.3.11
  Installed Compat ────────────────────── v3.2.0
  Installed TableTraits ───────────────── v1.0.0
  Installed OrderedCollections ────────── v1.1.0
  Installed DataStructures ────────────── v0.17.9
  Installed MLDataUtils ───────────────── v0.5.0
  Installed MLDataPattern ─────────────── v0.5.0
  Installed DataFrames ────────────────── v0.20.0
  Installed Tables ────────────────────── v0.2.11
  Installed DataAPI ───────────────────── v1.1.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed PooledArrays ──────────────── v0.5.3
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed SimilaritySearch ──────────── v0.3.17
  Installed MappedArrays ──────────────── v0.2.2
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_uw0Ld5/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 109.57000000000001
[ Info: 82.58000000000003
[ Info: 42.42
[ Info: 26.709999999999997
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999835129265
[ Info: 76.56000116938976
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.21404098440985
inertia(cdnet.distances) = 22.389838790305884
inertia(crand.distances) = 20.63705922964426
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7968708374958383,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.203125,"distances_sum":1988.3275468273584}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.7003172175047181,"seconds":4.7292560338974e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.8203125,"distances_sum":1559.8456357755906}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6748046875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6748046875,"f1":0.7968708374958383,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.203125,"distances_sum":1988.3275468273584}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8438504204129211,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.078125,"distances_sum":2246.8615909212986}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.903451236263737,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.3046875,"distances_sum":2684.990533479875}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8514251373626383,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.15625,"distances_sum":2295.5946596674403}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8330078125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8330078125,"f1":0.903451236263737,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.3046875,"distances_sum":2684.990533479875}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9581158424908428,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.84375,"distances_sum":3175.853332552165}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9232059607059615,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.5859375,"distances_sum":2895.825017136635}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.953725961538462,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8515625,"distances_sum":3116.937083237751}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9317250457875468,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.65625,"distances_sum":2923.8882773646123}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9617616758241763,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.859375,"distances_sum":3200.586612130811}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9617616758241763,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.859375,"distances_sum":3200.586612130811}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9617616758241763,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.859375,"distances_sum":3200.586612130811}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7977439227439236,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.0703125,"distances_sum":1800.3223825989073}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5419921875,"f1":null,"seconds":4.215165972709656e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.1953125,"distances_sum":1360.5044377180607}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8594728188478197,"seconds":8.714757859706879e-5,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6796875,"distances_sum":2133.074451036384}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8594728188478197,"seconds":8.714757859706879e-5,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6796875,"distances_sum":2133.074451036384}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9216835248085254,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7421875,"distances_sum":2618.7609576513764}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8744136072261078,"seconds":4.973262548446655e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7109375,"distances_sum":2266.6511455044206}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.916815476190477,"seconds":5.1800161600112915e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.78125,"distances_sum":2583.9811528831797}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9266457500832507,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7734375,"distances_sum":2629.2440794103113}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9162462537462545,"seconds":5.112960934638977e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.75,"distances_sum":2550.689957769754}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9266457500832507,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7734375,"distances_sum":2629.2440794103113}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9676739926739932,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.953125,"distances_sum":3004.7547396556333}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9688301282051284,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9609375,"distances_sum":3015.1973822969258}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9466033966033973,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.765625,"distances_sum":2843.8212060842616}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.963747710622711,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8984375,"distances_sum":2966.8361739907705}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9688301282051284,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9609375,"distances_sum":3015.1973822969258}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9688301282051284,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9609375,"distances_sum":3015.1973822969258}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7783992049617059,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.765625,"distances_sum":1686.4012604377535}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1865234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1865234375,"f1":null,"seconds":3.2391399145126343e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.8359375,"distances_sum":535.2016485767884}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.654296875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.654296875,"f1":0.7783992049617059,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.765625,"distances_sum":1686.4012604377535}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9127778471528477,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.453125,"distances_sum":2488.296189204653}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8525390625,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8525390625,"f1":0.9127778471528477,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.453125,"distances_sum":2488.296189204653}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9613324175824177,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8125,"distances_sum":2895.941063585567}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9613324175824177,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8125,"distances_sum":2895.941063585567}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9613324175824177,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8125,"distances_sum":2895.941063585567}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8069493006993015,"seconds":4.7888606786727905e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.96875,"distances_sum":1817.7464719254604}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7951954295704303,"seconds":4.626810550689697e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.796875,"distances_sum":1736.4450888589495}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6875,"f1":0.8069493006993015,"seconds":4.7888606786727905e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.96875,"distances_sum":1817.7464719254604}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7216796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7216796875,"f1":0.8295027888777897,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.984375,"distances_sum":1973.2525902750335}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9666895604395607,"seconds":6.375834345817566e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9921875,"distances_sum":2961.9096136659655}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.94354967948718,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":9.0,"distances_sum":2726.801018133788}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9179804570429578,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2529.824120200854}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9666895604395607,"seconds":6.375834345817566e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9921875,"distances_sum":2961.9096136659655}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9755437271062275,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9921875,"distances_sum":3028.9431326615795}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.972195512820513,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.984375,"distances_sum":3000.0491102291353}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696256868131873,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":9.0,"distances_sum":2976.4392325652097}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9788919413919417,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9921875,"distances_sum":3062.849245959646}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9673019688644693,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9609375,"distances_sum":2977.9308965341593}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9720066391941393,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":9.0,"distances_sum":3003.051760487177}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9749828296703299,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":9.0,"distances_sum":3017.6139877963096}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9788919413919417,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9921875,"distances_sum":3062.849245959646}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9788919413919417,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9921875,"distances_sum":3062.849245959646}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.328125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.328125,"f1":null,"seconds":3.244727849960327e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.21875,"distances_sum":733.3465403086154}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3251953125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3251953125,"f1":null,"seconds":3.520399332046509e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.171875,"distances_sum":752.5837045446217}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.193359375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.193359375,"f1":null,"seconds":3.0212104320526123e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":4.5234375,"distances_sum":424.70034465508235}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.6842794358419363,"seconds":4.416331648826599e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.78125,"distances_sum":1303.392955472915}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5390625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5390625,"f1":0.6842794358419363,"seconds":4.416331648826599e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.78125,"distances_sum":1303.392955472915}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7761805902430908,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.296875,"distances_sum":1542.2973024558437}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7060546875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.7060546875,"f1":0.8119325119325125,"seconds":4.766508936882019e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.6796875,"distances_sum":1693.8598034336305}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8591179653679661,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.328125,"distances_sum":1837.315544889277}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7764834124209132,"seconds":4.757195711135864e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.34375,"distances_sum":1554.3086293862686}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8585633116883126,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.2109375,"distances_sum":1882.790671183114}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8591179653679661,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.328125,"distances_sum":1837.315544889277}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9403591200466206,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6328125,"distances_sum":2452.5912948222494}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9293898809523815,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6953125,"distances_sum":2364.973766286931}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9343692765567773,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6953125,"distances_sum":2390.870265655084}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9542670870795876,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8046875,"distances_sum":2534.1186783401818}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9128158300033303,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6328125,"distances_sum":2189.8006374024276}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9301885614385622,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.75,"distances_sum":2363.727114666263}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9542670870795876,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8046875,"distances_sum":2534.1186783401818}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9542670870795876,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8046875,"distances_sum":2534.1186783401818}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5400390625,"f1":0.6800836316461322,"seconds":4.319474101066589e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":6.546875,"distances_sum":1138.7317270723402}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5400390625,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5400390625,"f1":0.6800836316461322,"seconds":4.319474101066589e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":6.546875,"distances_sum":1138.7317270723402}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9022493131868138,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.203125,"distances_sum":2088.0226541516504}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8626290376290384,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.5703125,"distances_sum":1854.5341887760917}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.9022493131868138,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.203125,"distances_sum":2088.0226541516504}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.932623626373627,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.6015625,"distances_sum":2341.2308906646517}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9566849816849822,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.7421875,"distances_sum":2487.748075978962}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9566849816849822,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.7421875,"distances_sum":2487.748075978962}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9566849816849822,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.7421875,"distances_sum":2487.748075978962}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.208984375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.208984375,"f1":null,"seconds":3.207474946975708e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":5.15625,"distances_sum":431.03750202920384}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.21875,"f1":null,"seconds":3.380700945854187e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":5.21875,"distances_sum":548.1592257791095}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8592012154512163,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.8671875,"distances_sum":1849.9793748381742}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8592012154512163,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.8671875,"distances_sum":1849.9793748381742}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9512648809523815,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.6953125,"distances_sum":2492.1127617975976}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9126430860805866,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.234375,"distances_sum":2191.0462328730923}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9512648809523815,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.6953125,"distances_sum":2492.1127617975976}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9562557234432238,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.765625,"distances_sum":2467.8749591500864}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9562557234432238,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.765625,"distances_sum":2467.8749591500864}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9562557234432238,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.765625,"distances_sum":2467.8749591500864}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1904296875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1904296875,"f1":null,"seconds":2.6337802410125732e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":4.859375,"distances_sum":419.9083313419174}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7859607406482414,"seconds":4.161149263381958e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.9609375,"distances_sum":1475.8318315242436}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.7859607406482414,"seconds":4.161149263381958e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.9609375,"distances_sum":1475.8318315242436}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8390947594072604,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.421875,"distances_sum":1721.6163914435228}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9000405844155851,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.0859375,"distances_sum":2122.43217728461}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.9000405844155851,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.0859375,"distances_sum":2122.43217728461}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9256842116217121,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.484375,"distances_sum":2329.0704768555192}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9256842116217121,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.484375,"distances_sum":2329.0704768555192}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8740234375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9256842116217121,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.484375,"distances_sum":2329.0704768555192}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.788953234265735,"seconds":4.341825842857361e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.3203125,"distances_sum":1539.9875377988847}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.400390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.400390625,"f1":null,"seconds":3.2316893339157104e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":5.953125,"distances_sum":867.4106262307365}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.66796875,"f1":0.788953234265735,"seconds":4.341825842857361e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.3203125,"distances_sum":1539.9875377988847}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9495592948717955,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.6796875,"distances_sum":2561.58971902364}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9495592948717955,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.6796875,"distances_sum":2561.58971902364}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684008699633703,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8046875,"distances_sum":2708.4947686492096}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.966523580586081,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8203125,"distances_sum":2662.068070722647}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684008699633703,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8046875,"distances_sum":2708.4947686492096}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684008699633703,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8046875,"distances_sum":2708.4947686492096}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.21484375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.21484375,"f1":null,"seconds":2.730637788772583e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":4.6328125,"distances_sum":571.8058979821088}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.21484375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.21484375,"f1":null,"seconds":2.730637788772583e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":4.6328125,"distances_sum":571.8058979821088}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7119140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7119140625,"f1":0.819560474247975,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.953125,"distances_sum":1649.0044506922873}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7119140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7119140625,"f1":0.819560474247975,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.953125,"distances_sum":1649.0044506922873}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7119140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7119140625,"f1":0.819560474247975,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.953125,"distances_sum":1649.0044506922873}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7119140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7119140625,"f1":0.819560474247975,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.953125,"distances_sum":1649.0044506922873}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8079132672882682,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.265625,"distances_sum":1647.3167134440205}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6943359375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6943359375,"f1":0.8079132672882682,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.265625,"distances_sum":1647.3167134440205}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9013741466866475,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.2421875,"distances_sum":2185.281938416846}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":9,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.9013741466866475,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.2421875,"distances_sum":2185.281938416846}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":12,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9641082875457879,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2603.463949368429}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":12,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9641082875457879,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2603.463949368429}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":12,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9641082875457879,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2603.463949368429}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.240234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.240234375,"f1":null,"seconds":2.987682819366455e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.640625,"distances_sum":593.3829282903013}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.37890625,"f1":null,"seconds":3.160908818244934e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.2734375,"distances_sum":861.8505035496803}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.544921875,"f1":null,"seconds":3.905966877937317e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.5078125,"distances_sum":1199.480763128767}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.544921875,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.544921875,"f1":null,"seconds":3.905966877937317e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.5078125,"distances_sum":1199.480763128767}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8932010697635706,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.234375,"distances_sum":2129.7358010062453}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8985233516483525,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.234375,"distances_sum":2133.530365944516}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8956189643689652,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.15625,"distances_sum":2148.0727284953196}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7766950063825069,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.0546875,"distances_sum":1490.9275821049453}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.82421875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.82421875,"f1":0.8985233516483525,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.234375,"distances_sum":2133.530365944516}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9585107600732606,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7734375,"distances_sum":2579.2545567310763}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9456559065934071,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7109375,"distances_sum":2501.4981602781854}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9312786172161176,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4765625,"distances_sum":2410.6132944142128}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9673592032967036,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8515625,"distances_sum":2622.8934821295184}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9302369505494512,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4609375,"distances_sum":2399.628083725069}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9406765109890115,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.65625,"distances_sum":2469.93666098892}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9673592032967036,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8515625,"distances_sum":2622.8934821295184}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9673592032967036,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8515625,"distances_sum":2622.8934821295184}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8454914876789883,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.625,"distances_sum":1990.4230355484426}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.6832405441780446,"seconds":3.987923264503479e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.8125,"distances_sum":1260.8054678884985}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8454914876789883,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.625,"distances_sum":1990.4230355484426}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8603261322011332,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.796875,"distances_sum":2024.0444575050499}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8603261322011332,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.796875,"distances_sum":2024.0444575050499}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9497138278388284,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7265625,"distances_sum":2692.2390203670275}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8945169413919422,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.2109375,"distances_sum":2227.802918739598}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.881793727106228,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.140625,"distances_sum":2186.8898235038423}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9455070970695979,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6015625,"distances_sum":2708.688693785006}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.924402160339661,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4453125,"distances_sum":2537.3238291410867}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9497138278388284,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7265625,"distances_sum":2692.2390203670275}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9497138278388284,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7265625,"distances_sum":2692.2390203670275}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.296875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.296875,"f1":null,"seconds":3.6731362342834473e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":6.4609375,"distances_sum":795.6916439485703}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8455534049284058,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.8359375,"distances_sum":1945.0194456841639}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.548828125,"f1":0.6903057012432019,"seconds":4.334375262260437e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":6.8046875,"distances_sum":1293.8328609409832}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.8455534049284058,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.8359375,"distances_sum":1945.0194456841639}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9180231227106235,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.3984375,"distances_sum":2420.0124967704533}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9005785880785889,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.2734375,"distances_sum":2314.4880711218084}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9482600732600738,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.703125,"distances_sum":2695.0645810327396}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8916182775557784,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.109375,"distances_sum":2289.5906138140085}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9482600732600738,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.703125,"distances_sum":2695.0645810327396}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9666494963369967,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.8359375,"distances_sum":2827.388176487512}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9573145604395609,"seconds":7.014721632003784e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.765625,"distances_sum":2750.52785352822}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9571319305694308,"seconds":7.055699825286865e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.796875,"distances_sum":2737.4286513900197}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9736435439560445,"seconds":6.752088665962219e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.8984375,"distances_sum":2884.842703482632}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9594379578754584,"seconds":7.253140211105347e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.796875,"distances_sum":2772.8801037701164}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9700721153846157,"seconds":7.234513759613037e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.8828125,"distances_sum":2820.9532485420086}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9736435439560445,"seconds":6.752088665962219e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.8984375,"distances_sum":2884.842703482632}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9736435439560445,"seconds":6.752088665962219e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.8984375,"distances_sum":2884.842703482632}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8541333666333674,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.046875,"distances_sum":1952.4091931695214}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8541333666333674,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.046875,"distances_sum":1952.4091931695214}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8562827797202804,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.046875,"distances_sum":2013.1102576866224}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9256982600732607,"seconds":6.660819053649902e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.6953125,"distances_sum":2444.220307794732}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9256982600732607,"seconds":6.660819053649902e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.6953125,"distances_sum":2444.220307794732}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.959043040293041,"seconds":6.254762411117554e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.8515625,"distances_sum":2689.864541334142}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9534798534798542,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.7734375,"distances_sum":2641.2361134870016}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.959043040293041,"seconds":6.254762411117554e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.8515625,"distances_sum":2689.864541334142}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.959043040293041,"seconds":6.254762411117554e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":8.8515625,"distances_sum":2689.864541334142}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8465503246753253,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.796875,"distances_sum":1944.3358451108838}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.6800449550449557,"seconds":4.066154360771179e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.5859375,"distances_sum":1243.4177129159211}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7950641372516382,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.0390625,"distances_sum":1649.3671255643683}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8465503246753253,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.796875,"distances_sum":1944.3358451108838}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9211626914751921,"seconds":6.94766640663147e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.375,"distances_sum":2506.9289126249037}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9222558691308701,"seconds":6.334856152534485e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.453125,"distances_sum":2434.6718147774336}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9008730852480861,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.265625,"distances_sum":2274.449994085782}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8642578125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8642578125,"f1":0.9211626914751921,"seconds":6.94766640663147e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.375,"distances_sum":2506.9289126249037}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9706330128205133,"seconds":6.2230974435806274e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.84375,"distances_sum":2817.287561820118}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687500000000001,"seconds":7.76723027229309e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8671875,"distances_sum":2803.063373793214}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9615759240759245,"seconds":7.5642019510269165e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8359375,"distances_sum":2725.0281344881473}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9401728479853487,"seconds":8.059665560722351e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6171875,"distances_sum":2585.163044250432}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9313530219780225,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.515625,"distances_sum":2527.1845899312457}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9506982600732606,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6875,"distances_sum":2704.241592986109}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.948351648351649,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.71875,"distances_sum":2666.3209374609737}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9706330128205133,"seconds":6.2230974435806274e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.84375,"distances_sum":2817.287561820118}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9706330128205133,"seconds":6.2230974435806274e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.84375,"distances_sum":2817.287561820118}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7833315989565998,"seconds":4.507601261138916e-6,"exhaustive_search_seconds":1.173466444015503e-6,"evaluations":7.09375,"distances_sum":1570.352924328177}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":3.589317202568054e-6,"exhaustive_search_seconds":1.173466444015503e-6,"evaluations":5.875,"distances_sum":954.9543409204354}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7833315989565998,"seconds":4.507601261138916e-6,"exhaustive_search_seconds":1.173466444015503e-6,"evaluations":7.09375,"distances_sum":1570.352924328177}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9030427905427912,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.173466444015503e-6,"evaluations":8.2734375,"distances_sum":2284.650148887546}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.7982900779775788,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.173466444015503e-6,"evaluations":7.3515625,"distances_sum":1683.6732361693728}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8330078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8330078125,"f1":0.9030427905427912,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.173466444015503e-6,"evaluations":8.2734375,"distances_sum":2284.650148887546}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9627232142857147,"seconds":6.487593054771423e-6,"exhaustive_search_seconds":1.173466444015503e-6,"evaluations":8.8203125,"distances_sum":2760.8612219586603}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9675824175824179,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.173466444015503e-6,"evaluations":8.875,"distances_sum":2764.658098768026}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9311183608058615,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.173466444015503e-6,"evaluations":8.5,"distances_sum":2513.567562651751}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9675824175824179,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.173466444015503e-6,"evaluations":8.875,"distances_sum":2764.658098768026}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9675824175824179,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.173466444015503e-6,"evaluations":8.875,"distances_sum":2764.658098768026}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4345703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4345703125,"f1":0.5856164668664671,"seconds":4.002824425697327e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.7734375,"distances_sum":919.0744038058289}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4541015625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4541015625,"f1":null,"seconds":3.8817524909973145e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.796875,"distances_sum":994.4267588349359}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4541015625,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.4541015625,"f1":null,"seconds":3.8817524909973145e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.796875,"distances_sum":994.4267588349359}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8977538086913094,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8984375,"distances_sum":2308.220223230041}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8017109626484634,"seconds":4.684552550315857e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.703125,"distances_sum":1727.5925792833464}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8700611888111897,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9765625,"distances_sum":2105.937262059069}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5869140625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5869140625,"f1":0.7258836649461656,"seconds":4.4889748096466064e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.5390625,"distances_sum":1371.108408666999}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8962256493506503,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.046875,"distances_sum":2245.8392724374826}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8683299339549346,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.859375,"distances_sum":2102.108426106587}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8271484375,"state":{"ssize":8,"bsize":6},"perf":{"precision":1.0,"recall":0.8271484375,"f1":0.8977538086913094,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8984375,"distances_sum":2308.220223230041}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":11,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.963192536630037,"seconds":6.198883056640625e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2779.803041830108}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9653502747252753,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2794.1075833106584}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9149329836829846,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.1171875,"distances_sum":2414.2619359637706}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9111237720612727,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.140625,"distances_sum":2404.4302908759323}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9261275183150187,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6875,"distances_sum":2504.3145544844797}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9212886072261077,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6484375,"distances_sum":2489.1001490301564}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":11,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9119453463203471,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.1328125,"distances_sum":2394.5511194153555}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9503605769230773,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7734375,"distances_sum":2738.4593022123754}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.947979624542125,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7265625,"distances_sum":2696.3324139208084}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9653502747252753,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2794.1075833106584}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9653502747252753,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2794.1075833106584}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7803985944610953,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.828125,"distances_sum":1672.960907048447}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4248046875,"f1":null,"seconds":3.961846232414246e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.359375,"distances_sum":993.6064271208106}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6611328125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6611328125,"f1":0.7803985944610953,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.828125,"distances_sum":1672.960907048447}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605139652014656,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8515625,"distances_sum":2861.4725104414147}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9605139652014656,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8515625,"distances_sum":2861.4725104414147}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.975875686813187,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9609375,"distances_sum":2967.263216490372}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975875686813187,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9609375,"distances_sum":2967.263216490372}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975875686813187,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9609375,"distances_sum":2967.263216490372}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.548828125,"f1":0.6927263708513713,"seconds":4.244968295097351e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.109375,"distances_sum":1294.1474716532296}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.548828125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.548828125,"f1":0.6927263708513713,"seconds":4.244968295097351e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.109375,"distances_sum":1294.1474716532296}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9230711996337005,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.84375,"distances_sum":2534.9253687643113}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7981834138084146,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.8203125,"distances_sum":1719.082469977437}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8784543581418591,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.078125,"distances_sum":2175.625790055886}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.640625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.640625,"f1":0.7712641525141531,"seconds":4.548579454421997e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.71875,"distances_sum":1550.1165080956216}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8662109375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8662109375,"f1":0.9230711996337005,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.84375,"distances_sum":2534.9253687643113}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9681604853479855,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.984375,"distances_sum":2906.4309419603337}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9511790293040296,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.921875,"distances_sum":2763.828745669199}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9748168498168501,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9453125,"distances_sum":2992.2431845236606}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9310554029304036,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.875,"distances_sum":2585.179347629652}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9748168498168501,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9453125,"distances_sum":2992.2431845236606}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9748168498168501,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9453125,"distances_sum":2992.2431845236606}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8872949966699974,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.1484375,"distances_sum":2259.05833181785}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.8125,"f1":0.8872949966699974,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.1484375,"distances_sum":2259.05833181785}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9265224358974367,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.484375,"distances_sum":2556.010486670728}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9265224358974367,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.484375,"distances_sum":2556.010486670728}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9358917124542131,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.875,"distances_sum":2624.4979341632006}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9610519688644696,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8828125,"distances_sum":2847.6465584736384}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9285089910089918,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.890625,"distances_sum":2553.932334841245}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9610519688644696,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8828125,"distances_sum":2847.6465584736384}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9610519688644696,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8828125,"distances_sum":2847.6465584736384}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7847397394272402,"seconds":4.67151403427124e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.6640625,"distances_sum":1642.2938650662816}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5673828125,"f1":0.7066069347319354,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.8828125,"distances_sum":1382.4407451431723}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8726856476856486,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.203125,"distances_sum":2179.3032069634346}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8726856476856486,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.203125,"distances_sum":2179.3032069634346}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9073098776223785,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.40625,"distances_sum":2463.887731507845}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8773127913752923,"seconds":4.896894097328186e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.1015625,"distances_sum":2202.5142454544825}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.84375,"f1":0.9073098776223785,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.40625,"distances_sum":2463.887731507845}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.92626227938728,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.828125,"distances_sum":2586.915821824438}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9247913544788553,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.78125,"distances_sum":2601.575829530119}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9204727564102572,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.46875,"distances_sum":2505.5532102223656}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9503610972360974,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.890625,"distances_sum":2818.2954760064367}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9631524725274728,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9296875,"distances_sum":2902.0836097460897}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9461538461538465,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8359375,"distances_sum":2771.726520081684}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9454956501831508,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.796875,"distances_sum":2785.2838229506037}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9468463827838834,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.90625,"distances_sum":2766.2192553090485}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9631524725274728,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9296875,"distances_sum":2902.0836097460897}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9631524725274728,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9296875,"distances_sum":2902.0836097460897}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8626097860472869,"seconds":4.9192458391189575e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.2578125,"distances_sum":2092.9521233777655}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.462890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.462890625,"f1":0.610833610833611,"seconds":3.637745976448059e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.0625,"distances_sum":1106.266566016993}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7087736915861922,"seconds":4.062429070472717e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.4296875,"distances_sum":1365.0507651213181}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8626097860472869,"seconds":4.9192458391189575e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.2578125,"distances_sum":2092.9521233777655}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9298623251748258,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8828125,"distances_sum":2618.260761180141}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8664408508158519,"seconds":4.818663001060486e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.3046875,"distances_sum":2149.550384123784}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.921577901265402,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6171875,"distances_sum":2524.6891754324124}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9298623251748258,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8828125,"distances_sum":2618.260761180141}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9715029761904765,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.921875,"distances_sum":2973.5465259697335}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9514995421245425,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9140625,"distances_sum":2809.624857638419}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9692364926739931,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9453125,"distances_sum":2945.90537410747}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9592090201465208,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.90625,"distances_sum":2878.4484474360274}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9715029761904765,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.921875,"distances_sum":2973.5465259697335}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9715029761904765,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.921875,"distances_sum":2973.5465259697335}}, n: 9
inertia(cfft.distances) = 18.21404078866218
inertia(cdnet.distances) = 22.98990120703262
inertia(crand.distances) = 21.206637085137096
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8822222222222221
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.928888888888889
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8822222222222221
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8644444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9266666666666666
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9066666666666666
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8755555555555556
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9199999999999999
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9222222222222222
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8777777777777779
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 1, 3, 3, 1, 2, 3, 1, 3, 2, 3, 3, 1, 3, 2, 2, 3, 3, 2, 3, 1]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.33346666894443594] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.33346666894443594, 0.17758834562267295] ***
*** starting iteration: 2; err: [Inf, 0.33346666894443594, 0.17758834562267295] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317] ***
*** starting iteration: 3; err: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317, 0.16389289383910732] ***
*** starting iteration: 4; err: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317, 0.16389289383910732] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317, 0.16389289383910732, 0.16177414548735564] ***
*** starting iteration: 5; err: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317, 0.16389289383910732, 0.16177414548735564] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317, 0.16389289383910732, 0.16177414548735564, 0.16145448597363093] ***
*** finished computation of 12 references, err: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317, 0.16389289383910732, 0.16177414548735564, 0.16145448597363093] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
acc = 0.9133333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 4.449300006028281] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.449300006028281, 1.50879619155799] ***
*** starting iteration: 2; err: [Inf, 4.449300006028281, 1.50879619155799] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.449300006028281, 1.50879619155799, 0.8460086128774715] ***
*** starting iteration: 3; err: [Inf, 4.449300006028281, 1.50879619155799, 0.8460086128774715] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.449300006028281, 1.50879619155799, 0.8460086128774715, 0.6222148412071832] ***
*** finished computation of 3 references, err: [Inf, 4.449300006028281, 1.50879619155799, 0.8460086128774715, 0.6222148412071832] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 20]]
** centroid: 2, normalized-entropy: 0.9709505944546688, [(2, 30), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41514505540757213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41514505540757213, 0.208647201841705] ***
*** starting iteration: 2; err: [Inf, 0.41514505540757213, 0.208647201841705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41514505540757213, 0.208647201841705, 0.19245665557421826] ***
*** starting iteration: 3; err: [Inf, 0.41514505540757213, 0.208647201841705, 0.19245665557421826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41514505540757213, 0.208647201841705, 0.19245665557421826, 0.18334250736658217] ***
*** finished computation of 7 references, err: [Inf, 0.41514505540757213, 0.208647201841705, 0.19245665557421826, 0.18334250736658217] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 8]]
** centroid: 1, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 17]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38802738834717415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38802738834717415, 0.17779089076434296] ***
*** starting iteration: 2; err: [Inf, 0.38802738834717415, 0.17779089076434296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38802738834717415, 0.17779089076434296, 0.16857185637743197] ***
*** starting iteration: 3; err: [Inf, 0.38802738834717415, 0.17779089076434296, 0.16857185637743197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38802738834717415, 0.17779089076434296, 0.16857185637743197, 0.16661298405534836] ***
*** finished computation of 7 references, err: [Inf, 0.38802738834717415, 0.17779089076434296, 0.16857185637743197, 0.16661298405534836] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 11]]
** centroid: 1, normalized-entropy: 0.9828586897127057, [(2, 15), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4162573186988236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4162573186988236, 0.18602024227162903] ***
*** starting iteration: 2; err: [Inf, 0.4162573186988236, 0.18602024227162903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4162573186988236, 0.18602024227162903, 0.18009288784940536] ***
*** starting iteration: 3; err: [Inf, 0.4162573186988236, 0.18602024227162903, 0.18009288784940536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4162573186988236, 0.18602024227162903, 0.18009288784940536, 0.17664070584436298] ***
*** finished computation of 7 references, err: [Inf, 0.4162573186988236, 0.18602024227162903, 0.18009288784940536, 0.17664070584436298] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 24, 5]]
** centroid: 3, normalized-entropy: 0.6631968402398286, [(2, 24), (3, 5)]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 18]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(2, 3), (3, 18)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4481868273502431] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4481868273502431, 0.19802642190579278] ***
*** starting iteration: 2; err: [Inf, 0.4481868273502431, 0.19802642190579278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4481868273502431, 0.19802642190579278, 0.19146505337680828] ***
*** starting iteration: 3; err: [Inf, 0.4481868273502431, 0.19802642190579278, 0.19146505337680828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4481868273502431, 0.19802642190579278, 0.19146505337680828, 0.19043040222679608] ***
*** finished computation of 7 references, err: [Inf, 0.4481868273502431, 0.19802642190579278, 0.19146505337680828, 0.19043040222679608] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 2]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 8]]
** centroid: 4, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4336049405313102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4336049405313102, 0.19148475509341636] ***
*** starting iteration: 2; err: [Inf, 0.4336049405313102, 0.19148475509341636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4336049405313102, 0.19148475509341636, 0.17347990615381448] ***
*** starting iteration: 3; err: [Inf, 0.4336049405313102, 0.19148475509341636, 0.17347990615381448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4336049405313102, 0.19148475509341636, 0.17347990615381448, 0.16657940034728377] ***
*** finished computation of 7 references, err: [Inf, 0.4336049405313102, 0.19148475509341636, 0.17347990615381448, 0.16657940034728377] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 11]]
** centroid: 1, normalized-entropy: 0.9828586897127057, [(2, 15), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 6, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3985596477252902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3985596477252902, 0.20291334782829698] ***
*** starting iteration: 2; err: [Inf, 0.3985596477252902, 0.20291334782829698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3985596477252902, 0.20291334782829698, 0.19617476132062278] ***
*** starting iteration: 3; err: [Inf, 0.3985596477252902, 0.20291334782829698, 0.19617476132062278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3985596477252902, 0.20291334782829698, 0.19617476132062278, 0.1887904267161116] ***
*** finished computation of 7 references, err: [Inf, 0.3985596477252902, 0.20291334782829698, 0.19617476132062278, 0.1887904267161116] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 18]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 4), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 24, 3]]
** centroid: 6, normalized-entropy: 0.5032583347756457, [(2, 24), (3, 3)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.67390000171179] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.67390000171179, 0.5176666973542986] ***
*** starting iteration: 2; err: [Inf, 1.67390000171179, 0.5176666973542986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.67390000171179, 0.5176666973542986, 0.5144163785583052] ***
*** starting iteration: 3; err: [Inf, 1.67390000171179, 0.5176666973542986, 0.5144163785583052] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.67390000171179, 0.5176666973542986, 0.5144163785583052, 0.5135564273719091] ***
*** finished computation of 3 references, err: [Inf, 1.67390000171179, 0.5176666973542986, 0.5144163785583052, 0.5135564273719091] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 10]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 30), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.089999981112515] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.089999981112515, 1.823833576102803] ***
*** starting iteration: 2; err: [Inf, 6.089999981112515, 1.823833576102803] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.089999981112515, 1.823833576102803, 0.6374882731518811] ***
*** starting iteration: 3; err: [Inf, 6.089999981112515, 1.823833576102803, 0.6374882731518811] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.089999981112515, 1.823833576102803, 0.6374882731518811, 0.49560484968494545] ***
*** finished computation of 3 references, err: [Inf, 6.089999981112515, 1.823833576102803, 0.6374882731518811, 0.49560484968494545] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 14]]
** centroid: 3, normalized-entropy: 0.8865408928220899, [(2, 32), (3, 14)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0394000069509224] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0394000069509224, 0.6006915015136723] ***
*** starting iteration: 2; err: [Inf, 1.0394000069509224, 0.6006915015136723] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0394000069509224, 0.6006915015136723, 0.5920684056006777] ***
*** starting iteration: 3; err: [Inf, 1.0394000069509224, 0.6006915015136723, 0.5920684056006777] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0394000069509224, 0.6006915015136723, 0.5920684056006777, 0.5865485076471877] ***
*** finished computation of 3 references, err: [Inf, 1.0394000069509224, 0.6006915015136723, 0.5920684056006777, 0.5865485076471877] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 25, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 30]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 12), (3, 30)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8884093659254603] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8884093659254603, 0.3943843785287264] ***
*** starting iteration: 2; err: [Inf, 0.8884093659254603, 0.3943843785287264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8884093659254603, 0.3943843785287264, 0.358332986706818] ***
*** starting iteration: 3; err: [Inf, 0.8884093659254603, 0.3943843785287264, 0.358332986706818] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8884093659254603, 0.3943843785287264, 0.358332986706818, 0.358332986706818] ***
*** finished computation of 3 references, err: [Inf, 0.8884093659254603, 0.3943843785287264, 0.358332986706818, 0.358332986706818] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 9]]
** centroid: 2, normalized-entropy: 0.7897492536625221, [(2, 29), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7047920193173962] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7047920193173962, 0.42036189273199254] ***
*** starting iteration: 2; err: [Inf, 0.7047920193173962, 0.42036189273199254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7047920193173962, 0.42036189273199254, 0.34832682428780815] ***
*** starting iteration: 3; err: [Inf, 0.7047920193173962, 0.42036189273199254, 0.34832682428780815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7047920193173962, 0.42036189273199254, 0.34832682428780815, 0.3470158281774103] ***
*** starting iteration: 4; err: [Inf, 0.7047920193173962, 0.42036189273199254, 0.34832682428780815, 0.3470158281774103] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7047920193173962, 0.42036189273199254, 0.34832682428780815, 0.3470158281774103, 0.3470158281774103] ***
*** finished computation of 3 references, err: [Inf, 0.7047920193173962, 0.42036189273199254, 0.34832682428780815, 0.3470158281774103, 0.3470158281774103] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 13]]
** centroid: 1, normalized-entropy: 0.8672816222000259, [(2, 32), (3, 13)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6289651309708555] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6289651309708555, 0.5825578146905197] ***
*** starting iteration: 2; err: [Inf, 1.6289651309708555, 0.5825578146905197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6289651309708555, 0.5825578146905197, 0.4041682912873178] ***
*** starting iteration: 3; err: [Inf, 1.6289651309708555, 0.5825578146905197, 0.4041682912873178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6289651309708555, 0.5825578146905197, 0.4041682912873178, 0.3915150367667966] ***
*** starting iteration: 4; err: [Inf, 1.6289651309708555, 0.5825578146905197, 0.4041682912873178, 0.3915150367667966] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6289651309708555, 0.5825578146905197, 0.4041682912873178, 0.3915150367667966, 0.38785110700918096] ***
*** starting iteration: 5; err: [Inf, 1.6289651309708555, 0.5825578146905197, 0.4041682912873178, 0.3915150367667966, 0.38785110700918096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6289651309708555, 0.5825578146905197, 0.4041682912873178, 0.3915150367667966, 0.38785110700918096, 0.38780782720606993] ***
*** finished computation of 3 references, err: [Inf, 1.6289651309708555, 0.5825578146905197, 0.4041682912873178, 0.3915150367667966, 0.38785110700918096, 0.38780782720606993] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 5]]
** centroid: 1, normalized-entropy: 0.552495114325111, [(2, 34), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2646516481429525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2646516481429525, 0.18019902883384248] ***
*** starting iteration: 2; err: [Inf, 0.2646516481429525, 0.18019902883384248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2646516481429525, 0.18019902883384248, 0.16572459308074522] ***
*** starting iteration: 3; err: [Inf, 0.2646516481429525, 0.18019902883384248, 0.16572459308074522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2646516481429525, 0.18019902883384248, 0.16572459308074522, 0.16313032372081537] ***
*** starting iteration: 4; err: [Inf, 0.2646516481429525, 0.18019902883384248, 0.16572459308074522, 0.16313032372081537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2646516481429525, 0.18019902883384248, 0.16572459308074522, 0.16313032372081537, 0.15980996513283424] ***
*** starting iteration: 5; err: [Inf, 0.2646516481429525, 0.18019902883384248, 0.16572459308074522, 0.16313032372081537, 0.15980996513283424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2646516481429525, 0.18019902883384248, 0.16572459308074522, 0.16313032372081537, 0.15980996513283424, 0.1590350925301993] ***
*** finished computation of 7 references, err: [Inf, 0.2646516481429525, 0.18019902883384248, 0.16572459308074522, 0.16313032372081537, 0.15980996513283424, 0.1590350925301993] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 12, 8]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 18]]
** centroid: 6, normalized-entropy: 0.2974722489192896, [(2, 1), (3, 18)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 8, 2]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4696673547360065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4696673547360065, 0.2769157609966393] ***
*** starting iteration: 2; err: [Inf, 0.4696673547360065, 0.2769157609966393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586] ***
*** starting iteration: 3; err: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586, 0.23567290786089296] ***
*** starting iteration: 4; err: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586, 0.23567290786089296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586, 0.23567290786089296, 0.22537684568298066] ***
*** starting iteration: 5; err: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586, 0.23567290786089296, 0.22537684568298066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586, 0.23567290786089296, 0.22537684568298066, 0.21946854426633616] ***
*** starting iteration: 6; err: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586, 0.23567290786089296, 0.22537684568298066, 0.21946854426633616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586, 0.23567290786089296, 0.22537684568298066, 0.21946854426633616, 0.2034261597917842] ***
*** starting iteration: 7; err: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586, 0.23567290786089296, 0.22537684568298066, 0.21946854426633616, 0.2034261597917842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586, 0.23567290786089296, 0.22537684568298066, 0.21946854426633616, 0.2034261597917842, 0.20102107988788437] ***
*** starting iteration: 8; err: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586, 0.23567290786089296, 0.22537684568298066, 0.21946854426633616, 0.2034261597917842, 0.20102107988788437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586, 0.23567290786089296, 0.22537684568298066, 0.21946854426633616, 0.2034261597917842, 0.20102107988788437, 0.19994167629978601] ***
*** starting iteration: 9; err: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586, 0.23567290786089296, 0.22537684568298066, 0.21946854426633616, 0.2034261597917842, 0.20102107988788437, 0.19994167629978601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586, 0.23567290786089296, 0.22537684568298066, 0.21946854426633616, 0.2034261597917842, 0.20102107988788437, 0.19994167629978601, 0.199242672750613] ***
*** finished computation of 7 references, err: [Inf, 0.4696673547360065, 0.2769157609966393, 0.2644970212862586, 0.23567290786089296, 0.22537684568298066, 0.21946854426633616, 0.2034261597917842, 0.20102107988788437, 0.19994167629978601, 0.199242672750613] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 6, 17]]
** centroid: 4, normalized-entropy: 0.828055725379504, [(2, 6), (3, 17)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47013660357300113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47013660357300113, 0.21956222701616096] ***
*** starting iteration: 2; err: [Inf, 0.47013660357300113, 0.21956222701616096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47013660357300113, 0.21956222701616096, 0.1904677430990648] ***
*** starting iteration: 3; err: [Inf, 0.47013660357300113, 0.21956222701616096, 0.1904677430990648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47013660357300113, 0.21956222701616096, 0.1904677430990648, 0.18185083816952485] ***
*** starting iteration: 4; err: [Inf, 0.47013660357300113, 0.21956222701616096, 0.1904677430990648, 0.18185083816952485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47013660357300113, 0.21956222701616096, 0.1904677430990648, 0.18185083816952485, 0.1783215616731787] ***
*** starting iteration: 5; err: [Inf, 0.47013660357300113, 0.21956222701616096, 0.1904677430990648, 0.18185083816952485, 0.1783215616731787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47013660357300113, 0.21956222701616096, 0.1904677430990648, 0.18185083816952485, 0.1783215616731787, 0.17336032438138793] ***
*** starting iteration: 6; err: [Inf, 0.47013660357300113, 0.21956222701616096, 0.1904677430990648, 0.18185083816952485, 0.1783215616731787, 0.17336032438138793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47013660357300113, 0.21956222701616096, 0.1904677430990648, 0.18185083816952485, 0.1783215616731787, 0.17336032438138793, 0.16877904181413278] ***
*** starting iteration: 7; err: [Inf, 0.47013660357300113, 0.21956222701616096, 0.1904677430990648, 0.18185083816952485, 0.1783215616731787, 0.17336032438138793, 0.16877904181413278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47013660357300113, 0.21956222701616096, 0.1904677430990648, 0.18185083816952485, 0.1783215616731787, 0.17336032438138793, 0.16877904181413278, 0.16559804527883046] ***
*** starting iteration: 8; err: [Inf, 0.47013660357300113, 0.21956222701616096, 0.1904677430990648, 0.18185083816952485, 0.1783215616731787, 0.17336032438138793, 0.16877904181413278, 0.16559804527883046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47013660357300113, 0.21956222701616096, 0.1904677430990648, 0.18185083816952485, 0.1783215616731787, 0.17336032438138793, 0.16877904181413278, 0.16559804527883046, 0.16520558866419216] ***
*** finished computation of 7 references, err: [Inf, 0.47013660357300113, 0.21956222701616096, 0.1904677430990648, 0.18185083816952485, 0.1783215616731787, 0.17336032438138793, 0.16877904181413278, 0.16559804527883046, 0.16520558866419216] ***
*** center 1: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 5]]
** centroid: 3, normalized-entropy: 0.7553754125614286, [(2, 18), (3, 5)]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2866000065822585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2866000065822585, 0.8754074761469262] ***
*** starting iteration: 2; err: [Inf, 1.2866000065822585, 0.8754074761469262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2866000065822585, 0.8754074761469262, 0.7638743795092044] ***
*** starting iteration: 3; err: [Inf, 1.2866000065822585, 0.8754074761469262, 0.7638743795092044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2866000065822585, 0.8754074761469262, 0.7638743795092044, 0.59248158670836] ***
*** finished computation of 7 references, err: [Inf, 1.2866000065822585, 0.8754074761469262, 0.7638743795092044, 0.59248158670836] ***
*** center 1: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 16, 33]]
** centroid: 2, normalized-entropy: 0.9113423759758414, [(2, 16), (3, 33)]
*** center 3: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.358599990487334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.358599990487334, 0.946806427404161] ***
*** starting iteration: 2; err: [Inf, 1.358599990487334, 0.946806427404161] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.358599990487334, 0.946806427404161, 0.9310008383921549] ***
*** starting iteration: 3; err: [Inf, 1.358599990487334, 0.946806427404161, 0.9310008383921549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.358599990487334, 0.946806427404161, 0.9310008383921549, 0.8732770660655127] ***
*** finished computation of 7 references, err: [Inf, 1.358599990487334, 0.946806427404161, 0.9310008383921549, 0.8732770660655127] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 36]]
** centroid: 1, normalized-entropy: 0.9886994082884974, [(2, 28), (3, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5747000027420449] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5747000027420449, 0.348675505128775] ***
*** starting iteration: 2; err: [Inf, 0.5747000027420449, 0.348675505128775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5747000027420449, 0.348675505128775, 0.3067829224765813] ***
*** starting iteration: 3; err: [Inf, 0.5747000027420449, 0.348675505128775, 0.3067829224765813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5747000027420449, 0.348675505128775, 0.3067829224765813, 0.29992361644594856] ***
*** finished computation of 7 references, err: [Inf, 0.5747000027420449, 0.348675505128775, 0.3067829224765813, 0.29992361644594856] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 9]]
** centroid: 4, normalized-entropy: 0.9980008838722993, [(2, 10), (3, 9)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8307000065511554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8307000065511554, 0.5374426723755356] ***
*** starting iteration: 2; err: [Inf, 0.8307000065511554, 0.5374426723755356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8307000065511554, 0.5374426723755356, 0.5348004287133372] ***
*** starting iteration: 3; err: [Inf, 0.8307000065511554, 0.5374426723755356, 0.5348004287133372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8307000065511554, 0.5374426723755356, 0.5348004287133372, 0.5348004287133372] ***
*** finished computation of 3 references, err: [Inf, 0.8307000065511554, 0.5374426723755356, 0.5348004287133372, 0.5348004287133372] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 22, 3]]
** centroid: 1, normalized-entropy: 0.5293608652873645, [(2, 22), (3, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 9, 31]]
** centroid: 2, normalized-entropy: 0.7691928290130138, [(2, 9), (3, 31)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.4251999842744554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4251999842744554, 1.2491625411549445] ***
*** starting iteration: 2; err: [Inf, 3.4251999842744554, 1.2491625411549445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4251999842744554, 1.2491625411549445, 0.6413569646909951] ***
*** starting iteration: 3; err: [Inf, 3.4251999842744554, 1.2491625411549445, 0.6413569646909951] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4251999842744554, 1.2491625411549445, 0.6413569646909951, 0.5247163156631974] ***
*** finished computation of 3 references, err: [Inf, 3.4251999842744554, 1.2491625411549445, 0.6413569646909951, 0.5247163156631974] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 14]]
** centroid: 1, normalized-entropy: 0.8865408928220899, [(2, 32), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2443000051138653] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2443000051138653, 0.9664562579348694] ***
*** starting iteration: 2; err: [Inf, 1.2443000051138653, 0.9664562579348694] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2443000051138653, 0.9664562579348694, 0.9578054665469048] ***
*** starting iteration: 3; err: [Inf, 1.2443000051138653, 0.9664562579348694, 0.9578054665469048] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2443000051138653, 0.9664562579348694, 0.9578054665469048, 0.9556669183100028] ***
*** finished computation of 3 references, err: [Inf, 1.2443000051138653, 0.9664562579348694, 0.9578054665469048, 0.9556669183100028] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [16, 4, 0]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(1, 16), (2, 4)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 30]]
** centroid: 3, normalized-entropy: 0.998363672593813, [(2, 33), (3, 30)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2590389998891817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590389998891817, 0.1922652676353373] ***
*** starting iteration: 2; err: [Inf, 0.2590389998891817, 0.1922652676353373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590389998891817, 0.1922652676353373, 0.18805998879148633] ***
*** starting iteration: 3; err: [Inf, 0.2590389998891817, 0.1922652676353373, 0.18805998879148633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590389998891817, 0.1922652676353373, 0.18805998879148633, 0.1858551970797671] ***
*** finished computation of 7 references, err: [Inf, 0.2590389998891817, 0.1922652676353373, 0.18805998879148633, 0.1858551970797671] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 17]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 11, 8]]
** centroid: 7, normalized-entropy: 0.9819407868640977, [(2, 11), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35312327939225496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35312327939225496, 0.1947106275899327] ***
*** starting iteration: 2; err: [Inf, 0.35312327939225496, 0.1947106275899327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35312327939225496, 0.1947106275899327, 0.1863099999188782] ***
*** starting iteration: 3; err: [Inf, 0.35312327939225496, 0.1947106275899327, 0.1863099999188782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35312327939225496, 0.1947106275899327, 0.1863099999188782, 0.18033258133526642] ***
*** finished computation of 7 references, err: [Inf, 0.35312327939225496, 0.1947106275899327, 0.1863099999188782, 0.18033258133526642] ***
*** center 1: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47640816162960775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47640816162960775, 0.28782578586013013] ***
*** starting iteration: 2; err: [Inf, 0.47640816162960775, 0.28782578586013013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47640816162960775, 0.28782578586013013, 0.22452478398633124] ***
*** starting iteration: 3; err: [Inf, 0.47640816162960775, 0.28782578586013013, 0.22452478398633124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47640816162960775, 0.28782578586013013, 0.22452478398633124, 0.1747350737599852] ***
*** finished computation of 7 references, err: [Inf, 0.47640816162960775, 0.28782578586013013, 0.22452478398633124, 0.1747350737599852] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 18, 6]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 18), (3, 6)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4915000046519394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4915000046519394, 0.31740251945850195] ***
*** starting iteration: 2; err: [Inf, 0.4915000046519394, 0.31740251945850195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4915000046519394, 0.31740251945850195, 0.3082525265206127] ***
*** starting iteration: 3; err: [Inf, 0.4915000046519394, 0.31740251945850195, 0.3082525265206127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4915000046519394, 0.31740251945850195, 0.3082525265206127, 0.30385581026929936] ***
*** starting iteration: 4; err: [Inf, 0.4915000046519394, 0.31740251945850195, 0.3082525265206127, 0.30385581026929936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4915000046519394, 0.31740251945850195, 0.3082525265206127, 0.30385581026929936, 0.3011103676724255] ***
*** starting iteration: 5; err: [Inf, 0.4915000046519394, 0.31740251945850195, 0.3082525265206127, 0.30385581026929936, 0.3011103676724255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4915000046519394, 0.31740251945850195, 0.3082525265206127, 0.30385581026929936, 0.3011103676724255, 0.3002361233363603] ***
*** finished computation of 7 references, err: [Inf, 0.4915000046519394, 0.31740251945850195, 0.3082525265206127, 0.30385581026929936, 0.3011103676724255, 0.3002361233363603] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 19]]
** centroid: 3, normalized-entropy: 0.9744894033980525, [(2, 13), (3, 19)]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5811000059971463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5811000059971463, 0.38149924191697093] ***
*** starting iteration: 2; err: [Inf, 0.5811000059971463, 0.38149924191697093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245] ***
*** starting iteration: 3; err: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245, 0.3192925289095332] ***
*** starting iteration: 4; err: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245, 0.3192925289095332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245, 0.3192925289095332, 0.28785479264400465] ***
*** starting iteration: 5; err: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245, 0.3192925289095332, 0.28785479264400465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245, 0.3192925289095332, 0.28785479264400465, 0.26667355114768604] ***
*** starting iteration: 6; err: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245, 0.3192925289095332, 0.28785479264400465, 0.26667355114768604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245, 0.3192925289095332, 0.28785479264400465, 0.26667355114768604, 0.2509278451240351] ***
*** starting iteration: 7; err: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245, 0.3192925289095332, 0.28785479264400465, 0.26667355114768604, 0.2509278451240351] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245, 0.3192925289095332, 0.28785479264400465, 0.26667355114768604, 0.2509278451240351, 0.24649796801383836] ***
*** starting iteration: 8; err: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245, 0.3192925289095332, 0.28785479264400465, 0.26667355114768604, 0.2509278451240351, 0.24649796801383836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245, 0.3192925289095332, 0.28785479264400465, 0.26667355114768604, 0.2509278451240351, 0.24649796801383836, 0.24458383146845653] ***
*** starting iteration: 9; err: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245, 0.3192925289095332, 0.28785479264400465, 0.26667355114768604, 0.2509278451240351, 0.24649796801383836, 0.24458383146845653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245, 0.3192925289095332, 0.28785479264400465, 0.26667355114768604, 0.2509278451240351, 0.24649796801383836, 0.24458383146845653, 0.24423415134140794] ***
*** finished computation of 7 references, err: [Inf, 0.5811000059971463, 0.38149924191697093, 0.37074449939670245, 0.3192925289095332, 0.28785479264400465, 0.26667355114768604, 0.2509278451240351, 0.24649796801383836, 0.24458383146845653, 0.24423415134140794] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 12]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 15), (3, 12)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5743000114665406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5743000114665406, 0.3979206913051415] ***
*** starting iteration: 2; err: [Inf, 0.5743000114665406, 0.3979206913051415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788] ***
*** starting iteration: 3; err: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788, 0.28573173976657723] ***
*** starting iteration: 4; err: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788, 0.28573173976657723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788, 0.28573173976657723, 0.26701040171774365] ***
*** starting iteration: 5; err: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788, 0.28573173976657723, 0.26701040171774365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788, 0.28573173976657723, 0.26701040171774365, 0.2568781621415971] ***
*** starting iteration: 6; err: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788, 0.28573173976657723, 0.26701040171774365, 0.2568781621415971] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788, 0.28573173976657723, 0.26701040171774365, 0.2568781621415971, 0.2440008729151965] ***
*** starting iteration: 7; err: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788, 0.28573173976657723, 0.26701040171774365, 0.2568781621415971, 0.2440008729151965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788, 0.28573173976657723, 0.26701040171774365, 0.2568781621415971, 0.2440008729151965, 0.2305686198035087] ***
*** starting iteration: 8; err: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788, 0.28573173976657723, 0.26701040171774365, 0.2568781621415971, 0.2440008729151965, 0.2305686198035087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788, 0.28573173976657723, 0.26701040171774365, 0.2568781621415971, 0.2440008729151965, 0.2305686198035087, 0.228280391684957] ***
*** starting iteration: 9; err: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788, 0.28573173976657723, 0.26701040171774365, 0.2568781621415971, 0.2440008729151965, 0.2305686198035087, 0.228280391684957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788, 0.28573173976657723, 0.26701040171774365, 0.2568781621415971, 0.2440008729151965, 0.2305686198035087, 0.228280391684957, 0.22774978644998767] ***
*** finished computation of 7 references, err: [Inf, 0.5743000114665406, 0.3979206913051415, 0.3263653558971788, 0.28573173976657723, 0.26701040171774365, 0.2568781621415971, 0.2440008729151965, 0.2305686198035087, 0.228280391684957, 0.22774978644998767] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 17]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 1), (3, 17)]
*** center 4: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 6]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3206795762889658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3206795762889658, 0.21107868735222976] ***
*** finished computation of 7 references, err: [Inf, 0.3206795762889658, 0.21107868735222976] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29882936078717326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29882936078717326, 0.1866287393662056] ***
*** finished computation of 7 references, err: [Inf, 0.29882936078717326, 0.1866287393662056] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 15]]
** centroid: 6, normalized-entropy: 0.3372900666170139, [(2, 1), (3, 15)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40826299864229637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40826299864229637, 0.21704528696147055] ***
*** finished computation of 7 references, err: [Inf, 0.40826299864229637, 0.21704528696147055] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1538000020269492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1538000020269492, 0.5764225891819815] ***
*** starting iteration: 2; err: [Inf, 1.1538000020269492, 0.5764225891819815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1538000020269492, 0.5764225891819815, 0.4632485492730685] ***
*** starting iteration: 3; err: [Inf, 1.1538000020269492, 0.5764225891819815, 0.4632485492730685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1538000020269492, 0.5764225891819815, 0.4632485492730685, 0.36633100877344454] ***
*** finished computation of 7 references, err: [Inf, 1.1538000020269492, 0.5764225891819815, 0.4632485492730685, 0.36633100877344454] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 21, 15]]
** centroid: 2, normalized-entropy: 0.9798687566511527, [(2, 21), (3, 15)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.669600002506356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.669600002506356, 0.37618906979842054] ***
*** starting iteration: 2; err: [Inf, 0.669600002506356, 0.37618906979842054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.669600002506356, 0.37618906979842054, 0.36203679089605545] ***
*** starting iteration: 3; err: [Inf, 0.669600002506356, 0.37618906979842054, 0.36203679089605545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.669600002506356, 0.37618906979842054, 0.36203679089605545, 0.35814100149680156] ***
*** finished computation of 7 references, err: [Inf, 0.669600002506356, 0.37618906979842054, 0.36203679089605545, 0.35814100149680156] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 18]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7974000039219518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7974000039219518, 0.44005213133093435] ***
*** starting iteration: 2; err: [Inf, 0.7974000039219518, 0.44005213133093435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7974000039219518, 0.44005213133093435, 0.32841791844084034] ***
*** starting iteration: 3; err: [Inf, 0.7974000039219518, 0.44005213133093435, 0.32841791844084034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7974000039219518, 0.44005213133093435, 0.32841791844084034, 0.3140129620777195] ***
*** finished computation of 7 references, err: [Inf, 0.7974000039219518, 0.44005213133093435, 0.32841791844084034, 0.3140129620777195] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 21, 5]]
** centroid: 1, normalized-entropy: 0.7062740891876008, [(2, 21), (3, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3953000050275556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3953000050275556, 0.26134507855795097] ***
*** starting iteration: 2; err: [Inf, 0.3953000050275556, 0.26134507855795097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3953000050275556, 0.26134507855795097, 0.24419810452964902] ***
*** starting iteration: 3; err: [Inf, 0.3953000050275556, 0.26134507855795097, 0.24419810452964902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3953000050275556, 0.26134507855795097, 0.24419810452964902, 0.24144575314762362] ***
*** starting iteration: 4; err: [Inf, 0.3953000050275556, 0.26134507855795097, 0.24419810452964902, 0.24144575314762362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3953000050275556, 0.26134507855795097, 0.24419810452964902, 0.24144575314762362, 0.24144575314762362] ***
*** finished computation of 7 references, err: [Inf, 0.3953000050275556, 0.26134507855795097, 0.24419810452964902, 0.24144575314762362, 0.24144575314762362] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 10]]
** centroid: 1, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4025000046010358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4025000046010358, 0.29987032216353354] ***
*** starting iteration: 2; err: [Inf, 0.4025000046010358, 0.29987032216353354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4025000046010358, 0.29987032216353354, 0.2797373561992787] ***
*** starting iteration: 3; err: [Inf, 0.4025000046010358, 0.29987032216353354, 0.2797373561992787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4025000046010358, 0.29987032216353354, 0.2797373561992787, 0.2710594485041608] ***
*** starting iteration: 4; err: [Inf, 0.4025000046010358, 0.29987032216353354, 0.2797373561992787, 0.2710594485041608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4025000046010358, 0.29987032216353354, 0.2797373561992787, 0.2710594485041608, 0.27074192705112077] ***
*** finished computation of 7 references, err: [Inf, 0.4025000046010358, 0.29987032216353354, 0.2797373561992787, 0.2710594485041608, 0.27074192705112077] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 3: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 17]]
** centroid: 4, normalized-entropy: 0.7024665512903904, [(2, 4), (3, 17)]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4308000031577879] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4308000031577879, 0.2772916608536754] ***
*** starting iteration: 2; err: [Inf, 0.4308000031577879, 0.2772916608536754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4308000031577879, 0.2772916608536754, 0.23671110134553375] ***
*** starting iteration: 3; err: [Inf, 0.4308000031577879, 0.2772916608536754, 0.23671110134553375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4308000031577879, 0.2772916608536754, 0.23671110134553375, 0.23442734498503448] ***
*** starting iteration: 4; err: [Inf, 0.4308000031577879, 0.2772916608536754, 0.23671110134553375, 0.23442734498503448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4308000031577879, 0.2772916608536754, 0.23671110134553375, 0.23442734498503448, 0.23442734498503448] ***
*** finished computation of 7 references, err: [Inf, 0.4308000031577879, 0.2772916608536754, 0.23671110134553375, 0.23442734498503448, 0.23442734498503448] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 21, 5]]
** centroid: 2, normalized-entropy: 0.7062740891876008, [(2, 21), (3, 5)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.6697999986255303] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6697999986255303, 0.5040835994436259] ***
*** starting iteration: 2; err: [Inf, 1.6697999986255303, 0.5040835994436259] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6697999986255303, 0.5040835994436259, 0.4937413174203816] ***
*** starting iteration: 3; err: [Inf, 1.6697999986255303, 0.5040835994436259, 0.4937413174203816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6697999986255303, 0.5040835994436259, 0.4937413174203816, 0.4937413174203816] ***
*** finished computation of 3 references, err: [Inf, 1.6697999986255303, 0.5040835994436259, 0.4937413174203816, 0.4937413174203816] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 14]]
** centroid: 3, normalized-entropy: 0.8865408928220899, [(2, 32), (3, 14)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.564299989484853] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.564299989484853, 0.5600427832160202] ***
*** starting iteration: 2; err: [Inf, 2.564299989484853, 0.5600427832160202] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.564299989484853, 0.5600427832160202, 0.5565162449758632] ***
*** starting iteration: 3; err: [Inf, 2.564299989484853, 0.5600427832160202, 0.5565162449758632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.564299989484853, 0.5600427832160202, 0.5565162449758632, 0.5565162449758632] ***
*** finished computation of 3 references, err: [Inf, 2.564299989484853, 0.5600427832160202, 0.5565162449758632, 0.5565162449758632] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 5]]
** centroid: 1, normalized-entropy: 0.552495114325111, [(2, 34), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4808703525983749] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4808703525983749, 0.20330068264264614] ***
*** starting iteration: 2; err: [Inf, 0.4808703525983749, 0.20330068264264614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4808703525983749, 0.20330068264264614, 0.20066621672343563] ***
*** starting iteration: 3; err: [Inf, 0.4808703525983749, 0.20330068264264614, 0.20066621672343563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4808703525983749, 0.20330068264264614, 0.20066621672343563, 0.20024828075363452] ***
*** finished computation of 7 references, err: [Inf, 0.4808703525983749, 0.20330068264264614, 0.20066621672343563, 0.20024828075363452] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 3: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 25]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 10), (3, 25)]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4840233050573675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4840233050573675, 0.16904204637278114] ***
*** starting iteration: 2; err: [Inf, 0.4840233050573675, 0.16904204637278114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4840233050573675, 0.16904204637278114, 0.16407992681719763] ***
*** starting iteration: 3; err: [Inf, 0.4840233050573675, 0.16904204637278114, 0.16407992681719763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4840233050573675, 0.16904204637278114, 0.16407992681719763, 0.1632305954421851] ***
*** finished computation of 7 references, err: [Inf, 0.4840233050573675, 0.16904204637278114, 0.16407992681719763, 0.1632305954421851] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 11]]
** centroid: 4, normalized-entropy: 0.9895875212220558, [(2, 14), (3, 11)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.409050431774123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.409050431774123, 0.20165636053983577] ***
*** starting iteration: 2; err: [Inf, 0.409050431774123, 0.20165636053983577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.409050431774123, 0.20165636053983577, 0.1910591102668095] ***
*** starting iteration: 3; err: [Inf, 0.409050431774123, 0.20165636053983577, 0.1910591102668095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.409050431774123, 0.20165636053983577, 0.1910591102668095, 0.18074112164791656] ***
*** finished computation of 7 references, err: [Inf, 0.409050431774123, 0.20165636053983577, 0.1910591102668095, 0.18074112164791656] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 4]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 24), (3, 4)]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 18]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(2, 4), (3, 18)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5716000071431445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5716000071431445, 0.2620326215069875] ***
*** starting iteration: 2; err: [Inf, 0.5716000071431445, 0.2620326215069875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5716000071431445, 0.2620326215069875, 0.24225644625815465] ***
*** starting iteration: 3; err: [Inf, 0.5716000071431445, 0.2620326215069875, 0.24225644625815465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5716000071431445, 0.2620326215069875, 0.24225644625815465, 0.23979711471298606] ***
*** starting iteration: 4; err: [Inf, 0.5716000071431445, 0.2620326215069875, 0.24225644625815465, 0.23979711471298606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5716000071431445, 0.2620326215069875, 0.24225644625815465, 0.23979711471298606, 0.2393258310729273] ***
*** finished computation of 7 references, err: [Inf, 0.5716000071431445, 0.2620326215069875, 0.24225644625815465, 0.23979711471298606, 0.2393258310729273] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 10]]
** centroid: 1, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6297000012760787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6297000012760787, 0.2771489864051099] ***
*** starting iteration: 2; err: [Inf, 0.6297000012760787, 0.2771489864051099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6297000012760787, 0.2771489864051099, 0.24941257646372278] ***
*** starting iteration: 3; err: [Inf, 0.6297000012760787, 0.2771489864051099, 0.24941257646372278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6297000012760787, 0.2771489864051099, 0.24941257646372278, 0.24105719582450122] ***
*** starting iteration: 4; err: [Inf, 0.6297000012760787, 0.2771489864051099, 0.24941257646372278, 0.24105719582450122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6297000012760787, 0.2771489864051099, 0.24941257646372278, 0.24105719582450122, 0.23865431014187102] ***
*** starting iteration: 5; err: [Inf, 0.6297000012760787, 0.2771489864051099, 0.24941257646372278, 0.24105719582450122, 0.23865431014187102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6297000012760787, 0.2771489864051099, 0.24941257646372278, 0.24105719582450122, 0.23865431014187102, 0.2377182723699341] ***
*** finished computation of 7 references, err: [Inf, 0.6297000012760787, 0.2771489864051099, 0.24941257646372278, 0.24105719582450122, 0.23865431014187102, 0.2377182723699341] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 5, 3]]
** centroid: 6, normalized-entropy: 0.954434002924965, [(2, 5), (3, 3)]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41640000798820864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41640000798820864, 0.273917477629627] ***
*** starting iteration: 2; err: [Inf, 0.41640000798820864, 0.273917477629627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41640000798820864, 0.273917477629627, 0.25847010549056226] ***
*** starting iteration: 3; err: [Inf, 0.41640000798820864, 0.273917477629627, 0.25847010549056226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41640000798820864, 0.273917477629627, 0.25847010549056226, 0.2542188086718414] ***
*** starting iteration: 4; err: [Inf, 0.41640000798820864, 0.273917477629627, 0.25847010549056226, 0.2542188086718414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41640000798820864, 0.273917477629627, 0.25847010549056226, 0.2542188086718414, 0.25365697361712164] ***
*** finished computation of 7 references, err: [Inf, 0.41640000798820864, 0.273917477629627, 0.25847010549056226, 0.2542188086718414, 0.25365697361712164] ***
*** center 1: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 5]]
** centroid: 3, normalized-entropy: 0.6631968402398286, [(2, 24), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 20]]
** centroid: 4, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6262999997335252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6262999997335252, 0.253676644459841] ***
*** starting iteration: 2; err: [Inf, 0.6262999997335252, 0.253676644459841] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6262999997335252, 0.253676644459841, 0.23909105192994054] ***
*** starting iteration: 3; err: [Inf, 0.6262999997335252, 0.253676644459841, 0.23909105192994054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6262999997335252, 0.253676644459841, 0.23909105192994054, 0.22847556669824365] ***
*** finished computation of 7 references, err: [Inf, 0.6262999997335252, 0.253676644459841, 0.23909105192994054, 0.22847556669824365] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 10]]
** centroid: 1, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4785999993458087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4785999993458087, 0.2748527696102028] ***
*** starting iteration: 2; err: [Inf, 0.4785999993458087, 0.2748527696102028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4785999993458087, 0.2748527696102028, 0.26612031006142217] ***
*** starting iteration: 3; err: [Inf, 0.4785999993458087, 0.2748527696102028, 0.26612031006142217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4785999993458087, 0.2748527696102028, 0.26612031006142217, 0.2614709276241063] ***
*** finished computation of 7 references, err: [Inf, 0.4785999993458087, 0.2748527696102028, 0.26612031006142217, 0.2614709276241063] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 6]]
** centroid: 6, normalized-entropy: 0.8631205685666311, [(2, 15), (3, 6)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4305000092377641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4305000092377641, 0.286413878091425] ***
*** starting iteration: 2; err: [Inf, 0.4305000092377641, 0.286413878091425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4305000092377641, 0.286413878091425, 0.26437790104540526] ***
*** starting iteration: 3; err: [Inf, 0.4305000092377641, 0.286413878091425, 0.26437790104540526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4305000092377641, 0.286413878091425, 0.26437790104540526, 0.2563698397681535] ***
*** finished computation of 7 references, err: [Inf, 0.4305000092377641, 0.286413878091425, 0.26437790104540526, 0.2563698397681535] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 24, 5]]
** centroid: 3, normalized-entropy: 0.6631968402398286, [(2, 24), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 20]]
** centroid: 4, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.8999999999999999, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 16
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.8999999999999999, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.604513524829956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.604513524829956, 0.22171046792666055] ***
*** starting iteration: 2; err: [Inf, 0.604513524829956, 0.22171046792666055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.604513524829956, 0.22171046792666055, 0.2071327898721002] ***
*** starting iteration: 3; err: [Inf, 0.604513524829956, 0.22171046792666055, 0.2071327898721002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.604513524829956, 0.22171046792666055, 0.2071327898721002, 0.20222564738964519] ***
*** starting iteration: 4; err: [Inf, 0.604513524829956, 0.22171046792666055, 0.2071327898721002, 0.20222564738964519] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.604513524829956, 0.22171046792666055, 0.2071327898721002, 0.20222564738964519, 0.2017263079845938] ***
*** finished computation of 7 references, err: [Inf, 0.604513524829956, 0.22171046792666055, 0.2071327898721002, 0.20222564738964519, 0.2017263079845938] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 10, 12]]
** centroid: 2, normalized-entropy: 0.9940302114769566, [(2, 10), (3, 12)]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 5, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45109534624311626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45109534624311626, 0.2639583869886011] ***
*** starting iteration: 2; err: [Inf, 0.45109534624311626, 0.2639583869886011] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45109534624311626, 0.2639583869886011, 0.20153480360459933] ***
*** starting iteration: 3; err: [Inf, 0.45109534624311626, 0.2639583869886011, 0.20153480360459933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45109534624311626, 0.2639583869886011, 0.20153480360459933, 0.19517714704857617] ***
*** starting iteration: 4; err: [Inf, 0.45109534624311626, 0.2639583869886011, 0.20153480360459933, 0.19517714704857617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45109534624311626, 0.2639583869886011, 0.20153480360459933, 0.19517714704857617, 0.19288955675534353] ***
*** starting iteration: 5; err: [Inf, 0.45109534624311626, 0.2639583869886011, 0.20153480360459933, 0.19517714704857617, 0.19288955675534353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45109534624311626, 0.2639583869886011, 0.20153480360459933, 0.19517714704857617, 0.19288955675534353, 0.1901827101821109] ***
*** starting iteration: 6; err: [Inf, 0.45109534624311626, 0.2639583869886011, 0.20153480360459933, 0.19517714704857617, 0.19288955675534353, 0.1901827101821109] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45109534624311626, 0.2639583869886011, 0.20153480360459933, 0.19517714704857617, 0.19288955675534353, 0.1901827101821109, 0.18930668040654983] ***
*** finished computation of 7 references, err: [Inf, 0.45109534624311626, 0.2639583869886011, 0.20153480360459933, 0.19517714704857617, 0.19288955675534353, 0.1901827101821109, 0.18930668040654983] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 24]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 4), (3, 24)]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 5, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5425176386217171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5425176386217171, 0.25563752885544655] ***
*** starting iteration: 2; err: [Inf, 0.5425176386217171, 0.25563752885544655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5425176386217171, 0.25563752885544655, 0.21309731123520287] ***
*** starting iteration: 3; err: [Inf, 0.5425176386217171, 0.25563752885544655, 0.21309731123520287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5425176386217171, 0.25563752885544655, 0.21309731123520287, 0.19998695042681164] ***
*** starting iteration: 4; err: [Inf, 0.5425176386217171, 0.25563752885544655, 0.21309731123520287, 0.19998695042681164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5425176386217171, 0.25563752885544655, 0.21309731123520287, 0.19998695042681164, 0.19224849912647266] ***
*** starting iteration: 5; err: [Inf, 0.5425176386217171, 0.25563752885544655, 0.21309731123520287, 0.19998695042681164, 0.19224849912647266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5425176386217171, 0.25563752885544655, 0.21309731123520287, 0.19998695042681164, 0.19224849912647266, 0.19224849912647266] ***
*** finished computation of 7 references, err: [Inf, 0.5425176386217171, 0.25563752885544655, 0.21309731123520287, 0.19998695042681164, 0.19224849912647266, 0.19224849912647266] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 5]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(2, 17), (3, 5)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.8999999999999999, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.8999999999999999, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 19
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.43038275375207163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43038275375207163, 0.20695685010511583] ***
*** finished computation of 7 references, err: [Inf, 0.43038275375207163, 0.20695685010511583] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 3: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 25]]
** centroid: 4, normalized-entropy: 0.8337649072106652, [(2, 9), (3, 25)]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48137760100426263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48137760100426263, 0.17606480239096794] ***
*** finished computation of 7 references, err: [Inf, 0.48137760100426263, 0.17606480239096794] ***
*** center 1: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 2]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 10]]
** centroid: 4, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5662613848678317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5662613848678317, 0.20187420913376233] ***
*** finished computation of 7 references, err: [Inf, 0.5662613848678317, 0.20187420913376233] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 3]]
** centroid: 4, normalized-entropy: 0.6962122601251459, [(2, 13), (3, 3)]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 7, 13]]
** centroid: 6, normalized-entropy: 0.9340680553754911, [(2, 7), (3, 13)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5465000044328987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5465000044328987, 0.28869941623586476] ***
*** finished computation of 7 references, err: [Inf, 0.5465000044328987, 0.28869941623586476] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 6, 4]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 6), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 9]]
** centroid: 4, normalized-entropy: 0.9980008838722993, [(2, 10), (3, 9)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5715000024788631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5715000024788631, 0.27405707221122166] ***
*** finished computation of 7 references, err: [Inf, 0.5715000024788631, 0.27405707221122166] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 12]]
** centroid: 1, normalized-entropy: 0.9784493292686188, [(2, 17), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.526100007748326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.526100007748326, 0.2548002416678477] ***
*** finished computation of 7 references, err: [Inf, 0.526100007748326, 0.2548002416678477] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 25, 5]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 25), (3, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 6, normalized-entropy: 0.2761954276479391, [(2, 1), (3, 20)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.8999999999999999, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 1) => 0.9733333333333333
finished with 19
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.8999999999999999, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 1) => 0.9733333333333333
finished with 20
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.6513999986543705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6513999986543705, 0.36509764780869874] ***
*** starting iteration: 2; err: [Inf, 0.6513999986543705, 0.36509764780869874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6513999986543705, 0.36509764780869874, 0.2639117965608375] ***
*** starting iteration: 3; err: [Inf, 0.6513999986543705, 0.36509764780869874, 0.2639117965608375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6513999986543705, 0.36509764780869874, 0.2639117965608375, 0.24044743120906692] ***
*** starting iteration: 4; err: [Inf, 0.6513999986543705, 0.36509764780869874, 0.2639117965608375, 0.24044743120906692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6513999986543705, 0.36509764780869874, 0.2639117965608375, 0.24044743120906692, 0.2313645940191838] ***
*** starting iteration: 5; err: [Inf, 0.6513999986543705, 0.36509764780869874, 0.2639117965608375, 0.24044743120906692, 0.2313645940191838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6513999986543705, 0.36509764780869874, 0.2639117965608375, 0.24044743120906692, 0.2313645940191838, 0.22885615683691782] ***
*** starting iteration: 6; err: [Inf, 0.6513999986543705, 0.36509764780869874, 0.2639117965608375, 0.24044743120906692, 0.2313645940191838, 0.22885615683691782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6513999986543705, 0.36509764780869874, 0.2639117965608375, 0.24044743120906692, 0.2313645940191838, 0.22885615683691782, 0.22885615683691782] ***
*** finished computation of 7 references, err: [Inf, 0.6513999986543705, 0.36509764780869874, 0.2639117965608375, 0.24044743120906692, 0.2313645940191838, 0.22885615683691782, 0.22885615683691782] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 5]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 1), (3, 5)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 5]]
** centroid: 4, normalized-entropy: 0.8739810481273581, [(2, 12), (3, 5)]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4391000025317854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4391000025317854, 0.30113781021315167] ***
*** starting iteration: 2; err: [Inf, 0.4391000025317854, 0.30113781021315167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4391000025317854, 0.30113781021315167, 0.27293879327236586] ***
*** starting iteration: 3; err: [Inf, 0.4391000025317854, 0.30113781021315167, 0.27293879327236586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4391000025317854, 0.30113781021315167, 0.27293879327236586, 0.2722479753359223] ***
*** finished computation of 7 references, err: [Inf, 0.4391000025317854, 0.30113781021315167, 0.27293879327236586, 0.2722479753359223] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 8]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 4: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5617000029595816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5617000029595816, 0.3300711084689925] ***
*** starting iteration: 2; err: [Inf, 0.5617000029595816, 0.3300711084689925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5617000029595816, 0.3300711084689925, 0.2994610397066193] ***
*** starting iteration: 3; err: [Inf, 0.5617000029595816, 0.3300711084689925, 0.2994610397066193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5617000029595816, 0.3300711084689925, 0.2994610397066193, 0.27967587282356393] ***
*** starting iteration: 4; err: [Inf, 0.5617000029595816, 0.3300711084689925, 0.2994610397066193, 0.27967587282356393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5617000029595816, 0.3300711084689925, 0.2994610397066193, 0.27967587282356393, 0.2645839596427645] ***
*** starting iteration: 5; err: [Inf, 0.5617000029595816, 0.3300711084689925, 0.2994610397066193, 0.27967587282356393, 0.2645839596427645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5617000029595816, 0.3300711084689925, 0.2994610397066193, 0.27967587282356393, 0.2645839596427645, 0.2608239717444011] ***
*** starting iteration: 6; err: [Inf, 0.5617000029595816, 0.3300711084689925, 0.2994610397066193, 0.27967587282356393, 0.2645839596427645, 0.2608239717444011] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5617000029595816, 0.3300711084689925, 0.2994610397066193, 0.27967587282356393, 0.2645839596427645, 0.2608239717444011, 0.2608239717444011] ***
*** finished computation of 7 references, err: [Inf, 0.5617000029595816, 0.3300711084689925, 0.2994610397066193, 0.27967587282356393, 0.2645839596427645, 0.2608239717444011, 0.2608239717444011] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 5]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 2), (3, 5)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.8999999999999999, 0.8933333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 1) => 0.9733333333333333
finished with 22
iteration 8 finished
*** starting iteration: 1; err: [Inf, 1.179800009763572] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.179800009763572, 0.9283499623034877] ***
*** starting iteration: 2; err: [Inf, 1.179800009763572, 0.9283499623034877] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.179800009763572, 0.9283499623034877, 0.9250494087166444] ***
*** starting iteration: 3; err: [Inf, 1.179800009763572, 0.9283499623034877, 0.9250494087166444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.179800009763572, 0.9283499623034877, 0.9250494087166444, 0.9244756244741371] ***
*** finished computation of 3 references, err: [Inf, 1.179800009763572, 0.9283499623034877, 0.9250494087166444, 0.9244756244741371] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [20, 2, 0]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(1, 20), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 34]]
** centroid: 2, normalized-entropy: 0.9954515828457716, [(2, 29), (3, 34)]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3492000099781905] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3492000099781905, 0.5983959641220014] ***
*** starting iteration: 2; err: [Inf, 1.3492000099781905, 0.5983959641220014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3492000099781905, 0.5983959641220014, 0.5635996995582763] ***
*** starting iteration: 3; err: [Inf, 1.3492000099781905, 0.5983959641220014, 0.5635996995582763] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3492000099781905, 0.5983959641220014, 0.5635996995582763, 0.5413953775271534] ***
*** starting iteration: 4; err: [Inf, 1.3492000099781905, 0.5983959641220014, 0.5635996995582763, 0.5413953775271534] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3492000099781905, 0.5983959641220014, 0.5635996995582763, 0.5413953775271534, 0.5254893527326798] ***
*** starting iteration: 5; err: [Inf, 1.3492000099781905, 0.5983959641220014, 0.5635996995582763, 0.5413953775271534, 0.5254893527326798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3492000099781905, 0.5983959641220014, 0.5635996995582763, 0.5413953775271534, 0.5254893527326798, 0.512959664353839] ***
*** starting iteration: 6; err: [Inf, 1.3492000099781905, 0.5983959641220014, 0.5635996995582763, 0.5413953775271534, 0.5254893527326798, 0.512959664353839] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3492000099781905, 0.5983959641220014, 0.5635996995582763, 0.5413953775271534, 0.5254893527326798, 0.512959664353839, 0.49964312233689356] ***
*** starting iteration: 7; err: [Inf, 1.3492000099781905, 0.5983959641220014, 0.5635996995582763, 0.5413953775271534, 0.5254893527326798, 0.512959664353839, 0.49964312233689356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3492000099781905, 0.5983959641220014, 0.5635996995582763, 0.5413953775271534, 0.5254893527326798, 0.512959664353839, 0.49964312233689356, 0.4945951645996412] ***
*** starting iteration: 8; err: [Inf, 1.3492000099781905, 0.5983959641220014, 0.5635996995582763, 0.5413953775271534, 0.5254893527326798, 0.512959664353839, 0.49964312233689356, 0.4945951645996412] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3492000099781905, 0.5983959641220014, 0.5635996995582763, 0.5413953775271534, 0.5254893527326798, 0.512959664353839, 0.49964312233689356, 0.4945951645996412, 0.4945951645996412] ***
*** finished computation of 3 references, err: [Inf, 1.3492000099781905, 0.5983959641220014, 0.5635996995582763, 0.5413953775271534, 0.5254893527326798, 0.512959664353839, 0.49964312233689356, 0.4945951645996412, 0.4945951645996412] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 13]]
** centroid: 2, normalized-entropy: 0.8756633923230399, [(2, 31), (3, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.505699954342237] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.505699954342237, 1.171919209624665] ***
*** starting iteration: 2; err: [Inf, 3.505699954342237, 1.171919209624665] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.505699954342237, 1.171919209624665, 0.5807147991619337] ***
*** starting iteration: 3; err: [Inf, 3.505699954342237, 1.171919209624665, 0.5807147991619337] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.505699954342237, 1.171919209624665, 0.5807147991619337, 0.569029705977312] ***
*** starting iteration: 4; err: [Inf, 3.505699954342237, 1.171919209624665, 0.5807147991619337, 0.569029705977312] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.505699954342237, 1.171919209624665, 0.5807147991619337, 0.569029705977312, 0.5656934301312871] ***
*** starting iteration: 5; err: [Inf, 3.505699954342237, 1.171919209624665, 0.5807147991619337, 0.569029705977312, 0.5656934301312871] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.505699954342237, 1.171919209624665, 0.5807147991619337, 0.569029705977312, 0.5656934301312871, 0.5585641706514487] ***
*** starting iteration: 6; err: [Inf, 3.505699954342237, 1.171919209624665, 0.5807147991619337, 0.569029705977312, 0.5656934301312871, 0.5585641706514487] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.505699954342237, 1.171919209624665, 0.5807147991619337, 0.569029705977312, 0.5656934301312871, 0.5585641706514487, 0.5565162449758632] ***
*** starting iteration: 7; err: [Inf, 3.505699954342237, 1.171919209624665, 0.5807147991619337, 0.569029705977312, 0.5656934301312871, 0.5585641706514487, 0.5565162449758632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.505699954342237, 1.171919209624665, 0.5807147991619337, 0.569029705977312, 0.5656934301312871, 0.5585641706514487, 0.5565162449758632, 0.5565162449758632] ***
*** finished computation of 3 references, err: [Inf, 3.505699954342237, 1.171919209624665, 0.5807147991619337, 0.569029705977312, 0.5656934301312871, 0.5585641706514487, 0.5565162449758632, 0.5565162449758632] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 1, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 5]]
** centroid: 3, normalized-entropy: 0.552495114325111, [(2, 34), (3, 5)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9356811504797468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9356811504797468, 0.628313020162966] ***
*** starting iteration: 2; err: [Inf, 0.9356811504797468, 0.628313020162966] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9356811504797468, 0.628313020162966, 0.6266540424132815] ***
*** starting iteration: 3; err: [Inf, 0.9356811504797468, 0.628313020162966, 0.6266540424132815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9356811504797468, 0.628313020162966, 0.6266540424132815, 0.6258215648112929] ***
*** finished computation of 3 references, err: [Inf, 0.9356811504797468, 0.628313020162966, 0.6266540424132815, 0.6258215648112929] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 34]]
** centroid: 1, normalized-entropy: 0.9984628557283827, [(2, 31), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.101887593215347] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.101887593215347, 0.680097683313846] ***
*** starting iteration: 2; err: [Inf, 7.101887593215347, 0.680097683313846] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.101887593215347, 0.680097683313846, 0.6524259914873298] ***
*** starting iteration: 3; err: [Inf, 7.101887593215347, 0.680097683313846, 0.6524259914873298] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.101887593215347, 0.680097683313846, 0.6524259914873298, 0.6489561422809502] ***
*** starting iteration: 4; err: [Inf, 7.101887593215347, 0.680097683313846, 0.6524259914873298, 0.6489561422809502] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.101887593215347, 0.680097683313846, 0.6524259914873298, 0.6489561422809502, 0.6464778061638302] ***
*** starting iteration: 5; err: [Inf, 7.101887593215347, 0.680097683313846, 0.6524259914873298, 0.6489561422809502, 0.6464778061638302] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.101887593215347, 0.680097683313846, 0.6524259914873298, 0.6489561422809502, 0.6464778061638302, 0.643555606812794] ***
*** starting iteration: 6; err: [Inf, 7.101887593215347, 0.680097683313846, 0.6524259914873298, 0.6489561422809502, 0.6464778061638302, 0.643555606812794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.101887593215347, 0.680097683313846, 0.6524259914873298, 0.6489561422809502, 0.6464778061638302, 0.643555606812794, 0.6414380718469179] ***
*** starting iteration: 7; err: [Inf, 7.101887593215347, 0.680097683313846, 0.6524259914873298, 0.6489561422809502, 0.6464778061638302, 0.643555606812794, 0.6414380718469179] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.101887593215347, 0.680097683313846, 0.6524259914873298, 0.6489561422809502, 0.6464778061638302, 0.643555606812794, 0.6414380718469179, 0.6409651152943573] ***
*** finished computation of 3 references, err: [Inf, 7.101887593215347, 0.680097683313846, 0.6524259914873298, 0.6489561422809502, 0.6464778061638302, 0.643555606812794, 0.6414380718469179, 0.6409651152943573] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 36]]
** centroid: 2, normalized-entropy: 0.995978956518722, [(2, 31), (3, 36)]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.942766081044603] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.942766081044603, 0.5032041672868829] ***
*** starting iteration: 2; err: [Inf, 1.942766081044603, 0.5032041672868829] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.942766081044603, 0.5032041672868829, 0.4069768239547314] ***
*** starting iteration: 3; err: [Inf, 1.942766081044603, 0.5032041672868829, 0.4069768239547314] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.942766081044603, 0.5032041672868829, 0.4069768239547314, 0.3933360492180673] ***
*** starting iteration: 4; err: [Inf, 1.942766081044603, 0.5032041672868829, 0.4069768239547314, 0.3933360492180673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.942766081044603, 0.5032041672868829, 0.4069768239547314, 0.3933360492180673, 0.38785110700918096] ***
*** starting iteration: 5; err: [Inf, 1.942766081044603, 0.5032041672868829, 0.4069768239547314, 0.3933360492180673, 0.38785110700918096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.942766081044603, 0.5032041672868829, 0.4069768239547314, 0.3933360492180673, 0.38785110700918096, 0.38780782720606993] ***
*** finished computation of 3 references, err: [Inf, 1.942766081044603, 0.5032041672868829, 0.4069768239547314, 0.3933360492180673, 0.38785110700918096, 0.38780782720606993] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 5]]
** centroid: 2, normalized-entropy: 0.552495114325111, [(2, 34), (3, 5)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.8999999999999999, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 1) => 0.9733333333333333
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 1), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.9799999999999995, 3.394285714285714, 1.4685714285714286, 0.24571428571428575], [7.566666666666666, 2.8333333333333335, 6.433333333333334, 2.1333333333333333], [5.766666666666667, 2.816666666666667, 4.533333333333333, 1.5], [5.575000000000001, 2.55, 4.875, 1.775], [6.45, 2.8400000000000007, 4.74, 1.4600000000000002], [6.244444444444444, 2.8444444444444446, 5.111111111111111, 1.788888888888889], [6.449999999999999, 3.0250000000000004, 5.625, 2.2874999999999996], [5.579999999999999, 2.6466666666666665, 3.8733333333333335, 1.18], [7.6000000000000005, 3.733333333333333, 6.3999999999999995, 2.2333333333333334]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.311764705882354, 2.88235294117647, 4.541176470588235, 1.4176470588235295], [6.0249999999999995, 2.716666666666667, 5.016666666666667, 1.7666666666666666], [4.933333333333333, 3.325925925925927, 1.4333333333333331, 0.22962962962962966], [7.4750000000000005, 3.1375, 6.325, 2.075], [5.3, 2.45, 3.475, 1.125], [6.54, 3.1066666666666665, 5.6, 2.2133333333333334], [5.340000000000001, 3.9800000000000004, 1.6199999999999999, 0.3], [5.566666666666666, 2.733333333333333, 4.1, 1.2777777777777777], [4.9, 2.5, 4.5, 1.7]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.184000000000001, 2.967999999999999, 4.492000000000001, 1.412], [5.9399999999999995, 2.72, 5.0, 1.8799999999999997], [4.809523809523809, 3.185714285714286, 1.4428571428571428, 0.24285714285714294], [7.6000000000000005, 2.8, 6.574999999999999, 2.075], [5.35, 2.4099999999999997, 3.6100000000000003, 1.09], [5.45, 3.8666666666666667, 1.4916666666666665, 0.25000000000000006], [6.6526315789473704, 3.0736842105263156, 5.5473684210526315, 2.1105263157894742], [7.9, 3.8, 6.4, 2.0]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 1, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[50, 1, 1, 34, 38, 9, 17, 1, 12, 4, 39, 14, 28, 27, 31, 29, 29, 38, 1, 4, 21, 1, 24, 38, 25, 35, 56, 32, 1, 47, 36, 46, 25, 9, 25, 31, 23, 36, 44, 45, 19, 35, 32, 30, 57, 1, 1, 38, 28, 37, 11, 45, 1, 17, 40, 23, 42, 58, 34, 30, 12, 41, 34, 34, 42, 34, 26, 28, 36, 65, 31, 45, 29, 42, 40, 51, 63, 37, 33, 30, 12, 39, 31, 37, 32, 21, 37, 43, 21, 38, 22, 19, 41, 26, 49, 26, 27, 47, 1, 1, 36, 44, 21, 23, 46, 41, 46, 29, 14, 43, 1, 46, 44, 41, 13, 22, 20, 52, 36, 43, 34, 34, 33, 20, 23, 27, 32, 30, 30, 32, 37, 20, 36, 22, 24, 29, 34, 47, 4, 36, 23, 13, 26, 18, 30, 51, 30, 13, 50, 73, 39, 47, 35, 22, 42, 45, 54, 48, 20, 42, 43, 50, 28, 51, 39, 24, 33, 14, 29, 27, 44, 32, 39, 21, 18, 39, 35, 30, 31, 40, 38, 22, 30, 46, 26, 24, 30, 43, 50, 29, 46, 29, 20, 28, 34, 20, 30, 59, 17, 48, 51, 43, 56, 29, 30, 53, 31, 25, 23, 22, 26, 25, 42, 22, 17, 48, 36, 16, 38, 34, 36, 34, 5, 35, 40, 40, 49, 56, 36, 35, 40, 21, 44, 36, 1, 42, 36, 50, 23, 40, 1, 48, 25, 47, 42, 57, 76, 23, 38, 30, 46, 62, 44, 41, 46, 38, 29, 26, 32, 33, 32, 34, 51, 56, 19, 42, 27, 39, 95, 33, 41, 31, 48, 45, 41, 39, 43, 40, 59, 53, 15, 31, 43, 42, 29, 40, 12, 97, 38, 43, 45, 17, 57, 32, 39, 38, 39, 50, 38, 26]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.585, speedup = 0.32311237222102357, eval_ratio = 0.041448)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.4236111111111111,"f1":null,"seconds":7.316842675209045e-5,"exhaustive_search_seconds":0.00037398561835289,"evaluations":341.015625,"distances_sum":1692.7054206733446}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5703124999999999,"recall":0.5703124999999999,"f1":null,"seconds":0.00010821409523487091,"exhaustive_search_seconds":0.00037398561835289,"evaluations":379.4453125,"distances_sum":1625.7094010307196}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6718749999999999,"recall":0.6718749999999999,"f1":0.6718749999999999,"seconds":0.0002457164227962494,"exhaustive_search_seconds":0.00037398561835289,"evaluations":417.90625,"distances_sum":1579.941911696205}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7404513888888885,"recall":0.7404513888888885,"f1":0.7404513888888885,"seconds":0.0001621600240468979,"exhaustive_search_seconds":0.00037398561835289,"evaluations":456.9375,"distances_sum":1557.7107524271964}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7881944444444438,"recall":0.7881944444444438,"f1":0.7881944444444438,"seconds":0.00019061751663684845,"exhaustive_search_seconds":0.00037398561835289,"evaluations":496.1015625,"distances_sum":1544.7134159502061}
KCenters.DeloneInvIndex> reached performance {"precision":0.8324652777777768,"recall":0.8324652777777768,"f1":0.8324652777777768,"seconds":0.00022400543093681335,"exhaustive_search_seconds":0.00037398561835289,"evaluations":537.2578125,"distances_sum":1534.0907009305886}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7919999999999995, speedup = 1.6947780873984393, eval_ratio = 0.053361)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
