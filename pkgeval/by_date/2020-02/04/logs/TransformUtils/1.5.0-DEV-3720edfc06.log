Julia Version 1.5.0-DEV.230
Commit 3720edfc06 (2020-02-03 20:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_RfdhXp/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.01244016738015364 0.11316944815856192; 0.01244016738015364 0.0 0.07384654609600448; -0.11316944815856192 -0.07384654609600448 0.0])
dAA = so3([0.0 -0.07910075792915922 -0.09150010045488524; 0.07910075792915922 0.0 0.03726382011996382; 0.09150010045488524 -0.03726382011996382 0.0])
dAA = so3([0.0 -0.001283952808273496 -0.19578123317526755; 0.001283952808273496 0.0 -0.06374763980845873; 0.19578123317526755 0.06374763980845873 0.0])
dAA = Quaternion(0.9915563254748919, [0.08886719701432354, -0.09382050467637235, 0.010788308848872814])
dAA = SO3([0.992652791848328 0.09212981343909551 -0.0784380794729081; -0.09600163644767698 0.9942660081763225 -0.04710404212474477; 0.07364862955336543 0.05428814291168124 0.9958055417118911])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9546638772095133 -0.18390230203474386 -0.23408721634814067; 0.20503538172423985 0.9763064027025683 0.0691830924660491; 0.21581791814512208 -0.11404276105168841 0.9697509344461664]), [-0.7384654609600448, 1.1316944815856191, 0.12440167380153638])
xj = SE3(SO3([0.8920632970627089 -0.11289984125319229 -0.43758050673974624; -0.0905308105500496 0.9040159230248805 -0.4178030436205848; 0.44274964299789127 0.4123212785710643 0.7962185107511396]), [0.6374763980845872, -1.9578123317526754, 0.012839528082734959])
Dx = SE3(SO3([0.9286118928025541 0.16656016962322834 -0.33156848831084507; -0.3029306956145312 0.8563368174514755 -0.41823468140695164; 0.21427306456984718 0.4888199719448454 0.8456607409757688]), [0.6560266711251225, -3.256621303273035, -0.6440195302419424])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
