Julia Version 1.5.0-DEV.347
Commit 9f680d3f8d (2020-02-26 17:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed InvertedIndices ───────────── v1.0.0
  Installed TableTraits ───────────────── v1.0.0
  Installed OrderedCollections ────────── v1.1.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed Tables ────────────────────── v1.0.2
  Installed JSON ──────────────────────── v0.21.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed Compat ────────────────────── v3.6.0
  Installed MLDataUtils ───────────────── v0.5.0
  Installed DataAPI ───────────────────── v1.1.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed CategoricalArrays ─────────── v0.7.7
  Installed Reexport ──────────────────── v0.2.0
  Installed Parsers ───────────────────── v0.3.11
  Installed SimilaritySearch ──────────── v0.3.19
  Installed MLDataPattern ─────────────── v0.5.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Missings ──────────────────── v0.4.3
  Installed DataStructures ────────────── v0.17.10
  Installed DataFrames ────────────────── v0.20.2
  Installed StatsBase ─────────────────── v0.32.1
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.6.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.10
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.2
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_bWzdQi/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.6.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.10
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.2
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9364293802777927
[ Info: 0.8321307849884033
[ Info: 0.5561161469916502
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3433588461826245
mean(cdnet.distances) = 0.39888064794242384
mean(crand.distances) = 0.3343982335925102
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5654296875,"f1":null,"seconds":4.325062036514282e-6,"exhaustive_search_seconds":2.1085143089294434e-6,"evaluations":7.5546875,"distances_sum":1485.2632632590726}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.560546875,"f1":null,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":2.1085143089294434e-6,"evaluations":7.4609375,"distances_sum":1463.1423739120717}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5654296875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5654296875,"f1":null,"seconds":4.325062036514282e-6,"exhaustive_search_seconds":2.1085143089294434e-6,"evaluations":7.5546875,"distances_sum":1485.2632632590726}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9085138819513826,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":2.1085143089294434e-6,"evaluations":8.578125,"distances_sum":2407.621377987854}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8421401515151522,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":2.1085143089294434e-6,"evaluations":8.375,"distances_sum":1997.9054110763448}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8134613650238659,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":2.1085143089294434e-6,"evaluations":8.0703125,"distances_sum":1927.9671813196435}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8408203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.9085138819513826,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":2.1085143089294434e-6,"evaluations":8.578125,"distances_sum":2407.621377987854}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.95179455960706,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":2.1085143089294434e-6,"evaluations":8.84375,"distances_sum":2715.214476238229}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.95179455960706,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":2.1085143089294434e-6,"evaluations":8.84375,"distances_sum":2715.214476238229}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.95179455960706,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":2.1085143089294434e-6,"evaluations":8.84375,"distances_sum":2715.214476238229}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.462890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.462890625,"f1":null,"seconds":3.926455974578857e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":5.9609375,"distances_sum":1157.9497509389464}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.556640625,"f1":null,"seconds":4.308298230171204e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.546875,"distances_sum":1425.3381892125897}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.556640625,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.556640625,"f1":null,"seconds":4.308298230171204e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.546875,"distances_sum":1425.3381892125897}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9359317765567775,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.59375,"distances_sum":2530.9325010297553}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8594041375291384,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.984375,"distances_sum":2061.165325088741}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.706434017371518,"seconds":4.172325134277344e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.4921875,"distances_sum":1418.3085624438468}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9359317765567775,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.59375,"distances_sum":2530.9325010297553}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9389168123543131,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.6796875,"distances_sum":2528.1768362068888}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.950732600732601,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7265625,"distances_sum":2622.20350022998}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9520375457875462,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.75,"distances_sum":2641.119959473423}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9520375457875462,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.75,"distances_sum":2641.119959473423}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9520375457875462,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.75,"distances_sum":2641.119959473423}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6103515625, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.6103515625,"f1":null,"seconds":4.388391971588135e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.1484375,"distances_sum":1351.2091963064008}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2119140625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2119140625,"f1":null,"seconds":3.417953848838806e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":6.0234375,"distances_sum":493.63997889131923}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6083984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.6083984375,"f1":null,"seconds":4.533678293228149e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.1875,"distances_sum":1385.6557172048058}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6103515625,"state":{"ssize":2,"bsize":3},"perf":{"precision":null,"recall":0.6103515625,"f1":null,"seconds":4.388391971588135e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.1484375,"distances_sum":1351.2091963064008}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7978583916083923,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.7109375,"distances_sum":1555.2778772668544}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8809039918414926,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.5234375,"distances_sum":1942.441445464801}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8976939726939733,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.6171875,"distances_sum":2057.1959728944958}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8626977189477196,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.265625,"distances_sum":1850.0655984346658}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.8976939726939733,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.6171875,"distances_sum":2057.1959728944958}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9042384698634705,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.6640625,"distances_sum":2082.3469236738206}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9691620879120884,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.8984375,"distances_sum":2536.971073616983}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9639537545787551,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.9140625,"distances_sum":2478.589862488681}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9537603021978025,"seconds":6.105750799179077e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.8515625,"distances_sum":2438.7422377022767}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9476820054945061,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.75,"distances_sum":2372.2020108302017}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9513621794871797,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.8046875,"distances_sum":2425.282052641081}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9691620879120884,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.8984375,"distances_sum":2536.971073616983}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9691620879120884,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.8984375,"distances_sum":2536.971073616983}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.16015625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.16015625,"f1":null,"seconds":3.4365803003311157e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":4.0859375,"distances_sum":460.64987521730325}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4794921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4794921875,"f1":0.6308427683427688,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.0703125,"distances_sum":1197.4145102148257}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4794921875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.4794921875,"f1":0.6308427683427688,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.0703125,"distances_sum":1197.4145102148257}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.48046875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.48046875,"f1":0.6317245254745257,"seconds":4.513189196586609e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.125,"distances_sum":1231.7740860053652}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.48046875,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.48046875,"f1":0.6317245254745257,"seconds":4.513189196586609e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.125,"distances_sum":1231.7740860053652}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.48046875,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.48046875,"f1":0.6317245254745257,"seconds":4.513189196586609e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.125,"distances_sum":1231.7740860053652}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3876953125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3876953125,"f1":null,"seconds":4.2691826820373535e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":6.0234375,"distances_sum":776.733037533277}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1796875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1796875,"f1":null,"seconds":3.6749988794326782e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":5.484375,"distances_sum":462.4856264807622}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9797154017857143,"recall":0.7509765625,"f1":0.843077300303863,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.078125,"distances_sum":1735.9075713697619}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":0.9797154017857143,"recall":0.7509765625,"f1":0.843077300303863,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.078125,"distances_sum":1735.9075713697619}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":2,"bsize":9}, perf: {"precision":0.9851655505952381,"recall":0.8876953125,"f1":0.9301317822802203,"seconds":6.722286343574524e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.7421875,"distances_sum":2272.0115220727644}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":4,"bsize":6}, perf: {"precision":0.9884393601190475,"recall":0.8427734375,"f1":0.9039384443681323,"seconds":6.3534826040267944e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.4609375,"distances_sum":2017.9938905355552}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":2,"bsize":9},"perf":{"precision":0.9851655505952381,"recall":0.8876953125,"f1":0.9301317822802203,"seconds":6.722286343574524e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.7421875,"distances_sum":2272.0115220727644}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":5,"bsize":10}, perf: {"precision":0.9892578125,"recall":0.935546875,"f1":0.9589342298326674,"seconds":7.489696145057678e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8984375,"distances_sum":2409.1182607598043}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.9833519345238096,"recall":0.923828125,"f1":0.9499127174908427,"seconds":6.556510925292969e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8828125,"distances_sum":2381.7496577760844}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":12}, perf: {"precision":0.9847935267857143,"recall":0.9462890625,"f1":0.9638686183608061,"seconds":6.770715117454529e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9609375,"distances_sum":2456.7188127524037}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":6,"bsize":10}, perf: {"precision":0.9860491071428572,"recall":0.9306640625,"f1":0.9551768543956046,"seconds":6.726011633872986e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.875,"distances_sum":2417.593978277952}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":6,"bsize":8}, perf: {"precision":0.9877232142857144,"recall":0.904296875,"f1":0.9410370879120884,"seconds":6.379559636116028e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8203125,"distances_sum":2321.1044918976054}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":2,"bsize":12},"perf":{"precision":0.9847935267857143,"recall":0.9462890625,"f1":0.9638686183608061,"seconds":6.770715117454529e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9609375,"distances_sum":2456.7188127524037}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":2,"bsize":12},"perf":{"precision":0.9847935267857143,"recall":0.9462890625,"f1":0.9638686183608061,"seconds":6.770715117454529e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9609375,"distances_sum":2456.7188127524037}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8358597999223006,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.4609375,"distances_sum":1714.9110709992908}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8640437687312693,"seconds":7.022172212600708e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.609375,"distances_sum":1812.2536228930082}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8506384240759249,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.4375,"distances_sum":1790.6317612238818}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8640437687312693,"seconds":7.022172212600708e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.609375,"distances_sum":1812.2536228930082}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9532051282051284,"seconds":6.6105276346206665e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.8828125,"distances_sum":2325.3888393904695}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9092496045621051,"seconds":6.670132279396057e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.78125,"distances_sum":2049.483998841279}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9618360805860812,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.8984375,"distances_sum":2398.4959794933893}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9315767565767573,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.796875,"distances_sum":2198.0808349690815}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.940499084249085,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.875,"distances_sum":2251.113319073126}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9618360805860812,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.8984375,"distances_sum":2398.4959794933893}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.965762362637363,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.921875,"distances_sum":2431.0075807645835}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9696256868131872,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.921875,"distances_sum":2447.382820000079}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9825148809523809,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.984375,"distances_sum":2534.2470445842864}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9655906593406599,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.890625,"distances_sum":2433.744678694852}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9686584249084254,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.90625,"distances_sum":2451.872668466224}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9825148809523809,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.984375,"distances_sum":2534.2470445842864}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9825148809523809,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.984375,"distances_sum":2534.2470445842864}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1865234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1865234375,"f1":null,"seconds":2.8945505619049072e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.15625,"distances_sum":415.56035744312567}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7915296509046518,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.59375,"distances_sum":1505.0899553875915}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.38671875,"f1":null,"seconds":3.602355718612671e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.71875,"distances_sum":827.2923499876407}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.7915296509046518,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.59375,"distances_sum":1505.0899553875915}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8527082292707302,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.8125,"distances_sum":1746.7050926536278}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9248085248085253,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.4453125,"distances_sum":2151.9014592799963}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9248085248085253,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.4453125,"distances_sum":2151.9014592799963}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9633585164835168,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8125,"distances_sum":2366.478533537054}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9633585164835168,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8125,"distances_sum":2366.478533537054}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9633585164835168,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8125,"distances_sum":2366.478533537054}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8596642940392949,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.3359375,"distances_sum":1732.4086230628754}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2158203125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2158203125,"f1":null,"seconds":3.335997462272644e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.78125,"distances_sum":485.38622941955805}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8596642940392949,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.3359375,"distances_sum":1732.4086230628754}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9501201923076928,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7265625,"distances_sum":2348.465965234423}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9273523351648357,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6328125,"distances_sum":2211.037932994715}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9501201923076928,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7265625,"distances_sum":2348.465965234423}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9799107142857149,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9375,"distances_sum":2538.493489054461}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725847069597073,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8828125,"distances_sum":2485.9368220312926}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720638736263741,"seconds":4.740431904792786e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9296875,"distances_sum":2469.231129776755}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9611836080586085,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8515625,"distances_sum":2389.7470723283427}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9799107142857149,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9375,"distances_sum":2538.493489054461}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9799107142857149,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9375,"distances_sum":2538.493489054461}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8599790834165842,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0859375,"distances_sum":1846.5348955202176}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8599790834165842,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0859375,"distances_sum":1846.5348955202176}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9118475274725281,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.2890625,"distances_sum":2083.8159120266973}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.92740956959707,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.4765625,"distances_sum":2225.957616860277}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.92740956959707,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.4765625,"distances_sum":2225.957616860277}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9440762362637366,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6796875,"distances_sum":2344.046243439653}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9454300907425915,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7578125,"distances_sum":2322.041495757913}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9388621794871802,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.609375,"distances_sum":2315.124917407183}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9677483974358978,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.84375,"distances_sum":2493.9227348693867}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9677483974358978,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.84375,"distances_sum":2493.9227348693867}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9677483974358978,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.84375,"distances_sum":2493.9227348693867}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.7992835289710297,"seconds":3.026798367500305e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.859375,"distances_sum":1572.69598550265}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4267578125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4267578125,"f1":null,"seconds":2.341344952583313e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.5390625,"distances_sum":913.0035778354492}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7932338494838503,"seconds":3.039836883544922e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.8515625,"distances_sum":1518.93631485805}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.7992835289710297,"seconds":3.026798367500305e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.859375,"distances_sum":1572.69598550265}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9503636988011992,"seconds":3.913417458534241e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7890625,"distances_sum":2473.3237566859157}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9165693681318687,"seconds":3.475695848464966e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.296875,"distances_sum":2216.006889694088}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9403617216117224,"seconds":3.6172568798065186e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6953125,"distances_sum":2423.9266679543566}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.865542270229771,"seconds":3.416091203689575e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1640625,"distances_sum":1903.5389930986244}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8723136238761248,"seconds":3.3173710107803345e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.21875,"distances_sum":1899.2398244622416}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9154366466866474,"seconds":3.4850090742111206e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3046875,"distances_sum":2178.417523105164}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9503636988011992,"seconds":3.913417458534241e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7890625,"distances_sum":2473.3237566859157}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9624484890109891,"seconds":4.265457391738892e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.859375,"distances_sum":2548.8483177760963}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9698317307692311,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8984375,"distances_sum":2582.9631163685244}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763049450549453,"seconds":3.861263394355774e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9296875,"distances_sum":2622.5922498068253}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9655906593406598,"seconds":3.824010491371155e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.859375,"distances_sum":2593.8304256010256}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635645604395608,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8046875,"distances_sum":2571.482726055614}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763049450549453,"seconds":3.861263394355774e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9296875,"distances_sum":2622.5922498068253}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763049450549453,"seconds":3.861263394355774e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9296875,"distances_sum":2622.5922498068253}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7099609375,"f1":0.8196558649683657,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":7.859375,"distances_sum":1694.0423919370066}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":3.773719072341919e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":6.0390625,"distances_sum":502.26422198207104}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7099609375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7099609375,"f1":0.8196558649683657,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":7.859375,"distances_sum":1694.0423919370066}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9388564560439568,"seconds":6.748363375663757e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.5234375,"distances_sum":2446.9063816844196}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9388564560439568,"seconds":6.748363375663757e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.5234375,"distances_sum":2446.9063816844196}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9507898351648355,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.7109375,"distances_sum":2564.2356910789385}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9507898351648355,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.7109375,"distances_sum":2564.2356910789385}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9507898351648355,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.7109375,"distances_sum":2564.2356910789385}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1904296875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1904296875,"f1":null,"seconds":2.0563602447509766e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":5.8203125,"distances_sum":475.42299128304614}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2021484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2021484375,"f1":null,"seconds":2.073124051094055e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":6.0546875,"distances_sum":492.6943943032472}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7066811660561666,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.203125,"distances_sum":1355.0036713792601}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5654296875,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5654296875,"f1":0.7066811660561666,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.203125,"distances_sum":1355.0036713792601}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9006384240759245,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.28125,"distances_sum":2178.114523421088}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8713115009990018,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.1484375,"distances_sum":1961.404040567975}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7158203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7158203125,"f1":0.8241581335331343,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.6015625,"distances_sum":1725.861407178341}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8685189810189818,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.078125,"distances_sum":1890.2269151029425}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.83203125,"f1":0.9006384240759245,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.28125,"distances_sum":2178.114523421088}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9280250999001005,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.5078125,"distances_sum":2416.31527545525}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9337511446886453,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.6796875,"distances_sum":2434.5166720749958}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9520375457875464,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7265625,"distances_sum":2592.273504338014}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9522550366300371,"seconds":6.271526217460632e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7578125,"distances_sum":2543.0926055791297}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9520375457875464,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7265625,"distances_sum":2592.273504338014}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9520375457875464,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7265625,"distances_sum":2592.273504338014}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6279296875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6279296875,"f1":0.7577878718503726,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.671875,"distances_sum":1285.7319979565282}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6953079906204912,"seconds":4.556030035018921e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.0703125,"distances_sum":1154.191257126684}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.56640625,"f1":0.7112510753135759,"seconds":4.641711711883545e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.1015625,"distances_sum":1170.2851206809673}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6279296875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6279296875,"f1":0.7577878718503726,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.671875,"distances_sum":1285.7319979565282}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.909094551282052,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.65625,"distances_sum":1879.9806454787806}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8470857267732277,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.375,"distances_sum":1640.7627109412733}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9624484890109893,"seconds":6.273388862609863e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8828125,"distances_sum":2243.3227587808065}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.9009703837828845,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.6875,"distances_sum":1837.2617656188331}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9104967948717957,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7109375,"distances_sum":1889.6294902409622}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8509098540348548,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.421875,"distances_sum":1657.863642595684}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7788610694860701,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.84375,"distances_sum":1381.8524614503383}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9624484890109893,"seconds":6.273388862609863e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8828125,"distances_sum":2243.3227587808065}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758756868131869,"seconds":6.577000021934509e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.984375,"distances_sum":2316.489669960754}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.97029532967033,"seconds":6.586313247680664e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9375,"distances_sum":2287.111618799826}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657222985347991,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.90625,"distances_sum":2256.0337671019975}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758756868131869,"seconds":6.577000021934509e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.984375,"distances_sum":2316.489669960754}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758756868131869,"seconds":6.577000021934509e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.984375,"distances_sum":2316.489669960754}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6999035686535692,"seconds":2.7120113372802734e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":6.9375,"distances_sum":1209.081700195732}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1875,"f1":null,"seconds":1.8496066331863403e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":4.6171875,"distances_sum":420.7421960981371}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5546875,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.5546875,"f1":0.6999035686535692,"seconds":2.7120113372802734e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":6.9375,"distances_sum":1209.081700195732}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.724609375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.724609375,"f1":0.8314012376512386,"seconds":3.119930624961853e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.046875,"distances_sum":1623.5812541970272}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.724609375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.724609375,"f1":0.8314012376512386,"seconds":3.119930624961853e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.046875,"distances_sum":1623.5812541970272}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8757445679320687,"seconds":3.4570693969726562e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.2734375,"distances_sum":1888.9230358028235}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9383298992673998,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.6484375,"distances_sum":2165.986458951132}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8896265193140201,"seconds":3.514811396598816e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.453125,"distances_sum":1917.876100813708}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8345305735930744,"seconds":3.341585397720337e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.171875,"distances_sum":1611.68711952521}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9383298992673998,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.6484375,"distances_sum":2165.986458951132}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8916015625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9383298992673998,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.6484375,"distances_sum":2165.986458951132}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7948270479520486,"seconds":3.2670795917510986e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":7.875,"distances_sum":1521.8017183909717}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.548828125,"f1":0.6913667929292936,"seconds":2.4884939193725586e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":6.796875,"distances_sum":1231.7279701675347}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.7948270479520486,"seconds":3.2670795917510986e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":7.875,"distances_sum":1521.8017183909717}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9299424533799542,"seconds":3.6247074604034424e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.796875,"distances_sum":2143.25500001601}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8938108766233774,"seconds":3.4961849451065063e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.4609375,"distances_sum":1958.557093848791}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9258127289377296,"seconds":3.4552067518234253e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7578125,"distances_sum":2127.649403624403}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8500067640692648,"seconds":3.1497329473495483e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.171875,"distances_sum":1736.9526931466055}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9299424533799542,"seconds":3.6247074604034424e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.796875,"distances_sum":2143.25500001601}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9467719780219784,"seconds":3.634020686149597e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.71875,"distances_sum":2318.611430411254}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9429201007326014,"seconds":3.557652235031128e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.6796875,"distances_sum":2298.3920653734476}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9606456043956048,"seconds":3.6675482988357544e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.796875,"distances_sum":2393.793491923273}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9514594780219784,"seconds":3.5017728805541992e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8203125,"distances_sum":2335.8241423184895}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9626888736263739,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.828125,"distances_sum":2400.756969138162}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9626888736263739,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.828125,"distances_sum":2400.756969138162}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9626888736263739,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.828125,"distances_sum":2400.756969138162}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4052734375,"f1":null,"seconds":3.60049307346344e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.90625,"distances_sum":812.2653623043893}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.788436910311911,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.65625,"distances_sum":1439.0952567223271}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8152456918081925,"seconds":4.643574357032776e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.9765625,"distances_sum":1512.9431686643711}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.69921875,"f1":0.8152456918081925,"seconds":4.643574357032776e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.9765625,"distances_sum":1512.9431686643711}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8903102106227113,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.390625,"distances_sum":1860.6442983479626}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8862039002664013,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.34375,"distances_sum":1873.5887844934848}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8115234375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8115234375,"f1":0.8903102106227113,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.390625,"distances_sum":1860.6442983479626}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9483173076923079,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.828125,"distances_sum":2216.535811617046}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9705929487179489,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2381.5685701413845}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9705929487179489,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2381.5685701413845}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9705929487179489,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2381.5685701413845}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.6969818376068381,"seconds":2.898275852203369e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.28125,"distances_sum":1182.074960504249}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2529296875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2529296875,"f1":null,"seconds":2.088025212287903e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":5.4765625,"distances_sum":556.3768215868297}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.533203125,"f1":0.6780363733488738,"seconds":2.6226043701171875e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.1015625,"distances_sum":1171.6756664919503}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5556640625,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5556640625,"f1":0.6969818376068381,"seconds":2.898275852203369e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.28125,"distances_sum":1182.074960504249}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8651738886113893,"seconds":3.3583492040634155e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.328125,"distances_sum":1719.5400862006006}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8942956349206358,"seconds":3.6284327507019043e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.875,"distances_sum":1865.2519189745024}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7955258283383291,"seconds":3.868713974952698e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.1328125,"distances_sum":1501.6761621006283}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9312213827838834,"seconds":3.5427510738372803e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8046875,"distances_sum":2112.574546816236}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8549372502497511,"seconds":3.2372772693634033e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.2109375,"distances_sum":1702.3666941627835}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9312213827838834,"seconds":3.5427510738372803e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8046875,"distances_sum":2112.574546816236}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.933605457042958,"seconds":3.809109330177307e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.765625,"distances_sum":2162.936170389729}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9513221153846159,"seconds":3.563240170478821e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8515625,"distances_sum":2267.1656520350643}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9498288170163175,"seconds":3.855675458908081e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8359375,"distances_sum":2264.2311695282815}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":12,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9555116758241767,"seconds":3.589317202568054e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.875,"distances_sum":2288.1770872851084}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9562957875457879,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.890625,"distances_sum":2294.503940984408}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9489812271062276,"seconds":3.831461071968079e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8203125,"distances_sum":2253.4080054689584}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9507669413919417,"seconds":3.5874545574188232e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.765625,"distances_sum":2283.1036521515502}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9562957875457879,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.890625,"distances_sum":2294.503940984408}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9562957875457879,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.890625,"distances_sum":2294.503940984408}}, n: 9
mean(cfft.distances) = 0.6340507048854698
mean(cdnet.distances) = 0.3487542719345213
mean(crand.distances) = 0.3417205708822812
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9066666666666666
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333332
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9199999999999999
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9155555555555556
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8622222222222223
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9044444444444445
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9288888888888889
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9022222222222224
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8933333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8933333333333332
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9066666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8755555555555556
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9133333333333334
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.931111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8777777777777779
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8755555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222224
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8822222222222224
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.851111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8644444444444445
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8999999999999999
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.5815412742892901] ***
*** center 1: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.24567105466368477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24567105466368477, 0.20262078103726847] ***
*** finished computation of 7 references, err: [Inf, 0.24567105466368477, 0.20262078103726847] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [64, 12, 0]]
** centroid: 1, normalized-entropy: 0.6292492238560344, [(1, 64), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [106, 29, 0]]
** centroid: 2, normalized-entropy: 0.7505858411812107, [(1, 106), (2, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [55, 28, 0]]
** centroid: 3, normalized-entropy: 0.9222596474738021, [(1, 55), (2, 28)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [24, 55, 0]]
** centroid: 4, normalized-entropy: 0.8858834790484443, [(1, 24), (2, 55)]
*** center 5: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 140, 22]]
** centroid: 6, normalized-entropy: 0.5731393980555147, [(2, 140), (3, 22)]
*** center 7: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
finished with 11 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38712018956332367] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38712018956332367, 0.3020069294555991] ***
*** starting iteration: 2; err: [Inf, 0.38712018956332367, 0.3020069294555991] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38712018956332367, 0.3020069294555991, 0.299856877564131] ***
*** starting iteration: 3; err: [Inf, 0.38712018956332367, 0.3020069294555991, 0.299856877564131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38712018956332367, 0.3020069294555991, 0.299856877564131, 0.2997010488415489] ***
*** finished computation of 3 references, err: [Inf, 0.38712018956332367, 0.3020069294555991, 0.299856877564131, 0.2997010488415489] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [247, 14, 0]]
** centroid: 1, normalized-entropy: 0.30166203063033736, [(1, 247), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [132, 48, 0]]
** centroid: 2, normalized-entropy: 0.8366407419411671, [(1, 132), (2, 48)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [1, 202, 22]]
** centroid: 3, normalized-entropy: 0.46330931881705484, [(2, 202), (3, 22)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3942538172794112] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3942538172794112, 0.31057460382413205] ***
*** starting iteration: 2; err: [Inf, 0.3942538172794112, 0.31057460382413205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3942538172794112, 0.31057460382413205, 0.29225647003380123] ***
*** starting iteration: 3; err: [Inf, 0.3942538172794112, 0.31057460382413205, 0.29225647003380123] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3942538172794112, 0.31057460382413205, 0.29225647003380123, 0.28641762033106993] ***
*** finished computation of 3 references, err: [Inf, 0.3942538172794112, 0.31057460382413205, 0.29225647003380123, 0.28641762033106993] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [94, 156, 20]]
** centroid: 1, normalized-entropy: 0.7983540934350162, [(1, 94), (2, 156), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [108, 93, 0]]
** centroid: 2, normalized-entropy: 0.995978956518722, [(1, 108), (2, 93)]
*** center 3: selecting labels [1] (freq >= 2) [from [196, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4060146538833941] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4060146538833941, 0.2936574765390296] ***
*** starting iteration: 2; err: [Inf, 0.4060146538833941, 0.2936574765390296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4060146538833941, 0.2936574765390296, 0.29119930067553423] ***
*** starting iteration: 3; err: [Inf, 0.4060146538833941, 0.2936574765390296, 0.29119930067553423] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4060146538833941, 0.2936574765390296, 0.29119930067553423, 0.2905378410148656] ***
*** finished computation of 3 references, err: [Inf, 0.4060146538833941, 0.2936574765390296, 0.29119930067553423, 0.2905378410148656] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [81, 150, 20]]
** centroid: 1, normalized-entropy: 0.7957462419176886, [(1, 81), (2, 150), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [192, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [109, 115, 0]]
** centroid: 3, normalized-entropy: 0.9994823896500677, [(1, 109), (2, 115)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.44269627314648247] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.44269627314648247, 0.29412870030771865] ***
*** starting iteration: 2; err: [Inf, 0.44269627314648247, 0.29412870030771865] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.44269627314648247, 0.29412870030771865, 0.2935225594251811] ***
*** finished computation of 3 references, err: [Inf, 0.44269627314648247, 0.29412870030771865, 0.2935225594251811] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [84, 151, 22]]
** centroid: 1, normalized-entropy: 0.808631571317194, [(1, 84), (2, 151), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [97, 113, 0]]
** centroid: 2, normalized-entropy: 0.9958085250705626, [(1, 97), (2, 113)]
*** center 3: selecting labels [1] (freq >= 1) [from [199, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38243619319626776] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38243619319626776, 0.2950914294907133] ***
*** starting iteration: 2; err: [Inf, 0.38243619319626776, 0.2950914294907133] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38243619319626776, 0.2950914294907133, 0.2885283108547922] ***
*** starting iteration: 3; err: [Inf, 0.38243619319626776, 0.2950914294907133, 0.2885283108547922] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38243619319626776, 0.2950914294907133, 0.2885283108547922, 0.2870121118521829] ***
*** starting iteration: 4; err: [Inf, 0.38243619319626776, 0.2950914294907133, 0.2885283108547922, 0.2870121118521829] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38243619319626776, 0.2950914294907133, 0.2885283108547922, 0.2870121118521829, 0.28642460217663107] ***
*** finished computation of 3 references, err: [Inf, 0.38243619319626776, 0.2950914294907133, 0.2885283108547922, 0.2870121118521829, 0.28642460217663107] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [86, 149, 20]]
** centroid: 1, normalized-entropy: 0.80117361816889, [(1, 86), (2, 149), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [203, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [109, 100, 0]]
** centroid: 3, normalized-entropy: 0.9986619532380241, [(1, 109), (2, 100)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5170540485385878] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5170540485385878, 0.29541301897921035] ***
*** starting iteration: 2; err: [Inf, 0.5170540485385878, 0.29541301897921035] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5170540485385878, 0.29541301897921035, 0.29056077326523666] ***
*** starting iteration: 3; err: [Inf, 0.5170540485385878, 0.29541301897921035, 0.29056077326523666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5170540485385878, 0.29541301897921035, 0.29056077326523666, 0.28947208258651497] ***
*** starting iteration: 4; err: [Inf, 0.5170540485385878, 0.29541301897921035, 0.29056077326523666, 0.28947208258651497] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5170540485385878, 0.29541301897921035, 0.29056077326523666, 0.28947208258651497, 0.28921536337081594] ***
*** finished computation of 3 references, err: [Inf, 0.5170540485385878, 0.29541301897921035, 0.29056077326523666, 0.28947208258651497, 0.28921536337081594] ***
*** center 1: selecting labels [1] (freq >= 1) [from [196, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [69, 183, 20]]
** centroid: 2, normalized-entropy: 0.7341286903120018, [(1, 69), (2, 183), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [117, 82, 0]]
** centroid: 3, normalized-entropy: 0.9775696629057534, [(1, 117), (2, 82)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3307534747843717] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3307534747843717, 0.23622225254267878] ***
*** starting iteration: 2; err: [Inf, 0.3307534747843717, 0.23622225254267878] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3307534747843717, 0.23622225254267878, 0.2321348522430392] ***
*** starting iteration: 3; err: [Inf, 0.3307534747843717, 0.23622225254267878, 0.2321348522430392] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3307534747843717, 0.23622225254267878, 0.2321348522430392, 0.2311758767161798] ***
*** finished computation of 3 references, err: [Inf, 0.3307534747843717, 0.23622225254267878, 0.2321348522430392, 0.2311758767161798] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [254, 5, 0]]
** centroid: 1, normalized-entropy: 0.13752044631756952, [(1, 254), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [126, 59, 0]]
** centroid: 2, normalized-entropy: 0.9032019455252954, [(1, 126), (2, 59)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 200, 22]]
** centroid: 3, normalized-entropy: 0.4661332827241355, [(2, 200), (3, 22)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31757677757813746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31757677757813746, 0.2568037723298596] ***
*** starting iteration: 2; err: [Inf, 0.31757677757813746, 0.2568037723298596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31757677757813746, 0.2568037723298596, 0.23788798714791057] ***
*** starting iteration: 3; err: [Inf, 0.31757677757813746, 0.2568037723298596, 0.23788798714791057] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31757677757813746, 0.2568037723298596, 0.23788798714791057, 0.23402507158870373] ***
*** starting iteration: 4; err: [Inf, 0.31757677757813746, 0.2568037723298596, 0.23788798714791057, 0.23402507158870373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31757677757813746, 0.2568037723298596, 0.23788798714791057, 0.23402507158870373, 0.23246615149242722] ***
*** starting iteration: 5; err: [Inf, 0.31757677757813746, 0.2568037723298596, 0.23788798714791057, 0.23402507158870373, 0.23246615149242722] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31757677757813746, 0.2568037723298596, 0.23788798714791057, 0.23402507158870373, 0.23246615149242722, 0.23170456641620357] ***
*** finished computation of 3 references, err: [Inf, 0.31757677757813746, 0.2568037723298596, 0.23788798714791057, 0.23402507158870373, 0.23246615149242722, 0.23170456641620357] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [256, 2, 0]]
** centroid: 1, normalized-entropy: 0.06549082131472699, [(1, 256), (2, 2)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [16, 175, 20]]
** centroid: 2, normalized-entropy: 0.522539676961124, [(1, 16), (2, 175), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [126, 72, 0]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(1, 126), (2, 72)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.32194638935600534] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32194638935600534, 0.24494620813601378] ***
*** starting iteration: 2; err: [Inf, 0.32194638935600534, 0.24494620813601378] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32194638935600534, 0.24494620813601378, 0.23664817652445863] ***
*** starting iteration: 3; err: [Inf, 0.32194638935600534, 0.24494620813601378, 0.23664817652445863] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32194638935600534, 0.24494620813601378, 0.23664817652445863, 0.23468391441864364] ***
*** starting iteration: 4; err: [Inf, 0.32194638935600534, 0.24494620813601378, 0.23664817652445863, 0.23468391441864364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32194638935600534, 0.24494620813601378, 0.23664817652445863, 0.23468391441864364, 0.2337567654942376] ***
*** finished computation of 3 references, err: [Inf, 0.32194638935600534, 0.24494620813601378, 0.23664817652445863, 0.23468391441864364, 0.2337567654942376] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [243, 6, 0]]
** centroid: 1, normalized-entropy: 0.1638605128691586, [(1, 243), (2, 6)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [5, 193, 20]]
** centroid: 2, normalized-entropy: 0.37645023487955886, [(1, 5), (2, 193), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [134, 66, 0]]
** centroid: 3, normalized-entropy: 0.9149263727797277, [(1, 134), (2, 66)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24853126611281326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24853126611281326, 0.21082717418353697] ***
*** finished computation of 7 references, err: [Inf, 0.24853126611281326, 0.21082717418353697] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [39, 88, 2]]
** centroid: 1, normalized-entropy: 0.6254893146517047, [(1, 39), (2, 88), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [144, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 44, 18]]
** centroid: 4, normalized-entropy: 0.8691375806126381, [(2, 44), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [61, 20, 0]]
** centroid: 5, normalized-entropy: 0.8063495153650776, [(1, 61), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [33, 42, 0]]
** centroid: 6, normalized-entropy: 0.9895875212220558, [(1, 33), (2, 42)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [7, 55, 0]]
** centroid: 7, normalized-entropy: 0.5086113313826895, [(1, 7), (2, 55)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24557792975056242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24557792975056242, 0.2109280116918931] ***
*** finished computation of 7 references, err: [Inf, 0.24557792975056242, 0.2109280116918931] ***
*** center 1: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [42, 59, 0]]
** centroid: 3, normalized-entropy: 0.9794662187017297, [(1, 42), (2, 59)]
*** center 4: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [13, 113, 0]]
** centroid: 5, normalized-entropy: 0.4789788196209449, [(1, 13), (2, 113)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [48, 7, 0]]
** centroid: 6, normalized-entropy: 0.54991090463341, [(1, 48), (2, 7)]
*** center 7: selecting labels [1, 2, 3] (freq >= 1) [from [40, 86, 20]]
** centroid: 7, normalized-entropy: 0.8545205886051229, [(1, 40), (2, 86), (3, 20)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3074804063195603] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3074804063195603, 0.24125229610219687] ***
*** starting iteration: 2; err: [Inf, 0.3074804063195603, 0.24125229610219687] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3074804063195603, 0.24125229610219687, 0.2386439447724694] ***
*** starting iteration: 3; err: [Inf, 0.3074804063195603, 0.24125229610219687, 0.2386439447724694] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3074804063195603, 0.24125229610219687, 0.2386439447724694, 0.23783800193296] ***
*** finished computation of 3 references, err: [Inf, 0.3074804063195603, 0.24125229610219687, 0.2386439447724694, 0.23783800193296] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [140, 48, 0]]
** centroid: 1, normalized-entropy: 0.8196004346196011, [(1, 140), (2, 48)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 203, 22]]
** centroid: 2, normalized-entropy: 0.46191147211209804, [(2, 203), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [240, 13, 0]]
** centroid: 3, normalized-entropy: 0.2922447237777938, [(1, 240), (2, 13)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.42502742292861434] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42502742292861434, 0.24307744944217857] ***
*** starting iteration: 2; err: [Inf, 0.42502742292861434, 0.24307744944217857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42502742292861434, 0.24307744944217857, 0.22934466148230961] ***
*** starting iteration: 3; err: [Inf, 0.42502742292861434, 0.24307744944217857, 0.22934466148230961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42502742292861434, 0.24307744944217857, 0.22934466148230961, 0.22601305290419926] ***
*** finished computation of 3 references, err: [Inf, 0.42502742292861434, 0.24307744944217857, 0.22934466148230961, 0.22601305290419926] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [106, 89, 0]]
** centroid: 1, normalized-entropy: 0.994510603289567, [(1, 106), (2, 89)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [80, 160, 20]]
** centroid: 2, normalized-entropy: 0.7816596645276667, [(1, 80), (2, 160), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [212, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3219251379034185] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3219251379034185, 0.23835738435788345] ***
*** starting iteration: 2; err: [Inf, 0.3219251379034185, 0.23835738435788345] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3219251379034185, 0.23835738435788345, 0.23382697999477386] ***
*** starting iteration: 3; err: [Inf, 0.3219251379034185, 0.23835738435788345, 0.23382697999477386] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3219251379034185, 0.23835738435788345, 0.23382697999477386, 0.231777078839301] ***
*** finished computation of 3 references, err: [Inf, 0.3219251379034185, 0.23835738435788345, 0.23382697999477386, 0.231777078839301] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [71, 181, 20]]
** centroid: 1, normalized-entropy: 0.7405240607617718, [(1, 71), (2, 181), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [114, 84, 0]]
** centroid: 2, normalized-entropy: 0.9833761901392238, [(1, 114), (2, 84)]
*** center 3: selecting labels [1] (freq >= 2) [from [197, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2885263715660921] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2885263715660921, 0.25123719743511697] ***
*** starting iteration: 2; err: [Inf, 0.2885263715660921, 0.25123719743511697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2885263715660921, 0.25123719743511697, 0.23232355250140746] ***
*** starting iteration: 3; err: [Inf, 0.2885263715660921, 0.25123719743511697, 0.23232355250140746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2885263715660921, 0.25123719743511697, 0.23232355250140746, 0.23116229153038967] ***
*** finished computation of 3 references, err: [Inf, 0.2885263715660921, 0.25123719743511697, 0.23232355250140746, 0.23116229153038967] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [87, 136, 17]]
** centroid: 1, normalized-entropy: 0.7984832552760283, [(1, 87), (2, 136), (3, 17)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [95, 128, 5]]
** centroid: 2, normalized-entropy: 0.703301270335675, [(1, 95), (2, 128), (3, 5)]
*** center 3: selecting labels [1] (freq >= 1) [from [198, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2783602035005411] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2783602035005411, 0.22715684181467435] ***
*** starting iteration: 2; err: [Inf, 0.2783602035005411, 0.22715684181467435] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2783602035005411, 0.22715684181467435, 0.22533394637583257] ***
*** starting iteration: 3; err: [Inf, 0.2783602035005411, 0.22715684181467435, 0.22533394637583257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2783602035005411, 0.22715684181467435, 0.22533394637583257, 0.22508488469540716] ***
*** finished computation of 3 references, err: [Inf, 0.2783602035005411, 0.22715684181467435, 0.22533394637583257, 0.22508488469540716] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [80, 143, 18]]
** centroid: 1, normalized-entropy: 0.7914943891727213, [(1, 80), (2, 143), (3, 18)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [114, 106, 2]]
** centroid: 2, normalized-entropy: 0.6714322962958378, [(1, 114), (2, 106), (3, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [204, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.29014884997675866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29014884997675866, 0.2683366538741733] ***
*** starting iteration: 2; err: [Inf, 0.29014884997675866, 0.2683366538741733] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29014884997675866, 0.2683366538741733, 0.2509220035626613] ***
*** starting iteration: 3; err: [Inf, 0.29014884997675866, 0.2683366538741733, 0.2509220035626613] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29014884997675866, 0.2683366538741733, 0.2509220035626613, 0.23643751965341406] ***
*** finished computation of 3 references, err: [Inf, 0.29014884997675866, 0.2683366538741733, 0.2509220035626613, 0.23643751965341406] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [1, 173, 20]]
** centroid: 1, normalized-entropy: 0.3309254074650999, [(1, 1), (2, 173), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [135, 79, 0]]
** centroid: 2, normalized-entropy: 0.9500240672055709, [(1, 135), (2, 79)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [246, 13, 0]]
** centroid: 3, normalized-entropy: 0.2872164550638232, [(1, 246), (2, 13)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.22142455222185803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22142455222185803, 0.18090757677980415] ***
*** finished computation of 7 references, err: [Inf, 0.22142455222185803, 0.18090757677980415] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [64, 10, 0]]
** centroid: 1, normalized-entropy: 0.5713549744279549, [(1, 64), (2, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [189, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 55, 22]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 55), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [19, 116, 0]]
** centroid: 5, normalized-entropy: 0.5861754623084124, [(1, 19), (2, 116)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 68, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [12, 15, 0]]
** centroid: 7, normalized-entropy: 0.9910760598382222, [(1, 12), (2, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22659903643457316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22659903643457316, 0.171456938370716] ***
*** finished computation of 7 references, err: [Inf, 0.22659903643457316, 0.171456938370716] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [47, 31, 0]]
** centroid: 1, normalized-entropy: 0.9694309156463241, [(1, 47), (2, 31)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [97, 39, 0]]
** centroid: 2, normalized-entropy: 0.8645052513401992, [(1, 97), (2, 39)]
*** center 3: selecting labels [1] (freq >= 1) [from [164, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 86, 15]]
** centroid: 4, normalized-entropy: 0.6061112071230008, [(2, 86), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [90, 50, 0]]
** centroid: 5, normalized-entropy: 0.940285958670631, [(1, 90), (2, 50)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 43, 5]]
** centroid: 6, normalized-entropy: 0.4820661480830933, [(2, 43), (3, 5)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23445795108480422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23445795108480422, 0.16438142025935418] ***
*** finished computation of 7 references, err: [Inf, 0.23445795108480422, 0.16438142025935418] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [48, 53, 0]]
** centroid: 1, normalized-entropy: 0.9982314418957051, [(1, 48), (2, 53)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [138, 10, 0]]
** centroid: 2, normalized-entropy: 0.35678001438394347, [(1, 138), (2, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [82, 8, 0]]
** centroid: 4, normalized-entropy: 0.43275015878875417, [(1, 82), (2, 8)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 83, 7]]
** centroid: 5, normalized-entropy: 0.39430023792747493, [(2, 83), (3, 7)]
*** center 6: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 7: selecting labels [1, 2, 3] (freq >= 1) [from [5, 111, 13]]
** centroid: 7, normalized-entropy: 0.4428872442731506, [(1, 5), (2, 111), (3, 13)]
finished with 13 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43256868203883775] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43256868203883775, 0.3608917435071803] ***
*** starting iteration: 2; err: [Inf, 0.43256868203883775, 0.3608917435071803] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826] ***
*** starting iteration: 3; err: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876] ***
*** starting iteration: 4; err: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876, 0.3254074974268026] ***
*** starting iteration: 5; err: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876, 0.3254074974268026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876, 0.3254074974268026, 0.319403787024666] ***
*** starting iteration: 6; err: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876, 0.3254074974268026, 0.319403787024666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876, 0.3254074974268026, 0.319403787024666, 0.3131948379959139] ***
*** starting iteration: 7; err: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876, 0.3254074974268026, 0.319403787024666, 0.3131948379959139] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876, 0.3254074974268026, 0.319403787024666, 0.3131948379959139, 0.30410673701296653] ***
*** starting iteration: 8; err: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876, 0.3254074974268026, 0.319403787024666, 0.3131948379959139, 0.30410673701296653] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876, 0.3254074974268026, 0.319403787024666, 0.3131948379959139, 0.30410673701296653, 0.2898696452007257] ***
*** starting iteration: 9; err: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876, 0.3254074974268026, 0.319403787024666, 0.3131948379959139, 0.30410673701296653, 0.2898696452007257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876, 0.3254074974268026, 0.319403787024666, 0.3131948379959139, 0.30410673701296653, 0.2898696452007257, 0.28695438912155125] ***
*** starting iteration: 10; err: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876, 0.3254074974268026, 0.319403787024666, 0.3131948379959139, 0.30410673701296653, 0.2898696452007257, 0.28695438912155125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876, 0.3254074974268026, 0.319403787024666, 0.3131948379959139, 0.30410673701296653, 0.2898696452007257, 0.28695438912155125, 0.2868180931615713] ***
*** finished computation of 3 references, err: [Inf, 0.43256868203883775, 0.3608917435071803, 0.33427485295881826, 0.3302023329753876, 0.3254074974268026, 0.319403787024666, 0.3131948379959139, 0.30410673701296653, 0.2898696452007257, 0.28695438912155125, 0.2868180931615713] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [117, 86, 0]]
** centroid: 1, normalized-entropy: 0.9831120694234091, [(1, 117), (2, 86)]
*** center 2: selecting labels [1] (freq >= 1) [from [203, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [60, 178, 22]]
** centroid: 3, normalized-entropy: 0.7343395025511004, [(1, 60), (2, 178), (3, 22)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34150325981941987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34150325981941987, 0.2886444995531636] ***
*** starting iteration: 2; err: [Inf, 0.34150325981941987, 0.2886444995531636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34150325981941987, 0.2886444995531636, 0.286059338973648] ***
*** starting iteration: 3; err: [Inf, 0.34150325981941987, 0.2886444995531636, 0.286059338973648] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34150325981941987, 0.2886444995531636, 0.286059338973648, 0.2846372732250341] ***
*** starting iteration: 4; err: [Inf, 0.34150325981941987, 0.2886444995531636, 0.286059338973648, 0.2846372732250341] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34150325981941987, 0.2886444995531636, 0.286059338973648, 0.2846372732250341, 0.284429329700176] ***
*** finished computation of 3 references, err: [Inf, 0.34150325981941987, 0.2886444995531636, 0.286059338973648, 0.2846372732250341, 0.284429329700176] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [81, 148, 20]]
** centroid: 1, normalized-entropy: 0.7983541112807596, [(1, 81), (2, 148), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [116, 101, 0]]
** centroid: 2, normalized-entropy: 0.9965505172706102, [(1, 116), (2, 101)]
*** center 3: selecting labels [1] (freq >= 1) [from [201, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5258979350216743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5258979350216743, 0.33195946919920294] ***
*** starting iteration: 2; err: [Inf, 0.5258979350216743, 0.33195946919920294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015] ***
*** starting iteration: 3; err: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265] ***
*** starting iteration: 4; err: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265, 0.3219229495788141] ***
*** starting iteration: 5; err: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265, 0.3219229495788141] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265, 0.3219229495788141, 0.31990190879532554] ***
*** starting iteration: 6; err: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265, 0.3219229495788141, 0.31990190879532554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265, 0.3219229495788141, 0.31990190879532554, 0.31726970647167096] ***
*** starting iteration: 7; err: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265, 0.3219229495788141, 0.31990190879532554, 0.31726970647167096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265, 0.3219229495788141, 0.31990190879532554, 0.31726970647167096, 0.3137164200108772] ***
*** starting iteration: 8; err: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265, 0.3219229495788141, 0.31990190879532554, 0.31726970647167096, 0.3137164200108772] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265, 0.3219229495788141, 0.31990190879532554, 0.31726970647167096, 0.3137164200108772, 0.3103962844500187] ***
*** starting iteration: 9; err: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265, 0.3219229495788141, 0.31990190879532554, 0.31726970647167096, 0.3137164200108772, 0.3103962844500187] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265, 0.3219229495788141, 0.31990190879532554, 0.31726970647167096, 0.3137164200108772, 0.3103962844500187, 0.3014760515687504] ***
*** starting iteration: 10; err: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265, 0.3219229495788141, 0.31990190879532554, 0.31726970647167096, 0.3137164200108772, 0.3103962844500187, 0.3014760515687504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265, 0.3219229495788141, 0.31990190879532554, 0.31726970647167096, 0.3137164200108772, 0.3103962844500187, 0.3014760515687504, 0.29033019221101564] ***
*** finished computation of 3 references, err: [Inf, 0.5258979350216743, 0.33195946919920294, 0.32570702398288015, 0.32335334885558265, 0.3219229495788141, 0.31990190879532554, 0.31726970647167096, 0.3137164200108772, 0.3103962844500187, 0.3014760515687504, 0.29033019221101564] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [108, 124, 0]]
** centroid: 1, normalized-entropy: 0.9965663713274552, [(1, 108), (2, 124)]
*** center 2: selecting labels [1] (freq >= 1) [from [194, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [80, 141, 20]]
** centroid: 3, normalized-entropy: 0.8066915459745787, [(1, 80), (2, 141), (3, 20)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2583048806746711] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583048806746711, 0.19013901582311465] ***
*** starting iteration: 2; err: [Inf, 0.2583048806746711, 0.19013901582311465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583048806746711, 0.19013901582311465, 0.16829057761493163] ***
*** starting iteration: 3; err: [Inf, 0.2583048806746711, 0.19013901582311465, 0.16829057761493163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583048806746711, 0.19013901582311465, 0.16829057761493163, 0.15752868811311843] ***
*** starting iteration: 4; err: [Inf, 0.2583048806746711, 0.19013901582311465, 0.16829057761493163, 0.15752868811311843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583048806746711, 0.19013901582311465, 0.16829057761493163, 0.15752868811311843, 0.1510932320300993] ***
*** starting iteration: 5; err: [Inf, 0.2583048806746711, 0.19013901582311465, 0.16829057761493163, 0.15752868811311843, 0.1510932320300993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583048806746711, 0.19013901582311465, 0.16829057761493163, 0.15752868811311843, 0.1510932320300993, 0.14806700293981545] ***
*** starting iteration: 6; err: [Inf, 0.2583048806746711, 0.19013901582311465, 0.16829057761493163, 0.15752868811311843, 0.1510932320300993, 0.14806700293981545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583048806746711, 0.19013901582311465, 0.16829057761493163, 0.15752868811311843, 0.1510932320300993, 0.14806700293981545, 0.14746808756965105] ***
*** finished computation of 7 references, err: [Inf, 0.2583048806746711, 0.19013901582311465, 0.16829057761493163, 0.15752868811311843, 0.1510932320300993, 0.14806700293981545, 0.14746808756965105] ***
*** center 1: selecting labels [1] (freq >= 1) [from [119, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [111, 11, 0]]
** centroid: 2, normalized-entropy: 0.4370167722360665, [(1, 111), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 43, 22]]
** centroid: 3, normalized-entropy: 0.9233388889944429, [(2, 43), (3, 22)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 100, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [7, 97, 0]]
** centroid: 5, normalized-entropy: 0.3557951975011439, [(1, 7), (2, 97)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [60, 13, 0]]
** centroid: 6, normalized-entropy: 0.6758635715876156, [(1, 60), (2, 13)]
*** center 7: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27916127384809225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27916127384809225, 0.19751487695507292] ***
*** starting iteration: 2; err: [Inf, 0.27916127384809225, 0.19751487695507292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27916127384809225, 0.19751487695507292, 0.17463655465993208] ***
*** starting iteration: 3; err: [Inf, 0.27916127384809225, 0.19751487695507292, 0.17463655465993208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27916127384809225, 0.19751487695507292, 0.17463655465993208, 0.1600672292664111] ***
*** starting iteration: 4; err: [Inf, 0.27916127384809225, 0.19751487695507292, 0.17463655465993208, 0.1600672292664111] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27916127384809225, 0.19751487695507292, 0.17463655465993208, 0.1600672292664111, 0.1534935785848452] ***
*** starting iteration: 5; err: [Inf, 0.27916127384809225, 0.19751487695507292, 0.17463655465993208, 0.1600672292664111, 0.1534935785848452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27916127384809225, 0.19751487695507292, 0.17463655465993208, 0.1600672292664111, 0.1534935785848452, 0.14996073926579784] ***
*** starting iteration: 6; err: [Inf, 0.27916127384809225, 0.19751487695507292, 0.17463655465993208, 0.1600672292664111, 0.1534935785848452, 0.14996073926579784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27916127384809225, 0.19751487695507292, 0.17463655465993208, 0.1600672292664111, 0.1534935785848452, 0.14996073926579784, 0.14861888618165184] ***
*** starting iteration: 7; err: [Inf, 0.27916127384809225, 0.19751487695507292, 0.17463655465993208, 0.1600672292664111, 0.1534935785848452, 0.14996073926579784, 0.14861888618165184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27916127384809225, 0.19751487695507292, 0.17463655465993208, 0.1600672292664111, 0.1534935785848452, 0.14996073926579784, 0.14861888618165184, 0.14783907391415765] ***
*** finished computation of 7 references, err: [Inf, 0.27916127384809225, 0.19751487695507292, 0.17463655465993208, 0.1600672292664111, 0.1534935785848452, 0.14996073926579784, 0.14861888618165184, 0.14783907391415765] ***
*** center 1: selecting labels [1] (freq >= 1) [from [138, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [102, 22, 0]]
** centroid: 3, normalized-entropy: 0.674398887071447, [(1, 102), (2, 22)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 70, 3]]
** centroid: 4, normalized-entropy: 0.24729443986205674, [(2, 70), (3, 3)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 47, 0]]
** centroid: 5, normalized-entropy: 0.9844961311800012, [(1, 35), (2, 47)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [37, 56, 0]]
** centroid: 6, normalized-entropy: 0.9696787018231177, [(1, 37), (2, 56)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 54, 17]]
** centroid: 7, normalized-entropy: 0.7941021417852022, [(2, 54), (3, 17)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19589356469992977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19589356469992977, 0.15337926878648317] ***
*** starting iteration: 2; err: [Inf, 0.19589356469992977, 0.15337926878648317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19589356469992977, 0.15337926878648317, 0.14776856456694754] ***
*** starting iteration: 3; err: [Inf, 0.19589356469992977, 0.15337926878648317, 0.14776856456694754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19589356469992977, 0.15337926878648317, 0.14776856456694754, 0.14644891462488466] ***
*** starting iteration: 4; err: [Inf, 0.19589356469992977, 0.15337926878648317, 0.14776856456694754, 0.14644891462488466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19589356469992977, 0.15337926878648317, 0.14776856456694754, 0.14644891462488466, 0.14598518437314975] ***
*** finished computation of 7 references, err: [Inf, 0.19589356469992977, 0.15337926878648317, 0.14776856456694754, 0.14644891462488466, 0.14598518437314975] ***
*** center 1: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 106, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [4, 92, 0]]
** centroid: 3, normalized-entropy: 0.24988229283318547, [(1, 4), (2, 92)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [112, 12, 0]]
** centroid: 4, normalized-entropy: 0.45868581620054033, [(1, 112), (2, 12)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [85, 14, 0]]
** centroid: 5, normalized-entropy: 0.5879303728017198, [(1, 85), (2, 14)]
*** center 6: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 41, 20]]
** centroid: 7, normalized-entropy: 0.9127341558073343, [(2, 41), (3, 20)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31837759419084266] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31837759419084266, 0.29279724186056993] ***
*** finished computation of 3 references, err: [Inf, 0.31837759419084266, 0.29279724186056993] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [102, 85, 0]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(1, 102), (2, 85)]
*** center 2: selecting labels [1] (freq >= 2) [from [185, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [93, 179, 22]]
** centroid: 3, normalized-entropy: 0.782978202058397, [(1, 93), (2, 179), (3, 22)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40741367302444026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40741367302444026, 0.3076323850647263] ***
*** finished computation of 3 references, err: [Inf, 0.40741367302444026, 0.3076323850647263] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [160, 61, 0]]
** centroid: 1, normalized-entropy: 0.8499682934488342, [(1, 160), (2, 61)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [86, 188, 20]]
** centroid: 2, normalized-entropy: 0.7539903153452505, [(1, 86), (2, 188), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [152, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35419878183628084] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35419878183628084, 0.30793428094184927] ***
*** finished computation of 3 references, err: [Inf, 0.35419878183628084, 0.30793428094184927] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [237, 13, 0]]
** centroid: 1, normalized-entropy: 0.2948328193632006, [(1, 237), (2, 13)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [120, 119, 0]]
** centroid: 2, normalized-entropy: 0.9999873715511775, [(1, 120), (2, 119)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [25, 133, 20]]
** centroid: 3, normalized-entropy: 0.6727306934366012, [(1, 25), (2, 133), (3, 20)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2802874077749145] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2802874077749145, 0.25921084247732273] ***
*** starting iteration: 2; err: [Inf, 0.2802874077749145, 0.25921084247732273] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2802874077749145, 0.25921084247732273, 0.23545232049802] ***
*** starting iteration: 3; err: [Inf, 0.2802874077749145, 0.25921084247732273, 0.23545232049802] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2802874077749145, 0.25921084247732273, 0.23545232049802, 0.2322004018554201] ***
*** starting iteration: 4; err: [Inf, 0.2802874077749145, 0.25921084247732273, 0.23545232049802, 0.2322004018554201] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2802874077749145, 0.25921084247732273, 0.23545232049802, 0.2322004018554201, 0.23201552373231263] ***
*** finished computation of 3 references, err: [Inf, 0.2802874077749145, 0.25921084247732273, 0.23545232049802, 0.2322004018554201, 0.23201552373231263] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [77, 151, 21]]
** centroid: 1, normalized-entropy: 0.7962894382441955, [(1, 77), (2, 151), (3, 21)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [108, 113, 1]]
** centroid: 2, normalized-entropy: 0.6540986574864504, [(1, 108), (2, 113), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [195, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3242104917058143] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3242104917058143, 0.2766126764887969] ***
*** starting iteration: 2; err: [Inf, 0.3242104917058143, 0.2766126764887969] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3242104917058143, 0.2766126764887969, 0.2533299628899306] ***
*** starting iteration: 3; err: [Inf, 0.3242104917058143, 0.2766126764887969, 0.2533299628899306] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3242104917058143, 0.2766126764887969, 0.2533299628899306, 0.241686815247945] ***
*** starting iteration: 4; err: [Inf, 0.3242104917058143, 0.2766126764887969, 0.2533299628899306, 0.241686815247945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3242104917058143, 0.2766126764887969, 0.2533299628899306, 0.241686815247945, 0.23810717797903777] ***
*** starting iteration: 5; err: [Inf, 0.3242104917058143, 0.2766126764887969, 0.2533299628899306, 0.241686815247945, 0.23810717797903777] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3242104917058143, 0.2766126764887969, 0.2533299628899306, 0.241686815247945, 0.23810717797903777, 0.23685988263999191] ***
*** starting iteration: 6; err: [Inf, 0.3242104917058143, 0.2766126764887969, 0.2533299628899306, 0.241686815247945, 0.23810717797903777, 0.23685988263999191] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3242104917058143, 0.2766126764887969, 0.2533299628899306, 0.241686815247945, 0.23810717797903777, 0.23685988263999191, 0.23596089981312024] ***
*** finished computation of 3 references, err: [Inf, 0.3242104917058143, 0.2766126764887969, 0.2533299628899306, 0.241686815247945, 0.23810717797903777, 0.23685988263999191, 0.23596089981312024] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [149, 56, 0]]
** centroid: 1, normalized-entropy: 0.8459777327537976, [(1, 149), (2, 56)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [1, 184, 20]]
** centroid: 2, normalized-entropy: 0.3186024707109984, [(1, 1), (2, 184), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [248, 9, 0]]
** centroid: 3, normalized-entropy: 0.21897081382840794, [(1, 248), (2, 9)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31347449293228863] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31347449293228863, 0.23489068158325563] ***
*** starting iteration: 2; err: [Inf, 0.31347449293228863, 0.23489068158325563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31347449293228863, 0.23489068158325563, 0.2295353497187237] ***
*** starting iteration: 3; err: [Inf, 0.31347449293228863, 0.23489068158325563, 0.2295353497187237] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31347449293228863, 0.23489068158325563, 0.2295353497187237, 0.2284781259576744] ***
*** starting iteration: 4; err: [Inf, 0.31347449293228863, 0.23489068158325563, 0.2295353497187237, 0.2284781259576744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31347449293228863, 0.23489068158325563, 0.2295353497187237, 0.2284781259576744, 0.22809278633518107] ***
*** finished computation of 3 references, err: [Inf, 0.31347449293228863, 0.23489068158325563, 0.2295353497187237, 0.2284781259576744, 0.22809278633518107] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [104, 124, 9]]
** centroid: 1, normalized-entropy: 0.7505581659776642, [(1, 104), (2, 124), (3, 9)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [85, 141, 11]]
** centroid: 2, normalized-entropy: 0.7456775918915298, [(1, 85), (2, 141), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [193, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2963298807723319] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2963298807723319, 0.24442817249080842] ***
*** starting iteration: 2; err: [Inf, 0.2963298807723319, 0.24442817249080842] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2963298807723319, 0.24442817249080842, 0.23689389780762274] ***
*** starting iteration: 3; err: [Inf, 0.2963298807723319, 0.24442817249080842, 0.23689389780762274] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2963298807723319, 0.24442817249080842, 0.23689389780762274, 0.23508498708398695] ***
*** starting iteration: 4; err: [Inf, 0.2963298807723319, 0.24442817249080842, 0.23689389780762274, 0.23508498708398695] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2963298807723319, 0.24442817249080842, 0.23689389780762274, 0.23508498708398695, 0.2336510673134557] ***
*** starting iteration: 5; err: [Inf, 0.2963298807723319, 0.24442817249080842, 0.23689389780762274, 0.23508498708398695, 0.2336510673134557] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2963298807723319, 0.24442817249080842, 0.23689389780762274, 0.23508498708398695, 0.2336510673134557, 0.23194110633696322] ***
*** starting iteration: 6; err: [Inf, 0.2963298807723319, 0.24442817249080842, 0.23689389780762274, 0.23508498708398695, 0.2336510673134557, 0.23194110633696322] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2963298807723319, 0.24442817249080842, 0.23689389780762274, 0.23508498708398695, 0.2336510673134557, 0.23194110633696322, 0.2310275424484376] ***
*** finished computation of 3 references, err: [Inf, 0.2963298807723319, 0.24442817249080842, 0.23689389780762274, 0.23508498708398695, 0.2336510673134557, 0.23194110633696322, 0.2310275424484376] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [246, 2, 0]]
** centroid: 1, normalized-entropy: 0.06766982525198395, [(1, 246), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [130, 63, 0]]
** centroid: 2, normalized-entropy: 0.9112319032049001, [(1, 130), (2, 63)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [4, 199, 22]]
** centroid: 3, normalized-entropy: 0.3710006398410843, [(1, 4), (2, 199), (3, 22)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3393399035708205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3393399035708205, 0.2693557509359369] ***
*** starting iteration: 2; err: [Inf, 0.3393399035708205, 0.2693557509359369] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3393399035708205, 0.2693557509359369, 0.2665154616023111] ***
*** starting iteration: 3; err: [Inf, 0.3393399035708205, 0.2693557509359369, 0.2665154616023111] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3393399035708205, 0.2693557509359369, 0.2665154616023111, 0.25553422517490865] ***
*** starting iteration: 4; err: [Inf, 0.3393399035708205, 0.2693557509359369, 0.2665154616023111, 0.25553422517490865] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3393399035708205, 0.2693557509359369, 0.2665154616023111, 0.25553422517490865, 0.23110724914947461] ***
*** starting iteration: 5; err: [Inf, 0.3393399035708205, 0.2693557509359369, 0.2665154616023111, 0.25553422517490865, 0.23110724914947461] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3393399035708205, 0.2693557509359369, 0.2665154616023111, 0.25553422517490865, 0.23110724914947461, 0.2255090223583414] ***
*** starting iteration: 6; err: [Inf, 0.3393399035708205, 0.2693557509359369, 0.2665154616023111, 0.25553422517490865, 0.23110724914947461, 0.2255090223583414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3393399035708205, 0.2693557509359369, 0.2665154616023111, 0.25553422517490865, 0.23110724914947461, 0.2255090223583414, 0.2252446294076618] ***
*** finished computation of 3 references, err: [Inf, 0.3393399035708205, 0.2693557509359369, 0.2665154616023111, 0.25553422517490865, 0.23110724914947461, 0.2255090223583414, 0.2252446294076618] ***
*** center 1: selecting labels [1] (freq >= 2) [from [205, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [108, 111, 2]]
** centroid: 2, normalized-entropy: 0.6720927932651956, [(1, 108), (2, 111), (3, 2)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [85, 138, 18]]
** centroid: 3, normalized-entropy: 0.8015506349016888, [(1, 85), (2, 138), (3, 18)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3412708076892764] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3412708076892764, 0.24854342441592572] ***
*** starting iteration: 2; err: [Inf, 0.3412708076892764, 0.24854342441592572] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3412708076892764, 0.24854342441592572, 0.23960154269985307] ***
*** starting iteration: 3; err: [Inf, 0.3412708076892764, 0.24854342441592572, 0.23960154269985307] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3412708076892764, 0.24854342441592572, 0.23960154269985307, 0.23717221400995125] ***
*** starting iteration: 4; err: [Inf, 0.3412708076892764, 0.24854342441592572, 0.23960154269985307, 0.23717221400995125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3412708076892764, 0.24854342441592572, 0.23960154269985307, 0.23717221400995125, 0.2363988116650243] ***
*** finished computation of 3 references, err: [Inf, 0.3412708076892764, 0.24854342441592572, 0.23960154269985307, 0.23717221400995125, 0.2363988116650243] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [151, 60, 0]]
** centroid: 1, normalized-entropy: 0.8613240637090903, [(1, 151), (2, 60)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [231, 14, 0]]
** centroid: 2, normalized-entropy: 0.3159971329784246, [(1, 231), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 191, 20]]
** centroid: 3, normalized-entropy: 0.4522486292163073, [(2, 191), (3, 20)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3785767684027821] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3785767684027821, 0.25663990135005377] ***
*** starting iteration: 2; err: [Inf, 0.3785767684027821, 0.25663990135005377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3785767684027821, 0.25663990135005377, 0.23867042908758238] ***
*** starting iteration: 3; err: [Inf, 0.3785767684027821, 0.25663990135005377, 0.23867042908758238] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3785767684027821, 0.25663990135005377, 0.23867042908758238, 0.23265750695865284] ***
*** finished computation of 3 references, err: [Inf, 0.3785767684027821, 0.25663990135005377, 0.23867042908758238, 0.23265750695865284] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [133, 51, 0]]
** centroid: 1, normalized-entropy: 0.8515714323493798, [(1, 133), (2, 51)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [6, 212, 22]]
** centroid: 2, normalized-entropy: 0.3830725119626844, [(1, 6), (2, 212), (3, 22)]
*** center 3: selecting labels [1] (freq >= 2) [from [241, 1, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3103336524693058] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3103336524693058, 0.2505948896016479] ***
*** starting iteration: 2; err: [Inf, 0.3103336524693058, 0.2505948896016479] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3103336524693058, 0.2505948896016479, 0.23270263005260272] ***
*** starting iteration: 3; err: [Inf, 0.3103336524693058, 0.2505948896016479, 0.23270263005260272] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3103336524693058, 0.2505948896016479, 0.23270263005260272, 0.22814726286932177] ***
*** finished computation of 3 references, err: [Inf, 0.3103336524693058, 0.2505948896016479, 0.23270263005260272, 0.22814726286932177] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [123, 77, 0]]
** centroid: 1, normalized-entropy: 0.9614969508235551, [(1, 123), (2, 77)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [80, 172, 20]]
** centroid: 2, normalized-entropy: 0.7661146774494998, [(1, 80), (2, 172), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [195, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4630344139532126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4630344139532126, 0.29875449991241837] ***
*** starting iteration: 2; err: [Inf, 0.4630344139532126, 0.29875449991241837] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4630344139532126, 0.29875449991241837, 0.2640784049526728] ***
*** starting iteration: 3; err: [Inf, 0.4630344139532126, 0.29875449991241837, 0.2640784049526728] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4630344139532126, 0.29875449991241837, 0.2640784049526728, 0.24398683574234975] ***
*** finished computation of 3 references, err: [Inf, 0.4630344139532126, 0.29875449991241837, 0.2640784049526728, 0.24398683574234975] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [47, 227, 20]]
** centroid: 1, normalized-entropy: 0.6149911049310044, [(1, 47), (2, 227), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [191, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [144, 38, 0]]
** centroid: 3, normalized-entropy: 0.7391658175693049, [(1, 144), (2, 38)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 15)
[0.9279878681076285, 0.9239988491485497, 0.9129938321555088, 0.9129908351465238, 0.9109918301535068, 0.9069848291405179, 0.902003800207393, 0.9009998021974069, 0.8929858001714289, 0.8880107652562742, 0.8720007432582282, 0.8690636744528959, 0.8650117183051315, 0.8329976683270096, 0.7730035424646203]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9279878681076285
finished with 15
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9279878681076285, 0.9239988491485497, 0.9129938321555088, 0.9129908351465238, 0.9109918301535068, 0.9069848291405179, 0.902003800207393, 0.9009998021974069, 0.8929858001714289, 0.8880107652562742, 0.8720007432582282, 0.8690636744528959, 0.8650117183051315, 0.8329976683270096, 0.7730035424646203]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9279878681076285
finished with 16
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.5561656792320915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5561656792320915, 0.2609386266434325] ***
*** starting iteration: 2; err: [Inf, 0.5561656792320915, 0.2609386266434325] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5561656792320915, 0.2609386266434325, 0.23774707048163712] ***
*** starting iteration: 3; err: [Inf, 0.5561656792320915, 0.2609386266434325, 0.23774707048163712] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5561656792320915, 0.2609386266434325, 0.23774707048163712, 0.23351899890492] ***
*** starting iteration: 4; err: [Inf, 0.5561656792320915, 0.2609386266434325, 0.23774707048163712, 0.23351899890492] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5561656792320915, 0.2609386266434325, 0.23774707048163712, 0.23351899890492, 0.23257352062431094] ***
*** finished computation of 3 references, err: [Inf, 0.5561656792320915, 0.2609386266434325, 0.23774707048163712, 0.23351899890492, 0.23257352062431094] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [110, 111, 0]]
** centroid: 1, normalized-entropy: 0.9999852306467515, [(1, 110), (2, 111)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [73, 153, 22]]
** centroid: 2, normalized-entropy: 0.7945025067846913, [(1, 73), (2, 153), (3, 22)]
*** center 3: selecting labels [1] (freq >= 1) [from [197, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.28195126972690426] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28195126972690426, 0.24249761751008178] ***
*** starting iteration: 2; err: [Inf, 0.28195126972690426, 0.24249761751008178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28195126972690426, 0.24249761751008178, 0.23347680749597846] ***
*** starting iteration: 3; err: [Inf, 0.28195126972690426, 0.24249761751008178, 0.23347680749597846] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28195126972690426, 0.24249761751008178, 0.23347680749597846, 0.23034801983729708] ***
*** starting iteration: 4; err: [Inf, 0.28195126972690426, 0.24249761751008178, 0.23347680749597846, 0.23034801983729708] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28195126972690426, 0.24249761751008178, 0.23347680749597846, 0.23034801983729708, 0.2290353349275954] ***
*** starting iteration: 5; err: [Inf, 0.28195126972690426, 0.24249761751008178, 0.23347680749597846, 0.23034801983729708, 0.2290353349275954] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28195126972690426, 0.24249761751008178, 0.23347680749597846, 0.23034801983729708, 0.2290353349275954, 0.22832152058895414] ***
*** finished computation of 3 references, err: [Inf, 0.28195126972690426, 0.24249761751008178, 0.23347680749597846, 0.23034801983729708, 0.2290353349275954, 0.22832152058895414] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [124, 85, 0]]
** centroid: 1, normalized-entropy: 0.9747343853838629, [(1, 124), (2, 85)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [59, 164, 20]]
** centroid: 2, normalized-entropy: 0.7414759366444128, [(1, 59), (2, 164), (3, 20)]
*** center 3: selecting labels [1] (freq >= 1) [from [215, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3298210594824039] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3298210594824039, 0.26746219593188214] ***
*** starting iteration: 2; err: [Inf, 0.3298210594824039, 0.26746219593188214] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3298210594824039, 0.26746219593188214, 0.24547363310840087] ***
*** starting iteration: 3; err: [Inf, 0.3298210594824039, 0.26746219593188214, 0.24547363310840087] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3298210594824039, 0.26746219593188214, 0.24547363310840087, 0.2383798749089755] ***
*** starting iteration: 4; err: [Inf, 0.3298210594824039, 0.26746219593188214, 0.24547363310840087, 0.2383798749089755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3298210594824039, 0.26746219593188214, 0.24547363310840087, 0.2383798749089755, 0.2370269879799286] ***
*** starting iteration: 5; err: [Inf, 0.3298210594824039, 0.26746219593188214, 0.24547363310840087, 0.2383798749089755, 0.2370269879799286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3298210594824039, 0.26746219593188214, 0.24547363310840087, 0.2383798749089755, 0.2370269879799286, 0.23674941109493375] ***
*** finished computation of 3 references, err: [Inf, 0.3298210594824039, 0.26746219593188214, 0.24547363310840087, 0.2383798749089755, 0.2370269879799286, 0.23674941109493375] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [240, 3, 0]]
** centroid: 1, normalized-entropy: 0.09597040299587173, [(1, 240), (2, 3)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [7, 204, 20]]
** centroid: 2, normalized-entropy: 0.3891804489152362, [(1, 7), (2, 204), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [135, 58, 0]]
** centroid: 3, normalized-entropy: 0.8819233413133586, [(1, 135), (2, 58)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 16)
[0.9279878681076285, 0.9239988491485497, 0.9129938321555088, 0.9129908351465238, 0.9109918301535068, 0.9069848291405179, 0.902003800207393, 0.9009998021974069, 0.8979608350865836, 0.8929858001714289, 0.8880107652562742, 0.8720007432582282, 0.8690636744528959, 0.8650117183051315, 0.8329976683270096, 0.7730035424646203]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9279878681076285
finished with 17
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.2637144746000154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2637144746000154, 0.22093097100107073] ***
*** finished computation of 7 references, err: [Inf, 0.2637144746000154, 0.22093097100107073] ***
*** center 1: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [174, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [8, 94, 13]]
** centroid: 3, normalized-entropy: 0.5431168816984286, [(1, 8), (2, 94), (3, 13)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [27, 47, 0]]
** centroid: 4, normalized-entropy: 0.9466474387740499, [(1, 27), (2, 47)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 71, 9]]
** centroid: 5, normalized-entropy: 0.5074109636646968, [(2, 71), (3, 9)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [47, 16, 0]]
** centroid: 6, normalized-entropy: 0.8175072881213616, [(1, 47), (2, 16)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [26, 36, 0]]
** centroid: 7, normalized-entropy: 0.9811522341999134, [(1, 26), (2, 36)]
finished with 13 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2487032712010298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2487032712010298, 0.20132856991706133] ***
*** finished computation of 7 references, err: [Inf, 0.2487032712010298, 0.20132856991706133] ***
*** center 1: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [48, 37, 0]]
** centroid: 2, normalized-entropy: 0.9878853530449176, [(1, 48), (2, 37)]
*** center 3: selecting labels [1] (freq >= 1) [from [122, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [61, 18, 0]]
** centroid: 4, normalized-entropy: 0.7742411580847273, [(1, 61), (2, 18)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 72, 20]]
** centroid: 5, normalized-entropy: 0.7553754125614286, [(2, 72), (3, 20)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [102, 30, 0]]
** centroid: 6, normalized-entropy: 0.7732266742876346, [(1, 102), (2, 30)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [9, 92, 0]]
** centroid: 7, normalized-entropy: 0.43348846324460666, [(1, 9), (2, 92)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3399831284063755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3399831284063755, 0.22238543681308873] ***
*** finished computation of 7 references, err: [Inf, 0.3399831284063755, 0.22238543681308873] ***
*** center 1: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [8, 19, 10]]
** centroid: 2, normalized-entropy: 0.9347969618861118, [(1, 8), (2, 19), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 98, 2]]
** centroid: 3, normalized-entropy: 0.14144054254182067, [(2, 98), (3, 2)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [32, 73, 0]]
** centroid: 4, normalized-entropy: 0.8870341576828725, [(1, 32), (2, 73)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [148, 12, 0]]
** centroid: 5, normalized-entropy: 0.3843115441264972, [(1, 148), (2, 12)]
*** center 6: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 7: selecting labels [1, 2, 3] (freq >= 1) [from [16, 63, 8]]
** centroid: 7, normalized-entropy: 0.6959622864617216, [(1, 16), (2, 63), (3, 8)]
finished with 13 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 17)
[0.9279878681076285, 0.9239988491485497, 0.9129938321555088, 0.9129908351465238, 0.9109918301535068, 0.9069848291405179, 0.902003800207393, 0.9009998021974069, 0.8979608350865836, 0.8929858001714289, 0.8880107652562742, 0.877985770201339, 0.8720007432582282, 0.8690636744528959, 0.8650117183051315, 0.8329976683270096, 0.7730035424646203]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9279878681076285
finished with 18
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.3533392005709109] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3533392005709109, 0.3039782962624778] ***
*** starting iteration: 2; err: [Inf, 0.3533392005709109, 0.3039782962624778] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3533392005709109, 0.3039782962624778, 0.29574405876486126] ***
*** starting iteration: 3; err: [Inf, 0.3533392005709109, 0.3039782962624778, 0.29574405876486126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3533392005709109, 0.3039782962624778, 0.29574405876486126, 0.29379063657297566] ***
*** starting iteration: 4; err: [Inf, 0.3533392005709109, 0.3039782962624778, 0.29574405876486126, 0.29379063657297566] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3533392005709109, 0.3039782962624778, 0.29574405876486126, 0.29379063657297566, 0.29211847195415774] ***
*** starting iteration: 5; err: [Inf, 0.3533392005709109, 0.3039782962624778, 0.29574405876486126, 0.29379063657297566, 0.29211847195415774] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3533392005709109, 0.3039782962624778, 0.29574405876486126, 0.29379063657297566, 0.29211847195415774, 0.2908375663137449] ***
*** starting iteration: 6; err: [Inf, 0.3533392005709109, 0.3039782962624778, 0.29574405876486126, 0.29379063657297566, 0.29211847195415774, 0.2908375663137449] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3533392005709109, 0.3039782962624778, 0.29574405876486126, 0.29379063657297566, 0.29211847195415774, 0.2908375663137449, 0.2899193994626794] ***
*** finished computation of 3 references, err: [Inf, 0.3533392005709109, 0.3039782962624778, 0.29574405876486126, 0.29379063657297566, 0.29211847195415774, 0.2908375663137449, 0.2899193994626794] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [129, 70, 0]]
** centroid: 1, normalized-entropy: 0.9356290067961744, [(1, 129), (2, 70)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [3, 191, 22]]
** centroid: 2, normalized-entropy: 0.36484217304903477, [(1, 3), (2, 191), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [248, 3, 0]]
** centroid: 3, normalized-entropy: 0.09347354407782983, [(1, 248), (2, 3)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3310520339623161] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3310520339623161, 0.3018437881536525] ***
*** starting iteration: 2; err: [Inf, 0.3310520339623161, 0.3018437881536525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3310520339623161, 0.3018437881536525, 0.2988874849736288] ***
*** starting iteration: 3; err: [Inf, 0.3310520339623161, 0.3018437881536525, 0.2988874849736288] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3310520339623161, 0.3018437881536525, 0.2988874849736288, 0.297872440626976] ***
*** starting iteration: 4; err: [Inf, 0.3310520339623161, 0.3018437881536525, 0.2988874849736288, 0.297872440626976] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3310520339623161, 0.3018437881536525, 0.2988874849736288, 0.297872440626976, 0.29706457766077327] ***
*** finished computation of 3 references, err: [Inf, 0.3310520339623161, 0.3018437881536525, 0.2988874849736288, 0.297872440626976, 0.29706457766077327] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [259, 16, 0]]
** centroid: 1, normalized-entropy: 0.3201847301908677, [(1, 259), (2, 16)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [139, 46, 0]]
** centroid: 2, normalized-entropy: 0.8091292492342033, [(1, 139), (2, 46)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 187, 20]]
** centroid: 3, normalized-entropy: 0.4581834507518116, [(2, 187), (3, 20)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4221852384758987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4221852384758987, 0.3278965406933858] ***
*** starting iteration: 2; err: [Inf, 0.4221852384758987, 0.3278965406933858] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391] ***
*** starting iteration: 3; err: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424] ***
*** starting iteration: 4; err: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424, 0.31845855215254393] ***
*** starting iteration: 5; err: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424, 0.31845855215254393] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424, 0.31845855215254393, 0.3144228750549402] ***
*** starting iteration: 6; err: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424, 0.31845855215254393, 0.3144228750549402] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424, 0.31845855215254393, 0.3144228750549402, 0.31156796427245353] ***
*** starting iteration: 7; err: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424, 0.31845855215254393, 0.3144228750549402, 0.31156796427245353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424, 0.31845855215254393, 0.3144228750549402, 0.31156796427245353, 0.3078748992402693] ***
*** starting iteration: 8; err: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424, 0.31845855215254393, 0.3144228750549402, 0.31156796427245353, 0.3078748992402693] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424, 0.31845855215254393, 0.3144228750549402, 0.31156796427245353, 0.3078748992402693, 0.29356702532189183] ***
*** starting iteration: 9; err: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424, 0.31845855215254393, 0.3144228750549402, 0.31156796427245353, 0.3078748992402693, 0.29356702532189183] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424, 0.31845855215254393, 0.3144228750549402, 0.31156796427245353, 0.3078748992402693, 0.29356702532189183, 0.29223003114868273] ***
*** starting iteration: 10; err: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424, 0.31845855215254393, 0.3144228750549402, 0.31156796427245353, 0.3078748992402693, 0.29356702532189183, 0.29223003114868273] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424, 0.31845855215254393, 0.3144228750549402, 0.31156796427245353, 0.3078748992402693, 0.29356702532189183, 0.29223003114868273, 0.2923973626799245] ***
*** finished computation of 3 references, err: [Inf, 0.4221852384758987, 0.3278965406933858, 0.3239136441070391, 0.32115020096229424, 0.31845855215254393, 0.3144228750549402, 0.31156796427245353, 0.3078748992402693, 0.29356702532189183, 0.29223003114868273, 0.2923973626799245] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [13, 191, 20]]
** centroid: 1, normalized-entropy: 0.47042099372704427, [(1, 13), (2, 191), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [130, 73, 0]]
** centroid: 2, normalized-entropy: 0.9423555797864553, [(1, 130), (2, 73)]
*** center 3: selecting labels [1] (freq >= 2) [from [239, 1, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 18)
[0.9279878681076285, 0.9239988491485497, 0.9239958521395648, 0.9129938321555088, 0.9129908351465238, 0.9109918301535068, 0.9069848291405179, 0.902003800207393, 0.9009998021974069, 0.8979608350865836, 0.8929858001714289, 0.8880107652562742, 0.877985770201339, 0.8720007432582282, 0.8690636744528959, 0.8650117183051315, 0.8329976683270096, 0.7730035424646203]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9279878681076285
finished with 19
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.3497340405840908] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3497340405840908, 0.33418806304165105] ***
*** starting iteration: 2; err: [Inf, 0.3497340405840908, 0.33418806304165105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3497340405840908, 0.33418806304165105, 0.3312700389557191] ***
*** starting iteration: 3; err: [Inf, 0.3497340405840908, 0.33418806304165105, 0.3312700389557191] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3497340405840908, 0.33418806304165105, 0.3312700389557191, 0.331522086159782] ***
*** finished computation of 3 references, err: [Inf, 0.3497340405840908, 0.33418806304165105, 0.3312700389557191, 0.331522086159782] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [66, 165, 22]]
** centroid: 1, normalized-entropy: 0.7661350110985072, [(1, 66), (2, 165), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [130, 87, 0]]
** centroid: 2, normalized-entropy: 0.9714871779166525, [(1, 130), (2, 87)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [184, 12, 0]]
** centroid: 3, normalized-entropy: 0.3322866302216152, [(1, 184), (2, 12)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.47545079868482326] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47545079868482326, 0.33542713147030956] ***
*** starting iteration: 2; err: [Inf, 0.47545079868482326, 0.33542713147030956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47545079868482326, 0.33542713147030956, 0.3087968555163184] ***
*** starting iteration: 3; err: [Inf, 0.47545079868482326, 0.33542713147030956, 0.3087968555163184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47545079868482326, 0.33542713147030956, 0.3087968555163184, 0.2883500083303568] ***
*** finished computation of 3 references, err: [Inf, 0.47545079868482326, 0.33542713147030956, 0.3087968555163184, 0.2883500083303568] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [102, 140, 20]]
** centroid: 1, normalized-entropy: 0.8178758223013921, [(1, 102), (2, 140), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [193, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [103, 109, 0]]
** centroid: 3, normalized-entropy: 0.9994221257869895, [(1, 103), (2, 109)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3838184919261347] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3838184919261347, 0.3582351910637348] ***
*** starting iteration: 2; err: [Inf, 0.3838184919261347, 0.3582351910637348] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3838184919261347, 0.3582351910637348, 0.3390317979887284] ***
*** starting iteration: 3; err: [Inf, 0.3838184919261347, 0.3582351910637348, 0.3390317979887284] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3838184919261347, 0.3582351910637348, 0.3390317979887284, 0.33341994236127054] ***
*** finished computation of 3 references, err: [Inf, 0.3838184919261347, 0.3582351910637348, 0.3390317979887284, 0.33341994236127054] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [97, 164, 20]]
** centroid: 1, normalized-entropy: 0.7914804039183687, [(1, 97), (2, 164), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [106, 101, 0]]
** centroid: 2, normalized-entropy: 0.9995790930470047, [(1, 106), (2, 101)]
*** center 3: selecting labels [1] (freq >= 1) [from [179, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 19)
[0.9279878681076285, 0.9239988491485497, 0.9239958521395648, 0.9129938321555088, 0.9129908351465238, 0.9109918301535068, 0.9069848291405179, 0.902003800207393, 0.9009998021974069, 0.8979608350865836, 0.8929858001714289, 0.8880107652562742, 0.877985770201339, 0.8720007432582282, 0.8690636744528959, 0.8670346993700287, 0.8650117183051315, 0.8329976683270096, 0.7730035424646203]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9279878681076285
finished with 20
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.31012096522549343] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31012096522549343, 0.25916397949546444] ***
*** finished computation of 3 references, err: [Inf, 0.31012096522549343, 0.25916397949546444] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [114, 188, 22]]
** centroid: 1, normalized-entropy: 0.7882566435495985, [(1, 114), (2, 188), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [87, 68, 0]]
** centroid: 2, normalized-entropy: 0.9891337127331895, [(1, 87), (2, 68)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [179, 8, 0]]
** centroid: 3, normalized-entropy: 0.2548996784421719, [(1, 179), (2, 8)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.28532047534984223] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28532047534984223, 0.23029898037481913] ***
*** finished computation of 3 references, err: [Inf, 0.28532047534984223, 0.23029898037481913] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [126, 91, 0]]
** centroid: 1, normalized-entropy: 0.9811522341999134, [(1, 126), (2, 91)]
*** center 2: selecting labels [1] (freq >= 2) [from [229, 1, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [43, 157, 20]]
** centroid: 3, normalized-entropy: 0.7080056609804334, [(1, 43), (2, 157), (3, 20)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3052068623480969] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3052068623480969, 0.2742348400904899] ***
*** finished computation of 3 references, err: [Inf, 0.3052068623480969, 0.2742348400904899] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [100, 23, 0]]
** centroid: 1, normalized-entropy: 0.6951360991052256, [(1, 100), (2, 23)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [131, 196, 20]]
** centroid: 2, normalized-entropy: 0.7781357895911107, [(1, 131), (2, 196), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [151, 46, 0]]
** centroid: 3, normalized-entropy: 0.7840672224172417, [(1, 151), (2, 46)]
finished with 7 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 20)
[0.9279878681076285, 0.9239988491485497, 0.9239958521395648, 0.9149988311664958, 0.9129938321555088, 0.9129908351465238, 0.9109918301535068, 0.9069848291405179, 0.902003800207393, 0.9009998021974069, 0.8979608350865836, 0.8929858001714289, 0.8880107652562742, 0.877985770201339, 0.8720007432582282, 0.8690636744528959, 0.8670346993700287, 0.8650117183051315, 0.8329976683270096, 0.7730035424646203]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9279878681076285
finished with 20
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 20)
[0.9279878681076285, 0.9239988491485497, 0.9239958521395648, 0.9149988311664958, 0.9129938321555088, 0.9129908351465238, 0.9109918301535068, 0.9069848291405179, 0.902003800207393, 0.9009998021974069, 0.8979608350865836, 0.8929858001714289, 0.8880107652562742, 0.877985770201339, 0.8720007432582282, 0.8690636744528959, 0.8670346993700287, 0.8650117183051315, 0.8329976683270096, 0.7730035424646203]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9279878681076285
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.17813065843377263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17813065843377263, 0.1542431295835413] ***
*** starting iteration: 2; err: [Inf, 0.17813065843377263, 0.1542431295835413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17813065843377263, 0.1542431295835413, 0.1503349549844861] ***
*** starting iteration: 3; err: [Inf, 0.17813065843377263, 0.1542431295835413, 0.1503349549844861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17813065843377263, 0.1542431295835413, 0.1503349549844861, 0.1485365049270913] ***
*** starting iteration: 4; err: [Inf, 0.17813065843377263, 0.1542431295835413, 0.1503349549844861, 0.1485365049270913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17813065843377263, 0.1542431295835413, 0.1503349549844861, 0.1485365049270913, 0.1477214643037878] ***
*** finished computation of 7 references, err: [Inf, 0.17813065843377263, 0.1542431295835413, 0.1503349549844861, 0.1485365049270913, 0.1477214643037878] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [144, 19, 0]]
** centroid: 1, normalized-entropy: 0.5194040869726659, [(1, 144), (2, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [124, 17, 0]]
** centroid: 2, normalized-entropy: 0.5309895737517845, [(1, 124), (2, 17)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 129, 31]]
** centroid: 3, normalized-entropy: 0.7092505850649067, [(2, 129), (3, 31)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 141, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [127, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [75, 83, 0]]
** centroid: 6, normalized-entropy: 0.9981498963480787, [(1, 75), (2, 83)]
*** center 7: selecting labels [1] (freq >= 1) [from [110, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24512191726267338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24512191726267338, 0.1798073851019144] ***
*** starting iteration: 2; err: [Inf, 0.24512191726267338, 0.1798073851019144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24512191726267338, 0.1798073851019144, 0.15186412888066844] ***
*** starting iteration: 3; err: [Inf, 0.24512191726267338, 0.1798073851019144, 0.15186412888066844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24512191726267338, 0.1798073851019144, 0.15186412888066844, 0.14372454751841723] ***
*** starting iteration: 4; err: [Inf, 0.24512191726267338, 0.1798073851019144, 0.15186412888066844, 0.14372454751841723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24512191726267338, 0.1798073851019144, 0.15186412888066844, 0.14372454751841723, 0.14152387028932573] ***
*** starting iteration: 5; err: [Inf, 0.24512191726267338, 0.1798073851019144, 0.15186412888066844, 0.14372454751841723, 0.14152387028932573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24512191726267338, 0.1798073851019144, 0.15186412888066844, 0.14372454751841723, 0.14152387028932573, 0.1408173180092126] ***
*** finished computation of 7 references, err: [Inf, 0.24512191726267338, 0.1798073851019144, 0.15186412888066844, 0.14372454751841723, 0.14152387028932573, 0.1408173180092126] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [13, 73, 0]]
** centroid: 1, normalized-entropy: 0.6127425554686624, [(1, 13), (2, 73)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [4, 71, 0]]
** centroid: 2, normalized-entropy: 0.3003914173647818, [(1, 4), (2, 71)]
*** center 3: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [45, 8, 0]]
** centroid: 5, normalized-entropy: 0.612196127490834, [(1, 45), (2, 8)]
*** center 6: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 33, 19]]
** centroid: 7, normalized-entropy: 0.9470622432515328, [(2, 33), (3, 19)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22442912813276053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22442912813276053, 0.15512684877961874] ***
*** starting iteration: 2; err: [Inf, 0.22442912813276053, 0.15512684877961874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22442912813276053, 0.15512684877961874, 0.15032116582617164] ***
*** starting iteration: 3; err: [Inf, 0.22442912813276053, 0.15512684877961874, 0.15032116582617164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22442912813276053, 0.15512684877961874, 0.15032116582617164, 0.1479041925519705] ***
*** starting iteration: 4; err: [Inf, 0.22442912813276053, 0.15512684877961874, 0.15032116582617164, 0.1479041925519705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22442912813276053, 0.15512684877961874, 0.15032116582617164, 0.1479041925519705, 0.14664912925846874] ***
*** starting iteration: 5; err: [Inf, 0.22442912813276053, 0.15512684877961874, 0.15032116582617164, 0.1479041925519705, 0.14664912925846874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22442912813276053, 0.15512684877961874, 0.15032116582617164, 0.1479041925519705, 0.14664912925846874, 0.1462596125099808] ***
*** finished computation of 7 references, err: [Inf, 0.22442912813276053, 0.15512684877961874, 0.15032116582617164, 0.1479041925519705, 0.14664912925846874, 0.1462596125099808] ***
*** center 1: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [62, 4, 0]]
** centroid: 3, normalized-entropy: 0.32984607020714635, [(1, 62), (2, 4)]
*** center 4: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [12, 72, 0]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(1, 12), (2, 72)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [11, 66, 0]]
** centroid: 6, normalized-entropy: 0.5916727785823274, [(1, 11), (2, 66)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 53, 14]]
** centroid: 7, normalized-entropy: 0.7394809367166378, [(2, 53), (3, 14)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21023407493904234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21023407493904234, 0.16455618965812027] ***
*** starting iteration: 2; err: [Inf, 0.21023407493904234, 0.16455618965812027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21023407493904234, 0.16455618965812027, 0.15626876734942197] ***
*** starting iteration: 3; err: [Inf, 0.21023407493904234, 0.16455618965812027, 0.15626876734942197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21023407493904234, 0.16455618965812027, 0.15626876734942197, 0.15198603019863366] ***
*** starting iteration: 4; err: [Inf, 0.21023407493904234, 0.16455618965812027, 0.15626876734942197, 0.15198603019863366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21023407493904234, 0.16455618965812027, 0.15626876734942197, 0.15198603019863366, 0.14787359063886105] ***
*** starting iteration: 5; err: [Inf, 0.21023407493904234, 0.16455618965812027, 0.15626876734942197, 0.15198603019863366, 0.14787359063886105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21023407493904234, 0.16455618965812027, 0.15626876734942197, 0.15198603019863366, 0.14787359063886105, 0.14549743062164636] ***
*** starting iteration: 6; err: [Inf, 0.21023407493904234, 0.16455618965812027, 0.15626876734942197, 0.15198603019863366, 0.14787359063886105, 0.14549743062164636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21023407493904234, 0.16455618965812027, 0.15626876734942197, 0.15198603019863366, 0.14787359063886105, 0.14549743062164636, 0.14412692182138562] ***
*** starting iteration: 7; err: [Inf, 0.21023407493904234, 0.16455618965812027, 0.15626876734942197, 0.15198603019863366, 0.14787359063886105, 0.14549743062164636, 0.14412692182138562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21023407493904234, 0.16455618965812027, 0.15626876734942197, 0.15198603019863366, 0.14787359063886105, 0.14549743062164636, 0.14412692182138562, 0.1432966175917536] ***
*** finished computation of 7 references, err: [Inf, 0.21023407493904234, 0.16455618965812027, 0.15626876734942197, 0.15198603019863366, 0.14787359063886105, 0.14549743062164636, 0.14412692182138562, 0.1432966175917536] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 76, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 65, 15]]
** centroid: 2, normalized-entropy: 0.6962122601251459, [(2, 65), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [58, 20, 0]]
** centroid: 3, normalized-entropy: 0.8212809417449864, [(1, 58), (2, 20)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [44, 19, 0]]
** centroid: 4, normalized-entropy: 0.8832225588099292, [(1, 44), (2, 19)]
*** center 5: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [52, 22, 0]]
** centroid: 6, normalized-entropy: 0.8779620013943914, [(1, 52), (2, 22)]
*** center 7: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25528579044155775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25528579044155775, 0.17631400899402797] ***
*** starting iteration: 2; err: [Inf, 0.25528579044155775, 0.17631400899402797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25528579044155775, 0.17631400899402797, 0.1631543464930728] ***
*** starting iteration: 3; err: [Inf, 0.25528579044155775, 0.17631400899402797, 0.1631543464930728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25528579044155775, 0.17631400899402797, 0.1631543464930728, 0.15537581601552666] ***
*** starting iteration: 4; err: [Inf, 0.25528579044155775, 0.17631400899402797, 0.1631543464930728, 0.15537581601552666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25528579044155775, 0.17631400899402797, 0.1631543464930728, 0.15537581601552666, 0.151697664456442] ***
*** starting iteration: 5; err: [Inf, 0.25528579044155775, 0.17631400899402797, 0.1631543464930728, 0.15537581601552666, 0.151697664456442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25528579044155775, 0.17631400899402797, 0.1631543464930728, 0.15537581601552666, 0.151697664456442, 0.14984122959524393] ***
*** starting iteration: 6; err: [Inf, 0.25528579044155775, 0.17631400899402797, 0.1631543464930728, 0.15537581601552666, 0.151697664456442, 0.14984122959524393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25528579044155775, 0.17631400899402797, 0.1631543464930728, 0.15537581601552666, 0.151697664456442, 0.14984122959524393, 0.14862646801769733] ***
*** starting iteration: 7; err: [Inf, 0.25528579044155775, 0.17631400899402797, 0.1631543464930728, 0.15537581601552666, 0.151697664456442, 0.14984122959524393, 0.14862646801769733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25528579044155775, 0.17631400899402797, 0.1631543464930728, 0.15537581601552666, 0.151697664456442, 0.14984122959524393, 0.14862646801769733, 0.14754787585325538] ***
*** starting iteration: 8; err: [Inf, 0.25528579044155775, 0.17631400899402797, 0.1631543464930728, 0.15537581601552666, 0.151697664456442, 0.14984122959524393, 0.14862646801769733, 0.14754787585325538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25528579044155775, 0.17631400899402797, 0.1631543464930728, 0.15537581601552666, 0.151697664456442, 0.14984122959524393, 0.14862646801769733, 0.14754787585325538, 0.14660466448776424] ***
*** finished computation of 7 references, err: [Inf, 0.25528579044155775, 0.17631400899402797, 0.1631543464930728, 0.15537581601552666, 0.151697664456442, 0.14984122959524393, 0.14862646801769733, 0.14754787585325538, 0.14660466448776424] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [18, 57, 0]]
** centroid: 1, normalized-entropy: 0.7950402793845225, [(1, 18), (2, 57)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [53, 24, 0]]
** centroid: 2, normalized-entropy: 0.8951127210954559, [(1, 53), (2, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [40, 50, 0]]
** centroid: 4, normalized-entropy: 0.9910760598382222, [(1, 40), (2, 50)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 65, 19]]
** centroid: 5, normalized-entropy: 0.7713111060849788, [(2, 65), (3, 19)]
*** center 6: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2668200046420097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2668200046420097, 0.1662039016969502] ***
*** starting iteration: 2; err: [Inf, 0.2668200046420097, 0.1662039016969502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2668200046420097, 0.1662039016969502, 0.1581865532435477] ***
*** starting iteration: 3; err: [Inf, 0.2668200046420097, 0.1662039016969502, 0.1581865532435477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2668200046420097, 0.1662039016969502, 0.1581865532435477, 0.1552767493072897] ***
*** starting iteration: 4; err: [Inf, 0.2668200046420097, 0.1662039016969502, 0.1581865532435477, 0.1552767493072897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2668200046420097, 0.1662039016969502, 0.1581865532435477, 0.1552767493072897, 0.15346556407399475] ***
*** starting iteration: 5; err: [Inf, 0.2668200046420097, 0.1662039016969502, 0.1581865532435477, 0.1552767493072897, 0.15346556407399475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2668200046420097, 0.1662039016969502, 0.1581865532435477, 0.1552767493072897, 0.15346556407399475, 0.15207488407567143] ***
*** starting iteration: 6; err: [Inf, 0.2668200046420097, 0.1662039016969502, 0.1581865532435477, 0.1552767493072897, 0.15346556407399475, 0.15207488407567143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2668200046420097, 0.1662039016969502, 0.1581865532435477, 0.1552767493072897, 0.15346556407399475, 0.15207488407567143, 0.15083254141174257] ***
*** starting iteration: 7; err: [Inf, 0.2668200046420097, 0.1662039016969502, 0.1581865532435477, 0.1552767493072897, 0.15346556407399475, 0.15207488407567143, 0.15083254141174257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2668200046420097, 0.1662039016969502, 0.1581865532435477, 0.1552767493072897, 0.15346556407399475, 0.15207488407567143, 0.15083254141174257, 0.1501400480605662] ***
*** finished computation of 7 references, err: [Inf, 0.2668200046420097, 0.1662039016969502, 0.1581865532435477, 0.1552767493072897, 0.15346556407399475, 0.15207488407567143, 0.15083254141174257, 0.1501400480605662] ***
*** center 1: selecting labels [1] (freq >= 1) [from [41, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [55, 33, 0]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(1, 55), (2, 33)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [29, 54, 0]]
** centroid: 3, normalized-entropy: 0.9335289015212996, [(1, 29), (2, 54)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [28, 39, 0]]
** centroid: 4, normalized-entropy: 0.9804679314541813, [(1, 28), (2, 39)]
*** center 5: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 67, 18]]
** centroid: 7, normalized-entropy: 0.7448423974714387, [(2, 67), (3, 18)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2363607148528099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363607148528099, 0.186968941480387] ***
*** starting iteration: 2; err: [Inf, 0.2363607148528099, 0.186968941480387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363607148528099, 0.186968941480387, 0.16767044518049806] ***
*** starting iteration: 3; err: [Inf, 0.2363607148528099, 0.186968941480387, 0.16767044518049806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363607148528099, 0.186968941480387, 0.16767044518049806, 0.15683823389094323] ***
*** starting iteration: 4; err: [Inf, 0.2363607148528099, 0.186968941480387, 0.16767044518049806, 0.15683823389094323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363607148528099, 0.186968941480387, 0.16767044518049806, 0.15683823389094323, 0.15303648811206222] ***
*** starting iteration: 5; err: [Inf, 0.2363607148528099, 0.186968941480387, 0.16767044518049806, 0.15683823389094323, 0.15303648811206222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363607148528099, 0.186968941480387, 0.16767044518049806, 0.15683823389094323, 0.15303648811206222, 0.15024345392175018] ***
*** starting iteration: 6; err: [Inf, 0.2363607148528099, 0.186968941480387, 0.16767044518049806, 0.15683823389094323, 0.15303648811206222, 0.15024345392175018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363607148528099, 0.186968941480387, 0.16767044518049806, 0.15683823389094323, 0.15303648811206222, 0.15024345392175018, 0.14812375207804143] ***
*** starting iteration: 7; err: [Inf, 0.2363607148528099, 0.186968941480387, 0.16767044518049806, 0.15683823389094323, 0.15303648811206222, 0.15024345392175018, 0.14812375207804143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363607148528099, 0.186968941480387, 0.16767044518049806, 0.15683823389094323, 0.15303648811206222, 0.15024345392175018, 0.14812375207804143, 0.14680956833809614] ***
*** starting iteration: 8; err: [Inf, 0.2363607148528099, 0.186968941480387, 0.16767044518049806, 0.15683823389094323, 0.15303648811206222, 0.15024345392175018, 0.14812375207804143, 0.14680956833809614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363607148528099, 0.186968941480387, 0.16767044518049806, 0.15683823389094323, 0.15303648811206222, 0.15024345392175018, 0.14812375207804143, 0.14680956833809614, 0.14623828368075192] ***
*** finished computation of 7 references, err: [Inf, 0.2363607148528099, 0.186968941480387, 0.16767044518049806, 0.15683823389094323, 0.15303648811206222, 0.15024345392175018, 0.14812375207804143, 0.14680956833809614, 0.14623828368075192] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 64, 3]]
** centroid: 1, normalized-entropy: 0.26377743669413856, [(2, 64), (3, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 76, 11]]
** centroid: 2, normalized-entropy: 0.5475844288749033, [(2, 76), (3, 11)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [65, 18, 0]]
** centroid: 3, normalized-entropy: 0.7544062039636575, [(1, 65), (2, 18)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [68, 14, 0]]
** centroid: 4, normalized-entropy: 0.6593758812786991, [(1, 68), (2, 14)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [50, 15, 0]]
** centroid: 5, normalized-entropy: 0.7793498372920851, [(1, 50), (2, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2194995721387677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2194995721387677, 0.17345154307084157] ***
*** starting iteration: 2; err: [Inf, 0.2194995721387677, 0.17345154307084157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2194995721387677, 0.17345154307084157, 0.1646160657722503] ***
*** starting iteration: 3; err: [Inf, 0.2194995721387677, 0.17345154307084157, 0.1646160657722503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2194995721387677, 0.17345154307084157, 0.1646160657722503, 0.15793006397783757] ***
*** starting iteration: 4; err: [Inf, 0.2194995721387677, 0.17345154307084157, 0.1646160657722503, 0.15793006397783757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2194995721387677, 0.17345154307084157, 0.1646160657722503, 0.15793006397783757, 0.15312610555998982] ***
*** starting iteration: 5; err: [Inf, 0.2194995721387677, 0.17345154307084157, 0.1646160657722503, 0.15793006397783757, 0.15312610555998982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2194995721387677, 0.17345154307084157, 0.1646160657722503, 0.15793006397783757, 0.15312610555998982, 0.149238807503134] ***
*** starting iteration: 6; err: [Inf, 0.2194995721387677, 0.17345154307084157, 0.1646160657722503, 0.15793006397783757, 0.15312610555998982, 0.149238807503134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2194995721387677, 0.17345154307084157, 0.1646160657722503, 0.15793006397783757, 0.15312610555998982, 0.149238807503134, 0.1466547776563093] ***
*** starting iteration: 7; err: [Inf, 0.2194995721387677, 0.17345154307084157, 0.1646160657722503, 0.15793006397783757, 0.15312610555998982, 0.149238807503134, 0.1466547776563093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2194995721387677, 0.17345154307084157, 0.1646160657722503, 0.15793006397783757, 0.15312610555998982, 0.149238807503134, 0.1466547776563093, 0.14515991069190204] ***
*** starting iteration: 8; err: [Inf, 0.2194995721387677, 0.17345154307084157, 0.1646160657722503, 0.15793006397783757, 0.15312610555998982, 0.149238807503134, 0.1466547776563093, 0.14515991069190204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2194995721387677, 0.17345154307084157, 0.1646160657722503, 0.15793006397783757, 0.15312610555998982, 0.149238807503134, 0.1466547776563093, 0.14515991069190204, 0.14452400302886964] ***
*** finished computation of 7 references, err: [Inf, 0.2194995721387677, 0.17345154307084157, 0.1646160657722503, 0.15793006397783757, 0.15312610555998982, 0.149238807503134, 0.1466547776563093, 0.14515991069190204, 0.14452400302886964] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 68, 21]]
** centroid: 1, normalized-entropy: 0.7882487221644084, [(2, 68), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [42, 26, 0]]
** centroid: 2, normalized-entropy: 0.9596868937742168, [(1, 42), (2, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [67, 43, 0]]
** centroid: 4, normalized-entropy: 0.96538371158956, [(1, 67), (2, 43)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [39, 2, 0]]
** centroid: 5, normalized-entropy: 0.2811937964320427, [(1, 39), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [9, 57, 0]]
** centroid: 6, normalized-entropy: 0.5746356978376794, [(1, 9), (2, 57)]
*** center 7: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2086319514531642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2086319514531642, 0.1503637623246759] ***
*** starting iteration: 2; err: [Inf, 0.2086319514531642, 0.1503637623246759] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2086319514531642, 0.1503637623246759, 0.1469333582688123] ***
*** starting iteration: 3; err: [Inf, 0.2086319514531642, 0.1503637623246759, 0.1469333582688123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2086319514531642, 0.1503637623246759, 0.1469333582688123, 0.1440577116245404] ***
*** starting iteration: 4; err: [Inf, 0.2086319514531642, 0.1503637623246759, 0.1469333582688123, 0.1440577116245404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2086319514531642, 0.1503637623246759, 0.1469333582688123, 0.1440577116245404, 0.14281752126757055] ***
*** starting iteration: 5; err: [Inf, 0.2086319514531642, 0.1503637623246759, 0.1469333582688123, 0.1440577116245404, 0.14281752126757055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2086319514531642, 0.1503637623246759, 0.1469333582688123, 0.1440577116245404, 0.14281752126757055, 0.14220398806780576] ***
*** finished computation of 7 references, err: [Inf, 0.2086319514531642, 0.1503637623246759, 0.1469333582688123, 0.1440577116245404, 0.14281752126757055, 0.14220398806780576] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 54, 17]]
** centroid: 1, normalized-entropy: 0.7941021417852022, [(2, 54), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [77, 8, 0]]
** centroid: 3, normalized-entropy: 0.4500666580964382, [(1, 77), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [44, 29, 0]]
** centroid: 4, normalized-entropy: 0.9693253797191861, [(1, 44), (2, 29)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 74, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [43, 22, 0]]
** centroid: 6, normalized-entropy: 0.9233388889944429, [(1, 43), (2, 22)]
*** center 7: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21034989724867045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21034989724867045, 0.1769449717756361] ***
*** starting iteration: 2; err: [Inf, 0.21034989724867045, 0.1769449717756361] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732] ***
*** starting iteration: 3; err: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732, 0.16363437420828267] ***
*** starting iteration: 4; err: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732, 0.16363437420828267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732, 0.16363437420828267, 0.1605213674157858] ***
*** starting iteration: 5; err: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732, 0.16363437420828267, 0.1605213674157858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732, 0.16363437420828267, 0.1605213674157858, 0.1578157564345747] ***
*** starting iteration: 6; err: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732, 0.16363437420828267, 0.1605213674157858, 0.1578157564345747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732, 0.16363437420828267, 0.1605213674157858, 0.1578157564345747, 0.1561337655559182] ***
*** starting iteration: 7; err: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732, 0.16363437420828267, 0.1605213674157858, 0.1578157564345747, 0.1561337655559182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732, 0.16363437420828267, 0.1605213674157858, 0.1578157564345747, 0.1561337655559182, 0.15383051592018454] ***
*** starting iteration: 8; err: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732, 0.16363437420828267, 0.1605213674157858, 0.1578157564345747, 0.1561337655559182, 0.15383051592018454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732, 0.16363437420828267, 0.1605213674157858, 0.1578157564345747, 0.1561337655559182, 0.15383051592018454, 0.15206392839364707] ***
*** starting iteration: 9; err: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732, 0.16363437420828267, 0.1605213674157858, 0.1578157564345747, 0.1561337655559182, 0.15383051592018454, 0.15206392839364707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732, 0.16363437420828267, 0.1605213674157858, 0.1578157564345747, 0.1561337655559182, 0.15383051592018454, 0.15206392839364707, 0.15123068991862237] ***
*** finished computation of 7 references, err: [Inf, 0.21034989724867045, 0.1769449717756361, 0.16784356652735732, 0.16363437420828267, 0.1605213674157858, 0.1578157564345747, 0.1561337655559182, 0.15383051592018454, 0.15206392839364707, 0.15123068991862237] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [81, 35, 0]]
** centroid: 1, normalized-entropy: 0.8833882724833615, [(1, 81), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [61, 2, 0]]
** centroid: 2, normalized-entropy: 0.20307392998664567, [(1, 61), (2, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 71, 13]]
** centroid: 4, normalized-entropy: 0.6216297820565386, [(2, 71), (3, 13)]
*** center 5: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [5, 46, 0]]
** centroid: 6, normalized-entropy: 0.462749058578174, [(1, 5), (2, 46)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [13, 43, 0]]
** centroid: 7, normalized-entropy: 0.7817281222714539, [(1, 13), (2, 43)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22994847426190973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22994847426190973, 0.16076782519184052] ***
*** starting iteration: 2; err: [Inf, 0.22994847426190973, 0.16076782519184052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22994847426190973, 0.16076782519184052, 0.15478689961135386] ***
*** starting iteration: 3; err: [Inf, 0.22994847426190973, 0.16076782519184052, 0.15478689961135386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22994847426190973, 0.16076782519184052, 0.15478689961135386, 0.15338072412461043] ***
*** starting iteration: 4; err: [Inf, 0.22994847426190973, 0.16076782519184052, 0.15478689961135386, 0.15338072412461043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22994847426190973, 0.16076782519184052, 0.15478689961135386, 0.15338072412461043, 0.15196509291231633] ***
*** starting iteration: 5; err: [Inf, 0.22994847426190973, 0.16076782519184052, 0.15478689961135386, 0.15338072412461043, 0.15196509291231633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22994847426190973, 0.16076782519184052, 0.15478689961135386, 0.15338072412461043, 0.15196509291231633, 0.15126256629545243] ***
*** finished computation of 7 references, err: [Inf, 0.22994847426190973, 0.16076782519184052, 0.15478689961135386, 0.15338072412461043, 0.15196509291231633, 0.15126256629545243] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [48, 11, 0]]
** centroid: 1, normalized-entropy: 0.693965967334286, [(1, 48), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [76, 28, 0]]
** centroid: 2, normalized-entropy: 0.8403586716091169, [(1, 76), (2, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [31, 39, 0]]
** centroid: 3, normalized-entropy: 0.9905577004075262, [(1, 31), (2, 39)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 65, 10]]
** centroid: 4, normalized-entropy: 0.5665095065529052, [(2, 65), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 55, 1]]
** centroid: 7, normalized-entropy: 0.12923377484588472, [(2, 55), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22076314674364403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22076314674364403, 0.17526412643818184] ***
*** starting iteration: 2; err: [Inf, 0.22076314674364403, 0.17526412643818184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22076314674364403, 0.17526412643818184, 0.1636076480015181] ***
*** starting iteration: 3; err: [Inf, 0.22076314674364403, 0.17526412643818184, 0.1636076480015181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22076314674364403, 0.17526412643818184, 0.1636076480015181, 0.15488426320254803] ***
*** starting iteration: 4; err: [Inf, 0.22076314674364403, 0.17526412643818184, 0.1636076480015181, 0.15488426320254803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22076314674364403, 0.17526412643818184, 0.1636076480015181, 0.15488426320254803, 0.15276828159578146] ***
*** starting iteration: 5; err: [Inf, 0.22076314674364403, 0.17526412643818184, 0.1636076480015181, 0.15488426320254803, 0.15276828159578146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22076314674364403, 0.17526412643818184, 0.1636076480015181, 0.15488426320254803, 0.15276828159578146, 0.1493765077367425] ***
*** starting iteration: 6; err: [Inf, 0.22076314674364403, 0.17526412643818184, 0.1636076480015181, 0.15488426320254803, 0.15276828159578146, 0.1493765077367425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22076314674364403, 0.17526412643818184, 0.1636076480015181, 0.15488426320254803, 0.15276828159578146, 0.1493765077367425, 0.14515658534597606] ***
*** starting iteration: 7; err: [Inf, 0.22076314674364403, 0.17526412643818184, 0.1636076480015181, 0.15488426320254803, 0.15276828159578146, 0.1493765077367425, 0.14515658534597606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22076314674364403, 0.17526412643818184, 0.1636076480015181, 0.15488426320254803, 0.15276828159578146, 0.1493765077367425, 0.14515658534597606, 0.14335953501239418] ***
*** starting iteration: 8; err: [Inf, 0.22076314674364403, 0.17526412643818184, 0.1636076480015181, 0.15488426320254803, 0.15276828159578146, 0.1493765077367425, 0.14515658534597606, 0.14335953501239418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22076314674364403, 0.17526412643818184, 0.1636076480015181, 0.15488426320254803, 0.15276828159578146, 0.1493765077367425, 0.14515658534597606, 0.14335953501239418, 0.14238306996412575] ***
*** finished computation of 7 references, err: [Inf, 0.22076314674364403, 0.17526412643818184, 0.1636076480015181, 0.15488426320254803, 0.15276828159578146, 0.1493765077367425, 0.14515658534597606, 0.14335953501239418, 0.14238306996412575] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [53, 22, 0]]
** centroid: 1, normalized-entropy: 0.8729882944709463, [(1, 53), (2, 22)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 44, 14]]
** centroid: 2, normalized-entropy: 0.7973265101474423, [(2, 44), (3, 14)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 74, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 11, 0]]
** centroid: 4, normalized-entropy: 0.6220403090607189, [(1, 60), (2, 11)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [14, 55, 0]]
** centroid: 5, normalized-entropy: 0.7276874545656657, [(1, 14), (2, 55)]
*** center 6: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1791063791438937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1791063791438937, 0.15531779458373784] ***
*** starting iteration: 2; err: [Inf, 0.1791063791438937, 0.15531779458373784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1791063791438937, 0.15531779458373784, 0.14965554209239781] ***
*** starting iteration: 3; err: [Inf, 0.1791063791438937, 0.15531779458373784, 0.14965554209239781] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1791063791438937, 0.15531779458373784, 0.14965554209239781, 0.14695591081678866] ***
*** starting iteration: 4; err: [Inf, 0.1791063791438937, 0.15531779458373784, 0.14965554209239781, 0.14695591081678866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1791063791438937, 0.15531779458373784, 0.14965554209239781, 0.14695591081678866, 0.14524961115047336] ***
*** starting iteration: 5; err: [Inf, 0.1791063791438937, 0.15531779458373784, 0.14965554209239781, 0.14695591081678866, 0.14524961115047336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1791063791438937, 0.15531779458373784, 0.14965554209239781, 0.14695591081678866, 0.14524961115047336, 0.1446951137892902] ***
*** finished computation of 7 references, err: [Inf, 0.1791063791438937, 0.15531779458373784, 0.14965554209239781, 0.14695591081678866, 0.14524961115047336, 0.1446951137892902] ***
*** center 1: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [79, 4, 0]]
** centroid: 2, normalized-entropy: 0.27866980356389914, [(1, 79), (2, 4)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 73, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [17, 74, 0]]
** centroid: 5, normalized-entropy: 0.6947570868163001, [(1, 17), (2, 74)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [55, 12, 0]]
** centroid: 6, normalized-entropy: 0.678114052360606, [(1, 55), (2, 12)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 46, 15]]
** centroid: 7, normalized-entropy: 0.8047175193210769, [(2, 46), (3, 15)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22882164789084344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22882164789084344, 0.1738138645850122] ***
*** starting iteration: 2; err: [Inf, 0.22882164789084344, 0.1738138645850122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22882164789084344, 0.1738138645850122, 0.16412440951168536] ***
*** starting iteration: 3; err: [Inf, 0.22882164789084344, 0.1738138645850122, 0.16412440951168536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22882164789084344, 0.1738138645850122, 0.16412440951168536, 0.15941307522170245] ***
*** starting iteration: 4; err: [Inf, 0.22882164789084344, 0.1738138645850122, 0.16412440951168536, 0.15941307522170245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22882164789084344, 0.1738138645850122, 0.16412440951168536, 0.15941307522170245, 0.15719419678021224] ***
*** starting iteration: 5; err: [Inf, 0.22882164789084344, 0.1738138645850122, 0.16412440951168536, 0.15941307522170245, 0.15719419678021224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22882164789084344, 0.1738138645850122, 0.16412440951168536, 0.15941307522170245, 0.15719419678021224, 0.15624361928366123] ***
*** finished computation of 7 references, err: [Inf, 0.22882164789084344, 0.1738138645850122, 0.16412440951168536, 0.15941307522170245, 0.15719419678021224, 0.15624361928366123] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 82, 22]]
** centroid: 1, normalized-entropy: 0.7444131797881749, [(2, 82), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [64, 11, 0]]
** centroid: 2, normalized-entropy: 0.6014353864290773, [(1, 64), (2, 11)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [70, 36, 0]]
** centroid: 3, normalized-entropy: 0.9244571409964927, [(1, 70), (2, 36)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [37, 54, 0]]
** centroid: 4, normalized-entropy: 0.974677061681131, [(1, 37), (2, 54)]
*** center 5: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2358435405548662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2358435405548662, 0.1684950484149158] ***
*** starting iteration: 2; err: [Inf, 0.2358435405548662, 0.1684950484149158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2358435405548662, 0.1684950484149158, 0.1528521383497864] ***
*** starting iteration: 3; err: [Inf, 0.2358435405548662, 0.1684950484149158, 0.1528521383497864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2358435405548662, 0.1684950484149158, 0.1528521383497864, 0.14908204014599324] ***
*** starting iteration: 4; err: [Inf, 0.2358435405548662, 0.1684950484149158, 0.1528521383497864, 0.14908204014599324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2358435405548662, 0.1684950484149158, 0.1528521383497864, 0.14908204014599324, 0.1456178168784827] ***
*** starting iteration: 5; err: [Inf, 0.2358435405548662, 0.1684950484149158, 0.1528521383497864, 0.14908204014599324, 0.1456178168784827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2358435405548662, 0.1684950484149158, 0.1528521383497864, 0.14908204014599324, 0.1456178168784827, 0.14454072622396053] ***
*** starting iteration: 6; err: [Inf, 0.2358435405548662, 0.1684950484149158, 0.1528521383497864, 0.14908204014599324, 0.1456178168784827, 0.14454072622396053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2358435405548662, 0.1684950484149158, 0.1528521383497864, 0.14908204014599324, 0.1456178168784827, 0.14454072622396053, 0.1438767749313265] ***
*** finished computation of 7 references, err: [Inf, 0.2358435405548662, 0.1684950484149158, 0.1528521383497864, 0.14908204014599324, 0.1456178168784827, 0.14454072622396053, 0.1438767749313265] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [1, 66, 0]]
** centroid: 1, normalized-entropy: 0.11190990870168394, [(1, 1), (2, 66)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [28, 52, 0]]
** centroid: 2, normalized-entropy: 0.9340680553754911, [(1, 28), (2, 52)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 61, 18]]
** centroid: 3, normalized-entropy: 0.7742411580847273, [(2, 61), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [71, 2, 0]]
** centroid: 4, normalized-entropy: 0.18116640155354563, [(1, 71), (2, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [63, 1, 0]]
** centroid: 6, normalized-entropy: 0.11611507530476962, [(1, 63), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [63, 7, 0]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(1, 63), (2, 7)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2168365117702633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2168365117702633, 0.17922939453367143] ***
*** starting iteration: 2; err: [Inf, 0.2168365117702633, 0.17922939453367143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2168365117702633, 0.17922939453367143, 0.1649718244820833] ***
*** starting iteration: 3; err: [Inf, 0.2168365117702633, 0.17922939453367143, 0.1649718244820833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2168365117702633, 0.17922939453367143, 0.1649718244820833, 0.15576652345457115] ***
*** starting iteration: 4; err: [Inf, 0.2168365117702633, 0.17922939453367143, 0.1649718244820833, 0.15576652345457115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2168365117702633, 0.17922939453367143, 0.1649718244820833, 0.15576652345457115, 0.152562011199072] ***
*** starting iteration: 5; err: [Inf, 0.2168365117702633, 0.17922939453367143, 0.1649718244820833, 0.15576652345457115, 0.152562011199072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2168365117702633, 0.17922939453367143, 0.1649718244820833, 0.15576652345457115, 0.152562011199072, 0.15167347552254795] ***
*** finished computation of 7 references, err: [Inf, 0.2168365117702633, 0.17922939453367143, 0.1649718244820833, 0.15576652345457115, 0.152562011199072, 0.15167347552254795] ***
*** center 1: selecting labels [1] (freq >= 1) [from [115, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [74, 31, 0]]
** centroid: 4, normalized-entropy: 0.8753918540610236, [(1, 74), (2, 31)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 52, 12]]
** centroid: 5, normalized-entropy: 0.6962122601251459, [(2, 52), (3, 12)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 78, 0]]
** centroid: 6, normalized-entropy: 0.09794058271817412, [(1, 1), (2, 78)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 27, 0]]
** centroid: 7, normalized-entropy: 0.5547781633412736, [(1, 4), (2, 27)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23941688731685282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23941688731685282, 0.1671672614272684] ***
*** starting iteration: 2; err: [Inf, 0.23941688731685282, 0.1671672614272684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23941688731685282, 0.1671672614272684, 0.15186441950127483] ***
*** starting iteration: 3; err: [Inf, 0.23941688731685282, 0.1671672614272684, 0.15186441950127483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23941688731685282, 0.1671672614272684, 0.15186441950127483, 0.14790675247483887] ***
*** starting iteration: 4; err: [Inf, 0.23941688731685282, 0.1671672614272684, 0.15186441950127483, 0.14790675247483887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23941688731685282, 0.1671672614272684, 0.15186441950127483, 0.14790675247483887, 0.14715767323039472] ***
*** finished computation of 7 references, err: [Inf, 0.23941688731685282, 0.1671672614272684, 0.15186441950127483, 0.14790675247483887, 0.14715767323039472] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [73, 11, 0]]
** centroid: 1, normalized-entropy: 0.5600443203590992, [(1, 73), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [44, 26, 0]]
** centroid: 2, normalized-entropy: 0.9517626756348312, [(1, 44), (2, 26)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 86, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 51, 13]]
** centroid: 4, normalized-entropy: 0.7281342378690551, [(2, 51), (3, 13)]
*** center 5: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [37, 16, 0]]
** centroid: 6, normalized-entropy: 0.8835850861052531, [(1, 37), (2, 16)]
*** center 7: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1663397229956463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1663397229956463, 0.15356029116362332] ***
*** starting iteration: 2; err: [Inf, 0.1663397229956463, 0.15356029116362332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1663397229956463, 0.15356029116362332, 0.15025567904859782] ***
*** starting iteration: 3; err: [Inf, 0.1663397229956463, 0.15356029116362332, 0.15025567904859782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1663397229956463, 0.15356029116362332, 0.15025567904859782, 0.14828526083845645] ***
*** starting iteration: 4; err: [Inf, 0.1663397229956463, 0.15356029116362332, 0.15025567904859782, 0.14828526083845645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1663397229956463, 0.15356029116362332, 0.15025567904859782, 0.14828526083845645, 0.14766513548605145] ***
*** finished computation of 7 references, err: [Inf, 0.1663397229956463, 0.15356029116362332, 0.15025567904859782, 0.14828526083845645, 0.14766513548605145] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [78, 4, 0]]
** centroid: 1, normalized-entropy: 0.2811937964320427, [(1, 78), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [58, 10, 0]]
** centroid: 2, normalized-entropy: 0.6024308020404452, [(1, 58), (2, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 66, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [74, 2, 0]]
** centroid: 5, normalized-entropy: 0.17556502585750275, [(1, 74), (2, 2)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 31, 14]]
** centroid: 6, normalized-entropy: 0.8944518845341284, [(2, 31), (3, 14)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 80, 0]]
** centroid: 7, normalized-entropy: 0.09597040299587173, [(1, 1), (2, 80)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1999242117749527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1999242117749527, 0.16421268385834992] ***
*** starting iteration: 2; err: [Inf, 0.1999242117749527, 0.16421268385834992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1999242117749527, 0.16421268385834992, 0.15927368640713394] ***
*** starting iteration: 3; err: [Inf, 0.1999242117749527, 0.16421268385834992, 0.15927368640713394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1999242117749527, 0.16421268385834992, 0.15927368640713394, 0.15720801960583777] ***
*** starting iteration: 4; err: [Inf, 0.1999242117749527, 0.16421268385834992, 0.15927368640713394, 0.15720801960583777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1999242117749527, 0.16421268385834992, 0.15927368640713394, 0.15720801960583777, 0.15567796040792017] ***
*** starting iteration: 5; err: [Inf, 0.1999242117749527, 0.16421268385834992, 0.15927368640713394, 0.15720801960583777, 0.15567796040792017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1999242117749527, 0.16421268385834992, 0.15927368640713394, 0.15720801960583777, 0.15567796040792017, 0.15422734444402159] ***
*** starting iteration: 6; err: [Inf, 0.1999242117749527, 0.16421268385834992, 0.15927368640713394, 0.15720801960583777, 0.15567796040792017, 0.15422734444402159] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1999242117749527, 0.16421268385834992, 0.15927368640713394, 0.15720801960583777, 0.15567796040792017, 0.15422734444402159, 0.15328473006095739] ***
*** finished computation of 7 references, err: [Inf, 0.1999242117749527, 0.16421268385834992, 0.15927368640713394, 0.15720801960583777, 0.15567796040792017, 0.15422734444402159, 0.15328473006095739] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [70, 40, 0]]
** centroid: 1, normalized-entropy: 0.9456603046006401, [(1, 70), (2, 40)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 67, 22]]
** centroid: 2, normalized-entropy: 0.8067955503968327, [(2, 67), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [50, 6, 0]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(1, 50), (2, 6)]
*** center 4: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [40, 12, 0]]
** centroid: 5, normalized-entropy: 0.7793498372920851, [(1, 40), (2, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 79, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2590715858703479] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590715858703479, 0.15961183947045357] ***
*** starting iteration: 2; err: [Inf, 0.2590715858703479, 0.15961183947045357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590715858703479, 0.15961183947045357, 0.14937041718885302] ***
*** starting iteration: 3; err: [Inf, 0.2590715858703479, 0.15961183947045357, 0.14937041718885302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590715858703479, 0.15961183947045357, 0.14937041718885302, 0.14609013903141022] ***
*** starting iteration: 4; err: [Inf, 0.2590715858703479, 0.15961183947045357, 0.14937041718885302, 0.14609013903141022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590715858703479, 0.15961183947045357, 0.14937041718885302, 0.14609013903141022, 0.14562552529014647] ***
*** finished computation of 7 references, err: [Inf, 0.2590715858703479, 0.15961183947045357, 0.14937041718885302, 0.14609013903141022, 0.14562552529014647] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [93, 8, 0]]
** centroid: 1, normalized-entropy: 0.39938208242459744, [(1, 93), (2, 8)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 90, 0]]
** centroid: 2, normalized-entropy: 0.08728058888363333, [(1, 1), (2, 90)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 16]]
** centroid: 3, normalized-entropy: 0.9113423759758414, [(2, 33), (3, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [11, 64, 0]]
** centroid: 5, normalized-entropy: 0.6014353864290773, [(1, 11), (2, 64)]
*** center 6: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [31, 4, 0]]
** centroid: 7, normalized-entropy: 0.5127091420308771, [(1, 31), (2, 4)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3080714186839759] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3080714186839759, 0.1890205746330321] ***
*** starting iteration: 2; err: [Inf, 0.3080714186839759, 0.1890205746330321] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3080714186839759, 0.1890205746330321, 0.1629191948482767] ***
*** starting iteration: 3; err: [Inf, 0.3080714186839759, 0.1890205746330321, 0.1629191948482767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3080714186839759, 0.1890205746330321, 0.1629191948482767, 0.15368969881301744] ***
*** starting iteration: 4; err: [Inf, 0.3080714186839759, 0.1890205746330321, 0.1629191948482767, 0.15368969881301744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3080714186839759, 0.1890205746330321, 0.1629191948482767, 0.15368969881301744, 0.1496365667078644] ***
*** starting iteration: 5; err: [Inf, 0.3080714186839759, 0.1890205746330321, 0.1629191948482767, 0.15368969881301744, 0.1496365667078644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3080714186839759, 0.1890205746330321, 0.1629191948482767, 0.15368969881301744, 0.1496365667078644, 0.1477457931600511] ***
*** starting iteration: 6; err: [Inf, 0.3080714186839759, 0.1890205746330321, 0.1629191948482767, 0.15368969881301744, 0.1496365667078644, 0.1477457931600511] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3080714186839759, 0.1890205746330321, 0.1629191948482767, 0.15368969881301744, 0.1496365667078644, 0.1477457931600511, 0.14694026664085685] ***
*** finished computation of 7 references, err: [Inf, 0.3080714186839759, 0.1890205746330321, 0.1629191948482767, 0.15368969881301744, 0.1496365667078644, 0.1477457931600511, 0.14694026664085685] ***
*** center 1: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [79, 8, 0]]
** centroid: 2, normalized-entropy: 0.4429586785384856, [(1, 79), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 16]]
** centroid: 3, normalized-entropy: 0.9043814577244941, [(2, 34), (3, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 64, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [31, 24, 0]]
** centroid: 6, normalized-entropy: 0.9882836109919163, [(1, 31), (2, 24)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [7, 52, 0]]
** centroid: 7, normalized-entropy: 0.5254506799086205, [(1, 7), (2, 52)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2052806858383119] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2052806858383119, 0.15711190498620273] ***
*** starting iteration: 2; err: [Inf, 0.2052806858383119, 0.15711190498620273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2052806858383119, 0.15711190498620273, 0.15273830592934973] ***
*** starting iteration: 3; err: [Inf, 0.2052806858383119, 0.15711190498620273, 0.15273830592934973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2052806858383119, 0.15711190498620273, 0.15273830592934973, 0.15018092344608158] ***
*** starting iteration: 4; err: [Inf, 0.2052806858383119, 0.15711190498620273, 0.15273830592934973, 0.15018092344608158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2052806858383119, 0.15711190498620273, 0.15273830592934973, 0.15018092344608158, 0.14839520988799632] ***
*** starting iteration: 5; err: [Inf, 0.2052806858383119, 0.15711190498620273, 0.15273830592934973, 0.15018092344608158, 0.14839520988799632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2052806858383119, 0.15711190498620273, 0.15273830592934973, 0.15018092344608158, 0.14839520988799632, 0.14737001037038863] ***
*** starting iteration: 6; err: [Inf, 0.2052806858383119, 0.15711190498620273, 0.15273830592934973, 0.15018092344608158, 0.14839520988799632, 0.14737001037038863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2052806858383119, 0.15711190498620273, 0.15273830592934973, 0.15018092344608158, 0.14839520988799632, 0.14737001037038863, 0.14699724680930376] ***
*** finished computation of 7 references, err: [Inf, 0.2052806858383119, 0.15711190498620273, 0.15273830592934973, 0.15018092344608158, 0.14839520988799632, 0.14737001037038863, 0.14699724680930376] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 62, 17]]
** centroid: 1, normalized-entropy: 0.751286576718343, [(2, 62), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [65, 11, 0]]
** centroid: 2, normalized-entropy: 0.5965109917085881, [(1, 65), (2, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [21, 55, 0]]
** centroid: 6, normalized-entropy: 0.8503821170987139, [(1, 21), (2, 55)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 81, 0]]
** centroid: 7, normalized-entropy: 0.1638605128691586, [(1, 2), (2, 81)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21079126993380487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21079126993380487, 0.1577478522527963] ***
*** starting iteration: 2; err: [Inf, 0.21079126993380487, 0.1577478522527963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21079126993380487, 0.1577478522527963, 0.1537102913223207] ***
*** starting iteration: 3; err: [Inf, 0.21079126993380487, 0.1577478522527963, 0.1537102913223207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21079126993380487, 0.1577478522527963, 0.1537102913223207, 0.15255935508944093] ***
*** starting iteration: 4; err: [Inf, 0.21079126993380487, 0.1577478522527963, 0.1537102913223207, 0.15255935508944093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21079126993380487, 0.1577478522527963, 0.1537102913223207, 0.15255935508944093, 0.15137901519425212] ***
*** starting iteration: 5; err: [Inf, 0.21079126993380487, 0.1577478522527963, 0.1537102913223207, 0.15255935508944093, 0.15137901519425212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21079126993380487, 0.1577478522527963, 0.1537102913223207, 0.15255935508944093, 0.15137901519425212, 0.150646682549268] ***
*** finished computation of 7 references, err: [Inf, 0.21079126993380487, 0.1577478522527963, 0.1537102913223207, 0.15255935508944093, 0.15137901519425212, 0.150646682549268] ***
*** center 1: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [2, 82, 0]]
** centroid: 3, normalized-entropy: 0.1623261801753929, [(1, 2), (2, 82)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [51, 14, 0]]
** centroid: 4, normalized-entropy: 0.7516499461153354, [(1, 51), (2, 14)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 71, 16]]
** centroid: 5, normalized-entropy: 0.6885521684368613, [(2, 71), (3, 16)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [65, 31, 0]]
** centroid: 6, normalized-entropy: 0.9075250687540451, [(1, 65), (2, 31)]
*** center 7: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27901698104664685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27901698104664685, 0.1742272809203714] ***
*** starting iteration: 2; err: [Inf, 0.27901698104664685, 0.1742272809203714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27901698104664685, 0.1742272809203714, 0.1471286001764238] ***
*** starting iteration: 3; err: [Inf, 0.27901698104664685, 0.1742272809203714, 0.1471286001764238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27901698104664685, 0.1742272809203714, 0.1471286001764238, 0.14369615864288063] ***
*** starting iteration: 4; err: [Inf, 0.27901698104664685, 0.1742272809203714, 0.1471286001764238, 0.14369615864288063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27901698104664685, 0.1742272809203714, 0.1471286001764238, 0.14369615864288063, 0.14239113483205437] ***
*** starting iteration: 5; err: [Inf, 0.27901698104664685, 0.1742272809203714, 0.1471286001764238, 0.14369615864288063, 0.14239113483205437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27901698104664685, 0.1742272809203714, 0.1471286001764238, 0.14369615864288063, 0.14239113483205437, 0.14186727350763978] ***
*** finished computation of 7 references, err: [Inf, 0.27901698104664685, 0.1742272809203714, 0.1471286001764238, 0.14369615864288063, 0.14239113483205437, 0.14186727350763978] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [71, 2, 0]]
** centroid: 1, normalized-entropy: 0.18116640155354563, [(1, 71), (2, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 51, 17]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 51), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [8, 63, 0]]
** centroid: 5, normalized-entropy: 0.5079353563991225, [(1, 8), (2, 63)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 65, 0]]
** centroid: 6, normalized-entropy: 0.19364280468389852, [(1, 2), (2, 65)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [68, 12, 0]]
** centroid: 7, normalized-entropy: 0.6098403047164005, [(1, 68), (2, 12)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21337275301013142] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21337275301013142, 0.17597773341089487] ***
*** starting iteration: 2; err: [Inf, 0.21337275301013142, 0.17597773341089487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21337275301013142, 0.17597773341089487, 0.16206390697415918] ***
*** starting iteration: 3; err: [Inf, 0.21337275301013142, 0.17597773341089487, 0.16206390697415918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21337275301013142, 0.17597773341089487, 0.16206390697415918, 0.1504755569603294] ***
*** starting iteration: 4; err: [Inf, 0.21337275301013142, 0.17597773341089487, 0.16206390697415918, 0.1504755569603294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21337275301013142, 0.17597773341089487, 0.16206390697415918, 0.1504755569603294, 0.14695526959188282] ***
*** starting iteration: 5; err: [Inf, 0.21337275301013142, 0.17597773341089487, 0.16206390697415918, 0.1504755569603294, 0.14695526959188282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21337275301013142, 0.17597773341089487, 0.16206390697415918, 0.1504755569603294, 0.14695526959188282, 0.14611080976761878] ***
*** finished computation of 7 references, err: [Inf, 0.21337275301013142, 0.17597773341089487, 0.16206390697415918, 0.1504755569603294, 0.14695526959188282, 0.14611080976761878] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [37, 32, 0]]
** centroid: 1, normalized-entropy: 0.9962088839046743, [(1, 37), (2, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [83, 11, 0]]
** centroid: 4, normalized-entropy: 0.5207375686265202, [(1, 83), (2, 11)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 66, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 39, 16]]
** centroid: 6, normalized-entropy: 0.8698926856041562, [(2, 39), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [30, 44, 0]]
** centroid: 7, normalized-entropy: 0.9740248644357521, [(1, 30), (2, 44)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24618521494790913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24618521494790913, 0.16850730264931918] ***
*** starting iteration: 2; err: [Inf, 0.24618521494790913, 0.16850730264931918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24618521494790913, 0.16850730264931918, 0.15366497482545674] ***
*** starting iteration: 3; err: [Inf, 0.24618521494790913, 0.16850730264931918, 0.15366497482545674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24618521494790913, 0.16850730264931918, 0.15366497482545674, 0.15095825055986642] ***
*** starting iteration: 4; err: [Inf, 0.24618521494790913, 0.16850730264931918, 0.15366497482545674, 0.15095825055986642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24618521494790913, 0.16850730264931918, 0.15366497482545674, 0.15095825055986642, 0.1503931189943105] ***
*** finished computation of 7 references, err: [Inf, 0.24618521494790913, 0.16850730264931918, 0.15366497482545674, 0.15095825055986642, 0.1503931189943105] ***
*** center 1: selecting labels [1] (freq >= 1) [from [45, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [29, 38, 0]]
** centroid: 2, normalized-entropy: 0.9869444983748495, [(1, 29), (2, 38)]
*** center 3: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 95, 13]]
** centroid: 4, normalized-entropy: 0.5304245472812997, [(2, 95), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [70, 22, 0]]
** centroid: 5, normalized-entropy: 0.7935912300117066, [(1, 70), (2, 22)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [27, 33, 0]]
** centroid: 6, normalized-entropy: 0.9927744539878083, [(1, 27), (2, 33)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [37, 7, 0]]
** centroid: 7, normalized-entropy: 0.6321302781219708, [(1, 37), (2, 7)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22520428594574332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22520428594574332, 0.16391165991686285] ***
*** starting iteration: 2; err: [Inf, 0.22520428594574332, 0.16391165991686285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22520428594574332, 0.16391165991686285, 0.1573984512388706] ***
*** starting iteration: 3; err: [Inf, 0.22520428594574332, 0.16391165991686285, 0.1573984512388706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22520428594574332, 0.16391165991686285, 0.1573984512388706, 0.1551685746833682] ***
*** starting iteration: 4; err: [Inf, 0.22520428594574332, 0.16391165991686285, 0.1573984512388706, 0.1551685746833682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22520428594574332, 0.16391165991686285, 0.1573984512388706, 0.1551685746833682, 0.1540215497566387] ***
*** starting iteration: 5; err: [Inf, 0.22520428594574332, 0.16391165991686285, 0.1573984512388706, 0.1551685746833682, 0.1540215497566387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22520428594574332, 0.16391165991686285, 0.1573984512388706, 0.1551685746833682, 0.1540215497566387, 0.15360059386026115] ***
*** finished computation of 7 references, err: [Inf, 0.22520428594574332, 0.16391165991686285, 0.1573984512388706, 0.1551685746833682, 0.1540215497566387, 0.15360059386026115] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [67, 31, 0]]
** centroid: 1, normalized-entropy: 0.9003418708227195, [(1, 67), (2, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [70, 3, 0]]
** centroid: 3, normalized-entropy: 0.24729443986205674, [(1, 70), (2, 3)]
*** center 4: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [16, 67, 0]]
** centroid: 5, normalized-entropy: 0.7072324944713736, [(1, 16), (2, 67)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 68, 18]]
** centroid: 6, normalized-entropy: 0.7401470427139037, [(2, 68), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [72, 17, 0]]
** centroid: 7, normalized-entropy: 0.7035821005719904, [(1, 72), (2, 17)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21319111928716303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21319111928716303, 0.1597926732674241] ***
*** starting iteration: 2; err: [Inf, 0.21319111928716303, 0.1597926732674241] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21319111928716303, 0.1597926732674241, 0.15596979881916195] ***
*** starting iteration: 3; err: [Inf, 0.21319111928716303, 0.1597926732674241, 0.15596979881916195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21319111928716303, 0.1597926732674241, 0.15596979881916195, 0.15440549682453275] ***
*** starting iteration: 4; err: [Inf, 0.21319111928716303, 0.1597926732674241, 0.15596979881916195, 0.15440549682453275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21319111928716303, 0.1597926732674241, 0.15596979881916195, 0.15440549682453275, 0.15346245283237658] ***
*** finished computation of 7 references, err: [Inf, 0.21319111928716303, 0.1597926732674241, 0.15596979881916195, 0.15440549682453275, 0.15346245283237658] ***
*** center 1: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [55, 18, 0]]
** centroid: 2, normalized-entropy: 0.8058049113482652, [(1, 55), (2, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [66, 24, 0]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(1, 66), (2, 24)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [14, 51, 0]]
** centroid: 4, normalized-entropy: 0.7516499461153354, [(1, 14), (2, 51)]
*** center 5: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 97, 15]]
** centroid: 6, normalized-entropy: 0.5681147021801115, [(2, 97), (3, 15)]
*** center 7: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1736792798321694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1736792798321694, 0.15513727354630827] ***
*** starting iteration: 2; err: [Inf, 0.1736792798321694, 0.15513727354630827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1736792798321694, 0.15513727354630827, 0.15176863597240298] ***
*** starting iteration: 3; err: [Inf, 0.1736792798321694, 0.15513727354630827, 0.15176863597240298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1736792798321694, 0.15513727354630827, 0.15176863597240298, 0.14848551307804883] ***
*** starting iteration: 4; err: [Inf, 0.1736792798321694, 0.15513727354630827, 0.15176863597240298, 0.14848551307804883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1736792798321694, 0.15513727354630827, 0.15176863597240298, 0.14848551307804883, 0.14678826784994453] ***
*** starting iteration: 5; err: [Inf, 0.1736792798321694, 0.15513727354630827, 0.15176863597240298, 0.14848551307804883, 0.14678826784994453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1736792798321694, 0.15513727354630827, 0.15176863597240298, 0.14848551307804883, 0.14678826784994453, 0.14595610144734383] ***
*** finished computation of 7 references, err: [Inf, 0.1736792798321694, 0.15513727354630827, 0.15176863597240298, 0.14848551307804883, 0.14678826784994453, 0.14595610144734383] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [23, 40, 0]]
** centroid: 1, normalized-entropy: 0.9468188316776024, [(1, 23), (2, 40)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [2, 51, 0]]
** centroid: 2, normalized-entropy: 0.23181305002459035, [(1, 2), (2, 51)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [83, 11, 0]]
** centroid: 3, normalized-entropy: 0.5207375686265202, [(1, 83), (2, 11)]
*** center 4: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 31, 15]]
** centroid: 6, normalized-entropy: 0.9108783787500366, [(2, 31), (3, 15)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 52, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30892096147313713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30892096147313713, 0.1814434477724135] ***
*** starting iteration: 2; err: [Inf, 0.30892096147313713, 0.1814434477724135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30892096147313713, 0.1814434477724135, 0.1654623800534755] ***
*** starting iteration: 3; err: [Inf, 0.30892096147313713, 0.1814434477724135, 0.1654623800534755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30892096147313713, 0.1814434477724135, 0.1654623800534755, 0.1563469802867621] ***
*** starting iteration: 4; err: [Inf, 0.30892096147313713, 0.1814434477724135, 0.1654623800534755, 0.1563469802867621] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30892096147313713, 0.1814434477724135, 0.1654623800534755, 0.1563469802867621, 0.1519608825808391] ***
*** starting iteration: 5; err: [Inf, 0.30892096147313713, 0.1814434477724135, 0.1654623800534755, 0.1563469802867621, 0.1519608825808391] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30892096147313713, 0.1814434477724135, 0.1654623800534755, 0.1563469802867621, 0.1519608825808391, 0.149969112415798] ***
*** starting iteration: 6; err: [Inf, 0.30892096147313713, 0.1814434477724135, 0.1654623800534755, 0.1563469802867621, 0.1519608825808391, 0.149969112415798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30892096147313713, 0.1814434477724135, 0.1654623800534755, 0.1563469802867621, 0.1519608825808391, 0.149969112415798, 0.14903844325989485] ***
*** finished computation of 7 references, err: [Inf, 0.30892096147313713, 0.1814434477724135, 0.1654623800534755, 0.1563469802867621, 0.1519608825808391, 0.149969112415798, 0.14903844325989485] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [6, 57, 0]]
** centroid: 1, normalized-entropy: 0.45371633918694493, [(1, 6), (2, 57)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [4, 56, 0]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(1, 4), (2, 56)]
*** center 3: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [35, 2, 0]]
** centroid: 4, normalized-entropy: 0.30337483608641397, [(1, 35), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [82, 30, 0]]
** centroid: 5, normalized-entropy: 0.8383729377099398, [(1, 82), (2, 30)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 55, 16]]
** centroid: 6, normalized-entropy: 0.7698205808588191, [(2, 55), (3, 16)]
*** center 7: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2264727780132089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2264727780132089, 0.16284757445193826] ***
*** starting iteration: 2; err: [Inf, 0.2264727780132089, 0.16284757445193826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2264727780132089, 0.16284757445193826, 0.15304920359514654] ***
*** starting iteration: 3; err: [Inf, 0.2264727780132089, 0.16284757445193826, 0.15304920359514654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2264727780132089, 0.16284757445193826, 0.15304920359514654, 0.14895361380465327] ***
*** starting iteration: 4; err: [Inf, 0.2264727780132089, 0.16284757445193826, 0.15304920359514654, 0.14895361380465327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2264727780132089, 0.16284757445193826, 0.15304920359514654, 0.14895361380465327, 0.1467837349260226] ***
*** starting iteration: 5; err: [Inf, 0.2264727780132089, 0.16284757445193826, 0.15304920359514654, 0.14895361380465327, 0.1467837349260226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2264727780132089, 0.16284757445193826, 0.15304920359514654, 0.14895361380465327, 0.1467837349260226, 0.14610003142803907] ***
*** finished computation of 7 references, err: [Inf, 0.2264727780132089, 0.16284757445193826, 0.15304920359514654, 0.14895361380465327, 0.1467837349260226, 0.14610003142803907] ***
*** center 1: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [33, 31, 0]]
** centroid: 3, normalized-entropy: 0.9992954443621548, [(1, 33), (2, 31)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [78, 4, 0]]
** centroid: 4, normalized-entropy: 0.2811937964320427, [(1, 78), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [54, 29, 0]]
** centroid: 5, normalized-entropy: 0.9335289015212996, [(1, 54), (2, 29)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 70, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 58, 13]]
** centroid: 7, normalized-entropy: 0.6868088934028034, [(2, 58), (3, 13)]
finished with 9 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 389,3 => 31,1 => 580), Dict(2 => 354,3 => 31,1 => 615))
[ Info: ===== scores for single classifier: {"micro_f1":0.927,"precision":0.927,"recall":0.927,"macro_recall":0.6307151715584952,"macro_f1":0.6214697583118637,"accuracy":0.927,"class_f1":{"2":0.897902097902098,"3":0.0,"1":0.9665071770334929},"class_precision":{"2":0.889196675900277,"3":0.0,"1":0.9483568075117371},"class_recall":{"2":0.9067796610169492,"3":0.0,"1":0.9853658536585366}}
[ Info: ===== scores for 1: {"micro_f1":0.987,"precision":0.987,"recall":0.987,"macro_recall":0.9681368082133527,"macro_f1":0.9797349500091647,"accuracy":0.987,"class_f1":{"2":0.9814020028612302,"3":0.9666666666666666,"1":0.9911361804995971},"class_precision":{"2":0.9942028985507246,"3":1.0,"1":0.9824281150159745},"class_recall":{"2":0.9689265536723164,"3":0.9354838709677419,"1":1.0}}
[ Info: ===== scores for 5: {"micro_f1":0.99,"precision":0.99,"recall":0.99,"macro_recall":0.9819715780536701,"macro_f1":0.9823613743471187,"accuracy":0.99,"class_f1":{"2":0.9858356940509915,"3":0.967741935483871,"1":0.9935064935064934},"class_precision":{"2":0.9886363636363636,"3":0.967741935483871,"1":0.9918962722852512},"class_recall":{"2":0.9830508474576272,"3":0.967741935483871,"1":0.9951219512195122}}
[ Info: ===== scores for 7: {"micro_f1":0.99,"precision":0.99,"recall":0.99,"macro_recall":0.9815719638880368,"macro_f1":0.9823514692858422,"accuracy":0.99,"class_f1":{"2":0.9857954545454546,"3":0.967741935483871,"1":0.993517017828201},"class_precision":{"2":0.9914285714285714,"3":0.967741935483871,"1":0.9903069466882067},"class_recall":{"2":0.980225988700565,"3":0.967741935483871,"1":0.9967479674796748}}
[ Info: precision is zero for label '3'; #classes=3 
[ Info: ===== scores for 9: {"micro_f1":0.959,"precision":0.959,"recall":0.959,"macro_recall":0.6588489274723256,"macro_f1":0.6454173935517219,"accuracy":0.959,"class_f1":{"2":0.9443690637720488,"3":0.0,"1":0.9918831168831169},"class_precision":{"2":0.9086161879895561,"3":0.0,"1":0.9902755267423015},"class_recall":{"2":0.9830508474576272,"3":0.0,"1":0.9934959349593496}}
[ Info: precision is zero for label '3'; #classes=3 
[ Info: ===== scores for 11: {"micro_f1":0.961,"precision":0.961,"recall":0.961,"macro_recall":0.6603325524780671,"macro_f1":0.6468630871615946,"accuracy":0.961,"class_f1":{"2":0.9470827679782903,"3":0.0,"1":0.9935064935064934},"class_precision":{"2":0.9112271540469974,"3":0.0,"1":0.9918962722852512},"class_recall":{"2":0.9858757062146892,"3":0.0,"1":0.9951219512195122}}
(score = 0.984, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.984, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.987, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.987, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.99, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.99, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.991, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.991, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.99, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.99, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.99, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.99, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.99, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.99, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.99, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.99, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.991,"k":3,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.991,"precision":0.991,"recall":0.991,"macro_recall":0.9817143551424579,"macro_f1":0.9881019067080045,"accuracy":0.991,"class_f1":{"2":0.9871611982881597,"3":0.9836065573770492,"1":0.9935379644588045},"class_precision":{"2":0.9971181556195965,"3":1.0,"1":0.9871589085072231},"class_recall":{"2":0.9774011299435028,"3":0.967741935483871,"1":1.0}}
Test Summary: | Pass  Total
AKNC          |    8      8
[411, 1, 1, 1, 5, 1, 8, 1, 3, 9, 12, 8, 1, 4, 3, 6, 7, 8, 4, 1, 8, 4, 3, 5, 32, 2, 2, 16, 12, 9, 44, 18, 14, 10, 5, 1, 6, 3, 7, 8, 20, 10, 5, 13, 24, 6, 2, 3, 6, 8, 5, 5, 3, 51, 7, 7, 68, 6, 10, 11, 14, 4, 11, 2, 21, 43, 3, 41, 24, 8, 20, 5, 6, 4, 18, 2, 35, 2, 8, 9, 82, 10, 9, 29, 8, 20, 192, 11, 15, 7, 3, 39, 7, 4, 2, 50, 7, 52, 14, 105, 10, 36, 28, 8, 11, 3, 10, 45, 11, 9, 15, 45, 5, 32, 5, 42, 19, 16, 56, 115, 2, 9, 5, 23, 72, 10, 15, 26, 9, 3, 14, 10, 39, 89, 4, 12, 12, 11, 60, 65, 89, 12, 39, 14, 10, 10, 10, 36, 23, 9, 7, 46, 60, 19, 40, 37, 5, 67, 13, 6, 19, 16, 15, 14, 29, 46, 2, 21, 55, 6, 71, 22, 28, 10, 19, 46, 4, 136, 33, 10, 1, 19, 24, 17, 8, 4, 46, 6, 11, 15, 55, 8, 1, 38, 14, 11, 1283, 18, 8, 32, 40, 29, 27, 11, 36, 22, 38, 54, 17, 5, 160, 11, 19, 59, 11, 27, 23, 35, 3, 117, 7, 36, 26, 23, 24, 13, 35, 1, 8, 11, 74, 55, 9, 3, 94, 99, 37, 2, 61, 31, 5, 19, 5, 19, 39, 8, 5, 47, 11, 36, 7, 35, 82, 135, 4, 24, 24, 116, 57, 7, 31, 30, 202, 77, 15, 6, 13, 30, 31, 129, 6, 28, 7, 40, 21, 73, 12, 9, 13, 37, 25, 23, 1, 432, 5, 73, 48, 35, 21, 77, 10, 47, 14, 71, 379, 42, 1, 11, 47, 46]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6679999999999998, speedup = 0.243197856552696, eval_ratio = 0.09907200000000001)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.4184213789682539,"recall":0.39930555555555547,"f1":null,"seconds":0.00019798055291175842,"exhaustive_search_seconds":0.00036535970866680145,"evaluations":525.15625,"distances_sum":1676.8130753226378}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5390625,"recall":0.5390625,"f1":null,"seconds":0.00032148510217666626,"exhaustive_search_seconds":0.00036535970866680145,"evaluations":716.6796875,"distances_sum":1664.3467109435794}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.651909722222222,"recall":0.651909722222222,"f1":0.651909722222222,"seconds":0.0005812868475914001,"exhaustive_search_seconds":0.00036535970866680145,"evaluations":879.0703125,"distances_sum":1604.4169052105428}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7413194444444438,"recall":0.7413194444444438,"f1":0.7413194444444438,"seconds":0.0005583446472883224,"exhaustive_search_seconds":0.00036535970866680145,"evaluations":1051.4453125,"distances_sum":1565.5422986361543}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7925347222222211,"recall":0.7925347222222211,"f1":0.7925347222222211,"seconds":0.0006652083247900009,"exhaustive_search_seconds":0.00036535970866680145,"evaluations":1212.0859375,"distances_sum":1553.9041912076782}
KCenters.DeloneInvIndex> reached performance {"precision":0.8298611111111099,"recall":0.8298611111111099,"f1":0.8298611111111099,"seconds":0.0007486902177333832,"exhaustive_search_seconds":0.00036535970866680145,"evaluations":1307.125,"distances_sum":1544.1317757123309}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8269999999999998, speedup = 0.46929710911468736, eval_ratio = 0.13935899999999998)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
