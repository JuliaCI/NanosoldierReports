Julia Version 1.5.0-DEV.355
Commit f0636b2b47 (2020-02-27 13:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_4Jjh1V/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.11903387056303916 -0.016707324993322236; -0.11903387056303916 0.0 -0.03627312295528935; 0.016707324993322236 0.03627312295528935 0.0])
dAA = so3([0.0 0.1885896334899252 -0.055696391422378144; -0.1885896334899252 0.0 -0.09841784193131575; 0.055696391422378144 0.09841784193131575 0.0])
dAA = so3([0.0 0.11037823866865136 0.04463418226098487; -0.11037823866865136 0.0 0.12529836749439457; -0.04463418226098487 -0.12529836749439457 0.0])
dAA = Quaternion(0.9953237047896882, [-0.047123912679521186, 0.034872250093826135, -0.07677229780914695])
dAA = SO3([0.9791037958729067 0.16327538033549646 0.12123080088642509; -0.17096036224132624 0.9836915710766285 0.055887812044387766; -0.11012861321917926 -0.07544563055004096 0.9910497693765572])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8821748179930472 0.4313800284386394 -0.18888848975840913; -0.46478535735951937 0.8621128468779632 -0.20183163981932417; 0.07577705512302377 0.2658433943363127 0.9610333644596477]), [0.3627312295528935, -0.16707324993322237, -1.1903387056303916])
xj = SE3(SO3([0.9125846624997 0.3581494510958315 0.1972769739479579; -0.39608256480781495 0.8941086344044732 0.20901758715149116; -0.10152751166837382 -0.26888421404597684 0.9578065795406219]), [-1.2529836749439458, 0.4463418226098486, -1.1037823866865135])
Dx = SE3(SO3([0.9814591291237968 -0.11999342823461301 0.14946422662317316; 0.025212511796155912 0.8538399684781772 0.519924645961426; -0.1900060712411242 -0.5065164216584594 0.841034367598508]), [-1.7038903625529433, -0.14514370131332377, 0.2645668886191799])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
