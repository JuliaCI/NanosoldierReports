Julia Version 1.5.0-DEV.347
Commit 9f680d3f8d (2020-02-26 17:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_d0up2f/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.025909600899355945 0.17015544592038978; -0.025909600899355945 0.0 0.006760818987894871; -0.17015544592038978 -0.006760818987894871 0.0])
dAA = so3([0.0 0.04796071375528729 -0.04157628476786307; -0.04796071375528729 0.0 -0.1380606772529986; 0.04157628476786307 0.1380606772529986 0.0])
dAA = so3([0.0 -0.07356621647250548 -0.010034397586682271; 0.07356621647250548 0.0 -0.01878905107554878; 0.010034397586682271 0.01878905107554878 0.0])
dAA = Quaternion(0.998025460841762, [-0.06072790171369911, 0.005655379417009878, 0.01501060121013928])
dAA = SO3([0.9984133404762959 0.042687429573367255 0.03672308423026726; -0.04073258892731586 0.9977936896910774 -0.05242717818026002; -0.038880043187254805 0.0508481678046047 0.9979493003518126])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.987560624507077 0.09931571116548991 -0.12190325032124885; -0.13476166391370945 0.9340458439317126 -0.3307531638142002; 0.0810142386398866 0.34306668586382405 0.9358108474408767]), [-0.0676081898789487, 1.7015544592038978, -0.25909600899355945])
xj = SE3(SO3([0.9968096130949786 -0.07694057722904413 0.021230704583233333; 0.06707699692377037 0.9516974879006874 0.2996207069065981; -0.04325819835739267 -0.297240709020791 0.953822147559853]), [0.1878905107554878, -0.1003439758668227, 0.7356621647250549])
Dx = SE3(SO3([0.9718659863020955 -0.2283165512443433 0.057862397953631226; 0.14681139907428206 0.7793142901613267 0.6091926216330921; -0.18418175200303397 -0.5835587284740388 0.790908523566952]), [0.5757368637475478, -1.3164123194159005, 1.4957429757576586])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
