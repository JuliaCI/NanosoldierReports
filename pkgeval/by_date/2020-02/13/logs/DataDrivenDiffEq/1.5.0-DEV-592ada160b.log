Julia Version 1.5.0-DEV.267
Commit 592ada160b (2020-02-13 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ───────────── v0.5.3+1
  Installed OrderedCollections ────────── v1.1.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DataDrivenDiffEq ──────────── v0.1.1
  Installed GeneralizedGenerated ──────── v0.2.1
  Installed ChainRulesCore ────────────── v0.6.1
  Installed DocStringExtensions ───────── v0.8.1
  Installed ModelingToolkit ───────────── v1.2.6
  Installed RecipesBase ───────────────── v0.8.0
  Installed TreeViews ─────────────────── v0.3.0
  Installed FunctionWrappers ──────────── v1.0.0
  Installed MacroTools ────────────────── v0.5.4
  Installed NameResolution ────────────── v0.1.3
  Installed DiffRules ─────────────────── v1.0.0
  Installed TableTraits ───────────────── v1.0.0
  Installed JSON ──────────────────────── v0.21.0
  Installed Compat ────────────────────── v2.2.0
  Installed MathOptInterface ──────────── v0.8.4
  Installed AbstractTrees ─────────────── v0.2.1
  Installed IterativeSolvers ──────────── v0.8.1
  Installed MLStyle ───────────────────── v0.3.1
  Installed BenchmarkTools ────────────── v0.4.3
  Installed CanonicalTraits ───────────── v0.1.0
  Installed DataStructures ────────────── v0.17.9
  Installed Parameters ────────────────── v0.12.0
  Installed SpecialFunctions ──────────── v0.9.0
  Installed PrettyPrint ───────────────── v0.1.0
  Installed BinaryProvider ────────────── v0.5.8
  Installed Latexify ──────────────────── v0.12.0
  Installed Requires ──────────────────── v1.0.1
  Installed Roots ─────────────────────── v0.8.4
  Installed NaNMath ───────────────────── v0.3.3
  Installed Parsers ───────────────────── v0.3.11
  Installed GLPKMathProgInterface ─────── v0.4.4
  Installed LaTeXStrings ──────────────── v1.0.3
  Installed RecursiveFactorization ────── v0.1.0
  Installed MuladdMacro ───────────────── v0.2.2
  Installed RecursiveArrayTools ───────── v2.1.0
  Installed ArrayInterface ────────────── v2.4.1
  Installed GLPK ──────────────────────── v0.10.0
  Installed ZygoteRules ───────────────── v0.2.0
  Installed JuliaVariables ────────────── v0.2.0
  Installed MathProgBase ──────────────── v0.7.7
  Installed DiffEqBase ────────────────── v6.14.2
  Installed StaticArrays ──────────────── v0.12.1
  Installed LinQuadOptInterface ───────── v0.6.0
  Installed Convex ────────────────────── v0.12.6
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [2445eb08] + DataDrivenDiffEq v0.1.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [1520ce14] + AbstractTrees v0.2.1
  [4fba245c] + ArrayInterface v2.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [b99e7846] + BinaryProvider v0.5.8
  [a603d957] + CanonicalTraits v0.1.0
  [d360d2e6] + ChainRulesCore v0.6.1
  [34da2185] + Compat v2.2.0
  [f65535da] + Convex v0.12.6
  [2445eb08] + DataDrivenDiffEq v0.1.1
  [864edb3b] + DataStructures v0.17.9
  [2b5f629d] + DiffEqBase v6.14.2
  [b552c78f] + DiffRules v1.0.0
  [ffbed154] + DocStringExtensions v0.8.1
  [069b7b12] + FunctionWrappers v1.0.0
  [60bf3e95] + GLPK v0.10.0
  [3c7084bd] + GLPKMathProgInterface v0.4.4
  [6b9d7cbe] + GeneralizedGenerated v0.2.1
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [b14d175d] + JuliaVariables v0.2.0
  [b964fa9f] + LaTeXStrings v1.0.3
  [23fbe1c1] + Latexify v0.12.0
  [f8899e07] + LinQuadOptInterface v0.6.0
  [d8e11817] + MLStyle v0.3.1
  [1914dd2f] + MacroTools v0.5.4
  [b8f27783] + MathOptInterface v0.8.4
  [fdba3010] + MathProgBase v0.7.7
  [961ee093] + ModelingToolkit v1.2.6
  [46d2c3a1] + MuladdMacro v0.2.2
  [77ba4419] + NaNMath v0.3.3
  [71a1bf82] + NameResolution v0.1.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.11
  [8162dcfd] + PrettyPrint v0.1.0
  [3cdcf5f2] + RecipesBase v0.8.0
  [731186ca] + RecursiveArrayTools v2.1.0
  [f2c3362d] + RecursiveFactorization v0.1.0
  [ae029012] + Requires v1.0.1
  [f2b01f46] + Roots v0.8.4
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [3783bdb8] + TableTraits v1.0.0
  [a2a6695c] + TreeViews v0.3.0
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building GLPK → `~/.julia/packages/GLPK/Fb12F/deps/build.log`
    Testing DataDrivenDiffEq
Status `/tmp/jl_AIPaL9/Manifest.toml`
  [1520ce14] AbstractTrees v0.2.1
  [79e6a3ab] Adapt v1.0.1
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.4.1
  [6e4b80f9] BenchmarkTools v0.4.3
  [b99e7846] BinaryProvider v0.5.8
  [a603d957] CanonicalTraits v0.1.0
  [d360d2e6] ChainRulesCore v0.6.1
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [f65535da] Convex v0.12.6
  [2445eb08] DataDrivenDiffEq v0.1.1
  [864edb3b] DataStructures v0.17.9
  [2b5f629d] DiffEqBase v6.14.2
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [ffbed154] DocStringExtensions v0.8.1
  [d4d017d3] ExponentialUtilities v1.6.0
  [6a86dc24] FiniteDiff v2.2.0
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [60bf3e95] GLPK v0.10.0
  [3c7084bd] GLPKMathProgInterface v0.4.4
  [6b9d7cbe] GeneralizedGenerated v0.2.1
  [01680d73] GenericSVD v0.2.2
  [d25df0c9] Inflate v0.1.1
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [b14d175d] JuliaVariables v0.2.0
  [b964fa9f] LaTeXStrings v1.0.3
  [23fbe1c1] Latexify v0.12.0
  [093fc24a] LightGraphs v1.3.0
  [f8899e07] LinQuadOptInterface v0.6.0
  [d8e11817] MLStyle v0.3.1
  [1914dd2f] MacroTools v0.5.4
  [b8f27783] MathOptInterface v0.8.4
  [fdba3010] MathProgBase v0.7.7
  [961ee093] ModelingToolkit v1.2.6
  [46d2c3a1] MuladdMacro v0.2.2
  [77ba4419] NaNMath v0.3.3
  [71a1bf82] NameResolution v0.1.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [8162dcfd] PrettyPrint v0.1.0
  [3cdcf5f2] RecipesBase v0.8.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [f2b01f46] Roots v0.8.4
  [699a6c99] SimpleTraits v0.9.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [3783bdb8] TableTraits v1.0.0
  [a2a6695c] TreeViews v0.3.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Basis         |    7      7
Test Summary: | Pass  Total
DMD           |    8      8
EDMD: Error During Test at /home/pkgeval/.julia/packages/DataDrivenDiffEq/OpJzY/test/runtests.jl:52
  Got exception outside of a @test
  MethodError: Cannot `convert` an object of type NTuple{5,Float64} to an object of type SubArray{Float64,1,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Int64},true}
  Closest candidates are:
    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14
    convert(::Type{T}, !Matched::Factorization) where T<:AbstractArray at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/factorization.jl:55
    convert(::Type{T}, !Matched::T) where T at essentials.jl:171
    ...
  Stacktrace:
   [1] macro expansion at /home/pkgeval/.julia/packages/ModelingToolkit/Izg0a/src/utils.jl:75 [inlined]
   [2] macro expansion at /home/pkgeval/.julia/packages/GeneralizedGenerated/EBwdX/src/ngg/runtime_fns.jl:70 [inlined]
   [3] (::GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(u, x)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/Izg0a/src/utils.jl:75 =#
          (ModelingToolkit).convert((ModelingToolkit).typeof(u), x)
      end
  end),:function})(::SubArray{Float64,1,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Int64},true}, ::NTuple{5,Float64}) at /home/pkgeval/.julia/packages/GeneralizedGenerated/EBwdX/src/ngg/runtime_fns.jl:63
   [4] (::GeneralizedGenerated.Closure{function = (u, x;) -> begin
      begin
          (ModelingToolkit).convert((ModelingToolkit).typeof(u), x)
      end
  end,Tuple{SubArray{Float64,1,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Int64},true}}})(::NTuple{5,Float64}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GeneralizedGenerated/EBwdX/src/closure.jl:6
   [5] (::GeneralizedGenerated.Closure{function = (u, x;) -> begin
      begin
          (ModelingToolkit).convert((ModelingToolkit).typeof(u), x)
      end
  end,Tuple{SubArray{Float64,1,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Int64},true}}})(::NTuple{5,Float64}) at /home/pkgeval/.julia/packages/GeneralizedGenerated/EBwdX/src/closure.jl:6
   [6] macro expansion at /home/pkgeval/.julia/packages/ModelingToolkit/Izg0a/src/utils.jl:96 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/GeneralizedGenerated/EBwdX/src/ngg/runtime_fns.jl:70 [inlined]
   [8] (::GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(u, p)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/Izg0a/src/utils.jl:87 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/Izg0a/src/utils.jl:89 =#
          if (ModelingToolkit).isa(u, (ModelingToolkit).Array) || (ModelingToolkit).:!((ModelingToolkit).typeof(u) <: (ModelingToolkit).StaticArray) && false
              #= /home/pkgeval/.julia/packages/ModelingToolkit/Izg0a/src/utils.jl:90 =#
              return begin
                      $(Expr(:inbounds, true))
                      local var"#131#val" = begin
                                  #= /home/pkgeval/.julia/packages/ModelingToolkit/Izg0a/src/utils.jl:81 =#
                                  let (u₁, u₂) = (u[1], u[2])
                                      [(ModelingToolkit).:*(1, u₁), (ModelingToolkit).:*(1, u₂), (ModelingToolkit).sin(u₁), (ModelingToolkit).cos(u₁), (ModelingToolkit).:*(u₁, u₂)]
                                  end
                              end
                      $(Expr(:inbounds, :((ModelingToolkit).pop)))
                      var"#131#val"
                  end
          else
              #= /home/pkgeval/.julia/packages/ModelingToolkit/Izg0a/src/utils.jl:92 =#
              X = begin
                      $(Expr(:inbounds, true))
                      local var"#132#val" = begin
                                  #= /home/pkgeval/.julia/packages/ModelingToolkit/Izg0a/src/utils.jl:80 =#
                                  let (u₁, u₂) = (u[1], u[2])
                                      ((ModelingToolkit).:*(1, u₁), (ModelingToolkit).:*(1, u₂), (ModelingToolkit).sin(u₁), (ModelingToolkit).cos(u₁), (ModelingToolkit).:*(u₁, u₂))
                                  end
                              end
                      $(Expr(:inbounds, :((ModelingToolkit).pop)))
                      var"#132#val"
                  end
              #= /home/pkgeval/.julia/packages/ModelingToolkit/Izg0a/src/utils.jl:93 =#
              T = (ModelingToolkit).promote_type((ModelingToolkit).map((ModelingToolkit).typeof, X)...)
              #= /home/pkgeval/.julia/packages/ModelingToolkit/Izg0a/src/utils.jl:94 =#
              (ModelingToolkit).map(T, X)
              #= /home/pkgeval/.julia/packages/ModelingToolkit/Izg0a/src/utils.jl:95 =#
              construct = if (ModelingToolkit).isa(u, (ModelingToolkit).ModelingToolkit.StaticArrays.StaticArray)
                      (ModelingToolkit).ModelingToolkit.StaticArrays.similar_type((ModelingToolkit).typeof(u), (ModelingToolkit).eltype(X))
                  else
                      #= /home/pkgeval/.julia/packages/GeneralizedGenerated/EBwdX/src/closure_conv.jl:53 =#
                      let freevars = (u,)
                          #= /home/pkgeval/.julia/packages/GeneralizedGenerated/EBwdX/src/closure_conv.jl:54 =#
                          (GeneralizedGenerated.Closure){function = (u, x;) -> begin
      begin
          (ModelingToolkit).convert((ModelingToolkit).typeof(u), x)
      end
  end, Base.typeof(freevars)}(freevars)
                      end
                  end
              #= /home/pkgeval/.julia/packages/ModelingToolkit/Izg0a/src/utils.jl:96 =#
              return construct(X)
          end
      end
  end),:function})(::SubArray{Float64,1,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Int64},true}, ::Array{Any,1}) at /home/pkgeval/.julia/packages/GeneralizedGenerated/EBwdX/src/ngg/runtime_fns.jl:63
   [9] (::Basis{Array{Operation,1},Array{Operation,1},Array{Any,1}})(::SubArray{Float64,1,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Int64},true}; p::Array{Any,1}) at /home/pkgeval/.julia/packages/DataDrivenDiffEq/OpJzY/src/basis.jl:47
   [10] #42 at ./none:0 [inlined]
   [11] iterate at ./generator.jl:47 [inlined]
   [12] collect(::Base.Generator{Base.Generator{Base.OneTo{Int64},Base.var"#183#184"{Array{Float64,2}}},DataDrivenDiffEq.var"#42#44"{Array{Any,1},Basis{Array{Operation,1},Array{Operation,1},Array{Any,1}}}}) at ./array.jl:664
   [13] ExtendedDMD(::Array{Float64,2}, ::Array{Float64,2}, ::Basis{Array{Operation,1},Array{Operation,1},Array{Any,1}}; p::Array{Any,1}, B::Array{Any,2}, dt::Float64) at /home/pkgeval/.julia/packages/DataDrivenDiffEq/OpJzY/src/extended_dmd.jl:30
   [14] ExtendedDMD(::Array{Float64,2}, ::Basis{Array{Operation,1},Array{Operation,1},Array{Any,1}}; p::Array{Any,1}, B::Array{Any,2}, dt::Float64) at /home/pkgeval/.julia/packages/DataDrivenDiffEq/OpJzY/src/extended_dmd.jl:16
   [15] ExtendedDMD(::Array{Float64,2}, ::Basis{Array{Operation,1},Array{Operation,1},Array{Any,1}}) at /home/pkgeval/.julia/packages/DataDrivenDiffEq/OpJzY/src/extended_dmd.jl:16
   [16] top-level scope at /home/pkgeval/.julia/packages/DataDrivenDiffEq/OpJzY/test/runtests.jl:70
   [17] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [18] top-level scope at /home/pkgeval/.julia/packages/DataDrivenDiffEq/OpJzY/test/runtests.jl:54
   [19] include(::String) at ./client.jl:441
   [20] top-level scope at none:6
   [21] eval(::Module, ::Any) at ./boot.jl:331
   [22] exec_options(::Base.JLOptions) at ./client.jl:264
   [23] _start() at ./client.jl:490
  
Test Summary: | Pass  Error  Total
EDMD          |    1      1      2
ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DataDrivenDiffEq/OpJzY/test/runtests.jl:52
ERROR: Package DataDrivenDiffEq errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
