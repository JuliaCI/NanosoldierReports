Julia Version 1.5.0-DEV.263
Commit d785bdc711 (2020-02-12 15:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed MappedArrays ──────────────── v0.2.2
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed DataAPI ───────────────────── v1.1.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed KCenters ──────────────────── v0.1.13
  Installed Tables ────────────────────── v1.0.1
  Installed SimilaritySearch ──────────── v0.3.19
  Installed InvertedIndices ───────────── v1.0.0
  Installed Parsers ───────────────────── v0.3.11
  Installed Missings ──────────────────── v0.4.3
  Installed DataValueInterfaces ───────── v1.0.0
  Installed DataStructures ────────────── v0.17.9
  Installed MLDataUtils ───────────────── v0.5.0
  Installed StatsBase ─────────────────── v0.32.0
  Installed MLDataPattern ─────────────── v0.5.0
  Installed JSON ──────────────────────── v0.21.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed CategoricalArrays ─────────── v0.7.7
  Installed Compat ────────────────────── v3.5.0
  Installed Reexport ──────────────────── v0.2.0
  Installed OrderedCollections ────────── v1.1.0
  Installed TableTraits ───────────────── v1.0.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed DataFrames ────────────────── v0.20.2
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.13
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.5.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.13
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_I93iqx/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.5.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.13
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.1
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9326678744951884
[ Info: 0.8307796732584636
[ Info: 0.5539460386335849
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.33083040051162244
mean(cdnet.distances) = 0.5568538040916124
mean(crand.distances) = 0.3512454400459925
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.306640625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.306640625,"f1":null,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":5.1796875,"distances_sum":887.6945593980126}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.306640625,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.306640625,"f1":null,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":5.1796875,"distances_sum":887.6945593980126}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4423828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.4423828125,"f1":null,"seconds":4.021450877189636e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":5.953125,"distances_sum":1302.457506350705}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4658203125, conf: {"ssize":7,"bsize":3}, perf: {"precision":null,"recall":0.4658203125,"f1":null,"seconds":3.8798898458480835e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":6.15625,"distances_sum":1410.5258538594517}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4775390625, conf: {"ssize":8,"bsize":3}, perf: {"precision":null,"recall":0.4775390625,"f1":null,"seconds":4.082918167114258e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":6.3671875,"distances_sum":1397.8845339881614}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7080078125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7080078125,"f1":0.8156218781218788,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.875,"distances_sum":2096.7667626751445}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.62890625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.62890625,"f1":0.7561343170718177,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.421875,"distances_sum":1839.2677057665433}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6376953125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6376953125,"f1":0.7657387751137759,"seconds":4.410743713378906e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.609375,"distances_sum":1828.6785551345033}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.466796875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.466796875,"f1":0.6218607781107784,"seconds":3.647059202194214e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":6.25,"distances_sum":1344.9663731020567}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7080078125,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.7080078125,"f1":0.8156218781218788,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.875,"distances_sum":2096.7667626751445}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8403861763236771,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.1015625,"distances_sum":2154.7339809804066}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9220581501831507,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.5390625,"distances_sum":2658.6683887968215}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8591179653679663,"seconds":5.057081580162048e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.1015625,"distances_sum":2298.189600508984}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.929827984515485,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.6484375,"distances_sum":2722.0530196619516}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9372372419247424,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.5703125,"distances_sum":2813.8363590865165}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9413709554334558,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.65625,"distances_sum":2841.806112816558}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9154970029970037,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.46875,"distances_sum":2616.6936792520946}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9413709554334558,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.65625,"distances_sum":2841.806112816558}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9013671875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9413709554334558,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.65625,"distances_sum":2841.806112816558}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4521484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4521484375,"f1":0.5999604562104563,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.5390625,"distances_sum":1187.323827561004}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8478812853812864,"seconds":8.50483775138855e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.28125,"distances_sum":2194.73721604807}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5673828125,"f1":0.7108873765123772,"seconds":4.53554093837738e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.640625,"distances_sum":1519.055726939779}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8478812853812864,"seconds":8.50483775138855e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.28125,"distances_sum":2194.73721604807}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619104853479856,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.859375,"distances_sum":3030.8462816970164}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9596039377289382,"seconds":6.290152668952942e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.875,"distances_sum":2981.101937434949}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9580757783882787,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9296875,"distances_sum":2957.4774066343825}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9198577464202473,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.6015625,"distances_sum":2675.0547100331646}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8500447469197477,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.3359375,"distances_sum":2195.3210646830007}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9619104853479856,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.859375,"distances_sum":3030.8462816970164}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.97810782967033,"seconds":6.508082151412964e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9609375,"distances_sum":3129.7920375794088}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9693452380952384,"seconds":6.3944607973098755e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9296875,"distances_sum":3058.8095462441393}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9749656593406597,"seconds":6.809830665588379e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9453125,"distances_sum":3114.9385663854305}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.969442536630037,"seconds":6.426125764846802e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9140625,"distances_sum":3049.0872515692263}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9626175907425912,"seconds":6.20819628238678e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.921875,"distances_sum":3013.1099682673257}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":6,"bsize":13}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9828697344322346,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9765625,"distances_sum":3182.6137968350536}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96875,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9828697344322346,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9765625,"distances_sum":3182.6137968350536}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96875,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9828697344322346,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9765625,"distances_sum":3182.6137968350536}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.515625,"f1":null,"seconds":4.198402166366577e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.3203125,"distances_sum":1338.3143270449702}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.400390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.400390625,"f1":null,"seconds":3.7364661693573e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":5.5546875,"distances_sum":1032.203651608931}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.8344046578421588,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.6796875,"distances_sum":2048.652204322414}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.728515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.728515625,"f1":0.8344046578421588,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.6796875,"distances_sum":2048.652204322414}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9133928571428579,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.3359375,"distances_sum":2541.420500352482}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8880785880785889,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.0234375,"distances_sum":2389.8165636352874}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.849609375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.849609375,"f1":0.9133928571428579,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.3359375,"distances_sum":2541.420500352482}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9645489926739932,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.828125,"distances_sum":2922.0368271307175}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9426797161172166,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.625,"distances_sum":2777.025088237789}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9645489926739932,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.828125,"distances_sum":2922.0368271307175}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9645489926739932,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.828125,"distances_sum":2922.0368271307175}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.291015625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.291015625,"f1":null,"seconds":3.466382622718811e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":4.7109375,"distances_sum":811.4900263325677}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1435546875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1435546875,"f1":null,"seconds":2.8796494007110596e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":4.0,"distances_sum":401.2947046988691}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.291015625,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.291015625,"f1":null,"seconds":3.466382622718811e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":4.7109375,"distances_sum":811.4900263325677}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.603515625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.603515625,"f1":0.7418383699633707,"seconds":4.637986421585083e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.0078125,"distances_sum":1754.016041768963}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8736758033633041,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.234375,"distances_sum":2331.196396524414}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8736758033633041,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.234375,"distances_sum":2331.196396524414}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9639194139194145,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7734375,"distances_sum":2878.71872113538}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9639194139194145,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7734375,"distances_sum":2878.71872113538}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9639194139194145,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7734375,"distances_sum":2878.71872113538}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7045848248973253,"seconds":4.766508936882019e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.78125,"distances_sum":1492.6311081531712}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.572265625,"f1":null,"seconds":4.7031790018081665e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.7109375,"distances_sum":1561.6637456411568}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.8001987595737605,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.265625,"distances_sum":1890.6631329273748}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.8001987595737605,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.265625,"distances_sum":1890.6631329273748}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8705965909090916,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.5703125,"distances_sum":2303.6951957087235}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8966523060273071,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.75,"distances_sum":2438.4708318190374}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9103427822177832,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7890625,"distances_sum":2537.3905235367}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8830476814851823,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.671875,"distances_sum":2395.9800633003615}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9411177364302369,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2771.8320686951433}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.862209145021646,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.4609375,"distances_sum":2269.204989124971}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8604749417249427,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.484375,"distances_sum":2209.8238055516567}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9411177364302369,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2771.8320686951433}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.948649267399268,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9375,"distances_sum":2804.287697316514}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.965888278388279,"seconds":6.381422281265259e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.953125,"distances_sum":2965.045197880691}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.961349587912088,"seconds":6.489455699920654e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9609375,"distances_sum":2914.3489810845463}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9807119963369965,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.984375,"distances_sum":3105.607112587116}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9494880119880125,"seconds":6.327405571937561e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.90625,"distances_sum":2879.155337462582}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9807119963369965,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.984375,"distances_sum":3105.607112587116}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9807119963369965,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.984375,"distances_sum":3105.607112587116}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":3,"bsize":4}, perf: {"precision":0.9830729166666665,"recall":0.6611328125,"f1":0.7806594447219453,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.328125,"distances_sum":1014.0440820944546}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3603515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":0.98046875,"recall":0.3603515625,"f1":0.4997970779220774,"seconds":3.98978590965271e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":5.4140625,"distances_sum":499.4200420819884}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6611328125,"state":{"ssize":3,"bsize":4},"perf":{"precision":0.9830729166666665,"recall":0.6611328125,"f1":0.7806594447219453,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.328125,"distances_sum":1014.0440820944546}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":6,"bsize":8}, perf: {"precision":0.9903459821428572,"recall":0.9111328125,"f1":0.9455846237096243,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.828125,"distances_sum":1603.1712402966687}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":0.9725632440476188,"recall":0.7421875,"f1":0.833297171578422,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.6953125,"distances_sum":1178.268559419293}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":6,"bsize":8},"perf":{"precision":0.9903459821428572,"recall":0.9111328125,"f1":0.9455846237096243,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.828125,"distances_sum":1603.1712402966687}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":9,"bsize":10}, perf: {"precision":0.9919084821428572,"recall":0.9423828125,"f1":0.9646591689560444,"seconds":6.59748911857605e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9140625,"distances_sum":1706.776830261458}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":9,"bsize":11}, perf: {"precision":0.9831659226190477,"recall":0.931640625,"f1":0.9544113438644689,"seconds":6.590038537979126e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8828125,"distances_sum":1692.6168679202315}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":8,"bsize":9}, perf: {"precision":0.9812127976190477,"recall":0.9140625,"f1":0.9425852793040297,"seconds":6.476417183876038e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.78125,"distances_sum":1651.8759246728093}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":9,"bsize":10},"perf":{"precision":0.9919084821428572,"recall":0.9423828125,"f1":0.9646591689560444,"seconds":6.59748911857605e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9140625,"distances_sum":1706.776830261458}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":9,"bsize":10},"perf":{"precision":0.9919084821428572,"recall":0.9423828125,"f1":0.9646591689560444,"seconds":6.59748911857605e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9140625,"distances_sum":1706.776830261458}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.62890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.62890625,"f1":0.7613905192030198,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.140625,"distances_sum":1130.517721195127}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.62890625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.62890625,"f1":0.7613905192030198,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.140625,"distances_sum":1130.517721195127}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8465477231102237,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.7109375,"distances_sum":1378.347946260697}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75,"f1":0.8465477231102237,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.7109375,"distances_sum":1378.347946260697}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9038289835164843,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.46875,"distances_sum":1563.61162396458}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8330078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8330078125,"f1":0.9038289835164843,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.46875,"distances_sum":1563.61162396458}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8330078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8330078125,"f1":0.9038289835164843,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.46875,"distances_sum":1563.61162396458}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.220703125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.220703125,"f1":null,"seconds":3.3471733331680298e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":5.2734375,"distances_sum":383.36269107093386}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.220703125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.220703125,"f1":null,"seconds":3.3471733331680298e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":5.2734375,"distances_sum":383.36269107093386}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.220703125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.220703125,"f1":null,"seconds":3.3471733331680298e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":5.2734375,"distances_sum":383.36269107093386}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8745109057609066,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.8359375,"distances_sum":1798.2397771809015}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8665324259074269,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.7421875,"distances_sum":1717.9598004880147}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7827927281052288,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.3828125,"distances_sum":1394.6540439964642}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7900390625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7900390625,"f1":0.8745109057609066,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.8359375,"distances_sum":1798.2397771809015}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9024954212454218,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.171875,"distances_sum":1957.2245292401685}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.896354686979688,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.15625,"distances_sum":1923.544534734075}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.938501602564103,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.625,"distances_sum":2214.063712013088}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9376831501831507,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.59375,"distances_sum":2220.1966452902943}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.938501602564103,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.625,"distances_sum":2214.063712013088}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764709249084251,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.90625,"distances_sum":2433.315674201829}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657051282051288,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.84375,"distances_sum":2371.8785118971027}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9424793956043961,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.59375,"distances_sum":2269.5636485167056}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764709249084251,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.90625,"distances_sum":2433.315674201829}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764709249084251,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.90625,"distances_sum":2433.315674201829}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.544921875,"f1":null,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":7.3671875,"distances_sum":1015.349387444507}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.53515625,"f1":0.6833354145854151,"seconds":4.291534423828125e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":7.40625,"distances_sum":954.0233052651665}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.544921875,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.544921875,"f1":null,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":7.3671875,"distances_sum":1015.349387444507}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9125374625374633,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.328125,"distances_sum":1914.9155735943712}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9262763278388285,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.5078125,"distances_sum":1985.9489002488601}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8451912670662679,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.078125,"distances_sum":1533.859977636028}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9291755119880125,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.609375,"distances_sum":1997.9216344659499}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8667003135753143,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.140625,"distances_sum":1653.379206871551}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9291755119880125,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.609375,"distances_sum":1997.9216344659499}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9659111721611724,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.921875,"distances_sum":2250.5439332419187}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.966225961538462,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.8671875,"distances_sum":2267.56456570235}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9626945970695976,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.8515625,"distances_sum":2218.253672590029}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9600732600732604,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.828125,"distances_sum":2219.826520239342}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.940355998168499,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.640625,"distances_sum":2087.488284123941}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":12,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9528502747252752,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.765625,"distances_sum":2182.3402306869602}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9433321886446892,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.765625,"distances_sum":2119.238979042926}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9665579212454217,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.8828125,"distances_sum":2251.870358626432}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9319310897435904,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.640625,"distances_sum":2029.8893606975682}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.966225961538462,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.8671875,"distances_sum":2267.56456570235}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.966225961538462,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.1865049600601196e-6,"evaluations":8.8671875,"distances_sum":2267.56456570235}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1728515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1728515625,"f1":null,"seconds":3.123655915260315e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":4.8203125,"distances_sum":296.4128219798758}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1728515625,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.1728515625,"f1":null,"seconds":3.123655915260315e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":4.8203125,"distances_sum":296.4128219798758}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.7029316169941177,"seconds":4.431232810020447e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.84375,"distances_sum":1081.4154620258562}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.6435546875,"f1":null,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.03125,"distances_sum":1316.3586573224322}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6435546875,"state":{"ssize":1,"bsize":4},"perf":{"precision":null,"recall":0.6435546875,"f1":null,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.03125,"distances_sum":1316.3586573224322}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9141884157509163,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.3046875,"distances_sum":2001.851250389056}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.910616987179488,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.2734375,"distances_sum":1959.1756904495187}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.857421875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.857421875,"f1":0.9141884157509163,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.3046875,"distances_sum":2001.851250389056}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.857421875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.857421875,"f1":0.9141884157509163,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.3046875,"distances_sum":2001.851250389056}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3544921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3544921875,"f1":null,"seconds":3.5297125577926636e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":5.4453125,"distances_sum":643.9026488074787}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.546875,"f1":0.6926356629481635,"seconds":4.386529326438904e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.0703125,"distances_sum":1003.6707045105838}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7849827256077263,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.5703125,"distances_sum":1286.9624115912634}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6650390625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6650390625,"f1":0.7849827256077263,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.5703125,"distances_sum":1286.9624115912634}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9298566017316022,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.4765625,"distances_sum":1979.6519384891574}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9156624625374632,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.34375,"distances_sum":1883.1152381180061}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8642466908091916,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.8984375,"distances_sum":1578.7071575167283}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8551890817515826,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.8671875,"distances_sum":1549.3233949353732}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9347043581418586,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.484375,"distances_sum":2012.1703958533715}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9126665001665011,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3203125,"distances_sum":1861.7553982103611}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9347043581418586,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.484375,"distances_sum":2012.1703958533715}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9509043040293049,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.703125,"distances_sum":2151.053885165042}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9701865842490847,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8125,"distances_sum":2242.519860629873}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9458619505494509,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6640625,"distances_sum":2122.5257147853085}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9666151556776562,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8203125,"distances_sum":2239.055320665601}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670787545787551,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.84375,"distances_sum":2225.148121195376}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9499713827838833,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7265625,"distances_sum":2119.7674253067253}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9494333791208794,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.734375,"distances_sum":2133.731844209625}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9701865842490847,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8125,"distances_sum":2242.519860629873}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9701865842490847,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8125,"distances_sum":2242.519860629873}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8570268273393281,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.9609375,"distances_sum":1700.8968320018428}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8570268273393281,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.9609375,"distances_sum":1700.8968320018428}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.915642170329671,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5078125,"distances_sum":1972.20642573968}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9440221237096244,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7109375,"distances_sum":2174.8761476558693}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9440221237096244,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7109375,"distances_sum":2174.8761476558693}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9762648809523816,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9375,"distances_sum":2391.3337028490064}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.958917124542125,"seconds":1.2557953596115112e-5,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8046875,"distances_sum":2291.622435734135}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.954550137362638,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8046875,"distances_sum":2267.6673207366807}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9762648809523816,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9375,"distances_sum":2391.3337028490064}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9762648809523816,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9375,"distances_sum":2391.3337028490064}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.796995192307693,"seconds":4.8074871301651e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.515625,"distances_sum":1343.7242733149872}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3701171875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3701171875,"f1":null,"seconds":3.5390257835388184e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":6.2734375,"distances_sum":679.7591956814139}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.544921875,"f1":0.6841112012987017,"seconds":4.103407263755798e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.1171875,"distances_sum":1014.4507161491416}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.796995192307693,"seconds":4.8074871301651e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.515625,"distances_sum":1343.7242733149872}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9544731310356315,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.796875,"distances_sum":2196.6721287696337}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8598734598734606,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.9140625,"distances_sum":1622.9289809006848}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9544731310356315,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.796875,"distances_sum":2196.6721287696337}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9544731310356315,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.796875,"distances_sum":2196.6721287696337}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9544731310356315,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.796875,"distances_sum":2196.6721287696337}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8550943847818857,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.59375,"distances_sum":1642.382307030856}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7980054667554678,"seconds":4.550442099571228e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.40625,"distances_sum":1386.3960543000846}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8550943847818857,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.59375,"distances_sum":1642.382307030856}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.962711767399268,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.859375,"distances_sum":2307.600203223251}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9675824175824181,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8984375,"distances_sum":2322.1178370650146}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9675824175824181,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8984375,"distances_sum":2322.1178370650146}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707818223443225,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.921875,"distances_sum":2340.5820407509295}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.976413690476191,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9453125,"distances_sum":2379.141258069035}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.976413690476191,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9453125,"distances_sum":2379.141258069035}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.976413690476191,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9453125,"distances_sum":2379.141258069035}}, n: 9
mean(cfft.distances) = 0.33163561315455187
mean(cdnet.distances) = 1.1473831272540764
mean(crand.distances) = 0.38310480095554006
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8799999999999999
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9577777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8622222222222223
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8533333333333332
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9422222222222222
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8688888888888888
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9044444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9199999999999999
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9333333333333332
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9177777777777778
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8577777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8511111111111113
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9066666666666667
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444443
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9222222222222222
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9133333333333332
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 3, 3, 3, 1, 2, 3, 2, 3, 2, 1, 2, 3, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 1, 3, 1, 3]
acc = 0.9266666666666666
*** finished computation of 12 references, err: [Inf, 0.5758857876062393] ***
*** center 1: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.30341948653003564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30341948653003564, 0.2666157288707558] ***
*** starting iteration: 2; err: [Inf, 0.30341948653003564, 0.2666157288707558] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30341948653003564, 0.2666157288707558, 0.24482529916361467] ***
*** starting iteration: 3; err: [Inf, 0.30341948653003564, 0.2666157288707558, 0.24482529916361467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30341948653003564, 0.2666157288707558, 0.24482529916361467, 0.23608877625338756] ***
*** finished computation of 3 references, err: [Inf, 0.30341948653003564, 0.2666157288707558, 0.24482529916361467, 0.23608877625338756] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [103, 81, 3]]
** centroid: 1, normalized-entropy: 0.689221495086243, [(1, 103), (2, 81), (3, 3)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [86, 148, 18]]
** centroid: 2, normalized-entropy: 0.7900593099881156, [(1, 86), (2, 148), (3, 18)]
*** center 3: selecting labels [1] (freq >= 2) [from [227, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.19702169187954283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19702169187954283, 0.1511836726805433] ***
*** starting iteration: 2; err: [Inf, 0.19702169187954283, 0.1511836726805433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19702169187954283, 0.1511836726805433, 0.14467489243853507] ***
*** starting iteration: 3; err: [Inf, 0.19702169187954283, 0.1511836726805433, 0.14467489243853507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19702169187954283, 0.1511836726805433, 0.14467489243853507, 0.1433615764066739] ***
*** starting iteration: 4; err: [Inf, 0.19702169187954283, 0.1511836726805433, 0.14467489243853507, 0.1433615764066739] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19702169187954283, 0.1511836726805433, 0.14467489243853507, 0.1433615764066739, 0.14292735598740858] ***
*** finished computation of 7 references, err: [Inf, 0.19702169187954283, 0.1511836726805433, 0.14467489243853507, 0.1433615764066739, 0.14292735598740858] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [86, 19, 0]]
** centroid: 1, normalized-entropy: 0.6821560732869936, [(1, 86), (2, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [66, 17, 0]]
** centroid: 2, normalized-entropy: 0.7314625617214586, [(1, 66), (2, 17)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 90, 21]]
** centroid: 3, normalized-entropy: 0.699772221773307, [(2, 90), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [72, 16, 0]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(1, 72), (2, 16)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [3, 87, 0]]
** centroid: 6, normalized-entropy: 0.2108423003185322, [(1, 3), (2, 87)]
*** center 7: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18361492121991502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18361492121991502, 0.1504328532788115] ***
*** starting iteration: 2; err: [Inf, 0.18361492121991502, 0.1504328532788115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18361492121991502, 0.1504328532788115, 0.14621681871397577] ***
*** starting iteration: 3; err: [Inf, 0.18361492121991502, 0.1504328532788115, 0.14621681871397577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18361492121991502, 0.1504328532788115, 0.14621681871397577, 0.14522376342088744] ***
*** finished computation of 7 references, err: [Inf, 0.18361492121991502, 0.1504328532788115, 0.14621681871397577, 0.14522376342088744] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [48, 56, 0]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(1, 48), (2, 56)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [53, 47, 0]]
** centroid: 2, normalized-entropy: 0.9974015885677396, [(1, 53), (2, 47)]
*** center 3: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 82, 20]]
** centroid: 4, normalized-entropy: 0.7140152804378671, [(2, 82), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [39, 65, 0]]
** centroid: 5, normalized-entropy: 0.954434002924965, [(1, 39), (2, 65)]
*** center 6: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19761611755540792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19761611755540792, 0.16045841010709083] ***
*** starting iteration: 2; err: [Inf, 0.19761611755540792, 0.16045841010709083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19761611755540792, 0.16045841010709083, 0.1540378430513372] ***
*** starting iteration: 3; err: [Inf, 0.19761611755540792, 0.16045841010709083, 0.1540378430513372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19761611755540792, 0.16045841010709083, 0.1540378430513372, 0.1530949486837746] ***
*** finished computation of 7 references, err: [Inf, 0.19761611755540792, 0.16045841010709083, 0.1540378430513372, 0.1530949486837746] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [92, 5, 0]]
** centroid: 1, normalized-entropy: 0.29292995113885967, [(1, 92), (2, 5)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 44, 21]]
** centroid: 2, normalized-entropy: 0.9076961653608385, [(2, 44), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [101, 2, 0]]
** centroid: 3, normalized-entropy: 0.13815722856252646, [(1, 101), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [89, 5, 0]]
** centroid: 4, normalized-entropy: 0.2998025130558691, [(1, 89), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [12, 97, 0]]
** centroid: 5, normalized-entropy: 0.5001926210998139, [(1, 12), (2, 97)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 100, 0]]
** centroid: 6, normalized-entropy: 0.13923299905509884, [(1, 2), (2, 100)]
*** center 7: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2004341520201247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2004341520201247, 0.1526328188272098] ***
*** finished computation of 7 references, err: [Inf, 0.2004341520201247, 0.1526328188272098] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [66, 58, 0]]
** centroid: 1, normalized-entropy: 0.9969954265557693, [(1, 66), (2, 58)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [78, 14, 0]]
** centroid: 2, normalized-entropy: 0.6152538910563409, [(1, 78), (2, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 45, 21]]
** centroid: 4, normalized-entropy: 0.9023932827949788, [(2, 45), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [88, 23, 0]]
** centroid: 5, normalized-entropy: 0.7361103940132281, [(1, 88), (2, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 89, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2003903941166164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2003903941166164, 0.14767500511028508] ***
*** finished computation of 7 references, err: [Inf, 0.2003903941166164, 0.14767500511028508] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [58, 55, 0]]
** centroid: 1, normalized-entropy: 0.9994915114306262, [(1, 58), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [54, 35, 0]]
** centroid: 2, normalized-entropy: 0.9668701645630143, [(1, 54), (2, 35)]
*** center 3: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 66, 20]]
** centroid: 4, normalized-entropy: 0.7824441294066888, [(2, 66), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [27, 94, 0]]
** centroid: 5, normalized-entropy: 0.765860637141441, [(1, 27), (2, 94)]
*** center 6: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19390902393169399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19390902393169399, 0.15681066670290278] ***
*** finished computation of 7 references, err: [Inf, 0.19390902393169399, 0.15681066670290278] ***
*** center 1: selecting labels [1] (freq >= 2) [from [122, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 51, 21]]
** centroid: 2, normalized-entropy: 0.8708644692353648, [(2, 51), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [36, 2, 0]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(1, 36), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [87, 27, 0]]
** centroid: 4, normalized-entropy: 0.7897492536625221, [(1, 87), (2, 27)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [40, 88, 0]]
** centroid: 5, normalized-entropy: 0.8960382325345574, [(1, 40), (2, 88)]
*** center 6: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 85, 0]]
** centroid: 7, normalized-entropy: 0.15790637433488164, [(1, 2), (2, 85)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3726207769392674] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3726207769392674, 0.30195898052819586] ***
*** finished computation of 3 references, err: [Inf, 0.3726207769392674, 0.30195898052819586] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [117, 168, 21]]
** centroid: 1, normalized-entropy: 0.8016107153946765, [(1, 117), (2, 168), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [182, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [117, 61, 0]]
** centroid: 3, normalized-entropy: 0.9273758479181148, [(1, 117), (2, 61)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4467270706111434] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4467270706111434, 0.30032624118588586] ***
*** finished computation of 3 references, err: [Inf, 0.4467270706111434, 0.30032624118588586] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [241, 44, 0]]
** centroid: 1, normalized-entropy: 0.6207082099241679, [(1, 241), (2, 44)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [156, 46, 0]]
** centroid: 2, normalized-entropy: 0.7740204128451942, [(1, 156), (2, 46)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 160, 20]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 160), (3, 20)]
finished with 5 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4048777190267459] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4048777190267459, 0.31050294552087737] ***
*** finished computation of 3 references, err: [Inf, 0.4048777190267459, 0.31050294552087737] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [258, 51, 0]]
** centroid: 1, normalized-entropy: 0.646251622274129, [(1, 258), (2, 51)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 154, 21]]
** centroid: 2, normalized-entropy: 0.5293608652873645, [(2, 154), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [135, 48, 0]]
** centroid: 3, normalized-entropy: 0.8301899714180444, [(1, 135), (2, 48)]
finished with 5 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3126354899744059] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3126354899744059, 0.24294695444125403] ***
*** finished computation of 3 references, err: [Inf, 0.3126354899744059, 0.24294695444125403] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [312, 27, 0]]
** centroid: 1, normalized-entropy: 0.40093068188727266, [(1, 312), (2, 27)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 151, 21]]
** centroid: 2, normalized-entropy: 0.5353474203041859, [(2, 151), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [104, 51, 0]]
** centroid: 3, normalized-entropy: 0.9139345786470127, [(1, 104), (2, 51)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.39880105762322177] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39880105762322177, 0.22985488434100168] ***
*** finished computation of 3 references, err: [Inf, 0.39880105762322177, 0.22985488434100168] ***
*** center 1: selecting labels [1] (freq >= 1) [from [257, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [12, 186, 20]]
** centroid: 2, normalized-entropy: 0.4680530150455516, [(1, 12), (2, 186), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [128, 64, 0]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(1, 128), (2, 64)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33489347183888407] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33489347183888407, 0.2352449202901688] ***
*** finished computation of 3 references, err: [Inf, 0.33489347183888407, 0.2352449202901688] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [90, 194, 21]]
** centroid: 1, normalized-entropy: 0.757476515356123, [(1, 90), (2, 194), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [196, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [107, 59, 0]]
** centroid: 3, normalized-entropy: 0.9388170972669767, [(1, 107), (2, 59)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4107161079010403] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4107161079010403, 0.30841990051421897] ***
*** finished computation of 3 references, err: [Inf, 0.4107161079010403, 0.30841990051421897] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [282, 33, 0]]
** centroid: 1, normalized-entropy: 0.4839112332593779, [(1, 282), (2, 33)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 156, 21]]
** centroid: 2, normalized-entropy: 0.5254506799086205, [(2, 156), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [134, 40, 0]]
** centroid: 3, normalized-entropy: 0.7778108790853029, [(1, 134), (2, 40)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3987340915869961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3987340915869961, 0.29946075721379967] ***
*** finished computation of 3 references, err: [Inf, 0.3987340915869961, 0.29946075721379967] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [106, 195, 20]]
** centroid: 1, normalized-entropy: 0.7660712196873081, [(1, 106), (2, 195), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [188, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [103, 55, 0]]
** centroid: 3, normalized-entropy: 0.9323608839762941, [(1, 103), (2, 55)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5232912156468389] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5232912156468389, 0.3062041676051725] ***
*** finished computation of 3 references, err: [Inf, 0.5232912156468389, 0.3062041676051725] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [236, 50, 0]]
** centroid: 1, normalized-entropy: 0.6686245915401701, [(1, 236), (2, 50)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [157, 42, 0]]
** centroid: 2, normalized-entropy: 0.7434950259069987, [(1, 157), (2, 42)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 161, 21]]
** centroid: 3, normalized-entropy: 0.5159469300074472, [(2, 161), (3, 21)]
finished with 5 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.28125217657206747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28125217657206747, 0.23961746716673585] ***
*** starting iteration: 2; err: [Inf, 0.28125217657206747, 0.23961746716673585] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28125217657206747, 0.23961746716673585, 0.23142355663012126] ***
*** starting iteration: 3; err: [Inf, 0.28125217657206747, 0.23961746716673585, 0.23142355663012126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28125217657206747, 0.23961746716673585, 0.23142355663012126, 0.22989451137931272] ***
*** finished computation of 3 references, err: [Inf, 0.28125217657206747, 0.23961746716673585, 0.23142355663012126, 0.22989451137931272] ***
*** center 1: selecting labels [1] (freq >= 2) [from [227, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [10, 193, 20]]
** centroid: 2, normalized-entropy: 0.43740301977699636, [(1, 10), (2, 193), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [160, 57, 0]]
** centroid: 3, normalized-entropy: 0.8307529559957776, [(1, 160), (2, 57)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31647743360380987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31647743360380987, 0.23594480115261257] ***
*** starting iteration: 2; err: [Inf, 0.31647743360380987, 0.23594480115261257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31647743360380987, 0.23594480115261257, 0.23172365728419447] ***
*** starting iteration: 3; err: [Inf, 0.31647743360380987, 0.23594480115261257, 0.23172365728419447] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31647743360380987, 0.23594480115261257, 0.23172365728419447, 0.23143935106789645] ***
*** finished computation of 3 references, err: [Inf, 0.31647743360380987, 0.23594480115261257, 0.23172365728419447, 0.23143935106789645] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [96, 144, 19]]
** centroid: 1, normalized-entropy: 0.8063650661938255, [(1, 96), (2, 144), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [188, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [109, 109, 2]]
** centroid: 3, normalized-entropy: 0.6723272175707842, [(1, 109), (2, 109), (3, 2)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3076988207665762] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3076988207665762, 0.23812738710639625] ***
*** starting iteration: 2; err: [Inf, 0.3076988207665762, 0.23812738710639625] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3076988207665762, 0.23812738710639625, 0.2321771982254589] ***
*** starting iteration: 3; err: [Inf, 0.3076988207665762, 0.23812738710639625, 0.2321771982254589] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3076988207665762, 0.23812738710639625, 0.2321771982254589, 0.23077077241250882] ***
*** starting iteration: 4; err: [Inf, 0.3076988207665762, 0.23812738710639625, 0.2321771982254589, 0.23077077241250882] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3076988207665762, 0.23812738710639625, 0.2321771982254589, 0.23077077241250882, 0.23016280645795456] ***
*** finished computation of 3 references, err: [Inf, 0.3076988207665762, 0.23812738710639625, 0.2321771982254589, 0.23077077241250882, 0.23016280645795456] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [82, 138, 21]]
** centroid: 1, normalized-entropy: 0.818041068740869, [(1, 82), (2, 138), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [126, 91, 0]]
** centroid: 2, normalized-entropy: 0.9811522341999134, [(1, 126), (2, 91)]
*** center 3: selecting labels [1] (freq >= 2) [from [208, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3459815883693443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3459815883693443, 0.24555534017279276] ***
*** starting iteration: 2; err: [Inf, 0.3459815883693443, 0.24555534017279276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3459815883693443, 0.24555534017279276, 0.22785787662069523] ***
*** starting iteration: 3; err: [Inf, 0.3459815883693443, 0.24555534017279276, 0.22785787662069523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3459815883693443, 0.24555534017279276, 0.22785787662069523, 0.22637621470276026] ***
*** starting iteration: 4; err: [Inf, 0.3459815883693443, 0.24555534017279276, 0.22785787662069523, 0.22637621470276026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3459815883693443, 0.24555534017279276, 0.22785787662069523, 0.22637621470276026, 0.22623819547581084] ***
*** finished computation of 3 references, err: [Inf, 0.3459815883693443, 0.24555534017279276, 0.22785787662069523, 0.22637621470276026, 0.22623819547581084] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [120, 89, 0]]
** centroid: 1, normalized-entropy: 0.9840713482099183, [(1, 120), (2, 89)]
*** center 2: selecting labels [1] (freq >= 2) [from [215, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [62, 161, 20]]
** centroid: 3, normalized-entropy: 0.7525799888649598, [(1, 62), (2, 161), (3, 20)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.34383106973396427] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34383106973396427, 0.24308403368028386] ***
*** starting iteration: 2; err: [Inf, 0.34383106973396427, 0.24308403368028386] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34383106973396427, 0.24308403368028386, 0.2349399513707425] ***
*** starting iteration: 3; err: [Inf, 0.34383106973396427, 0.24308403368028386, 0.2349399513707425] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34383106973396427, 0.24308403368028386, 0.2349399513707425, 0.23339775646303682] ***
*** starting iteration: 4; err: [Inf, 0.34383106973396427, 0.24308403368028386, 0.2349399513707425, 0.23339775646303682] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34383106973396427, 0.24308403368028386, 0.2349399513707425, 0.23339775646303682, 0.23305942400636478] ***
*** finished computation of 3 references, err: [Inf, 0.34383106973396427, 0.24308403368028386, 0.2349399513707425, 0.23339775646303682, 0.23305942400636478] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [67, 164, 21]]
** centroid: 1, normalized-entropy: 0.7635486097871671, [(1, 67), (2, 164), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [120, 89, 0]]
** centroid: 2, normalized-entropy: 0.9840713482099183, [(1, 120), (2, 89)]
*** center 3: selecting labels [1] (freq >= 2) [from [206, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18495760773247047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18495760773247047, 0.15253653524963706] ***
*** starting iteration: 2; err: [Inf, 0.18495760773247047, 0.15253653524963706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18495760773247047, 0.15253653524963706, 0.15054649009030904] ***
*** starting iteration: 3; err: [Inf, 0.18495760773247047, 0.15253653524963706, 0.15054649009030904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18495760773247047, 0.15253653524963706, 0.15054649009030904, 0.1495230966009893] ***
*** starting iteration: 4; err: [Inf, 0.18495760773247047, 0.15253653524963706, 0.15054649009030904, 0.1495230966009893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18495760773247047, 0.15253653524963706, 0.15054649009030904, 0.1495230966009893, 0.14868673408269747] ***
*** finished computation of 7 references, err: [Inf, 0.18495760773247047, 0.15253653524963706, 0.15054649009030904, 0.1495230966009893, 0.14868673408269747] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [67, 20, 0]]
** centroid: 1, normalized-entropy: 0.7778108790853029, [(1, 67), (2, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [117, 13, 0]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(1, 117), (2, 13)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [30, 52, 0]]
** centroid: 4, normalized-entropy: 0.9474351361840305, [(1, 30), (2, 52)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 85, 14]]
** centroid: 5, normalized-entropy: 0.5879303728017198, [(2, 85), (3, 14)]
*** center 6: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 59, 7]]
** centroid: 7, normalized-entropy: 0.48791799258948565, [(2, 59), (3, 7)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.20429606716856472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20429606716856472, 0.16224501285676857] ***
*** starting iteration: 2; err: [Inf, 0.20429606716856472, 0.16224501285676857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20429606716856472, 0.16224501285676857, 0.1568134215697395] ***
*** starting iteration: 3; err: [Inf, 0.20429606716856472, 0.16224501285676857, 0.1568134215697395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20429606716856472, 0.16224501285676857, 0.1568134215697395, 0.15373067002648536] ***
*** starting iteration: 4; err: [Inf, 0.20429606716856472, 0.16224501285676857, 0.1568134215697395, 0.15373067002648536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20429606716856472, 0.16224501285676857, 0.1568134215697395, 0.15373067002648536, 0.1514643206619944] ***
*** starting iteration: 5; err: [Inf, 0.20429606716856472, 0.16224501285676857, 0.1568134215697395, 0.15373067002648536, 0.1514643206619944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20429606716856472, 0.16224501285676857, 0.1568134215697395, 0.15373067002648536, 0.1514643206619944, 0.14992945789564763] ***
*** starting iteration: 6; err: [Inf, 0.20429606716856472, 0.16224501285676857, 0.1568134215697395, 0.15373067002648536, 0.1514643206619944, 0.14992945789564763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20429606716856472, 0.16224501285676857, 0.1568134215697395, 0.15373067002648536, 0.1514643206619944, 0.14992945789564763, 0.1486862518292652] ***
*** starting iteration: 7; err: [Inf, 0.20429606716856472, 0.16224501285676857, 0.1568134215697395, 0.15373067002648536, 0.1514643206619944, 0.14992945789564763, 0.1486862518292652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20429606716856472, 0.16224501285676857, 0.1568134215697395, 0.15373067002648536, 0.1514643206619944, 0.14992945789564763, 0.1486862518292652, 0.14778988701298365] ***
*** finished computation of 7 references, err: [Inf, 0.20429606716856472, 0.16224501285676857, 0.1568134215697395, 0.15373067002648536, 0.1514643206619944, 0.14992945789564763, 0.1486862518292652, 0.14778988701298365] ***
*** center 1: selecting labels [1] (freq >= 2) [from [62, 1, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [89, 6, 0]]
** centroid: 2, normalized-entropy: 0.3398550782221443, [(1, 89), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [61, 49, 0]]
** centroid: 3, normalized-entropy: 0.9913982594066482, [(1, 61), (2, 49)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [17, 86, 0]]
** centroid: 4, normalized-entropy: 0.646251622274129, [(1, 17), (2, 86)]
*** center 5: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 108, 20]]
** centroid: 7, normalized-entropy: 0.625262405223423, [(2, 108), (3, 20)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2169179606497165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2169179606497165, 0.15723211345970742] ***
*** starting iteration: 2; err: [Inf, 0.2169179606497165, 0.15723211345970742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2169179606497165, 0.15723211345970742, 0.1498304278208599] ***
*** starting iteration: 3; err: [Inf, 0.2169179606497165, 0.15723211345970742, 0.1498304278208599] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2169179606497165, 0.15723211345970742, 0.1498304278208599, 0.147572648825998] ***
*** starting iteration: 4; err: [Inf, 0.2169179606497165, 0.15723211345970742, 0.1498304278208599, 0.147572648825998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2169179606497165, 0.15723211345970742, 0.1498304278208599, 0.147572648825998, 0.14671970371609327] ***
*** finished computation of 7 references, err: [Inf, 0.2169179606497165, 0.15723211345970742, 0.1498304278208599, 0.147572648825998, 0.14671970371609327] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [68, 17, 0]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(1, 68), (2, 17)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 67, 18]]
** centroid: 2, normalized-entropy: 0.7448423974714387, [(2, 67), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [96, 37, 0]]
** centroid: 3, normalized-entropy: 0.8529803708583165, [(1, 96), (2, 37)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 59, 0]]
** centroid: 4, normalized-entropy: 0.984646826868755, [(1, 44), (2, 59)]
*** center 5: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 73, 3]]
** centroid: 7, normalized-entropy: 0.23987382528036535, [(2, 73), (3, 3)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2386411490595645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2386411490595645, 0.20852300927585535] ***
*** starting iteration: 2; err: [Inf, 0.2386411490595645, 0.20852300927585535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2386411490595645, 0.20852300927585535, 0.20096383295958867] ***
*** starting iteration: 3; err: [Inf, 0.2386411490595645, 0.20852300927585535, 0.20096383295958867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2386411490595645, 0.20852300927585535, 0.20096383295958867, 0.1986675916418612] ***
*** finished computation of 7 references, err: [Inf, 0.2386411490595645, 0.20852300927585535, 0.20096383295958867, 0.1986675916418612] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [88, 2, 0]]
** centroid: 1, normalized-entropy: 0.1537421803287618, [(1, 88), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [97, 53, 0]]
** centroid: 2, normalized-entropy: 0.9370098252692078, [(1, 97), (2, 53)]
*** center 3: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 106, 21]]
** centroid: 4, normalized-entropy: 0.646966308330803, [(2, 106), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [29, 67, 0]]
** centroid: 5, normalized-entropy: 0.8838226609360483, [(1, 29), (2, 67)]
*** center 6: selecting labels [1] (freq >= 2) [from [44, 1, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29279040925643185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29279040925643185, 0.2123742056452017] ***
*** starting iteration: 2; err: [Inf, 0.29279040925643185, 0.2123742056452017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29279040925643185, 0.2123742056452017, 0.20127679175533902] ***
*** starting iteration: 3; err: [Inf, 0.29279040925643185, 0.2123742056452017, 0.20127679175533902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29279040925643185, 0.2123742056452017, 0.20127679175533902, 0.19956826114247941] ***
*** finished computation of 7 references, err: [Inf, 0.29279040925643185, 0.2123742056452017, 0.20127679175533902, 0.19956826114247941] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [1, 73, 3]]
** centroid: 1, normalized-entropy: 0.23987382528036535, [(2, 73), (3, 3)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [15, 57, 0]]
** centroid: 2, normalized-entropy: 0.7382848661434506, [(1, 15), (2, 57)]
*** center 3: selecting labels [1] (freq >= 2) [from [97, 1, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [154, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 59, 17]]
** centroid: 5, normalized-entropy: 0.7668379316856329, [(2, 59), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [38, 57, 0]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(1, 38), (2, 57)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [92, 3, 0]]
** centroid: 7, normalized-entropy: 0.2022494245476988, [(1, 92), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26403698196978137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26403698196978137, 0.2056528360162606] ***
*** starting iteration: 2; err: [Inf, 0.26403698196978137, 0.2056528360162606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26403698196978137, 0.2056528360162606, 0.19545372886195042] ***
*** starting iteration: 3; err: [Inf, 0.26403698196978137, 0.2056528360162606, 0.19545372886195042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26403698196978137, 0.2056528360162606, 0.19545372886195042, 0.19255440086098402] ***
*** finished computation of 7 references, err: [Inf, 0.26403698196978137, 0.2056528360162606, 0.19545372886195042, 0.19255440086098402] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [96, 31, 0]]
** centroid: 1, normalized-entropy: 0.801783224636543, [(1, 96), (2, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [25, 81, 0]]
** centroid: 3, normalized-entropy: 0.7880689925063812, [(1, 25), (2, 81)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [51, 39, 0]]
** centroid: 4, normalized-entropy: 0.9871377743721862, [(1, 51), (2, 39)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [74, 3, 0]]
** centroid: 5, normalized-entropy: 0.23750814382859295, [(1, 74), (2, 3)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 99, 21]]
** centroid: 6, normalized-entropy: 0.6690158350565576, [(2, 99), (3, 21)]
*** center 7: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29486499850389297] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29486499850389297, 0.23610876901662564] ***
*** finished computation of 3 references, err: [Inf, 0.29486499850389297, 0.23610876901662564] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [163, 24, 0]]
** centroid: 1, normalized-entropy: 0.5528741970161213, [(1, 163), (2, 24)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 156, 21]]
** centroid: 2, normalized-entropy: 0.5254506799086205, [(2, 156), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [253, 49, 0]]
** centroid: 3, normalized-entropy: 0.639669120916782, [(1, 253), (2, 49)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2917317486461671] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2917317486461671, 0.26923333558029144] ***
*** finished computation of 3 references, err: [Inf, 0.2917317486461671, 0.26923333558029144] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [81, 132, 20]]
** centroid: 1, normalized-entropy: 0.8192038923764607, [(1, 81), (2, 132), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [76, 40, 0]]
** centroid: 2, normalized-entropy: 0.9293636260137188, [(1, 76), (2, 40)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [240, 78, 0]]
** centroid: 3, normalized-entropy: 0.8037159237834126, [(1, 240), (2, 78)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.39167092054959446] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39167092054959446, 0.24018123316560416] ***
*** finished computation of 3 references, err: [Inf, 0.39167092054959446, 0.24018123316560416] ***
*** center 1: selecting labels [1] (freq >= 1) [from [184, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [141, 129, 8]]
** centroid: 2, normalized-entropy: 0.7306542416614666, [(1, 141), (2, 129), (3, 8)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [68, 124, 13]]
** centroid: 3, normalized-entropy: 0.7691799686914909, [(1, 68), (2, 124), (3, 13)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23458636120974166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23458636120974166, 0.18127948850744288] ***
*** finished computation of 7 references, err: [Inf, 0.23458636120974166, 0.18127948850744288] ***
*** center 1: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 92, 21]]
** centroid: 3, normalized-entropy: 0.6926889992682925, [(2, 92), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [28, 91, 0]]
** centroid: 5, normalized-entropy: 0.787126586201269, [(1, 28), (2, 91)]
*** center 6: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [33, 46, 0]]
** centroid: 7, normalized-entropy: 0.980377508715691, [(1, 33), (2, 46)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20626845866765664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20626845866765664, 0.17154681685099984] ***
*** finished computation of 7 references, err: [Inf, 0.20626845866765664, 0.17154681685099984] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 35, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [60, 75, 0]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(1, 60), (2, 75)]
*** center 3: selecting labels [1] (freq >= 2) [from [184, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [68, 39, 0]]
** centroid: 4, normalized-entropy: 0.9463439981707659, [(1, 68), (2, 39)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [21, 45, 0]]
** centroid: 5, normalized-entropy: 0.9023932827949788, [(1, 21), (2, 45)]
*** center 6: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 56, 20]]
** centroid: 7, normalized-entropy: 0.8314743880097292, [(2, 56), (3, 20)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18759375480401597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18759375480401597, 0.1649076243209048] ***
*** finished computation of 7 references, err: [Inf, 0.18759375480401597, 0.1649076243209048] ***
*** center 1: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [6, 100, 0]]
** centroid: 3, normalized-entropy: 0.3138129641688652, [(1, 6), (2, 100)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 58, 21]]
** centroid: 4, normalized-entropy: 0.8354065254460503, [(2, 58), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [28, 42, 0]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(1, 28), (2, 42)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [32, 38, 0]]
** centroid: 6, normalized-entropy: 0.9946937953613056, [(1, 32), (2, 38)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [133, 15, 0]]
** centroid: 7, normalized-entropy: 0.4732646976844498, [(1, 133), (2, 15)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.332718763203995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.332718763203995, 0.2898284878453111] ***
*** finished computation of 3 references, err: [Inf, 0.332718763203995, 0.2898284878453111] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [168, 35, 0]]
** centroid: 1, normalized-entropy: 0.6631968402398286, [(1, 168), (2, 35)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [2, 191, 21]]
** centroid: 2, normalized-entropy: 0.33948255358873947, [(1, 2), (2, 191), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [246, 3, 0]]
** centroid: 3, normalized-entropy: 0.09408443883267342, [(1, 246), (2, 3)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.529621653519906] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.529621653519906, 0.32938706264391293] ***
*** finished computation of 3 references, err: [Inf, 0.529621653519906, 0.32938706264391293] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [91, 154, 20]]
** centroid: 1, normalized-entropy: 0.7987257933848829, [(1, 91), (2, 154), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [136, 96, 0]]
** centroid: 2, normalized-entropy: 0.9784493292686188, [(1, 136), (2, 96)]
*** center 3: selecting labels [1] (freq >= 2) [from [170, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4255766378997684] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4255766378997684, 0.2996134355963058] ***
*** finished computation of 3 references, err: [Inf, 0.4255766378997684, 0.2996134355963058] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [98, 126, 21]]
** centroid: 1, normalized-entropy: 0.8365839955208766, [(1, 98), (2, 126), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [167, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [128, 127, 0]]
** centroid: 3, normalized-entropy: 0.9999889065840931, [(1, 128), (2, 127)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5141533302931903] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5141533302931903, 0.31742629932390676] ***
*** finished computation of 3 references, err: [Inf, 0.5141533302931903, 0.31742629932390676] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [186, 68, 0]]
** centroid: 1, normalized-entropy: 0.8381688912165873, [(1, 186), (2, 68)]
*** center 2: selecting labels [1] (freq >= 2) [from [141, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [89, 161, 21]]
** centroid: 3, normalized-entropy: 0.7948453771098701, [(1, 89), (2, 161), (3, 21)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.46058730088380995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46058730088380995, 0.30078809321306454] ***
*** finished computation of 3 references, err: [Inf, 0.46058730088380995, 0.30078809321306454] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [75, 143, 19]]
** centroid: 1, normalized-entropy: 0.7930508123108505, [(1, 75), (2, 143), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [264, 4, 0]]
** centroid: 2, normalized-entropy: 0.11190990870168394, [(1, 264), (2, 4)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [58, 103, 1]]
** centroid: 3, normalized-entropy: 0.9428892258334326, [(1, 58), (2, 103)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37268475770414144] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37268475770414144, 0.3329655827355405] ***
*** finished computation of 3 references, err: [Inf, 0.37268475770414144, 0.3329655827355405] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [102, 176, 21]]
** centroid: 1, normalized-entropy: 0.7876925541047207, [(1, 102), (2, 176), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [137, 77, 0]]
** centroid: 2, normalized-entropy: 0.9425279256576911, [(1, 137), (2, 77)]
*** center 3: selecting labels [1] (freq >= 2) [from [154, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 15)
[0.9520298741855627, 0.9350098601595608, 0.9270138401874929, 0.9110038181894469, 0.8990277702852554, 0.8939838041634448, 0.8809977642312972, 0.8799727871584159, 0.8749977522432612, 0.8630336923750098, 0.861061660462858, 0.8490166813520107, 0.84396672121223, 0.7830105554656454, 0.7769655883428338]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9520298741855627
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.38694515950172337] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38694515950172337, 0.2951310180720535] ***
*** finished computation of 3 references, err: [Inf, 0.38694515950172337, 0.2951310180720535] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [102, 159, 21]]
** centroid: 1, normalized-entropy: 0.8049478776806231, [(1, 102), (2, 159), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [194, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [120, 70, 0]]
** centroid: 3, normalized-entropy: 0.9494520153879484, [(1, 120), (2, 70)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4360711002691664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4360711002691664, 0.2997546836571849] ***
*** finished computation of 3 references, err: [Inf, 0.4360711002691664, 0.2997546836571849] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [241, 43, 0]]
** centroid: 1, normalized-entropy: 0.613353758646897, [(1, 241), (2, 43)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [156, 46, 0]]
** centroid: 2, normalized-entropy: 0.7740204128451942, [(1, 156), (2, 46)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 161, 20]]
** centroid: 3, normalized-entropy: 0.5014139573914894, [(2, 161), (3, 20)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4367543648051536] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4367543648051536, 0.31072946494609965] ***
*** finished computation of 3 references, err: [Inf, 0.4367543648051536, 0.31072946494609965] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [278, 36, 0]]
** centroid: 1, normalized-entropy: 0.5137834295634159, [(1, 278), (2, 36)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 160, 21]]
** centroid: 2, normalized-entropy: 0.517817372937725, [(2, 160), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [115, 57, 0]]
** centroid: 3, normalized-entropy: 0.9163456461788803, [(1, 115), (2, 57)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 16)
[0.9520298741855627, 0.9350098601595608, 0.9270138401874929, 0.9110038181894469, 0.8990277702852554, 0.8939838041634448, 0.8809977642312972, 0.8799727871584159, 0.8749977522432612, 0.8630336923750098, 0.861061660462858, 0.8580616544688401, 0.8490166813520107, 0.84396672121223, 0.7830105554656454, 0.7769655883428338]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9520298741855627
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.24362630757164802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24362630757164802, 0.1910606797353865] ***
*** starting iteration: 2; err: [Inf, 0.24362630757164802, 0.1910606797353865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24362630757164802, 0.1910606797353865, 0.18540944217063776] ***
*** starting iteration: 3; err: [Inf, 0.24362630757164802, 0.1910606797353865, 0.18540944217063776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24362630757164802, 0.1910606797353865, 0.18540944217063776, 0.18468377576279524] ***
*** finished computation of 7 references, err: [Inf, 0.24362630757164802, 0.1910606797353865, 0.18540944217063776, 0.18468377576279524] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [54, 23, 0]]
** centroid: 1, normalized-entropy: 0.8796975782775168, [(1, 54), (2, 23)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 91, 21]]
** centroid: 2, normalized-entropy: 0.6962122601251459, [(2, 91), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [97, 9, 0]]
** centroid: 3, normalized-entropy: 0.41923299508081985, [(1, 97), (2, 9)]
*** center 4: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [79, 15, 0]]
** centroid: 5, normalized-entropy: 0.6332905746550958, [(1, 79), (2, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 91, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24865267545297587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24865267545297587, 0.20950174231027746] ***
*** starting iteration: 2; err: [Inf, 0.24865267545297587, 0.20950174231027746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24865267545297587, 0.20950174231027746, 0.20292279796571522] ***
*** starting iteration: 3; err: [Inf, 0.24865267545297587, 0.20950174231027746, 0.20292279796571522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24865267545297587, 0.20950174231027746, 0.20292279796571522, 0.19548880827586645] ***
*** finished computation of 7 references, err: [Inf, 0.24865267545297587, 0.20950174231027746, 0.20292279796571522, 0.19548880827586645] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [17, 72, 0]]
** centroid: 1, normalized-entropy: 0.7035821005719904, [(1, 17), (2, 72)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [100, 31, 0]]
** centroid: 2, normalized-entropy: 0.7894099893277894, [(1, 100), (2, 31)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 63, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [155, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [57, 35, 0]]
** centroid: 6, normalized-entropy: 0.9583485169215336, [(1, 57), (2, 35)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 49, 20]]
** centroid: 7, normalized-entropy: 0.868533960265235, [(2, 49), (3, 20)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28555037659120636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28555037659120636, 0.22247699211802574] ***
*** starting iteration: 2; err: [Inf, 0.28555037659120636, 0.22247699211802574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28555037659120636, 0.22247699211802574, 0.20537356166881154] ***
*** starting iteration: 3; err: [Inf, 0.28555037659120636, 0.22247699211802574, 0.20537356166881154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28555037659120636, 0.22247699211802574, 0.20537356166881154, 0.19910739342482395] ***
*** finished computation of 7 references, err: [Inf, 0.28555037659120636, 0.22247699211802574, 0.20537356166881154, 0.19910739342482395] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 94, 21]]
** centroid: 1, normalized-entropy: 0.685750764543924, [(2, 94), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [23, 96, 0]]
** centroid: 3, normalized-entropy: 0.7082772165975041, [(1, 23), (2, 96)]
*** center 4: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [41, 63, 0]]
** centroid: 7, normalized-entropy: 0.9674756088157442, [(1, 41), (2, 63)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20786493372692316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20786493372692316, 0.1647247439173439] ***
*** starting iteration: 2; err: [Inf, 0.20786493372692316, 0.1647247439173439] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20786493372692316, 0.1647247439173439, 0.15236046103559234] ***
*** starting iteration: 3; err: [Inf, 0.20786493372692316, 0.1647247439173439, 0.15236046103559234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20786493372692316, 0.1647247439173439, 0.15236046103559234, 0.14842162746166973] ***
*** finished computation of 7 references, err: [Inf, 0.20786493372692316, 0.1647247439173439, 0.15236046103559234, 0.14842162746166973] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [19, 64, 0]]
** centroid: 1, normalized-entropy: 0.776116265618875, [(1, 19), (2, 64)]
*** center 2: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [134, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [58, 14, 0]]
** centroid: 4, normalized-entropy: 0.710676853856123, [(1, 58), (2, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [35, 71, 0]]
** centroid: 5, normalized-entropy: 0.9151190292999326, [(1, 35), (2, 71)]
*** center 6: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 80, 21]]
** centroid: 7, normalized-entropy: 0.7374895672137457, [(2, 80), (3, 21)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21453830721540965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21453830721540965, 0.16095782126575106] ***
*** starting iteration: 2; err: [Inf, 0.21453830721540965, 0.16095782126575106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21453830721540965, 0.16095782126575106, 0.15490345537087935] ***
*** starting iteration: 3; err: [Inf, 0.21453830721540965, 0.16095782126575106, 0.15490345537087935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21453830721540965, 0.16095782126575106, 0.15490345537087935, 0.15258733524397752] ***
*** finished computation of 7 references, err: [Inf, 0.21453830721540965, 0.16095782126575106, 0.15490345537087935, 0.15258733524397752] ***
*** center 1: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 73, 20]]
** centroid: 2, normalized-entropy: 0.7510324165275097, [(2, 73), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [24, 45, 0]]
** centroid: 3, normalized-entropy: 0.9321115676166747, [(1, 24), (2, 45)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [2, 85, 0]]
** centroid: 4, normalized-entropy: 0.15790637433488164, [(1, 2), (2, 85)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [103, 47, 0]]
** centroid: 5, normalized-entropy: 0.8969838216377446, [(1, 103), (2, 47)]
*** center 6: selecting labels [1] (freq >= 2) [from [45, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [113, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17757099573786694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17757099573786694, 0.15863144477847488] ***
*** starting iteration: 2; err: [Inf, 0.17757099573786694, 0.15863144477847488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17757099573786694, 0.15863144477847488, 0.15453801832316832] ***
*** starting iteration: 3; err: [Inf, 0.17757099573786694, 0.15863144477847488, 0.15453801832316832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17757099573786694, 0.15863144477847488, 0.15453801832316832, 0.15267575077427695] ***
*** finished computation of 7 references, err: [Inf, 0.17757099573786694, 0.15863144477847488, 0.15453801832316832, 0.15267575077427695] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [23, 57, 0]]
** centroid: 2, normalized-entropy: 0.8654698974285927, [(1, 23), (2, 57)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [96, 35, 0]]
** centroid: 3, normalized-entropy: 0.8373825002984822, [(1, 96), (2, 35)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 86, 21]]
** centroid: 4, normalized-entropy: 0.7143881566559658, [(2, 86), (3, 21)]
*** center 5: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [32, 75, 0]]
** centroid: 6, normalized-entropy: 0.880145474371324, [(1, 32), (2, 75)]
*** center 7: selecting labels [1] (freq >= 2) [from [123, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 18)
[0.9520298741855627, 0.9430118741495987, 0.9350098601595608, 0.9270138401874929, 0.91901482320644, 0.9110038181894469, 0.8990277702852554, 0.8939838041634448, 0.8809977642312972, 0.8799727871584159, 0.8749977522432612, 0.8630336923750098, 0.861061660462858, 0.8580616544688401, 0.8490166813520107, 0.84396672121223, 0.7830105554656454, 0.7769655883428338]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9520298741855627
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.3698837040076116] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3698837040076116, 0.31181679468590756] ***
*** starting iteration: 2; err: [Inf, 0.3698837040076116, 0.31181679468590756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3698837040076116, 0.31181679468590756, 0.2984823144429752] ***
*** starting iteration: 3; err: [Inf, 0.3698837040076116, 0.31181679468590756, 0.2984823144429752] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3698837040076116, 0.31181679468590756, 0.2984823144429752, 0.2939029005202311] ***
*** finished computation of 3 references, err: [Inf, 0.3698837040076116, 0.31181679468590756, 0.2984823144429752, 0.2939029005202311] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 178, 21]]
** centroid: 1, normalized-entropy: 0.4862767984814741, [(2, 178), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [247, 27, 0]]
** centroid: 2, normalized-entropy: 0.4643508101144354, [(1, 247), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [169, 24, 0]]
** centroid: 3, normalized-entropy: 0.5417434375323452, [(1, 169), (2, 24)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5000526580102239] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5000526580102239, 0.30635457233465774] ***
*** starting iteration: 2; err: [Inf, 0.5000526580102239, 0.30635457233465774] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5000526580102239, 0.30635457233465774, 0.29324397021977716] ***
*** starting iteration: 3; err: [Inf, 0.5000526580102239, 0.30635457233465774, 0.29324397021977716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5000526580102239, 0.30635457233465774, 0.29324397021977716, 0.29106603257673636] ***
*** finished computation of 3 references, err: [Inf, 0.5000526580102239, 0.30635457233465774, 0.29324397021977716, 0.29106603257673636] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [90, 136, 20]]
** centroid: 1, normalized-entropy: 0.8188193039388719, [(1, 90), (2, 136), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [198, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [109, 114, 0]]
** centroid: 3, normalized-entropy: 0.9996373303442264, [(1, 109), (2, 114)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36478849704275423] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36478849704275423, 0.3010194314304443] ***
*** starting iteration: 2; err: [Inf, 0.36478849704275423, 0.3010194314304443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36478849704275423, 0.3010194314304443, 0.2969453732316931] ***
*** starting iteration: 3; err: [Inf, 0.36478849704275423, 0.3010194314304443, 0.2969453732316931] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36478849704275423, 0.3010194314304443, 0.2969453732316931, 0.29534130867199226] ***
*** finished computation of 3 references, err: [Inf, 0.36478849704275423, 0.3010194314304443, 0.2969453732316931, 0.29534130867199226] ***
*** center 1: selecting labels [1] (freq >= 2) [from [199, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [78, 166, 21]]
** centroid: 2, normalized-entropy: 0.7772418421367069, [(1, 78), (2, 166), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [116, 87, 0]]
** centroid: 3, normalized-entropy: 0.9852281360342514, [(1, 116), (2, 87)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 19)
[0.9520298741855627, 0.9430118741495987, 0.9350098601595608, 0.9270138401874929, 0.91901482320644, 0.9110038181894469, 0.8990277702852554, 0.8939838041634448, 0.8910347473221725, 0.8809977642312972, 0.8799727871584159, 0.8749977522432612, 0.8630336923750098, 0.861061660462858, 0.8580616544688401, 0.8490166813520107, 0.84396672121223, 0.7830105554656454, 0.7769655883428338]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9520298741855627
finished with 19
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 19)
[0.9520298741855627, 0.9430118741495987, 0.9350098601595608, 0.9270138401874929, 0.91901482320644, 0.9110038181894469, 0.8990277702852554, 0.8939838041634448, 0.8910347473221725, 0.8809977642312972, 0.8799727871584159, 0.8749977522432612, 0.8630336923750098, 0.861061660462858, 0.8580616544688401, 0.8490166813520107, 0.84396672121223, 0.7830105554656454, 0.7769655883428338]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9520298741855627
finished with 21
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.3428874030382744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3428874030382744, 0.30086606256971443] ***
*** starting iteration: 2; err: [Inf, 0.3428874030382744, 0.30086606256971443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3428874030382744, 0.30086606256971443, 0.2980519172738309] ***
*** starting iteration: 3; err: [Inf, 0.3428874030382744, 0.30086606256971443, 0.2980519172738309] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3428874030382744, 0.30086606256971443, 0.2980519172738309, 0.2969058939359254] ***
*** starting iteration: 4; err: [Inf, 0.3428874030382744, 0.30086606256971443, 0.2980519172738309, 0.2969058939359254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3428874030382744, 0.30086606256971443, 0.2980519172738309, 0.2969058939359254, 0.29644752034145566] ***
*** finished computation of 3 references, err: [Inf, 0.3428874030382744, 0.30086606256971443, 0.2980519172738309, 0.2969058939359254, 0.29644752034145566] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [161, 56, 0]]
** centroid: 1, normalized-entropy: 0.8238116333123173, [(1, 161), (2, 56)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [10, 171, 21]]
** centroid: 2, normalized-entropy: 0.47803233803438905, [(1, 10), (2, 171), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [245, 2, 0]]
** centroid: 3, normalized-entropy: 0.06789640139994182, [(1, 245), (2, 2)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.42850118555474853] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42850118555474853, 0.3013505594863527] ***
*** starting iteration: 2; err: [Inf, 0.42850118555474853, 0.3013505594863527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42850118555474853, 0.3013505594863527, 0.2943635289913331] ***
*** starting iteration: 3; err: [Inf, 0.42850118555474853, 0.3013505594863527, 0.2943635289913331] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42850118555474853, 0.3013505594863527, 0.2943635289913331, 0.2923379715523687] ***
*** starting iteration: 4; err: [Inf, 0.42850118555474853, 0.3013505594863527, 0.2943635289913331, 0.2923379715523687] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42850118555474853, 0.3013505594863527, 0.2943635289913331, 0.2923379715523687, 0.2911498687010834] ***
*** starting iteration: 5; err: [Inf, 0.42850118555474853, 0.3013505594863527, 0.2943635289913331, 0.2923379715523687, 0.2911498687010834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42850118555474853, 0.3013505594863527, 0.2943635289913331, 0.2923379715523687, 0.2911498687010834, 0.29053912443043234] ***
*** finished computation of 3 references, err: [Inf, 0.42850118555474853, 0.3013505594863527, 0.2943635289913331, 0.2923379715523687, 0.2911498687010834, 0.29053912443043234] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [103, 114, 0]]
** centroid: 1, normalized-entropy: 0.9981456291511519, [(1, 103), (2, 114)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [93, 136, 20]]
** centroid: 2, normalized-entropy: 0.8198671245389517, [(1, 93), (2, 136), (3, 20)]
*** center 3: selecting labels [1] (freq >= 1) [from [201, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3254011658270253] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3254011658270253, 0.29893889676254504] ***
*** starting iteration: 2; err: [Inf, 0.3254011658270253, 0.29893889676254504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3254011658270253, 0.29893889676254504, 0.29745053889081885] ***
*** starting iteration: 3; err: [Inf, 0.3254011658270253, 0.29893889676254504, 0.29745053889081885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3254011658270253, 0.29893889676254504, 0.29745053889081885, 0.2972772003275746] ***
*** finished computation of 3 references, err: [Inf, 0.3254011658270253, 0.29893889676254504, 0.29745053889081885, 0.2972772003275746] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [149, 48, 0]]
** centroid: 1, normalized-entropy: 0.8010654763930384, [(1, 149), (2, 48)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [240, 4, 0]]
** centroid: 2, normalized-entropy: 0.12068101401352371, [(1, 240), (2, 4)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [4, 201, 21]]
** centroid: 3, normalized-entropy: 0.36085940628449437, [(1, 4), (2, 201), (3, 21)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5595953426486043] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5595953426486043, 0.26269436419407305] ***
*** starting iteration: 2; err: [Inf, 0.5595953426486043, 0.26269436419407305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5595953426486043, 0.26269436419407305, 0.2411450618044571] ***
*** starting iteration: 3; err: [Inf, 0.5595953426486043, 0.26269436419407305, 0.2411450618044571] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5595953426486043, 0.26269436419407305, 0.2411450618044571, 0.23576367487599542] ***
*** starting iteration: 4; err: [Inf, 0.5595953426486043, 0.26269436419407305, 0.2411450618044571, 0.23576367487599542] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5595953426486043, 0.26269436419407305, 0.2411450618044571, 0.23576367487599542, 0.2346732325141539] ***
*** starting iteration: 5; err: [Inf, 0.5595953426486043, 0.26269436419407305, 0.2411450618044571, 0.23576367487599542, 0.2346732325141539] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5595953426486043, 0.26269436419407305, 0.2411450618044571, 0.23576367487599542, 0.2346732325141539, 0.23439311084838155] ***
*** finished computation of 3 references, err: [Inf, 0.5595953426486043, 0.26269436419407305, 0.2411450618044571, 0.23576367487599542, 0.2346732325141539, 0.23439311084838155] ***
*** center 1: selecting labels [1] (freq >= 1) [from [216, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [96, 122, 11]]
** centroid: 2, normalized-entropy: 0.7698377950276661, [(1, 96), (2, 122), (3, 11)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [104, 107, 10]]
** centroid: 3, normalized-entropy: 0.7700325962215148, [(1, 104), (2, 107), (3, 10)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41098961611159673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41098961611159673, 0.25128826451406855] ***
*** starting iteration: 2; err: [Inf, 0.41098961611159673, 0.25128826451406855] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41098961611159673, 0.25128826451406855, 0.23493850759385543] ***
*** starting iteration: 3; err: [Inf, 0.41098961611159673, 0.25128826451406855, 0.23493850759385543] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41098961611159673, 0.25128826451406855, 0.23493850759385543, 0.23230151632365056] ***
*** starting iteration: 4; err: [Inf, 0.41098961611159673, 0.25128826451406855, 0.23493850759385543, 0.23230151632365056] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41098961611159673, 0.25128826451406855, 0.23493850759385543, 0.23230151632365056, 0.23147018952783885] ***
*** finished computation of 3 references, err: [Inf, 0.41098961611159673, 0.25128826451406855, 0.23493850759385543, 0.23230151632365056, 0.23147018952783885] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [70, 165, 20]]
** centroid: 1, normalized-entropy: 0.761145212533379, [(1, 70), (2, 165), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [220, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [107, 85, 0]]
** centroid: 3, normalized-entropy: 0.9905083490720552, [(1, 107), (2, 85)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.30746677841968845] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30746677841968845, 0.23436972238346823] ***
*** starting iteration: 2; err: [Inf, 0.30746677841968845, 0.23436972238346823] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30746677841968845, 0.23436972238346823, 0.23366828562448855] ***
*** finished computation of 3 references, err: [Inf, 0.30746677841968845, 0.23436972238346823, 0.23366828562448855] ***
*** center 1: selecting labels [1] (freq >= 1) [from [220, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [124, 69, 0]]
** centroid: 2, normalized-entropy: 0.9405993688449394, [(1, 124), (2, 69)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [49, 184, 21]]
** centroid: 3, normalized-entropy: 0.6891319360667199, [(1, 49), (2, 184), (3, 21)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 21)
[0.9520298741855627, 0.9430118741495987, 0.9350098601595608, 0.9270138401874929, 0.91901482320644, 0.9110038181894469, 0.9100028171884459, 0.8990277702852554, 0.8960127792463122, 0.8939838041634448, 0.8910347473221725, 0.8809977642312972, 0.8799727871584159, 0.8749977522432612, 0.8630336923750098, 0.861061660462858, 0.8580616544688401, 0.8490166813520107, 0.84396672121223, 0.7830105554656454, 0.7769655883428338]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9520298741855627
finished with 21
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 21)
[0.9520298741855627, 0.9430118741495987, 0.9350098601595608, 0.9270138401874929, 0.91901482320644, 0.9110038181894469, 0.9100028171884459, 0.8990277702852554, 0.8960127792463122, 0.8939838041634448, 0.8910347473221725, 0.8809977642312972, 0.8799727871584159, 0.8749977522432612, 0.8630336923750098, 0.861061660462858, 0.8580616544688401, 0.8490166813520107, 0.84396672121223, 0.7830105554656454, 0.7769655883428338]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9520298741855627
finished with 22
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.36717632618192975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36717632618192975, 0.22896205022086477] ***
*** finished computation of 3 references, err: [Inf, 0.36717632618192975, 0.22896205022086477] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [281, 12, 0]]
** centroid: 1, normalized-entropy: 0.2466566974572852, [(1, 281), (2, 12)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 163, 21]]
** centroid: 2, normalized-entropy: 0.5122502440025584, [(2, 163), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [135, 54, 0]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(1, 135), (2, 54)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35425712621730304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35425712621730304, 0.22789336753397554] ***
*** finished computation of 3 references, err: [Inf, 0.35425712621730304, 0.22789336753397554] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [76, 178, 20]]
** centroid: 1, normalized-entropy: 0.7527387721150623, [(1, 76), (2, 178), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [205, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [116, 72, 0]]
** centroid: 3, normalized-entropy: 0.9601186626422924, [(1, 116), (2, 72)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35902765073228454] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35902765073228454, 0.2422026777786595] ***
*** finished computation of 3 references, err: [Inf, 0.35902765073228454, 0.2422026777786595] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [267, 38, 0]]
** centroid: 1, normalized-entropy: 0.5424127791012874, [(1, 267), (2, 38)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [126, 45, 0]]
** centroid: 2, normalized-entropy: 0.8314743880097292, [(1, 126), (2, 45)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 170, 21]]
** centroid: 3, normalized-entropy: 0.49975801640348033, [(2, 170), (3, 21)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 22)
[0.9520298741855627, 0.9430118741495987, 0.9350098601595608, 0.9270138401874929, 0.91901482320644, 0.9110038181894469, 0.9100028171884459, 0.8990277702852554, 0.8960127792463122, 0.8939838041634448, 0.8910347473221725, 0.8809977642312972, 0.8799727871584159, 0.8749977522432612, 0.8749468030905155, 0.8630336923750098, 0.861061660462858, 0.8580616544688401, 0.8490166813520107, 0.84396672121223, 0.7830105554656454, 0.7769655883428338]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9520298741855627
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.19622588888555764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19622588888555764, 0.15825932365847983] ***
*** starting iteration: 2; err: [Inf, 0.19622588888555764, 0.15825932365847983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19622588888555764, 0.15825932365847983, 0.1509779121093452] ***
*** starting iteration: 3; err: [Inf, 0.19622588888555764, 0.15825932365847983, 0.1509779121093452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19622588888555764, 0.15825932365847983, 0.1509779121093452, 0.14884228406101466] ***
*** starting iteration: 4; err: [Inf, 0.19622588888555764, 0.15825932365847983, 0.1509779121093452, 0.14884228406101466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19622588888555764, 0.15825932365847983, 0.1509779121093452, 0.14884228406101466, 0.14792895946558565] ***
*** finished computation of 7 references, err: [Inf, 0.19622588888555764, 0.15825932365847983, 0.1509779121093452, 0.14884228406101466, 0.14792895946558565] ***
*** center 1: selecting labels [1] (freq >= 1) [from [174, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 79, 31]]
** centroid: 2, normalized-entropy: 0.8579163978157118, [(2, 79), (3, 31)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [103, 22, 0]]
** centroid: 3, normalized-entropy: 0.6712478853829507, [(1, 103), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [143, 14, 0]]
** centroid: 4, normalized-entropy: 0.4336999204322885, [(1, 143), (2, 14)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [30, 110, 0]]
** centroid: 5, normalized-entropy: 0.7495952572594798, [(1, 30), (2, 110)]
*** center 6: selecting labels [1] (freq >= 1) [from [141, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [12, 141, 0]]
** centroid: 7, normalized-entropy: 0.3966277727783787, [(1, 12), (2, 141)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19086085111275317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19086085111275317, 0.15473256522975862] ***
*** starting iteration: 2; err: [Inf, 0.19086085111275317, 0.15473256522975862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19086085111275317, 0.15473256522975862, 0.15057196301477963] ***
*** starting iteration: 3; err: [Inf, 0.19086085111275317, 0.15473256522975862, 0.15057196301477963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19086085111275317, 0.15473256522975862, 0.15057196301477963, 0.14980894920416177] ***
*** finished computation of 7 references, err: [Inf, 0.19086085111275317, 0.15473256522975862, 0.15057196301477963, 0.14980894920416177] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [40, 55, 0]]
** centroid: 1, normalized-entropy: 0.9819407868640977, [(1, 40), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [46, 11, 0]]
** centroid: 2, normalized-entropy: 0.7076690004167966, [(1, 46), (2, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 37, 16]]
** centroid: 4, normalized-entropy: 0.8835850861052531, [(2, 37), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 77, 0]]
** centroid: 5, normalized-entropy: 0.098959095355743, [(1, 1), (2, 77)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [58, 4, 0]]
** centroid: 6, normalized-entropy: 0.3451173149449528, [(1, 58), (2, 4)]
*** center 7: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19310181508865207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19310181508865207, 0.1503334527113475] ***
*** starting iteration: 2; err: [Inf, 0.19310181508865207, 0.1503334527113475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19310181508865207, 0.1503334527113475, 0.14665076528675855] ***
*** starting iteration: 3; err: [Inf, 0.19310181508865207, 0.1503334527113475, 0.14665076528675855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19310181508865207, 0.1503334527113475, 0.14665076528675855, 0.14613927423208953] ***
*** finished computation of 7 references, err: [Inf, 0.19310181508865207, 0.1503334527113475, 0.14665076528675855, 0.14613927423208953] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [4, 82, 0]]
** centroid: 1, normalized-entropy: 0.2713895875081112, [(1, 4), (2, 82)]
*** center 2: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [38, 30, 0]]
** centroid: 3, normalized-entropy: 0.9899927915575186, [(1, 38), (2, 30)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [45, 15, 0]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(1, 45), (2, 15)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 54, 19]]
** centroid: 5, normalized-entropy: 0.8271595195340525, [(2, 54), (3, 19)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [81, 4, 0]]
** centroid: 6, normalized-entropy: 0.2737691686829417, [(1, 81), (2, 4)]
*** center 7: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17770098132826387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17770098132826387, 0.14935595139861108] ***
*** starting iteration: 2; err: [Inf, 0.17770098132826387, 0.14935595139861108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17770098132826387, 0.14935595139861108, 0.14387597694713622] ***
*** starting iteration: 3; err: [Inf, 0.17770098132826387, 0.14935595139861108, 0.14387597694713622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17770098132826387, 0.14935595139861108, 0.14387597694713622, 0.14247965169232338] ***
*** starting iteration: 4; err: [Inf, 0.17770098132826387, 0.14935595139861108, 0.14387597694713622, 0.14247965169232338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17770098132826387, 0.14935595139861108, 0.14387597694713622, 0.14247965169232338, 0.14193687216285616] ***
*** finished computation of 7 references, err: [Inf, 0.17770098132826387, 0.14935595139861108, 0.14387597694713622, 0.14247965169232338, 0.14193687216285616] ***
*** center 1: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [45, 18, 0]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(1, 45), (2, 18)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 50, 13]]
** centroid: 3, normalized-entropy: 0.7344461802527668, [(2, 50), (3, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [11, 68, 0]]
** centroid: 5, normalized-entropy: 0.5822463050121238, [(1, 11), (2, 68)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [30, 38, 0]]
** centroid: 6, normalized-entropy: 0.9899927915575186, [(1, 30), (2, 38)]
*** center 7: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2137480403073132] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2137480403073132, 0.1534297232553363] ***
*** starting iteration: 2; err: [Inf, 0.2137480403073132, 0.1534297232553363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2137480403073132, 0.1534297232553363, 0.14872236351668836] ***
*** starting iteration: 3; err: [Inf, 0.2137480403073132, 0.1534297232553363, 0.14872236351668836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2137480403073132, 0.1534297232553363, 0.14872236351668836, 0.14793572499509902] ***
*** finished computation of 7 references, err: [Inf, 0.2137480403073132, 0.1534297232553363, 0.14872236351668836, 0.14793572499509902] ***
*** center 1: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 54, 17]]
** centroid: 2, normalized-entropy: 0.7941021417852022, [(2, 54), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [37, 6, 0]]
** centroid: 3, normalized-entropy: 0.5830194167347007, [(1, 37), (2, 6)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [67, 24, 0]]
** centroid: 4, normalized-entropy: 0.8323322690121193, [(1, 67), (2, 24)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [24, 48, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 24), (2, 48)]
*** center 6: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 62, 0]]
** centroid: 7, normalized-entropy: 0.2006223243127146, [(1, 2), (2, 62)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1869564797524363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1869564797524363, 0.15525444746017455] ***
*** starting iteration: 2; err: [Inf, 0.1869564797524363, 0.15525444746017455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1869564797524363, 0.15525444746017455, 0.15020019857399167] ***
*** starting iteration: 3; err: [Inf, 0.1869564797524363, 0.15525444746017455, 0.15020019857399167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1869564797524363, 0.15525444746017455, 0.15020019857399167, 0.14871693416777998] ***
*** starting iteration: 4; err: [Inf, 0.1869564797524363, 0.15525444746017455, 0.15020019857399167, 0.14871693416777998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1869564797524363, 0.15525444746017455, 0.15020019857399167, 0.14871693416777998, 0.14811312165670096] ***
*** finished computation of 7 references, err: [Inf, 0.1869564797524363, 0.15525444746017455, 0.15020019857399167, 0.14871693416777998, 0.14811312165670096] ***
*** center 1: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 56, 9]]
** centroid: 2, normalized-entropy: 0.5801954953637372, [(2, 56), (3, 9)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [44, 28, 0]]
** centroid: 3, normalized-entropy: 0.9640787648082293, [(1, 44), (2, 28)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [6, 63, 0]]
** centroid: 4, normalized-entropy: 0.42622865699814483, [(1, 6), (2, 63)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [27, 44, 0]]
** centroid: 5, normalized-entropy: 0.9582407282588409, [(1, 27), (2, 44)]
*** center 6: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18047788792289793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18047788792289793, 0.15077839536406099] ***
*** starting iteration: 2; err: [Inf, 0.18047788792289793, 0.15077839536406099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18047788792289793, 0.15077839536406099, 0.1458134277043864] ***
*** starting iteration: 3; err: [Inf, 0.18047788792289793, 0.15077839536406099, 0.1458134277043864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18047788792289793, 0.15077839536406099, 0.1458134277043864, 0.14403708660369738] ***
*** starting iteration: 4; err: [Inf, 0.18047788792289793, 0.15077839536406099, 0.1458134277043864, 0.14403708660369738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18047788792289793, 0.15077839536406099, 0.1458134277043864, 0.14403708660369738, 0.14321520323865117] ***
*** finished computation of 7 references, err: [Inf, 0.18047788792289793, 0.15077839536406099, 0.1458134277043864, 0.14403708660369738, 0.14321520323865117] ***
*** center 1: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 41, 15]]
** centroid: 2, normalized-entropy: 0.8383729377099398, [(2, 41), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [51, 16, 0]]
** centroid: 3, normalized-entropy: 0.7930490047779772, [(1, 51), (2, 16)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [9, 70, 0]]
** centroid: 4, normalized-entropy: 0.511639783631173, [(1, 9), (2, 70)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [14, 65, 0]]
** centroid: 5, normalized-entropy: 0.6739468651941155, [(1, 14), (2, 65)]
*** center 6: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19073259566538037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19073259566538037, 0.15101450606063008] ***
*** starting iteration: 2; err: [Inf, 0.19073259566538037, 0.15101450606063008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19073259566538037, 0.15101450606063008, 0.14550552146602422] ***
*** starting iteration: 3; err: [Inf, 0.19073259566538037, 0.15101450606063008, 0.14550552146602422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19073259566538037, 0.15101450606063008, 0.14550552146602422, 0.14401885658223182] ***
*** starting iteration: 4; err: [Inf, 0.19073259566538037, 0.15101450606063008, 0.14550552146602422, 0.14401885658223182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19073259566538037, 0.15101450606063008, 0.14550552146602422, 0.14401885658223182, 0.14300449955882505] ***
*** starting iteration: 5; err: [Inf, 0.19073259566538037, 0.15101450606063008, 0.14550552146602422, 0.14401885658223182, 0.14300449955882505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19073259566538037, 0.15101450606063008, 0.14550552146602422, 0.14401885658223182, 0.14300449955882505, 0.1425535396146588] ***
*** finished computation of 7 references, err: [Inf, 0.19073259566538037, 0.15101450606063008, 0.14550552146602422, 0.14401885658223182, 0.14300449955882505, 0.1425535396146588] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [58, 19, 0]]
** centroid: 1, normalized-entropy: 0.8060914696192223, [(1, 58), (2, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [51, 11, 0]]
** centroid: 2, normalized-entropy: 0.674398887071447, [(1, 51), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 66, 18]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 66), (3, 18)]
*** center 4: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [51, 19, 0]]
** centroid: 5, normalized-entropy: 0.8435070855739035, [(1, 51), (2, 19)]
*** center 6: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 67, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19036259485594928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19036259485594928, 0.1521535892500542] ***
*** starting iteration: 2; err: [Inf, 0.19036259485594928, 0.1521535892500542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19036259485594928, 0.1521535892500542, 0.1470905277505517] ***
*** starting iteration: 3; err: [Inf, 0.19036259485594928, 0.1521535892500542, 0.1470905277505517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19036259485594928, 0.1521535892500542, 0.1470905277505517, 0.14590928333625197] ***
*** starting iteration: 4; err: [Inf, 0.19036259485594928, 0.1521535892500542, 0.1470905277505517, 0.14590928333625197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19036259485594928, 0.1521535892500542, 0.1470905277505517, 0.14590928333625197, 0.14550465788319708] ***
*** finished computation of 7 references, err: [Inf, 0.19036259485594928, 0.1521535892500542, 0.1470905277505517, 0.14590928333625197, 0.14550465788319708] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [17, 70, 0]]
** centroid: 1, normalized-entropy: 0.7126368350739763, [(1, 17), (2, 70)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [46, 1, 0]]
** centroid: 2, normalized-entropy: 0.14854949043034832, [(1, 46), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 50, 16]]
** centroid: 4, normalized-entropy: 0.7990485210442682, [(2, 50), (3, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [71, 1, 0]]
** centroid: 6, normalized-entropy: 0.1055910363751953, [(1, 71), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [5, 67, 0]]
** centroid: 7, normalized-entropy: 0.3638469981769295, [(1, 5), (2, 67)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19843241430073977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19843241430073977, 0.1508355629313737] ***
*** starting iteration: 2; err: [Inf, 0.19843241430073977, 0.1508355629313737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19843241430073977, 0.1508355629313737, 0.14647515195608138] ***
*** starting iteration: 3; err: [Inf, 0.19843241430073977, 0.1508355629313737, 0.14647515195608138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19843241430073977, 0.1508355629313737, 0.14647515195608138, 0.14476765060145408] ***
*** starting iteration: 4; err: [Inf, 0.19843241430073977, 0.1508355629313737, 0.14647515195608138, 0.14476765060145408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19843241430073977, 0.1508355629313737, 0.14647515195608138, 0.14476765060145408, 0.1440704612620175] ***
*** finished computation of 7 references, err: [Inf, 0.19843241430073977, 0.1508355629313737, 0.14647515195608138, 0.14476765060145408, 0.1440704612620175] ***
*** center 1: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [51, 22, 0]]
** centroid: 2, normalized-entropy: 0.8829589691462253, [(1, 51), (2, 22)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 55, 11]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 55), (3, 11)]
*** center 4: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [11, 67, 0]]
** centroid: 5, normalized-entropy: 0.5869185834047994, [(1, 11), (2, 67)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [39, 39, 0]]
** centroid: 6, normalized-entropy: 1.0, [(1, 39), (2, 39)]
*** center 7: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20414601224660872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20414601224660872, 0.15633994112536312] ***
*** starting iteration: 2; err: [Inf, 0.20414601224660872, 0.15633994112536312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20414601224660872, 0.15633994112536312, 0.15147366007976235] ***
*** starting iteration: 3; err: [Inf, 0.20414601224660872, 0.15633994112536312, 0.15147366007976235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20414601224660872, 0.15633994112536312, 0.15147366007976235, 0.15051344340853393] ***
*** finished computation of 7 references, err: [Inf, 0.20414601224660872, 0.15633994112536312, 0.15147366007976235, 0.15051344340853393] ***
*** center 1: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 53, 13]]
** centroid: 2, normalized-entropy: 0.7158259310602146, [(2, 53), (3, 13)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [72, 2, 0]]
** centroid: 3, normalized-entropy: 0.1792560669283214, [(1, 72), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [36, 31, 0]]
** centroid: 4, normalized-entropy: 0.995978956518722, [(1, 36), (2, 31)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [57, 43, 0]]
** centroid: 5, normalized-entropy: 0.9858150371789197, [(1, 57), (2, 43)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 52, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18909328630566596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18909328630566596, 0.15303232032759115] ***
*** starting iteration: 2; err: [Inf, 0.18909328630566596, 0.15303232032759115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18909328630566596, 0.15303232032759115, 0.14974252238683403] ***
*** starting iteration: 3; err: [Inf, 0.18909328630566596, 0.15303232032759115, 0.14974252238683403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18909328630566596, 0.15303232032759115, 0.14974252238683403, 0.14943863191083073] ***
*** finished computation of 7 references, err: [Inf, 0.18909328630566596, 0.15303232032759115, 0.14974252238683403, 0.14943863191083073] ***
*** center 1: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [68, 6, 0]]
** centroid: 2, normalized-entropy: 0.40597703847557104, [(1, 68), (2, 6)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 42, 16]]
** centroid: 3, normalized-entropy: 0.8497511372532974, [(2, 42), (3, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [17, 40, 0]]
** centroid: 5, normalized-entropy: 0.8791357668533337, [(1, 17), (2, 40)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [40, 44, 0]]
** centroid: 6, normalized-entropy: 0.998363672593813, [(1, 40), (2, 44)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 49, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18665643034502863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18665643034502863, 0.15285774022247642] ***
*** starting iteration: 2; err: [Inf, 0.18665643034502863, 0.15285774022247642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18665643034502863, 0.15285774022247642, 0.14995510508678853] ***
*** starting iteration: 3; err: [Inf, 0.18665643034502863, 0.15285774022247642, 0.14995510508678853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18665643034502863, 0.15285774022247642, 0.14995510508678853, 0.14864539765939117] ***
*** starting iteration: 4; err: [Inf, 0.18665643034502863, 0.15285774022247642, 0.14995510508678853, 0.14864539765939117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18665643034502863, 0.15285774022247642, 0.14995510508678853, 0.14864539765939117, 0.1477276028506458] ***
*** finished computation of 7 references, err: [Inf, 0.18665643034502863, 0.15285774022247642, 0.14995510508678853, 0.14864539765939117, 0.1477276028506458] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 50, 17]]
** centroid: 1, normalized-entropy: 0.8171387756817725, [(2, 50), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [66, 3, 0]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(1, 66), (2, 3)]
*** center 4: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [70, 14, 0]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(1, 70), (2, 14)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 61, 0]]
** centroid: 6, normalized-entropy: 0.11911602665564841, [(1, 1), (2, 61)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [29, 45, 0]]
** centroid: 7, normalized-entropy: 0.966009606256856, [(1, 29), (2, 45)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1918641524584964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918641524584964, 0.1569120981823653] ***
*** starting iteration: 2; err: [Inf, 0.1918641524584964, 0.1569120981823653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918641524584964, 0.1569120981823653, 0.1509192441883497] ***
*** starting iteration: 3; err: [Inf, 0.1918641524584964, 0.1569120981823653, 0.1509192441883497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918641524584964, 0.1569120981823653, 0.1509192441883497, 0.15004448417946697] ***
*** finished computation of 7 references, err: [Inf, 0.1918641524584964, 0.1569120981823653, 0.1509192441883497, 0.15004448417946697] ***
*** center 1: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [70, 8, 0]]
** centroid: 2, normalized-entropy: 0.4770713062193298, [(1, 70), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 41, 11]]
** centroid: 3, normalized-entropy: 0.7444131797881749, [(2, 41), (3, 11)]
*** center 4: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [25, 55, 0]]
** centroid: 5, normalized-entropy: 0.8960382325345574, [(1, 25), (2, 55)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [43, 4, 0]]
** centroid: 6, normalized-entropy: 0.4199210973757179, [(1, 43), (2, 4)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 72, 0]]
** centroid: 7, normalized-entropy: 0.1792560669283214, [(1, 2), (2, 72)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1871274095363915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1871274095363915, 0.15202359260525555] ***
*** starting iteration: 2; err: [Inf, 0.1871274095363915, 0.15202359260525555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1871274095363915, 0.15202359260525555, 0.1476270133331418] ***
*** starting iteration: 3; err: [Inf, 0.1871274095363915, 0.15202359260525555, 0.1476270133331418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1871274095363915, 0.15202359260525555, 0.1476270133331418, 0.1460435110796243] ***
*** starting iteration: 4; err: [Inf, 0.1871274095363915, 0.15202359260525555, 0.1476270133331418, 0.1460435110796243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1871274095363915, 0.15202359260525555, 0.1476270133331418, 0.1460435110796243, 0.1452239755745977] ***
*** finished computation of 7 references, err: [Inf, 0.1871274095363915, 0.15202359260525555, 0.1476270133331418, 0.1460435110796243, 0.1452239755745977] ***
*** center 1: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 11]]
** centroid: 2, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [77, 18, 0]]
** centroid: 3, normalized-entropy: 0.7003691487575897, [(1, 77), (2, 18)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [42, 8, 0]]
** centroid: 4, normalized-entropy: 0.634309554640566, [(1, 42), (2, 8)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [15, 62, 0]]
** centroid: 5, normalized-entropy: 0.7114160189012126, [(1, 15), (2, 62)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 60, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [77, 1, 0]]
** centroid: 7, normalized-entropy: 0.098959095355743, [(1, 77), (2, 1)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20213853730540723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20213853730540723, 0.15258489085314794] ***
*** starting iteration: 2; err: [Inf, 0.20213853730540723, 0.15258489085314794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20213853730540723, 0.15258489085314794, 0.14652723011933266] ***
*** starting iteration: 3; err: [Inf, 0.20213853730540723, 0.15258489085314794, 0.14652723011933266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20213853730540723, 0.15258489085314794, 0.14652723011933266, 0.14464779343642295] ***
*** starting iteration: 4; err: [Inf, 0.20213853730540723, 0.15258489085314794, 0.14652723011933266, 0.14464779343642295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20213853730540723, 0.15258489085314794, 0.14652723011933266, 0.14464779343642295, 0.14430293540284037] ***
*** finished computation of 7 references, err: [Inf, 0.20213853730540723, 0.15258489085314794, 0.14652723011933266, 0.14464779343642295, 0.14430293540284037] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 46, 18]]
** centroid: 1, normalized-entropy: 0.8571484374283717, [(2, 46), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [57, 16, 0]]
** centroid: 5, normalized-entropy: 0.7586638628883696, [(1, 57), (2, 16)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [3, 67, 0]]
** centroid: 6, normalized-entropy: 0.25524211319019174, [(1, 3), (2, 67)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 58, 0]]
** centroid: 7, normalized-entropy: 0.12394986771100755, [(1, 1), (2, 58)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18557239537127315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18557239537127315, 0.14637028048443607] ***
*** starting iteration: 2; err: [Inf, 0.18557239537127315, 0.14637028048443607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18557239537127315, 0.14637028048443607, 0.14364040315523743] ***
*** starting iteration: 3; err: [Inf, 0.18557239537127315, 0.14637028048443607, 0.14364040315523743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18557239537127315, 0.14637028048443607, 0.14364040315523743, 0.14309555473737418] ***
*** finished computation of 7 references, err: [Inf, 0.18557239537127315, 0.14637028048443607, 0.14364040315523743, 0.14309555473737418] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [36, 41, 0]]
** centroid: 1, normalized-entropy: 0.9969562518473082, [(1, 36), (2, 41)]
*** center 2: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 64, 17]]
** centroid: 4, normalized-entropy: 0.7412466905234424, [(2, 64), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [62, 21, 0]]
** centroid: 5, normalized-entropy: 0.8160172973428256, [(1, 62), (2, 21)]
*** center 6: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 57, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19497362081892788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19497362081892788, 0.1484898537155241] ***
*** starting iteration: 2; err: [Inf, 0.19497362081892788, 0.1484898537155241] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19497362081892788, 0.1484898537155241, 0.14494951116794255] ***
*** starting iteration: 3; err: [Inf, 0.19497362081892788, 0.1484898537155241, 0.14494951116794255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19497362081892788, 0.1484898537155241, 0.14494951116794255, 0.144540352916345] ***
*** finished computation of 7 references, err: [Inf, 0.19497362081892788, 0.1484898537155241, 0.14494951116794255, 0.144540352916345] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [7, 74, 0]]
** centroid: 1, normalized-entropy: 0.42440514472480345, [(1, 7), (2, 74)]
*** center 2: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [46, 1, 0]]
** centroid: 3, normalized-entropy: 0.14854949043034832, [(1, 46), (2, 1)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [74, 16, 0]]
** centroid: 4, normalized-entropy: 0.6751914401458716, [(1, 74), (2, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [79, 5, 0]]
** centroid: 5, normalized-entropy: 0.3255517134879513, [(1, 79), (2, 5)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 45, 15]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 45), (3, 15)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 54, 0]]
** centroid: 7, normalized-entropy: 0.13110652958234514, [(1, 1), (2, 54)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20059330729860814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20059330729860814, 0.15452825134037995] ***
*** starting iteration: 2; err: [Inf, 0.20059330729860814, 0.15452825134037995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20059330729860814, 0.15452825134037995, 0.149720766980201] ***
*** starting iteration: 3; err: [Inf, 0.20059330729860814, 0.15452825134037995, 0.149720766980201] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20059330729860814, 0.15452825134037995, 0.149720766980201, 0.14885211507603527] ***
*** finished computation of 7 references, err: [Inf, 0.20059330729860814, 0.15452825134037995, 0.149720766980201, 0.14885211507603527] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [27, 46, 0]]
** centroid: 1, normalized-entropy: 0.9505668528932193, [(1, 27), (2, 46)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [59, 9, 0]]
** centroid: 2, normalized-entropy: 0.5638560041131417, [(1, 59), (2, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 47, 19]]
** centroid: 4, normalized-entropy: 0.8659653498997099, [(2, 47), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [59, 19, 0]]
** centroid: 5, normalized-entropy: 0.8009591077369054, [(1, 59), (2, 19)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 54, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [74, 3, 0]]
** centroid: 7, normalized-entropy: 0.23750814382859295, [(1, 74), (2, 3)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1971736782360822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1971736782360822, 0.14833643624559045] ***
*** starting iteration: 2; err: [Inf, 0.1971736782360822, 0.14833643624559045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1971736782360822, 0.14833643624559045, 0.14529719762690366] ***
*** starting iteration: 3; err: [Inf, 0.1971736782360822, 0.14833643624559045, 0.14529719762690366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1971736782360822, 0.14833643624559045, 0.14529719762690366, 0.14492968381382526] ***
*** finished computation of 7 references, err: [Inf, 0.1971736782360822, 0.14833643624559045, 0.14529719762690366, 0.14492968381382526] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [7, 74, 0]]
** centroid: 1, normalized-entropy: 0.42440514472480345, [(1, 7), (2, 74)]
*** center 2: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [46, 5, 0]]
** centroid: 3, normalized-entropy: 0.462749058578174, [(1, 46), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [75, 7, 0]]
** centroid: 4, normalized-entropy: 0.42080948947668984, [(1, 75), (2, 7)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 31, 18]]
** centroid: 5, normalized-entropy: 0.9486131982385807, [(2, 31), (3, 18)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [90, 2, 0]]
** centroid: 6, normalized-entropy: 0.1510969705171136, [(1, 90), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 59, 0]]
** centroid: 7, normalized-entropy: 0.12229159706937456, [(1, 1), (2, 59)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2001790127856657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2001790127856657, 0.15196923939976842] ***
*** starting iteration: 2; err: [Inf, 0.2001790127856657, 0.15196923939976842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2001790127856657, 0.15196923939976842, 0.14736815632879735] ***
*** starting iteration: 3; err: [Inf, 0.2001790127856657, 0.15196923939976842, 0.14736815632879735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2001790127856657, 0.15196923939976842, 0.14736815632879735, 0.14667394656315447] ***
*** finished computation of 7 references, err: [Inf, 0.2001790127856657, 0.15196923939976842, 0.14736815632879735, 0.14667394656315447] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [56, 2, 0]]
** centroid: 1, normalized-entropy: 0.21639693245126485, [(1, 56), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [72, 10, 0]]
** centroid: 2, normalized-entropy: 0.5349436990971067, [(1, 72), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 51, 13]]
** centroid: 3, normalized-entropy: 0.7281342378690551, [(2, 51), (3, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [20, 68, 0]]
** centroid: 5, normalized-entropy: 0.7732266742876346, [(1, 20), (2, 68)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 59, 0]]
** centroid: 6, normalized-entropy: 0.20818094555717087, [(1, 2), (2, 59)]
*** center 7: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18604441299661995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18604441299661995, 0.14373752103280277] ***
*** starting iteration: 2; err: [Inf, 0.18604441299661995, 0.14373752103280277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18604441299661995, 0.14373752103280277, 0.1411545958351344] ***
*** starting iteration: 3; err: [Inf, 0.18604441299661995, 0.14373752103280277, 0.1411545958351344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18604441299661995, 0.14373752103280277, 0.1411545958351344, 0.1409664504826069] ***
*** finished computation of 7 references, err: [Inf, 0.18604441299661995, 0.14373752103280277, 0.1411545958351344, 0.1409664504826069] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 72, 6]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 72), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [45, 18, 0]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(1, 45), (2, 18)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [75, 17, 0]]
** centroid: 4, normalized-entropy: 0.6904285855304167, [(1, 75), (2, 17)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [48, 15, 0]]
** centroid: 5, normalized-entropy: 0.7918583525674836, [(1, 48), (2, 15)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 64, 8]]
** centroid: 6, normalized-entropy: 0.5032583347756457, [(2, 64), (3, 8)]
*** center 7: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18361445173621177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18361445173621177, 0.14648134317062794] ***
*** starting iteration: 2; err: [Inf, 0.18361445173621177, 0.14648134317062794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18361445173621177, 0.14648134317062794, 0.14394708356820046] ***
*** starting iteration: 3; err: [Inf, 0.18361445173621177, 0.14648134317062794, 0.14394708356820046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18361445173621177, 0.14648134317062794, 0.14394708356820046, 0.14266614920832216] ***
*** starting iteration: 4; err: [Inf, 0.18361445173621177, 0.14648134317062794, 0.14394708356820046, 0.14266614920832216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18361445173621177, 0.14648134317062794, 0.14394708356820046, 0.14266614920832216, 0.14231790126441046] ***
*** finished computation of 7 references, err: [Inf, 0.18361445173621177, 0.14648134317062794, 0.14394708356820046, 0.14266614920832216, 0.14231790126441046] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [63, 9, 0]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(1, 63), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [52, 23, 0]]
** centroid: 2, normalized-entropy: 0.8892881527272397, [(1, 52), (2, 23)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 62, 20]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 62), (3, 20)]
*** center 4: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [71, 15, 0]]
** centroid: 5, normalized-entropy: 0.6677135405281421, [(1, 71), (2, 15)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [3, 72, 0]]
** centroid: 6, normalized-entropy: 0.24229218908241482, [(1, 3), (2, 72)]
*** center 7: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19987646069005133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19987646069005133, 0.1492990871174261] ***
*** starting iteration: 2; err: [Inf, 0.19987646069005133, 0.1492990871174261] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19987646069005133, 0.1492990871174261, 0.1441319831283763] ***
*** starting iteration: 3; err: [Inf, 0.19987646069005133, 0.1492990871174261, 0.1441319831283763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19987646069005133, 0.1492990871174261, 0.1441319831283763, 0.14292963075335138] ***
*** starting iteration: 4; err: [Inf, 0.19987646069005133, 0.1492990871174261, 0.1441319831283763, 0.14292963075335138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19987646069005133, 0.1492990871174261, 0.1441319831283763, 0.14292963075335138, 0.14275509197078645] ***
*** finished computation of 7 references, err: [Inf, 0.19987646069005133, 0.1492990871174261, 0.1441319831283763, 0.14292963075335138, 0.14275509197078645] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [6, 64, 0]]
** centroid: 1, normalized-entropy: 0.4220005168831531, [(1, 6), (2, 64)]
*** center 2: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [43, 41, 0]]
** centroid: 3, normalized-entropy: 0.9995910341890979, [(1, 43), (2, 41)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [42, 39, 0]]
** centroid: 4, normalized-entropy: 0.9990102708804813, [(1, 42), (2, 39)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 57, 16]]
** centroid: 5, normalized-entropy: 0.7586638628883696, [(2, 57), (3, 16)]
*** center 6: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1829875329528004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1829875329528004, 0.14907870061974973] ***
*** starting iteration: 2; err: [Inf, 0.1829875329528004, 0.14907870061974973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1829875329528004, 0.14907870061974973, 0.14429804054647685] ***
*** starting iteration: 3; err: [Inf, 0.1829875329528004, 0.14907870061974973, 0.14429804054647685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1829875329528004, 0.14907870061974973, 0.14429804054647685, 0.1436529487753287] ***
*** finished computation of 7 references, err: [Inf, 0.1829875329528004, 0.14907870061974973, 0.14429804054647685, 0.1436529487753287] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [10, 83, 0]]
** centroid: 1, normalized-entropy: 0.49241092131589825, [(1, 10), (2, 83)]
*** center 2: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [42, 33, 0]]
** centroid: 3, normalized-entropy: 0.9895875212220558, [(1, 42), (2, 33)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [43, 23, 0]]
** centroid: 4, normalized-entropy: 0.9327076126690367, [(1, 43), (2, 23)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 43, 17]]
** centroid: 5, normalized-entropy: 0.8599530497177523, [(2, 43), (3, 17)]
*** center 6: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2066966214850545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2066966214850545, 0.15184240978397429] ***
*** starting iteration: 2; err: [Inf, 0.2066966214850545, 0.15184240978397429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2066966214850545, 0.15184240978397429, 0.1482766566183418] ***
*** starting iteration: 3; err: [Inf, 0.2066966214850545, 0.15184240978397429, 0.1482766566183418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2066966214850545, 0.15184240978397429, 0.1482766566183418, 0.14808097024448216] ***
*** finished computation of 7 references, err: [Inf, 0.2066966214850545, 0.15184240978397429, 0.1482766566183418, 0.14808097024448216] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [76, 27, 0]]
** centroid: 1, normalized-entropy: 0.829952434172285, [(1, 76), (2, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 60, 19]]
** centroid: 4, normalized-entropy: 0.7958812735955936, [(2, 60), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [39, 35, 0]]
** centroid: 5, normalized-entropy: 0.9978913098356861, [(1, 39), (2, 35)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 58, 0]]
** centroid: 6, normalized-entropy: 0.2108423003185322, [(1, 2), (2, 58)]
*** center 7: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18152059788815678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18152059788815678, 0.15203691501775757] ***
*** starting iteration: 2; err: [Inf, 0.18152059788815678, 0.15203691501775757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18152059788815678, 0.15203691501775757, 0.14882431745156646] ***
*** starting iteration: 3; err: [Inf, 0.18152059788815678, 0.15203691501775757, 0.14882431745156646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18152059788815678, 0.15203691501775757, 0.14882431745156646, 0.1477583812084049] ***
*** starting iteration: 4; err: [Inf, 0.18152059788815678, 0.15203691501775757, 0.14882431745156646, 0.1477583812084049] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18152059788815678, 0.15203691501775757, 0.14882431745156646, 0.1477583812084049, 0.14719931867253036] ***
*** finished computation of 7 references, err: [Inf, 0.18152059788815678, 0.15203691501775757, 0.14882431745156646, 0.1477583812084049, 0.14719931867253036] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [52, 36, 0]]
** centroid: 1, normalized-entropy: 0.976020648236615, [(1, 52), (2, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 79, 16]]
** centroid: 4, normalized-entropy: 0.6540800387941991, [(2, 79), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [70, 12, 0]]
** centroid: 5, normalized-entropy: 0.6006085754131871, [(1, 70), (2, 12)]
*** center 6: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 53, 0]]
** centroid: 7, normalized-entropy: 0.13303964861069897, [(1, 1), (2, 53)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1814182192310691] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1814182192310691, 0.14840438747778534] ***
*** starting iteration: 2; err: [Inf, 0.1814182192310691, 0.14840438747778534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1814182192310691, 0.14840438747778534, 0.14625618402380497] ***
*** starting iteration: 3; err: [Inf, 0.1814182192310691, 0.14840438747778534, 0.14625618402380497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1814182192310691, 0.14840438747778534, 0.14625618402380497, 0.14567807907331734] ***
*** finished computation of 7 references, err: [Inf, 0.1814182192310691, 0.14840438747778534, 0.14625618402380497, 0.14567807907331734] ***
*** center 1: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 15]]
** centroid: 2, normalized-entropy: 0.9108783787500366, [(2, 31), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [48, 19, 0]]
** centroid: 3, normalized-entropy: 0.8602858652332406, [(1, 48), (2, 19)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [68, 13, 0]]
** centroid: 4, normalized-entropy: 0.635489638182683, [(1, 68), (2, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [14, 73, 0]]
** centroid: 5, normalized-entropy: 0.6365048555378351, [(1, 14), (2, 73)]
*** center 6: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 63, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18793104704283178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18793104704283178, 0.1506782077504322] ***
*** starting iteration: 2; err: [Inf, 0.18793104704283178, 0.1506782077504322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18793104704283178, 0.1506782077504322, 0.1482548042498529] ***
*** starting iteration: 3; err: [Inf, 0.18793104704283178, 0.1506782077504322, 0.1482548042498529] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18793104704283178, 0.1506782077504322, 0.1482548042498529, 0.14778792069107294] ***
*** finished computation of 7 references, err: [Inf, 0.18793104704283178, 0.1506782077504322, 0.1482548042498529, 0.14778792069107294] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [50, 47, 0]]
** centroid: 1, normalized-entropy: 0.999309898706868, [(1, 50), (2, 47)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [60, 4, 0]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(1, 60), (2, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 49, 17]]
** centroid: 4, normalized-entropy: 0.8230660790114689, [(2, 49), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [62, 16, 0]]
** centroid: 5, normalized-entropy: 0.7320666900931937, [(1, 62), (2, 16)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 44, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18844141031615436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18844141031615436, 0.14972697978187352] ***
*** starting iteration: 2; err: [Inf, 0.18844141031615436, 0.14972697978187352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18844141031615436, 0.14972697978187352, 0.14377658439613877] ***
*** starting iteration: 3; err: [Inf, 0.18844141031615436, 0.14972697978187352, 0.14377658439613877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18844141031615436, 0.14972697978187352, 0.14377658439613877, 0.14294755385397] ***
*** finished computation of 7 references, err: [Inf, 0.18844141031615436, 0.14972697978187352, 0.14377658439613877, 0.14294755385397] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [73, 12, 0]]
** centroid: 1, normalized-entropy: 0.5873116089977589, [(1, 73), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [51, 14, 0]]
** centroid: 2, normalized-entropy: 0.7516499461153354, [(1, 51), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 58, 15]]
** centroid: 3, normalized-entropy: 0.7327525499549903, [(2, 58), (3, 15)]
*** center 4: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [49, 26, 0]]
** centroid: 5, normalized-entropy: 0.9310558233850329, [(1, 49), (2, 26)]
*** center 6: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 69, 0]]
** centroid: 7, normalized-entropy: 0.10802319526362848, [(1, 1), (2, 69)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1888261067410931] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888261067410931, 0.15100621441472323] ***
*** starting iteration: 2; err: [Inf, 0.1888261067410931, 0.15100621441472323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888261067410931, 0.15100621441472323, 0.14504152310453355] ***
*** starting iteration: 3; err: [Inf, 0.1888261067410931, 0.15100621441472323, 0.14504152310453355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888261067410931, 0.15100621441472323, 0.14504152310453355, 0.14361651450023055] ***
*** starting iteration: 4; err: [Inf, 0.1888261067410931, 0.15100621441472323, 0.14504152310453355, 0.14361651450023055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888261067410931, 0.15100621441472323, 0.14504152310453355, 0.14361651450023055, 0.1431528086271137] ***
*** finished computation of 7 references, err: [Inf, 0.1888261067410931, 0.15100621441472323, 0.14504152310453355, 0.14361651450023055, 0.1431528086271137] ***
*** center 1: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [51, 20, 0]]
** centroid: 2, normalized-entropy: 0.8577435372751958, [(1, 51), (2, 20)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 64, 13]]
** centroid: 3, normalized-entropy: 0.6550239908788728, [(2, 64), (3, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [16, 73, 0]]
** centroid: 5, normalized-entropy: 0.6795851972782937, [(1, 16), (2, 73)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [47, 37, 0]]
** centroid: 6, normalized-entropy: 0.9897525351939971, [(1, 47), (2, 37)]
*** center 7: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 366,3 => 31,1 => 603), Dict(2 => 374,3 => 42,1 => 584))
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1), 0.9520298741855627)
[ Info: ===== scores for single classifier: {"micro_f1":0.901,"precision":0.901,"recall":0.901,"macro_recall":0.9268277049300417,"macro_f1":0.894615729666164,"accuracy":0.901,"class_f1":{"2":0.8667563930013459,"3":0.8936170212765957,"1":0.9234737747205504},"class_precision":{"2":0.8726287262872628,"3":0.8076923076923077,"1":0.927461139896373},"class_recall":{"2":0.8609625668449198,"3":1.0,"1":0.9195205479452054}}
[ Info: ===== scores for 1: {"micro_f1":0.9469999999999998,"precision":0.947,"recall":0.947,"macro_recall":0.9614161355700438,"macro_f1":0.928563641493815,"accuracy":0.947,"class_f1":{"2":0.9292389853137517,"3":0.8936170212765957,"1":0.9628349178910977},"class_precision":{"2":0.928,"3":0.8076923076923077,"1":0.9720767888307156},"class_recall":{"2":0.93048128342246,"3":1.0,"1":0.9537671232876712}}
[ Info: ===== scores for 5: {"micro_f1":0.9500000000000001,"precision":0.95,"recall":0.95,"macro_recall":0.9650514003858081,"macro_f1":0.9368528928148064,"accuracy":0.95,"class_f1":{"2":0.9340369393139841,"3":0.9130434782608696,"1":0.9634782608695652},"class_precision":{"2":0.921875,"3":0.84,"1":0.9787985865724381},"class_recall":{"2":0.946524064171123,"3":1.0,"1":0.9486301369863014}}
[ Info: ===== scores for 7: {"micro_f1":0.948,"precision":0.948,"recall":0.948,"macro_recall":0.9648713158987131,"macro_f1":0.9355431546982976,"accuracy":0.948,"class_f1":{"2":0.9321148825065275,"3":0.9130434782608696,"1":0.9614711033274956},"class_precision":{"2":0.9107142857142857,"3":0.84,"1":0.9838709677419355},"class_recall":{"2":0.9545454545454546,"3":1.0,"1":0.940068493150685}}
[ Info: ===== scores for 9: {"micro_f1":0.9469999999999998,"precision":0.947,"recall":0.947,"macro_recall":0.9643005396430054,"macro_f1":0.9378987739283384,"accuracy":0.947,"class_f1":{"2":0.9308996088657105,"3":0.923076923076923,"1":0.9597197898423817},"class_precision":{"2":0.9083969465648855,"3":0.8571428571428571,"1":0.982078853046595},"class_recall":{"2":0.9545454545454546,"3":1.0,"1":0.9383561643835616}}
[ Info: ===== scores for 11: {"micro_f1":0.948,"precision":0.948,"recall":0.948,"macro_recall":0.9658327839230337,"macro_f1":0.9387138579039819,"accuracy":0.948,"class_f1":{"2":0.9326424870466321,"3":0.923076923076923,"1":0.9604221635883905},"class_precision":{"2":0.9045226130653267,"3":0.8571428571428571,"1":0.9873417721518988},"class_recall":{"2":0.9625668449197861,"3":1.0,"1":0.934931506849315}}
(score = 0.947, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.947, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.948, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.947, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.946, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.95, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.943, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.948, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: ("config: ", "{\"score\":0.95,\"k\":5,\"kernel\":\"direct_kernel\",\"dist\":\"l2_distance\",\"kernel_fun\":\"fun\"}")
[ Info: ===== scores optimized! B: {"micro_f1":0.9500000000000001,"precision":0.95,"recall":0.95,"macro_recall":0.9650514003858081,"macro_f1":0.9368528928148064,"accuracy":0.95,"class_f1":{"2":0.9340369393139841,"3":0.9130434782608696,"1":0.9634782608695652},"class_precision":{"2":0.921875,"3":0.84,"1":0.9787985865724381},"class_recall":{"2":0.946524064171123,"3":1.0,"1":0.9486301369863014}}
Test Summary: | Pass  Total
AKNC          |    8      8
    Testing KCenters tests passed 
