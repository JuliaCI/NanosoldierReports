Julia Version 1.5.0-DEV.267
Commit 592ada160b (2020-02-13 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed PooledArrays ──────────────── v0.5.3
  Installed LearnBase ─────────────────── v0.2.2
  Installed Missings ──────────────────── v0.4.3
  Installed OrderedCollections ────────── v1.1.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed KCenters ──────────────────── v0.1.13
  Installed JSON ──────────────────────── v0.21.0
  Installed DataFrames ────────────────── v0.20.2
  Installed TableTraits ───────────────── v1.0.0
  Installed DataAPI ───────────────────── v1.1.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed Compat ────────────────────── v3.5.0
  Installed Reexport ──────────────────── v0.2.0
  Installed DataStructures ────────────── v0.17.9
  Installed StatsBase ─────────────────── v0.32.0
  Installed SimilaritySearch ──────────── v0.3.19
  Installed Parsers ───────────────────── v0.3.11
  Installed DataValueInterfaces ───────── v1.0.0
  Installed MLDataPattern ─────────────── v0.5.0
  Installed MLDataUtils ───────────────── v0.5.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Tables ────────────────────── v1.0.1
  Installed InvertedIndices ───────────── v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.1
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.13
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.5.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.13
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_JFZMam/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.5.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.13
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.1
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9360659371813138
[ Info: 0.8326150393486023
[ Info: 0.5567020623385907
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32531724544862906
mean(cdnet.distances) = 0.3955692395567894
mean(crand.distances) = 0.3345855412632227
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8361955752580761,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.359375,"distances_sum":1834.3212781902773}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73046875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.73046875,"f1":0.8361955752580761,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.359375,"distances_sum":1834.3212781902773}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9033742299367309,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6953125,"distances_sum":2199.7166936568024}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9252263361638366,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.921875,"distances_sum":2349.369529106098}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9530734890109895,"seconds":6.400048732757568e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.921875,"distances_sum":2510.251177185936}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9530734890109895,"seconds":6.400048732757568e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.921875,"distances_sum":2510.251177185936}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9704842032967038,"seconds":8.830800652503967e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.96875,"distances_sum":2630.4737975991816}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9682692307692309,"seconds":7.374212145805359e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9765625,"distances_sum":2641.762409415294}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9676739926739931,"seconds":6.509944796562195e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.984375,"distances_sum":2604.88174481691}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9545818764568766,"seconds":6.327405571937561e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.875,"distances_sum":2541.8567452788216}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9704842032967038,"seconds":8.830800652503967e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.96875,"distances_sum":2630.4737975991816}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9704842032967038,"seconds":8.830800652503967e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.96875,"distances_sum":2630.4737975991816}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3466796875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3466796875,"f1":null,"seconds":3.883615136146545e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":5.46875,"distances_sum":793.9637280118656}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5341796875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5341796875,"f1":0.6849123099123104,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.0546875,"distances_sum":1196.9662420117402}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.7993801337551345,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.9765625,"distances_sum":1542.563450132276}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6845703125,"f1":0.7993801337551345,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.9765625,"distances_sum":1542.563450132276}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9221070596070599,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.7890625,"distances_sum":2018.1707307512395}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9120031010656018,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.734375,"distances_sum":1977.2780413638054}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9082074175824184,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.71875,"distances_sum":1961.4146226490382}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9221070596070599,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.7890625,"distances_sum":2018.1707307512395}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9697573260073264,"seconds":6.50063157081604e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9140625,"distances_sum":2344.686390230925}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.949173222610723,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.859375,"distances_sum":2212.689662670772}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.96854967948718,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9765625,"distances_sum":2286.643822696249}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9332734973359978,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.859375,"distances_sum":2083.825009590306}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9470638736263741,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.8203125,"distances_sum":2193.7770074742343}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9697573260073264,"seconds":6.50063157081604e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9140625,"distances_sum":2344.686390230925}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9697573260073264,"seconds":6.50063157081604e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9140625,"distances_sum":2344.686390230925}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2333984375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.4570693969726562e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.4453125,"distances_sum":508.93028723180646}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2099609375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2099609375,"f1":null,"seconds":3.2670795917510986e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.1015625,"distances_sum":470.86057515867526}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.852137966200467,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.4921875,"distances_sum":1735.9869483667214}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.852137966200467,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.4921875,"distances_sum":1735.9869483667214}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9380322802197807,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.71875,"distances_sum":2236.514384505439}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9686584249084251,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9375,"distances_sum":2433.1126466480137}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9686584249084251,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9375,"distances_sum":2433.1126466480137}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9726018772893775,"seconds":6.506219506263733e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9140625,"distances_sum":2498.4729979292224}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9726018772893775,"seconds":6.506219506263733e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9140625,"distances_sum":2498.4729979292224}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9726018772893775,"seconds":6.506219506263733e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9140625,"distances_sum":2498.4729979292224}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8525131118881127,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.65625,"distances_sum":1768.3548245085958}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2421875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2421875,"f1":null,"seconds":3.3527612686157227e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.7734375,"distances_sum":586.3196735075057}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8525131118881127,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.65625,"distances_sum":1768.3548245085958}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9126633782883791,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7890625,"distances_sum":2076.766662820341}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8644567238317244,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7265625,"distances_sum":1846.1353055429688}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84765625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.84765625,"f1":0.9126633782883791,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7890625,"distances_sum":2076.766662820341}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9592090201465205,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.953125,"distances_sum":2398.852569308675}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9457646520146524,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8671875,"distances_sum":2320.8076748562344}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9554544413919419,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9609375,"distances_sum":2378.51532829773}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570887445887447,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9296875,"distances_sum":2387.514717663078}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.94562728937729,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.890625,"distances_sum":2331.6332868946233}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9404850357975362,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8984375,"distances_sum":2293.011455216698}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9592090201465205,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.953125,"distances_sum":2398.852569308675}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9592090201465205,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.953125,"distances_sum":2398.852569308675}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4501953125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4501953125,"f1":null,"seconds":3.95067036151886e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.4375,"distances_sum":891.5018107517154}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8420022685647695,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.28125,"distances_sum":1620.5490158057332}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7373046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7373046875,"f1":0.8420022685647695,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.28125,"distances_sum":1620.5490158057332}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9426599442224448,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8671875,"distances_sum":2167.4681088581756}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8630416458541469,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.3828125,"distances_sum":1694.6194450537698}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8612533300033308,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.4296875,"distances_sum":1714.1001087292516}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9426599442224448,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8671875,"distances_sum":2167.4681088581756}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9709821428571432,"seconds":6.919726729393005e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.953125,"distances_sum":2356.4822437410076}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9549367299367306,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8828125,"distances_sum":2283.6849813122903}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9462110805860812,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.9296875,"distances_sum":2176.9602207195016}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9638278388278391,"seconds":6.2622129917144775e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.9375,"distances_sum":2293.7788224723918}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9709821428571432,"seconds":6.919726729393005e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.953125,"distances_sum":2356.4822437410076}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9709821428571432,"seconds":6.919726729393005e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.953125,"distances_sum":2356.4822437410076}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5185546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5185546875,"f1":0.6656482406482411,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.0078125,"distances_sum":1194.761204331928}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3525390625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3525390625,"f1":null,"seconds":3.645196557044983e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":5.7265625,"distances_sum":807.5203528871957}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5185546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5185546875,"f1":0.6656482406482411,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.0078125,"distances_sum":1194.761204331928}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.913373085248086,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8359375,"distances_sum":2049.967652786394}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7778162809412817,"seconds":4.770234227180481e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.0546875,"distances_sum":1445.0479387065518}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.865692120379621,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.5078125,"distances_sum":1785.1438832249307}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7815840409590417,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.984375,"distances_sum":1481.0162069013247}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8500962579087589,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.4140625,"distances_sum":1723.2228367575842}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8505859375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8505859375,"f1":0.913373085248086,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8359375,"distances_sum":2049.967652786394}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.967038690476191,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.921875,"distances_sum":2364.4706141716383}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9431464368964373,"seconds":6.67572021484375e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.796875,"distances_sum":2252.007908400812}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9547676282051285,"seconds":6.834045052528381e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.890625,"distances_sum":2322.4545849551505}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9577438186813191,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.84375,"distances_sum":2330.7676111950923}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9426797161172167,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8515625,"distances_sum":2231.721519384257}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9363412629037636,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.828125,"distances_sum":2207.8747468239535}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9404361263736271,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8515625,"distances_sum":2226.868927647678}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.967038690476191,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.921875,"distances_sum":2364.4706141716383}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.967038690476191,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.921875,"distances_sum":2364.4706141716383}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.23046875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.23046875,"f1":null,"seconds":3.3155083656311035e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":4.8359375,"distances_sum":597.0632568986083}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.23046875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.23046875,"f1":null,"seconds":3.3155083656311035e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":4.8359375,"distances_sum":597.0632568986083}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5009765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5009765625,"f1":null,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.3984375,"distances_sum":1122.0716361070183}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7974920912420922,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.5625,"distances_sum":1647.8061233003825}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8497523310023317,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.171875,"distances_sum":1925.4815957302985}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8497523310023317,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.171875,"distances_sum":1925.4815957302985}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9027160339660346,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6484375,"distances_sum":2171.4936827863853}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9572973901098905,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8203125,"distances_sum":2571.619885249134}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8923566017316026,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6171875,"distances_sum":2087.5696345071433}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8907628829503835,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.625,"distances_sum":2076.5044695856022}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8525021853146861,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.328125,"distances_sum":1889.6645380510524}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.858382763070264,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.234375,"distances_sum":1926.4862289821021}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9572973901098905,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8203125,"distances_sum":2571.619885249134}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9693108974358976,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9140625,"distances_sum":2627.912630240575}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.958897352647353,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":2600.978616224883}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.968046016483517,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8828125,"distances_sum":2647.3569850338627}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9693108974358976,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9140625,"distances_sum":2627.912630240575}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9693108974358976,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9140625,"distances_sum":2627.912630240575}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8616799866799875,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.2578125,"distances_sum":1915.7573898810288}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.867197906260407,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.359375,"distances_sum":1982.3278980989892}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.867197906260407,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.359375,"distances_sum":1982.3278980989892}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9541011072261079,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.75,"distances_sum":2560.6546304580993}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.955308753746254,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8203125,"distances_sum":2552.627018382349}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8976736804861812,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.5625,"distances_sum":2136.12345112602}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.955308753746254,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8203125,"distances_sum":2552.627018382349}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.982423305860806,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9765625,"distances_sum":2710.830686315113}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.959769917582418,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8359375,"distances_sum":2576.780497283875}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9769345238095241,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9453125,"distances_sum":2680.568452072961}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9718750000000005,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9140625,"distances_sum":2631.1562072205575}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.982423305860806,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9765625,"distances_sum":2710.830686315113}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.982423305860806,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9765625,"distances_sum":2710.830686315113}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7078485750360757,"seconds":4.526227712631226e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.7734375,"distances_sum":1296.1788229997774}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3994140625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.38628888130188e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.78125,"distances_sum":849.0326013971044}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2587890625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2587890625,"f1":null,"seconds":3.17208468914032e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.859375,"distances_sum":633.3349929511572}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.568359375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.568359375,"f1":0.7078485750360757,"seconds":4.526227712631226e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.7734375,"distances_sum":1296.1788229997774}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8941683316683324,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.59375,"distances_sum":2188.422483482624}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7842225482850491,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.4765625,"distances_sum":1553.612639077961}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8991451257076265,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.625,"distances_sum":2183.2411970388325}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.638671875,"f1":0.7686192279942288,"seconds":4.533678293228149e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.3671875,"distances_sum":1511.5845732666494}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8994994588744596,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.640625,"distances_sum":2169.7119025606976}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.580078125,"f1":0.7169816294816302,"seconds":4.032626748085022e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.9375,"distances_sum":1368.4883278563598}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8271484375,"state":{"ssize":8,"bsize":6},"perf":{"precision":1.0,"recall":0.8271484375,"f1":0.8994994588744596,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.640625,"distances_sum":2169.7119025606976}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9476476648351654,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8046875,"distances_sum":2530.789882320033}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":12,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.950057234432235,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.75,"distances_sum":2539.503425078817}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9541552197802201,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8203125,"distances_sum":2588.595591131582}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.935983287545788,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7578125,"distances_sum":2422.7383427390837}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9321688727938732,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7109375,"distances_sum":2423.942205088587}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.922390630203131,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6640625,"distances_sum":2355.7936900783316}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":10,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9541552197802201,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8203125,"distances_sum":2588.595591131582}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":10,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9541552197802201,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8203125,"distances_sum":2588.595591131582}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8584545662670671,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.1171875,"distances_sum":1923.4513660916216}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.419921875,"f1":null,"seconds":4.036352038383484e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.2578125,"distances_sum":939.2604144009326}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8584545662670671,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.1171875,"distances_sum":1923.4513660916216}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.901019293206794,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.578125,"distances_sum":2195.8790187566574}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8310546875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8310546875,"f1":0.901019293206794,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.578125,"distances_sum":2195.8790187566574}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.95761217948718,"seconds":6.077811121940613e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9296875,"distances_sum":2559.2131994973533}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9368907134532137,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.84375,"distances_sum":2435.3319220566364}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9665006868131871,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.921875,"distances_sum":2654.575931745929}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9665006868131871,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.921875,"distances_sum":2654.575931745929}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9665006868131871,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.921875,"distances_sum":2654.575931745929}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44140625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.44140625,"f1":null,"seconds":3.861263394355774e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.328125,"distances_sum":993.6248746118408}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5810546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5810546875,"f1":0.7210846445221452,"seconds":4.176050424575806e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.8203125,"distances_sum":1341.1636918583288}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.719702363014221e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.9375,"distances_sum":889.0239997303523}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7784042346542354,"seconds":4.597008228302002e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.4609375,"distances_sum":1558.0779229912634}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65234375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.65234375,"f1":0.7784042346542354,"seconds":4.597008228302002e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.4609375,"distances_sum":1558.0779229912634}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9324664918414922,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":2431.4230925523066}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9234317765567773,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.828125,"distances_sum":2347.5391259265643}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8959108599733606,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.625,"distances_sum":2174.567481359251}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7841278513153522,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.4296875,"distances_sum":1565.839457435858}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9324664918414922,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":2431.4230925523066}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.970203754578755,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9453125,"distances_sum":2704.9488346090134}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.960697115384616,"seconds":6.2230974435806274e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8828125,"distances_sum":2619.478028594103}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9526842948717953,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.765625,"distances_sum":2589.920693197872}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9606227106227111,"seconds":6.459653377532959e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8828125,"distances_sum":2652.240324711676}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9673191391941397,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2663.297681123765}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.970203754578755,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9453125,"distances_sum":2704.9488346090134}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.970203754578755,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9453125,"distances_sum":2704.9488346090134}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.788183691308692,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":7.5546875,"distances_sum":1594.9985979519106}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.666015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.666015625,"f1":0.788183691308692,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":7.5546875,"distances_sum":1594.9985979519106}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8960882867132876,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.4453125,"distances_sum":2203.3576276834256}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.898048826173827,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.4609375,"distances_sum":2189.936308510866}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.898048826173827,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.4609375,"distances_sum":2189.936308510866}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9648637820512823,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.890625,"distances_sum":2655.0682290843733}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9673363095238097,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.890625,"distances_sum":2688.889747129826}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9638450091575095,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.859375,"distances_sum":2672.3498030945916}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9465373168498175,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.8046875,"distances_sum":2549.9704669876082}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9673363095238097,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.890625,"distances_sum":2688.889747129826}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9673363095238097,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.890625,"distances_sum":2688.889747129826}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3857421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3857421875,"f1":null,"seconds":3.693625330924988e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.265625,"distances_sum":733.8795219577742}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5478515625,"f1":null,"seconds":4.425644874572754e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.1015625,"distances_sum":1030.1765608047303}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5478515625,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5478515625,"f1":null,"seconds":4.425644874572754e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.1015625,"distances_sum":1030.1765608047303}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.933313561438562,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7890625,"distances_sum":1878.3903982450674}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.8974941724941731,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.703125,"distances_sum":1692.7578835608251}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7930328352203361,"seconds":4.4461339712142944e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.6171875,"distances_sum":1306.8187388707454}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.933313561438562,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7890625,"distances_sum":1878.3903982450674}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9502804487179493,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8046875,"distances_sum":1993.7553881460944}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9631581959706963,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8359375,"distances_sum":2102.952010981837}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9631581959706963,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8359375,"distances_sum":2102.952010981837}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9631581959706963,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8359375,"distances_sum":2102.952010981837}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.7996709887334894,"seconds":4.4852495193481445e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.65625,"distances_sum":1445.893792810444}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6845703125,"f1":0.7996709887334894,"seconds":4.4852495193481445e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.65625,"distances_sum":1445.893792810444}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8978136446886454,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2578125,"distances_sum":1895.5585935901206}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.8978136446886454,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2578125,"distances_sum":1895.5585935901206}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.960531135531136,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7890625,"distances_sum":2254.0629143826663}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9691048534798539,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.828125,"distances_sum":2332.544237774944}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9691048534798539,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.828125,"distances_sum":2332.544237774944}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9691048534798539,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.828125,"distances_sum":2332.544237774944}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1806640625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1806640625,"f1":null,"seconds":2.956017851829529e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":4.859375,"distances_sum":404.2506409324266}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1708984375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1708984375,"f1":null,"seconds":2.9224902391433716e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":4.90625,"distances_sum":390.98655107978954}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.521484375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.521484375,"f1":0.6694590132090137,"seconds":4.025176167488098e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":6.9375,"distances_sum":1026.1701064713397}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.521484375,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.521484375,"f1":0.6694590132090137,"seconds":4.025176167488098e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":6.9375,"distances_sum":1026.1701064713397}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.6983008311133316,"seconds":4.1425228118896484e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.234375,"distances_sum":1137.3012780094755}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8948520229770237,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.4140625,"distances_sum":1771.0865397363436}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8005463286713294,"seconds":4.542991518974304e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.9609375,"distances_sum":1381.415497580294}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.822265625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.822265625,"f1":0.8948520229770237,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.4140625,"distances_sum":1771.0865397363436}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9367502289377295,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.5703125,"distances_sum":2128.3846161239585}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9610920329670334,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8125,"distances_sum":2218.6798300070795}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9319742757242764,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7265625,"distances_sum":2003.5225653728087}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9610920329670334,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8125,"distances_sum":2218.6798300070795}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9610920329670334,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8125,"distances_sum":2218.6798300070795}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8674939643689653,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.765625,"distances_sum":1757.6604913000301}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.873589431401932,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7734375,"distances_sum":1795.7508168375743}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.375,"distances_sum":431.47005382553044}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.873589431401932,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7734375,"distances_sum":1795.7508168375743}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.927844551282052,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8046875,"distances_sum":2059.8715040887428}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9411000457875464,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.890625,"distances_sum":2149.594810437702}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9253891941391948,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.734375,"distances_sum":2040.0018251232307}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9411000457875464,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.890625,"distances_sum":2149.594810437702}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764880952380954,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.953125,"distances_sum":2407.4223429343083}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622996794871799,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.921875,"distances_sum":2304.2106795287978}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9548222610722615,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.921875,"distances_sum":2243.855454432665}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679315476190481,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9140625,"distances_sum":2364.1425532348244}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764880952380954,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.953125,"distances_sum":2407.4223429343083}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764880952380954,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.953125,"distances_sum":2407.4223429343083}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8124380827505835,"seconds":4.855915904045105e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.2265625,"distances_sum":1403.7699724699182}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.69921875,"f1":0.8124380827505835,"seconds":4.855915904045105e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.2265625,"distances_sum":1403.7699724699182}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9447802197802204,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.78125,"distances_sum":2112.811809233198}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9502117673992678,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7890625,"distances_sum":2164.9965802011548}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9502117673992678,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7890625,"distances_sum":2164.9965802011548}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667983058608063,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9375,"distances_sum":2242.350782095042}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9770089285714288,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9296875,"distances_sum":2335.808650491797}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9761561355311359,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.953125,"distances_sum":2323.0384918558825}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9770089285714288,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9296875,"distances_sum":2335.808650491797}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9770089285714288,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9296875,"distances_sum":2335.808650491797}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8147784507159516,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":4.148110747337341e-6,"evaluations":8.6328125,"distances_sum":1499.9763555780728}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69921875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.69921875,"f1":0.8147784507159516,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":4.148110747337341e-6,"evaluations":8.6328125,"distances_sum":1499.9763555780728}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9484432234432238,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":4.148110747337341e-6,"evaluations":8.8359375,"distances_sum":2098.9711371805693}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9484432234432238,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":4.148110747337341e-6,"evaluations":8.8359375,"distances_sum":2098.9711371805693}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9484432234432238,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":4.148110747337341e-6,"evaluations":8.8359375,"distances_sum":2098.9711371805693}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9072265625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9484432234432238,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":4.148110747337341e-6,"evaluations":8.8359375,"distances_sum":2098.9711371805693}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3876953125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3876953125,"f1":null,"seconds":3.7178397178649902e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":5.9453125,"distances_sum":904.5085736347256}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5478515625,"f1":0.6908591408591416,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":7.0859375,"distances_sum":1249.52897533599}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8605659965034973,"seconds":5.031004548072815e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.234375,"distances_sum":1789.8806566075698}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8605659965034973,"seconds":5.031004548072815e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.234375,"distances_sum":1789.8806566075698}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9506753663003666,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.7421875,"distances_sum":2359.8965037133753}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9039413711288716,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.640625,"distances_sum":2045.8204177806933}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9584878663003668,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.8125,"distances_sum":2415.8099243415318}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9377346611721619,"seconds":6.495043635368347e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.671875,"distances_sum":2250.3043821632727}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9584878663003668,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.8125,"distances_sum":2415.8099243415318}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9700148809523812,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.828125,"distances_sum":2492.2348029255827}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9700148809523812,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.828125,"distances_sum":2492.2348029255827}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9700148809523812,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.828125,"distances_sum":2492.2348029255827}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.525390625,"f1":0.675633394383395,"seconds":4.414469003677368e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.0,"distances_sum":1060.4711522525154}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2421875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2421875,"f1":null,"seconds":3.207474946975708e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.2890625,"distances_sum":580.565866543518}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.525390625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.525390625,"f1":0.675633394383395,"seconds":4.414469003677368e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.0,"distances_sum":1060.4711522525154}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8656603812853823,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.671875,"distances_sum":1734.686299454277}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.923855311355312,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":2054.2380726870215}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.923855311355312,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":2054.2380726870215}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658138736263742,"seconds":6.7837536334991455e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9296875,"distances_sum":2372.671288300957}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9719894688644694,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9609375,"distances_sum":2425.1993142504034}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.934495192307693,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.84375,"distances_sum":2119.454082635433}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9719894688644694,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9609375,"distances_sum":2425.1993142504034}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9719894688644694,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9609375,"distances_sum":2425.1993142504034}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8513595779220787,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.5,"distances_sum":1705.5422748778267}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7815328768453775,"seconds":4.606321454048157e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.9921875,"distances_sum":1440.1235281800268}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8513595779220787,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.5,"distances_sum":1705.5422748778267}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9517170329670334,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8359375,"distances_sum":2298.814614855798}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9517170329670334,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8359375,"distances_sum":2298.814614855798}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9699233058608063,"seconds":6.666406989097595e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8671875,"distances_sum":2452.709013740684}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.977008928571429,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9609375,"distances_sum":2473.5426835982407}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.977008928571429,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9609375,"distances_sum":2473.5426835982407}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.977008928571429,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9609375,"distances_sum":2473.5426835982407}}, n: 9
mean(cfft.distances) = 0.3343657323969983
mean(cdnet.distances) = 0.36355417555768527
mean(crand.distances) = 0.34945798760077107
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8688888888888889
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8622222222222223
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8688888888888889
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8288888888888889
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9088888888888889
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9466666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8822222222222221
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.931111111111111
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8555555555555555
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8955555555555555
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8688888888888888
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8999999999999999
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.851111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9133333333333334
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8577777777777778
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 2, 3, 3, 1, 1, 3, 3, 2, 3, 1, 3, 2, 3, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 8, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 3, 2, 1, 3, 2, 3, 1]
acc = 0.92
*** finished computation of 12 references, err: [Inf, 0.6301050627231598] ***
*** center 1: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.2271659180454493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2271659180454493, 0.2048273570947461] ***
*** starting iteration: 2; err: [Inf, 0.2271659180454493, 0.2048273570947461] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2271659180454493, 0.2048273570947461, 0.2001209871119095] ***
*** starting iteration: 3; err: [Inf, 0.2271659180454493, 0.2048273570947461, 0.2001209871119095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2271659180454493, 0.2048273570947461, 0.2001209871119095, 0.19788127966426514] ***
*** finished computation of 7 references, err: [Inf, 0.2271659180454493, 0.2048273570947461, 0.2001209871119095, 0.19788127966426514] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 66, 20]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 66), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [99, 16, 0]]
** centroid: 2, normalized-entropy: 0.5819569606149722, [(1, 99), (2, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [35, 19, 0]]
** centroid: 3, normalized-entropy: 0.9357110512652843, [(1, 35), (2, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 34, 0]]
** centroid: 4, normalized-entropy: 0.98811083652183, [(1, 44), (2, 34)]
*** center 5: selecting labels [1] (freq >= 2) [from [124, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [85, 2, 0]]
** centroid: 6, normalized-entropy: 0.15790637433488164, [(1, 85), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [23, 99, 0]]
** centroid: 7, normalized-entropy: 0.6983747934875366, [(1, 23), (2, 99)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2385111844611799] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2385111844611799, 0.18839091801520874] ***
*** starting iteration: 2; err: [Inf, 0.2385111844611799, 0.18839091801520874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2385111844611799, 0.18839091801520874, 0.18337868012113123] ***
*** starting iteration: 3; err: [Inf, 0.2385111844611799, 0.18839091801520874, 0.18337868012113123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2385111844611799, 0.18839091801520874, 0.18337868012113123, 0.18182634760719352] ***
*** finished computation of 7 references, err: [Inf, 0.2385111844611799, 0.18839091801520874, 0.18337868012113123, 0.18182634760719352] ***
*** center 1: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [91, 16, 0]]
** centroid: 2, normalized-entropy: 0.6086696755779567, [(1, 91), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 42, 20]]
** centroid: 3, normalized-entropy: 0.9071657675730821, [(2, 42), (3, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [99, 5, 0]]
** centroid: 5, normalized-entropy: 0.2781710079264946, [(1, 99), (2, 5)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 94, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [9, 79, 0]]
** centroid: 7, normalized-entropy: 0.4761588445580706, [(1, 9), (2, 79)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22897562702679294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22897562702679294, 0.1909203740951048] ***
*** starting iteration: 2; err: [Inf, 0.22897562702679294, 0.1909203740951048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22897562702679294, 0.1909203740951048, 0.18533086550395483] ***
*** starting iteration: 3; err: [Inf, 0.22897562702679294, 0.1909203740951048, 0.18533086550395483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22897562702679294, 0.1909203740951048, 0.18533086550395483, 0.18442705707419302] ***
*** finished computation of 7 references, err: [Inf, 0.22897562702679294, 0.1909203740951048, 0.18533086550395483, 0.18442705707419302] ***
*** center 1: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 56, 23]]
** centroid: 2, normalized-entropy: 0.8701883352082787, [(2, 56), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [97, 5, 0]]
** centroid: 4, normalized-entropy: 0.28221763445592507, [(1, 97), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [9, 89, 0]]
** centroid: 5, normalized-entropy: 0.442571064839798, [(1, 9), (2, 89)]
*** center 6: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [14, 75, 0]]
** centroid: 7, normalized-entropy: 0.6278191534832795, [(1, 14), (2, 75)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21561678236411855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21561678236411855, 0.19120002246770387] ***
*** starting iteration: 2; err: [Inf, 0.21561678236411855, 0.19120002246770387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21561678236411855, 0.19120002246770387, 0.1880896362392972] ***
*** starting iteration: 3; err: [Inf, 0.21561678236411855, 0.19120002246770387, 0.1880896362392972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21561678236411855, 0.19120002246770387, 0.1880896362392972, 0.18754068097990492] ***
*** finished computation of 7 references, err: [Inf, 0.21561678236411855, 0.19120002246770387, 0.1880896362392972, 0.18754068097990492] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [65, 49, 0]]
** centroid: 1, normalized-entropy: 0.9857436088270686, [(1, 65), (2, 49)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [74, 19, 0]]
** centroid: 2, normalized-entropy: 0.7304472862481346, [(1, 74), (2, 19)]
*** center 3: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 109, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 57, 25]]
** centroid: 5, normalized-entropy: 0.8871723027673716, [(2, 57), (3, 25)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [97, 2, 0]]
** centroid: 6, normalized-entropy: 0.14257333025989857, [(1, 97), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [82, 3, 0]]
** centroid: 7, normalized-entropy: 0.22028326695127437, [(1, 82), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3820275302735848] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3820275302735848, 0.3029775655221518] ***
*** starting iteration: 2; err: [Inf, 0.3820275302735848, 0.3029775655221518] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3820275302735848, 0.3029775655221518, 0.29596754246287876] ***
*** starting iteration: 3; err: [Inf, 0.3820275302735848, 0.3029775655221518, 0.29596754246287876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3820275302735848, 0.3029775655221518, 0.29596754246287876, 0.2952538194923519] ***
*** finished computation of 3 references, err: [Inf, 0.3820275302735848, 0.3029775655221518, 0.29596754246287876, 0.2952538194923519] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [107, 157, 20]]
** centroid: 1, normalized-entropy: 0.8030962539016695, [(1, 107), (2, 157), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [186, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [117, 79, 0]]
** centroid: 3, normalized-entropy: 0.9727131538231193, [(1, 117), (2, 79)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4479522728060988] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4479522728060988, 0.2958250871316336] ***
*** starting iteration: 2; err: [Inf, 0.4479522728060988, 0.2958250871316336] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4479522728060988, 0.2958250871316336, 0.29419977909911876] ***
*** starting iteration: 3; err: [Inf, 0.4479522728060988, 0.2958250871316336, 0.29419977909911876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4479522728060988, 0.2958250871316336, 0.29419977909911876, 0.2936217243513693] ***
*** finished computation of 3 references, err: [Inf, 0.4479522728060988, 0.2958250871316336, 0.29419977909911876, 0.2936217243513693] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [266, 2, 0]]
** centroid: 1, normalized-entropy: 0.06345811641554701, [(1, 266), (2, 2)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [3, 165, 23]]
** centroid: 2, normalized-entropy: 0.4064671728671351, [(1, 3), (2, 165), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [150, 58, 0]]
** centroid: 3, normalized-entropy: 0.8538738465459897, [(1, 150), (2, 58)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4862881109252505] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4862881109252505, 0.2966063020156062] ***
*** starting iteration: 2; err: [Inf, 0.4862881109252505, 0.2966063020156062] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4862881109252505, 0.2966063020156062, 0.29405008405279454] ***
*** starting iteration: 3; err: [Inf, 0.4862881109252505, 0.2966063020156062, 0.29405008405279454] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4862881109252505, 0.2966063020156062, 0.29405008405279454, 0.292800827423806] ***
*** finished computation of 3 references, err: [Inf, 0.4862881109252505, 0.2966063020156062, 0.29405008405279454, 0.292800827423806] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [238, 15, 0]]
** centroid: 1, normalized-entropy: 0.32461418101281475, [(1, 238), (2, 15)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [165, 42, 0]]
** centroid: 2, normalized-entropy: 0.7276874545656657, [(1, 165), (2, 42)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 182, 25]]
** centroid: 3, normalized-entropy: 0.5315786035837172, [(2, 182), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31051651611868236] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31051651611868236, 0.2418327249388012] ***
*** starting iteration: 2; err: [Inf, 0.31051651611868236, 0.2418327249388012] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31051651611868236, 0.2418327249388012, 0.23248824468805446] ***
*** starting iteration: 3; err: [Inf, 0.31051651611868236, 0.2418327249388012, 0.23248824468805446] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31051651611868236, 0.2418327249388012, 0.23248824468805446, 0.2312881062045] ***
*** finished computation of 3 references, err: [Inf, 0.31051651611868236, 0.2418327249388012, 0.23248824468805446, 0.2312881062045] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [261, 19, 0]]
** centroid: 1, normalized-entropy: 0.3578755603015093, [(1, 261), (2, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [149, 41, 0]]
** centroid: 2, normalized-entropy: 0.7524043360246135, [(1, 149), (2, 41)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 176, 20]]
** centroid: 3, normalized-entropy: 0.47543164626872053, [(2, 176), (3, 20)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35647600899119564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35647600899119564, 0.23681519894177902] ***
*** starting iteration: 2; err: [Inf, 0.35647600899119564, 0.23681519894177902] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35647600899119564, 0.23681519894177902, 0.2345494922743398] ***
*** starting iteration: 3; err: [Inf, 0.35647600899119564, 0.23681519894177902, 0.2345494922743398] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35647600899119564, 0.23681519894177902, 0.2345494922743398, 0.2341653862605053] ***
*** finished computation of 3 references, err: [Inf, 0.35647600899119564, 0.23681519894177902, 0.2345494922743398, 0.2341653862605053] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [112, 131, 17]]
** centroid: 1, normalized-entropy: 0.8069266343064061, [(1, 112), (2, 131), (3, 17)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [108, 94, 6]]
** centroid: 2, normalized-entropy: 0.7295807288822965, [(1, 108), (2, 94), (3, 6)]
*** center 3: selecting labels [1] (freq >= 1) [from [199, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38906782202009316] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38906782202009316, 0.23288324816261363] ***
*** starting iteration: 2; err: [Inf, 0.38906782202009316, 0.23288324816261363] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38906782202009316, 0.23288324816261363, 0.23242328831761228] ***
*** finished computation of 3 references, err: [Inf, 0.38906782202009316, 0.23288324816261363, 0.23242328831761228] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [238, 25, 0]]
** centroid: 1, normalized-entropy: 0.4531279915293417, [(1, 238), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [165, 45, 0]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(1, 165), (2, 45)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 169, 25]]
** centroid: 3, normalized-entropy: 0.5543199067435336, [(2, 169), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2586536074735816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2586536074735816, 0.20082892867913846] ***
*** starting iteration: 2; err: [Inf, 0.2586536074735816, 0.20082892867913846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2586536074735816, 0.20082892867913846, 0.19396075566935966] ***
*** starting iteration: 3; err: [Inf, 0.2586536074735816, 0.20082892867913846, 0.19396075566935966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2586536074735816, 0.20082892867913846, 0.19396075566935966, 0.19044572590659004] ***
*** finished computation of 7 references, err: [Inf, 0.2586536074735816, 0.20082892867913846, 0.19396075566935966, 0.19044572590659004] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 102, 23]]
** centroid: 1, normalized-entropy: 0.6887498056988564, [(2, 102), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [81, 45, 0]]
** centroid: 2, normalized-entropy: 0.940285958670631, [(1, 81), (2, 45)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [60, 26, 0]]
** centroid: 3, normalized-entropy: 0.8841151220488478, [(1, 60), (2, 26)]
*** center 4: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [21, 52, 0]]
** centroid: 5, normalized-entropy: 0.8656939941993219, [(1, 21), (2, 52)]
*** center 6: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21899072848319046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21899072848319046, 0.19116457178630214] ***
*** starting iteration: 2; err: [Inf, 0.21899072848319046, 0.19116457178630214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21899072848319046, 0.19116457178630214, 0.18983794693909084] ***
*** starting iteration: 3; err: [Inf, 0.21899072848319046, 0.19116457178630214, 0.18983794693909084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21899072848319046, 0.19116457178630214, 0.18983794693909084, 0.18892753899036005] ***
*** finished computation of 7 references, err: [Inf, 0.21899072848319046, 0.19116457178630214, 0.18983794693909084, 0.18892753899036005] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 69, 25]]
** centroid: 1, normalized-entropy: 0.8356038276131503, [(2, 69), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [4, 109, 0]]
** centroid: 2, normalized-entropy: 0.22077992347107292, [(1, 4), (2, 109)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [78, 19, 0]]
** centroid: 3, normalized-entropy: 0.7136036068604937, [(1, 78), (2, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [84, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [79, 41, 0]]
** centroid: 6, normalized-entropy: 0.926404668147414, [(1, 79), (2, 41)]
*** center 7: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2766740359505778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2766740359505778, 0.19594720585723394] ***
*** finished computation of 7 references, err: [Inf, 0.2766740359505778, 0.19594720585723394] ***
*** center 1: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 72, 20]]
** centroid: 3, normalized-entropy: 0.7553754125614286, [(2, 72), (3, 20)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [64, 46, 0]]
** centroid: 4, normalized-entropy: 0.980597440991727, [(1, 64), (2, 46)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [85, 15, 0]]
** centroid: 5, normalized-entropy: 0.6098403047164005, [(1, 85), (2, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [21, 103, 0]]
** centroid: 7, normalized-entropy: 0.6562267928205406, [(1, 21), (2, 103)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2570226220969066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2570226220969066, 0.19943494501215095] ***
*** finished computation of 7 references, err: [Inf, 0.2570226220969066, 0.19943494501215095] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [99, 7, 0]]
** centroid: 1, normalized-entropy: 0.3509601730322126, [(1, 99), (2, 7)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [2, 132, 23]]
** centroid: 2, normalized-entropy: 0.43945466483530626, [(1, 2), (2, 132), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [77, 5, 0]]
** centroid: 3, normalized-entropy: 0.3313056130577883, [(1, 77), (2, 5)]
*** center 4: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [16, 44, 0]]
** centroid: 5, normalized-entropy: 0.8366407419411671, [(1, 16), (2, 44)]
*** center 6: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [52, 37, 0]]
** centroid: 7, normalized-entropy: 0.9794116346561961, [(1, 52), (2, 37)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2630853773104488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2630853773104488, 0.21276284750366675] ***
*** finished computation of 7 references, err: [Inf, 0.2630853773104488, 0.21276284750366675] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [76, 54, 0]]
** centroid: 1, normalized-entropy: 0.9792415350396869, [(1, 76), (2, 54)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 129, 25]]
** centroid: 2, normalized-entropy: 0.6398727699548501, [(2, 129), (3, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [44, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [91, 7, 0]]
** centroid: 5, normalized-entropy: 0.3712323266408756, [(1, 91), (2, 7)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [58, 7, 0]]
** centroid: 6, normalized-entropy: 0.49291577961610966, [(1, 58), (2, 7)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [62, 42, 0]]
** centroid: 7, normalized-entropy: 0.9731560354421095, [(1, 62), (2, 42)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3159938596990295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3159938596990295, 0.24184639955865214] ***
*** starting iteration: 2; err: [Inf, 0.3159938596990295, 0.24184639955865214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363] ***
*** starting iteration: 3; err: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363, 0.21967231397385578] ***
*** starting iteration: 4; err: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363, 0.21967231397385578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363, 0.21967231397385578, 0.20367872412875854] ***
*** starting iteration: 5; err: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363, 0.21967231397385578, 0.20367872412875854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363, 0.21967231397385578, 0.20367872412875854, 0.19863731163839163] ***
*** starting iteration: 6; err: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363, 0.21967231397385578, 0.20367872412875854, 0.19863731163839163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363, 0.21967231397385578, 0.20367872412875854, 0.19863731163839163, 0.19560094836500805] ***
*** starting iteration: 7; err: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363, 0.21967231397385578, 0.20367872412875854, 0.19863731163839163, 0.19560094836500805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363, 0.21967231397385578, 0.20367872412875854, 0.19863731163839163, 0.19560094836500805, 0.19368240117394664] ***
*** starting iteration: 8; err: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363, 0.21967231397385578, 0.20367872412875854, 0.19863731163839163, 0.19560094836500805, 0.19368240117394664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363, 0.21967231397385578, 0.20367872412875854, 0.19863731163839163, 0.19560094836500805, 0.19368240117394664, 0.19230397591610682] ***
*** starting iteration: 9; err: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363, 0.21967231397385578, 0.20367872412875854, 0.19863731163839163, 0.19560094836500805, 0.19368240117394664, 0.19230397591610682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363, 0.21967231397385578, 0.20367872412875854, 0.19863731163839163, 0.19560094836500805, 0.19368240117394664, 0.19230397591610682, 0.19134083151392214] ***
*** finished computation of 7 references, err: [Inf, 0.3159938596990295, 0.24184639955865214, 0.22918093309027363, 0.21967231397385578, 0.20367872412875854, 0.19863731163839163, 0.19560094836500805, 0.19368240117394664, 0.19230397591610682, 0.19134083151392214] ***
*** center 1: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [54, 34, 0]]
** centroid: 2, normalized-entropy: 0.9624127354629922, [(1, 54), (2, 34)]
*** center 3: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [76, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [94, 25, 0]]
** centroid: 5, normalized-entropy: 0.7416433363998257, [(1, 94), (2, 25)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [45, 57, 0]]
** centroid: 6, normalized-entropy: 0.9899927915575186, [(1, 45), (2, 57)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 119, 20]]
** centroid: 7, normalized-entropy: 0.5943232617062951, [(2, 119), (3, 20)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22145014883729738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22145014883729738, 0.19497602736117314] ***
*** starting iteration: 2; err: [Inf, 0.22145014883729738, 0.19497602736117314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22145014883729738, 0.19497602736117314, 0.1914364300079007] ***
*** starting iteration: 3; err: [Inf, 0.22145014883729738, 0.19497602736117314, 0.1914364300079007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22145014883729738, 0.19497602736117314, 0.1914364300079007, 0.19102836258407832] ***
*** finished computation of 7 references, err: [Inf, 0.22145014883729738, 0.19497602736117314, 0.1914364300079007, 0.19102836258407832] ***
*** center 1: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [1, 90, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [76, 2, 0]]
** centroid: 3, normalized-entropy: 0.17203694935311387, [(1, 76), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [43, 36, 0]]
** centroid: 4, normalized-entropy: 0.9943290455933883, [(1, 43), (2, 36)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [121, 14, 0]]
** centroid: 5, normalized-entropy: 0.4806272961691095, [(1, 121), (2, 14)]
*** center 6: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 83, 23]]
** centroid: 7, normalized-entropy: 0.7546167018169155, [(2, 83), (3, 23)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.30553418752560013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30553418752560013, 0.22674533705097222] ***
*** starting iteration: 2; err: [Inf, 0.30553418752560013, 0.22674533705097222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447] ***
*** starting iteration: 3; err: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447, 0.20339571826182296] ***
*** starting iteration: 4; err: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447, 0.20339571826182296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447, 0.20339571826182296, 0.19738191961222837] ***
*** starting iteration: 5; err: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447, 0.20339571826182296, 0.19738191961222837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447, 0.20339571826182296, 0.19738191961222837, 0.19441215769908596] ***
*** starting iteration: 6; err: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447, 0.20339571826182296, 0.19738191961222837, 0.19441215769908596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447, 0.20339571826182296, 0.19738191961222837, 0.19441215769908596, 0.1930794797284805] ***
*** starting iteration: 7; err: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447, 0.20339571826182296, 0.19738191961222837, 0.19441215769908596, 0.1930794797284805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447, 0.20339571826182296, 0.19738191961222837, 0.19441215769908596, 0.1930794797284805, 0.19081292476370998] ***
*** starting iteration: 8; err: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447, 0.20339571826182296, 0.19738191961222837, 0.19441215769908596, 0.1930794797284805, 0.19081292476370998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447, 0.20339571826182296, 0.19738191961222837, 0.19441215769908596, 0.1930794797284805, 0.19081292476370998, 0.18926440526883506] ***
*** starting iteration: 9; err: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447, 0.20339571826182296, 0.19738191961222837, 0.19441215769908596, 0.1930794797284805, 0.19081292476370998, 0.18926440526883506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447, 0.20339571826182296, 0.19738191961222837, 0.19441215769908596, 0.1930794797284805, 0.19081292476370998, 0.18926440526883506, 0.1886820972714199] ***
*** finished computation of 7 references, err: [Inf, 0.30553418752560013, 0.22674533705097222, 0.21202299570332447, 0.20339571826182296, 0.19738191961222837, 0.19441215769908596, 0.1930794797284805, 0.19081292476370998, 0.18926440526883506, 0.1886820972714199] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [21, 54, 0]]
** centroid: 1, normalized-entropy: 0.8554508105601307, [(1, 21), (2, 54)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [69, 32, 0]]
** centroid: 2, normalized-entropy: 0.9009026954478971, [(1, 69), (2, 32)]
*** center 3: selecting labels [1] (freq >= 2) [from [118, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [102, 7, 0]]
** centroid: 4, normalized-entropy: 0.3439745143595339, [(1, 102), (2, 7)]
*** center 5: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 88, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 58, 25]]
** centroid: 7, normalized-entropy: 0.8827586787955116, [(2, 58), (3, 25)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38364799869562816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38364799869562816, 0.25896848111071513] ***
*** starting iteration: 2; err: [Inf, 0.38364799869562816, 0.25896848111071513] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38364799869562816, 0.25896848111071513, 0.23639487369439086] ***
*** starting iteration: 3; err: [Inf, 0.38364799869562816, 0.25896848111071513, 0.23639487369439086] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38364799869562816, 0.25896848111071513, 0.23639487369439086, 0.2326421989575476] ***
*** starting iteration: 4; err: [Inf, 0.38364799869562816, 0.25896848111071513, 0.23639487369439086, 0.2326421989575476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38364799869562816, 0.25896848111071513, 0.23639487369439086, 0.2326421989575476, 0.23164814344520593] ***
*** finished computation of 3 references, err: [Inf, 0.38364799869562816, 0.25896848111071513, 0.23639487369439086, 0.2326421989575476, 0.23164814344520593] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [267, 3, 0]]
** centroid: 1, normalized-entropy: 0.08807225904068142, [(1, 267), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [137, 59, 0]]
** centroid: 2, normalized-entropy: 0.8825346641257145, [(1, 137), (2, 59)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [6, 174, 20]]
** centroid: 3, normalized-entropy: 0.4156272868135542, [(1, 6), (2, 174), (3, 20)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3360933630602962] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3360933630602962, 0.24825472116813824] ***
*** starting iteration: 2; err: [Inf, 0.3360933630602962, 0.24825472116813824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3360933630602962, 0.24825472116813824, 0.23822367917104015] ***
*** starting iteration: 3; err: [Inf, 0.3360933630602962, 0.24825472116813824, 0.23822367917104015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3360933630602962, 0.24825472116813824, 0.23822367917104015, 0.23493082800285256] ***
*** starting iteration: 4; err: [Inf, 0.3360933630602962, 0.24825472116813824, 0.23822367917104015, 0.23493082800285256] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3360933630602962, 0.24825472116813824, 0.23822367917104015, 0.23493082800285256, 0.23446972032162783] ***
*** finished computation of 3 references, err: [Inf, 0.3360933630602962, 0.24825472116813824, 0.23822367917104015, 0.23493082800285256, 0.23446972032162783] ***
*** center 1: selecting labels [1] (freq >= 1) [from [205, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [103, 114, 12]]
** centroid: 2, normalized-entropy: 0.7838382010166233, [(1, 103), (2, 114), (3, 12)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [111, 111, 11]]
** centroid: 3, normalized-entropy: 0.7742870168896185, [(1, 111), (2, 111), (3, 11)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3343088832373886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3343088832373886, 0.23518919413616096] ***
*** starting iteration: 2; err: [Inf, 0.3343088832373886, 0.23518919413616096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3343088832373886, 0.23518919413616096, 0.2337317526077983] ***
*** starting iteration: 3; err: [Inf, 0.3343088832373886, 0.23518919413616096, 0.2337317526077983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3343088832373886, 0.23518919413616096, 0.2337317526077983, 0.23325031136219826] ***
*** finished computation of 3 references, err: [Inf, 0.3343088832373886, 0.23518919413616096, 0.2337317526077983, 0.23325031136219826] ***
*** center 1: selecting labels [1] (freq >= 1) [from [237, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [36, 170, 25]]
** centroid: 2, normalized-entropy: 0.6881336814857643, [(1, 36), (2, 170), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [130, 69, 0]]
** centroid: 3, normalized-entropy: 0.9311170667175546, [(1, 130), (2, 69)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2988818109485771] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2988818109485771, 0.2531795162209743] ***
*** finished computation of 3 references, err: [Inf, 0.2988818109485771, 0.2531795162209743] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [94, 134, 9]]
** centroid: 1, normalized-entropy: 0.7403854741743578, [(1, 94), (2, 134), (3, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [253, 6, 0]]
** centroid: 2, normalized-entropy: 0.15886562590281886, [(1, 253), (2, 6)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [63, 96, 11]]
** centroid: 3, normalized-entropy: 0.7898411995898641, [(1, 63), (2, 96), (3, 11)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3036112675577335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3036112675577335, 0.2488401835250935] ***
*** finished computation of 3 references, err: [Inf, 0.3036112675577335, 0.2488401835250935] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [137, 50, 0]]
** centroid: 1, normalized-entropy: 0.8376794606666293, [(1, 137), (2, 50)]
*** center 2: selecting labels [1] (freq >= 1) [from [155, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [127, 175, 23]]
** centroid: 3, normalized-entropy: 0.8082294499385553, [(1, 127), (2, 175), (3, 23)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.28566886160126154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28566886160126154, 0.273515527757971] ***
*** finished computation of 3 references, err: [Inf, 0.28566886160126154, 0.273515527757971] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [73, 131, 23]]
** centroid: 1, normalized-entropy: 0.8320183939366975, [(1, 73), (2, 131), (3, 23)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [229, 101, 2]]
** centroid: 2, normalized-entropy: 0.5907480115661746, [(1, 229), (2, 101), (3, 2)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [101, 7, 0]]
** centroid: 3, normalized-entropy: 0.34626857427148255, [(1, 101), (2, 7)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23959473697202946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23959473697202946, 0.17880822717863787] ***
*** finished computation of 7 references, err: [Inf, 0.23959473697202946, 0.17880822717863787] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 69, 3]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 69), (3, 3)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [132, 77, 0]]
** centroid: 2, normalized-entropy: 0.9494520153879484, [(1, 132), (2, 77)]
*** center 3: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 22, 17]]
** centroid: 4, normalized-entropy: 0.98811083652183, [(2, 22), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [18, 9, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 18), (2, 9)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [8, 59, 0]]
** centroid: 6, normalized-entropy: 0.52764232609436, [(1, 8), (2, 59)]
*** center 7: selecting labels [1] (freq >= 2) [from [168, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24951871264306338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24951871264306338, 0.19221200523102122] ***
*** finished computation of 7 references, err: [Inf, 0.24951871264306338, 0.19221200523102122] ***
*** center 1: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [25, 91, 0]]
** centroid: 2, normalized-entropy: 0.7518972278650765, [(1, 25), (2, 91)]
*** center 3: selecting labels [1] (freq >= 2) [from [208, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 51, 15]]
** centroid: 4, normalized-entropy: 0.7732266742876346, [(2, 51), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [126, 11, 0]]
** centroid: 5, normalized-entropy: 0.4032071328437401, [(1, 126), (2, 11)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 50, 8]]
** centroid: 6, normalized-entropy: 0.5787946246321198, [(2, 50), (3, 8)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [33, 22, 0]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(1, 33), (2, 22)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2066559624820501] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2066559624820501, 0.17089794019189686] ***
*** finished computation of 7 references, err: [Inf, 0.2066559624820501, 0.17089794019189686] ***
*** center 1: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [1, 128, 25]]
** centroid: 2, normalized-entropy: 0.6423786613569126, [(2, 128), (3, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [137, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [10, 33, 0]]
** centroid: 4, normalized-entropy: 0.7824441294066888, [(1, 10), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [79, 9, 0]]
** centroid: 5, normalized-entropy: 0.4761588445580706, [(1, 79), (2, 9)]
*** center 6: selecting labels [1] (freq >= 2) [from [116, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [6, 69, 0]]
** centroid: 7, normalized-entropy: 0.4021791902022729, [(1, 6), (2, 69)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2441344646172033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2441344646172033, 0.205067733383469] ***
*** finished computation of 7 references, err: [Inf, 0.2441344646172033, 0.205067733383469] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [39, 92, 0]]
** centroid: 1, normalized-entropy: 0.8784734863246803, [(1, 39), (2, 92)]
*** center 2: selecting labels [1] (freq >= 1) [from [149, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [101, 27, 0]]
** centroid: 3, normalized-entropy: 0.7432709194035553, [(1, 101), (2, 27)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [4, 21, 0]]
** centroid: 4, normalized-entropy: 0.634309554640566, [(1, 4), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 8, 0]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(1, 44), (2, 8)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 78, 20]]
** centroid: 6, normalized-entropy: 0.7300166301457938, [(2, 78), (3, 20)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [73, 10, 0]]
** centroid: 7, normalized-entropy: 0.530744566923854, [(1, 73), (2, 10)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22910997182419846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22910997182419846, 0.1993489375692615] ***
*** finished computation of 7 references, err: [Inf, 0.22910997182419846, 0.1993489375692615] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 106, 23]]
** centroid: 1, normalized-entropy: 0.6763319595084449, [(2, 106), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [20, 42, 0]]
** centroid: 2, normalized-entropy: 0.9071657675730821, [(1, 20), (2, 42)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [83, 13, 0]]
** centroid: 3, normalized-entropy: 0.572108447204188, [(1, 83), (2, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [47, 9, 0]]
** centroid: 5, normalized-entropy: 0.6360156177392153, [(1, 47), (2, 9)]
*** center 6: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [86, 55, 0]]
** centroid: 7, normalized-entropy: 0.9648453017020795, [(1, 86), (2, 55)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2253830963857416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2253830963857416, 0.19925013809106026] ***
*** finished computation of 7 references, err: [Inf, 0.2253830963857416, 0.19925013809106026] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [63, 13, 0]]
** centroid: 1, normalized-entropy: 0.6601070987550468, [(1, 63), (2, 13)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [71, 40, 0]]
** centroid: 2, normalized-entropy: 0.9429819088696832, [(1, 71), (2, 40)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [78, 23, 0]]
** centroid: 3, normalized-entropy: 0.7740204128451942, [(1, 78), (2, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 56, 24]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(2, 56), (3, 24)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 107, 1]]
** centroid: 6, normalized-entropy: 0.07584150637714687, [(2, 107), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 12)
[0.9309938681196166, 0.9309698920477363, 0.9299898701096305, 0.9250088411765058, 0.919011826197455, 0.916011820203437, 0.9009938081794369, 0.88398877919836, 0.8709517901134668, 0.8530296763829698, 0.7790035544526562, 0.7259864655074236]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.9309938681196166
finished with 12
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 12)
[0.9309938681196166, 0.9309698920477363, 0.9299898701096305, 0.9250088411765058, 0.919011826197455, 0.916011820203437, 0.9009938081794369, 0.88398877919836, 0.8709517901134668, 0.8530296763829698, 0.7790035544526562, 0.7259864655074236]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.9309938681196166
finished with 12
iteration 3 finished
generating 4 configurations using top 12 configurations, starting with 12)
[0.9309938681196166, 0.9309698920477363, 0.9299898701096305, 0.9250088411765058, 0.919011826197455, 0.916011820203437, 0.9009938081794369, 0.88398877919836, 0.8709517901134668, 0.8530296763829698, 0.7790035544526562, 0.7259864655074236]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.9309938681196166
finished with 13
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.5344277808733575] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5344277808733575, 0.3334167132310726] ***
*** finished computation of 3 references, err: [Inf, 0.5344277808733575, 0.3334167132310726] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [98, 136, 20]]
** centroid: 1, normalized-entropy: 0.8210801511390885, [(1, 98), (2, 136), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [101, 99, 0]]
** centroid: 2, normalized-entropy: 0.9999278640456617, [(1, 101), (2, 99)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [211, 1, 0]]
** centroid: 3, normalized-entropy: 0.043241545048028976, [(1, 211), (2, 1)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3533557157801545] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3533557157801545, 0.3348960808249305] ***
*** finished computation of 3 references, err: [Inf, 0.3533557157801545, 0.3348960808249305] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [95, 112, 0]]
** centroid: 1, normalized-entropy: 0.9951293050264184, [(1, 95), (2, 112)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [234, 8, 0]]
** centroid: 2, normalized-entropy: 0.2095023100741126, [(1, 234), (2, 8)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [90, 105, 23]]
** centroid: 3, normalized-entropy: 0.8687141532980519, [(1, 90), (2, 105), (3, 23)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.37081885582738106] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37081885582738106, 0.3116200293415691] ***
*** finished computation of 3 references, err: [Inf, 0.37081885582738106, 0.3116200293415691] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [65, 124, 21]]
** centroid: 1, normalized-entropy: 0.8231489399728167, [(1, 65), (2, 124), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [259, 4, 0]]
** centroid: 2, normalized-entropy: 0.11362109381390893, [(1, 259), (2, 4)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [79, 111, 4]]
** centroid: 3, normalized-entropy: 0.6966383266441625, [(1, 79), (2, 111), (3, 4)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 13)
[0.9309938681196166, 0.9309698920477363, 0.9299898701096305, 0.9250088411765058, 0.919011826197455, 0.916011820203437, 0.9009938081794369, 0.88398877919836, 0.8709517901134668, 0.8530296763829698, 0.7969676263089437, 0.7790035544526562, 0.7259864655074236]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.9309938681196166
finished with 13
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 13)
[0.9309938681196166, 0.9309698920477363, 0.9299898701096305, 0.9250088411765058, 0.919011826197455, 0.916011820203437, 0.9009938081794369, 0.88398877919836, 0.8709517901134668, 0.8530296763829698, 0.7969676263089437, 0.7790035544526562, 0.7259864655074236]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.9309938681196166
finished with 14
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.21876047541423738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21876047541423738, 0.1963282434756423] ***
*** finished computation of 7 references, err: [Inf, 0.21876047541423738, 0.1963282434756423] ***
*** center 1: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 46, 17]]
** centroid: 2, normalized-entropy: 0.8412367762002599, [(2, 46), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [18, 69, 0]]
** centroid: 3, normalized-entropy: 0.7355085815538399, [(1, 18), (2, 69)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 78, 3]]
** centroid: 4, normalized-entropy: 0.22853814395352806, [(2, 78), (3, 3)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [80, 25, 0]]
** centroid: 5, normalized-entropy: 0.7918583525674836, [(1, 80), (2, 25)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [69, 18, 0]]
** centroid: 6, normalized-entropy: 0.7355085815538399, [(1, 69), (2, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [131, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24771836264871586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24771836264871586, 0.20677299597307572] ***
*** finished computation of 7 references, err: [Inf, 0.24771836264871586, 0.20677299597307572] ***
*** center 1: selecting labels [1] (freq >= 2) [from [143, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [145, 11, 0]]
** centroid: 2, normalized-entropy: 0.3678344890085574, [(1, 145), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 113, 22]]
** centroid: 3, normalized-entropy: 0.6413510165846328, [(2, 113), (3, 22)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [12, 52, 0]]
** centroid: 4, normalized-entropy: 0.6962122601251459, [(1, 12), (2, 52)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 49, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [44, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.34957459305218985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34957459305218985, 0.2385055722928476] ***
*** finished computation of 7 references, err: [Inf, 0.34957459305218985, 0.2385055722928476] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [49, 5, 0]]
** centroid: 1, normalized-entropy: 0.44506485705083854, [(1, 49), (2, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [103, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 25]]
** centroid: 3, normalized-entropy: 0.9890934397021431, [(2, 32), (3, 25)]
*** center 4: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [197, 23, 0]]
** centroid: 5, normalized-entropy: 0.48324092524185314, [(1, 197), (2, 23)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 55, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [7, 123, 0]]
** centroid: 7, normalized-entropy: 0.302515746788995, [(1, 7), (2, 123)]
finished with 8 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 14)
[0.9309938681196166, 0.9309698920477363, 0.9299898701096305, 0.9250088411765058, 0.919011826197455, 0.916011820203437, 0.9009938081794369, 0.8960307613002224, 0.88398877919836, 0.8709517901134668, 0.8530296763829698, 0.7969676263089437, 0.7790035544526562, 0.7259864655074236]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 2) => 0.9309938681196166
finished with 16
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.2508778204321973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2508778204321973, 0.1741203670725562] ***
*** starting iteration: 2; err: [Inf, 0.2508778204321973, 0.1741203670725562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2508778204321973, 0.1741203670725562, 0.1610111005054703] ***
*** starting iteration: 3; err: [Inf, 0.2508778204321973, 0.1741203670725562, 0.1610111005054703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2508778204321973, 0.1741203670725562, 0.1610111005054703, 0.15413775144133707] ***
*** starting iteration: 4; err: [Inf, 0.2508778204321973, 0.1741203670725562, 0.1610111005054703, 0.15413775144133707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2508778204321973, 0.1741203670725562, 0.1610111005054703, 0.15413775144133707, 0.15089115689231739] ***
*** starting iteration: 5; err: [Inf, 0.2508778204321973, 0.1741203670725562, 0.1610111005054703, 0.15413775144133707, 0.15089115689231739] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2508778204321973, 0.1741203670725562, 0.1610111005054703, 0.15413775144133707, 0.15089115689231739, 0.1489693769040537] ***
*** starting iteration: 6; err: [Inf, 0.2508778204321973, 0.1741203670725562, 0.1610111005054703, 0.15413775144133707, 0.15089115689231739, 0.1489693769040537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2508778204321973, 0.1741203670725562, 0.1610111005054703, 0.15413775144133707, 0.15089115689231739, 0.1489693769040537, 0.14818573205287125] ***
*** finished computation of 7 references, err: [Inf, 0.2508778204321973, 0.1741203670725562, 0.1610111005054703, 0.15413775144133707, 0.15089115689231739, 0.1489693769040537, 0.14818573205287125] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [92, 7, 0]]
** centroid: 1, normalized-entropy: 0.3685567775377064, [(1, 92), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [85, 45, 0]]
** centroid: 2, normalized-entropy: 0.9305861291319927, [(1, 85), (2, 45)]
*** center 3: selecting labels [2] (freq >= 2) [from [1, 83, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 98, 20]]
** centroid: 4, normalized-entropy: 0.656540281386946, [(2, 98), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [91, 3, 0]]
** centroid: 5, normalized-entropy: 0.2039058755048202, [(1, 91), (2, 3)]
*** center 6: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23010215631964012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23010215631964012, 0.19086794338762939] ***
*** starting iteration: 2; err: [Inf, 0.23010215631964012, 0.19086794338762939] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23010215631964012, 0.19086794338762939, 0.179920578674962] ***
*** starting iteration: 3; err: [Inf, 0.23010215631964012, 0.19086794338762939, 0.179920578674962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23010215631964012, 0.19086794338762939, 0.179920578674962, 0.16555861941073788] ***
*** starting iteration: 4; err: [Inf, 0.23010215631964012, 0.19086794338762939, 0.179920578674962, 0.16555861941073788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23010215631964012, 0.19086794338762939, 0.179920578674962, 0.16555861941073788, 0.1535996745720665] ***
*** starting iteration: 5; err: [Inf, 0.23010215631964012, 0.19086794338762939, 0.179920578674962, 0.16555861941073788, 0.1535996745720665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23010215631964012, 0.19086794338762939, 0.179920578674962, 0.16555861941073788, 0.1535996745720665, 0.14956073133230233] ***
*** starting iteration: 6; err: [Inf, 0.23010215631964012, 0.19086794338762939, 0.179920578674962, 0.16555861941073788, 0.1535996745720665, 0.14956073133230233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23010215631964012, 0.19086794338762939, 0.179920578674962, 0.16555861941073788, 0.1535996745720665, 0.14956073133230233, 0.14823499511413532] ***
*** starting iteration: 7; err: [Inf, 0.23010215631964012, 0.19086794338762939, 0.179920578674962, 0.16555861941073788, 0.1535996745720665, 0.14956073133230233, 0.14823499511413532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23010215631964012, 0.19086794338762939, 0.179920578674962, 0.16555861941073788, 0.1535996745720665, 0.14956073133230233, 0.14823499511413532, 0.14728501553520157] ***
*** finished computation of 7 references, err: [Inf, 0.23010215631964012, 0.19086794338762939, 0.179920578674962, 0.16555861941073788, 0.1535996745720665, 0.14956073133230233, 0.14823499511413532, 0.14728501553520157] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [81, 18, 0]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(1, 81), (2, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [78, 27, 0]]
** centroid: 2, normalized-entropy: 0.8224042259549892, [(1, 78), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [93, 12, 0]]
** centroid: 3, normalized-entropy: 0.5127091420308771, [(1, 93), (2, 12)]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 83, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 85, 23]]
** centroid: 7, normalized-entropy: 0.7471082932651727, [(2, 85), (3, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20695942549545993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20695942549545993, 0.16135972042566632] ***
*** starting iteration: 2; err: [Inf, 0.20695942549545993, 0.16135972042566632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20695942549545993, 0.16135972042566632, 0.15661177555492883] ***
*** starting iteration: 3; err: [Inf, 0.20695942549545993, 0.16135972042566632, 0.15661177555492883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20695942549545993, 0.16135972042566632, 0.15661177555492883, 0.153093829205067] ***
*** starting iteration: 4; err: [Inf, 0.20695942549545993, 0.16135972042566632, 0.15661177555492883, 0.153093829205067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20695942549545993, 0.16135972042566632, 0.15661177555492883, 0.153093829205067, 0.15145291072509154] ***
*** starting iteration: 5; err: [Inf, 0.20695942549545993, 0.16135972042566632, 0.15661177555492883, 0.153093829205067, 0.15145291072509154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20695942549545993, 0.16135972042566632, 0.15661177555492883, 0.153093829205067, 0.15145291072509154, 0.1502929245473641] ***
*** starting iteration: 6; err: [Inf, 0.20695942549545993, 0.16135972042566632, 0.15661177555492883, 0.153093829205067, 0.15145291072509154, 0.1502929245473641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20695942549545993, 0.16135972042566632, 0.15661177555492883, 0.153093829205067, 0.15145291072509154, 0.1502929245473641, 0.14895609393017717] ***
*** starting iteration: 7; err: [Inf, 0.20695942549545993, 0.16135972042566632, 0.15661177555492883, 0.153093829205067, 0.15145291072509154, 0.1502929245473641, 0.14895609393017717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20695942549545993, 0.16135972042566632, 0.15661177555492883, 0.153093829205067, 0.15145291072509154, 0.1502929245473641, 0.14895609393017717, 0.14832619765446683] ***
*** finished computation of 7 references, err: [Inf, 0.20695942549545993, 0.16135972042566632, 0.15661177555492883, 0.153093829205067, 0.15145291072509154, 0.1502929245473641, 0.14895609393017717, 0.14832619765446683] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 86, 25]]
** centroid: 1, normalized-entropy: 0.7695944821271463, [(2, 86), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 22, 0]]
** centroid: 2, normalized-entropy: 0.8249658680139929, [(1, 63), (2, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [68, 14, 0]]
** centroid: 3, normalized-entropy: 0.6593758812786991, [(1, 68), (2, 14)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [107, 6, 0]]
** centroid: 4, normalized-entropy: 0.2994113292359872, [(1, 107), (2, 6)]
*** center 5: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [75, 8, 0]]
** centroid: 6, normalized-entropy: 0.4574321808988397, [(1, 75), (2, 8)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 103, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2769021460305418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769021460305418, 0.23909172856223745] ***
*** starting iteration: 2; err: [Inf, 0.2769021460305418, 0.23909172856223745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769021460305418, 0.23909172856223745, 0.23041877828820892] ***
*** starting iteration: 3; err: [Inf, 0.2769021460305418, 0.23909172856223745, 0.23041877828820892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769021460305418, 0.23909172856223745, 0.23041877828820892, 0.2239076746180206] ***
*** starting iteration: 4; err: [Inf, 0.2769021460305418, 0.23909172856223745, 0.23041877828820892, 0.2239076746180206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769021460305418, 0.23909172856223745, 0.23041877828820892, 0.2239076746180206, 0.20880214295660457] ***
*** starting iteration: 5; err: [Inf, 0.2769021460305418, 0.23909172856223745, 0.23041877828820892, 0.2239076746180206, 0.20880214295660457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769021460305418, 0.23909172856223745, 0.23041877828820892, 0.2239076746180206, 0.20880214295660457, 0.19262603961362001] ***
*** starting iteration: 6; err: [Inf, 0.2769021460305418, 0.23909172856223745, 0.23041877828820892, 0.2239076746180206, 0.20880214295660457, 0.19262603961362001] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769021460305418, 0.23909172856223745, 0.23041877828820892, 0.2239076746180206, 0.20880214295660457, 0.19262603961362001, 0.19007236163576577] ***
*** starting iteration: 7; err: [Inf, 0.2769021460305418, 0.23909172856223745, 0.23041877828820892, 0.2239076746180206, 0.20880214295660457, 0.19262603961362001, 0.19007236163576577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769021460305418, 0.23909172856223745, 0.23041877828820892, 0.2239076746180206, 0.20880214295660457, 0.19262603961362001, 0.19007236163576577, 0.18926361492379112] ***
*** finished computation of 7 references, err: [Inf, 0.2769021460305418, 0.23909172856223745, 0.23041877828820892, 0.2239076746180206, 0.20880214295660457, 0.19262603961362001, 0.19007236163576577, 0.18926361492379112] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [100, 32, 0]]
** centroid: 1, normalized-entropy: 0.7990485210442682, [(1, 100), (2, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [27, 72, 0]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(1, 27), (2, 72)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 62, 5]]
** centroid: 4, normalized-entropy: 0.3829576722723533, [(2, 62), (3, 5)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 47, 15]]
** centroid: 5, normalized-entropy: 0.7982441335646697, [(2, 47), (3, 15)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [88, 23, 0]]
** centroid: 6, normalized-entropy: 0.7361103940132281, [(1, 88), (2, 23)]
*** center 7: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32491052964481637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32491052964481637, 0.2488211625572601] ***
*** starting iteration: 2; err: [Inf, 0.32491052964481637, 0.2488211625572601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497] ***
*** starting iteration: 3; err: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497, 0.20732211527823732] ***
*** starting iteration: 4; err: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497, 0.20732211527823732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497, 0.20732211527823732, 0.19984910852517346] ***
*** starting iteration: 5; err: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497, 0.20732211527823732, 0.19984910852517346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497, 0.20732211527823732, 0.19984910852517346, 0.19539198659903564] ***
*** starting iteration: 6; err: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497, 0.20732211527823732, 0.19984910852517346, 0.19539198659903564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497, 0.20732211527823732, 0.19984910852517346, 0.19539198659903564, 0.19209051230640292] ***
*** starting iteration: 7; err: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497, 0.20732211527823732, 0.19984910852517346, 0.19539198659903564, 0.19209051230640292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497, 0.20732211527823732, 0.19984910852517346, 0.19539198659903564, 0.19209051230640292, 0.19041842401077946] ***
*** starting iteration: 8; err: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497, 0.20732211527823732, 0.19984910852517346, 0.19539198659903564, 0.19209051230640292, 0.19041842401077946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497, 0.20732211527823732, 0.19984910852517346, 0.19539198659903564, 0.19209051230640292, 0.19041842401077946, 0.1892414876389718] ***
*** starting iteration: 9; err: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497, 0.20732211527823732, 0.19984910852517346, 0.19539198659903564, 0.19209051230640292, 0.19041842401077946, 0.1892414876389718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497, 0.20732211527823732, 0.19984910852517346, 0.19539198659903564, 0.19209051230640292, 0.19041842401077946, 0.1892414876389718, 0.1887391191115533] ***
*** finished computation of 7 references, err: [Inf, 0.32491052964481637, 0.2488211625572601, 0.22129718848815497, 0.20732211527823732, 0.19984910852517346, 0.19539198659903564, 0.19209051230640292, 0.19041842401077946, 0.1892414876389718, 0.1887391191115533] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 64, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [93, 33, 0]]
** centroid: 4, normalized-entropy: 0.8296071030882032, [(1, 93), (2, 33)]
*** center 5: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 81, 23]]
** centroid: 6, normalized-entropy: 0.7622688025356508, [(2, 81), (3, 23)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [34, 47, 0]]
** centroid: 7, normalized-entropy: 0.9813387358307915, [(1, 34), (2, 47)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2417652011559955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2417652011559955, 0.20758897745548963] ***
*** starting iteration: 2; err: [Inf, 0.2417652011559955, 0.20758897745548963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2417652011559955, 0.20758897745548963, 0.20012753523922508] ***
*** starting iteration: 3; err: [Inf, 0.2417652011559955, 0.20758897745548963, 0.20012753523922508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2417652011559955, 0.20758897745548963, 0.20012753523922508, 0.1967020434197569] ***
*** starting iteration: 4; err: [Inf, 0.2417652011559955, 0.20758897745548963, 0.20012753523922508, 0.1967020434197569] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2417652011559955, 0.20758897745548963, 0.20012753523922508, 0.1967020434197569, 0.19387191024677328] ***
*** starting iteration: 5; err: [Inf, 0.2417652011559955, 0.20758897745548963, 0.20012753523922508, 0.1967020434197569, 0.19387191024677328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2417652011559955, 0.20758897745548963, 0.20012753523922508, 0.1967020434197569, 0.19387191024677328, 0.1919879068409664] ***
*** starting iteration: 6; err: [Inf, 0.2417652011559955, 0.20758897745548963, 0.20012753523922508, 0.1967020434197569, 0.19387191024677328, 0.1919879068409664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2417652011559955, 0.20758897745548963, 0.20012753523922508, 0.1967020434197569, 0.19387191024677328, 0.1919879068409664, 0.19057328462868794] ***
*** starting iteration: 7; err: [Inf, 0.2417652011559955, 0.20758897745548963, 0.20012753523922508, 0.1967020434197569, 0.19387191024677328, 0.1919879068409664, 0.19057328462868794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2417652011559955, 0.20758897745548963, 0.20012753523922508, 0.1967020434197569, 0.19387191024677328, 0.1919879068409664, 0.19057328462868794, 0.18971438494314072] ***
*** finished computation of 7 references, err: [Inf, 0.2417652011559955, 0.20758897745548963, 0.20012753523922508, 0.1967020434197569, 0.19387191024677328, 0.1919879068409664, 0.19057328462868794, 0.18971438494314072] ***
*** center 1: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 68, 25]]
** centroid: 2, normalized-entropy: 0.8397622740178036, [(2, 68), (3, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [83, 45, 0]]
** centroid: 4, normalized-entropy: 0.9354557645575774, [(1, 83), (2, 45)]
*** center 5: selecting labels [1] (freq >= 2) [from [92, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [59, 19, 0]]
** centroid: 6, normalized-entropy: 0.8009591077369054, [(1, 59), (2, 19)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [4, 106, 0]]
** centroid: 7, normalized-entropy: 0.22536363912739493, [(1, 4), (2, 106)]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.9419958881036726, 0.9309938681196166, 0.9309698920477363, 0.9299898701096305, 0.9250088411765058, 0.9249818680956405, 0.919011826197455, 0.916011820203437, 0.9009938081794369, 0.8960307613002224, 0.88398877919836, 0.8709517901134668, 0.8530296763829698, 0.7969676263089437, 0.7790035544526562, 0.7259864655074236]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9419958881036726
finished with 17
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.3342258882913011] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3342258882913011, 0.30218373345876776] ***
*** starting iteration: 2; err: [Inf, 0.3342258882913011, 0.30218373345876776] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3342258882913011, 0.30218373345876776, 0.29796462422991926] ***
*** starting iteration: 3; err: [Inf, 0.3342258882913011, 0.30218373345876776, 0.29796462422991926] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3342258882913011, 0.30218373345876776, 0.29796462422991926, 0.29754917650251417] ***
*** finished computation of 3 references, err: [Inf, 0.3342258882913011, 0.30218373345876776, 0.29796462422991926, 0.29754917650251417] ***
*** center 1: selecting labels [1] (freq >= 1) [from [197, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [96, 134, 20]]
** centroid: 2, normalized-entropy: 0.8227201779950619, [(1, 96), (2, 134), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [117, 102, 0]]
** centroid: 3, normalized-entropy: 0.9966132830150962, [(1, 117), (2, 102)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.43200654720655757] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43200654720655757, 0.31302066924220795] ***
*** starting iteration: 2; err: [Inf, 0.43200654720655757, 0.31302066924220795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43200654720655757, 0.31302066924220795, 0.29861903643637694] ***
*** starting iteration: 3; err: [Inf, 0.43200654720655757, 0.31302066924220795, 0.29861903643637694] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43200654720655757, 0.31302066924220795, 0.29861903643637694, 0.29517181327942105] ***
*** starting iteration: 4; err: [Inf, 0.43200654720655757, 0.31302066924220795, 0.29861903643637694, 0.29517181327942105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43200654720655757, 0.31302066924220795, 0.29861903643637694, 0.29517181327942105, 0.29427732757922415] ***
*** finished computation of 3 references, err: [Inf, 0.43200654720655757, 0.31302066924220795, 0.29861903643637694, 0.29517181327942105, 0.29427732757922415] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [257, 7, 0]]
** centroid: 1, normalized-entropy: 0.17660247694470366, [(1, 257), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [161, 37, 0]]
** centroid: 2, normalized-entropy: 0.6948748427830216, [(1, 161), (2, 37)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [1, 181, 23]]
** centroid: 3, normalized-entropy: 0.34710181777688587, [(1, 1), (2, 181), (3, 23)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3862457471959729] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3862457471959729, 0.32439688639226616] ***
*** starting iteration: 2; err: [Inf, 0.3862457471959729, 0.32439688639226616] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3862457471959729, 0.32439688639226616, 0.306682033148752] ***
*** starting iteration: 3; err: [Inf, 0.3862457471959729, 0.32439688639226616, 0.306682033148752] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3862457471959729, 0.32439688639226616, 0.306682033148752, 0.3018233562279297] ***
*** starting iteration: 4; err: [Inf, 0.3862457471959729, 0.32439688639226616, 0.306682033148752, 0.3018233562279297] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3862457471959729, 0.32439688639226616, 0.306682033148752, 0.3018233562279297, 0.2990826867783311] ***
*** starting iteration: 5; err: [Inf, 0.3862457471959729, 0.32439688639226616, 0.306682033148752, 0.3018233562279297, 0.2990826867783311] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3862457471959729, 0.32439688639226616, 0.306682033148752, 0.3018233562279297, 0.2990826867783311, 0.2979986532751856] ***
*** starting iteration: 6; err: [Inf, 0.3862457471959729, 0.32439688639226616, 0.306682033148752, 0.3018233562279297, 0.2990826867783311, 0.2979986532751856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3862457471959729, 0.32439688639226616, 0.306682033148752, 0.3018233562279297, 0.2990826867783311, 0.2979986532751856, 0.29774363648084956] ***
*** finished computation of 3 references, err: [Inf, 0.3862457471959729, 0.32439688639226616, 0.306682033148752, 0.3018233562279297, 0.2990826867783311, 0.2979986532751856, 0.29774363648084956] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [177, 36, 0]]
** centroid: 1, normalized-entropy: 0.6554444445609846, [(1, 177), (2, 36)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [226, 18, 0]]
** centroid: 2, normalized-entropy: 0.3798394050555335, [(1, 226), (2, 18)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 185, 25]]
** centroid: 3, normalized-entropy: 0.5266170655714281, [(2, 185), (3, 25)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 17)
[0.9419958881036726, 0.9309938681196166, 0.9309698920477363, 0.9299898701096305, 0.9250088411765058, 0.9249818680956405, 0.919011826197455, 0.916011820203437, 0.9009938081794369, 0.8960307613002224, 0.88398877919836, 0.8709517901134668, 0.8689437940934946, 0.8530296763829698, 0.7969676263089437, 0.7790035544526562, 0.7259864655074236]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9419958881036726
finished with 17
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.27862548460159453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27862548460159453, 0.22310486292093992] ***
*** starting iteration: 2; err: [Inf, 0.27862548460159453, 0.22310486292093992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27862548460159453, 0.22310486292093992, 0.2096933840024285] ***
*** starting iteration: 3; err: [Inf, 0.27862548460159453, 0.22310486292093992, 0.2096933840024285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27862548460159453, 0.22310486292093992, 0.2096933840024285, 0.2012156238204334] ***
*** starting iteration: 4; err: [Inf, 0.27862548460159453, 0.22310486292093992, 0.2096933840024285, 0.2012156238204334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27862548460159453, 0.22310486292093992, 0.2096933840024285, 0.2012156238204334, 0.19762895321007817] ***
*** starting iteration: 5; err: [Inf, 0.27862548460159453, 0.22310486292093992, 0.2096933840024285, 0.2012156238204334, 0.19762895321007817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27862548460159453, 0.22310486292093992, 0.2096933840024285, 0.2012156238204334, 0.19762895321007817, 0.1952849552850239] ***
*** starting iteration: 6; err: [Inf, 0.27862548460159453, 0.22310486292093992, 0.2096933840024285, 0.2012156238204334, 0.19762895321007817, 0.1952849552850239] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27862548460159453, 0.22310486292093992, 0.2096933840024285, 0.2012156238204334, 0.19762895321007817, 0.1952849552850239, 0.19409991445881314] ***
*** starting iteration: 7; err: [Inf, 0.27862548460159453, 0.22310486292093992, 0.2096933840024285, 0.2012156238204334, 0.19762895321007817, 0.1952849552850239, 0.19409991445881314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27862548460159453, 0.22310486292093992, 0.2096933840024285, 0.2012156238204334, 0.19762895321007817, 0.1952849552850239, 0.19409991445881314, 0.19321542179305107] ***
*** finished computation of 7 references, err: [Inf, 0.27862548460159453, 0.22310486292093992, 0.2096933840024285, 0.2012156238204334, 0.19762895321007817, 0.1952849552850239, 0.19409991445881314, 0.19321542179305107] ***
*** center 1: selecting labels [1] (freq >= 2) [from [218, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [44, 113, 0]]
** centroid: 2, normalized-entropy: 0.8557977299555932, [(1, 44), (2, 113)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [143, 2, 0]]
** centroid: 3, normalized-entropy: 0.10500149581279865, [(1, 143), (2, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [160, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [51, 67, 0]]
** centroid: 5, normalized-entropy: 0.9866967086735614, [(1, 51), (2, 67)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 72, 34]]
** centroid: 6, normalized-entropy: 0.9052002969560479, [(2, 72), (3, 34)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 95, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24144534836523235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24144534836523235, 0.20276170198991894] ***
*** starting iteration: 2; err: [Inf, 0.24144534836523235, 0.20276170198991894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24144534836523235, 0.20276170198991894, 0.19467516438197344] ***
*** starting iteration: 3; err: [Inf, 0.24144534836523235, 0.20276170198991894, 0.19467516438197344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24144534836523235, 0.20276170198991894, 0.19467516438197344, 0.19087115084938705] ***
*** starting iteration: 4; err: [Inf, 0.24144534836523235, 0.20276170198991894, 0.19467516438197344, 0.19087115084938705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24144534836523235, 0.20276170198991894, 0.19467516438197344, 0.19087115084938705, 0.188204565923661] ***
*** starting iteration: 5; err: [Inf, 0.24144534836523235, 0.20276170198991894, 0.19467516438197344, 0.19087115084938705, 0.188204565923661] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24144534836523235, 0.20276170198991894, 0.19467516438197344, 0.19087115084938705, 0.188204565923661, 0.1870445582922548] ***
*** starting iteration: 6; err: [Inf, 0.24144534836523235, 0.20276170198991894, 0.19467516438197344, 0.19087115084938705, 0.188204565923661, 0.1870445582922548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24144534836523235, 0.20276170198991894, 0.19467516438197344, 0.19087115084938705, 0.188204565923661, 0.1870445582922548, 0.1862981929173693] ***
*** finished computation of 7 references, err: [Inf, 0.24144534836523235, 0.20276170198991894, 0.19467516438197344, 0.19087115084938705, 0.188204565923661, 0.1870445582922548, 0.1862981929173693] ***
*** center 1: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [5, 52, 0]]
** centroid: 2, normalized-entropy: 0.4288109647301171, [(1, 5), (2, 52)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [68, 2, 0]]
** centroid: 3, normalized-entropy: 0.18717625687320805, [(1, 68), (2, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 33, 20]]
** centroid: 4, normalized-entropy: 0.9561550236844027, [(2, 33), (3, 20)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 74, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [60, 16, 0]]
** centroid: 7, normalized-entropy: 0.7424875695421234, [(1, 60), (2, 16)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22046940168272705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22046940168272705, 0.18506101296003907] ***
*** starting iteration: 2; err: [Inf, 0.22046940168272705, 0.18506101296003907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22046940168272705, 0.18506101296003907, 0.18174692924227565] ***
*** starting iteration: 3; err: [Inf, 0.22046940168272705, 0.18506101296003907, 0.18174692924227565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22046940168272705, 0.18506101296003907, 0.18174692924227565, 0.1811892126025632] ***
*** finished computation of 7 references, err: [Inf, 0.22046940168272705, 0.18506101296003907, 0.18174692924227565, 0.1811892126025632] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [3, 70, 0]]
** centroid: 1, normalized-entropy: 0.24729443986205674, [(1, 3), (2, 70)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [64, 9, 0]]
** centroid: 2, normalized-entropy: 0.5387379148665815, [(1, 64), (2, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [89, 1, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 28, 17]]
** centroid: 4, normalized-entropy: 0.9564574047992596, [(2, 28), (3, 17)]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 69, 0]]
** centroid: 7, normalized-entropy: 0.18512476010054582, [(1, 2), (2, 69)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22881067880801856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22881067880801856, 0.199464725818485] ***
*** starting iteration: 2; err: [Inf, 0.22881067880801856, 0.199464725818485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22881067880801856, 0.199464725818485, 0.1935958528332412] ***
*** starting iteration: 3; err: [Inf, 0.22881067880801856, 0.199464725818485, 0.1935958528332412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22881067880801856, 0.199464725818485, 0.1935958528332412, 0.1934263559617102] ***
*** finished computation of 7 references, err: [Inf, 0.22881067880801856, 0.199464725818485, 0.1935958528332412, 0.1934263559617102] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 62, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 61, 0]]
** centroid: 2, normalized-entropy: 0.9350145588035413, [(1, 33), (2, 61)]
*** center 3: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 15, 0]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(1, 40), (2, 15)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 34, 18]]
** centroid: 5, normalized-entropy: 0.9305861291319927, [(2, 34), (3, 18)]
*** center 6: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [90, 5, 0]]
** centroid: 7, normalized-entropy: 0.2974722489192896, [(1, 90), (2, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23667221654765308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23667221654765308, 0.19467902758345007] ***
*** starting iteration: 2; err: [Inf, 0.23667221654765308, 0.19467902758345007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23667221654765308, 0.19467902758345007, 0.19127562578767537] ***
*** starting iteration: 3; err: [Inf, 0.23667221654765308, 0.19467902758345007, 0.19127562578767537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23667221654765308, 0.19467902758345007, 0.19127562578767537, 0.18974351912736892] ***
*** starting iteration: 4; err: [Inf, 0.23667221654765308, 0.19467902758345007, 0.19127562578767537, 0.18974351912736892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23667221654765308, 0.19467902758345007, 0.19127562578767537, 0.18974351912736892, 0.18815358339622618] ***
*** starting iteration: 5; err: [Inf, 0.23667221654765308, 0.19467902758345007, 0.19127562578767537, 0.18974351912736892, 0.18815358339622618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23667221654765308, 0.19467902758345007, 0.19127562578767537, 0.18974351912736892, 0.18815358339622618, 0.18610828689299524] ***
*** starting iteration: 6; err: [Inf, 0.23667221654765308, 0.19467902758345007, 0.19127562578767537, 0.18974351912736892, 0.18815358339622618, 0.18610828689299524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23667221654765308, 0.19467902758345007, 0.19127562578767537, 0.18974351912736892, 0.18815358339622618, 0.18610828689299524, 0.1849184852549806] ***
*** starting iteration: 7; err: [Inf, 0.23667221654765308, 0.19467902758345007, 0.19127562578767537, 0.18974351912736892, 0.18815358339622618, 0.18610828689299524, 0.1849184852549806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23667221654765308, 0.19467902758345007, 0.19127562578767537, 0.18974351912736892, 0.18815358339622618, 0.18610828689299524, 0.1849184852549806, 0.18435947067383676] ***
*** finished computation of 7 references, err: [Inf, 0.23667221654765308, 0.19467902758345007, 0.19127562578767537, 0.18974351912736892, 0.18815358339622618, 0.18610828689299524, 0.1849184852549806, 0.18435947067383676] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 81, 24]]
** centroid: 1, normalized-entropy: 0.775512658133148, [(2, 81), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [67, 5, 0]]
** centroid: 2, normalized-entropy: 0.3638469981769295, [(1, 67), (2, 5)]
*** center 3: selecting labels [2] (freq >= 2) [from [1, 67, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [39, 8, 0]]
** centroid: 4, normalized-entropy: 0.6581912658132184, [(1, 39), (2, 8)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [69, 2, 0]]
** centroid: 5, normalized-entropy: 0.18512476010054582, [(1, 69), (2, 2)]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [62, 15, 0]]
** centroid: 7, normalized-entropy: 0.7114160189012126, [(1, 62), (2, 15)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24830985280126333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24830985280126333, 0.19410707019548862] ***
*** starting iteration: 2; err: [Inf, 0.24830985280126333, 0.19410707019548862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24830985280126333, 0.19410707019548862, 0.18670208452735096] ***
*** starting iteration: 3; err: [Inf, 0.24830985280126333, 0.19410707019548862, 0.18670208452735096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24830985280126333, 0.19410707019548862, 0.18670208452735096, 0.1829170261262916] ***
*** starting iteration: 4; err: [Inf, 0.24830985280126333, 0.19410707019548862, 0.18670208452735096, 0.1829170261262916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24830985280126333, 0.19410707019548862, 0.18670208452735096, 0.1829170261262916, 0.1827871203990653] ***
*** finished computation of 7 references, err: [Inf, 0.24830985280126333, 0.19410707019548862, 0.18670208452735096, 0.1829170261262916, 0.1827871203990653] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 70, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [77, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [66, 5, 0]]
** centroid: 4, normalized-entropy: 0.3674984948272913, [(1, 66), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [3, 79, 0]]
** centroid: 5, normalized-entropy: 0.22641094842107634, [(1, 3), (2, 79)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 26, 17]]
** centroid: 6, normalized-entropy: 0.9681647320759545, [(2, 26), (3, 17)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [77, 2, 0]]
** centroid: 7, normalized-entropy: 0.17033057560105982, [(1, 77), (2, 2)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23228494662046434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23228494662046434, 0.2007876294911839] ***
*** starting iteration: 2; err: [Inf, 0.23228494662046434, 0.2007876294911839] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886] ***
*** starting iteration: 3; err: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886, 0.1934908204190433] ***
*** starting iteration: 4; err: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886, 0.1934908204190433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886, 0.1934908204190433, 0.19157397659309208] ***
*** starting iteration: 5; err: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886, 0.1934908204190433, 0.19157397659309208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886, 0.1934908204190433, 0.19157397659309208, 0.18784366779960693] ***
*** starting iteration: 6; err: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886, 0.1934908204190433, 0.19157397659309208, 0.18784366779960693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886, 0.1934908204190433, 0.19157397659309208, 0.18784366779960693, 0.18452311013126746] ***
*** starting iteration: 7; err: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886, 0.1934908204190433, 0.19157397659309208, 0.18784366779960693, 0.18452311013126746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886, 0.1934908204190433, 0.19157397659309208, 0.18784366779960693, 0.18452311013126746, 0.18335628786683084] ***
*** starting iteration: 8; err: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886, 0.1934908204190433, 0.19157397659309208, 0.18784366779960693, 0.18452311013126746, 0.18335628786683084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886, 0.1934908204190433, 0.19157397659309208, 0.18784366779960693, 0.18452311013126746, 0.18335628786683084, 0.18223692755028606] ***
*** starting iteration: 9; err: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886, 0.1934908204190433, 0.19157397659309208, 0.18784366779960693, 0.18452311013126746, 0.18335628786683084, 0.18223692755028606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886, 0.1934908204190433, 0.19157397659309208, 0.18784366779960693, 0.18452311013126746, 0.18335628786683084, 0.18223692755028606, 0.18165403710119427] ***
*** finished computation of 7 references, err: [Inf, 0.23228494662046434, 0.2007876294911839, 0.19570715000107886, 0.1934908204190433, 0.19157397659309208, 0.18784366779960693, 0.18452311013126746, 0.18335628786683084, 0.18223692755028606, 0.18165403710119427] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 71, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 73, 16]]
** centroid: 2, normalized-entropy: 0.6795851972782937, [(2, 73), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [55, 8, 0]]
** centroid: 3, normalized-entropy: 0.5491087450260074, [(1, 55), (2, 8)]
*** center 4: selecting labels [1] (freq >= 2) [from [59, 1, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [77, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [76, 13, 0]]
** centroid: 7, normalized-entropy: 0.5999108763872215, [(1, 76), (2, 13)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23870287585631014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23870287585631014, 0.20837370740808547] ***
*** starting iteration: 2; err: [Inf, 0.23870287585631014, 0.20837370740808547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23870287585631014, 0.20837370740808547, 0.2015498830601573] ***
*** starting iteration: 3; err: [Inf, 0.23870287585631014, 0.20837370740808547, 0.2015498830601573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23870287585631014, 0.20837370740808547, 0.2015498830601573, 0.19612299681082368] ***
*** starting iteration: 4; err: [Inf, 0.23870287585631014, 0.20837370740808547, 0.2015498830601573, 0.19612299681082368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23870287585631014, 0.20837370740808547, 0.2015498830601573, 0.19612299681082368, 0.19324082075431942] ***
*** starting iteration: 5; err: [Inf, 0.23870287585631014, 0.20837370740808547, 0.2015498830601573, 0.19612299681082368, 0.19324082075431942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23870287585631014, 0.20837370740808547, 0.2015498830601573, 0.19612299681082368, 0.19324082075431942, 0.19149889742210507] ***
*** starting iteration: 6; err: [Inf, 0.23870287585631014, 0.20837370740808547, 0.2015498830601573, 0.19612299681082368, 0.19324082075431942, 0.19149889742210507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23870287585631014, 0.20837370740808547, 0.2015498830601573, 0.19612299681082368, 0.19324082075431942, 0.19149889742210507, 0.1909486424550414] ***
*** finished computation of 7 references, err: [Inf, 0.23870287585631014, 0.20837370740808547, 0.2015498830601573, 0.19612299681082368, 0.19324082075431942, 0.19149889742210507, 0.1909486424550414] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [66, 22, 0]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(1, 66), (2, 22)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 73, 17]]
** centroid: 2, normalized-entropy: 0.6991413063352633, [(2, 73), (3, 17)]
*** center 3: selecting labels [2] (freq >= 2) [from [1, 50, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [52, 20, 0]]
** centroid: 5, normalized-entropy: 0.8524051786494784, [(1, 52), (2, 20)]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [40, 1, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27123305286467075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27123305286467075, 0.22569253681227563] ***
*** starting iteration: 2; err: [Inf, 0.27123305286467075, 0.22569253681227563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27123305286467075, 0.22569253681227563, 0.20537982997018844] ***
*** starting iteration: 3; err: [Inf, 0.27123305286467075, 0.22569253681227563, 0.20537982997018844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27123305286467075, 0.22569253681227563, 0.20537982997018844, 0.1968298088386655] ***
*** starting iteration: 4; err: [Inf, 0.27123305286467075, 0.22569253681227563, 0.20537982997018844, 0.1968298088386655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27123305286467075, 0.22569253681227563, 0.20537982997018844, 0.1968298088386655, 0.19077551264036446] ***
*** starting iteration: 5; err: [Inf, 0.27123305286467075, 0.22569253681227563, 0.20537982997018844, 0.1968298088386655, 0.19077551264036446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27123305286467075, 0.22569253681227563, 0.20537982997018844, 0.1968298088386655, 0.19077551264036446, 0.18761743577942253] ***
*** starting iteration: 6; err: [Inf, 0.27123305286467075, 0.22569253681227563, 0.20537982997018844, 0.1968298088386655, 0.19077551264036446, 0.18761743577942253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27123305286467075, 0.22569253681227563, 0.20537982997018844, 0.1968298088386655, 0.19077551264036446, 0.18761743577942253, 0.1866221372652799] ***
*** finished computation of 7 references, err: [Inf, 0.27123305286467075, 0.22569253681227563, 0.20537982997018844, 0.1968298088386655, 0.19077551264036446, 0.18761743577942253, 0.1866221372652799] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [31, 45, 0]]
** centroid: 1, normalized-entropy: 0.9753817903274211, [(1, 31), (2, 45)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [2, 63, 0]]
** centroid: 2, normalized-entropy: 0.19823496409776642, [(1, 2), (2, 63)]
*** center 3: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [46, 10, 0]]
** centroid: 4, normalized-entropy: 0.6769418697808861, [(1, 46), (2, 10)]
*** center 5: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 52, 16]]
** centroid: 6, normalized-entropy: 0.787126586201269, [(2, 52), (3, 16)]
*** center 7: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2302444504541345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2302444504541345, 0.19672534339502454] ***
*** starting iteration: 2; err: [Inf, 0.2302444504541345, 0.19672534339502454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2302444504541345, 0.19672534339502454, 0.19166488713305443] ***
*** starting iteration: 3; err: [Inf, 0.2302444504541345, 0.19672534339502454, 0.19166488713305443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2302444504541345, 0.19672534339502454, 0.19166488713305443, 0.18968680891860276] ***
*** starting iteration: 4; err: [Inf, 0.2302444504541345, 0.19672534339502454, 0.19166488713305443, 0.18968680891860276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2302444504541345, 0.19672534339502454, 0.19166488713305443, 0.18968680891860276, 0.18908874528948216] ***
*** finished computation of 7 references, err: [Inf, 0.2302444504541345, 0.19672534339502454, 0.19166488713305443, 0.18968680891860276, 0.18908874528948216] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [32, 42, 0]]
** centroid: 1, normalized-entropy: 0.9867867202680318, [(1, 32), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [77, 2, 0]]
** centroid: 2, normalized-entropy: 0.17033057560105982, [(1, 77), (2, 2)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 62, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [67, 16, 0]]
** centroid: 6, normalized-entropy: 0.7072324944713736, [(1, 67), (2, 16)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 55, 22]]
** centroid: 7, normalized-entropy: 0.8631205685666311, [(2, 55), (3, 22)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23214370526373387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23214370526373387, 0.1906591062769294] ***
*** starting iteration: 2; err: [Inf, 0.23214370526373387, 0.1906591062769294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23214370526373387, 0.1906591062769294, 0.18613798254355787] ***
*** starting iteration: 3; err: [Inf, 0.23214370526373387, 0.1906591062769294, 0.18613798254355787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23214370526373387, 0.1906591062769294, 0.18613798254355787, 0.18388293925486504] ***
*** starting iteration: 4; err: [Inf, 0.23214370526373387, 0.1906591062769294, 0.18613798254355787, 0.18388293925486504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23214370526373387, 0.1906591062769294, 0.18613798254355787, 0.18388293925486504, 0.1832319064103067] ***
*** finished computation of 7 references, err: [Inf, 0.23214370526373387, 0.1906591062769294, 0.18613798254355787, 0.18388293925486504, 0.1832319064103067] ***
*** center 1: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 1, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [73, 6, 0]]
** centroid: 3, normalized-entropy: 0.3877431810559867, [(1, 73), (2, 6)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 26, 15]]
** centroid: 4, normalized-entropy: 0.9474351361840305, [(2, 26), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [3, 72, 0]]
** centroid: 5, normalized-entropy: 0.24229218908241482, [(1, 3), (2, 72)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [58, 11, 0]]
** centroid: 6, normalized-entropy: 0.6329208984823799, [(1, 58), (2, 11)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 77, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3441518322378397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3441518322378397, 0.26733795513771474] ***
*** starting iteration: 2; err: [Inf, 0.3441518322378397, 0.26733795513771474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657] ***
*** starting iteration: 3; err: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657, 0.2167864662669599] ***
*** starting iteration: 4; err: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657, 0.2167864662669599] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657, 0.2167864662669599, 0.20396280200220646] ***
*** starting iteration: 5; err: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657, 0.2167864662669599, 0.20396280200220646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657, 0.2167864662669599, 0.20396280200220646, 0.1981418240647763] ***
*** starting iteration: 6; err: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657, 0.2167864662669599, 0.20396280200220646, 0.1981418240647763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657, 0.2167864662669599, 0.20396280200220646, 0.1981418240647763, 0.19490164373628796] ***
*** starting iteration: 7; err: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657, 0.2167864662669599, 0.20396280200220646, 0.1981418240647763, 0.19490164373628796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657, 0.2167864662669599, 0.20396280200220646, 0.1981418240647763, 0.19490164373628796, 0.1903558982880786] ***
*** starting iteration: 8; err: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657, 0.2167864662669599, 0.20396280200220646, 0.1981418240647763, 0.19490164373628796, 0.1903558982880786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657, 0.2167864662669599, 0.20396280200220646, 0.1981418240647763, 0.19490164373628796, 0.1903558982880786, 0.18823589831218124] ***
*** starting iteration: 9; err: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657, 0.2167864662669599, 0.20396280200220646, 0.1981418240647763, 0.19490164373628796, 0.1903558982880786, 0.18823589831218124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657, 0.2167864662669599, 0.20396280200220646, 0.1981418240647763, 0.19490164373628796, 0.1903558982880786, 0.18823589831218124, 0.1879550652615726] ***
*** finished computation of 7 references, err: [Inf, 0.3441518322378397, 0.26733795513771474, 0.23793836057558657, 0.2167864662669599, 0.20396280200220646, 0.1981418240647763, 0.19490164373628796, 0.1903558982880786, 0.18823589831218124, 0.1879550652615726] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [31, 42, 0]]
** centroid: 1, normalized-entropy: 0.9835585673909616, [(1, 31), (2, 42)]
*** center 2: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 61, 18]]
** centroid: 3, normalized-entropy: 0.7742411580847273, [(2, 61), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [65, 23, 0]]
** centroid: 4, normalized-entropy: 0.828797154590015, [(1, 65), (2, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [2, 61, 0]]
** centroid: 5, normalized-entropy: 0.20307392998664567, [(1, 2), (2, 61)]
*** center 6: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [49, 1, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3031877000853419] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3031877000853419, 0.22028420561179518] ***
*** starting iteration: 2; err: [Inf, 0.3031877000853419, 0.22028420561179518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3031877000853419, 0.22028420561179518, 0.19852372489869594] ***
*** starting iteration: 3; err: [Inf, 0.3031877000853419, 0.22028420561179518, 0.19852372489869594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3031877000853419, 0.22028420561179518, 0.19852372489869594, 0.1935522218402475] ***
*** starting iteration: 4; err: [Inf, 0.3031877000853419, 0.22028420561179518, 0.19852372489869594, 0.1935522218402475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3031877000853419, 0.22028420561179518, 0.19852372489869594, 0.1935522218402475, 0.19118960567191243] ***
*** starting iteration: 5; err: [Inf, 0.3031877000853419, 0.22028420561179518, 0.19852372489869594, 0.1935522218402475, 0.19118960567191243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3031877000853419, 0.22028420561179518, 0.19852372489869594, 0.1935522218402475, 0.19118960567191243, 0.18944989817403257] ***
*** starting iteration: 6; err: [Inf, 0.3031877000853419, 0.22028420561179518, 0.19852372489869594, 0.1935522218402475, 0.19118960567191243, 0.18944989817403257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3031877000853419, 0.22028420561179518, 0.19852372489869594, 0.1935522218402475, 0.19118960567191243, 0.18944989817403257, 0.1886270297113806] ***
*** finished computation of 7 references, err: [Inf, 0.3031877000853419, 0.22028420561179518, 0.19852372489869594, 0.1935522218402475, 0.19118960567191243, 0.18944989817403257, 0.1886270297113806] ***
*** center 1: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [49, 17, 0]]
** centroid: 2, normalized-entropy: 0.8230660790114689, [(1, 49), (2, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [61, 31, 0]]
** centroid: 3, normalized-entropy: 0.9218764863469129, [(1, 61), (2, 31)]
*** center 4: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [69, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 81, 0]]
** centroid: 6, normalized-entropy: 0.1638605128691586, [(1, 2), (2, 81)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 40, 15]]
** centroid: 7, normalized-entropy: 0.8453509366224364, [(2, 40), (3, 15)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3223012186875567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3223012186875567, 0.23696658501774073] ***
*** starting iteration: 2; err: [Inf, 0.3223012186875567, 0.23696658501774073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3223012186875567, 0.23696658501774073, 0.22250490178959445] ***
*** starting iteration: 3; err: [Inf, 0.3223012186875567, 0.23696658501774073, 0.22250490178959445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3223012186875567, 0.23696658501774073, 0.22250490178959445, 0.2059426659848541] ***
*** starting iteration: 4; err: [Inf, 0.3223012186875567, 0.23696658501774073, 0.22250490178959445, 0.2059426659848541] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3223012186875567, 0.23696658501774073, 0.22250490178959445, 0.2059426659848541, 0.19727555449679493] ***
*** starting iteration: 5; err: [Inf, 0.3223012186875567, 0.23696658501774073, 0.22250490178959445, 0.2059426659848541, 0.19727555449679493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3223012186875567, 0.23696658501774073, 0.22250490178959445, 0.2059426659848541, 0.19727555449679493, 0.19439173800870777] ***
*** starting iteration: 6; err: [Inf, 0.3223012186875567, 0.23696658501774073, 0.22250490178959445, 0.2059426659848541, 0.19727555449679493, 0.19439173800870777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3223012186875567, 0.23696658501774073, 0.22250490178959445, 0.2059426659848541, 0.19727555449679493, 0.19439173800870777, 0.19306820253655316] ***
*** starting iteration: 7; err: [Inf, 0.3223012186875567, 0.23696658501774073, 0.22250490178959445, 0.2059426659848541, 0.19727555449679493, 0.19439173800870777, 0.19306820253655316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3223012186875567, 0.23696658501774073, 0.22250490178959445, 0.2059426659848541, 0.19727555449679493, 0.19439173800870777, 0.19306820253655316, 0.19177782427240164] ***
*** starting iteration: 8; err: [Inf, 0.3223012186875567, 0.23696658501774073, 0.22250490178959445, 0.2059426659848541, 0.19727555449679493, 0.19439173800870777, 0.19306820253655316, 0.19177782427240164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3223012186875567, 0.23696658501774073, 0.22250490178959445, 0.2059426659848541, 0.19727555449679493, 0.19439173800870777, 0.19306820253655316, 0.19177782427240164, 0.19109596238005908] ***
*** finished computation of 7 references, err: [Inf, 0.3223012186875567, 0.23696658501774073, 0.22250490178959445, 0.2059426659848541, 0.19727555449679493, 0.19439173800870777, 0.19306820253655316, 0.19177782427240164, 0.19109596238005908] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [3, 66, 0]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(1, 3), (2, 66)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [4, 57, 0]]
** centroid: 2, normalized-entropy: 0.34918437350730797, [(1, 4), (2, 57)]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 1, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [78, 2, 0]]
** centroid: 5, normalized-entropy: 0.1686609314966701, [(1, 78), (2, 2)]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 1, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 50, 20]]
** centroid: 7, normalized-entropy: 0.8631205685666311, [(2, 50), (3, 20)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31319998850300906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31319998850300906, 0.2602153731379658] ***
*** starting iteration: 2; err: [Inf, 0.31319998850300906, 0.2602153731379658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515] ***
*** starting iteration: 3; err: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518] ***
*** starting iteration: 4; err: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518, 0.20021874409355223] ***
*** starting iteration: 5; err: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518, 0.20021874409355223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518, 0.20021874409355223, 0.19490997031889856] ***
*** starting iteration: 6; err: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518, 0.20021874409355223, 0.19490997031889856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518, 0.20021874409355223, 0.19490997031889856, 0.19203038127440958] ***
*** starting iteration: 7; err: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518, 0.20021874409355223, 0.19490997031889856, 0.19203038127440958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518, 0.20021874409355223, 0.19490997031889856, 0.19203038127440958, 0.18841384573467077] ***
*** starting iteration: 8; err: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518, 0.20021874409355223, 0.19490997031889856, 0.19203038127440958, 0.18841384573467077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518, 0.20021874409355223, 0.19490997031889856, 0.19203038127440958, 0.18841384573467077, 0.18539445569366217] ***
*** starting iteration: 9; err: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518, 0.20021874409355223, 0.19490997031889856, 0.19203038127440958, 0.18841384573467077, 0.18539445569366217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518, 0.20021874409355223, 0.19490997031889856, 0.19203038127440958, 0.18841384573467077, 0.18539445569366217, 0.18399607137590646] ***
*** starting iteration: 10; err: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518, 0.20021874409355223, 0.19490997031889856, 0.19203038127440958, 0.18841384573467077, 0.18539445569366217, 0.18399607137590646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518, 0.20021874409355223, 0.19490997031889856, 0.19203038127440958, 0.18841384573467077, 0.18539445569366217, 0.18399607137590646, 0.18349017869494855] ***
*** finished computation of 7 references, err: [Inf, 0.31319998850300906, 0.2602153731379658, 0.225883106559515, 0.20854059285670518, 0.20021874409355223, 0.19490997031889856, 0.19203038127440958, 0.18841384573467077, 0.18539445569366217, 0.18399607137590646, 0.18349017869494855] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 79, 13]]
** centroid: 1, normalized-entropy: 0.5876446142980418, [(2, 79), (3, 13)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 17, 0]]
** centroid: 2, normalized-entropy: 0.7462343013654809, [(1, 63), (2, 17)]
*** center 3: selecting labels [2] (freq >= 2) [from [1, 68, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [69, 9, 0]]
** centroid: 4, normalized-entropy: 0.5159469300074472, [(1, 69), (2, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [43, 14, 0]]
** centroid: 7, normalized-entropy: 0.8042522359016421, [(1, 43), (2, 14)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2633802785873413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2633802785873413, 0.20983692424185574] ***
*** starting iteration: 2; err: [Inf, 0.2633802785873413, 0.20983692424185574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2633802785873413, 0.20983692424185574, 0.19864438994787634] ***
*** starting iteration: 3; err: [Inf, 0.2633802785873413, 0.20983692424185574, 0.19864438994787634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2633802785873413, 0.20983692424185574, 0.19864438994787634, 0.19330369812250137] ***
*** starting iteration: 4; err: [Inf, 0.2633802785873413, 0.20983692424185574, 0.19864438994787634, 0.19330369812250137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2633802785873413, 0.20983692424185574, 0.19864438994787634, 0.19330369812250137, 0.18747913413401693] ***
*** starting iteration: 5; err: [Inf, 0.2633802785873413, 0.20983692424185574, 0.19864438994787634, 0.19330369812250137, 0.18747913413401693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2633802785873413, 0.20983692424185574, 0.19864438994787634, 0.19330369812250137, 0.18747913413401693, 0.18575122360419483] ***
*** starting iteration: 6; err: [Inf, 0.2633802785873413, 0.20983692424185574, 0.19864438994787634, 0.19330369812250137, 0.18747913413401693, 0.18575122360419483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2633802785873413, 0.20983692424185574, 0.19864438994787634, 0.19330369812250137, 0.18747913413401693, 0.18575122360419483, 0.18390919077862053] ***
*** starting iteration: 7; err: [Inf, 0.2633802785873413, 0.20983692424185574, 0.19864438994787634, 0.19330369812250137, 0.18747913413401693, 0.18575122360419483, 0.18390919077862053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2633802785873413, 0.20983692424185574, 0.19864438994787634, 0.19330369812250137, 0.18747913413401693, 0.18575122360419483, 0.18390919077862053, 0.18349772659875452] ***
*** finished computation of 7 references, err: [Inf, 0.2633802785873413, 0.20983692424185574, 0.19864438994787634, 0.19330369812250137, 0.18747913413401693, 0.18575122360419483, 0.18390919077862053, 0.18349772659875452] ***
*** center 1: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 55, 17]]
** centroid: 2, normalized-entropy: 0.7885131605379784, [(2, 55), (3, 17)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 88, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [41, 10, 0]]
** centroid: 4, normalized-entropy: 0.7140152804378671, [(1, 41), (2, 10)]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [63, 25, 0]]
** centroid: 6, normalized-entropy: 0.8609652558547648, [(1, 63), (2, 25)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [57, 12, 0]]
** centroid: 7, normalized-entropy: 0.6665783579949205, [(1, 57), (2, 12)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2373911045175046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373911045175046, 0.21008438591379672] ***
*** starting iteration: 2; err: [Inf, 0.2373911045175046, 0.21008438591379672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766] ***
*** starting iteration: 3; err: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766, 0.19630477584898473] ***
*** starting iteration: 4; err: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766, 0.19630477584898473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766, 0.19630477584898473, 0.19237070026248693] ***
*** starting iteration: 5; err: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766, 0.19630477584898473, 0.19237070026248693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766, 0.19630477584898473, 0.19237070026248693, 0.18897247195616365] ***
*** starting iteration: 6; err: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766, 0.19630477584898473, 0.19237070026248693, 0.18897247195616365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766, 0.19630477584898473, 0.19237070026248693, 0.18897247195616365, 0.18645231462456285] ***
*** starting iteration: 7; err: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766, 0.19630477584898473, 0.19237070026248693, 0.18897247195616365, 0.18645231462456285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766, 0.19630477584898473, 0.19237070026248693, 0.18897247195616365, 0.18645231462456285, 0.18469710440933704] ***
*** starting iteration: 8; err: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766, 0.19630477584898473, 0.19237070026248693, 0.18897247195616365, 0.18645231462456285, 0.18469710440933704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766, 0.19630477584898473, 0.19237070026248693, 0.18897247195616365, 0.18645231462456285, 0.18469710440933704, 0.18333120580017567] ***
*** starting iteration: 9; err: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766, 0.19630477584898473, 0.19237070026248693, 0.18897247195616365, 0.18645231462456285, 0.18469710440933704, 0.18333120580017567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766, 0.19630477584898473, 0.19237070026248693, 0.18897247195616365, 0.18645231462456285, 0.18469710440933704, 0.18333120580017567, 0.1824245058838278] ***
*** finished computation of 7 references, err: [Inf, 0.2373911045175046, 0.21008438591379672, 0.20148578574042766, 0.19630477584898473, 0.19237070026248693, 0.18897247195616365, 0.18645231462456285, 0.18469710440933704, 0.18333120580017567, 0.1824245058838278] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 69, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 59, 15]]
** centroid: 2, normalized-entropy: 0.7273006785144036, [(2, 59), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [74, 11, 0]]
** centroid: 3, normalized-entropy: 0.5558227377664954, [(1, 74), (2, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [42, 28, 0]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(1, 42), (2, 28)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [44, 12, 0]]
** centroid: 7, normalized-entropy: 0.7495952572594798, [(1, 44), (2, 12)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2362048184964806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2362048184964806, 0.20240191199071705] ***
*** starting iteration: 2; err: [Inf, 0.2362048184964806, 0.20240191199071705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2362048184964806, 0.20240191199071705, 0.1960750994645059] ***
*** starting iteration: 3; err: [Inf, 0.2362048184964806, 0.20240191199071705, 0.1960750994645059] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2362048184964806, 0.20240191199071705, 0.1960750994645059, 0.19361954298987985] ***
*** starting iteration: 4; err: [Inf, 0.2362048184964806, 0.20240191199071705, 0.1960750994645059, 0.19361954298987985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2362048184964806, 0.20240191199071705, 0.1960750994645059, 0.19361954298987985, 0.19133007652312517] ***
*** starting iteration: 5; err: [Inf, 0.2362048184964806, 0.20240191199071705, 0.1960750994645059, 0.19361954298987985, 0.19133007652312517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2362048184964806, 0.20240191199071705, 0.1960750994645059, 0.19361954298987985, 0.19133007652312517, 0.18937792032770812] ***
*** starting iteration: 6; err: [Inf, 0.2362048184964806, 0.20240191199071705, 0.1960750994645059, 0.19361954298987985, 0.19133007652312517, 0.18937792032770812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2362048184964806, 0.20240191199071705, 0.1960750994645059, 0.19361954298987985, 0.19133007652312517, 0.18937792032770812, 0.18746639980748295] ***
*** starting iteration: 7; err: [Inf, 0.2362048184964806, 0.20240191199071705, 0.1960750994645059, 0.19361954298987985, 0.19133007652312517, 0.18937792032770812, 0.18746639980748295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2362048184964806, 0.20240191199071705, 0.1960750994645059, 0.19361954298987985, 0.19133007652312517, 0.18937792032770812, 0.18746639980748295, 0.18656183635257184] ***
*** finished computation of 7 references, err: [Inf, 0.2362048184964806, 0.20240191199071705, 0.1960750994645059, 0.19361954298987985, 0.19133007652312517, 0.18937792032770812, 0.18746639980748295, 0.18656183635257184] ***
*** center 1: selecting labels [1] (freq >= 2) [from [65, 1, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [36, 41, 0]]
** centroid: 2, normalized-entropy: 0.9969562518473082, [(1, 36), (2, 41)]
*** center 3: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [8, 55, 0]]
** centroid: 4, normalized-entropy: 0.5491087450260074, [(1, 8), (2, 55)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 57, 19]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 57), (3, 19)]
*** center 6: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [40, 23, 0]]
** centroid: 7, normalized-entropy: 0.9468188316776024, [(1, 40), (2, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27282857820764184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27282857820764184, 0.19857079553499352] ***
*** starting iteration: 2; err: [Inf, 0.27282857820764184, 0.19857079553499352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27282857820764184, 0.19857079553499352, 0.19242426303215324] ***
*** starting iteration: 3; err: [Inf, 0.27282857820764184, 0.19857079553499352, 0.19242426303215324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27282857820764184, 0.19857079553499352, 0.19242426303215324, 0.18918314099078998] ***
*** starting iteration: 4; err: [Inf, 0.27282857820764184, 0.19857079553499352, 0.19242426303215324, 0.18918314099078998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27282857820764184, 0.19857079553499352, 0.19242426303215324, 0.18918314099078998, 0.18786323851160705] ***
*** starting iteration: 5; err: [Inf, 0.27282857820764184, 0.19857079553499352, 0.19242426303215324, 0.18918314099078998, 0.18786323851160705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27282857820764184, 0.19857079553499352, 0.19242426303215324, 0.18918314099078998, 0.18786323851160705, 0.18690968400985003] ***
*** finished computation of 7 references, err: [Inf, 0.27282857820764184, 0.19857079553499352, 0.19242426303215324, 0.18918314099078998, 0.18786323851160705, 0.18690968400985003] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 50, 12]]
** centroid: 1, normalized-entropy: 0.708835673332196, [(2, 50), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [3, 62, 0]]
** centroid: 4, normalized-entropy: 0.269828447703074, [(1, 3), (2, 62)]
*** center 5: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [22, 46, 0]]
** centroid: 6, normalized-entropy: 0.9081783472997053, [(1, 22), (2, 46)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [34, 33, 0]]
** centroid: 7, normalized-entropy: 0.9998393017810486, [(1, 34), (2, 33)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25783655638992786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25783655638992786, 0.19213702725991608] ***
*** starting iteration: 2; err: [Inf, 0.25783655638992786, 0.19213702725991608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25783655638992786, 0.19213702725991608, 0.18710000364668666] ***
*** starting iteration: 3; err: [Inf, 0.25783655638992786, 0.19213702725991608, 0.18710000364668666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25783655638992786, 0.19213702725991608, 0.18710000364668666, 0.18684151827241294] ***
*** finished computation of 7 references, err: [Inf, 0.25783655638992786, 0.19213702725991608, 0.18710000364668666, 0.18684151827241294] ***
*** center 1: selecting labels [1] (freq >= 2) [from [76, 1, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 70, 18]]
** centroid: 3, normalized-entropy: 0.7309263775906009, [(2, 70), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [33, 20, 0]]
** centroid: 4, normalized-entropy: 0.9561550236844027, [(1, 33), (2, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [34, 28, 0]]
** centroid: 5, normalized-entropy: 0.9932338197397066, [(1, 34), (2, 28)]
*** center 6: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 54, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2636020329594612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2636020329594612, 0.21706374066881837] ***
*** starting iteration: 2; err: [Inf, 0.2636020329594612, 0.21706374066881837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2636020329594612, 0.21706374066881837, 0.20201973329950124] ***
*** starting iteration: 3; err: [Inf, 0.2636020329594612, 0.21706374066881837, 0.20201973329950124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2636020329594612, 0.21706374066881837, 0.20201973329950124, 0.1982103631813079] ***
*** starting iteration: 4; err: [Inf, 0.2636020329594612, 0.21706374066881837, 0.20201973329950124, 0.1982103631813079] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2636020329594612, 0.21706374066881837, 0.20201973329950124, 0.1982103631813079, 0.19535476500168442] ***
*** starting iteration: 5; err: [Inf, 0.2636020329594612, 0.21706374066881837, 0.20201973329950124, 0.1982103631813079, 0.19535476500168442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2636020329594612, 0.21706374066881837, 0.20201973329950124, 0.1982103631813079, 0.19535476500168442, 0.19344339825585485] ***
*** starting iteration: 6; err: [Inf, 0.2636020329594612, 0.21706374066881837, 0.20201973329950124, 0.1982103631813079, 0.19535476500168442, 0.19344339825585485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2636020329594612, 0.21706374066881837, 0.20201973329950124, 0.1982103631813079, 0.19535476500168442, 0.19344339825585485, 0.19163010606355965] ***
*** starting iteration: 7; err: [Inf, 0.2636020329594612, 0.21706374066881837, 0.20201973329950124, 0.1982103631813079, 0.19535476500168442, 0.19344339825585485, 0.19163010606355965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2636020329594612, 0.21706374066881837, 0.20201973329950124, 0.1982103631813079, 0.19535476500168442, 0.19344339825585485, 0.19163010606355965, 0.19012009657197632] ***
*** starting iteration: 8; err: [Inf, 0.2636020329594612, 0.21706374066881837, 0.20201973329950124, 0.1982103631813079, 0.19535476500168442, 0.19344339825585485, 0.19163010606355965, 0.19012009657197632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2636020329594612, 0.21706374066881837, 0.20201973329950124, 0.1982103631813079, 0.19535476500168442, 0.19344339825585485, 0.19163010606355965, 0.19012009657197632, 0.18982239724323152] ***
*** finished computation of 7 references, err: [Inf, 0.2636020329594612, 0.21706374066881837, 0.20201973329950124, 0.1982103631813079, 0.19535476500168442, 0.19344339825585485, 0.19163010606355965, 0.19012009657197632, 0.18982239724323152] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 40, 20]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 40), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [71, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [65, 22, 0]]
** centroid: 4, normalized-entropy: 0.8158009273789572, [(1, 65), (2, 22)]
*** center 5: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [15, 42, 0]]
** centroid: 6, normalized-entropy: 0.8314743880097292, [(1, 15), (2, 42)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 70, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2880586083177477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2880586083177477, 0.2074798716045916] ***
*** starting iteration: 2; err: [Inf, 0.2880586083177477, 0.2074798716045916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2880586083177477, 0.2074798716045916, 0.19310770896822213] ***
*** starting iteration: 3; err: [Inf, 0.2880586083177477, 0.2074798716045916, 0.19310770896822213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2880586083177477, 0.2074798716045916, 0.19310770896822213, 0.18685579736344515] ***
*** starting iteration: 4; err: [Inf, 0.2880586083177477, 0.2074798716045916, 0.19310770896822213, 0.18685579736344515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2880586083177477, 0.2074798716045916, 0.19310770896822213, 0.18685579736344515, 0.18378327921964227] ***
*** starting iteration: 5; err: [Inf, 0.2880586083177477, 0.2074798716045916, 0.19310770896822213, 0.18685579736344515, 0.18378327921964227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2880586083177477, 0.2074798716045916, 0.19310770896822213, 0.18685579736344515, 0.18378327921964227, 0.18183292813040317] ***
*** starting iteration: 6; err: [Inf, 0.2880586083177477, 0.2074798716045916, 0.19310770896822213, 0.18685579736344515, 0.18378327921964227, 0.18183292813040317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2880586083177477, 0.2074798716045916, 0.19310770896822213, 0.18685579736344515, 0.18378327921964227, 0.18183292813040317, 0.18111778295575642] ***
*** finished computation of 7 references, err: [Inf, 0.2880586083177477, 0.2074798716045916, 0.19310770896822213, 0.18685579736344515, 0.18378327921964227, 0.18183292813040317, 0.18111778295575642] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [71, 5, 0]]
** centroid: 2, normalized-entropy: 0.35001059292688486, [(1, 71), (2, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [16, 51, 0]]
** centroid: 4, normalized-entropy: 0.7930490047779772, [(1, 16), (2, 51)]
*** center 5: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 28, 13]]
** centroid: 6, normalized-entropy: 0.9011701959974223, [(2, 28), (3, 13)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [74, 13, 0]]
** centroid: 7, normalized-entropy: 0.6084002154765848, [(1, 74), (2, 13)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2477950149513781] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2477950149513781, 0.19947152504883706] ***
*** starting iteration: 2; err: [Inf, 0.2477950149513781, 0.19947152504883706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2477950149513781, 0.19947152504883706, 0.19517903550341725] ***
*** starting iteration: 3; err: [Inf, 0.2477950149513781, 0.19947152504883706, 0.19517903550341725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2477950149513781, 0.19947152504883706, 0.19517903550341725, 0.19160223665833473] ***
*** starting iteration: 4; err: [Inf, 0.2477950149513781, 0.19947152504883706, 0.19517903550341725, 0.19160223665833473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2477950149513781, 0.19947152504883706, 0.19517903550341725, 0.19160223665833473, 0.19048742278292774] ***
*** starting iteration: 5; err: [Inf, 0.2477950149513781, 0.19947152504883706, 0.19517903550341725, 0.19160223665833473, 0.19048742278292774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2477950149513781, 0.19947152504883706, 0.19517903550341725, 0.19160223665833473, 0.19048742278292774, 0.18998119534552096] ***
*** finished computation of 7 references, err: [Inf, 0.2477950149513781, 0.19947152504883706, 0.19517903550341725, 0.19160223665833473, 0.19048742278292774, 0.18998119534552096] ***
*** center 1: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [55, 12, 0]]
** centroid: 2, normalized-entropy: 0.678114052360606, [(1, 55), (2, 12)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [68, 21, 0]]
** centroid: 3, normalized-entropy: 0.7882487221644084, [(1, 68), (2, 21)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 72, 19]]
** centroid: 4, normalized-entropy: 0.7391658175693049, [(2, 72), (3, 19)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 69, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [65, 10, 0]]
** centroid: 7, normalized-entropy: 0.5665095065529052, [(1, 65), (2, 10)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2404345547091216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2404345547091216, 0.2041428987644613] ***
*** starting iteration: 2; err: [Inf, 0.2404345547091216, 0.2041428987644613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2404345547091216, 0.2041428987644613, 0.19765115165151656] ***
*** starting iteration: 3; err: [Inf, 0.2404345547091216, 0.2041428987644613, 0.19765115165151656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2404345547091216, 0.2041428987644613, 0.19765115165151656, 0.19653639432042838] ***
*** starting iteration: 4; err: [Inf, 0.2404345547091216, 0.2041428987644613, 0.19765115165151656, 0.19653639432042838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2404345547091216, 0.2041428987644613, 0.19765115165151656, 0.19653639432042838, 0.19570165973156692] ***
*** finished computation of 7 references, err: [Inf, 0.2404345547091216, 0.2041428987644613, 0.19765115165151656, 0.19653639432042838, 0.19570165973156692] ***
*** center 1: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [88, 23, 0]]
** centroid: 2, normalized-entropy: 0.7361103940132281, [(1, 88), (2, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [41, 27, 0]]
** centroid: 4, normalized-entropy: 0.9692040949598235, [(1, 41), (2, 27)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [17, 34, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 17), (2, 34)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 58, 14]]
** centroid: 6, normalized-entropy: 0.710676853856123, [(2, 58), (3, 14)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 39, 2]]
** centroid: 7, normalized-entropy: 0.2811937964320427, [(2, 39), (3, 2)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3349419948812574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3349419948812574, 0.2345980627220124] ***
*** starting iteration: 2; err: [Inf, 0.3349419948812574, 0.2345980627220124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994] ***
*** starting iteration: 3; err: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994, 0.21732248452678324] ***
*** starting iteration: 4; err: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994, 0.21732248452678324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994, 0.21732248452678324, 0.21466786917392164] ***
*** starting iteration: 5; err: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994, 0.21732248452678324, 0.21466786917392164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994, 0.21732248452678324, 0.21466786917392164, 0.2044540185891092] ***
*** starting iteration: 6; err: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994, 0.21732248452678324, 0.21466786917392164, 0.2044540185891092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994, 0.21732248452678324, 0.21466786917392164, 0.2044540185891092, 0.19738294567912817] ***
*** starting iteration: 7; err: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994, 0.21732248452678324, 0.21466786917392164, 0.2044540185891092, 0.19738294567912817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994, 0.21732248452678324, 0.21466786917392164, 0.2044540185891092, 0.19738294567912817, 0.19434834241122007] ***
*** starting iteration: 8; err: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994, 0.21732248452678324, 0.21466786917392164, 0.2044540185891092, 0.19738294567912817, 0.19434834241122007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994, 0.21732248452678324, 0.21466786917392164, 0.2044540185891092, 0.19738294567912817, 0.19434834241122007, 0.19310012962576] ***
*** starting iteration: 9; err: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994, 0.21732248452678324, 0.21466786917392164, 0.2044540185891092, 0.19738294567912817, 0.19434834241122007, 0.19310012962576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994, 0.21732248452678324, 0.21466786917392164, 0.2044540185891092, 0.19738294567912817, 0.19434834241122007, 0.19310012962576, 0.1922544977553189] ***
*** finished computation of 7 references, err: [Inf, 0.3349419948812574, 0.2345980627220124, 0.2198615929502994, 0.21732248452678324, 0.21466786917392164, 0.2044540185891092, 0.19738294567912817, 0.19434834241122007, 0.19310012962576, 0.1922544977553189] ***
*** center 1: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 56, 7]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 56), (3, 7)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [27, 39, 0]]
** centroid: 4, normalized-entropy: 0.976020648236615, [(1, 27), (2, 39)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [68, 18, 0]]
** centroid: 5, normalized-entropy: 0.7401470427139037, [(1, 68), (2, 18)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [72, 23, 0]]
** centroid: 6, normalized-entropy: 0.7985237652450764, [(1, 72), (2, 23)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 40, 16]]
** centroid: 7, normalized-entropy: 0.8631205685666311, [(2, 40), (3, 16)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2852530724704266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2852530724704266, 0.22335587977804244] ***
*** starting iteration: 2; err: [Inf, 0.2852530724704266, 0.22335587977804244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2852530724704266, 0.22335587977804244, 0.20995157128199934] ***
*** starting iteration: 3; err: [Inf, 0.2852530724704266, 0.22335587977804244, 0.20995157128199934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2852530724704266, 0.22335587977804244, 0.20995157128199934, 0.19797580339852722] ***
*** starting iteration: 4; err: [Inf, 0.2852530724704266, 0.22335587977804244, 0.20995157128199934, 0.19797580339852722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2852530724704266, 0.22335587977804244, 0.20995157128199934, 0.19797580339852722, 0.19444198557687922] ***
*** starting iteration: 5; err: [Inf, 0.2852530724704266, 0.22335587977804244, 0.20995157128199934, 0.19797580339852722, 0.19444198557687922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2852530724704266, 0.22335587977804244, 0.20995157128199934, 0.19797580339852722, 0.19444198557687922, 0.19318658337183298] ***
*** starting iteration: 6; err: [Inf, 0.2852530724704266, 0.22335587977804244, 0.20995157128199934, 0.19797580339852722, 0.19444198557687922, 0.19318658337183298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2852530724704266, 0.22335587977804244, 0.20995157128199934, 0.19797580339852722, 0.19444198557687922, 0.19318658337183298, 0.19242081497237087] ***
*** finished computation of 7 references, err: [Inf, 0.2852530724704266, 0.22335587977804244, 0.20995157128199934, 0.19797580339852722, 0.19444198557687922, 0.19318658337183298, 0.19242081497237087] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [38, 24, 0]]
** centroid: 1, normalized-entropy: 0.9629004147713269, [(1, 38), (2, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [71, 20, 0]]
** centroid: 3, normalized-entropy: 0.7597659876428757, [(1, 71), (2, 20)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 85, 15]]
** centroid: 4, normalized-entropy: 0.6098403047164005, [(2, 85), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [53, 46, 0]]
** centroid: 5, normalized-entropy: 0.9963906193677697, [(1, 53), (2, 46)]
*** center 6: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [43, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32616766761615873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32616766761615873, 0.21165036705695092] ***
*** starting iteration: 2; err: [Inf, 0.32616766761615873, 0.21165036705695092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32616766761615873, 0.21165036705695092, 0.1975719642303884] ***
*** starting iteration: 3; err: [Inf, 0.32616766761615873, 0.21165036705695092, 0.1975719642303884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32616766761615873, 0.21165036705695092, 0.1975719642303884, 0.19372792910039424] ***
*** starting iteration: 4; err: [Inf, 0.32616766761615873, 0.21165036705695092, 0.1975719642303884, 0.19372792910039424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32616766761615873, 0.21165036705695092, 0.1975719642303884, 0.19372792910039424, 0.18920201371610165] ***
*** starting iteration: 5; err: [Inf, 0.32616766761615873, 0.21165036705695092, 0.1975719642303884, 0.19372792910039424, 0.18920201371610165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32616766761615873, 0.21165036705695092, 0.1975719642303884, 0.19372792910039424, 0.18920201371610165, 0.18742284691333772] ***
*** starting iteration: 6; err: [Inf, 0.32616766761615873, 0.21165036705695092, 0.1975719642303884, 0.19372792910039424, 0.18920201371610165, 0.18742284691333772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32616766761615873, 0.21165036705695092, 0.1975719642303884, 0.19372792910039424, 0.18920201371610165, 0.18742284691333772, 0.18653794595249928] ***
*** finished computation of 7 references, err: [Inf, 0.32616766761615873, 0.21165036705695092, 0.1975719642303884, 0.19372792910039424, 0.18920201371610165, 0.18742284691333772, 0.18653794595249928] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [62, 15, 0]]
** centroid: 1, normalized-entropy: 0.7114160189012126, [(1, 62), (2, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 49, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [83, 3, 0]]
** centroid: 4, normalized-entropy: 0.21832103023746746, [(1, 83), (2, 3)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 39, 17]]
** centroid: 5, normalized-entropy: 0.8856128713989709, [(2, 39), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [17, 55, 0]]
** centroid: 6, normalized-entropy: 0.7885131605379784, [(1, 17), (2, 55)]
*** center 7: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24191055632382633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24191055632382633, 0.19901367877610027] ***
*** starting iteration: 2; err: [Inf, 0.24191055632382633, 0.19901367877610027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24191055632382633, 0.19901367877610027, 0.19401004634797572] ***
*** starting iteration: 3; err: [Inf, 0.24191055632382633, 0.19901367877610027, 0.19401004634797572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24191055632382633, 0.19901367877610027, 0.19401004634797572, 0.19052021414600312] ***
*** starting iteration: 4; err: [Inf, 0.24191055632382633, 0.19901367877610027, 0.19401004634797572, 0.19052021414600312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24191055632382633, 0.19901367877610027, 0.19401004634797572, 0.19052021414600312, 0.18967346722073852] ***
*** finished computation of 7 references, err: [Inf, 0.24191055632382633, 0.19901367877610027, 0.19401004634797572, 0.19052021414600312, 0.18967346722073852] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [71, 7, 0]]
** centroid: 1, normalized-entropy: 0.4356133734874324, [(1, 71), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [39, 16, 0]]
** centroid: 2, normalized-entropy: 0.8698926856041562, [(1, 39), (2, 16)]
*** center 3: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 73, 19]]
** centroid: 4, normalized-entropy: 0.7347813522127804, [(2, 73), (3, 19)]
*** center 5: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [65, 24, 0]]
** centroid: 6, normalized-entropy: 0.8409805336163159, [(1, 65), (2, 24)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 55, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2911921796128154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911921796128154, 0.22984176427312195] ***
*** starting iteration: 2; err: [Inf, 0.2911921796128154, 0.22984176427312195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911921796128154, 0.22984176427312195, 0.2173755851238966] ***
*** starting iteration: 3; err: [Inf, 0.2911921796128154, 0.22984176427312195, 0.2173755851238966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911921796128154, 0.22984176427312195, 0.2173755851238966, 0.20733860254473985] ***
*** starting iteration: 4; err: [Inf, 0.2911921796128154, 0.22984176427312195, 0.2173755851238966, 0.20733860254473985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911921796128154, 0.22984176427312195, 0.2173755851238966, 0.20733860254473985, 0.19675787485949695] ***
*** starting iteration: 5; err: [Inf, 0.2911921796128154, 0.22984176427312195, 0.2173755851238966, 0.20733860254473985, 0.19675787485949695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911921796128154, 0.22984176427312195, 0.2173755851238966, 0.20733860254473985, 0.19675787485949695, 0.19011318038590252] ***
*** starting iteration: 6; err: [Inf, 0.2911921796128154, 0.22984176427312195, 0.2173755851238966, 0.20733860254473985, 0.19675787485949695, 0.19011318038590252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911921796128154, 0.22984176427312195, 0.2173755851238966, 0.20733860254473985, 0.19675787485949695, 0.19011318038590252, 0.18811798476986588] ***
*** starting iteration: 7; err: [Inf, 0.2911921796128154, 0.22984176427312195, 0.2173755851238966, 0.20733860254473985, 0.19675787485949695, 0.19011318038590252, 0.18811798476986588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911921796128154, 0.22984176427312195, 0.2173755851238966, 0.20733860254473985, 0.19675787485949695, 0.19011318038590252, 0.18811798476986588, 0.1868581074718386] ***
*** starting iteration: 8; err: [Inf, 0.2911921796128154, 0.22984176427312195, 0.2173755851238966, 0.20733860254473985, 0.19675787485949695, 0.19011318038590252, 0.18811798476986588, 0.1868581074718386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911921796128154, 0.22984176427312195, 0.2173755851238966, 0.20733860254473985, 0.19675787485949695, 0.19011318038590252, 0.18811798476986588, 0.1868581074718386, 0.186513367947191] ***
*** finished computation of 7 references, err: [Inf, 0.2911921796128154, 0.22984176427312195, 0.2173755851238966, 0.20733860254473985, 0.19675787485949695, 0.19011318038590252, 0.18811798476986588, 0.1868581074718386, 0.186513367947191] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [67, 19, 0]]
** centroid: 1, normalized-entropy: 0.7618624463753669, [(1, 67), (2, 19)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 62, 22]]
** centroid: 2, normalized-entropy: 0.8296071030882032, [(2, 62), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [38, 33, 0]]
** centroid: 3, normalized-entropy: 0.9964196342978481, [(1, 38), (2, 33)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 62, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [64, 3, 0]]
** centroid: 6, normalized-entropy: 0.26377743669413856, [(1, 64), (2, 3)]
*** center 7: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.270325027378276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.270325027378276, 0.20154651783034205] ***
*** starting iteration: 2; err: [Inf, 0.270325027378276, 0.20154651783034205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.270325027378276, 0.20154651783034205, 0.1935131901614368] ***
*** starting iteration: 3; err: [Inf, 0.270325027378276, 0.20154651783034205, 0.1935131901614368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.270325027378276, 0.20154651783034205, 0.1935131901614368, 0.19106339776702225] ***
*** starting iteration: 4; err: [Inf, 0.270325027378276, 0.20154651783034205, 0.1935131901614368, 0.19106339776702225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.270325027378276, 0.20154651783034205, 0.1935131901614368, 0.19106339776702225, 0.19022413095459342] ***
*** finished computation of 7 references, err: [Inf, 0.270325027378276, 0.20154651783034205, 0.1935131901614368, 0.19106339776702225, 0.19022413095459342] ***
*** center 1: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [22, 50, 0]]
** centroid: 2, normalized-entropy: 0.887976319515135, [(1, 22), (2, 50)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [72, 17, 0]]
** centroid: 3, normalized-entropy: 0.7035821005719904, [(1, 72), (2, 17)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 49, 15]]
** centroid: 4, normalized-entropy: 0.7855602922535471, [(2, 49), (3, 15)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 58, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [33, 11, 0]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(1, 33), (2, 11)]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2373173257894814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373173257894814, 0.21163787071127443] ***
*** starting iteration: 2; err: [Inf, 0.2373173257894814, 0.21163787071127443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373173257894814, 0.21163787071127443, 0.20519955444522203] ***
*** starting iteration: 3; err: [Inf, 0.2373173257894814, 0.21163787071127443, 0.20519955444522203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373173257894814, 0.21163787071127443, 0.20519955444522203, 0.2017701325044036] ***
*** starting iteration: 4; err: [Inf, 0.2373173257894814, 0.21163787071127443, 0.20519955444522203, 0.2017701325044036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373173257894814, 0.21163787071127443, 0.20519955444522203, 0.2017701325044036, 0.20010151211544872] ***
*** starting iteration: 5; err: [Inf, 0.2373173257894814, 0.21163787071127443, 0.20519955444522203, 0.2017701325044036, 0.20010151211544872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373173257894814, 0.21163787071127443, 0.20519955444522203, 0.2017701325044036, 0.20010151211544872, 0.19948231073096395] ***
*** finished computation of 7 references, err: [Inf, 0.2373173257894814, 0.21163787071127443, 0.20519955444522203, 0.2017701325044036, 0.20010151211544872, 0.19948231073096395] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [30, 36, 0]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(1, 30), (2, 36)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [54, 6, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 54), (2, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [50, 20, 0]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(1, 50), (2, 20)]
*** center 5: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [48, 23, 0]]
** centroid: 6, normalized-entropy: 0.9086185980409245, [(1, 48), (2, 23)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 104, 20]]
** centroid: 7, normalized-entropy: 0.6373874992221911, [(2, 104), (3, 20)]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 350,3 => 34,1 => 616), Dict(2 => 338,3 => 30,1 => 632))
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2), 0.9419958881036726)
[ Info: ===== scores for single classifier: {"micro_f1":0.936,"precision":0.936,"recall":0.936,"macro_recall":0.9207626977588029,"macro_f1":0.8734022231155768,"accuracy":0.936,"class_f1":{"2":0.8990536277602523,"3":0.7567567567567568,"1":0.9643962848297214},"class_precision":{"2":0.9628378378378378,"3":0.6363636363636364,"1":0.943939393939394},"class_recall":{"2":0.8431952662721893,"3":0.9333333333333333,"1":0.9857594936708861}}
[ Info: ===== scores for 1: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.9603259015138276,"macro_f1":0.9522779518568468,"accuracy":0.971,"class_f1":{"2":0.9580318379160637,"3":0.9180327868852459,"1":0.9807692307692308},"class_precision":{"2":0.9376770538243626,"3":0.9032258064516129,"1":0.9935064935064936},"class_recall":{"2":0.9792899408284024,"3":0.9333333333333333,"1":0.9683544303797469}}
[ Info: ===== scores for 5: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.9555322530979785,"macro_f1":0.936277632071937,"accuracy":0.968,"class_f1":{"2":0.9529411764705883,"3":0.8749999999999999,"1":0.980891719745223},"class_precision":{"2":0.9473684210526315,"3":0.8235294117647058,"1":0.9871794871794872},"class_recall":{"2":0.9585798816568047,"3":0.9333333333333333,"1":0.9746835443037974}}
[ Info: ===== scores for 7: {"micro_f1":0.967,"precision":0.967,"recall":0.967,"macro_recall":0.955463594071189,"macro_f1":0.931350960211606,"accuracy":0.967,"class_f1":{"2":0.951683748169839,"3":0.8615384615384616,"1":0.9808306709265177},"class_precision":{"2":0.9420289855072463,"3":0.8,"1":0.9903225806451613},"class_recall":{"2":0.9615384615384616,"3":0.9333333333333333,"1":0.9715189873417721}}
[ Info: ===== scores for 9: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.9690745179304089,"macro_f1":0.9398471905292217,"accuracy":0.971,"class_f1":{"2":0.9575402635431918,"3":0.8787878787878789,"1":0.9832134292565947},"class_precision":{"2":0.9478260869565217,"3":0.8055555555555556,"1":0.9935379644588045},"class_recall":{"2":0.9674556213017751,"3":0.9666666666666667,"1":0.9731012658227848}}
[ Info: ===== scores for 11: {"micro_f1":0.966,"precision":0.966,"recall":0.966,"macro_recall":0.9742684692782064,"macro_f1":0.9254728729389327,"accuracy":0.966,"class_f1":{"2":0.9497041420118343,"3":0.8450704225352113,"1":0.9816440542697524},"class_precision":{"2":0.9497041420118343,"3":0.7317073170731707,"1":0.9903381642512077},"class_recall":{"2":0.9497041420118343,"3":1.0,"1":0.9731012658227848}}
(score = 0.971, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.969, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.967, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.966, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: ("config: ", "{\"score\":0.977,\"k\":1,\"kernel\":\"direct_kernel\",\"dist\":\"l2_distance\",\"kernel_fun\":\"fun\"}")
[ Info: ===== scores optimized! B: {"micro_f1":0.977,"precision":0.977,"recall":0.977,"macro_recall":0.9736153762930783,"macro_f1":0.9575352967508319,"accuracy":0.977,"class_f1":{"2":0.966325036603221,"3":0.9206349206349207,"1":0.9856459330143541},"class_precision":{"2":0.9565217391304348,"3":0.8787878787878788,"1":0.9935691318327974},"class_recall":{"2":0.9763313609467456,"3":0.9666666666666667,"1":0.9778481012658228}}
Test Summary: | Pass  Total
AKNC          |    8      8
    Testing KCenters tests passed 
