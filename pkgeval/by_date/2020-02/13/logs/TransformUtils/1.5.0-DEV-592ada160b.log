Julia Version 1.5.0-DEV.267
Commit 592ada160b (2020-02-13 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_KN85MZ/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.022259550333829606 -0.14884690793660627; -0.022259550333829606 0.0 -0.06953236206682499; 0.14884690793660627 0.06953236206682499 0.0])
dAA = so3([0.0 0.0767291755874751 0.1773022768076441; -0.0767291755874751 0.0 0.08069870746353097; -0.1773022768076441 -0.08069870746353097 0.0])
dAA = so3([0.0 0.048209085571719365 -0.0767113432608903; -0.048209085571719365 0.0 -0.0545094010647354; 0.0767113432608903 0.0545094010647354 0.0])
dAA = Quaternion(0.9933846859635767, [0.04475546362032185, -0.056682054203072665, -0.08928022681700734])
dAA = SO3([0.9989766452632376 -0.030728790010042206 -0.03318740247634297; 0.03509118733434245 0.9895196918050146 0.14006922610472103; 0.02853543043435877 -0.14109047095614966 0.989585371868086])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8860029015526151 0.13948194460232483 0.4422031722752574; -0.22688422088974974 0.9621277414815922 0.15110843584254893; -0.40437904094005445 -0.23421143482222315 0.8840942229462407]), [0.6953236206682498, -1.4884690793660627, -0.22259550333829606])
xj = SE3(SO3([0.8632706818156958 0.4035476116246515 -0.3031716594101488; -0.4670441862844561 0.8664154237867374 -0.17661834978942173; 0.1913986885413641 0.2940640042175983 0.9364255995262828]), [0.545094010647354, -0.767113432608903, -0.4820908557171936])
Dx = SE3(SO3([0.7934276671307058 0.04205504642084819 -0.6072099390672605; -0.3737732561705084 0.8210167681244085 -0.4315379698592547; 0.4803811923912318 0.5693530008080154 0.6671364706472633]), [-0.19183360255317117, 0.7338587398872557, -0.1868474285728327])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
