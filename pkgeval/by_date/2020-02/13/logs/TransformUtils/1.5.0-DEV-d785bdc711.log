Julia Version 1.5.0-DEV.263
Commit d785bdc711 (2020-02-12 15:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_mRaLCw/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.20724698880273623 0.05976494410656002; -0.20724698880273623 0.0 -0.04671230436440157; -0.05976494410656002 0.04671230436440157 0.0])
dAA = so3([0.0 -0.05736748816239021 0.031533139168716244; 0.05736748816239021 0.0 0.08722007548160882; -0.031533139168716244 -0.08722007548160882 0.0])
dAA = so3([0.0 -0.0009807918817908653 0.012053866645379017; 0.0009807918817908653 0.0 0.05181513056095471; -0.012053866645379017 -0.05181513056095471 0.0])
dAA = Quaternion(0.9977171471841745, [-0.006859635453836954, 0.062304146900541355, -0.025132307795119803])
dAA = SO3([0.9905506974946761 -0.1297957960090855 -0.04429861206831558; 0.1330418018430494 0.9878317855459413 0.08054962710945869; 0.03330457408774395 -0.08568205648492531 0.9957657307526446])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9866909713579775 -0.15019025991714846 0.06232024443686305; 0.13310695301865866 0.9661530265848524 0.2209770763654414; -0.09339949731524029 -0.20974082827849447 0.9732858361521097]), [0.46712304364401563, 0.5976494410656001, -2.072469888027362])
xj = SE3(SO3([0.9439936057618278 0.11959048652665862 0.30752916579261197; -0.1326337587849 0.9909256340180375 0.02178701164775325; -0.30213301426916545 -0.06135554887919639 0.9512891980414583]), [-0.518151305609547, 0.12053866645379016, 0.009807918817908653])
Dx = SE3(SO3([0.9419945639806659 0.2556285225512029 0.217486321154145; -0.20655352382375855 0.9522932378133879 -0.22466248242838024; -0.2645408914078555 0.16670827116008172 0.9498560254585712]), [-1.230151766610076, -0.7497220802170057, 1.8598184139773588])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
