Julia Version 1.5.0-DEV.299
Commit 6a9a92683d (2020-02-20 07:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_8sGLda/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.003987734971095255 -0.08981434671067914; -0.003987734971095255 0.0 0.01127668394719345; 0.08981434671067914 -0.01127668394719345 0.0])
dAA = so3([0.0 -0.06694552516737419 0.08736894357213128; 0.06694552516737419 0.0 -0.019280945975090506; -0.08736894357213128 0.019280945975090506 0.0])
dAA = so3([0.0 -0.01105554366076651 -0.13263773434334447; 0.01105554366076651 0.0 -0.05242883754747349; 0.13263773434334447 0.05242883754747349 0.0])
dAA = Quaternion(0.9959193786400192, [-0.0012483633613214868, 0.08212149996982977, -0.03740443932077773])
dAA = SO3([0.9942242455564199 -0.10600829247073779 0.016744894004036212; 0.10731703112778077 0.9835923620755533 -0.14501420653354102; -0.0010974414275151563 0.14597365239683519 0.9892878693425089])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9623860945526171 -0.15996528841765048 0.21959988960201904; 0.17042546823122728 0.984931326336733 -0.029418398643211482; -0.21158488790537003 0.06573727178718222 0.9751463717350591]), [-0.11276683947193449, -0.8981434671067914, -0.039877349710952546])
xj = SE3(SO3([0.899506768553334 0.17868052862058892 0.39869893656568217; -0.18750652455333067 0.9821143451203752 -0.01710895551188793; -0.3946249822004052 -0.05936903065271883 0.916922265856101]), [0.5242883754747348, -1.3263773434334447, 0.11055543660766509])
Dx = SE3(SO3([0.917213601391808 0.3518985429312168 0.1867796158705667; -0.35451247929928603 0.9348297441545732 -0.02035316842579834; -0.18176939083064342 -0.04754750179328232 0.9821909812405503]), [0.5082818172109425, -0.5137986400297133, 0.2991891955275798])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
