Julia Version 1.5.0-DEV.299
Commit 6a9a92683d (2020-02-20 07:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ProgressMeter ────── v1.2.0
  Installed ArrayLayouts ─────── v0.1.5
  Installed OrderedCollections ─ v1.1.0
  Installed AdvancedHMC ──────── v0.2.20
  Installed StatsFuns ────────── v0.9.4
  Installed LazyArrays ───────── v0.14.11
  Installed BinaryProvider ───── v0.5.8
  Installed StatsBase ────────── v0.32.1
  Installed InplaceOps ───────── v0.3.0
  Installed SortingAlgorithms ── v0.3.1
  Installed ArgCheck ─────────── v1.1.0
  Installed Parameters ───────── v0.12.0
  Installed OpenSpecFun_jll ──── v0.5.3+1
  Installed DataAPI ──────────── v1.1.0
  Installed Missings ─────────── v0.4.3
  Installed Requires ─────────── v1.0.1
  Installed Rmath ────────────── v0.6.0
  Installed StaticArrays ─────── v0.12.1
  Installed SpecialFunctions ─── v0.10.0
  Installed DataStructures ───── v0.17.9
  Installed FillArrays ───────── v0.8.4
  Installed MacroTools ───────── v0.5.4
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.1.0
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.1
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         ################################################                          66.7%######################################################################## 100.0%
#=#=#                                                                         ################                                                          22.6%##############################################                            64.3%######################################################################## 100.0%
#=#=#                                                                                                                                                    0.5%###                                                                        5.2%#######                                                                   10.7%#############                                                             19.3%#####################                                                     30.2%##############################                                            42.5%########################################                                  56.7%#################################################                         69.4%################################################################          89.2%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       ######################################################################## 100.0%
Status `/tmp/jl_znwRzh/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.4.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.16.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.1.1
  [ffbed154] DocStringExtensions v0.8.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.1
  [26cc04aa] FiniteDifferences v0.9.2
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.4.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [c7f686f2] MCMCChains v2.0.0
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.29.0
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.5.3
  [2dfb63ee] PooledArrays v0.5.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v0.8.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.1
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.1
  [9f7883ad] Tracker v0.2.6
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.7.1
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.166576906
│   t_steps = 0.008438398
└   t_step / t_steps = 19.74034716068145
Sampling  0%|                               |  ETA: 6:31:47[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.35805303231243085
  log_density:                   -10.95226014226823
  hamiltonian_energy:            13.30362081946219
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  3.2906836243350703
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:24[K
  iterations:                    1548
  n_steps:                       83
  is_accept:                     true
  acceptance_rate:               0.9908487444347934
  log_density:                   -15.36876341551486
  hamiltonian_energy:            20.52494880272443
  hamiltonian_energy_error:      -0.12789380853352483
  max_hamiltonian_energy_error:  -0.4024859684983575
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.8467543142891429
  nom_step_size:                 0.8467543142891429
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8479533422579952, 0.9504 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▌                          |  ETA: 0:00:21[K
  iterations:                    1763
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.6080548605156382
  log_density:                   -10.973803709091486
  hamiltonian_energy:            22.10543244930423
  hamiltonian_energy_error:      -0.3018720270550581
  max_hamiltonian_energy_error:  1.3483118634975604
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.7841480796498079
  nom_step_size:                 0.7841480796498079
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8479533422579952, 0.9504 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▏                         |  ETA: 0:00:19[K
  iterations:                    2007
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9218451937000749
  log_density:                   -16.316762417866823
  hamiltonian_energy:            21.563985404189616
  hamiltonian_energy_error:      0.13077059248991318
  max_hamiltonian_energy_error:  0.18307366102247968
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████                         |  ETA: 0:00:16[K
  iterations:                    2341
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9797034761438079
  log_density:                   -13.06317236433277
  hamiltonian_energy:            15.75438361655573
  hamiltonian_energy_error:      -0.02614175164410426
  max_hamiltonian_energy_error:  -0.24375959454420482
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████▏                       |  ETA: 0:00:13[K
  iterations:                    2755
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9945619070815771
  log_density:                   -14.688047675342249
  hamiltonian_energy:            19.73406968807452
  hamiltonian_energy_error:      -0.15766084906188382
  max_hamiltonian_energy_error:  -0.3390251817190588
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████                       |  ETA: 0:00:12[K
  iterations:                    3108
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8153419986237674
  log_density:                   -15.645750617360246
  hamiltonian_energy:            21.745995965693687
  hamiltonian_energy_error:      0.0848763651896185
  max_hamiltonian_energy_error:  0.5486271893889381
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|█████████▏                     |  ETA: 0:00:10[K
  iterations:                    3526
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9452264096171169
  log_density:                   -12.938013518589182
  hamiltonian_energy:            16.094368060715613
  hamiltonian_energy_error:      -0.010222574545935004
  max_hamiltonian_energy_error:  -0.24915132640445137
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|██████████                     |  ETA: 0:00:09[K
  iterations:                    3892
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9992794129836271
  log_density:                   -15.398080910387632
  hamiltonian_energy:            18.283883793225094
  hamiltonian_energy_error:      -0.0054901431050318195
  max_hamiltonian_energy_error:  -0.4134714963427015
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████▏                   |  ETA: 0:00:08[K
  iterations:                    4299
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9786667748510514
  log_density:                   -15.20449839941634
  hamiltonian_energy:            21.831988123641718
  hamiltonian_energy_error:      -0.2534849706103337
  max_hamiltonian_energy_error:  -0.3668904587943267
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████                   |  ETA: 0:00:07[K
  iterations:                    4659
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.590241759946007
  hamiltonian_energy:            15.805908993403474
  hamiltonian_energy_error:      -0.22141957602692486
  max_hamiltonian_energy_error:  -0.42067735723823674
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████                  |  ETA: 0:00:06[K
  iterations:                    5056
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9969934648922859
  log_density:                   -16.244011522960893
  hamiltonian_energy:            19.497580825052403
  hamiltonian_energy_error:      0.0029670602262221735
  max_hamiltonian_energy_error:  -0.48634161805341947
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|██████████████                 |  ETA: 0:00:06[K
  iterations:                    5425
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5571938446423188
  log_density:                   -19.794488467659598
  hamiltonian_energy:            22.50605804927862
  hamiltonian_energy_error:      1.143288223791977
  max_hamiltonian_energy_error:  1.21156125171116
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████                |  ETA: 0:00:05[K
  iterations:                    5821
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8250058251852798
  log_density:                   -18.733126932472224
  hamiltonian_energy:            27.971469177818065
  hamiltonian_energy_error:      0.05367665396196841
  max_hamiltonian_energy_error:  0.478143910146013
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|████████████████               |  ETA: 0:00:05[K
  iterations:                    6175
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.567937750350723
  hamiltonian_energy:            18.815625196796162
  hamiltonian_energy_error:      -0.8685554846927062
  max_hamiltonian_energy_error:  -0.8685554846927062
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▉              |  ETA: 0:00:04[K
  iterations:                    6534
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8370440656801025
  log_density:                   -13.008099451551075
  hamiltonian_energy:            17.79673531947341
  hamiltonian_energy_error:      0.029913661500909683
  max_hamiltonian_energy_error:  0.3297413599686472
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▊             |  ETA: 0:00:04[K
  iterations:                    6874
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.363634917348147
  hamiltonian_energy:            18.756481093737726
  hamiltonian_energy_error:      -0.01493468335347714
  max_hamiltonian_energy_error:  -0.06624574664770577
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▋            |  ETA: 0:00:03[K
  iterations:                    7229
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9838537835695644
  log_density:                   -13.517359413246098
  hamiltonian_energy:            20.116849034382323
  hamiltonian_energy_error:      -0.38933531348405737
  max_hamiltonian_energy_error:  -0.38933531348405737
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▍           |  ETA: 0:00:03[K
  iterations:                    7496
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9217707523283009
  log_density:                   -14.683614083048692
  hamiltonian_energy:            20.456214493756093
  hamiltonian_energy_error:      -0.05182154489703805
  max_hamiltonian_energy_error:  0.17371632241732726
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▌          |  ETA: 0:00:03[K
  iterations:                    7941
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8537598553818738
  log_density:                   -15.69167933822132
  hamiltonian_energy:            23.827920978869674
  hamiltonian_energy_error:      -0.08969893349655678
  max_hamiltonian_energy_error:  0.33937627736531795
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▌         |  ETA: 0:00:02[K
  iterations:                    8299
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9972884583771833
  log_density:                   -13.934291317118113
  hamiltonian_energy:            16.412301055312994
  hamiltonian_energy_error:      0.01916323893540195
  max_hamiltonian_energy_error:  -0.21388319720653115
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▎        |  ETA: 0:00:02[K
  iterations:                    8637
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7710414278162595
  log_density:                   -16.461178620699016
  hamiltonian_energy:            20.213222526839225
  hamiltonian_energy_error:      0.4547148068103155
  max_hamiltonian_energy_error:  0.47330299864342606
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▏       |  ETA: 0:00:02[K
  iterations:                    8972
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9982746387899387
  log_density:                   -20.2337296938316
  hamiltonian_energy:            23.097691947062188
  hamiltonian_energy_error:      0.012151054424979435
  max_hamiltonian_energy_error:  -1.0688334700550683
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████▎      |  ETA: 0:00:02[K
  iterations:                    9388
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5602907935192747
  log_density:                   -14.279061916184531
  hamiltonian_energy:            26.107632341531065
  hamiltonian_energy_error:      -0.03593905233570993
  max_hamiltonian_energy_error:  1.2182881445635942
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▉      |  ETA: 0:00:01[K
  iterations:                    9650
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8025633246608054
  log_density:                   -15.067001840849628
  hamiltonian_energy:            19.633396248620492
  hamiltonian_energy_error:      0.23456934260389062
  max_hamiltonian_energy_error:  0.3890482229355037
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████     |  ETA: 0:00:01[K
  iterations:                    10065
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7918853129830656
  log_density:                   -13.940726827415666
  hamiltonian_energy:            19.533656343760047
  hamiltonian_energy_error:      0.09843885717138434
  max_hamiltonian_energy_error:  0.4363415017294514
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▊    |  ETA: 0:00:01[K
  iterations:                    10376
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9821615917865477
  log_density:                   -12.83646896984202
  hamiltonian_energy:            15.653780652484262
  hamiltonian_energy_error:      -0.0015781386225341976
  max_hamiltonian_energy_error:  -0.09672196719369097
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 90%|███████████████████████████▉   |  ETA: 0:00:01[K
  iterations:                    10796
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8975311366132862
  log_density:                   -15.54744731563482
  hamiltonian_energy:            19.310592433482128
  hamiltonian_energy_error:      0.22054044931740435
  max_hamiltonian_energy_error:  0.2413081280994689
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|████████████████████████████▊  |  ETA: 0:00:01[K
  iterations:                    11120
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9321543911970602
  log_density:                   -13.601632776485511
  hamiltonian_energy:            18.997617852908945
  hamiltonian_energy_error:      -0.060716984684408004
  max_hamiltonian_energy_error:  0.16181249694520616
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▌ |  ETA: 0:00:00[K
  iterations:                    11414
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9988249624192155
  log_density:                   -12.351517205737153
  hamiltonian_energy:            15.426225031758431
  hamiltonian_energy_error:      -0.10441748035911047
  max_hamiltonian_energy_error:  -0.10984007327824763
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▎|  ETA: 0:00:00[K
  iterations:                    11717
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7823369642837127
  log_density:                   -11.647160289991394
  hamiltonian_energy:            16.132770366885005
  hamiltonian_energy_error:      -0.015936678428616347
  max_hamiltonian_energy_error:  0.41203272071233954
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7740736941843375
  log_density:                   -12.605044458449662
  hamiltonian_energy:            15.157381865293214
  hamiltonian_energy_error:      0.26965626429210054
  max_hamiltonian_energy_error:  0.4830704021269838
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7527882553429608
  nom_step_size:                 0.7527882553429608
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9551859677590613, 0.9152 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.686209715 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9551859677590613, 0.9152 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.753), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.1052061830155353
└   average_acceptance_rate = 0.8518342388589005
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.075964711 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠒⠲│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢣⠀⠀⠀⠀⡸⠣⡀⡸⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⢣⠀⠀⢰⠁⠀⠑⠇⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠈⠉⠢⠇⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢠⢃⡄⠀⠀⠀⠀⠀⠀⠀⣀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡄⠀⠀⠀⢀⠔⢃⠎⠘⢄⠀⢀⡠⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠘⡄⠀⢠⠧⠤⠎⠀⠀⠈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢆⠘⢴⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠑⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
