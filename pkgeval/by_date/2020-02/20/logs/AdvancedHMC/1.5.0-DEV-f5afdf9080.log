Julia Version 1.5.0-DEV.295
Commit f5afdf9080 (2020-02-19 18:51 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ─────────── v0.4.3
  Installed ProgressMeter ────── v1.2.0
  Installed OpenSpecFun_jll ──── v0.5.3+1
  Installed SortingAlgorithms ── v0.3.1
  Installed Rmath ────────────── v0.6.0
  Installed OrderedCollections ─ v1.1.0
  Installed AdvancedHMC ──────── v0.2.20
  Installed StatsBase ────────── v0.32.1
  Installed Requires ─────────── v1.0.1
  Installed StatsFuns ────────── v0.9.4
  Installed ArrayLayouts ─────── v0.1.5
  Installed InplaceOps ───────── v0.3.0
  Installed ArgCheck ─────────── v1.1.0
  Installed LazyArrays ───────── v0.14.11
  Installed FillArrays ───────── v0.8.4
  Installed StaticArrays ─────── v0.12.1
  Installed Parameters ───────── v0.12.0
  Installed BinaryProvider ───── v0.5.8
  Installed DataAPI ──────────── v1.1.0
  Installed MacroTools ───────── v0.5.4
  Installed SpecialFunctions ─── v0.10.0
  Installed DataStructures ───── v0.17.9
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.1.0
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.1
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ###############                                                           21.9%#################################################                         68.7%######################################################################## 100.0%
#=#=#                                                                                                                                                    0.3%###                                                                        4.2%#######                                                                   10.3%#############                                                             18.6%#####################                                                     29.6%###############################                                           43.2%##########################################                                59.4%##########################################################                80.9%######################################################################## 100.0%
#=#=#                                                                         ################################################                          66.7%######################################################################## 100.0%
Status `/tmp/jl_njsEpL/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.4.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.16.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.1.1
  [ffbed154] DocStringExtensions v0.8.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.1
  [26cc04aa] FiniteDifferences v0.9.2
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.4.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [c7f686f2] MCMCChains v2.0.0
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.29.0
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.5.3
  [2dfb63ee] PooledArrays v0.5.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v0.8.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.1
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.1
  [9f7883ad] Tracker v0.2.6
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.7.1
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.170262658
│   t_steps = 0.008021198
└   t_step / t_steps = 21.226587100829576
Sampling  0%|                               |  ETA: 5:34:19[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               1.6521971693535098e-7
  log_density:                   -10.282795102763805
  hamiltonian_energy:            20.140091416714483
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  15.615989631072502
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▋                           |  ETA: 0:00:20[K
  iterations:                    1411
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.5979696190514987
  log_density:                   -17.39379440815891
  hamiltonian_energy:            22.281766045820557
  hamiltonian_energy_error:      0.7585074290531502
  max_hamiltonian_energy_error:  1.587865933030912
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8428445692657534
  nom_step_size:                 0.8428445692657534
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9532383430216161, 0.8743 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:17[K
  iterations:                    1703
  n_steps:                       47
  is_accept:                     true
  acceptance_rate:               0.9252069361354269
  log_density:                   -13.715882278842395
  hamiltonian_energy:            19.438592885354343
  hamiltonian_energy_error:      -0.1959569243715933
  max_hamiltonian_energy_error:  0.4652776252637345
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8084629975106229
  nom_step_size:                 0.8084629975106229
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9532383430216161, 0.8743 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▍                         |  ETA: 0:00:14[K
  iterations:                    2090
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9317954192351413
  log_density:                   -13.256605821221655
  hamiltonian_energy:            15.6651286022475
  hamiltonian_energy_error:      0.12697397630686424
  max_hamiltonian_energy_error:  0.190390691652933
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▋                        |  ETA: 0:00:11[K
  iterations:                    2553
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.476069062807804
  hamiltonian_energy:            19.038704914483763
  hamiltonian_energy_error:      -0.5804738447747084
  max_hamiltonian_energy_error:  -0.5804738447747084
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▊                       |  ETA: 0:00:09[K
  iterations:                    2999
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7277355133899369
  log_density:                   -13.36444029122179
  hamiltonian_energy:            20.478037004922413
  hamiltonian_energy_error:      0.034096108387291935
  max_hamiltonian_energy_error:  0.6073568359943309
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|█████████                      |  ETA: 0:00:08[K
  iterations:                    3506
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9388655058137262
  log_density:                   -10.96319148978867
  hamiltonian_energy:            17.26102747246398
  hamiltonian_energy_error:      -0.45372576261716446
  max_hamiltonian_energy_error:  -0.45372576261716446
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 33%|██████████▎                    |  ETA: 0:00:07[K
  iterations:                    3978
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8834043034748191
  log_density:                   -12.37068545263827
  hamiltonian_energy:            22.221233071464535
  hamiltonian_energy_error:      -0.5961814308204119
  max_hamiltonian_energy_error:  -0.5961814308204119
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▍                   |  ETA: 0:00:06[K
  iterations:                    4426
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6762533902290161
  log_density:                   -12.970700326440246
  hamiltonian_energy:            19.677599762038
  hamiltonian_energy_error:      0.1653919291949144
  max_hamiltonian_energy_error:  0.7471457952438421
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▋                  |  ETA: 0:00:05[K
  iterations:                    4883
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9736367558644324
  log_density:                   -11.578562458042608
  hamiltonian_energy:            14.963419039960112
  hamiltonian_energy_error:      -0.16709596504877133
  max_hamiltonian_energy_error:  -0.26253284377216346
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▉                 |  ETA: 0:00:04[K
  iterations:                    5357
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9594949910204031
  log_density:                   -11.127666888282118
  hamiltonian_energy:            16.023061811503574
  hamiltonian_energy_error:      -0.3743022061475614
  max_hamiltonian_energy_error:  -0.3743022061475614
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▏               |  ETA: 0:00:04[K
  iterations:                    5836
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -19.525591578009525
  hamiltonian_energy:            23.73350584726106
  hamiltonian_energy_error:      -0.08371400082318203
  max_hamiltonian_energy_error:  -0.8186952034350838
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▌              |  ETA: 0:00:03[K
  iterations:                    6380
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8202900835390554
  log_density:                   -18.12392281742361
  hamiltonian_energy:            24.019113254515897
  hamiltonian_energy_error:      0.29947554619129946
  max_hamiltonian_energy_error:  0.46230413610047805
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|██████████████████             |  ETA: 0:00:03[K
  iterations:                    6960
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9396007874718935
  log_density:                   -11.769976707412834
  hamiltonian_energy:            13.434576264752847
  hamiltonian_energy_error:      0.08659365147338782
  max_hamiltonian_energy_error:  0.1395624580912287
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▋           |  ETA: 0:00:02[K
  iterations:                    7575
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9630845153445244
  log_density:                   -14.825937114499958
  hamiltonian_energy:            17.380113846417174
  hamiltonian_energy_error:      0.11814723204080835
  max_hamiltonian_energy_error:  -0.26163202337638225
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████▏         |  ETA: 0:00:02[K
  iterations:                    8160
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9518582412075519
  log_density:                   -10.428725354503582
  hamiltonian_energy:            12.341408592919258
  hamiltonian_energy_error:      -0.02115741708286123
  max_hamiltonian_energy_error:  0.1014955977294818
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▌        |  ETA: 0:00:02[K
  iterations:                    8718
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9710763493467759
  log_density:                   -10.770641317103795
  hamiltonian_energy:            15.091764200833149
  hamiltonian_energy_error:      -0.32449778374301985
  max_hamiltonian_energy_error:  -0.32449778374301985
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|███████████████████████▉       |  ETA: 0:00:01[K
  iterations:                    9220
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9178688821099019
  log_density:                   -15.61348490858092
  hamiltonian_energy:            20.400586192291748
  hamiltonian_energy_error:      0.056933577100991783
  max_hamiltonian_energy_error:  -0.3383705121078755
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 81%|█████████████████████████      |  ETA: 0:00:01[K
  iterations:                    9670
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9878998129777117
  log_density:                   -13.212246215400029
  hamiltonian_energy:            21.989318917652326
  hamiltonian_energy_error:      -0.6540058296596207
  max_hamiltonian_energy_error:  -0.6540058296596207
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████▏    |  ETA: 0:00:01[K
  iterations:                    10118
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.98236404419986
  log_density:                   -15.24708722254888
  hamiltonian_energy:            21.701124954415302
  hamiltonian_energy_error:      -0.10666635332814778
  max_hamiltonian_energy_error:  -0.1500715550296121
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:01[K
  iterations:                    10563
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9825760415560547
  log_density:                   -11.140726657476586
  hamiltonian_energy:            14.711238886212248
  hamiltonian_energy_error:      -0.2942678426192664
  max_hamiltonian_energy_error:  -0.44375430967332896
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▌  |  ETA: 0:00:00[K
  iterations:                    11033
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.138702734579294
  hamiltonian_energy:            18.407668139591053
  hamiltonian_energy_error:      -0.07578641096046113
  max_hamiltonian_energy_error:  -0.17462267140212262
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▊ |  ETA: 0:00:00[K
  iterations:                    11531
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9146721916068807
  log_density:                   -15.58696631705903
  hamiltonian_energy:            20.69879358320689
  hamiltonian_energy_error:      0.10043664562772037
  max_hamiltonian_energy_error:  0.16886516583539546
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████|  ETA: 0:00:00[K
  iterations:                    11980
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9913162741367338
  log_density:                   -14.620227196140787
  hamiltonian_energy:            18.300942448403436
  hamiltonian_energy_error:      0.04355873105334851
  max_hamiltonian_energy_error:  -0.08782082599240937
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:04[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8630356167671102
  log_density:                   -10.814604466288406
  hamiltonian_energy:            14.385313093073508
  hamiltonian_energy_error:      -0.029674890364740136
  max_hamiltonian_energy_error:  0.302131638160235
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7363056346865844
  nom_step_size:                 0.7363056346865844
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9109867406830441, 0.9544 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 4.922148268 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9109867406830441, 0.9544 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.736), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0859471604802273
└   average_acceptance_rate = 0.861184242758285
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.940341159 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡆⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢇⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢸⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢇⠀⢸⠀⠀⡇│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠘⡄⡎⠀⠀⢱│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠉⠒⠤⡀⢀⠔⠣⡀⡜⠀⠀⠸⠇⠀⠀⠘│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠈⠁⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⡠⠒⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⢀⣠⠃⠀⠀⠀⠀⠀⢀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡆⠀⠀⡼⠋⠢⢄⣀⣀⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠻⡄⡸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠙⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
