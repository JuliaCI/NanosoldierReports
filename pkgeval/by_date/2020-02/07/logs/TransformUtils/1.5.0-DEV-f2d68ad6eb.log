Julia Version 1.5.0-DEV.234
Commit f2d68ad6eb (2020-02-05 16:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_iwaPP0/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.06747737899810512 -0.05809007942082605; -0.06747737899810512 0.0 0.007897340149307677; 0.05809007942082605 -0.007897340149307677 0.0])
dAA = so3([0.0 -0.1428796171173374 -0.021523135533604007; 0.1428796171173374 0.0 -0.00979849995221334; 0.021523135533604007 0.00979849995221334 0.0])
dAA = so3([0.0 0.13902855735357467 0.10233105169228768; -0.13902855735357467 0.0 -0.07983457017064673; -0.10233105169228768 0.07983457017064673 0.0])
dAA = Quaternion(0.9933887266306026, [-0.04408454576761108, 0.08913786076122421, 0.05735706065172811])
dAA = SO3([0.9824786583655436 -0.07117574644616763 -0.17224894476911173; 0.07508698787067976 0.9970439129970512 0.016290482130289035; 0.1705802746766168 -0.028938705454109908 0.9849187383829645])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9354663820266395 -0.3500979148146217 -0.048312505011055995; 0.3487941604343855 0.9366015089738264 -0.033470091646477726; 0.056967374389746736 0.014459025914817248 0.9982713332680314]), [-0.07897340149307676, -0.5809007942082605, -0.6747737899810511])
xj = SE3(SO3([0.8623665418973137 -0.2999160771397592 0.4078900514711862; 0.21213921690648663 0.9455722719653814 0.24675905482986712; -0.45969653040497443 -0.1262672766924382 0.8790538520308661]), [0.7983457017064672, 1.0233105169228767, -1.3902855735357467])
Dx = SE3(SO3([0.8545201246323625 0.04205556391213473 0.5177129379707677; -0.10986958150308147 0.9887987081667071 0.10102370903995196; -0.5076652752145151 -0.14320769627322236 0.8495690225458361]), [1.3394812371242273, 1.1850135426403348, -0.8103534853116316])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
