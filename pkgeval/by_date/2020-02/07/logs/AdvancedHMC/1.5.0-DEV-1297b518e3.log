Julia Version 1.5.0-DEV.247
Commit 1297b518e3 (2020-02-07 18:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed ArrayLayouts ─────── v0.1.5
  Installed OpenSpecFun_jll ──── v0.5.3+1
  Installed Missings ─────────── v0.4.3
  Installed FillArrays ───────── v0.8.4
  Installed AdvancedHMC ──────── v0.2.20
  Installed Parameters ───────── v0.12.0
  Installed LazyArrays ───────── v0.14.11
  Installed InplaceOps ───────── v0.3.0
  Installed Rmath ────────────── v0.6.0
  Installed Requires ─────────── v1.0.1
  Installed StatsFuns ────────── v0.9.3
  Installed DataAPI ──────────── v1.1.0
  Installed OrderedCollections ─ v1.1.0
  Installed BinaryProvider ───── v0.5.8
  Installed MacroTools ───────── v0.5.4
  Installed ProgressMeter ────── v1.2.0
  Installed SpecialFunctions ─── v0.9.0
  Installed ArgCheck ─────────── v1.0.1
  Installed StatsBase ────────── v0.32.0
  Installed DataStructures ───── v0.17.9
  Installed StaticArrays ─────── v0.12.1
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         #                                                                          1.9%###                                                                        5.1%#######                                                                    9.9%###########                                                               15.9%################                                                          23.5%########################                                                  34.2%############################                                              40.2%########################################                                  56.2%#####################################################                     74.9%#######################################################################   99.1%######################################################################## 100.0%
#=#=#                                                                         #########                                                                 13.8%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      #=#=-#  #                                                                     -#O#- #   #                                                                   -=#=#   #   #                                                                 -=O#- #  #    #                                                               ######                                                                     9.5%###############################################                           65.8%######################################################################## 100.0%
#=#=#                                                                         ###############################################                           65.6%######################################################################## 100.0%
Status `/tmp/jl_JjQdOU/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.1.0
  [79e6a3ab] Adapt v1.0.0
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [13072b0f] AxisAlgorithms v1.0.0
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.4.3
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.13.3
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.2.0
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.1.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.8
  [8197267c] IntervalSets v0.4.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5ab0869b] KernelDensity v0.5.1
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.1
  [c7f686f2] MCMCChains v1.0.2
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v1.0.2
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [429524aa] Optim v0.20.1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.3
  [85a6dd25] PositiveFactorizations v0.2.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [c84ed2f1] Ratios v0.3.1
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v2.0.5
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [992d4aef] Showoff v0.3.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.9
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [efce3f68] WoodburyMatrices v0.5.0
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.130609243
│   t_steps = 0.006294858
└   t_step / t_steps = 20.748560650613566
Sampling  0%|                               |  ETA: 6:10:58[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               8.01759249831192e-5
  log_density:                   -11.573331244976755
  hamiltonian_energy:            18.405538920603952
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  9.431287275399917
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.625
  nom_step_size:                 1.625
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███                            |  ETA: 0:00:25[K
  iterations:                    1184
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.7460629693838977
  log_density:                   -15.59976335804308
  hamiltonian_energy:            20.562811291731666
  hamiltonian_energy_error:      0.3114137827079624
  max_hamiltonian_energy_error:  0.6625415761518489
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.9424800983372055
  nom_step_size:                 0.9424800983372055
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.039998814311041, 0.86813 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▉                           |  ETA: 0:00:20[K
  iterations:                    1500
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.85515432548851
  log_density:                   -12.612420791881563
  hamiltonian_energy:            16.46789876614157
  hamiltonian_energy_error:      -0.04789587094952097
  max_hamiltonian_energy_error:  0.4433682626417941
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.9786869314639345
  nom_step_size:                 0.9786869314639345
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.039998814311041, 0.86813 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:18[K
  iterations:                    1713
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9617638288175129
  log_density:                   -17.10071963672075
  hamiltonian_energy:            23.298153069484552
  hamiltonian_energy_error:      0.058286632785620185
  max_hamiltonian_energy_error:  0.16474757693408293
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7492338323709025
  nom_step_size:                 0.7492338323709025
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.039998814311041, 0.86813 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▍                         |  ETA: 0:00:15[K
  iterations:                    2063
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9948272932745902
  log_density:                   -16.519912279525595
  hamiltonian_energy:            23.108395457426532
  hamiltonian_energy_error:      -0.0518791319022327
  max_hamiltonian_energy_error:  -0.09187863206079783
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▍                        |  ETA: 0:00:12[K
  iterations:                    2456
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8498663383688908
  log_density:                   -13.74438806893116
  hamiltonian_energy:            18.734242730118122
  hamiltonian_energy_error:      0.004267316551995748
  max_hamiltonian_energy_error:  0.41714693288288274
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▍                       |  ETA: 0:00:10[K
  iterations:                    2861
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9809639301430603
  log_density:                   -16.27631844729317
  hamiltonian_energy:            23.844656763319414
  hamiltonian_energy_error:      -0.17642228410483085
  max_hamiltonian_energy_error:  -0.17642228410483085
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▋                      |  ETA: 0:00:09[K
  iterations:                    3361
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8941080649346136
  log_density:                   -12.462296154387102
  hamiltonian_energy:            14.59423894992256
  hamiltonian_energy_error:      0.15699171378558852
  max_hamiltonian_energy_error:  0.20296631791428688
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▋                     |  ETA: 0:00:08[K
  iterations:                    3735
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8060937027158589
  log_density:                   -16.560573293229762
  hamiltonian_energy:            21.211410809942734
  hamiltonian_energy_error:      0.29846902095700045
  max_hamiltonian_energy_error:  0.4841675842064177
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▉                    |  ETA: 0:00:07[K
  iterations:                    4202
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9988810642917246
  log_density:                   -14.97195112979282
  hamiltonian_energy:            20.70515435987327
  hamiltonian_energy_error:      -0.1302913997044044
  max_hamiltonian_energy_error:  -0.1302913997044044
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▉                   |  ETA: 0:00:06[K
  iterations:                    4587
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9729869496643079
  log_density:                   -13.953877534015078
  hamiltonian_energy:            17.147236856623916
  hamiltonian_energy_error:      -0.0007906431244890655
  max_hamiltonian_energy_error:  -0.25695067499057345
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████                  |  ETA: 0:00:05[K
  iterations:                    5011
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9675546593011656
  log_density:                   -17.284556302916858
  hamiltonian_energy:            22.114065944208672
  hamiltonian_energy_error:      0.03257303712959825
  max_hamiltonian_energy_error:  -0.38919303210118983
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|██████████████                 |  ETA: 0:00:05[K
  iterations:                    5405
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.985578953330956
  log_density:                   -13.075592635717976
  hamiltonian_energy:            18.76233725668063
  hamiltonian_energy_error:      -0.3373208490848256
  max_hamiltonian_energy_error:  -0.4046080730596202
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|███████████████                |  ETA: 0:00:04[K
  iterations:                    5786
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7622552860574936
  log_density:                   -12.461907001468173
  hamiltonian_energy:            17.933858029973717
  hamiltonian_energy_error:      0.042582817551643615
  max_hamiltonian_energy_error:  0.5262495391469066
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▍              |  ETA: 0:00:04[K
  iterations:                    6362
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.941342374113355
  log_density:                   -11.472518150279212
  hamiltonian_energy:            15.267999463888076
  hamiltonian_energy_error:      -0.13915886379781206
  max_hamiltonian_energy_error:  0.18722733612373865
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▊             |  ETA: 0:00:03[K
  iterations:                    6847
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8325564564060739
  log_density:                   -15.506286256511057
  hamiltonian_energy:            23.53759588136932
  hamiltonian_energy_error:      -0.06774320069726514
  max_hamiltonian_energy_error:  0.4031760341624242
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▋            |  ETA: 0:00:03[K
  iterations:                    7220
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9890744866403838
  log_density:                   -12.836345571335539
  hamiltonian_energy:            16.827338666744275
  hamiltonian_energy_error:      -0.13203406672398188
  max_hamiltonian_energy_error:  -0.16191721697643047
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|███████████████████▊           |  ETA: 0:00:02[K
  iterations:                    7644
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7323070367842278
  log_density:                   -15.652374435744544
  hamiltonian_energy:            17.72659169357348
  hamiltonian_energy_error:      0.577766106806596
  max_hamiltonian_energy_error:  0.5960631205860274
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▋          |  ETA: 0:00:02[K
  iterations:                    7982
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9902091867644326
  log_density:                   -12.139061677438091
  hamiltonian_energy:            14.197030506526938
  hamiltonian_energy_error:      0.02655716481000603
  max_hamiltonian_energy_error:  -0.039959956701057564
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|█████████████████████▉         |  ETA: 0:00:02[K
  iterations:                    8463
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8340073962582795
  log_density:                   -14.978318807594487
  hamiltonian_energy:            17.60431045605935
  hamiltonian_energy_error:      0.3572723957018695
  max_hamiltonian_energy_error:  0.3572723957018695
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 74%|██████████████████████▊        |  ETA: 0:00:02[K
  iterations:                    8822
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8449629746008213
  log_density:                   -14.096685245185206
  hamiltonian_energy:            22.251510431438398
  hamiltonian_energy_error:      -0.20297056496927013
  max_hamiltonian_energy_error:  0.43301647242360275
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|████████████████████████       |  ETA: 0:00:01[K
  iterations:                    9275
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8348807446649656
  log_density:                   -16.14700605657838
  hamiltonian_energy:            19.2740357196677
  hamiltonian_energy_error:      0.38923417600960164
  max_hamiltonian_energy_error:  0.38923417600960164
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|█████████████████████████      |  ETA: 0:00:01[K
  iterations:                    9655
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.678462401843339
  log_density:                   -14.939653356226833
  hamiltonian_energy:            22.42872705071293
  hamiltonian_energy_error:      0.16807278717951135
  max_hamiltonian_energy_error:  0.7602588951522371
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████     |  ETA: 0:00:01[K
  iterations:                    10077
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9994635873733522
  log_density:                   -14.23452314632992
  hamiltonian_energy:            18.447819569257483
  hamiltonian_energy_error:      -0.37321209667299726
  max_hamiltonian_energy_error:  -0.7664888845975248
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|███████████████████████████    |  ETA: 0:00:01[K
  iterations:                    10472
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9623044302134358
  log_density:                   -13.274839479718342
  hamiltonian_energy:            18.699976373533172
  hamiltonian_energy_error:      -0.21340418282466445
  max_hamiltonian_energy_error:  -0.23628488029431693
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 90%|████████████████████████████   |  ETA: 0:00:01[K
  iterations:                    10843
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6335703498430919
  log_density:                   -15.794381195413798
  hamiltonian_energy:            18.625372970832373
  hamiltonian_energy_error:      0.5960620459938184
  max_hamiltonian_energy_error:  0.7751357441521485
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▎ |  ETA: 0:00:00[K
  iterations:                    11332
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.806846299331136
  log_density:                   -15.3882164025047
  hamiltonian_energy:            18.494006135238234
  hamiltonian_energy_error:      0.39679473774585716
  max_hamiltonian_energy_error:  0.3981358488263034
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████▏|  ETA: 0:00:00[K
  iterations:                    11679
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8129003973112102
  log_density:                   -17.894212823945583
  hamiltonian_energy:            21.11741377279663
  hamiltonian_energy_error:      0.46971197090358885
  max_hamiltonian_energy_error:  0.46971197090358885
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5832652092653748
  log_density:                   -11.897004560390013
  hamiltonian_energy:            21.655913276942428
  hamiltonian_energy_error:      -0.049981888971984745
  max_hamiltonian_energy_error:  1.171734555799528
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7556148271095642
  nom_step_size:                 0.7556148271095642
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.011583329277093, 1.06282 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.472278575 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.011583329277093, 1.06282 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.756), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0989333306474962
└   average_acceptance_rate = 0.8517580581518793
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.074490504 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⢠⢆⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢇⠀⠀⠀⡀⠀⠀⡎⠈⢆│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠸⡀⠀⡸⠑⡄⡸⠀⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⢀⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⢇⢠⠃⠀⠈⠃⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠈⠑⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠇⠀⠀⠸⡎⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⡜⢣⠀⠀⠀⢀⡠⠒⠒⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡀⠀⠀⠀⠀⡜⠁⠀⠀⠀⡰⠁⠀⢣⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣣⠀⠀⢀⡜⠀⠀⠀⢀⠔⠃⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⣧⣠⣊⡠⠤⠒⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
