Julia Version 1.5.0-DEV.247
Commit 1297b518e3 (2020-02-07 18:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed IniFile ──────── v0.5.0
  Installed MbedTLS ──────── v0.7.0
  Installed HTTP ─────────── v0.8.8
  Installed BinaryProvider ─ v0.5.8
   Updating `~/.julia/environments/v1.5/Project.toml`
  [cd3eb016] + HTTP v0.8.8
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [b99e7846] + BinaryProvider v0.5.8
  [cd3eb016] + HTTP v0.8.8
  [83e8ac13] + IniFile v0.5.0
  [739be429] + MbedTLS v0.7.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Building MbedTLS → `~/.julia/packages/MbedTLS/a1JFn/deps/build.log`
    Testing HTTP
Status `/tmp/jl_BwXS49/Manifest.toml`
  [b99e7846] BinaryProvider v0.5.8
  [e1450e63] BufferedStreams v1.0.0
  [34da2185] Compat v2.2.0
  [187b0558] ConstructionBase v1.0.0
  [cd3eb016] HTTP v0.8.8
  [83e8ac13] IniFile v0.5.0
  [682c06a0] JSON v0.21.0
  [739be429] MbedTLS v0.7.0
  [69de0a69] Parsers v0.3.11
  [1986cc42] Unitful v1.0.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Running ascii.jl tests...
Running chunking.jl tests...
Running utils.jl tests...
Running client.jl tests...
Client Streaming Test: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:76
  Expression: a == b
   Evaluated: Dict{String,Any}[Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 0,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 1,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 2,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 3,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 4,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 5,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 6,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 7,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 8,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 9,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6")  …  Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 90,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 91,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 92,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 93,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 94,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 95,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 96,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 97,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 98,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe22-264d7e5f11ce228d7f8b56d1"),"args" => Dict{String,Any}(),"id" => 99,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6")] == Dict{String,Any}[Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 0,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 1,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 2,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 3,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 4,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 5,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 6,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 7,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 8,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 9,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6")  …  Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 90,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 91,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 92,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 93,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 94,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 95,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 96,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 97,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 98,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe24-e3c1261e27738c46ce502a1d"),"args" => Dict{String,Any}(),"id" => 99,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6")]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:76
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:57
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
client transfer-encoding chunked
Client Streaming Test: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:76
  Expression: a == b
   Evaluated: Dict{String,Any}[Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 0,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 1,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 2,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 3,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 4,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 5,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 6,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 7,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 8,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 9,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6")  …  Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 90,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 91,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 92,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 93,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 94,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 95,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 96,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 97,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 98,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-afec2fc2c93cced659bf25ac"),"args" => Dict{String,Any}(),"id" => 99,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6")] == Dict{String,Any}[Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 0,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 1,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 2,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 3,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 4,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 5,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 6,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 7,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 8,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 9,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6")  …  Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 90,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 91,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 92,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 93,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 94,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 95,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 96,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 97,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 98,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e3dbe3b-f3464a5ac6559236af34a85c"),"args" => Dict{String,Any}(),"id" => 99,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6")]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:76
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:57
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
client transfer-encoding chunked
Running multipart.jl tests...
Running sniff.jl tests...
Running uri.jl tests...
Running url.jl tests...
Running cookies.jl tests...
Running parser.jl tests...
WARNING: using Messages.status in module Main conflicts with an existing identifier.
Running loopback.jl tests...
📡  GET /echo HTTP/1.1
📡  GET /echo HTTP/1.1
📡  GET /echo HTTP/1.1
📡  GET /echo HTTP/1.1
📡  GET /delay10 HTTP/1.1
📡  PUT /delay10 HTTP/1.1
📡  PUT /abort HTTP/1.1
📡  GET /echo HTTP/1.1
📡  GET /abort HTTP/1.1
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
t = 3.153794050216675
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
t = 0.6677439212799072
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
t = 0.7382340431213379
📡  POST /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  POST /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
Running websockets.jl tests...
Running messages.jl tests...
GET /ip HTTP/1.1
HTTP/1.1 200 OK <= (GET /ip HTTP/1.1)
HEAD /ip HTTP/1.1
HTTP/1.1 200 OK <= (HEAD /ip HTTP/1.1)
OPTIONS /ip HTTP/1.1
HTTP/1.1 200 OK <= (OPTIONS /ip HTTP/1.1)
GET /ip HTTP/1.1
HTTP/1.1 200 OK <= (GET /ip HTTP/1.1)
HEAD /ip HTTP/1.1
HTTP/1.1 200 OK <= (HEAD /ip HTTP/1.1)
OPTIONS /ip HTTP/1.1
HTTP/1.1 200 OK <= (OPTIONS /ip HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x72, 0x67, 0x2f, 0x70, 0x75, 0x74, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x72, 0x67, 0x2f, 0x70, 0x75, 0x74, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x72, 0x67, 0x2f, 0x70, 0x75, 0x74, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x72, 0x67, 0x2f, 0x70, 0x75, 0x74, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
GET /stream/50 HTTP/1.1
HTTP/1.1 200 OK <= (GET /stream/50 HTTP/1.1)
Running handlers.jl tests...
Running server.jl tests...
length(x) = 100018
client:
HTTP/1.1 200 OK
Transfer-Encoding: chunked

f
Body of Request
0


client = "HTTP/1.1 200 OK\r\n\r\nHello"
Testing server port reuse
Starting second server listening on same port
Starting server on same port without port reuse (throws error)
Running async.jl tests...
ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:51828 ≣16
   ⏸    6↑🔒    6↓    0s httpbin.org:443:59784 ≣16
   🔁    6↑     5↓🔒   0s httpbin.org:443:59790 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:59794 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:51852 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:59800 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:59806 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:51864 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:34362 ≣16
   ⏸    6↑🔒    6↓    0s httpbin.org:443:59838 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:59840 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:59842 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:34376 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:59846 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:51904 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:59850 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:51924 ≣16
   ⏸    6↑🔒    6↓    0s httpbin.org:443:34402 ≣16
   🔁    6↑     5↓🔒   0s httpbin.org:443:59872 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:34406 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:59876 ≣16
   🔁    3↑     1↓🔒   0s httpbin.org:443:59878 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:59880 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:34414 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:59900 ≣16
   ⏸    6↑🔒    6↓    0s httpbin.org:443:59902 ≣16
   🔁    6↑     4↓🔒   0s httpbin.org:443:51960 ≣16
   🔁    5↑     3↓🔒   0s httpbin.org:443:34438 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:59908 ≣16
   🔁    2↑     0↓🔒   0s httpbin.org:443:34442 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:51968 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:34446 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:34464 ≣16
   ⏸    5↑🔒    5↓    0s httpbin.org:443:34466 ≣16
   🔁    6↑     4↓🔒   0s httpbin.org:443:34468 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:59938 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:34472 ≣16
   🔁    3↑     1↓🔒   0s httpbin.org:443:59942 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:59946 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:52004 ≣16
]

ConnectionPool[
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:57854 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:47974 ≣16
   🔁    2↑     2↓    0s httpbin.org:80:57862 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:55508 ≣16
   🔁    1↑     1↓    0s httpbin.org:80:55510 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:55512 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:55514 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:57872 ≣16
]

ConnectionPool[
   🔁   17↑🔒   17↓🔒   0s httpbin.org:80:57854 ≣16
   🔁    5↑🔒    5↓🔒   0s httpbin.org:80:47974 ≣16
   🔁   15↑🔒   15↓🔒   0s httpbin.org:80:57862 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:55508 ≣16
   🔁    4↑🔒    4↓🔒   0s httpbin.org:80:55510 ≣16
   🔁    4↑🔒    4↓🔒   0s httpbin.org:80:55512 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:55514 ≣16
   🔁   10↑🔒   10↓🔒   0s httpbin.org:80:57872 ≣16
]

ConnectionPool[
   🔁   24↑    24↓    1s httpbin.org:80:57854 ≣16
   🔁    7↑     7↓    1s httpbin.org:80:47974 ≣16
   🔁   22↑    22↓    1s httpbin.org:80:57862 ≣16
   🔁    6↑     6↓    1s httpbin.org:80:55508 ≣16
   🔁    8↑     8↓    1s httpbin.org:80:55510 ≣16
   🔁    8↑🔒    8↓🔒   0s httpbin.org:80:55512 ≣16
   🔁    5↑     5↓    1s httpbin.org:80:55514 ≣16
   🔁   19↑    19↓    0s httpbin.org:80:57872 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:60016 ≣16
   🔁    5↑🔒    5↓🔒   0s httpbin.org:443:34550 ≣16
   🔁    5↑🔒    5↓🔒   0s httpbin.org:443:60020 ≣16
   🔁    3↑🔒    3↓🔒   0s httpbin.org:443:34554 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:443:34560 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:443:60030 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:443:60032 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:443:60036 ≣16
]

ConnectionPool[
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:57908 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:48024 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:57912 ≣16 2-byte excess
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:57916 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:48032 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:48034 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:57922 ≣16 2-byte excess
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:57924 ≣16
]

ConnectionPool[
   🔁    6↑🔒    6↓🔒   0s httpbin.org:443:34598 ≣16
   🔁    5↑🔒    5↓🔒   0s httpbin.org:443:60068 ≣16
   🔁    5↑🔒    5↓🔒   0s httpbin.org:443:34602 ≣16
   🔁    4↑🔒    4↓🔒   0s httpbin.org:443:60072 ≣16
   🔁    3↑🔒    3↓🔒   0s httpbin.org:443:60074 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:443:60076 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:443:60078 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:443:34612 ≣16
]

ConnectionPool[
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:48066 ≣16 2-byte excess
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:57954 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:57960 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:48076 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:57964 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:57966 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:57968 ≣16 2-byte excess
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:57970 ≣16
]

ConnectionPool[
   ⏸    6↑🔒    6↓    0s httpbin.org:443:60112 ≣16
   🔁    5↑🔒    5↓🔒   0s httpbin.org:443:60114 ≣16
   🔁    5↑🔒    5↓🔒   0s httpbin.org:443:34648 ≣16
   🔁    4↑🔒    4↓🔒   0s httpbin.org:443:60118 ≣16
   🔁    3↑🔒    3↓🔒   0s httpbin.org:443:34652 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:443:60122 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:443:60124 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:443:34658 ≣16
]

ConnectionPool[
   🔁    3↑🔒    2↓🔒   0s httpbin.org:80:57988 ≣16
   🔁    3↑🔒    2↓🔒   0s httpbin.org:80:48104 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:80:57992 ≣16
   🔁    3↑     1↓🔒   0s httpbin.org:80:57994 ≣16
   🔁    3↑     1↓🔒   0s httpbin.org:80:48110 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:80:57998 ≣16
   🔁    2↑     0↓🔒   0s httpbin.org:80:48114 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:80:48116 ≣16
]

ConnectionPool[
   🔁   14↑    14↓    1s httpbin.org:80:57988 ≣16
   🔁   14↑     6↓🔒   1s httpbin.org:80:48104 ≣16
   🔁   13↑    13↓    1s httpbin.org:80:57992 ≣16
   🔁   13↑    13↓    1s httpbin.org:80:57994 ≣16
   🔁   12↑     5↓🔒   1s httpbin.org:80:48110 ≣16
   🔁   12↑    12↓    1s httpbin.org:80:57998 ≣16
   🔁   12↑    11↓🔒   1s httpbin.org:80:48114 ≣16
   🔁   10↑     3↓🔒   1s httpbin.org:80:48116 ≣16
]

ConnectionPool[
   🔁   14↑    14↓    2s httpbin.org:80:57988 ≣16
   🔁   14↑    14↓    2s httpbin.org:80:48104 ≣16
   🔁   13↑    13↓    2s httpbin.org:80:57992 ≣16
   🔁   13↑    13↓    2s httpbin.org:80:57994 ≣16
   🔁   12↑     7↓🔒   2s httpbin.org:80:48110 ≣16
   🔁   12↑    12↓    2s httpbin.org:80:57998 ≣16
   🔁   12↑    12↓    2s httpbin.org:80:48114 ≣16
   🔁   10↑     9↓🔒   2s httpbin.org:80:48116 ≣16
]

ConnectionPool[
   ⏸    6↑🔒    6↓    0s httpbin.org:443:34694 ≣16
   ⏸    5↑🔒    5↓    0s httpbin.org:443:34696 ≣16
   🔁    6↑     5↓🔒   0s httpbin.org:443:60166 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:54142 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:60170 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:60172 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:34706 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:60176 ≣16
]

ConnectionPool[
   🔁    3↑🔒    3↓    0s httpbin.org:80:58042 ≣16
   🔁    3↑🔒    2↓🔒   0s httpbin.org:80:58796 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:80:58046 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:80:48162 ≣16
   🔁    3↑     1↓🔒   0s httpbin.org:80:58802 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:80:58052 ≣16
   🔁    2↑     0↓🔒   0s httpbin.org:80:58054 ≣16 2-byte excess
   🔁    1↑     0↓🔒   0s httpbin.org:80:58056 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:34730 ≣16
   ⏸    6↑🔒    6↓    0s httpbin.org:443:34732 ≣16
   🔁    6↑     5↓🔒   0s httpbin.org:443:54176 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:60204 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:34738 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:34742 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:34744 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:34746 ≣16
]

ConnectionPool[
   🔁   14↑    14↓    1s httpbin.org:80:58076 ≣16
   🔁   13↑     8↓🔒   1s httpbin.org:80:48192 ≣16
   🔁   13↑    13↓    1s httpbin.org:80:58080 ≣16
   🔁   13↑    13↓    1s httpbin.org:80:58082 ≣16
   🔁   13↑    13↓    1s httpbin.org:80:58084 ≣16
   🔁   12↑    12↓    1s httpbin.org:80:58086 ≣16
   🔁   12↑    12↓    1s httpbin.org:80:58840 ≣16
   🔁   10↑    10↓    1s httpbin.org:80:58090 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:34764 ≣16
   ⏸    5↑🔒    5↓    0s httpbin.org:443:34766 ≣16
   🔁    6↑     5↓🔒   0s httpbin.org:443:60236 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:60238 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:34774 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:34776 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:34778 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:60248 ≣16
]

Running aws4.jl tests...
Running insert_layers.jl tests...
WARNING: replacing module TestRequest.
WARNING: using TestRequest.TestLayer in module Main conflicts with an existing identifier.
Running mwe.jl tests...
Test Summary:                                                                    | Pass  Fail  Broken  Total
HTTP                                                                             | 4743    10     107   4860
  ascii.jl                                                                       |  648                  648
  Chunking                                                                       |   15                   15
  utils.jl                                                                       |   26                   26
  Custom HTTP Stack                                                              |    1                    1
  Client.jl - http                                                               |   56     1             57
    GET, HEAD, POST, PUT, DELETE, PATCH                                          |    7                    7
    ASync Client Requests                                                        |    2                    2
    Query to URI                                                                 |    1                    1
    Cookie Requests                                                              |    4                    4
    Client Streaming Test                                                        |    4     1              5
    Client Body Posting - Vector{UTF8}, String, IOStream, IOBuffer, BufferStream |    5                    5
    Chunksize                                                                    |    5                    5
    ASync Client Request Body                                                    |    1                    1
    Client Redirect Following - GET                                              |    6                    6
    Client Redirect Following - HEAD                                             |    6                    6
    Client Basic Auth                                                            |    3                    3
    Misc                                                                         |    8                    8
    openraw client method - wss                                                  |    2                    2
    openraw client method - ws                                                   |    2                    2
  Client.jl - https                                                              |   56     1             57
    GET, HEAD, POST, PUT, DELETE, PATCH                                          |    7                    7
    ASync Client Requests                                                        |    2                    2
    Query to URI                                                                 |    1                    1
    Cookie Requests                                                              |    4                    4
    Client Streaming Test                                                        |    4     1              5
    Client Body Posting - Vector{UTF8}, String, IOStream, IOBuffer, BufferStream |    5                    5
    Chunksize                                                                    |    5                    5
    ASync Client Request Body                                                    |    1                    1
    Client Redirect Following - GET                                              |    6                    6
    Client Redirect Following - HEAD                                             |    6                    6
    Client Basic Auth                                                            |    3                    3
    Misc                                                                         |    8                    8
    openraw client method - wss                                                  |    2                    2
    openraw client method - ws                                                   |    2                    2
  Public entry point of HTTP.request and friends (e.g. issue #463)               |  205                  205
  HTTP.Form for multipart/form-data                                              |    4                    4
  sniff.jl                                                                       |   47                   47
  HTTP.URI                                                                       |  128                  128
  HTTP.URL                                                                       |   12                   12
  Cookies                                                                        |   57                   57
  HTTP.parser                                                                    |  727           106    833
  loopback                                                                       |   53                   53
  websockets.jl                                                                  |    8                    8
  HTTP.Messages                                                                  |  141     8            149
    Body Length                                                                  |   13                   13
    Body Bytes                                                                   |    7                    7
    Request                                                                      |    7                    7
    Header Append                                                                |   11                   11
    HTTP Version                                                                 |    6                    6
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Write to file                                                                |   51                   51
  Handlers                                                                       |   31                   31
  HTTP.listen                                                                    |   27                   27
  ASync                                                                          | 2400                 2400
  AWS Signature Version 4                                                        |   96                   96
  HTTP Stack Inserting                                                           |    5                    5
ERROR: LoadError: Some tests did not pass: 4743 passed, 10 failed, 0 errored, 107 broken.
in expression starting at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/runtests.jl:8
ERROR: Package HTTP errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
