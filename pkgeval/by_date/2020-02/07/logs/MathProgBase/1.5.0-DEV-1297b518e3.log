Julia Version 1.5.0-DEV.247
Commit 1297b518e3 (2020-02-07 18:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Compat ─────── v2.2.0
  Installed MathProgBase ─ v0.7.7
   Updating `~/.julia/environments/v1.5/Project.toml`
  [fdba3010] + MathProgBase v0.7.7
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [34da2185] + Compat v2.2.0
  [fdba3010] + MathProgBase v0.7.7
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
┌ Warning: using test/REQUIRE files is deprecated and current support is lacking in some areas
└ @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1413
    Testing MathProgBase
Status `/tmp/jl_NUJLAw/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [b99e7846] BinaryProvider v0.5.8
  [523fee87] CodecBzip2 v0.6.0
  [944b1d66] CodecZlib v0.6.0
  [34da2185] Compat v2.2.0
  [e2685f51] ECOS v0.10.2
  [60bf3e95] GLPK v0.12.1
  [3c7084bd] GLPKMathProgInterface v0.4.4
  [cd3eb016] HTTP v0.8.8
  [83e8ac13] IniFile v0.5.0
  [b6b21f68] Ipopt v0.6.1
  [682c06a0] JSON v0.21.0
  [7d188eb4] JSONSchema v0.2.0
  [b8f27783] MathOptInterface v0.9.10
  [fdba3010] MathProgBase v0.7.7
  [739be429] MbedTLS v0.7.0
  [d8a4904e] MutableArithmetics v0.2.2
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [3bb67fe8] TranscodingStreams v0.9.5
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
Test Summary:                                                                                                                                                                     | Pass  Total
Testing linprog and subfunctions with GLPKMathProgInterface.GLPKInterfaceLP.GLPKSolverLP(false, :Simplex, Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}()) |   26     26
Test Summary:                                                                                                                                               | Pass  Total
Testing mixintprog with GLPKMathProgInterface.GLPKInterfaceMIP.GLPKSolverMIP(false, Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}()) |    3      3

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

Test Summary:                                               | Pass  Total
Testing quadprog with IpoptSolver(Tuple[(:print_level, 0)]) |    9      9
Test Summary:                                               | Pass  Total
Testing QP duals with IpoptSolver(Tuple[(:print_level, 0)]) |   14     14
Test Summary:                                                                                                                              | Pass  Total
Testing SOCP interface with ECOSSolver(Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:verbose,),Tuple{Bool}}}(:verbose => 0)) |    3      3
Test Summary:                                          | Pass  Total
Testing NLP with IpoptSolver(Tuple[(:print_level, 0)]) |    7      7
Test Summary:                                                          | Pass  Total
Testing NLP without Hessian with IpoptSolver(Tuple[(:print_level, 0)]) |    7      7
Test Summary:                                                 | Pass  Total
Testing convex NLP with IpoptSolver(Tuple[(:print_level, 0)]) |    4      4
Test Summary:                                                                     | Pass  Total
Testing NLP on the Rosenbrock function with IpoptSolver(Tuple[(:print_level, 0)]) |    5      5
Test Summary:                                                                                                                                                       | Pass  Total
Testing linear problems through conic interface with ECOSSolver(Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:verbose,),Tuple{Bool}}}(:verbose => 0)) |   47     47
Test Summary:                                                                                                                                                                                    | Pass  Total
Testing linear problems through conic interface with GLPKMathProgInterface.GLPKInterfaceLP.GLPKSolverLP(false, :Simplex, Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}()) |   47     47
Test Summary:                                                                                                                                                         | Pass  Total
Testing LP interface with GLPKMathProgInterface.GLPKInterfaceLP.GLPKSolverLP(false, :Simplex, Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}()) |   85     85
Test Summary:                                                                                                                                                               | Pass  Total
Testing LP interface extra with GLPKMathProgInterface.GLPKInterfaceLP.GLPKSolverLP(false, :Simplex, Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}()) |   38     38
Test Summary:                                                                                                                            | Pass  Total
Testing LP interface with ECOSSolver(Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:verbose,),Tuple{Bool}}}(:verbose => 0)) |   76     76
    Testing MathProgBase tests passed 
