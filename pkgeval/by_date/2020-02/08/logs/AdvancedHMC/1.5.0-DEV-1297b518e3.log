Julia Version 1.5.0-DEV.247
Commit 1297b518e3 (2020-02-07 18:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed ProgressMeter ────── v1.2.0
  Installed AdvancedHMC ──────── v0.2.20
  Installed Parameters ───────── v0.12.0
  Installed MacroTools ───────── v0.5.4
  Installed DataStructures ───── v0.17.9
  Installed BinaryProvider ───── v0.5.8
  Installed StatsBase ────────── v0.32.0
  Installed OrderedCollections ─ v1.1.0
  Installed DataAPI ──────────── v1.1.0
  Installed ArrayLayouts ─────── v0.1.5
  Installed FillArrays ───────── v0.8.4
  Installed StatsFuns ────────── v0.9.3
  Installed ArgCheck ─────────── v1.0.1
  Installed StaticArrays ─────── v0.12.1
  Installed Requires ─────────── v1.0.1
  Installed LazyArrays ───────── v0.14.11
  Installed Rmath ────────────── v0.6.0
  Installed OpenSpecFun_jll ──── v0.5.3+1
  Installed Missings ─────────── v0.4.3
  Installed InplaceOps ───────── v0.3.0
  Installed SpecialFunctions ─── v0.9.0
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         ##O#- #                                                                       ######################################################################## 100.0%
#=#=#                                                                         ###                                                                        4.6%########################################################                  78.2%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       #################                                                         24.8%################################################################          89.9%######################################################################## 100.0%
#=#=#                                                                         #                                                                          1.6%###                                                                        5.2%######                                                                     9.6%###########                                                               15.6%##############                                                            19.8%###################                                                       26.6%########################                                                  33.6%##############################                                            42.8%########################################                                  56.0%#####################################################                     74.2%###############################################################           88.8%######################################################################## 100.0%
Status `/tmp/jl_q3GJKh/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.1.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [13072b0f] AxisAlgorithms v1.0.0
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.4.3
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.13.3
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.2.0
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.1.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.8
  [8197267c] IntervalSets v0.4.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5ab0869b] KernelDensity v0.5.1
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.1
  [c7f686f2] MCMCChains v1.0.2
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v1.0.2
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [429524aa] Optim v0.20.1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.3
  [85a6dd25] PositiveFactorizations v0.2.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [c84ed2f1] Ratios v0.3.1
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v2.0.5
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [992d4aef] Showoff v0.3.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.9
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [efce3f68] WoodburyMatrices v0.5.0
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
DenseEuclideanMetric: Test Failed at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/adaptation/precond.jl:148
  Expression: ≈(res.adaptor.pc.var, diag(Σ), rtol = 0.2)
   Evaluated: [4.704033557156309, 9.650786225454693, 8.04297666088738, 10.654498757952089, 9.373146140455237, 6.524886023910885, 3.27185129722861, 3.594635431618487, 9.890760495406633, 5.601034755935798] ≈ [5.504740550869829, 7.587991188823159, 7.956771261227212, 8.685121493003356, 8.686128914674399, 15.890809326098255, 5.465267132125681, 5.274991875305664, 11.893786775432119, 10.647042547455086] (rtol=0.2)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/adaptation/precond.jl:148
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/adaptation/precond.jl:138
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/adaptation/precond.jl:116
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.173124925
│   t_steps = 0.007877745
└   t_step / t_steps = 21.976457095272824
Sampling  0%|                               |  ETA: 5:50:49[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6290518627830411
  log_density:                   -12.694429242793245
  hamiltonian_energy:            16.413289119926688
  hamiltonian_energy_error:      0.3200594972348476
  max_hamiltonian_energy_error:  0.943101827364309
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9
  nom_step_size:                 0.9
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  6%|██                             |  ETA: 0:00:36[K
  iterations:                    772
  n_steps:                       39
  is_accept:                     true
  acceptance_rate:               0.8269580496306026
  log_density:                   -14.395244941306599
  hamiltonian_energy:            22.019837381605985
  hamiltonian_energy_error:      -0.08888770632611909
  max_hamiltonian_energy_error:  0.5815470094887942
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7316505812878401
  nom_step_size:                 0.7316505812878401
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.7176538308147761, 1.2120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▊                            |  ETA: 0:00:27[K
  iterations:                    1046
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.5474460012262741
  log_density:                   -14.823242984938233
  hamiltonian_energy:            23.601466902429873
  hamiltonian_energy_error:      0.26377262723461214
  max_hamiltonian_energy_error:  1.4404954853585181
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8001563311551537
  nom_step_size:                 0.8001563311551537
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9852456214855793, 0.9554 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:23[K
  iterations:                    1284
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5181581983254143
  log_density:                   -12.990317244603865
  hamiltonian_energy:            21.055983536911118
  hamiltonian_energy_error:      -0.08492687624400475
  max_hamiltonian_energy_error:  1.6621015427839652
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9337075991046989
  nom_step_size:                 0.9337075991046989
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9852456214855793, 0.9554 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|███▉                           |  ETA: 0:00:19[K
  iterations:                    1506
  n_steps:                       79
  is_accept:                     true
  acceptance_rate:               0.8722157979013015
  log_density:                   -13.640507742683702
  hamiltonian_energy:            19.637108672362952
  hamiltonian_energy_error:      -0.08615010959624314
  max_hamiltonian_energy_error:  0.49925258699934005
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.8090457246506465
  nom_step_size:                 0.8090457246506465
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9852456214855793, 0.9554 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▌                          |  ETA: 0:00:17[K
  iterations:                    1752
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8389736155270907
  log_density:                   -11.151490562461372
  hamiltonian_energy:            14.00829932226322
  hamiltonian_energy_error:      -0.03803728842897236
  max_hamiltonian_energy_error:  0.36450621093271884
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9174339821241515
  nom_step_size:                 0.9174339821241515
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9852456214855793, 0.9554 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████                          |  ETA: 0:00:16[K
  iterations:                    1913
  n_steps:                       127
  is_accept:                     true
  acceptance_rate:               0.8765568186366085
  log_density:                   -23.253111592229978
  hamiltonian_energy:            32.58886931657413
  hamiltonian_energy_error:      0.3080858751707183
  max_hamiltonian_energy_error:  0.8987015692684679
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.7950839794898049
  nom_step_size:                 0.7950839794898049
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9852456214855793, 0.9554 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|█████▉                         |  ETA: 0:00:13[K
  iterations:                    2259
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7686012909131037
  log_density:                   -12.310581264067615
  hamiltonian_energy:            18.85294468967585
  hamiltonian_energy_error:      -0.004453288386660148
  max_hamiltonian_energy_error:  0.4777924975386867
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▋                        |  ETA: 0:00:12[K
  iterations:                    2586
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9733868095095776
  log_density:                   -12.883762899815052
  hamiltonian_energy:            19.55356254554164
  hamiltonian_energy_error:      -0.25805899866350757
  max_hamiltonian_energy_error:  -0.25805899866350757
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▋                       |  ETA: 0:00:10[K
  iterations:                    2960
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8452327296339331
  log_density:                   -13.937924083188049
  hamiltonian_energy:            19.861452212042938
  hamiltonian_energy_error:      0.04080337601463313
  max_hamiltonian_energy_error:  0.2918009326757982
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▍                      |  ETA: 0:00:09[K
  iterations:                    3250
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9665172193035442
  log_density:                   -15.529968687334794
  hamiltonian_energy:            18.73790547026409
  hamiltonian_energy_error:      0.10134165019587726
  max_hamiltonian_energy_error:  -0.18136575032500346
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▋                     |  ETA: 0:00:08[K
  iterations:                    3702
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.871340136717796
  log_density:                   -14.188335592863593
  hamiltonian_energy:            17.620566221609934
  hamiltonian_energy_error:      0.1930252667015715
  max_hamiltonian_energy_error:  0.2540267897248931
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▌                    |  ETA: 0:00:07[K
  iterations:                    4041
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9537938357635198
  log_density:                   -14.96867512349042
  hamiltonian_energy:            23.133808343197384
  hamiltonian_energy_error:      -0.26013838147188295
  max_hamiltonian_energy_error:  -0.3928269207651809
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▌                   |  ETA: 0:00:06[K
  iterations:                    4451
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9804707264693641
  log_density:                   -14.17650388245699
  hamiltonian_energy:            17.54548851390062
  hamiltonian_energy_error:      0.07996060727796817
  max_hamiltonian_energy_error:  0.07996060727796817
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▍                  |  ETA: 0:00:06[K
  iterations:                    4781
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.888027447690867
  hamiltonian_energy:            21.73199047738287
  hamiltonian_energy_error:      -0.041309516444506755
  max_hamiltonian_energy_error:  -0.33510534947738435
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▍                 |  ETA: 0:00:05[K
  iterations:                    5156
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8545209848404945
  log_density:                   -11.618048402997704
  hamiltonian_energy:            16.014437604085224
  hamiltonian_energy_error:      0.026584925342080012
  max_hamiltonian_energy_error:  0.3174001014541741
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▋                |  ETA: 0:00:04[K
  iterations:                    5684
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8165524612831084
  log_density:                   -12.377728573167278
  hamiltonian_energy:            17.42498607715058
  hamiltonian_energy_error:      0.02043274118638294
  max_hamiltonian_energy_error:  0.33710652018372045
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▌               |  ETA: 0:00:04[K
  iterations:                    5999
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.557618063002664
  log_density:                   -17.306115529145437
  hamiltonian_energy:            20.645411629460057
  hamiltonian_energy_error:      0.6059792582051848
  max_hamiltonian_energy_error:  0.8544968877757171
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▌              |  ETA: 0:00:04[K
  iterations:                    6391
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.856001350320407
  log_density:                   -14.597013169073861
  hamiltonian_energy:            21.54929334058135
  hamiltonian_energy_error:      0.02173867445390698
  max_hamiltonian_energy_error:  0.4059382022014759
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▌             |  ETA: 0:00:03[K
  iterations:                    6773
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9283263073169146
  log_density:                   -16.763415877056133
  hamiltonian_energy:            25.50829495717428
  hamiltonian_energy_error:      -0.03950790368729784
  max_hamiltonian_energy_error:  0.18734446061462862
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▋            |  ETA: 0:00:03[K
  iterations:                    7230
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8766968480967543
  log_density:                   -13.44965325940274
  hamiltonian_energy:            20.06141990323452
  hamiltonian_energy_error:      -0.09934763696235649
  max_hamiltonian_energy_error:  0.2687845305217671
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▋           |  ETA: 0:00:03[K
  iterations:                    7597
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6953315766307051
  log_density:                   -15.03656839307855
  hamiltonian_energy:            30.26878018924573
  hamiltonian_energy_error:      -0.24612739241341686
  max_hamiltonian_energy_error:  0.9042468544556215
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▋          |  ETA: 0:00:02[K
  iterations:                    7971
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7813687562381499
  log_density:                   -15.388253789174499
  hamiltonian_energy:            18.475372816966193
  hamiltonian_energy_error:      0.40045180032059235
  max_hamiltonian_energy_error:  0.47975897943628
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▋         |  ETA: 0:00:02[K
  iterations:                    8380
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9983193196530992
  log_density:                   -13.996069068333322
  hamiltonian_energy:            22.473293461288243
  hamiltonian_energy_error:      -0.47992979945582803
  max_hamiltonian_energy_error:  -0.47992979945582803
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▍        |  ETA: 0:00:02[K
  iterations:                    8680
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9389912911615471
  log_density:                   -14.818057179397876
  hamiltonian_energy:            20.953614027657444
  hamiltonian_energy_error:      -0.032595104496692784
  max_hamiltonian_energy_error:  0.17043978358127276
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:02[K
  iterations:                    9079
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9361867360800323
  log_density:                   -11.457789569533109
  hamiltonian_energy:            14.171012993871054
  hamiltonian_energy_error:      0.006298941883434495
  max_hamiltonian_energy_error:  0.15094585297445207
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████▍      |  ETA: 0:00:01[K
  iterations:                    9415
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9723505877753055
  log_density:                   -12.113571667878096
  hamiltonian_energy:            17.30837161382605
  hamiltonian_energy_error:      -0.14677375917959523
  max_hamiltonian_energy_error:  -0.14677375917959523
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▋     |  ETA: 0:00:01[K
  iterations:                    9917
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9073192431487345
  log_density:                   -14.610435415207789
  hamiltonian_energy:            17.39506284777196
  hamiltonian_energy_error:      0.1676117596859683
  max_hamiltonian_energy_error:  0.1676117596859683
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▋    |  ETA: 0:00:01[K
  iterations:                    10288
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8273271081929919
  log_density:                   -17.461227982037983
  hamiltonian_energy:            23.918332299560937
  hamiltonian_energy_error:      0.19974506317313256
  max_hamiltonian_energy_error:  0.47759781060594975
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▊   |  ETA: 0:00:01[K
  iterations:                    10737
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5208491679195107
  log_density:                   -10.707891357046092
  hamiltonian_energy:            19.711468491368763
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  0.891899065817384
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▌  |  ETA: 0:00:00[K
  iterations:                    11029
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9743635107212718
  log_density:                   -11.815094737529165
  hamiltonian_energy:            21.591767958302633
  hamiltonian_energy_error:      -0.7891011557550947
  max_hamiltonian_energy_error:  -0.7891011557550947
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▎ |  ETA: 0:00:00[K
  iterations:                    11328
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.905285809742443
  hamiltonian_energy:            17.937468557657706
  hamiltonian_energy_error:      -0.039392162866413116
  max_hamiltonian_energy_error:  -0.4828342483654282
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████ |  ETA: 0:00:00[K
  iterations:                    11635
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.832295945468217
  log_density:                   -14.265928845560452
  hamiltonian_energy:            20.169163393145364
  hamiltonian_energy_error:      0.12672654449595555
  max_hamiltonian_energy_error:  0.5164305762570791
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.198683514746081
  hamiltonian_energy:            21.36937709997521
  hamiltonian_energy_error:      -0.18657895602807173
  max_hamiltonian_energy_error:  -0.24582130950642167
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706502073360741
  nom_step_size:                 0.6706502073360741
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9506080108858107, 0.9818 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.743680942 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9506080108858107, 0.9818 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.671), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.090002036848012
└   average_acceptance_rate = 0.8804020829042662
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.916470088 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡆⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢱⠀⠀⠀⠀⢠⡄⠀⠀⡜⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠈⡆⠀⠀⠀⡎⠘⡄⢰⠁⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⣀⡄⠀⠀⠀⠀⠀⢸⠀⠀⢱⠀⠀⡸⠀⠀⠘⠇⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠁⠀⠀⠀⠀⢰⠊⠀⢱⠀⠀⠀⠀⠀⡇⠀⠀⠈⠑⠢⠇⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⢇⠀⢀⡠⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢠⡺⢇⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠘⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢆⠀⠀⠀⠀⡠⢣⠃⠈⢆⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡈⢆⠀⠀⡰⣁⠇⠀⠀⠘⠒⠒⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⡌⢒⠖⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary:                                            | Pass  Fail  Total
AdvancedHMC                                              | 2874     1   2875
  Online v.s. naive v.s. true var/cov estimation         |   12           12
  Preconditioner constructors                            |    2            2
  Stan HMC adaptors                                      |   12           12
  Adapted mass v.s. true variance                        |   19     1     20
    DiagEuclideanMetric                                  |   10           10
    DenseEuclideanMetric                                 |    9     1     10
  Initialisation adaptor by metric                       |    2            2
  rand momentum variables from metric via vector of RNGs |    2            2
  Passing random number generator                        |   12           12
  TreeSampler                                            |    5            5
  TerminationCriterion                                   |    2            2
  Termination                                            |   20           20
  BinaryTree                                             |    4            4
  ClassicNoUTurn                                         |    4            4
  PhasePoint                                             |    4            4
  Metric                                                 |   60           60
  step(::Leapfrog) against step(::Leapfrog)              |    2            2
  jitter                                                 |    4            4
  temper                                                 |    7            7
  Eq (2.11) from (Neal, 2011)                            |    4            4
  `gdemo`                                                |    1            1
  HMC and NUTS                                           | 2664         2664
  drop_warmup                                            |    4            4
  Matrix mode                                            |   28           28
ERROR: LoadError: Some tests did not pass: 2874 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/runtests.jl:3
ERROR: Package AdvancedHMC errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
