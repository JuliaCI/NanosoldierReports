Julia Version 1.5.0-DEV.252
Commit b52be3dc7e (2020-02-08 18:26 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_RPRC3o/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.04640716474808876 0.03960479261592478; 0.04640716474808876 0.0 0.05058462495678415; -0.03960479261592478 -0.05058462495678415 0.0])
dAA = so3([0.0 0.06299887600670136 0.09747062437258981; -0.06299887600670136 0.0 0.06980580428949333; -0.09747062437258981 -0.06980580428949333 0.0])
dAA = so3([0.0 0.08434824019054704 -0.05417479722003528; -0.08434824019054704 0.0 -0.013981294964029285; 0.05417479722003528 0.013981294964029285 0.0])
dAA = Quaternion(0.9983462775738724, [0.013746357262592395, -0.039595087041932445, -0.03934433629563223])
dAA = SO3([0.9926286109544854 0.07459966506594119 -0.09551612788748612; -0.06606789302590767 0.9937869074566822 0.08956905759692715; 0.10160449904254451 -0.08259825990742073 0.9913899602248252])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9583087643877684 0.13344497687643728 0.25265935613793467; -0.17556536924197305 0.9726326131536667 0.15219264421383644; -0.22543538591028306 -0.19020577797826452 0.9555106743533349]), [-0.5058462495678414, 0.3960479261592478, 0.4640716474808876])
xj = SE3(SO3([0.9612442195683762 0.18972694417616376 -0.20003308976256398; -0.20458077202029437 0.977234277840258 -0.05621275596881673; 0.18481411760459068 0.09495711067426305 0.9781752854506355]), [0.13981294964029284, -0.5417479722003528, -0.8434824019054704])
Dx = SE3(SO3([0.915422417185147 -0.01115819627018913 -0.4023397727927214; -0.10586143125853013 0.9577466458871655 -0.2674223619366564; 0.38832351910075985 0.2873966891734846 0.8755615270015703]), [1.0781543042998214, -0.5772665631057379, -1.228975651430369])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
