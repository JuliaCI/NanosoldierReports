Julia Version 1.5.0-DEV.247
Commit 1297b518e3 (2020-02-07 18:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_NdQHQa/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.17858236989105758 -0.10888401654262132; -0.17858236989105758 0.0 0.008970886349254087; 0.10888401654262132 -0.008970886349254087 0.0])
dAA = so3([0.0 0.12123054154662315 -0.026910904553282957; -0.12123054154662315 0.0 -0.1267772344432359; 0.026910904553282957 0.1267772344432359 0.0])
dAA = so3([0.0 -0.06508278359622224 -0.1039639797984367; 0.06508278359622224 0.0 -0.17046603893745427; 0.1039639797984367 0.17046603893745427 0.0])
dAA = Quaternion(0.9974752105191586, [-0.015087004625891345, -0.06828499651870251, 0.01235904290872374])
dAA = SO3([0.9999314998503345 -0.006365997896276465 -0.009821897873890635; 0.007450430230745853 0.9933780474080066 0.11464966645059628; 0.009026998196373036 -0.11471499029612824 0.9933574302862599])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9525945453374943 0.28274331078507065 -0.11233811641446288; -0.30371890100432675 0.9054127930375138 -0.2966184474653123; 0.01784548587112222 0.3166763243602294 0.9483657755442877]), [-0.08970886349254086, -1.0888401654262132, -1.7858236989105758])
xj = SE3(SO3([0.9403299800844321 -0.052483779968826874 -0.3361918818094738; 0.07952588108482471 0.9945671714620823 0.06716975277307051; 0.3308400864346607 -0.08989768790184127 0.9393951473782528]), [1.7046603893745427, -1.039639797984367, 0.6508278359622224])
Dx = SE3(SO3([0.8775036987293315 -0.353668878727742 -0.3238913134614822; 0.44264498443446115 0.8571859334927641 0.2632445501376124; 0.18453367300131995 -0.3743669318217088 0.9087335824580502]), [1.737846511612473, 1.3235223972407961, 2.0946671239763823])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
