Julia Version 1.5.0-DEV.343
Commit c934b94ffe (2020-02-25 17:15 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Requires ───────────────────── v1.0.1
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed DataAPI ────────────────────── v1.1.0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed OrderedCollections ─────────── v1.1.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed ProgressMeter ──────────────── v1.2.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed StatsFuns ──────────────────── v0.9.4
  Installed FillArrays ─────────────────── v0.8.5
  Installed Parameters ─────────────────── v0.12.0
  Installed LazyArrays ─────────────────── v0.15.0
  Installed BinaryProvider ─────────────── v0.5.8
  Installed StatsBase ──────────────────── v0.32.1
  Installed InplaceOps ─────────────────── v0.3.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+2
  Installed Missings ───────────────────── v0.4.3
  Installed Rmath ──────────────────────── v0.6.0
  Installed MacroTools ─────────────────── v0.5.4
  Installed StaticArrays ───────────────── v0.12.1
  Installed DataStructures ─────────────── v0.17.10
#=#=#                                                                                                                                                    1.4%####                                                                       6.4%#########                                                                 13.1%###############                                                           21.9%######################                                                    31.7%###############################                                           43.2%############################################                              62.4%##############################################################            86.3%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [e66e0078] + CompilerSupportLibraries_jll v0.2.0+1
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.10
  [1a297f60] + FillArrays v0.8.5
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.0
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+2
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.1
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         ##############                                                            19.6%######################################                                    53.1%#####################################################################     96.1%######################################################################## 100.0%
#=#=#                                                                         ###################                                                       27.6%######################################################################## 100.0%
#=#=#                                                                                                                                                    0.3%##                                                                         3.9%######                                                                     9.2%##########                                                                15.0%################                                                          22.8%########################                                                  33.3%#########################                                                 35.9%##################################                                        48.0%###############################################                           65.7%##############################################################            86.7%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
Status `/tmp/jl_yhaHGK/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.4.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.2.0+1
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.10
  [2b5f629d] DiffEqBase v6.17.3
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.1.1
  [ffbed154] DocStringExtensions v0.8.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+4
  [1a297f60] FillArrays v0.8.5
  [6a86dc24] FiniteDiff v2.2.1
  [26cc04aa] FiniteDifferences v0.9.2
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [5078a376] LazyArrays v0.15.0
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.1
  [c7f686f2] MCMCChains v3.0.2
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+2
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.29.0
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [f27b6e38] Polynomials v0.6.1
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v0.8.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.1
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [9f7883ad] Tracker v0.2.6
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.7.1
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.148036394
│   t_steps = 0.010281257
└   t_step / t_steps = 14.398666816713169
Sampling  0%|                               |  ETA: 5:16:27[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.00015771985830841323
  log_density:                   -10.826600787405711
  hamiltonian_energy:            16.688149034381475
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  8.754690147329502
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▏                           |  ETA: 0:00:23[K
  iterations:                    1189
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.985693040588474
  log_density:                   -16.434157479359712
  hamiltonian_energy:            21.052246399813153
  hamiltonian_energy_error:      -0.0026079127918876566
  max_hamiltonian_energy_error:  -0.4618933683949962
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7966074852107012
  nom_step_size:                 0.7966074852107012
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.7894832462524372, 1.1312 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▋                           |  ETA: 0:00:20[K
  iterations:                    1405
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8155400877012516
  log_density:                   -15.287884222560834
  hamiltonian_energy:            19.56242417076007
  hamiltonian_energy_error:      0.25106286072927375
  max_hamiltonian_energy_error:  0.423428862027432
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6449764272251082
  nom_step_size:                 0.6449764272251082
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.7894832462524372, 1.1312 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▎                          |  ETA: 0:00:17[K
  iterations:                    1642
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9243252892953837
  log_density:                   -17.196424218052094
  hamiltonian_energy:            21.8610857729939
  hamiltonian_energy_error:      0.2499201270332918
  max_hamiltonian_energy_error:  -0.34900355277770245
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8986122588830717
  nom_step_size:                 0.8986122588830717
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.7894832462524372, 1.1312 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:15[K
  iterations:                    1882
  n_steps:                       19
  is_accept:                     true
  acceptance_rate:               0.6795663556220788
  log_density:                   -15.994685820135823
  hamiltonian_energy:            18.70434415382548
  hamiltonian_energy_error:      0.6430031358486517
  max_hamiltonian_energy_error:  0.8877189132750374
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8512190857774184
  nom_step_size:                 0.8512190857774184
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.7894832462524372, 1.1312 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▋                         |  ETA: 0:00:13[K
  iterations:                    2197
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7862136606764781
  log_density:                   -15.76541044304291
  hamiltonian_energy:            19.159847527435105
  hamiltonian_energy_error:      0.42274083418103814
  max_hamiltonian_energy_error:  0.466062631170022
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▋                        |  ETA: 0:00:11[K
  iterations:                    2566
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9876605972257398
  log_density:                   -12.629640044229717
  hamiltonian_energy:            16.662707577833046
  hamiltonian_energy_error:      -0.12690647714423875
  max_hamiltonian_energy_error:  -0.16224706923157584
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▌                       |  ETA: 0:00:10[K
  iterations:                    2916
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.956090616951528
  log_density:                   -14.258730975226307
  hamiltonian_energy:            19.37321594729873
  hamiltonian_energy_error:      0.0029777337881533583
  max_hamiltonian_energy_error:  0.09334357553035844
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▍                      |  ETA: 0:00:09[K
  iterations:                    3265
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9223426051421607
  log_density:                   -13.43874166349466
  hamiltonian_energy:            18.32051263419456
  hamiltonian_energy_error:      -0.01769867411727688
  max_hamiltonian_energy_error:  0.1992150971265758
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▍                     |  ETA: 0:00:08[K
  iterations:                    3644
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8456752483826558
  log_density:                   -13.312050015899558
  hamiltonian_energy:            15.265085296561365
  hamiltonian_energy_error:      0.27526116950643775
  max_hamiltonian_energy_error:  0.29699773611919333
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 33%|██████████▏                    |  ETA: 0:00:07[K
  iterations:                    3936
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8341377410991766
  log_density:                   -14.09577560370849
  hamiltonian_energy:            18.46739761033965
  hamiltonian_energy_error:      0.13397347112550406
  max_hamiltonian_energy_error:  0.32445780008911385
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████▎                   |  ETA: 0:00:06[K
  iterations:                    4352
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9750167280883048
  log_density:                   -14.95200229922632
  hamiltonian_energy:            20.518028861383673
  hamiltonian_energy_error:      -0.17812284419651903
  max_hamiltonian_energy_error:  -0.3592821613216195
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████▏                  |  ETA: 0:00:06[K
  iterations:                    4698
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9920676776315579
  log_density:                   -10.900205467986542
  hamiltonian_energy:            12.817184426465131
  hamiltonian_energy_error:      -0.026312391611595487
  max_hamiltonian_energy_error:  -0.026312391611595487
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|████████████▉                  |  ETA: 0:00:05[K
  iterations:                    5006
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6617098155888705
  log_density:                   -19.36732213170194
  hamiltonian_energy:            26.372199452953108
  hamiltonian_energy_error:      0.5424222682012534
  max_hamiltonian_energy_error:  0.7959136270106626
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▉                 |  ETA: 0:00:05[K
  iterations:                    5362
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.970361214819889
  hamiltonian_energy:            20.328187792656337
  hamiltonian_energy_error:      -0.09479666025035982
  max_hamiltonian_energy_error:  -0.11808592584779731
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|███████████████                |  ETA: 0:00:04[K
  iterations:                    5786
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7850693565846741
  log_density:                   -14.497779835510265
  hamiltonian_energy:            17.084862802588752
  hamiltonian_energy_error:      0.27952979649430887
  max_hamiltonian_energy_error:  0.512378708224535
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:04[K
  iterations:                    6124
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7904361594084846
  log_density:                   -12.828172634163925
  hamiltonian_energy:            20.897689787551137
  hamiltonian_energy_error:      -0.23126062267862224
  max_hamiltonian_energy_error:  0.5886471277013072
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▉              |  ETA: 0:00:04[K
  iterations:                    6514
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.64659825538802
  log_density:                   -20.122802187214887
  hamiltonian_energy:            25.789498970466752
  hamiltonian_energy_error:      0.6890117121283801
  max_hamiltonian_energy_error:  0.7823624875943658
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▌             |  ETA: 0:00:03[K
  iterations:                    6774
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.965301881660352
  log_density:                   -14.707859051782059
  hamiltonian_energy:            20.677074315438094
  hamiltonian_energy_error:      -0.059225709084444134
  max_hamiltonian_energy_error:  0.121686094167341
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▋            |  ETA: 0:00:03[K
  iterations:                    7198
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.430301933157882
  hamiltonian_energy:            22.19444679948331
  hamiltonian_energy_error:      -0.24735990672928665
  max_hamiltonian_energy_error:  -0.3118384882301619
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▌           |  ETA: 0:00:03[K
  iterations:                    7538
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8468961750392597
  log_density:                   -14.43234714035051
  hamiltonian_energy:            20.392705984324152
  hamiltonian_energy_error:      -0.036856367703425263
  max_hamiltonian_energy_error:  0.43230693580195734
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▋          |  ETA: 0:00:02[K
  iterations:                    7971
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7895997252380376
  log_density:                   -15.46506655242807
  hamiltonian_energy:            24.47416990828342
  hamiltonian_energy_error:      -0.08259028687046666
  max_hamiltonian_energy_error:  0.4773971505440997
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▌         |  ETA: 0:00:02[K
  iterations:                    8320
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6041301281183806
  log_density:                   -20.915049778451753
  hamiltonian_energy:            26.171258061280177
  hamiltonian_energy_error:      0.8524308337539068
  max_hamiltonian_energy_error:  0.9518838031424828
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▋        |  ETA: 0:00:02[K
  iterations:                    8742
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8381847301964039
  log_density:                   -15.458612876092701
  hamiltonian_energy:            24.293754767389665
  hamiltonian_energy_error:      -0.11364988262514686
  max_hamiltonian_energy_error:  0.3576601752727626
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:02[K
  iterations:                    9102
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6782618157037325
  log_density:                   -14.609221695992456
  hamiltonian_energy:            15.462928642866347
  hamiltonian_energy_error:      0.6161969184888481
  max_hamiltonian_energy_error:  0.6161969184888481
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▌      |  ETA: 0:00:01[K
  iterations:                    9494
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9493233852317846
  log_density:                   -13.284336425567286
  hamiltonian_energy:            15.860492263046336
  hamiltonian_energy_error:      0.05236872886688815
  max_hamiltonian_energy_error:  -0.22752835321310982
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▎     |  ETA: 0:00:01[K
  iterations:                    9788
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9995192722843191
  log_density:                   -12.539365462384259
  hamiltonian_energy:            18.337552603305596
  hamiltonian_energy_error:      -0.6004236811157284
  max_hamiltonian_energy_error:  -0.7136882283738153
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▍    |  ETA: 0:00:01[K
  iterations:                    10208
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9228746573665789
  log_density:                   -11.842190929843019
  hamiltonian_energy:            15.361903275317186
  hamiltonian_energy_error:      -0.003975927822676084
  max_hamiltonian_energy_error:  0.18916116536021477
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:01[K
  iterations:                    10535
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8315251392712435
  log_density:                   -16.09856649934131
  hamiltonian_energy:            23.97518969909336
  hamiltonian_energy_error:      -0.1418385556753634
  max_hamiltonian_energy_error:  0.8075951985444618
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▍  |  ETA: 0:00:01[K
  iterations:                    10968
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9809094867850922
  log_density:                   -13.810837403741333
  hamiltonian_energy:            17.161627329370276
  hamiltonian_energy_error:      0.052749562691808194
  max_hamiltonian_energy_error:  0.052749562691808194
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▏ |  ETA: 0:00:00[K
  iterations:                    11274
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9291388957294399
  log_density:                   -14.478595282849756
  hamiltonian_energy:            17.697685412323214
  hamiltonian_energy_error:      0.17646514968142313
  max_hamiltonian_energy_error:  0.17646514968142313
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▎|  ETA: 0:00:00[K
  iterations:                    11731
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9487321114447961
  log_density:                   -12.823250091310738
  hamiltonian_energy:            17.373482911634458
  hamiltonian_energy_error:      -0.29705091615869605
  max_hamiltonian_energy_error:  -0.5106236507975588
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -18.430342335993345
  hamiltonian_energy:            29.65885511308491
  hamiltonian_energy_error:      -0.690586414795618
  max_hamiltonian_energy_error:  -0.7725907144504234
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7277042268852878
  nom_step_size:                 0.7277042268852878
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.087675083980629, 0.98179 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.740100528 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.087675083980629, 0.98179 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.728), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0784608394664725
└   average_acceptance_rate = 0.8559132711093803
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.997819723 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Matrix mode: Test Failed at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/sampler_mat.jl:48
  Expression: ≈(mean(samples), zeros(D, n_chains), atol = RNDATOL * n_chains)
   Evaluated: [0.0010825983590977961 -0.02437561975199515 … -0.9738606733908568 0.009744868764155732; -0.0011928819817778656 -0.0005540688647382162 … 0.5425548540482368 -0.004103735501527822; … ; 0.003221137877687706 0.003089322267460406 … 0.6055378059168404 -0.011732900286357841; 0.003444004863980496 -0.009874772828800768 … 0.5947508595577814 -0.013784088538319328] ≈ [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0] (atol=1.25)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/sampler_mat.jl:48
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/sampler_mat.jl:6
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢣⠀⠀⠀⠀⠀⠀⢰⢣⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠘⡄⠀⠀⡀⠀⢠⠃⠀⠱│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⢣⢀⠎⠈⠑⠇⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢪⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠒⠒⠃⠀⠀⠘⠃⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⢀⡄⠀⠀⡔⠃⡎⠱⡀⠀⠀⡠⠔⠑⠢⢄⣀⣀⡠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡆⠀⠀⡜⠈⠢⠎⠀⢰⠁⠀⠱⠔⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡘⡄⢠⠃⠀⣀⠤⣀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⢵⡮⠒⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary:                                            | Pass  Fail  Total
AdvancedHMC                                              | 2874     1   2875
  Online v.s. naive v.s. true var/cov estimation         |   12           12
  Preconditioner constructors                            |    2            2
  Stan HMC adaptors                                      |   12           12
  Adapted mass v.s. true variance                        |   20           20
  Initialisation adaptor by metric                       |    2            2
  rand momentum variables from metric via vector of RNGs |    2            2
  Passing random number generator                        |   12           12
  TreeSampler                                            |    5            5
  TerminationCriterion                                   |    2            2
  Termination                                            |   20           20
  BinaryTree                                             |    4            4
  ClassicNoUTurn                                         |    4            4
  PhasePoint                                             |    4            4
  Metric                                                 |   60           60
  step(::Leapfrog) against step(::Leapfrog)              |    2            2
  jitter                                                 |    4            4
  temper                                                 |    7            7
  Eq (2.11) from (Neal, 2011)                            |    4            4
  `gdemo`                                                |    1            1
  HMC and NUTS                                           | 2664         2664
  drop_warmup                                            |    4            4
  Matrix mode                                            |   27     1     28
ERROR: LoadError: Some tests did not pass: 2874 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/runtests.jl:3
ERROR: Package AdvancedHMC errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
