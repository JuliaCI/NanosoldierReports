Julia Version 1.5.0-DEV.347
Commit 9f680d3f8d (2020-02-26 17:01 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ───────────────────── v1.0.1
  Installed DataAPI ────────────────────── v1.1.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed Parameters ─────────────────── v0.12.0
  Installed FillArrays ─────────────────── v0.8.5
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed BinaryProvider ─────────────── v0.5.8
  Installed LazyArrays ─────────────────── v0.15.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+2
  Installed ArgCheck ───────────────────── v2.0.0
  Installed ProgressMeter ──────────────── v1.2.0
  Installed Missings ───────────────────── v0.4.3
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed StatsBase ──────────────────── v0.32.1
  Installed DataStructures ─────────────── v0.17.10
  Installed StaticArrays ───────────────── v0.12.1
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed Rmath ──────────────────────── v0.6.0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed SpecialFunctions ───────────── v0.10.0
  Installed MacroTools ─────────────────── v0.5.4
  Installed OrderedCollections ─────────── v1.1.0
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ###                                                                        5.3%##############                                                            20.1%###########################                                               38.8%############################################                              61.5%###################################################################       93.7%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [e66e0078] + CompilerSupportLibraries_jll v0.2.0+1
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.10
  [1a297f60] + FillArrays v0.8.5
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.0
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+2
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.1
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         #################################################                         69.0%######################################################################## 100.0%
#=#=#                                                                         ################                                                          22.6%#####################################################                     74.2%######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.7%######                                                                     8.3%##########                                                                15.2%#################                                                         24.7%#########################                                                 35.7%###################################                                       49.4%################################################                          67.3%##############################################################            86.5%######################################################################## 100.0%
#=#=#                                                                         ###############################################                           65.6%######################################################################## 100.0%
Status `/tmp/jl_ut7vJn/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.4.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.2.0+1
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.10
  [2b5f629d] DiffEqBase v6.17.3
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.1.1
  [ffbed154] DocStringExtensions v0.8.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+4
  [1a297f60] FillArrays v0.8.5
  [6a86dc24] FiniteDiff v2.2.1
  [26cc04aa] FiniteDifferences v0.9.2
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [5078a376] LazyArrays v0.15.0
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.1
  [c7f686f2] MCMCChains v3.0.2
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+2
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.29.0
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [f27b6e38] Polynomials v0.6.1
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v0.8.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.1
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [9f7883ad] Tracker v0.2.6
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.7.1
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.159253009
│   t_steps = 0.008082102
└   t_step / t_steps = 19.704404745201185
Sampling  0%|                               |  ETA: 5:35:03[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               1.609978970713516e-5
  log_density:                   -10.273120445728605
  hamiltonian_energy:            17.99144597456322
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  11.036704347727785
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▋                            |  ETA: 0:00:29[K
  iterations:                    1004
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8630837830760006
  log_density:                   -18.430067934929653
  hamiltonian_energy:            23.72479554230474
  hamiltonian_energy_error:      0.3272549013989945
  max_hamiltonian_energy_error:  0.3306054764829085
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.676266942785144
  nom_step_size:                 0.676266942785144
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8950372475407805, 0.9347 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▎                           |  ETA: 0:00:24[K
  iterations:                    1252
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6905706340056678
  log_density:                   -12.893523594952052
  hamiltonian_energy:            19.934306641479175
  hamiltonian_energy_error:      -0.5304404408500005
  max_hamiltonian_energy_error:  0.6673692700314717
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9375979394455897
  nom_step_size:                 0.9375979394455897
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8950372475407805, 0.9347 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▊                           |  ETA: 0:00:21[K
  iterations:                    1454
  n_steps:                       27
  is_accept:                     true
  acceptance_rate:               0.8722522564843237
  log_density:                   -15.609335423678274
  hamiltonian_energy:            21.643624389493432
  hamiltonian_energy_error:      0.012604456366481998
  max_hamiltonian_energy_error:  0.4218898357063061
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8947591813933407
  nom_step_size:                 0.8947591813933407
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8950372475407805, 0.9347 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▎                          |  ETA: 0:00:19[K
  iterations:                    1633
  n_steps:                       123
  is_accept:                     true
  acceptance_rate:               0.8119068643891167
  log_density:                   -14.76703334821797
  hamiltonian_energy:            19.572678736216947
  hamiltonian_energy_error:      0.20315103465581075
  max_hamiltonian_energy_error:  0.791038074461099
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.797904481471654
  nom_step_size:                 0.797904481471654
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8950372475407805, 0.9347 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▊                          |  ETA: 0:00:17[K
  iterations:                    1817
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9404561309030077
  log_density:                   -11.64412314543667
  hamiltonian_energy:            19.155799763428977
  hamiltonian_energy_error:      -0.5876941287451203
  max_hamiltonian_energy_error:  -0.5876941287451203
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7402356309401297
  nom_step_size:                 0.7402356309401297
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8950372475407805, 0.9347 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▍                         |  ETA: 0:00:15[K
  iterations:                    2100
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8342459465237061
  log_density:                   -14.009538070663815
  hamiltonian_energy:            16.55618479007547
  hamiltonian_energy_error:      0.23764387858840053
  max_hamiltonian_energy_error:  0.31445345582116246
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▎                        |  ETA: 0:00:13[K
  iterations:                    2402
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9526225009899209
  log_density:                   -12.879395340403448
  hamiltonian_energy:            14.250404379739184
  hamiltonian_energy_error:      0.11162184457882596
  max_hamiltonian_energy_error:  -0.17292991048500106
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████▏                       |  ETA: 0:00:11[K
  iterations:                    2774
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9603410928077428
  log_density:                   -14.433874851691995
  hamiltonian_energy:            17.85267669951175
  hamiltonian_energy_error:      0.0779706000409206
  max_hamiltonian_energy_error:  -0.12516032140183597
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████                       |  ETA: 0:00:10[K
  iterations:                    3081
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9507067845589605
  log_density:                   -10.588467772302334
  hamiltonian_energy:            13.49189552520631
  hamiltonian_energy_error:      -0.09301118815942289
  max_hamiltonian_energy_error:  0.14781260850319633
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|█████████                      |  ETA: 0:00:09[K
  iterations:                    3468
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5746961993972752
  log_density:                   -12.383769567896111
  hamiltonian_energy:            21.660769857617606
  hamiltonian_energy_error:      0.12844992912826214
  max_hamiltonian_energy_error:  1.1602174585866187
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|█████████▊                     |  ETA: 0:00:08[K
  iterations:                    3784
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9962866876664932
  log_density:                   -14.149679920694382
  hamiltonian_energy:            20.317839662120257
  hamiltonian_energy_error:      -0.3024194936618869
  max_hamiltonian_energy_error:  -0.3811225106079661
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▉                    |  ETA: 0:00:07[K
  iterations:                    4209
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7597405800417715
  log_density:                   -11.110044131201967
  hamiltonian_energy:            17.684284081651285
  hamiltonian_energy_error:      -0.052473393466083706
  max_hamiltonian_energy_error:  0.5930967488453227
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▉                   |  ETA: 0:00:06[K
  iterations:                    4577
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9435568405623861
  log_density:                   -14.372528627342497
  hamiltonian_energy:            18.71805896610007
  hamiltonian_energy_error:      0.05315061793488596
  max_hamiltonian_energy_error:  0.09728920679117437
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▉                  |  ETA: 0:00:06[K
  iterations:                    4963
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7659397455388274
  log_density:                   -21.77888705650257
  hamiltonian_energy:            26.71881211690663
  hamiltonian_energy_error:      0.5659633067281504
  max_hamiltonian_energy_error:  0.5659633067281504
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 44%|█████████████▊                 |  ETA: 0:00:05[K
  iterations:                    5311
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9359700128509295
  log_density:                   -16.583470411307026
  hamiltonian_energy:            23.313676785020856
  hamiltonian_energy_error:      0.0625381213858951
  max_hamiltonian_energy_error:  0.15686730581847286
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▊                |  ETA: 0:00:05[K
  iterations:                    5707
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7079156161804162
  log_density:                   -12.160373800283178
  hamiltonian_energy:            18.79104019886458
  hamiltonian_energy_error:      0.024910780209054906
  max_hamiltonian_energy_error:  0.6236187396958748
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▋               |  ETA: 0:00:04[K
  iterations:                    6049
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6173725770714457
  log_density:                   -15.709050286886493
  hamiltonian_energy:            25.882791920038482
  hamiltonian_energy_error:      0.2500627316269721
  max_hamiltonian_energy_error:  1.066997851218467
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▋              |  ETA: 0:00:04[K
  iterations:                    6420
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9651457256121192
  log_density:                   -11.99486518728218
  hamiltonian_energy:            17.731063602822054
  hamiltonian_energy_error:      -0.34172057579188575
  max_hamiltonian_energy_error:  -0.35741502743965725
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▌             |  ETA: 0:00:03[K
  iterations:                    6753
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7055583486034119
  log_density:                   -15.036448954956171
  hamiltonian_energy:            21.797046928505
  hamiltonian_energy_error:      0.17281161013434243
  max_hamiltonian_energy_error:  0.6441582539486035
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▌            |  ETA: 0:00:03[K
  iterations:                    7143
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9568663426940394
  log_density:                   -13.557318170033696
  hamiltonian_energy:            16.504286905738756
  hamiltonian_energy_error:      0.1019399923626132
  max_hamiltonian_energy_error:  0.10452442178011978
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▍           |  ETA: 0:00:03[K
  iterations:                    7482
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8982298568914598
  log_density:                   -11.929428666297001
  hamiltonian_energy:            13.932180030706657
  hamiltonian_energy_error:      0.1054996708977054
  max_hamiltonian_energy_error:  0.21988108209989754
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▌          |  ETA: 0:00:02[K
  iterations:                    7922
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7327109681957437
  log_density:                   -12.411892326154936
  hamiltonian_energy:            17.021139289107243
  hamiltonian_energy_error:      0.19620049466921685
  max_hamiltonian_energy_error:  0.6668463468354382
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▍         |  ETA: 0:00:02[K
  iterations:                    8275
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7954205284211372
  log_density:                   -13.227563534096603
  hamiltonian_energy:            21.10606497855514
  hamiltonian_energy_error:      -0.08753022634658691
  max_hamiltonian_energy_error:  0.4608122981922449
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▍        |  ETA: 0:00:02[K
  iterations:                    8667
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9756334271216737
  log_density:                   -12.088743523422602
  hamiltonian_energy:            14.279757827793562
  hamiltonian_energy_error:      0.0505390921183384
  max_hamiltonian_energy_error:  0.07821595764113276
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:02[K
  iterations:                    9114
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8905048911136179
  log_density:                   -14.588643743003052
  hamiltonian_energy:            20.924841787509095
  hamiltonian_energy_error:      -0.018983732452106494
  max_hamiltonian_energy_error:  0.32343094778273596
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████▎      |  ETA: 0:00:01[K
  iterations:                    9382
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.787975123320875
  hamiltonian_energy:            18.8960247003364
  hamiltonian_energy_error:      -0.314429272375051
  max_hamiltonian_energy_error:  -0.708774804695615
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▎     |  ETA: 0:00:01[K
  iterations:                    9783
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9482833009381143
  log_density:                   -16.8062817674632
  hamiltonian_energy:            19.604455954676798
  hamiltonian_energy_error:      0.22637544202192572
  max_hamiltonian_energy_error:  -0.2861707833144962
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████▏    |  ETA: 0:00:01[K
  iterations:                    10131
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9885127245166597
  log_density:                   -15.232173011688921
  hamiltonian_energy:            18.086294627398214
  hamiltonian_energy_error:      0.0725953134317443
  max_hamiltonian_energy_error:  -0.22938153661828053
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▍   |  ETA: 0:00:01[K
  iterations:                    10618
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5990597769771725
  log_density:                   -12.362680495098934
  hamiltonian_energy:            19.510129481020154
  hamiltonian_energy_error:      0.142619007030941
  max_hamiltonian_energy_error:  0.8051967001399873
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▌  |  ETA: 0:00:01[K
  iterations:                    11013
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.108889153312246
  hamiltonian_energy:            17.57166045511695
  hamiltonian_energy_error:      -0.711103598710082
  max_hamiltonian_energy_error:  -0.711103598710082
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▌ |  ETA: 0:00:00[K
  iterations:                    11428
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9410908806106387
  log_density:                   -13.153310193174008
  hamiltonian_energy:            17.047179464001804
  hamiltonian_energy_error:      0.027245626743777507
  max_hamiltonian_energy_error:  0.14606385792719934
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▍|  ETA: 0:00:00[K
  iterations:                    11778
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9483854008015298
  log_density:                   -12.911846178670881
  hamiltonian_energy:            15.320111566094695
  hamiltonian_energy_error:      0.06223596986010804
  max_hamiltonian_energy_error:  0.17444435470453712
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.660741308801068
  hamiltonian_energy:            18.302666949071345
  hamiltonian_energy_error:      -0.3687118347903322
  max_hamiltonian_energy_error:  -0.3687118347903322
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6846976586148369
  nom_step_size:                 0.6846976586148369
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0676017131337685, 0.9919 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.88818594 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0676017131337685, 0.9919 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.685), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.096328134445183
└   average_acceptance_rate = 0.8697996283812676
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.013444112 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡠│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠱⡀⠀⠀⠀⡰⠣⡀⡜⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠱⢄⣀⡰⠁⠀⠈⠃⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠃⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⢀⢄⡀⠀⣀⠤⠤⣀⣀⣀⡠⠔⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⢀⠜⠀⠀⢀⠎⠀⠈⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣣⠀⠀⢠⠎⠀⢀⣀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⢵⡰⠥⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
