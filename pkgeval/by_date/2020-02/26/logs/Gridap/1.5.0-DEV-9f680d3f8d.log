Julia Version 1.5.0-DEV.347
Commit 9f680d3f8d (2020-02-26 17:01 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed NaNMath ────────────────────── v0.3.3
  Installed Combinatorics ──────────────── v1.0.0
  Installed BSON ───────────────────────── v0.2.5
  Installed CodecZlib ──────────────────── v0.6.0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed BinaryProvider ─────────────── v0.5.8
  Installed JSON ───────────────────────── v0.21.0
  Installed Gridap ─────────────────────── v0.7.1
  Installed Requires ───────────────────── v1.0.1
  Installed ArrayInterface ─────────────── v2.4.1
  Installed DiffResults ────────────────── v1.0.2
  Installed FiniteDiff ─────────────────── v2.2.1
  Installed Parameters ─────────────────── v0.12.0
  Installed JLD2 ───────────────────────── v0.1.12
  Installed FillArrays ─────────────────── v0.8.5
  Installed Parsers ────────────────────── v0.3.11
  Installed OpenSpecFun_jll ────────────── v0.5.3+2
  Installed DataStructures ─────────────── v0.17.10
  Installed Reexport ───────────────────── v0.2.0
  Installed QuadGK ─────────────────────── v2.3.1
  Installed DocStringExtensions ────────── v0.8.1
  Installed LineSearches ───────────────── v7.0.1
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed CommonSubexpressions ───────── v0.2.0
  Installed TranscodingStreams ─────────── v0.9.5
  Installed StaticArrays ───────────────── v0.12.1
  Installed FileIO ─────────────────────── v1.2.2
  Installed NLSolversBase ──────────────── v7.6.1
  Installed ForwardDiff ────────────────── v0.10.9
  Installed NLsolve ────────────────────── v4.3.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed RecipesBase ────────────────── v0.8.0
  Installed Polynomials ────────────────── v0.6.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed LightXML ───────────────────── v0.8.1
  Installed SpecialFunctions ───────────── v0.10.0
  Installed Distances ──────────────────── v0.8.2
  Installed WriteVTK ───────────────────── v1.4.0
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                                                                                                    0.7%####                                                                       6.5%##########                                                                14.4%################                                                          23.3%#########################                                                 35.3%#####################################                                     51.5%#################################################                         68.7%####################################################################      94.6%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [56d4f2e9] + Gridap v0.7.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [4fba245c] + ArrayInterface v2.4.1
  [fbb218c0] + BSON v0.2.5
  [b99e7846] + BinaryProvider v0.5.8
  [944b1d66] + CodecZlib v0.6.0
  [861a8166] + Combinatorics v1.0.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [e66e0078] + CompilerSupportLibraries_jll v0.2.0+1
  [864edb3b] + DataStructures v0.17.10
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.8.2
  [ffbed154] + DocStringExtensions v0.8.1
  [442a2c76] + FastGaussQuadrature v0.4.2
  [5789e2e9] + FileIO v1.2.2
  [1a297f60] + FillArrays v0.8.5
  [6a86dc24] + FiniteDiff v2.2.1
  [f6369f11] + ForwardDiff v0.10.9
  [56d4f2e9] + Gridap v0.7.1
  [033835bb] + JLD2 v0.1.12
  [682c06a0] + JSON v0.21.0
  [9c8b4983] + LightXML v0.8.1
  [d3d80556] + LineSearches v7.0.1
  [d41bc354] + NLSolversBase v7.6.1
  [2774e3e8] + NLsolve v4.3.0
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+2
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.11
  [f27b6e38] + Polynomials v0.6.1
  [1fd47b50] + QuadGK v2.3.1
  [3cdcf5f2] + RecipesBase v0.8.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [3bb67fe8] + TranscodingStreams v0.9.5
  [64499a7a] + WriteVTK v1.4.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building CodecZlib → `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
   Building LightXML ─→ `~/.julia/packages/LightXML/W8FVT/deps/build.log`
    Testing Gridap
Status `/tmp/jl_J6p054/Manifest.toml`
  [4fba245c] ArrayInterface v2.4.1
  [fbb218c0] BSON v0.2.5
  [b99e7846] BinaryProvider v0.5.8
  [944b1d66] CodecZlib v0.6.0
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.2.0+1
  [864edb3b] DataStructures v0.17.10
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [ffbed154] DocStringExtensions v0.8.1
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.2.2
  [1a297f60] FillArrays v0.8.5
  [6a86dc24] FiniteDiff v2.2.1
  [f6369f11] ForwardDiff v0.10.9
  [56d4f2e9] Gridap v0.7.1
  [033835bb] JLD2 v0.1.12
  [682c06a0] JSON v0.21.0
  [9c8b4983] LightXML v0.8.1
  [d3d80556] LineSearches v7.0.1
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+2
  [bac558e1] OrderedCollections v1.1.0
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.1
  [1fd47b50] QuadGK v2.3.1
  [3cdcf5f2] RecipesBase v0.8.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [3bb67fe8] TranscodingStreams v0.9.5
  [64499a7a] WriteVTK v1.4.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Helpers       |   13     13
197.172987 seconds (13.09 M allocations: 690.752 MiB, 0.33% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  2.255336 seconds (2.16 M allocations: 122.924 MiB, 2.19% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 24.289962 seconds (28.89 M allocations: 1.383 GiB, 3.07% gc time)
Test Summary: | Pass  Total
Algebra       |  678    678
 76.782710 seconds (79.97 M allocations: 3.731 GiB, 3.25% gc time)
Test Summary: | Pass  Total
TensorValues  |  227    227
 16.041384 seconds (13.16 M allocations: 671.380 MiB, 2.78% gc time)
Test Summary: | Pass  Total
Arrays        |  278    278
 25.093181 seconds (23.99 M allocations: 1.165 GiB, 3.42% gc time)
Test Summary: | Pass  Total
Fields        |  580    580
 61.153585 seconds (50.42 M allocations: 2.451 GiB, 2.33% gc time)
Test Summary: | Pass  Total
Polynomials   |  256    256
 23.358004 seconds (21.21 M allocations: 1.056 GiB, 2.94% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 17.183513 seconds (29.86 M allocations: 1.332 GiB, 9.20% gc time)
Test Summary: | Pass  Total
ReferenceFEs  |  893    893
 73.572492 seconds (71.99 M allocations: 3.554 GiB, 2.40% gc time)
Test Summary: | Pass  Total
Geometry      | 1600   1600
125.537739 seconds (118.02 M allocations: 5.965 GiB, 2.67% gc time)
Test Summary: | Pass  Total
FESpaces      |  493    493
224.587722 seconds (182.14 M allocations: 9.151 GiB, 2.76% gc time)
Test Summary: | Pass  Total
MultiField    |  110    110
 73.410720 seconds (53.63 M allocations: 2.696 GiB, 2.35% gc time)
Test Summary: |
Visualization | No tests
 26.710553 seconds (21.10 M allocations: 1.076 GiB, 2.65% gc time)
Test Summary: | Pass  Total
Gridap        |   17     17
487.151248 seconds (313.66 M allocations: 15.806 GiB, 2.50% gc time)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000000 seconds
  0.000054 seconds (1000 allocations: 31.250 KiB)
  0.000031 seconds
  0.000000 seconds
  0.000025 seconds
  0.000032 seconds
  0.000031 seconds
+++ runing suite for n = 100000 +++
  0.000000 seconds
  0.006047 seconds (100.00 k allocations: 3.052 MiB)
  0.003826 seconds
  0.000000 seconds
  0.003021 seconds
  0.003779 seconds
  0.003213 seconds
WARNING: replacing module ArraysBenchs.
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000007 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000004 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000002 seconds
  0.000003 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 1000 +++
  0.000003 seconds
  0.000005 seconds
  0.000069 seconds (1000 allocations: 31.250 KiB)
  0.000303 seconds (1000 allocations: 31.250 KiB)
  0.000005 seconds
  0.000112 seconds
  0.000141 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 100000 +++
  0.000284 seconds
  0.000430 seconds
  0.006672 seconds (100.00 k allocations: 3.052 MiB)
  0.029274 seconds (100.00 k allocations: 3.052 MiB)
  0.000441 seconds
  0.013090 seconds
  0.018153 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 1 +++
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1000 +++
  0.000022 seconds
  0.000023 seconds
  0.000061 seconds
  0.000164 seconds
+++ runing suite for n = 100000 +++
  0.002164 seconds
  0.002439 seconds
  0.006443 seconds
  0.006490 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000021 seconds
  0.000000 seconds
  0.000081 seconds
  0.000000 seconds
+++ runing suite for n = 100000 +++
  0.001475 seconds
  0.000000 seconds
  0.008054 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000003 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
+++ runing suite for n = 1000 +++
  0.000115 seconds
  0.000109 seconds
  0.000113 seconds
+++ runing suite for n = 100000 +++
  0.009989 seconds
  0.011450 seconds
  0.010839 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000006 seconds
  0.000006 seconds
+++ runing suite for n = 1000 +++
  0.000033 seconds
  0.000004 seconds
  0.000115 seconds
  0.000123 seconds
  0.000027 seconds
  0.000002 seconds
  0.000139 seconds
  0.000132 seconds
  0.000029 seconds
  0.000009 seconds
  0.000148 seconds
  0.000128 seconds
  0.000072 seconds
  0.000002 seconds
  0.000592 seconds
  0.000697 seconds
+++ runing suite for n = 100000 +++
  0.003113 seconds
  0.000395 seconds
  0.011561 seconds
  0.012119 seconds
  0.002911 seconds
  0.000150 seconds
  0.014148 seconds
  0.013226 seconds
  0.002645 seconds
  0.001258 seconds
  0.014839 seconds
  0.012816 seconds
  0.007164 seconds
  0.000151 seconds
  0.059236 seconds
  0.058482 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000003 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1000 +++
  0.000073 seconds
  0.000009 seconds
  0.000205 seconds
  0.000200 seconds (1 allocation: 112 bytes)
  0.000009 seconds
  0.000238 seconds
  0.000225 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 100000 +++
  0.007267 seconds
  0.000841 seconds
  0.020308 seconds
  0.019945 seconds (1 allocation: 112 bytes)
  0.000846 seconds
  0.023235 seconds
  0.021985 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000002 seconds
  0.000001 seconds
  0.000005 seconds
  0.000002 seconds
  0.000001 seconds
  0.000004 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000003 seconds
+++ runing suite for n = 1000 +++
  0.000201 seconds
  0.000108 seconds
  0.000348 seconds
  0.000103 seconds
  0.000108 seconds
  0.000280 seconds
  0.000120 seconds
  0.000126 seconds
  0.000113 seconds
  0.000119 seconds
  0.000127 seconds
  0.000111 seconds
  0.000248 seconds
+++ runing suite for n = 100000 +++
  0.010460 seconds
  0.011118 seconds
  0.033431 seconds
  0.009568 seconds
  0.010548 seconds
  0.025611 seconds
  0.011232 seconds
  0.013431 seconds
  0.014177 seconds
  0.014629 seconds
  0.012200 seconds
  0.010515 seconds
  0.023001 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000003 seconds
  0.000012 seconds
+++ runing suite for n = 1000 +++
  0.000088 seconds
  0.000264 seconds
  0.001257 seconds
+++ runing suite for n = 100000 +++
  0.008780 seconds
  0.027070 seconds
  0.108334 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000006 seconds
+++ runing suite for n = 1000 +++
  0.000072 seconds
  0.000571 seconds
+++ runing suite for n = 100000 +++
  0.006886 seconds
  0.056846 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000003 seconds
  0.114863 seconds (74.39 k allocations: 3.606 MiB)
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000008 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000002 seconds
  0.000018 seconds
  0.000042 seconds
  0.000001 seconds
  0.000002 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000022 seconds
  0.000117 seconds
  0.001949 seconds
  0.004838 seconds
  0.000044 seconds
  0.000171 seconds
  0.000001 seconds
+++ runing suite for n = 100000 +++
  0.002303 seconds
  0.013054 seconds
  0.202010 seconds
  0.474713 seconds
  0.003276 seconds
  0.013844 seconds
  0.000086 seconds
+++ runing suite for n = 1 +++
  0.000007 seconds
  0.000005 seconds
  0.000006 seconds
  0.000011 seconds (30 allocations: 1.406 KiB)
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000002 seconds
  0.000002 seconds
  0.000005 seconds (30 allocations: 1.406 KiB)
+++ runing suite for n = 10 +++
  0.000008 seconds
  0.000014 seconds
  0.000013 seconds
  0.000032 seconds (300 allocations: 14.062 KiB)
+++ runing suite for n = 1000 +++
  0.000813 seconds
  0.001386 seconds
  0.001272 seconds
  0.003206 seconds (30.00 k allocations: 1.373 MiB)
+++ runing suite for n = 100000 +++
  0.087225 seconds
  0.141219 seconds
  0.137974 seconds
  0.541731 seconds (3.00 M allocations: 137.329 MiB, 23.83% gc time)
    Testing Gridap tests passed 
