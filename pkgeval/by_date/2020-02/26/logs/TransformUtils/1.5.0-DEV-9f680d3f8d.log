Julia Version 1.5.0-DEV.347
Commit 9f680d3f8d (2020-02-26 17:01 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_L3DLSq/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.1004172372833347 -0.2229946041424571; -0.1004172372833347 0.0 0.022373958778650595; 0.2229946041424571 -0.022373958778650595 0.0])
dAA = so3([0.0 0.13242504239153272 -0.05359345865638444; -0.13242504239153272 0.0 -0.1872842970830228; 0.05359345865638444 0.1872842970830228 0.0])
dAA = so3([0.0 -0.03263890589448744 -0.03802568760155953; 0.03263890589448744 0.0 -0.008739344728616273; 0.03802568760155953 0.008739344728616273 0.0])
dAA = Quaternion(0.9895277955073076, [-0.058350381157633226, -0.10689118104417826, -0.07748709797242274])
dAA = SO3([0.9900718965369697 0.057879428333871476 -0.1280921990732949; -0.06496873838508165 0.996538077846953 -0.051874101763317616; 0.12464631049629665 0.059681078884722315 0.9904046981425405])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.938044819574107 0.28178729876678615 -0.20166267558449924; -0.3427278643210186 0.84028471053331 -0.42007048963466215; 0.05108353441310102 0.4631603647740913 0.8848010787822289]), [-0.22373958778650593, -2.229946041424571, -1.004172372833347])
xj = SE3(SO3([0.7888733560802602 0.40030383440131717 -0.4662999766569476; -0.2649328574493595 0.9061516219341982 0.3296965561083999; 0.5545172757546734 -0.13655064346104245 0.8208925098086782]), [0.08739344728616272, -0.3802568760155952, 0.32638905894487436])
Dx = SE3(SO3([0.8591251397318848 0.057964038484898735 -0.5084723832453348; 0.25650588635841776 0.8109810436826479 0.525846438659506; 0.44284164725571173 -0.5821940544439836 0.6818660854052822]), [-0.2741135048810719, 2.2582021805392585, 0.3375384365226392])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
