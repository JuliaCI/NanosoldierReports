Julia Version 1.5.0-DEV.343
Commit c934b94ffe (2020-02-25 17:15 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_uWlU6r/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.06194140637349182 -0.023980459484228524; -0.06194140637349182 0.0 -0.07782164694094046; 0.023980459484228524 0.07782164694094046 0.0])
dAA = so3([0.0 -0.19460510643410336 0.09089614381867409; 0.19460510643410336 0.0 0.15206165259093285; -0.09089614381867409 -0.15206165259093285 0.0])
dAA = so3([0.0 0.07540305842930395 -0.04439127962458264; -0.07540305842930395 0.0 -0.02856328207885164; 0.04439127962458264 0.02856328207885164 0.0])
dAA = Quaternion(0.9992783437743977, [0.021535204928761403, 0.02122651454699943, 0.022988294681400387])
dAA = SO3([0.9861029236325564 -0.1627564621522418 -0.03333703692608086; 0.1639084596429737 0.9858419783633999 0.035349831032205986; 0.02711163699949989 -0.040322794102390036 0.9988188181121659])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8609593239384787 -0.4938242197926468 0.12201099323250066; 0.4105092731873569 0.8161709606717534 0.40662894582571857; -0.3003850514765768 -0.30000433813918553 0.9054094200675645]), [0.7782164694094046, -0.23980459484228522, -0.6194140637349181])
xj = SE3(SO3([0.9877915656342361 -0.1108832135825502 0.10941999729241032; 0.1222629957385929 0.987092722581847 -0.10343943589841183; -0.09653798596868148 0.11555461899709325 0.9885987797350082]), [0.2856328207885164, -0.4439127962458264, -0.7540305842930395])
Dx = SE3(SO3([0.9296370199435895 0.2750338993376467 -0.24521697609572488; -0.3590460779446857 0.825726345106078 -0.4350424311607967; 0.08283070121000373 0.492475742765963 0.866375621612342]), [-0.4674460040520864, 0.11704808929495275, -0.26497998879947116])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
