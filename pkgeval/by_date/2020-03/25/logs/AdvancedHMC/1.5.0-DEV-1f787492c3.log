Julia Version 1.5.0-DEV.507
Commit 1f787492c3 (2020-03-25 15:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed ProgressMeter ──────────────── v1.2.0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Missings ───────────────────── v0.4.3
  Installed OrderedCollections ─────────── v1.1.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed LazyArrays ─────────────────── v0.15.1
  Installed CompilerSupportLibraries_jll ─ v0.3.1+0
  Installed DataAPI ────────────────────── v1.1.0
  Installed Parameters ─────────────────── v0.12.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed InplaceOps ─────────────────── v0.3.0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed Requires ───────────────────── v1.0.1
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed FillArrays ─────────────────── v0.8.5
  Installed StaticArrays ───────────────── v0.12.1
  Installed StatsBase ──────────────────── v0.32.2
  Installed DataStructures ─────────────── v0.17.10
  Installed MacroTools ─────────────────── v0.5.5
  Installed Rmath ──────────────────────── v0.6.1
  Installed SpecialFunctions ───────────── v0.10.0
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.3.1+0
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.1
   1914dd2f + MacroTools v0.5.5
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
     Status `/tmp/jl_BoVRWe/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.6.5
   31c24e10 Distributions v0.23.1
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.1
   1dea7af3 OrdinaryDiffEq v5.32.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.10.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.12
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_BoVRWe/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.5.4
   1520ce14 AbstractTrees v0.3.2
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.6.1
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.6.5
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v1.0.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.3.1+0
   88cd18e8 ConsoleProgressMonitor v0.1.2
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.25.0
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   31c24e10 Distributions v0.23.1
   ced4e74d DistributionsAD v0.4.8
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.5.0
   da5c29d0 EllipsisNotation v0.4.0
   cad2338a EllipticalSliceSampling v0.2.1
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.3.0
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.3.0
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.2
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.3
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.1
   1d6d02ad LeftChildRightSiblingTrees v0.1.2
   6f1fad26 Libtask v0.3.3
   093fc24a LightGraphs v1.3.1
   d3d80556 LineSearches v7.0.1
   6fdf6af0 LogDensityProblems v0.10.3
   e6f89c97 LoggingExtras v0.4.0
   c7f686f2 MCMCChains v3.0.7
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.5
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+8
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.32.0
   90014a1f PDMats v0.9.12
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   33c8b6b6 ProgressLogging v0.1.2
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   37e2e3b7 ReverseDiff v1.1.0
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v1.0.1
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   5d786b92 TerminalLoggers v0.1.1
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.10.0
   3a884ed6 UnPack v0.1.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.12
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.139179731
│   t_steps = 0.007957099
└   t_step / t_steps = 17.491265472504487
Sampling  0%|                               |  ETA: 5:48:10[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5649176680623019
  log_density:                   -15.653732892229552
  hamiltonian_energy:            18.072430915619563
  hamiltonian_energy_error:      0.9852341663283042
  max_hamiltonian_energy_error:  1.1350650487564806
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9
  nom_step_size:                 0.9
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▊                           |  ETA: 0:00:20[K
  iterations:                    1456
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9863215079993265
  log_density:                   -15.10811894868203
  hamiltonian_energy:            19.17173843916654
  hamiltonian_energy_error:      -0.22859597644909968
  max_hamiltonian_energy_error:  -0.6902555203545617
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8261482327367522
  nom_step_size:                 0.8261482327367522
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8139816080515102, 0.9420 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:16[K
  iterations:                    1807
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7451649738340137
  log_density:                   -13.987668816318202
  hamiltonian_energy:            20.984597206430244
  hamiltonian_energy_error:      -0.40561962765151094
  max_hamiltonian_energy_error:  0.7793221704915858
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.0531185736177433
  nom_step_size:                 1.0531185736177433
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8139816080515102, 0.9420 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▌                         |  ETA: 0:00:14[K
  iterations:                    2152
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.290962218969295
  hamiltonian_energy:            17.039096138463883
  hamiltonian_energy_error:      -0.35533213948724196
  max_hamiltonian_energy_error:  -0.41229423922527175
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▋                        |  ETA: 0:00:11[K
  iterations:                    2588
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7885490795841141
  log_density:                   -13.847698755385458
  hamiltonian_energy:            20.747133924960938
  hamiltonian_energy_error:      0.011444517184742153
  max_hamiltonian_energy_error:  0.4378277964896853
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████                       |  ETA: 0:00:09[K
  iterations:                    3084
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8854103524820471
  log_density:                   -14.945318548808174
  hamiltonian_energy:            20.163085215287214
  hamiltonian_energy_error:      0.11305460205095486
  max_hamiltonian_energy_error:  0.2845705604263351
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▎                     |  ETA: 0:00:08[K
  iterations:                    3588
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9243574109967883
  log_density:                   -14.634329721572511
  hamiltonian_energy:            19.047771226666953
  hamiltonian_energy_error:      0.09149352817826895
  max_hamiltonian_energy_error:  0.18157742873250626
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▌                    |  ETA: 0:00:07[K
  iterations:                    4063
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7021300242747481
  log_density:                   -13.297581052064261
  hamiltonian_energy:            22.628514573849124
  hamiltonian_energy_error:      -0.011614293556419852
  max_hamiltonian_energy_error:  0.7710037469733955
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▊                   |  ETA: 0:00:06[K
  iterations:                    4565
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.890427461373927
  log_density:                   -12.473479924632747
  hamiltonian_energy:            18.185575997576805
  hamiltonian_energy_error:      -0.15894860008791056
  max_hamiltonian_energy_error:  0.2885752558369603
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▎                 |  ETA: 0:00:05[K
  iterations:                    5121
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9974681592474411
  log_density:                   -13.468006257674944
  hamiltonian_energy:            17.638467633238193
  hamiltonian_energy_error:      -0.09844185982190723
  max_hamiltonian_energy_error:  -0.1569020285142919
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▌                |  ETA: 0:00:04[K
  iterations:                    5630
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9323078933536648
  log_density:                   -12.662320629817973
  hamiltonian_energy:            17.753287513347946
  hamiltonian_energy_error:      -0.09444256422406383
  max_hamiltonian_energy_error:  0.1976624365768096
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:04[K
  iterations:                    6121
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6392568396643908
  log_density:                   -14.521204099784603
  hamiltonian_energy:            17.67106227300313
  hamiltonian_energy_error:      0.4199967761316721
  max_hamiltonian_energy_error:  0.6319793431805358
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|████████████████▉              |  ETA: 0:00:03[K
  iterations:                    6544
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8729274296249951
  log_density:                   -14.893788696255132
  hamiltonian_energy:            22.580259905870086
  hamiltonian_energy_error:      -0.09783161319293043
  max_hamiltonian_energy_error:  0.28534551126365315
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▋             |  ETA: 0:00:03[K
  iterations:                    6832
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8833811978803059
  log_density:                   -13.41614484626094
  hamiltonian_energy:            19.23125468987756
  hamiltonian_energy_error:      -0.03397612844543474
  max_hamiltonian_energy_error:  0.2701235593592557
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|███████████████████            |  ETA: 0:00:03[K
  iterations:                    7366
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7971986761443853
  log_density:                   -11.358213295304546
  hamiltonian_energy:            15.409121011491749
  hamiltonian_energy_error:      0.05910451448498577
  max_hamiltonian_energy_error:  0.4291437485842131
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|███████████████████▊           |  ETA: 0:00:02[K
  iterations:                    7665
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9308052397494032
  log_density:                   -12.154033279196424
  hamiltonian_energy:            16.83438364925602
  hamiltonian_energy_error:      -0.06816746250637706
  max_hamiltonian_energy_error:  0.16213142211328346
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▉          |  ETA: 0:00:02[K
  iterations:                    8095
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8554976349502377
  log_density:                   -11.027722475617804
  hamiltonian_energy:            14.542061572578554
  hamiltonian_energy_error:      -0.0026368309882585095
  max_hamiltonian_energy_error:  0.27111735152054983
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████▏        |  ETA: 0:00:02[K
  iterations:                    8577
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9110984286358423
  log_density:                   -18.936093301153946
  hamiltonian_energy:            23.80878099728386
  hamiltonian_energy_error:      0.17939510708890083
  max_hamiltonian_energy_error:  -0.42713597211257337
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:01[K
  iterations:                    9073
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6589539658280235
  log_density:                   -18.05978147774599
  hamiltonian_energy:            21.85738105972903
  hamiltonian_energy_error:      0.6697660228212854
  max_hamiltonian_energy_error:  0.8238561552587491
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▉      |  ETA: 0:00:01[K
  iterations:                    9610
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.735846676541666
  log_density:                   -18.20422117126556
  hamiltonian_energy:            21.073545294742882
  hamiltonian_energy_error:      0.6591712057334398
  max_hamiltonian_energy_error:  0.6591712057334398
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████▏    |  ETA: 0:00:01[K
  iterations:                    10107
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.958485404868133
  log_density:                   -13.932972145446222
  hamiltonian_energy:            17.22977448765586
  hamiltonian_energy_error:      0.10258017580746781
  max_hamiltonian_energy_error:  0.10258017580746781
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:01[K
  iterations:                    10560
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9242104964529183
  log_density:                   -14.193348362733282
  hamiltonian_energy:            19.074181658595812
  hamiltonian_energy_error:      0.03322487817103337
  max_hamiltonian_energy_error:  0.12745012400457156
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▍  |  ETA: 0:00:00[K
  iterations:                    10971
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9343064422349308
  log_density:                   -13.226090785497423
  hamiltonian_energy:            17.984714467103675
  hamiltonian_energy_error:      -0.02765857193977439
  max_hamiltonian_energy_error:  0.13839138681155916
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▋ |  ETA: 0:00:00[K
  iterations:                    11450
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9402363987118989
  log_density:                   -17.473815102938175
  hamiltonian_energy:            21.355337072470203
  hamiltonian_energy_error:      0.07764374958874853
  max_hamiltonian_energy_error:  -0.515916194715647
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 99%|██████████████████████████████▊|  ETA: 0:00:00[K
  iterations:                    11916
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.996173996550202
  log_density:                   -11.673435010879409
  hamiltonian_energy:            13.425932311788408
  hamiltonian_energy_error:      0.0025413248674936995
  max_hamiltonian_energy_error:  -0.05587903770781111
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9208435451002221
  log_density:                   -11.087245446122003
  hamiltonian_energy:            13.600479541673018
  hamiltonian_energy_error:      0.022349017626046574
  max_hamiltonian_energy_error:  0.1652809807000768
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.680757054998256
  nom_step_size:                 0.680757054998256
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0245661576748746, 1.0817 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.151532271 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0245661576748746, 1.0817 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.681), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0884745261941327
└   average_acceptance_rate = 0.8713097473759696
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.098139901 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠴│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢆⠀⠀⢠⡄⠀⠀⢰⠒⠢⠎⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠈⢆⡔⠁⢱⠀⢀⠇⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⢣⡜⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⣀⡠⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⡴⢇⠀⠀⠀⠀⢀⠔⠊⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⢀⡾⠁⠈⢆⢀⠤⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠧⡤⡤⠧⠃⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
