Julia Version 1.5.0-DEV.505
Commit e3e9def429 (2020-03-24 17:47 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_QD54A1/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_QD54A1/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.15468176749846985 -0.06343096201206662; -0.15468176749846985 0.0 -0.08720332328018507; 0.06343096201206662 0.08720332328018507 0.0])
dAA = so3([0.0 0.11695992877266924 -0.05811561951529315; -0.11695992877266924 0.0 -0.0817399590682412; 0.05811561951529315 0.0817399590682412 0.0])
dAA = so3([0.0 -0.006585599981194315 -0.07790634149574517; 0.006585599981194315 0.0 -0.05188215561802717; 0.07790634149574517 0.05188215561802717 0.0])
dAA = Quaternion(0.9944533419083018, [-0.00041103698264875424, 0.09937022088690209, -0.03446652023192006])
dAA = SO3([0.9870997271938449 -0.055411789422621455 0.15021205732836512; 0.04257258239507061 0.9952646633707125 0.08738320819126293; -0.15434281260250482 -0.0798610257795737 0.9847845006697569])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9473524980177415 0.2705606639954428 -0.17123133941510293; -0.2998851984461319 0.9371545378071464 -0.17835425428174637; 0.11221458128277804 0.22031409252659898 0.9689528308342528]), [0.8720332328018506, -0.6343096201206662, -1.5468176749846985])
xj = SE3(SO3([0.864198947068336 0.16241035700717757 0.4762174459454216; -0.1719111644296237 0.9848225768876172 -0.023896518509694323; -0.4728707343771977 -0.061215749519502 0.8790027875839389]), [0.5188215561802717, -0.7790634149574517, 0.06585599981194315])
Dx = SE3(SO3([0.8171916534905564 -0.1483431561897135 0.5569489289666016; -0.031469173628659544 0.9533861085930322 0.30010767909696107; -0.5755062923865382 -0.2627722130544049 0.7744309339573094]), [-0.11024094252296346, 0.12407287575058146, 1.6489030860236178])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
