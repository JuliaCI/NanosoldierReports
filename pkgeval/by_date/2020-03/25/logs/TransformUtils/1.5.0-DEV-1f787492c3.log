Julia Version 1.5.0-DEV.507
Commit 1f787492c3 (2020-03-25 15:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_5YdPc4/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_5YdPc4/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.13505428890657273 0.17796800333872106; 0.13505428890657273 0.0 -0.15055561292404895; -0.17796800333872106 0.15055561292404895 0.0])
dAA = so3([0.0 -0.03818612152770289 0.04534731130497707; 0.03818612152770289 0.0 -0.1330802847769318; -0.04534731130497707 0.1330802847769318 0.0])
dAA = so3([0.0 0.049563210642941856 0.04614046618861492; -0.049563210642941856 0.0 -0.10686618321719953; -0.04614046618861492 0.10686618321719953 0.0])
dAA = Quaternion(0.9991275904506771, [-0.03940231135391983, 0.010602558860360533, -0.00889390835377692])
dAA = SO3([0.9998856030880652 -0.014722826750226741 0.003466858765473955; 0.014582045671398826 0.9991853674300473 0.03762931646627851; -0.004018044456470645 -0.0375744578958221 0.9992857526416463])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9891378821516338 -0.0747172938224023 0.12658426480584922; 0.11201988416555002 0.9407575768606017 -0.320041758417407; -0.09517245212831978 0.33074538180181134 0.9389087797931472]), [1.5055561292404895, 1.7796800333872105, 1.3505428890657272])
xj = SE3(SO3([0.9976144772301107 0.04115213413397981 0.05542433289731022; -0.05123375854777046 0.9794778768538114 0.19493124618443988; -0.04626507112241034 -0.19730583014743605 0.9792496885799196]), [1.0686618321719952, 0.4614046618861492, -0.4956321064294185])
Dx = SE3(SO3([0.985442231779925 0.16920421278553294 -0.01653911122850453; -0.1380395591740158 0.8531184657962141 0.5031242027775625; 0.09924055586122109 -0.49351678562450385 0.864055839850188]), [-0.404116752761041, -1.8181478383229488, -1.3667906877236904])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
