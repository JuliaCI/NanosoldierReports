Julia Version 1.5.0-DEV.431
Commit 4085873ec6 (2020-03-10 23:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CodecZlib ──────────────────── v0.6.0
  Installed CommonSubexpressions ───────── v0.2.0
  Installed FillArrays ─────────────────── v0.8.5
  Installed SpecialFunctions ───────────── v0.10.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed BinaryProvider ─────────────── v0.5.8
  Installed Gridap ─────────────────────── v0.7.1
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed Requires ───────────────────── v1.0.1
  Installed Reexport ───────────────────── v0.2.0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed StaticArrays ───────────────── v0.12.1
  Installed QuadGK ─────────────────────── v2.3.1
  Installed TranscodingStreams ─────────── v0.9.5
  Installed DataStructures ─────────────── v0.17.10
  Installed JSON ───────────────────────── v0.21.0
  Installed Parameters ─────────────────── v0.12.0
  Installed OrderedCollections ─────────── v1.1.0
  Installed WriteVTK ───────────────────── v1.4.0
  Installed Parsers ────────────────────── v0.3.12
  Installed DocStringExtensions ────────── v0.8.1
  Installed RecipesBase ────────────────── v0.8.0
  Installed LightXML ───────────────────── v0.8.1
  Installed FiniteDiff ─────────────────── v2.2.1
  Installed DiffResults ────────────────── v1.0.2
  Installed Distances ──────────────────── v0.8.2
  Installed Combinatorics ──────────────── v1.0.0
  Installed JLD2 ───────────────────────── v0.1.12
  Installed NLsolve ────────────────────── v4.3.0
  Installed NaNMath ────────────────────── v0.3.3
  Installed ArrayInterface ─────────────── v2.5.1
  Installed BSON ───────────────────────── v0.2.5
  Installed LineSearches ───────────────── v7.0.1
  Installed FileIO ─────────────────────── v1.2.3
  Installed NLSolversBase ──────────────── v7.6.1
  Installed Polynomials ────────────────── v0.6.1
  Installed ForwardDiff ────────────────── v0.10.9
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ##                                                                         3.1%######                                                                     9.0%###########                                                               15.7%##################                                                        25.4%##########################                                                36.6%######################################                                    53.0%###################################################                       71.6%####################################################################      95.6%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   56d4f2e9 + Gridap v0.7.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   4fba245c + ArrayInterface v2.5.1
   fbb218c0 + BSON v0.2.5
   b99e7846 + BinaryProvider v0.5.8
   944b1d66 + CodecZlib v0.6.0
   861a8166 + Combinatorics v1.0.0
   bbf7d656 + CommonSubexpressions v0.2.0
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   864edb3b + DataStructures v0.17.10
   163ba53b + DiffResults v1.0.2
   b552c78f + DiffRules v1.0.1
   b4f34e82 + Distances v0.8.2
   ffbed154 + DocStringExtensions v0.8.1
   442a2c76 + FastGaussQuadrature v0.4.2
   5789e2e9 + FileIO v1.2.3
   1a297f60 + FillArrays v0.8.5
   6a86dc24 + FiniteDiff v2.2.1
   f6369f11 + ForwardDiff v0.10.9
   56d4f2e9 + Gridap v0.7.1
   033835bb + JLD2 v0.1.12
   682c06a0 + JSON v0.21.0
   9c8b4983 + LightXML v0.8.1
   d3d80556 + LineSearches v7.0.1
   d41bc354 + NLSolversBase v7.6.1
   2774e3e8 + NLsolve v4.3.0
   77ba4419 + NaNMath v0.3.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   69de0a69 + Parsers v0.3.12
   f27b6e38 + Polynomials v0.6.1
   1fd47b50 + QuadGK v2.3.1
   3cdcf5f2 + RecipesBase v0.8.0
   189a3867 + Reexport v0.2.0
   ae029012 + Requires v1.0.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   3bb67fe8 + TranscodingStreams v0.9.5
   64499a7a + WriteVTK v1.4.0
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   a63ad114 + Mmap
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
   Building CodecZlib → `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
   Building LightXML ─→ `~/.julia/packages/LightXML/W8FVT/deps/build.log`
    Testing Gridap
     Status `/tmp/jl_f3SwXT/Project.toml`
   fbb218c0 BSON v0.2.5
   861a8166 Combinatorics v1.0.0
   ffbed154 DocStringExtensions v0.8.1
   442a2c76 FastGaussQuadrature v0.4.2
   5789e2e9 FileIO v1.2.3
   1a297f60 FillArrays v0.8.5
   56d4f2e9 Gridap v0.7.1
   033835bb JLD2 v0.1.12
   682c06a0 JSON v0.21.0
   d3d80556 LineSearches v7.0.1
   2774e3e8 NLsolve v4.3.0
   1fd47b50 QuadGK v2.3.1
   90137ffa StaticArrays v0.12.1
   64499a7a WriteVTK v1.4.0
   37e2e46d LinearAlgebra
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_f3SwXT/Manifest.toml`
   4fba245c ArrayInterface v2.5.1
   fbb218c0 BSON v0.2.5
   b99e7846 BinaryProvider v0.5.8
   944b1d66 CodecZlib v0.6.0
   861a8166 Combinatorics v1.0.0
   bbf7d656 CommonSubexpressions v0.2.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   864edb3b DataStructures v0.17.10
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   ffbed154 DocStringExtensions v0.8.1
   442a2c76 FastGaussQuadrature v0.4.2
   5789e2e9 FileIO v1.2.3
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   f6369f11 ForwardDiff v0.10.9
   56d4f2e9 Gridap v0.7.1
   033835bb JLD2 v0.1.12
   682c06a0 JSON v0.21.0
   9c8b4983 LightXML v0.8.1
   d3d80556 LineSearches v7.0.1
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   77ba4419 NaNMath v0.3.3
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   1fd47b50 QuadGK v2.3.1
   3cdcf5f2 RecipesBase v0.8.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   3bb67fe8 TranscodingStreams v0.9.5
   64499a7a WriteVTK v1.4.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Test Summary: | Pass  Total
Helpers       |   13     13
216.253119 seconds (13.30 M allocations: 690.924 MiB, 0.55% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  2.241922 seconds (2.15 M allocations: 120.060 MiB, 0.95% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 29.671245 seconds (29.05 M allocations: 1.370 GiB, 3.23% gc time)
Test Summary: | Pass  Total
Algebra       |  677    677
 75.318210 seconds (79.97 M allocations: 3.677 GiB, 3.42% gc time)
Test Summary: | Pass  Total
TensorValues  |  227    227
 14.989483 seconds (13.20 M allocations: 664.441 MiB, 2.36% gc time)
Test Summary: | Pass  Total
Arrays        |  278    278
 24.608808 seconds (24.15 M allocations: 1.159 GiB, 2.85% gc time)
Test Summary: | Pass  Total
Fields        |  580    580
 62.030155 seconds (50.55 M allocations: 2.428 GiB, 2.40% gc time)
Test Summary: | Pass  Total
Polynomials   |  256    256
 24.096583 seconds (21.33 M allocations: 1.047 GiB, 3.85% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 16.712439 seconds (29.87 M allocations: 1.318 GiB, 8.26% gc time)
Test Summary: | Pass  Total
ReferenceFEs  |  893    893
 75.202496 seconds (72.48 M allocations: 3.527 GiB, 3.50% gc time)
Test Summary: | Pass  Total
Geometry      | 1600   1600
136.620820 seconds (117.84 M allocations: 5.854 GiB, 3.46% gc time)
Test Summary: | Pass  Total
FESpaces      |  493    493
239.098637 seconds (179.63 M allocations: 8.884 GiB, 3.43% gc time)
Test Summary: | Pass  Total
MultiField    |  110    110
 83.884893 seconds (53.57 M allocations: 2.667 GiB, 2.95% gc time)
Test Summary: |
Visualization | No tests
 33.349026 seconds (21.25 M allocations: 1.066 GiB, 3.00% gc time)
Test Summary: | Pass  Total
Gridap        |   17     17
539.128166 seconds (309.90 M allocations: 15.403 GiB, 3.14% gc time)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000000 seconds
  0.000047 seconds (1000 allocations: 31.250 KiB)
  0.000029 seconds
  0.000000 seconds
  0.000027 seconds
  0.000028 seconds
  0.000026 seconds
+++ runing suite for n = 100000 +++
  0.000000 seconds
  0.005090 seconds (100.00 k allocations: 3.052 MiB)
  0.002693 seconds
  0.000000 seconds
  0.002704 seconds
  0.003420 seconds
  0.002629 seconds
WARNING: replacing module ArraysBenchs.
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000005 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000004 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000002 seconds
  0.000004 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 1000 +++
  0.000003 seconds
  0.000005 seconds
  0.000064 seconds (1000 allocations: 31.250 KiB)
  0.000315 seconds (1000 allocations: 31.250 KiB)
  0.000004 seconds
  0.000104 seconds
  0.000158 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 100000 +++
  0.000292 seconds
  0.000371 seconds
  0.006275 seconds (100.00 k allocations: 3.052 MiB)
  0.031649 seconds (100.00 k allocations: 3.052 MiB)
  0.000534 seconds
  0.019219 seconds
  0.015943 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000016 seconds
  0.000001 seconds
+++ runing suite for n = 1000 +++
  0.000023 seconds
  0.000022 seconds
  0.000098 seconds
  0.000092 seconds
+++ runing suite for n = 100000 +++
  0.002277 seconds
  0.002231 seconds
  0.006479 seconds
  0.006526 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000014 seconds
  0.000000 seconds
  0.000081 seconds
  0.000000 seconds
+++ runing suite for n = 100000 +++
  0.001460 seconds
  0.000000 seconds
  0.008149 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000003 seconds
  0.000002 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
+++ runing suite for n = 1000 +++
  0.000122 seconds
  0.000121 seconds
  0.000131 seconds
+++ runing suite for n = 100000 +++
  0.009464 seconds
  0.010123 seconds
  0.011447 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000016 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000006 seconds
  0.000006 seconds
+++ runing suite for n = 1000 +++
  0.000030 seconds
  0.000004 seconds
  0.000105 seconds
  0.000133 seconds
  0.000029 seconds
  0.000001 seconds
  0.000127 seconds
  0.000133 seconds
  0.000029 seconds
  0.000009 seconds
  0.000151 seconds
  0.000113 seconds
  0.000065 seconds
  0.000001 seconds
  0.000563 seconds
  0.000557 seconds
+++ runing suite for n = 100000 +++
  0.002908 seconds
  0.000453 seconds
  0.010506 seconds
  0.012975 seconds
  0.002879 seconds
  0.000118 seconds
  0.013178 seconds
  0.012783 seconds
  0.002957 seconds
  0.000910 seconds
  0.013657 seconds
  0.012216 seconds
  0.006962 seconds
  0.000123 seconds
  0.058223 seconds
  0.056303 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000003 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1000 +++
  0.000068 seconds
  0.000006 seconds
  0.000197 seconds
  0.000196 seconds (1 allocation: 112 bytes)
  0.000009 seconds
  0.000206 seconds
  0.000196 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 100000 +++
  0.006737 seconds
  0.000689 seconds
  0.020439 seconds
  0.020028 seconds (1 allocation: 112 bytes)
  0.000549 seconds
  0.021330 seconds
  0.019024 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000003 seconds
  0.000001 seconds
  0.000002 seconds
  0.000004 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000003 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000003 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000002 seconds
  0.000001 seconds
  0.000004 seconds
  0.000002 seconds
  0.000001 seconds
  0.000004 seconds
  0.000001 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000003 seconds
+++ runing suite for n = 1000 +++
  0.000098 seconds
  0.000112 seconds
  0.000339 seconds
  0.000097 seconds
  0.000106 seconds
  0.000298 seconds
  0.000238 seconds
  0.000154 seconds
  0.000131 seconds
  0.000115 seconds
  0.000140 seconds
  0.000091 seconds
  0.000233 seconds
+++ runing suite for n = 100000 +++
  0.010386 seconds
  0.011260 seconds
  0.034792 seconds
  0.010349 seconds
  0.011130 seconds
  0.043812 seconds
  0.012575 seconds
  0.012584 seconds
  0.010986 seconds
  0.011586 seconds
  0.012544 seconds
  0.018248 seconds
  0.025461 seconds
+++ runing suite for n = 1 +++
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000009 seconds
+++ runing suite for n = 1000 +++
  0.000084 seconds
  0.000217 seconds
  0.000840 seconds
+++ runing suite for n = 100000 +++
  0.007810 seconds
  0.023224 seconds
  0.101206 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000003 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000006 seconds
+++ runing suite for n = 1000 +++
  0.000061 seconds
  0.000511 seconds
+++ runing suite for n = 100000 +++
  0.007553 seconds
  0.055463 seconds
+++ runing suite for n = 1 +++
  0.000006 seconds
  0.000001 seconds
  0.000003 seconds
  0.131794 seconds (74.93 k allocations: 3.619 MiB)
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000003 seconds
  0.000008 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000027 seconds
  0.000050 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
+++ runing suite for n = 1000 +++
  0.000024 seconds
  0.000155 seconds
  0.002243 seconds
  0.006595 seconds
  0.000036 seconds
  0.000164 seconds
  0.000003 seconds
+++ runing suite for n = 100000 +++
  0.002619 seconds
  0.012732 seconds
  0.220688 seconds
  0.510561 seconds
  0.003383 seconds
  0.016111 seconds
  0.000086 seconds
+++ runing suite for n = 1 +++
  0.000005 seconds
  0.000006 seconds
  0.000008 seconds
  0.000011 seconds (30 allocations: 1.406 KiB)
+++ runing suite for n = 1 +++
  0.000002 seconds
  0.000022 seconds
  0.000002 seconds
  0.000005 seconds (30 allocations: 1.406 KiB)
+++ runing suite for n = 10 +++
  0.000008 seconds
  0.000016 seconds
  0.000013 seconds
  0.000036 seconds (300 allocations: 14.062 KiB)
+++ runing suite for n = 1000 +++
  0.000763 seconds
  0.001517 seconds
  0.001239 seconds
  0.003448 seconds (30.00 k allocations: 1.373 MiB)
+++ runing suite for n = 100000 +++
  0.076470 seconds
  0.151957 seconds
  0.128590 seconds
  0.661765 seconds (3.00 M allocations: 137.329 MiB, 36.03% gc time)
    Testing Gridap tests passed 
