Julia Version 1.5.0-DEV.429
Commit ff4f86714b (2020-03-10 12:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_sZ0msg/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_sZ0msg/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.09152560303095307 -0.13581416009608469; 0.09152560303095307 0.0 0.06727214615146358; 0.13581416009608469 -0.06727214615146358 0.0])
dAA = so3([0.0 -0.15617964158686853 0.12344425981840397; 0.15617964158686853 0.0 0.08917827376866037; -0.12344425981840397 -0.08917827376866037 0.0])
dAA = so3([0.0 0.1325729692473305 0.018442068882730586; -0.1325729692473305 0.0 0.04177839131787253; -0.018442068882730586 -0.04177839131787253 0.0])
dAA = Quaternion(0.992290537059642, [0.01604971736769077, -0.05104875772007719, 0.11178515540778053])
dAA = SO3([0.9987191238875466 0.00681377284508326 -0.050136654065736294; -0.005039836014416046 0.9993596733519594 0.035423767879957296; 0.05034591973774538 -0.03512571390706394 0.9981139577163922])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8791934785147824 -0.4049393976828416 0.2510834752454542; 0.3378243250565531 0.9014026639384938 0.27082829033295486; -0.3359963582200877 -0.1532883611003927 0.9293057223615887]), [-0.6727214615146359, -1.3581416009608467, 0.9152560303095306])
xj = SE3(SO3([0.8156933202529598 -0.5297595767013594 -0.23237727554108836; 0.5166850201235732 0.8478399699722772 -0.11918043168788746; 0.2601557173590564 -0.022851175256534302 0.9652962376984539]), [-0.41778391317872526, 0.18442068882730583, -1.3257296924733049])
Dx = SE3(SO3([0.8042896422217722 -0.17166228773748962 -0.5689026545758993; 0.09555604821448564 0.9822685506370008 -0.16129952287318441; 0.5865042310711871 0.07536944605221263 0.8064317910011842]), [1.498217536009097, 1.6307525287309792, -1.6007807426305596])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
