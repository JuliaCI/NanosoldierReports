Julia Version 1.5.0-DEV.429
Commit ff4f86714b (2020-03-10 12:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ───────────────────── v1.0.1
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed ProgressMeter ──────────────── v1.2.0
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed ArgCheck ───────────────────── v2.0.0
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed LazyArrays ─────────────────── v0.15.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Missings ───────────────────── v0.4.3
  Installed Rmath ──────────────────────── v0.6.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed Parameters ─────────────────── v0.12.0
  Installed MacroTools ─────────────────── v0.5.4
  Installed StaticArrays ───────────────── v0.12.1
  Installed DataAPI ────────────────────── v1.1.0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed StatsFuns ──────────────────── v0.9.4
  Installed FillArrays ─────────────────── v0.8.5
  Installed SpecialFunctions ───────────── v0.10.0
  Installed DataStructures ─────────────── v0.17.10
  Installed StatsBase ──────────────────── v0.32.2
#=#=#                                                                         ##                                                                         4.0%########                                                                  11.4%###############                                                           21.7%#########################                                                 35.2%########################################                                  56.7%##########################################################                81.1%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.0
   1914dd2f + MacroTools v0.5.4
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
                                                                           0.7%############################################                              61.9%######################################################################## 100.0%
#=#=#                                                                         #                                                                          1.7%####                                                                       6.4%#########                                                                 12.9%##############                                                            20.8%######################                                                    31.7%#################################                                         47.0%#############################################                             63.7%##############################################################            87.2%######################################################################## 100.0%
     Status `/tmp/jl_tGaydx/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.5.2
   31c24e10 Distributions v0.22.5
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.9
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_tGaydx/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.4.0
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.5.1
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.5.2
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v0.7.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.19.0
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   31c24e10 Distributions v0.22.5
   ced4e74d DistributionsAD v0.4.2
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.4.2
   da5c29d0 EllipsisNotation v0.4.0
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.2.2
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.1
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.1
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.0
   6f1fad26 Libtask v0.3.2
   093fc24a LightGraphs v1.3.1
   6fdf6af0 LogDensityProblems v0.10.3
   c7f686f2 MCMCChains v3.0.4
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+7
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   90014a1f PDMats v0.9.11
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v0.8.4
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.9
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.153685187
│   t_steps = 0.007366715
└   t_step / t_steps = 20.86210570111644
Sampling  0%|                               |  ETA: 5:22:21[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.00956322771602373
  log_density:                   -10.87267302111075
  hamiltonian_energy:            14.709873742185646
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  4.649829981702929
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  5%|█▋                             |  ETA: 0:00:43[K
  iterations:                    645
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.7174724428235366
  log_density:                   -12.923697097771855
  hamiltonian_energy:            17.8946300370809
  hamiltonian_energy_error:      0.12467543744129728
  max_hamiltonian_energy_error:  0.8536784245858904
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8879398390748297
  nom_step_size:                 0.8879398390748297
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8908546482631282, 0.7507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  7%|██▏                            |  ETA: 0:00:34[K
  iterations:                    841
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5886268699412086
  log_density:                   -15.410040225844446
  hamiltonian_energy:            20.285020422447072
  hamiltonian_energy_error:      0.23486271970532258
  max_hamiltonian_energy_error:  1.1681924138004156
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.367064165216632
  nom_step_size:                 1.367064165216632
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8908546482631282, 0.7507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▊                            |  ETA: 0:00:27[K
  iterations:                    1081
  n_steps:                       55
  is_accept:                     true
  acceptance_rate:               0.9635028960807585
  log_density:                   -13.942989994009102
  hamiltonian_energy:            18.866301879832765
  hamiltonian_energy_error:      -0.1625696816303197
  max_hamiltonian_energy_error:  -0.5910237859746026
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7965115370384568
  nom_step_size:                 0.7965115370384568
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9935713273028892, 0.9659 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▎                           |  ETA: 0:00:24[K
  iterations:                    1259
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8846600614930623
  log_density:                   -17.65228108577277
  hamiltonian_energy:            22.674999415974643
  hamiltonian_energy_error:      0.23028582295209787
  max_hamiltonian_energy_error:  0.3638401921567116
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7767738545928629
  nom_step_size:                 0.7767738545928629
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9935713273028892, 0.9659 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:20[K
  iterations:                    1531
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               0.7181505906020691
  log_density:                   -16.691284737384862
  hamiltonian_energy:            23.14509993826617
  hamiltonian_energy_error:      0.33882777310192935
  max_hamiltonian_energy_error:  0.9782785461110493
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8665909911058682
  nom_step_size:                 0.8665909911058682
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9935713273028892, 0.9659 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▌                          |  ETA: 0:00:18[K
  iterations:                    1727
  n_steps:                       87
  is_accept:                     true
  acceptance_rate:               0.8889633072183998
  log_density:                   -16.0685039546125
  hamiltonian_energy:            23.791005028754594
  hamiltonian_energy_error:      -0.10387818338967847
  max_hamiltonian_energy_error:  0.518752223385853
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.8134196027490416
  nom_step_size:                 0.8134196027490416
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9935713273028892, 0.9659 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▏                         |  ETA: 0:00:15[K
  iterations:                    1989
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9217432965582365
  log_density:                   -15.190253549788945
  hamiltonian_energy:            19.976557703339573
  hamiltonian_energy_error:      0.08846352768038557
  max_hamiltonian_energy_error:  0.1996854504562684
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.41458929352404517
  nom_step_size:                 0.41458929352404517
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|█████▉                         |  ETA: 0:00:13[K
  iterations:                    2286
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.9945560809821
  hamiltonian_energy:            19.92765552596029
  hamiltonian_energy_error:      -0.3185238642675614
  max_hamiltonian_energy_error:  -0.34414037917645857
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|███████                        |  ETA: 0:00:11[K
  iterations:                    2696
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9970669197676398
  log_density:                   -11.827848302390898
  hamiltonian_energy:            13.114888919611403
  hamiltonian_energy_error:      -0.055823608579883555
  max_hamiltonian_energy_error:  -0.27122099693689883
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▋                       |  ETA: 0:00:10[K
  iterations:                    2971
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9280663730147075
  log_density:                   -10.995494390730796
  hamiltonian_energy:            16.864823983628547
  hamiltonian_energy_error:      -0.4010751163432609
  max_hamiltonian_energy_error:  -0.40965919291898345
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▋                      |  ETA: 0:00:09[K
  iterations:                    3336
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8320173361096475
  log_density:                   -11.025975132876361
  hamiltonian_energy:            14.323785544893223
  hamiltonian_energy_error:      0.021695991384527602
  max_hamiltonian_energy_error:  0.3301717912398452
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▎                     |  ETA: 0:00:08[K
  iterations:                    3603
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7838913036997165
  log_density:                   -16.011606550794582
  hamiltonian_energy:            22.64308738126006
  hamiltonian_energy_error:      0.12317610917697408
  max_hamiltonian_energy_error:  0.5407290515538747
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▍                    |  ETA: 0:00:07[K
  iterations:                    4020
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9855112320075997
  log_density:                   -12.720725918761785
  hamiltonian_energy:            18.34019982240789
  hamiltonian_energy_error:      -0.36764516466237396
  max_hamiltonian_energy_error:  -0.36764516466237396
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████▏                   |  ETA: 0:00:07[K
  iterations:                    4329
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7901486386112059
  log_density:                   -15.23782629446131
  hamiltonian_energy:            17.70771732522293
  hamiltonian_energy_error:      0.4272470028283486
  max_hamiltonian_energy_error:  0.455139625453846
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████▎                  |  ETA: 0:00:06[K
  iterations:                    4738
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.92385117010089
  log_density:                   -11.51104033186025
  hamiltonian_energy:            16.32616982495707
  hamiltonian_energy_error:      -0.17637272826501516
  max_hamiltonian_energy_error:  0.24607149881975232
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████                  |  ETA: 0:00:06[K
  iterations:                    5055
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6172565625163255
  log_density:                   -11.082472726642543
  hamiltonian_energy:            18.73162067567908
  hamiltonian_energy_error:      0.027256020086269928
  max_hamiltonian_energy_error:  0.9720411836427196
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|██████████████                 |  ETA: 0:00:05[K
  iterations:                    5432
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8905232165112926
  log_density:                   -12.279887984332058
  hamiltonian_energy:            17.25683161935845
  hamiltonian_energy_error:      -0.07929466548455366
  max_hamiltonian_energy_error:  0.2751787990698915
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▉                |  ETA: 0:00:05[K
  iterations:                    5779
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9959349648035738
  log_density:                   -12.23780780451547
  hamiltonian_energy:            17.31677283329139
  hamiltonian_energy_error:      -0.3771864134969185
  max_hamiltonian_energy_error:  -0.4488718728785379
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:04[K
  iterations:                    6146
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9812489962688488
  log_density:                   -14.386131867557184
  hamiltonian_energy:            23.34380199155858
  hamiltonian_energy_error:      -0.6237266755222777
  max_hamiltonian_energy_error:  -0.6269352925331937
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▊              |  ETA: 0:00:04[K
  iterations:                    6502
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7913723452836585
  log_density:                   -11.1591116998339
  hamiltonian_energy:            16.246494009564532
  hamiltonian_energy_error:      -0.0964892625981193
  max_hamiltonian_energy_error:  0.3912026999676961
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▊             |  ETA: 0:00:03[K
  iterations:                    6892
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9237102516685068
  log_density:                   -13.064380381745254
  hamiltonian_energy:            17.213915112563317
  hamiltonian_energy_error:      0.01797568129961391
  max_hamiltonian_energy_error:  0.14798968826132608
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▋            |  ETA: 0:00:03[K
  iterations:                    7232
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8755891092391168
  log_density:                   -12.265352928951591
  hamiltonian_energy:            15.582833147834718
  hamiltonian_energy_error:      0.058652511355671066
  max_hamiltonian_energy_error:  0.28114488869523413
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▋           |  ETA: 0:00:03[K
  iterations:                    7616
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9203051707955215
  log_density:                   -11.229589330505398
  hamiltonian_energy:            14.499659951987653
  hamiltonian_energy_error:      -0.04624808409842984
  max_hamiltonian_energy_error:  0.15908867212460365
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▌          |  ETA: 0:00:02[K
  iterations:                    7959
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9149894822989685
  log_density:                   -11.584045425696589
  hamiltonian_energy:            12.793632131257356
  hamiltonian_energy_error:      0.13673796398510696
  max_hamiltonian_energy_error:  0.17433733390240747
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▋         |  ETA: 0:00:02[K
  iterations:                    8351
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9419165571239965
  log_density:                   -17.61503081751272
  hamiltonian_energy:            21.72367287742597
  hamiltonian_energy_error:      0.2158695644240396
  max_hamiltonian_energy_error:  -0.31778403075276884
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▌        |  ETA: 0:00:02[K
  iterations:                    8688
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9486789249024626
  log_density:                   -16.19688197873311
  hamiltonian_energy:            20.04804532525358
  hamiltonian_energy_error:      0.19926684216638435
  max_hamiltonian_energy_error:  0.19926684216638435
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:02[K
  iterations:                    9089
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6362843472254693
  log_density:                   -17.6543523555641
  hamiltonian_energy:            22.28878681801293
  hamiltonian_energy_error:      0.6046850941559043
  max_hamiltonian_energy_error:  0.8764147900229275
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▍      |  ETA: 0:00:01[K
  iterations:                    9425
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.808811397323581
  log_density:                   -14.291369132108727
  hamiltonian_energy:            15.943567009889614
  hamiltonian_energy_error:      0.4141530202919359
  max_hamiltonian_energy_error:  0.4141530202919359
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▎     |  ETA: 0:00:01[K
  iterations:                    9783
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8462335111094179
  log_density:                   -13.840105919236807
  hamiltonian_energy:            20.091336626683013
  hamiltonian_energy_error:      -0.019644317150618207
  max_hamiltonian_energy_error:  0.35465983274465174
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████▎    |  ETA: 0:00:01[K
  iterations:                    10140
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9986397675817864
  log_density:                   -18.24220193563898
  hamiltonian_energy:            25.177662561310427
  hamiltonian_energy_error:      -0.42448549366946153
  max_hamiltonian_energy_error:  -0.9782713463868831
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|██████████████████████████▉    |  ETA: 0:00:01[K
  iterations:                    10408
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8201660825297878
  log_density:                   -16.329181411819537
  hamiltonian_energy:            20.316612652863558
  hamiltonian_energy_error:      0.36735807000557585
  max_hamiltonian_energy_error:  0.36735807000557585
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▌   |  ETA: 0:00:01[K
  iterations:                    10655
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.478298625749208
  hamiltonian_energy:            17.246621498929436
  hamiltonian_energy_error:      -0.3267767981565832
  max_hamiltonian_energy_error:  -0.688346351923407
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▎  |  ETA: 0:00:01[K
  iterations:                    10944
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8887404855367868
  log_density:                   -16.1971469891517
  hamiltonian_energy:            23.83378809302678
  hamiltonian_energy_error:      -0.017786840547476146
  max_hamiltonian_energy_error:  0.208819179789689
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▍ |  ETA: 0:00:00[K
  iterations:                    11352
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9985716135775995
  log_density:                   -12.72845517894609
  hamiltonian_energy:            14.422690947612935
  hamiltonian_energy_error:      0.01004902772991656
  max_hamiltonian_energy_error:  -0.1762618604873829
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████▏|  ETA: 0:00:00[K
  iterations:                    11678
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9957558021715334
  log_density:                   -11.79069486546457
  hamiltonian_energy:            17.88690748009813
  hamiltonian_energy_error:      -0.6190559868696504
  max_hamiltonian_energy_error:  -0.6654328113033685
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9150691725186068
  log_density:                   -16.22026135405116
  hamiltonian_energy:            17.91340246080386
  hamiltonian_energy_error:      0.29409255233481346
  max_hamiltonian_energy_error:  -0.4168938507682398
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7288541494307283
  nom_step_size:                 0.7288541494307283
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.956301571498293, 1.05399 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.109641277 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.956301571498293, 1.05399 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.729), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0874163475313465
└   average_acceptance_rate = 0.8584040420825304
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.928354282 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Matrix mode: Test Failed at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/sampler_mat.jl:48
  Expression: ≈(mean(samples), zeros(D, n_chains), atol = RNDATOL * n_chains)
   Evaluated: [-0.022325980249718075 -0.01991830914608846 … -0.012378178360421948 -0.004451910481710898; -0.011700519395029673 0.013228155390363422 … 0.00419474080943078 -0.016489461048501332; … ; 1.4887416144111072 -0.006594930484360565 … 0.00393600860229958 -0.03626963548793639; -0.04984348598480833 -0.013256844478981174 … 0.011541253593452863 0.04248053765708361] ≈ [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0] (atol=1.25)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/sampler_mat.jl:48
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/sampler_mat.jl:6
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⠀⠀⠀⢰⢣⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢇⠀⠀⠀⠀⠀⢀⠇⠀⢣│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠸⡀⠀⢀⣀⠀⡜⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠒⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⡇⠀⡜⠀⠑⠃⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⡇⠀⠀⢸⡜⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⢀⠔⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⢀⠔⠁⠈⠢⡠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡀⠀⠀⠀⠀⡜⠀⠀⠀⢀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡱⡀⠀⠀⣜⠤⠤⠤⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⡵⣠⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary:                                            | Pass  Fail  Total
AdvancedHMC                                              | 2874     1   2875
  Online v.s. naive v.s. true var/cov estimation         |   12           12
  Preconditioner constructors                            |    2            2
  Stan HMC adaptors                                      |   12           12
  Adapted mass v.s. true variance                        |   20           20
  Initialisation adaptor by metric                       |    2            2
  rand momentum variables from metric via vector of RNGs |    2            2
  Passing random number generator                        |   12           12
  TreeSampler                                            |    5            5
  TerminationCriterion                                   |    2            2
  Termination                                            |   20           20
  BinaryTree                                             |    4            4
  ClassicNoUTurn                                         |    4            4
  PhasePoint                                             |    4            4
  Metric                                                 |   60           60
  step(::Leapfrog) against step(::Leapfrog)              |    2            2
  jitter                                                 |    4            4
  temper                                                 |    7            7
  Eq (2.11) from (Neal, 2011)                            |    4            4
  `gdemo`                                                |    1            1
  HMC and NUTS                                           | 2664         2664
  drop_warmup                                            |    4            4
  Matrix mode                                            |   27     1     28
ERROR: LoadError: Some tests did not pass: 2874 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/runtests.jl:3
ERROR: Package AdvancedHMC errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1523
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
