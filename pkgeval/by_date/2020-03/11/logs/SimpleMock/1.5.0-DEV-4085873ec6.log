Julia Version 1.5.0-DEV.431
Commit 4085873ec6 (2020-03-10 23:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SimpleMock ─ v1.1.1
  Installed Cassette ─── v0.3.1
   Updating `~/.julia/environments/v1.5/Project.toml`
   a896ed2c + SimpleMock v1.1.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   7057c7e9 + Cassette v0.3.1
   a896ed2c + SimpleMock v1.1.1
    Testing SimpleMock
     Status `/tmp/jl_mjC57c/Project.toml`
   7057c7e9 Cassette v0.3.1
   a896ed2c SimpleMock v1.1.1
   fd094767 Suppressor v0.1.1
   8dfed614 Test
     Status `/tmp/jl_mjC57c/Manifest.toml`
   7057c7e9 Cassette v0.3.1
   34da2185 Compat v2.2.0
   a896ed2c SimpleMock v1.1.1
   fd094767 Suppressor v0.1.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Keyword arguments are discarded when recursing: Log Test Failed at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:169
  Expression: baz(; foo = :baz)
  Log Pattern: (:warn, "Discarding keyword arguments")
  Captured Logs: 

Stacktrace:
 [1] record at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/logging.jl:89 [inlined]
 [2] overdub(::Cassette.Context{nametype(##379),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::typeof(Test.record), ::Test.DefaultTestSet, ::Test.LogTestFailure) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
 [3] #53 at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:169 [inlined]
 [4] overdub(::Cassette.Context{nametype(##379),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::var"#53#75", ::Mock{SimpleMock.var"#15#17"{SimpleMock.var"#15#16#18"}}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
 [5] invokelatest(::Any, ::Any, ::Keyword arguments are discarded when recursing: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:165
  Got exception outside of a @test
  type DataType has no field var
  Stacktrace:
   [1] getproperty at ./Base.jl:28 [inlined]
   [2] call at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/context.jl:450 [inlined]
   [3] fallback at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/context.jl:448 [inlined]
   [4] overdub at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/context.jl:274 [inlined]
   [5] show at ./show.jl:498 [inlined]
   [6] overdub(::Cassette.Context{nametype(##379),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::typeof(show), ::IOContext{Base.PipeEndpoint}, ::Type{Vararg{Any,N} where N}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [7] show at ./show.jl:511 [inlined]
   [8] overdub(::Cassette.Context{nametype(##379),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::typeof(show), ::IOContext{Base.PipeEndpoint}, ::Type{Vararg{Any,N} where N}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [9] print at ./strings/io.jl:35 [inlined]
   [10] overdub(::Cassette.Context{nametype(##379),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::typeof(print), ::IOContext{Base.PipeEndpoint}, ::Type{Vararg{Any,N} where N}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [11] print at ./strings/io.jl:46 [inlined]
   [12] overdub(::Cassette.Context{nametype(##379),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::typeof(print), ::IOContext{Base.PipeEndpoint}, ::String, ::Type{Vararg{Any,N} where N}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [13] show_tuple_as_call at ./show.jl:1761 [inlined]
   [14] overdub(::Cassette.Context{nametype(##379),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::typeof(Base.show_tuple_as_call), ::IOContext{Base.PipeEndpoint}, ::Symbol, ::Type{Tuple{typeof(Base.invokelatest),Any,Any,Vararg{Any,N} where N}}, ::Bool, ::Base.Iterators.Zip{Tuple{Array{Any,1},Array{Any,1}}}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [15] show_spec_linfo at ./stacktraces.jl:240 [inlined]
   [16] overdub(::Cassette.Context{nametype(##379),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::typeof(Base.StackTraces.show_spec_linfo), ::IOContext{Base.PipeEndpoint}, ::Base.StackTraces.StackFrame) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [17] #show#9 at ./stacktraces.jl:253 [inlined]
   [18] overdub(::Cassette.Context{nametype(##379),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::Base.StackTraces.var"##show#9", ::Bool, ::typeof(show), ::IOContext{Base.PipeEndpoint}, ::Base.StackTraces.StackFrame) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0 (repeats 2 times)
   [19] #show_trace_entry#693 at ./errorshow.jl:538 [inlined]
   [20] overdub(::Cassette.Context{nametype(##379),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::Base.var"##show_trace_entry#693", ::String, ::typeof(Base.show_trace_entry), ::IOContext{Base.PipeEndpoint}, ::Base.StackTraces.StackFrame, ::Int64) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0 (repeats 2 times)
   [21] show_backtrace at ./errorshow.jl:642 [inlined]
   [22] overdub(::Cassette.Context{nametype(##379),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::typeof(Base.show_backtrace), ::Base.PipeEndpoint, ::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [23] record at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/logging.jl:89 [inlined]
   [24] overdub(::Cassette.Context{nametype(##379),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::typeof(Test.record), ::Test.DefaultTestSet, ::Test.LogTestFailure) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [25] #53 at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:169 [inlined]
   [26] overdub(::Cassette.Context{nametype(##379),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::var"#53#75", ::Mock{SimpleMock.var"#15#17"{SimpleMock.var"#15#16#18"}}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
   [27] invokelatest(::Any, ::Any, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./essentials.jl:710
   [28] invokelatest(::Any, ::Any, ::Vararg{Any,N} where N) at ./essentials.jl:709
   [29] mock(::Function, ::Symbol, ::Function; filters::Array{SimpleMock.var"#9#10"{Tuple{}},1}) at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/src/mock_fun.jl:140
   [30] top-level scope at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:168
   [31] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:166
   [33] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:154
   [35] include(::String) at ./client.jl:441
   [36] top-level scope at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/runtests.jl:14
   [37] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [38] top-level scope at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/runtests.jl:14
   [39] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [40] top-level scope at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/runtests.jl:10
   [41] include(::String) at ./client.jl:441
   [42] top-level scope at none:6
   [43] eval(::Module, ::Any) at ./boot.jl:331
   [44] exec_options(::JLOptions) at ./client.jl:264
   [45] _start() at ./client.jl:490
  
Metadata records original functions and not keyword wrappers: Test Failed at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:196
  Expression: eq
Stacktrace:
 [1] (::var"#64#89"{Bool,typeof(kw_f)})(::SimpleMock.Metadata{true}) at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:196
 [2] #1 at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/src/metadata.jl:54 [inlined]
 [3] _all(::SimpleMock.var"#1#2"{SimpleMock.Metadata{true}}, ::Array{var"#64#89"{Bool,typeof(kw_f)},1}, ::Colon) at ./reduce.jl:820
 [4] all(::Function, ::Array{var"#64#89"{Bool,typeof(kw_f)},1}; dims::Function) at ./reducedim.jl:665
 [5] all(::Function, ::Array{var"#64#89"{Bool,typeof(kw_f)},1}) at ./reducedim.jl:665
 [6] should_mock(::SimpleMock.Metadata{true}, ::Tuple{typeof(kw_g),UnionAll}) at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/src/metadata.jl:54
 [7] #overdub#96 at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/src/mock_fun.jl:210 [inlined]
 [8] overdub at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/src/mock_fun.jl:219 [inlined]
 [9] #kw_f#93 at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:183 [inlined]
 [10] overdub(::Cassette.Context{nametype(##383),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::var"##kw_f#93", ::Int64, ::typeof(kw_f)) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0 (repeats 2 times)
 [11] #65 at ./none:0 [inlined]
 [12] overdub(::Cassette.Context{nametype(##383),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::var"#65#90", ::Mock{SimpleMock.var"#15#17"{SimpleMock.var"#15#16#18"}}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
 [13] invokelatest(::Any, ::Any, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./essentials.jl:710
 [14] invokelatest(::Any, ::Any, ::Vararg{Any,N} where N) at ./essentials.jl:709
 [15] mock(::Function, ::Symbol, ::Function; filters::Array{var"#64#89"{Bool,typeof(kw_f)},1}) at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/src/mock_fun.jl:140
 [16] #mock#27 at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/src/mock_fun.jl:113 [inlined]
 [17] top-level scope at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:202
 [18] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [19] top-level scope at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:182
 [20] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [21] top-level scope at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:154
Metadata records original functions and not keyword wrappers: Test Failed at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:196
  Expression: eq
Stacktrace:
 [1] (::var"#64#89"{Bool,var"#95#99"})(::SimpleMock.Metadata{true}) at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:196
 [2] #1 at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/src/metadata.jl:54 [inlined]
 [3] _all(::SimpleMock.var"#1#2"{SimpleMock.Metadata{true}}, ::Array{var"#64#89"{Bool,var"#95#99"},1}, ::Colon) at ./reduce.jl:820
 [4] all(::Function, ::Array{var"#64#89"{Bool,var"#95#99"},1}; dims::Function) at ./reducedim.jl:665
 [5] all(::Function, ::Array{var"#64#89"{Bool,var"#95#99"},1}) at ./reducedim.jl:665
 [6] should_mock(::SimpleMock.Metadata{true}, ::Tuple{var"#97#100",UnionAll}) at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/src/metadata.jl:54
 [7] #overdub#100 at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/src/mock_fun.jl:210 [inlined]
 [8] overdub(::Cassette.Context{nametype(##388),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::var"#97#100##kw", ::NamedTuple{(:x,),Tuple{Int64}}, ::var"#97#100") at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/src/mock_fun.jl:219
 [9] #95#96 at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:185 [inlined]
 [10] overdub(::Cassette.Context{nametype(##388),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::var"##95#96", ::Int64, ::var"#95#99") at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0 (repeats 2 times)
 [11] #66 at ./none:0 [inlined]
 [12] overdub(::Cassette.Context{nametype(##388),SimpleMock.Metadata{true},Nothing,Cassette.var"##PassType#256",Nothing,Nothing}, ::var"#66#91", ::Mock{SimpleMock.var"#15#17"{SimpleMock.var"#15#16#18"}}) at /home/pkgeval/.julia/packages/Cassette/7OymZ/src/overdub.jl:0
 [13] invokelatest(::Any, ::Any, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./essentials.jl:710
 [14] invokelatest(::Any, ::Any, ::Vararg{Any,N} where N) at ./essentials.jl:709
 [15] mock(::Function, ::Symbol, ::Function; filters::Array{var"#64#89"{Bool,var"#95#99"},1}) at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/src/mock_fun.jl:140
 [16] #mock#27 at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/src/mock_fun.jl:113 [inlined]
 [17] top-level scope at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:204
 [18] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [19] top-level scope at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:182
 [20] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [21] top-level scope at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/mock_fun.jl:154
Test Summary:                                                      | Pass  Fail  Error  Broken  Total
SimpleMock.jl                                                      |  123     2      1       1    127
  Mock type                                                        |   67                          67
  mock function                                                    |   56     2      1       1     60
    Basics                                                         |    7                           7
    Non-Mock mocks                                                 |    1                           1
    Specific methods                                               |    3                           3
    Multiple mocks                                                 |    4                           4
    Varargs                                                        |    5                           5
    Parametric types                                               |   11                          11
    mock does not overwrite methods                                |    1                           1
    Reusing Context                                                |    2                           2
    Any context name is valid                                      |    1                           1
    Filters                                                        |   16                          16
    Keyword arguments                                              |    5     2      1       1      9
      Keyword arguments are passed to mocked functions             |    2                           2
      Keyword arguments are discarded when recursing               |                 1              1
      Metadata records original functions and not keyword wrappers |    3     2              1      6
ERROR: LoadError: Some tests did not pass: 123 passed, 2 failed, 1 errored, 1 broken.
in expression starting at /home/pkgeval/.julia/packages/SimpleMock/Eg0dX/test/runtests.jl:9
ERROR: Package SimpleMock errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1523
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
