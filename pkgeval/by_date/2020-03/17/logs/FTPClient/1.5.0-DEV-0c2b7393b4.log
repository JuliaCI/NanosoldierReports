Julia Version 1.5.0-DEV.471
Commit 0c2b7393b4 (2020-03-17 17:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed URIParser ────── v0.4.0
  Installed FTPClient ────── v1.0.1
  Installed LibCURL ──────── v0.5.2
  Installed BinaryProvider ─ v0.5.8
   Updating `~/.julia/environments/v1.5/Project.toml`
   01fcc997 + FTPClient v1.0.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   b99e7846 + BinaryProvider v0.5.8
   01fcc997 + FTPClient v1.0.1
   b27032c2 + LibCURL v0.5.2
   30578b45 + URIParser v0.4.0
   2a0f44e3 + Base64
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   8f399da3 + Libdl
   56ddb016 + Logging
   d6f4376e + Markdown
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   8dfed614 + Test
   4ec0a83e + Unicode
   Building LibCURL → `~/.julia/packages/LibCURL/lWJxD/deps/build.log`
    Testing FTPClient
#=#=#                                                                         #####################################################                     73.9%######################################################################## 100.0%
#=#=#                                                                         ####                                                                       6.8%#############                                                             19.4%#######################                                                   32.9%####################################                                      50.3%########################################################                  77.9%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
     Status `/tmp/jl_L10jBM/Project.toml`
   01fcc997 FTPClient v1.0.1
   9c2b0ca7 FTPServer v0.2.0
   b27032c2 LibCURL v0.5.2
   30578b45 URIParser v0.4.0
   8dfed614 Test
     Status `/tmp/jl_L10jBM/Manifest.toml`
   b99e7846 BinaryProvider v0.5.8
   8f4d0f93 Conda v1.4.1
   864edb3b DataStructures v0.17.10
   e2ba6199 ExprTools v0.1.0
   8f5d6c58 EzXML v1.1.0
   01fcc997 FTPClient v1.0.1
   9c2b0ca7 FTPServer v0.2.0
   682c06a0 JSON v0.21.0
   b27032c2 LibCURL v0.5.2
   94ce4f54 Libiconv_jll v1.16.0+1
   1914dd2f MacroTools v0.5.4
   f28f55f0 Memento v0.12.1
   78c3b35d Mocking v0.7.1
   bac558e1 OrderedCollections v1.1.0
   69de0a69 Parsers v0.3.12
   438e738f PyCall v1.91.4
   cea106d9 Syslogs v0.3.0
   f269a46b TimeZones v1.0.1
   30578b45 URIParser v0.4.0
   81def892 VersionParsing v1.2.0
   02c8fc9c XML2_jll v2.9.9+1
   83775a58 Zlib_jll v1.2.11+8
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
ERROR: LoadError: InitError: PyError (PyImport_ImportModule

The Python package OpenSSL.crypto could not be found by pyimport. Usually this means
that you did not install OpenSSL.crypto in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the OpenSSL.crypto module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the OpenSSL.crypto module, you can use `pyimport_conda("OpenSSL.crypto", PKG)`,
where PKG is the Anaconda package the contains the module OpenSSL.crypto,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'OpenSSL'",)

Stacktrace:
 [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/PyCall.jl:536
 [2] pyimport_conda(::String, ::String, ::String) at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/PyCall.jl:694
 [3] pyimport_conda at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/PyCall.jl:693 [inlined]
 [4] __init__() at /home/pkgeval/.julia/packages/FTPServer/2u0Pc/src/FTPServer.jl:37
 [5] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:697
 [6] _require_from_serialized(::String) at ./loading.jl:748
 [7] _require(::Base.PkgId) at ./loading.jl:1039
 [8] require(::Base.PkgId) at ./loading.jl:927
 [9] require(::Module, ::Symbol) at ./loading.jl:922
 [10] include(::String) at ./client.jl:441
 [11] top-level scope at none:6
during initialization of module FTPServer
in expression starting at /home/pkgeval/.julia/packages/FTPClient/5MZUK/test/runtests.jl:3
ERROR: Package FTPClient errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1523
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
