Julia Version 1.5.0-DEV.464
Commit 7c0608cc27 (2020-03-16 06:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_yD0fHX/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_yD0fHX/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.08671694763005217 -0.05922170751237352; -0.08671694763005217 0.0 -0.05865461729888978; 0.05922170751237352 0.05865461729888978 0.0])
dAA = so3([0.0 -0.20555327372214516 -0.12995552376398847; 0.20555327372214516 0.0 0.13364998905369238; 0.12995552376398847 -0.13364998905369238 0.0])
dAA = so3([0.0 0.012595903027885491 -0.11496183699995655; -0.012595903027885491 0.0 -0.1577374274763356; 0.11496183699995655 0.1577374274763356 0.0])
dAA = Quaternion(0.9994538415075368, [0.009082074528638828, 0.03163787985155634, 0.002929023144771596])
dAA = SO3([0.9959278864585486 0.0534407257134185 0.07260670636678265; -0.04485022135932608 0.9923308817531977 -0.11518627853586098; -0.0782055152673293 0.11146080007852387 0.9906868261098596])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8224798811929793 -0.4215099516301569 -0.3819112537089283; 0.5257790504218628 0.8195566172359164 0.22777915023615708; 0.21698671657561636 -0.38814470474497575 0.8956899312865858]), [0.5865461729888978, -0.5922170751237351, -0.8671694763005215])
xj = SE3(SO3([0.9874051490631539 -0.012409784182042026 0.15772466154703274; 0.019655743781199414 0.9988176025165837 -0.044464015106956974; -0.15698637947280245 0.04700419299997605 0.9864815672380515]), [1.577374274763356, -1.1496183699995655, -0.1259590302788549])
Dx = SE3(SO3([0.7883914889625162 0.5251498582804859 0.32040050948688; -0.33915866982894854 0.8055739944707412 -0.4858208889213314; -0.5132350892245434 0.2743504433756939 0.8132168083655398]), [0.6826990768801801, -1.1621627346490788, 0.15852193761997502])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
