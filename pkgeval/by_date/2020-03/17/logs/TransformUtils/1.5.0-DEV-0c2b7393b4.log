Julia Version 1.5.0-DEV.471
Commit 0c2b7393b4 (2020-03-17 17:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_5Cc8fW/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_5Cc8fW/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.19611113350361284 -0.11275606723712495; -0.19611113350361284 0.0 0.09140004574113064; 0.11275606723712495 -0.09140004574113064 0.0])
dAA = so3([0.0 0.0024712536798718004 0.014407441359074387; -0.0024712536798718004 0.0 0.01847501693197358; -0.014407441359074387 -0.01847501693197358 0.0])
dAA = so3([0.0 0.0526799045485438 0.13690434666526138; -0.0526799045485438 0.0 -0.0308452286252337; -0.13690434666526138 0.0308452286252337 0.0])
dAA = Quaternion(0.9986888183539451, [-0.04861821979613522, -0.00997306084596988, -0.01254794230215368])
dAA = SO3([0.9978360239271065 -0.03282442597601707 0.0569721547134095; 0.027337737963100225 0.995145071394296 0.09454594101654075; -0.05979897521199307 -0.09278385602564333 0.9938889468268619])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9993324384367145 0.005342998070390355 0.03614041864381366; -0.007006128000916786 0.9989145846073378 0.04604961269309999; -0.03585514828535895 -0.046272076140687166 0.9982851813540384]), [-0.9140004574113063, -1.1275606723712495, -1.9611113350361282])
xj = SE3(SO3([0.9968054767846445 0.06597499755678737 -0.045012677653295335; -0.05322315634058007 0.9689315284765725 0.24153465331748836; 0.05954945072193148 -0.23836734848010335 0.9693476518242984]), [0.308452286252337, 1.369043466652614, -0.526799045485438])
Dx = SE3(SO3([0.9943777816222589 0.06768919349779177 -0.08143095541385753; -0.050594934086368344 0.9792620916640934 0.19617825688506135; 0.09302139571513204 -0.19095530606213496 0.9771811966190944]), [1.152717673204068, 2.4340572416409083, 1.5910003116707587])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
