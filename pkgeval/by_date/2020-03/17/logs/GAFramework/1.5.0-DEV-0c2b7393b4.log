Julia Version 1.5.0-DEV.471
Commit 0c2b7393b4 (2020-03-17 17:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FileIO ────── v1.2.3
  Installed GAFramework ─ v0.4.1
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.3
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_gM8mjo/Project.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_gM8mjo/Manifest.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723218669215738
curgen: 20 fitness: 0.21723218669215738
curgen: 30 fitness: 0.21723218669215738
curgen: 40 fitness: 0.21723218669215738
curgen: 50 fitness: 0.21723218669215738
CoordinateCreature{Array{Float64,1}}([-0.22236782545071557], -0.21723218669215738) -0.22236782545071557 -0.21723218669215738
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578002792374967
curgen: 100 fitness: 3.2580850564056405
curgen: 150 fitness: 3.258168644196809
curgen: 200 fitness: 3.258348724679902
curgen: 250 fitness: 3.2583968167691384
curgen: 300 fitness: 3.2584007057269253
curgen: 350 fitness: 3.2584007431744206
curgen: 400 fitness: 3.2584145774068856
curgen: 450 fitness: 3.258416200164454
curgen: 500 fitness: 3.258418445153619
CoordinateCreature{Array{Float64,1}}([-0.22256665814736373, -0.22252300350273338, -0.2224667301593562, -0.22255636872501336, -0.22211205905736114, -0.22273144050640867, -0.22225195710405538, -0.22299924953803915, -0.2215376668208849, -0.22259168100656912, 0.22211568197360554, 0.22252838841731828, 0.22209994026920102, -0.22256255919084264, -0.22256420957173917], -3.258418445153619) [-0.22256665814736373, -0.22252300350273338, -0.2224667301593562, -0.22255636872501336, -0.22211205905736114, -0.22273144050640867, -0.22225195710405538, -0.22299924953803915, -0.2215376668208849, -0.22259168100656912, 0.22211568197360554, 0.22252838841731828, 0.22209994026920102, -0.22256255919084264, -0.22256420957173917] -3.258418445153619
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0027629619354456736
curgen: 100 fitness: -0.002708783902221512
curgen: 150 fitness: -0.0027051297361140314
curgen: 200 fitness: -0.0022768957321090966
curgen: 250 fitness: -0.00189886215542856
curgen: 300 fitness: -0.00189886215542856
curgen: 350 fitness: -0.00189886215542856
curgen: 400 fitness: -0.00189886215542856
curgen: 450 fitness: -0.00189886215542856
curgen: 500 fitness: -0.00189886215542856
CoordinateCreature{Array{Float64,1}}([0.0003441403907233203, 0.00017426697370004932, -0.0002485200045739791, -0.00011813902820620188, -5.917555848809464e-5, 0.0001187500548412124, -0.000575808080411936, 0.00021095143995424753, -0.0001237854268802222, -0.0005603015632064719, -0.0028479471156261102, 0.00018394455342226235, -0.0005984117724401484, -7.299004318017839e-6, 0.0003482063881373272], 0.00189886215542856) [0.0003441403907233203, 0.00017426697370004932, -0.0002485200045739791, -0.00011813902820620188, -5.917555848809464e-5, 0.0001187500548412124, -0.000575808080411936, 0.00021095143995424753, -0.0001237854268802222, -0.0005603015632064719, -0.0028479471156261102, 0.00018394455342226235, -0.0005984117724401484, -7.299004318017839e-6, 0.0003482063881373272] 0.00189886215542856
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
