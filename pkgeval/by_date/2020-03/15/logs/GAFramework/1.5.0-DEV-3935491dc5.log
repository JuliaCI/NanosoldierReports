Julia Version 1.5.0-DEV.460
Commit 3935491dc5 (2020-03-13 16:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.3
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_vXYxRN/Project.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_vXYxRN/Manifest.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21703338317632084
curgen: 20 fitness: 0.2172161998341982
curgen: 30 fitness: 0.2172161998341982
curgen: 40 fitness: 0.2172161998341982
curgen: 50 fitness: 0.2172329182063808
CoordinateCreature{Array{Float64,1}}([0.2226748346380088], -0.2172329182063808) 0.2226748346380088 -0.2172329182063808
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258035593251418
curgen: 100 fitness: 3.2581185309496887
curgen: 150 fitness: 3.2582050271295535
curgen: 200 fitness: 3.2584180560697265
curgen: 250 fitness: 3.2584187057911436
curgen: 300 fitness: 3.2584255509582873
curgen: 350 fitness: 3.258434519286785
curgen: 400 fitness: 3.258434519286785
curgen: 450 fitness: 3.258445870421388
curgen: 500 fitness: 3.25844911549988
CoordinateCreature{Array{Float64,1}}([0.22269018818848027, 0.22239794427212847, -0.22263366386509817, 0.2225928386183167, 0.2221287513684797, -0.22275760205461675, -0.2226016462176205, 0.22229900437497474, 0.22247955750391468, -0.22261295728302816, 0.22279694103549103, 0.22194456269331878, -0.22194611065831008, 0.22238472896457365, 0.22225690223657607], -3.25844911549988) [0.22269018818848027, 0.22239794427212847, -0.22263366386509817, 0.2225928386183167, 0.2221287513684797, -0.22275760205461675, -0.2226016462176205, 0.22229900437497474, 0.22247955750391468, -0.22261295728302816, 0.22279694103549103, 0.22194456269331878, -0.22194611065831008, 0.22238472896457365, 0.22225690223657607] -3.25844911549988
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.005773203730228715
curgen: 100 fitness: -0.005430438648318159
curgen: 150 fitness: -0.0018079753674271615
curgen: 200 fitness: -0.0018041397210879495
curgen: 250 fitness: -0.0017250695470067967
curgen: 300 fitness: -0.0016907514213073682
curgen: 350 fitness: -0.001236841759435947
curgen: 400 fitness: -0.0012240543169355078
curgen: 450 fitness: -0.0010438006084996232
curgen: 500 fitness: -0.0009840598766004405
CoordinateCreature{Array{Float64,1}}([-0.00047731131049652824, -0.00027494492984007565, 0.00010393792447901734, -0.00011172679560114164, 4.223711585923549e-5, -0.0009107763819686306, 2.333922074815309e-5, 0.00020312027188307616, -9.416079724820813e-5, -0.00010373963330545471, -0.0007377109328095648, 0.0004385754371839586, 0.001709670987780939, 0.0002846413203116515, 1.4562056740752098e-5], 0.0009840598766004405) [-0.00047731131049652824, -0.00027494492984007565, 0.00010393792447901734, -0.00011172679560114164, 4.223711585923549e-5, -0.0009107763819686306, 2.333922074815309e-5, 0.00020312027188307616, -9.416079724820813e-5, -0.00010373963330545471, -0.0007377109328095648, 0.0004385754371839586, 0.001709670987780939, 0.0002846413203116515, 1.4562056740752098e-5] 0.0009840598766004405
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
