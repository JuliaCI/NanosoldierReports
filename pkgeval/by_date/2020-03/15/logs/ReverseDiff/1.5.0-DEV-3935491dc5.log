Julia Version 1.5.0-DEV.460
Commit 3935491dc5 (2020-03-13 16:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed NaNMath ────────────────────── v0.3.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionWrappers ───────────── v1.1.1
  Installed DiffResults ────────────────── v1.0.2
  Installed CommonSubexpressions ───────── v0.2.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed ReverseDiff ────────────────── v1.1.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed StaticArrays ───────────────── v0.12.1
  Installed ForwardDiff ────────────────── v0.10.9
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      ##                                                                         3.7%########                                                                  11.7%###############                                                           21.4%########################                                                  33.3%###################################                                       49.5%#################################################                         68.5%#################################################################         91.5%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       #####                                                                      7.0%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   37e2e3b7 + ReverseDiff v1.1.0
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   bbf7d656 + CommonSubexpressions v0.2.0
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   163ba53b + DiffResults v1.0.2
   b552c78f + DiffRules v1.0.1
   f6369f11 + ForwardDiff v0.10.9
   069b7b12 + FunctionWrappers v1.1.1
   77ba4419 + NaNMath v0.3.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   37e2e3b7 + ReverseDiff v1.1.0
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing ReverseDiff
     Status `/tmp/jl_X0BISn/Project.toml`
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   de460e47 DiffTests v0.1.0
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   77ba4419 NaNMath v0.3.3
   37e2e3b7 ReverseDiff v1.1.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_X0BISn/Manifest.toml`
   bbf7d656 CommonSubexpressions v0.2.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   de460e47 DiffTests v0.1.0
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   77ba4419 NaNMath v0.3.3
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   37e2e3b7 ReverseDiff v1.1.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
running TapeTests...
done (took 84.994228625 seconds).
running TrackedTests...
done (took 9.454384302 seconds).
running MacrosTests...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{typeof(Main.MacrosTests.f0)}(Main.MacrosTests.f0)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{Main.MacrosTests.var"##hidden_f1"}(Main.MacrosTests.#hidden_f1)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{Main.MacrosTests.var"##hidden_f2"}(Main.MacrosTests.#hidden_f2)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{Main.MacrosTests.var"##hidden_f3"}(Main.MacrosTests.#hidden_f3)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{Main.MacrosTests.var"##hidden_f4"}(Main.MacrosTests.#hidden_f4)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{typeof(-)}(-)`...
  testing @forward anonymous functions: `ReverseDiff.ForwardOptimize{Main.MacrosTests.var"#1#2"}(Main.MacrosTests.var"#1#2"())`...
  testing @forward anonymous functions: `ReverseDiff.ForwardOptimize{Main.MacrosTests.var"#3#4"}(Main.MacrosTests.var"#3#4"())`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{typeof(Main.MacrosTests.f0)}(Main.MacrosTests.f0)`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{Main.MacrosTests.var"##hidden_g1"}(Main.MacrosTests.#hidden_g1)`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{Main.MacrosTests.var"##hidden_g2"}(Main.MacrosTests.#hidden_g2)`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{Main.MacrosTests.var"##hidden_g3"}(Main.MacrosTests.#hidden_g3)`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{Main.MacrosTests.var"##hidden_g4"}(Main.MacrosTests.#hidden_g4)`...
  testing @skip anonymous functions: `ReverseDiff.SkipOptimize{Main.MacrosTests.var"#5#6"}(Main.MacrosTests.var"#5#6"())`...
  testing @skip anonymous functions: `ReverseDiff.SkipOptimize{Main.MacrosTests.var"#7#8"}(Main.MacrosTests.var"#7#8"())`...
done (took 10.542373478 seconds).
running ScalarTests...
  testing forward-mode unary scalar functions: `Base.asind`...
  testing forward-mode unary scalar functions: `Base.log1p`...
  testing forward-mode unary scalar functions: `Base.acsch`...
  testing forward-mode unary scalar functions: `SpecialFunctions.erfc`...
  testing forward-mode unary scalar functions: `SpecialFunctions.digamma`...
  testing forward-mode unary scalar functions: `NaNMath.acos`...
  testing forward-mode unary scalar functions: `Base.asec`...
  testing forward-mode unary scalar functions: `Base.acosh`...
  testing forward-mode binary scalar functions: `\`...
  testing forward-mode unary scalar functions: `NaNMath.log10`...
  testing forward-mode unary scalar functions: `Base.mod2pi`...
  testing forward-mode unary scalar functions: `Base.acsc`...
  testing forward-mode unary scalar functions: `SpecialFunctions.airybiprime`...
  testing forward-mode unary scalar functions: `Base.cscd`...
  testing forward-mode binary scalar functions: `logbeta`...
  testing forward-mode binary scalar functions: `hypot`...
  testing forward-mode unary scalar functions: `NaNMath.log`...
  testing forward-mode unary scalar functions: `Base.tand`...
  testing forward-mode unary scalar functions: `NaNMath.atanh`...
  testing forward-mode unary scalar functions: `Base.deg2rad`...
  testing forward-mode unary scalar functions: `Base.log10`...
  testing forward-mode unary scalar functions: `Base.csch`...
  testing forward-mode unary scalar functions: `Base.asinh`...
  testing forward-mode unary scalar functions: `SpecialFunctions.airyai`...
  testing forward-mode unary scalar functions: `Base.abs2`...
  testing forward-mode unary scalar functions: `SpecialFunctions.gamma`...
  testing forward-mode unary scalar functions: `SpecialFunctions.erfcx`...
  testing forward-mode unary scalar functions: `NaNMath.log1p`...
  testing forward-mode binary scalar functions: `/`...
  testing forward-mode unary scalar functions: `SpecialFunctions.bessely0`...
  testing forward-mode unary scalar functions: `Base.cosh`...
  testing forward-mode unary scalar functions: `NaNMath.sin`...
  testing forward-mode unary scalar functions: `Base.cos`...
  testing forward-mode binary scalar functions: `atan`...
  testing forward-mode unary scalar functions: `Base.cospi`...
  testing forward-mode unary scalar functions: `Base.cbrt`...
  testing forward-mode unary scalar functions: `Base.acosd`...
  testing forward-mode unary scalar functions: `SpecialFunctions.bessely1`...
  testing forward-mode unary scalar functions: `Base.acoth`...
  testing forward-mode unary scalar functions: `NaNMath.cos`...
  testing forward-mode binary scalar functions: `max`...
  testing forward-mode unary scalar functions: `SpecialFunctions.erfcinv`...
  testing forward-mode unary scalar functions: `SpecialFunctions.erf`...
  testing forward-mode unary scalar functions: `Base.sin`...
  testing forward-mode binary scalar functions: `+`...
  testing forward-mode unary scalar functions: `SpecialFunctions.dawson`...
  testing forward-mode unary scalar functions: `Base.inv`...
  testing forward-mode unary scalar functions: `Base.acotd`...
  testing forward-mode unary scalar functions: `SpecialFunctions.airyaiprime`...
  testing forward-mode binary scalar functions: `min`...
  testing forward-mode unary scalar functions: `Base.+`...
  testing forward-mode unary scalar functions: `SpecialFunctions.erfinv`...
  testing forward-mode unary scalar functions: `SpecialFunctions.trigamma`...
  testing forward-mode unary scalar functions: `Base.asecd`...
  testing forward-mode unary scalar functions: `Base.log`...
  testing forward-mode unary scalar functions: `NaNMath.acosh`...
  testing forward-mode unary scalar functions: `Base.rad2deg`...
  testing forward-mode binary scalar functions: `mod`...
  testing forward-mode unary scalar functions: `SpecialFunctions.besselj1`...
  testing forward-mode unary scalar functions: `Base.exp`...
  testing forward-mode unary scalar functions: `Base.acot`...
  testing forward-mode unary scalar functions: `NaNMath.sqrt`...
  testing forward-mode binary scalar functions: `*`...
  testing forward-mode unary scalar functions: `Base.sind`...
  testing forward-mode unary scalar functions: `Base.sinpi`...
  testing forward-mode binary scalar functions: `max`...
  testing forward-mode unary scalar functions: `Base.asech`...
  testing forward-mode unary scalar functions: `NaNMath.log2`...
  testing forward-mode unary scalar functions: `NaNMath.tan`...
  testing forward-mode unary scalar functions: `NaNMath.lgamma`...
  testing forward-mode unary scalar functions: `Base.sqrt`...
  testing forward-mode binary scalar functions: `^`...
  testing forward-mode unary scalar functions: `SpecialFunctions.invdigamma`...
  testing forward-mode unary scalar functions: `SpecialFunctions.airybi`...
  testing forward-mode unary scalar functions: `Base.exp10`...
  testing forward-mode binary scalar functions: `rem`...
  testing forward-mode unary scalar functions: `Base.sech`...
  testing forward-mode unary scalar functions: `SpecialFunctions.erfi`...
  testing forward-mode unary scalar functions: `Base.coth`...
  testing forward-mode unary scalar functions: `Base.asin`...
  testing forward-mode unary scalar functions: `Base.cotd`...
  testing forward-mode unary scalar functions: `Base.cosd`...
  testing forward-mode unary scalar functions: `Base.sinh`...
  testing forward-mode unary scalar functions: `Base.abs`...
  testing forward-mode unary scalar functions: `SpecialFunctions.loggamma`...
  testing forward-mode unary scalar functions: `SpecialFunctions.besselj0`...
  testing forward-mode unary scalar functions: `Base.transpose`...
  testing forward-mode binary scalar functions: `min`...
  testing forward-mode unary scalar functions: `Base.csc`...
  testing forward-mode unary scalar functions: `Base.tanh`...
  testing forward-mode unary scalar functions: `Base.log2`...
  testing forward-mode unary scalar functions: `Base.atan`...
  testing forward-mode unary scalar functions: `Base.secd`...
  testing forward-mode unary scalar functions: `Base.atand`...
  testing forward-mode unary scalar functions: `NaNMath.asin`...
  testing forward-mode unary scalar functions: `Base.sec`...
  testing forward-mode unary scalar functions: `Base.acscd`...
  testing forward-mode unary scalar functions: `Base.tan`...
  testing forward-mode unary scalar functions: `Base.-`...
  testing forward-mode unary scalar functions: `Base.cot`...
  testing forward-mode binary scalar functions: `-`...
  testing forward-mode unary scalar functions: `Base.exp2`...
  testing forward-mode unary scalar functions: `Base.expm1`...
  testing forward-mode unary scalar functions: `Base.acos`...
  testing forward-mode unary scalar functions: `Base.atanh`...
  testing forward-mode binary scalar functions: `beta`...
  testing SKIPPED_UNARY_SCALAR_FUNCS: `isinf`...
  testing SKIPPED_UNARY_SCALAR_FUNCS: `isnan`...
  testing SKIPPED_UNARY_SCALAR_FUNCS: `isfinite`...
  testing SKIPPED_UNARY_SCALAR_FUNCS: `iseven`...
  testing SKIPPED_UNARY_SCALAR_FUNCS: `isodd`...
  testing SKIPPED_UNARY_SCALAR_FUNCS: `isreal`...
  testing SKIPPED_UNARY_SCALAR_FUNCS: `isinteger`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `isequal`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `isless`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `<`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `>`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `==`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `!=`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `<=`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `>=`...
done (took 39.238057301 seconds).
running LinAlgTests...
  testing Array -> Number functions: `sum`...
  testing Array -> Number functions: `det`...
  testing Array -> Number functions: `#17`...
  testing Array -> Number functions: `mean`...
  testing Array -> Array functions: `-`...
  testing Array -> Array functions: `inv`...
  testing (Array, Array) -> Array functions: `+`...
  testing (Array, Array) -> Array functions: `-`...
  testing *(A, B) functions: `*(a, b)`...
  testing *(A, B) functions: `*(transpose(a), b)`...
  testing *(A, B) functions: `*(a, transpose(b))`...
  testing *(A, B) functions: `*(transpose(a), transpose(b))`...
  testing *(A, B) functions: `*(adjoint(a), b)`...
  testing *(A, B) functions: `*(a, adjoint(b))`...
  testing *(A, B) functions: `*(adjoint(a), adjoint(b))`...
  testing *(A, B) functions: `*(adjoint(a), transpose(b))`...
  testing *(A, B) functions: `*(transpose(a), adjoint(b))`...
done (took 92.156017031 seconds).
running ElementwiseTests...
  testing DiffTests.NUMBER_TO_NUMBER_FUNCS: `num2num_1`...
  testing DiffTests.NUMBER_TO_NUMBER_FUNCS: `num2num_2`...
  testing DiffTests.NUMBER_TO_NUMBER_FUNCS: `num2num_3`...
  testing DiffTests.NUMBER_TO_NUMBER_FUNCS: `num2num_4`...
  testing DiffTests.NUMBER_TO_NUMBER_FUNCS: `num2num_5`...
  testing DiffTests.NUMBER_TO_NUMBER_FUNCS: `identity`...
  testing forward-mode unary scalar functions: `asind`...
  testing forward-mode unary scalar functions: `log1p`...
  testing forward-mode unary scalar functions: `acsch`...
  testing forward-mode unary scalar functions: `erfc`...
  testing forward-mode unary scalar functions: `digamma`...
  testing forward-mode unary scalar functions: `acos`...
  testing forward-mode unary scalar functions: `asec`...
  testing forward-mode unary scalar functions: `acosh`...
  testing forward-mode binary scalar functions: `\`...
  testing forward-mode unary scalar functions: `log10`...
  testing forward-mode unary scalar functions: `mod2pi`...
  testing forward-mode unary scalar functions: `acsc`...
  testing forward-mode unary scalar functions: `airybiprime`...
  testing forward-mode unary scalar functions: `cscd`...
  testing forward-mode binary scalar functions: `logbeta`...
  testing forward-mode binary scalar functions: `hypot`...
  testing forward-mode unary scalar functions: `log`...
  testing forward-mode unary scalar functions: `tand`...
  testing forward-mode unary scalar functions: `atanh`...
  testing forward-mode unary scalar functions: `deg2rad`...
  testing forward-mode unary scalar functions: `log10`...
  testing forward-mode unary scalar functions: `csch`...
  testing forward-mode unary scalar functions: `asinh`...
  testing forward-mode unary scalar functions: `airyai`...
  testing forward-mode unary scalar functions: `abs2`...
  testing forward-mode unary scalar functions: `gamma`...
  testing forward-mode unary scalar functions: `erfcx`...
  testing forward-mode unary scalar functions: `log1p`...
  testing forward-mode binary scalar functions: `/`...
  testing forward-mode unary scalar functions: `bessely0`...
  testing forward-mode unary scalar functions: `cosh`...
  testing forward-mode unary scalar functions: `sin`...
  testing forward-mode unary scalar functions: `cos`...
  testing forward-mode binary scalar functions: `atan`...
  testing forward-mode unary scalar functions: `cospi`...
  testing forward-mode unary scalar functions: `cbrt`...
  testing forward-mode unary scalar functions: `acosd`...
  testing forward-mode unary scalar functions: `bessely1`...
  testing forward-mode unary scalar functions: `acoth`...
  testing forward-mode unary scalar functions: `cos`...
  testing forward-mode binary scalar functions: `max`...
  testing forward-mode unary scalar functions: `erfcinv`...
  testing forward-mode unary scalar functions: `erf`...
  testing forward-mode unary scalar functions: `sin`...
  testing forward-mode binary scalar functions: `+`...
  testing forward-mode unary scalar functions: `dawson`...
  testing forward-mode unary scalar functions: `inv`...
  testing forward-mode unary scalar functions: `acotd`...
  testing forward-mode unary scalar functions: `airyaiprime`...
  testing forward-mode binary scalar functions: `min`...
  testing forward-mode unary scalar functions: `+`...
  testing forward-mode unary scalar functions: `erfinv`...
  testing forward-mode unary scalar functions: `trigamma`...
  testing forward-mode unary scalar functions: `asecd`...
  testing forward-mode unary scalar functions: `log`...
  testing forward-mode unary scalar functions: `acosh`...
  testing forward-mode unary scalar functions: `rad2deg`...
  testing forward-mode binary scalar functions: `mod`...
  testing forward-mode unary scalar functions: `besselj1`...
  testing forward-mode unary scalar functions: `exp`...
  testing forward-mode unary scalar functions: `acot`...
  testing forward-mode unary scalar functions: `sqrt`...
  testing forward-mode binary scalar functions: `*`...
  testing forward-mode unary scalar functions: `sind`...
  testing forward-mode unary scalar functions: `sinpi`...
  testing forward-mode binary scalar functions: `max`...
  testing forward-mode unary scalar functions: `asech`...
  testing forward-mode unary scalar functions: `log2`...
  testing forward-mode unary scalar functions: `tan`...
  testing forward-mode unary scalar functions: `lgamma`...
  testing forward-mode unary scalar functions: `sqrt`...
  testing forward-mode binary scalar functions: `^`...
  testing forward-mode unary scalar functions: `invdigamma`...
  testing forward-mode unary scalar functions: `airybi`...
  testing forward-mode unary scalar functions: `exp10`...
  testing forward-mode binary scalar functions: `rem`...
  testing forward-mode unary scalar functions: `sech`...
  testing forward-mode unary scalar functions: `erfi`...
  testing forward-mode unary scalar functions: `coth`...
  testing forward-mode unary scalar functions: `asin`...
  testing forward-mode unary scalar functions: `cotd`...
  testing forward-mode unary scalar functions: `cosd`...
  testing forward-mode unary scalar functions: `sinh`...
  testing forward-mode unary scalar functions: `abs`...
  testing forward-mode unary scalar functions: `loggamma`...
  testing forward-mode unary scalar functions: `besselj0`...
  testing forward-mode unary scalar functions: `transpose`...
  testing forward-mode binary scalar functions: `min`...
  testing forward-mode unary scalar functions: `csc`...
  testing forward-mode unary scalar functions: `tanh`...
  testing forward-mode unary scalar functions: `log2`...
  testing forward-mode unary scalar functions: `atan`...
  testing forward-mode unary scalar functions: `secd`...
  testing forward-mode unary scalar functions: `atand`...
  testing forward-mode unary scalar functions: `asin`...
  testing forward-mode unary scalar functions: `sec`...
  testing forward-mode unary scalar functions: `acscd`...
  testing forward-mode unary scalar functions: `tan`...
  testing forward-mode unary scalar functions: `-`...
  testing forward-mode unary scalar functions: `cot`...
  testing forward-mode binary scalar functions: `-`...
  testing forward-mode unary scalar functions: `exp2`...
  testing forward-mode unary scalar functions: `expm1`...
  testing forward-mode unary scalar functions: `acos`...
  testing forward-mode unary scalar functions: `atanh`...
  testing forward-mode binary scalar functions: `beta`...
  testing built-in broadcast operators: `#11`...
  testing built-in broadcast operators: `#12`...
  testing built-in broadcast operators: `#13`...
  testing built-in broadcast operators: `#14`...
  testing built-in broadcast operators: `#15`...
  testing built-in broadcast operators: `#16`...
done (took 619.943659089 seconds).
running GradientTests...
  testing MATRIX_TO_NUMBER_FUNCS: `det`...
  testing MATRIX_TO_NUMBER_FUNCS: `mat2num_1`...
  testing MATRIX_TO_NUMBER_FUNCS: `mat2num_2`...
  testing MATRIX_TO_NUMBER_FUNCS: `mat2num_3`...
  testing MATRIX_TO_NUMBER_FUNCS: `mat2num_4`...
  testing MATRIX_TO_NUMBER_FUNCS: `softmax`...
  testing VECTOR_TO_NUMBER_FUNCS: `vec2num_1`...
  testing VECTOR_TO_NUMBER_FUNCS: `vec2num_2`...
  testing VECTOR_TO_NUMBER_FUNCS: `vec2num_3`...
  testing VECTOR_TO_NUMBER_FUNCS: `vec2num_4`...
  testing VECTOR_TO_NUMBER_FUNCS: `vec2num_5`...
  testing VECTOR_TO_NUMBER_FUNCS: `vec2num_6`...
  testing VECTOR_TO_NUMBER_FUNCS: `vec2num_7`...
  testing VECTOR_TO_NUMBER_FUNCS: `rosenbrock_1`...
  testing VECTOR_TO_NUMBER_FUNCS: `rosenbrock_2`...
  testing VECTOR_TO_NUMBER_FUNCS: `rosenbrock_3`...
  testing VECTOR_TO_NUMBER_FUNCS: `rosenbrock_4`...
  testing VECTOR_TO_NUMBER_FUNCS: `ackley`...
  testing VECTOR_TO_NUMBER_FUNCS: `self_weighted_logit`...
  testing VECTOR_TO_NUMBER_FUNCS: `first`...
  testing TERNARY_MATRIX_TO_NUMBER_FUNCS: `neural_step`...
done (took 68.827951257 seconds).
running JacobianTests...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `-`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `chebyquad`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `brown_almost_linear`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `trigonometric`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `arr2arr_1`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `arr2arr_2`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `mutation_test_1`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `mutation_test_2`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `identity`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `inv`...
  testing INPLACE_ARRAY_TO_ARRAY_FUNCS: `chebyquad!`...
  testing INPLACE_ARRAY_TO_ARRAY_FUNCS: `brown_almost_linear!`...
  testing INPLACE_ARRAY_TO_ARRAY_FUNCS: `trigonometric!`...
  testing INPLACE_ARRAY_TO_ARRAY_FUNCS: `mutation_test_1!`...
  testing INPLACE_ARRAY_TO_ARRAY_FUNCS: `mutation_test_2!`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `+`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `-`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `*`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `/`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `\`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#11`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#12`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#13`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#14`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#15`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#16`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#23`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#24`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#25`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#26`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#27`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#28`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `-`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `chebyquad`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `brown_almost_linear`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `trigonometric`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `arr2arr_1`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `arr2arr_2`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `mutation_test_1`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `mutation_test_2`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `identity`...
  testing ARRAY_TO_ARRAY_FUNCS + MATRIX_TO_MATRIX_FUNCS: `inv`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `+`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `-`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `*`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `/`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `\`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#11`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#12`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#13`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#14`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#15`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#16`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#23`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#24`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#25`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#26`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#27`...
  testing BINARY_MATRIX_TO_MATRIX_FUNCS: `#28`...
done (took 776.590008041 seconds).
running HessianTests...
  testing MATRIX_TO_NUMBER_FUNCS: `det`...
  testing MATRIX_TO_NUMBER_FUNCS: `mat2num_1`...
  testing MATRIX_TO_NUMBER_FUNCS: `mat2num_2`...
  testing MATRIX_TO_NUMBER_FUNCS: `mat2num_3`...
  testing MATRIX_TO_NUMBER_FUNCS: `mat2num_4`...
  testing MATRIX_TO_NUMBER_FUNCS: `softmax`...
  testing VECTOR_TO_NUMBER_FUNCS: `vec2num_1`...
  testing VECTOR_TO_NUMBER_FUNCS: `vec2num_2`...
  testing VECTOR_TO_NUMBER_FUNCS: `vec2num_3`...
  testing VECTOR_TO_NUMBER_FUNCS: `vec2num_4`...
  testing VECTOR_TO_NUMBER_FUNCS: `vec2num_5`...
  testing VECTOR_TO_NUMBER_FUNCS: `vec2num_6`...
  testing VECTOR_TO_NUMBER_FUNCS: `vec2num_7`...
  testing VECTOR_TO_NUMBER_FUNCS: `rosenbrock_1`...
  testing VECTOR_TO_NUMBER_FUNCS: `rosenbrock_2`...
  testing VECTOR_TO_NUMBER_FUNCS: `rosenbrock_3`...
  testing VECTOR_TO_NUMBER_FUNCS: `rosenbrock_4`...
  testing VECTOR_TO_NUMBER_FUNCS: `ackley`...
  testing VECTOR_TO_NUMBER_FUNCS: `self_weighted_logit`...
  testing VECTOR_TO_NUMBER_FUNCS: `first`...
done (took 112.239587022 seconds).
running ConfigTests...
done (took 0.885791124 seconds).
    Testing ReverseDiff tests passed 
