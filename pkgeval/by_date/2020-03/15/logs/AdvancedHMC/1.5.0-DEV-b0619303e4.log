Julia Version 1.5.0-DEV.462
Commit b0619303e4 (2020-03-15 15:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed ProgressMeter ──────────────── v1.2.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Parameters ─────────────────── v0.12.0
  Installed MacroTools ─────────────────── v0.5.4
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed DataStructures ─────────────── v0.17.10
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed StatsFuns ──────────────────── v0.9.4
  Installed Requires ───────────────────── v1.0.1
  Installed Missings ───────────────────── v0.4.3
  Installed InplaceOps ─────────────────── v0.3.0
  Installed OrderedCollections ─────────── v1.1.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed SpecialFunctions ───────────── v0.10.0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed DataAPI ────────────────────── v1.1.0
  Installed FillArrays ─────────────────── v0.8.5
  Installed LazyArrays ─────────────────── v0.15.0
  Installed StatsBase ──────────────────── v0.32.2
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ##                                                                         3.7%########                                                                  11.9%###############                                                           21.0%########################                                                  34.6%######################################                                    53.2%####################################################                      73.6%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.0
   1914dd2f + MacroTools v0.5.4
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
#=#=#                                                                         #############                                                             18.2%#######################################                                   55.3%######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.1%####                                                                       5.7%#######                                                                   11.0%############                                                              16.9%##################                                                        25.4%######################                                                    31.7%###############################                                           43.6%#########################################                                 58.2%########################################################                  78.3%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
     Status `/tmp/jl_pd043R/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.5.2
   31c24e10 Distributions v0.22.5
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.0
   1dea7af3 OrdinaryDiffEq v5.30.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.10
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_pd043R/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.4.0
   1520ce14 AbstractTrees v0.3.2
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.5.1
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.5.2
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v0.7.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   88cd18e8 ConsoleProgressMonitor v0.1.2
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.23.0
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   31c24e10 Distributions v0.22.5
   ced4e74d DistributionsAD v0.4.3
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.4.2
   da5c29d0 EllipsisNotation v0.4.0
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.2.2
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.1
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.1
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.0
   1d6d02ad LeftChildRightSiblingTrees v0.1.2
   6f1fad26 Libtask v0.3.3
   093fc24a LightGraphs v1.3.1
   d3d80556 LineSearches v7.0.1
   6fdf6af0 LogDensityProblems v0.10.3
   e6f89c97 LoggingExtras v0.4.0
   c7f686f2 MCMCChains v3.0.4
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+7
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.30.0
   90014a1f PDMats v0.9.12
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   33c8b6b6 ProgressLogging v0.1.2
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v0.8.4
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   5d786b92 TerminalLoggers v0.1.1
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.9.0
   3a884ed6 UnPack v0.1.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.10
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.120426977
│   t_steps = 0.009127573
└   t_step / t_steps = 13.19375665360332
Sampling  0%|                               |  ETA: 5:49:50[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.337887494764995
  log_density:                   -11.117282107763339
  hamiltonian_energy:            14.811077801313186
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  6.085988819453657
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:22[K
  iterations:                    1301
  n_steps:                       255
  is_accept:                     true
  acceptance_rate:               0.7078839754607414
  log_density:                   -13.426690250941183
  hamiltonian_energy:            16.968037557905905
  hamiltonian_energy_error:      -0.7442434439406433
  max_hamiltonian_energy_error:  1.9920385903212932
  tree_depth:                    7
  numerical_error:               false
  step_size:                     1.533186054999864
  nom_step_size:                 1.533186054999864
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9233629195006208, 0.9481 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████▏                          |  ETA: 0:00:18[K
  iterations:                    1585
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.8905511490617688
  log_density:                   -14.830540578976427
  hamiltonian_energy:            21.66791841592075
  hamiltonian_energy_error:      -0.2234019419781994
  max_hamiltonian_energy_error:  0.4509160645710253
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8840381991560079
  nom_step_size:                 0.8840381991560079
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9233629195006208, 0.9481 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:15[K
  iterations:                    1878
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.786401188748601
  log_density:                   -14.088104602965622
  hamiltonian_energy:            20.638800576396896
  hamiltonian_energy_error:      -0.0345832899102092
  max_hamiltonian_energy_error:  0.6525362425430856
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7985835875329768
  nom_step_size:                 0.7985835875329768
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9233629195006208, 0.9481 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▋                         |  ETA: 0:00:13[K
  iterations:                    2192
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.886262384193417
  hamiltonian_energy:            18.972273629322768
  hamiltonian_energy_error:      -0.1588912750875302
  max_hamiltonian_energy_error:  -0.21732321752653405
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████                        |  ETA: 0:00:10[K
  iterations:                    2709
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9255919061928096
  log_density:                   -14.616725703740311
  hamiltonian_energy:            20.047139780054472
  hamiltonian_energy_error:      0.03177614935352935
  max_hamiltonian_energy_error:  0.13472185305550255
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▎                      |  ETA: 0:00:09[K
  iterations:                    3184
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.65436019359977
  hamiltonian_energy:            17.731412356621803
  hamiltonian_energy_error:      -0.017188254817671833
  max_hamiltonian_energy_error:  -0.43721246552643933
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▌                     |  ETA: 0:00:07[K
  iterations:                    3654
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8715439395134913
  log_density:                   -20.455568308022073
  hamiltonian_energy:            30.017419166265455
  hamiltonian_energy_error:      0.15511896319796037
  max_hamiltonian_energy_error:  0.24033771101722579
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▊                    |  ETA: 0:00:06[K
  iterations:                    4138
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9825226044536854
  log_density:                   -12.895069560121492
  hamiltonian_energy:            15.728429751619728
  hamiltonian_energy_error:      -0.03766217199886768
  max_hamiltonian_energy_error:  -0.19310402048716568
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████                   |  ETA: 0:00:05[K
  iterations:                    4629
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.901907205712879
  log_density:                   -15.85738357895363
  hamiltonian_energy:            18.72925648783889
  hamiltonian_energy_error:      0.16182677553800673
  max_hamiltonian_energy_error:  -0.27941654940971716
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▎                 |  ETA: 0:00:05[K
  iterations:                    5120
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9171503450848881
  log_density:                   -15.069993490225968
  hamiltonian_energy:            17.815229194236448
  hamiltonian_energy_error:      0.17793629736156547
  max_hamiltonian_energy_error:  0.17793629736156547
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▋                |  ETA: 0:00:04[K
  iterations:                    5672
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.99567984302126
  hamiltonian_energy:            21.039817399183406
  hamiltonian_energy_error:      -0.05901907893528602
  max_hamiltonian_energy_error:  -0.21010417224232114
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:04[K
  iterations:                    6147
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8702614505870448
  log_density:                   -13.376687928484813
  hamiltonian_energy:            19.465769722526613
  hamiltonian_energy_error:      0.015758641016905273
  max_hamiltonian_energy_error:  0.3102779198969081
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████▏             |  ETA: 0:00:03[K
  iterations:                    6638
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9259527888830529
  log_density:                   -14.320088755030929
  hamiltonian_energy:            20.447013015785906
  hamiltonian_energy_error:      -0.04180411499917369
  max_hamiltonian_energy_error:  0.2001001830279563
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▍            |  ETA: 0:00:03[K
  iterations:                    7108
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7317538265775918
  log_density:                   -15.39480383253624
  hamiltonian_energy:            21.83633239298661
  hamiltonian_energy_error:      0.2053170302795202
  max_hamiltonian_energy_error:  0.46855278516272136
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▋           |  ETA: 0:00:02[K
  iterations:                    7610
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9590170903788725
  log_density:                   -14.015787642844392
  hamiltonian_energy:            18.422161854630037
  hamiltonian_energy_error:      0.04173840069647383
  max_hamiltonian_energy_error:  0.13362926999432645
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▉          |  ETA: 0:00:02[K
  iterations:                    8099
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9922152501055852
  log_density:                   -14.34079562072726
  hamiltonian_energy:            20.10583182772497
  hamiltonian_energy_error:      -0.09881177523571694
  max_hamiltonian_energy_error:  -0.09881177523571694
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▍        |  ETA: 0:00:02[K
  iterations:                    8642
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7451568653321081
  log_density:                   -12.673804819937486
  hamiltonian_energy:            19.180206386783535
  hamiltonian_energy_error:      0.06519328788266066
  max_hamiltonian_energy_error:  0.5324297091674062
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▋       |  ETA: 0:00:01[K
  iterations:                    9132
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.948000521403706
  hamiltonian_energy:            16.624783528166038
  hamiltonian_energy_error:      -0.26889092740208653
  max_hamiltonian_energy_error:  -0.26889092740208653
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▉      |  ETA: 0:00:01[K
  iterations:                    9617
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8650615034030146
  log_density:                   -14.891839631567617
  hamiltonian_energy:            22.778401985093552
  hamiltonian_energy_error:      0.0038679884514110086
  max_hamiltonian_energy_error:  0.29822300385488276
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████     |  ETA: 0:00:01[K
  iterations:                    10062
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9770039525162486
  log_density:                   -12.98648144083599
  hamiltonian_energy:            14.527189023090603
  hamiltonian_energy_error:      0.08533520777045922
  max_hamiltonian_energy_error:  -0.1086250311286161
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▏   |  ETA: 0:00:01[K
  iterations:                    10511
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8917442123086137
  log_density:                   -13.014740006169987
  hamiltonian_energy:            19.045909047781546
  hamiltonian_energy_error:      -0.02023158942093417
  max_hamiltonian_energy_error:  0.2958420146415044
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▌  |  ETA: 0:00:00[K
  iterations:                    11027
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9972012233725783
  log_density:                   -14.067514075717172
  hamiltonian_energy:            26.114365625031116
  hamiltonian_energy_error:      -0.7624609443171515
  max_hamiltonian_energy_error:  -0.7624609443171515
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▌ |  ETA: 0:00:00[K
  iterations:                    11430
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9639693327525366
  log_density:                   -13.490808908359623
  hamiltonian_energy:            21.225784258281223
  hamiltonian_energy_error:      -0.31072109543163506
  max_hamiltonian_energy_error:  -0.31072109543163506
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 99%|██████████████████████████████▊|  ETA: 0:00:00[K
  iterations:                    11884
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.833992418748205
  log_density:                   -14.880925044840577
  hamiltonian_energy:            17.111829890953004
  hamiltonian_energy_error:      0.3017253862918885
  max_hamiltonian_energy_error:  0.3327263487365286
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.156711248730211
  hamiltonian_energy:            15.59357892684213
  hamiltonian_energy_error:      -0.1728195617707069
  max_hamiltonian_energy_error:  -0.2676018100078359
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6358894710408743
  nom_step_size:                 0.6358894710408743
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1073563146606027, 0.9828 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.030463369 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.1073563146606027, 0.9828 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.636), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0567329243389978
└   average_acceptance_rate = 0.8860812050498392
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.244864293 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠱⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡆⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⢱⠀⠀⠀⠀⠀⢀⠔│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⢇⠀⠀⠀⢠⠃⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠘⢆⠀⢠⠃⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠔⠒⠁⠀⠀⠀⠀⡎⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠱⠇⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⢀⠇⠈⡆⠀⠀⠀⡠⠢⢄⢀⣀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢣⠀⢀⡔⠁⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠸⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⣀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⢀⠔⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠣⡀⢀⠔⠁⠀⣀⣀⡠⠔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⠪⡡⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
