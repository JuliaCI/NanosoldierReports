Julia Version 1.5.0-DEV.460
Commit 3935491dc5 (2020-03-13 16:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_kXVr8C/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_kXVr8C/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.15336079586292478 0.059918109503671206; 0.15336079586292478 0.0 0.19587486616908953; -0.059918109503671206 -0.19587486616908953 0.0])
dAA = so3([0.0 0.03409686853141835 0.12209801443112328; -0.03409686853141835 0.0 0.17733586224188724; -0.12209801443112328 -0.17733586224188724 0.0])
dAA = so3([0.0 0.012605172954277946 0.04196590672231654; -0.012605172954277946 0.0 -0.1662616790406979; -0.04196590672231654 0.1662616790406979 0.0])
dAA = Quaternion(0.9984104600975122, [0.026041532820197263, 0.04313233316740863, -0.025258534632558737])
dAA = SO3([0.9829182489666946 0.05256249562713134 -0.17637715243674607; -0.04572383241918656 0.9980445866299279 0.042618473079159384; 0.17827239549955431 -0.033825835572010444 0.9833995962225661])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.951010296584889 0.015079546131309827 0.3087912289524997; -0.14709051125548772 0.9005891728794772 0.40902753353638494; -0.2719260879138311 -0.4344096557176566 0.8586876345512066]), [-1.9587486616908951, 0.599181095036712, 1.5336079586292477])
xj = SE3(SO3([0.9689286103708167 0.13301636158958477 0.2085281648946899; -0.10581490166054067 0.9849565092905952 -0.13661581677337306; -0.22356331226623083 0.11030558623911384 0.9684276550434716]), [1.662616790406979, 0.41965906722316537, -0.12605172954277946])
Dx = SE3(SO3([0.9978181500076472 -0.04837279357106429 -0.044933421385953326; 0.01643331042591538 0.8411291826432153 -0.5405845395628713; 0.06394439634371374 0.5386666603272262 0.8400888900754199]), [3.921666585767495, 0.6139051465982766, -0.38031281560902885])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
