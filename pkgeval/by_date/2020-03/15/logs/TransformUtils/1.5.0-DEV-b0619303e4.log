Julia Version 1.5.0-DEV.462
Commit b0619303e4 (2020-03-15 15:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_BfRBP4/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_BfRBP4/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.012390758986938694 0.09646164687862133; -0.012390758986938694 0.0 0.0989646020706392; -0.09646164687862133 -0.0989646020706392 0.0])
dAA = so3([0.0 -0.15517442123585518 -0.017736821101726908; 0.15517442123585518 0.0 0.08990271619096174; 0.017736821101726908 -0.08990271619096174 0.0])
dAA = so3([0.0 0.006446356758519087 0.11209753603364213; -0.006446356758519087 0.0 -0.004116506225649244; -0.11209753603364213 0.004116506225649244 0.0])
dAA = Quaternion(0.9976547157901348, [-0.03165405479740898, -0.024222147365162018, -0.055645093706531853])
dAA = SO3([0.9973223742443216 -0.04135873593553294 0.06031199543610057; 0.0311320654225652 0.9863659139296403 0.16159541559174903; -0.0661730786211015 -0.15928508655727888 0.9850123780269189])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9250504195532085 -0.3700455990367187 -0.08572033549857812; 0.37984433818046265 0.9011835517960168 0.2087737644546413; -6.056325013737124e-6 -0.22568664250653334 0.9741999483460514]), [-0.989646020706392, 0.9646164687862132, -0.12390758986938694])
xj = SE3(SO3([0.9543120182334538 0.27914459047347584 -0.10661552168698421; -0.25968981115081535 0.9512817819429072 0.16620521450297848; 0.14781668999015712 -0.13092466900062294 0.9803106432184806]), [0.041165062256492434, 1.1209753603364212, -0.06446356758519087])
Dx = SE3(SO3([0.7841441331768179 0.61956261234108 -0.03549856044227299; -0.6205274013035748 0.783531216778566 -0.03200900755931363; 0.007982645915327852 0.04712750494770976 0.9988569845786704]), [1.012943904442114, -0.25395476525298855, 0.002192525966406178])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
