Julia Version 1.5.0-DEV.498
Commit cf3c0a3991 (2020-03-23 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.4
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_f4tZg6/Project.toml`
   5789e2e9 FileIO v1.2.4
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_f4tZg6/Manifest.toml`
   5789e2e9 FileIO v1.2.4
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172078344834075
curgen: 20 fitness: 0.2172117358641245
curgen: 30 fitness: 0.21723292875029404
curgen: 40 fitness: 0.21723292875029404
curgen: 50 fitness: 0.21723292875029404
CoordinateCreature{Array{Float64,1}}([-0.22267389016255745], -0.21723292875029404) -0.22267389016255745 -0.21723292875029404
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257916752350026
curgen: 100 fitness: 3.2581480301883765
curgen: 150 fitness: 3.2582192267695698
curgen: 200 fitness: 3.258225511052066
curgen: 250 fitness: 3.2582318557588086
curgen: 300 fitness: 3.258389334289136
curgen: 350 fitness: 3.2584113644587984
curgen: 400 fitness: 3.2584576561803074
curgen: 450 fitness: 3.258470901879135
curgen: 500 fitness: 3.2584842545055666
CoordinateCreature{Array{Float64,1}}([0.22267628199952874, -0.22237454646129853, -0.2224267830233155, 0.2222659604741864, -0.2224493196942763, -0.22244362650628885, -0.2225048943327551, -0.22255234990644882, 0.22272955786164683, -0.22251087600699965, -0.22260925834168305, 0.22237546315196066, 0.22282853600882033, 0.22285232603632932, 0.22277880552006912], -3.2584842545055666) [0.22267628199952874, -0.22237454646129853, -0.2224267830233155, 0.2222659604741864, -0.2224493196942763, -0.22244362650628885, -0.2225048943327551, -0.22255234990644882, 0.22272955786164683, -0.22251087600699965, -0.22260925834168305, 0.22237546315196066, 0.22282853600882033, 0.22285232603632932, 0.22277880552006912] -3.2584842545055666
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004243526598429526
curgen: 100 fitness: -0.0026008262965717677
curgen: 150 fitness: -0.0022067408585542125
curgen: 200 fitness: -0.0016500037378932575
curgen: 250 fitness: -0.0016500037378932575
curgen: 300 fitness: -0.001623595543293277
curgen: 350 fitness: -0.0014751969928568087
curgen: 400 fitness: -0.0014741675275615762
curgen: 450 fitness: -0.0011735582478991091
curgen: 500 fitness: -0.0011623272362726311
CoordinateCreature{Array{Float64,1}}([-0.00012002995687761565, 0.00034089008101766756, 6.270060507440096e-5, -0.0008262896594634925, -0.0012855529517431796, -0.00039405735318813993, 2.742661759161163e-6, -0.0010828498980917731, 1.0172612928588767e-5, -0.0003376295998701297, 0.0012560816661579264, -0.0005886882819833472, -0.00010441796409689687, 8.596857567921509e-5, -6.540129991233114e-5], 0.0011623272362726311) [-0.00012002995687761565, 0.00034089008101766756, 6.270060507440096e-5, -0.0008262896594634925, -0.0012855529517431796, -0.00039405735318813993, 2.742661759161163e-6, -0.0010828498980917731, 1.0172612928588767e-5, -0.0003376295998701297, 0.0012560816661579264, -0.0005886882819833472, -0.00010441796409689687, 8.596857567921509e-5, -6.540129991233114e-5] 0.0011623272362726311
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
