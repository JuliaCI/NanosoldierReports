Julia Version 1.5.0-DEV.505
Commit e3e9def429 (2020-03-24 17:47 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_i4T55U/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_i4T55U/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.03716458557819937 -0.026015093234104843; -0.03716458557819937 0.0 0.17855950919702526; 0.026015093234104843 -0.17855950919702526 0.0])
dAA = so3([0.0 -0.12177178932668925 -0.016709900987885048; 0.12177178932668925 0.0 0.05285100279402782; 0.016709900987885048 -0.05285100279402782 0.0])
dAA = so3([0.0 0.19422210112199073 0.007703721260358039; -0.19422210112199073 0.0 0.1163682322658609; -0.007703721260358039 -0.1163682322658609 0.0])
dAA = Quaternion(0.9987179646901178, [0.03194527593844612, 0.03224409532604581, 0.02241081584972987])
dAA = SO3([0.9892841421592532 -0.10797620759784883 -0.09827524950371135; 0.1107748990407759 0.9935684591557631 0.023465692262295626; 0.09510945176340978 -0.03410066808185884 0.9948825742878576])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9532273110185041 -0.2960503810026782 -0.06092508052191025; 0.3015187053687118 0.945444011058206 0.1233778435009581; 0.021075194926931586 -0.135977181403131 0.9904877799834039]), [-1.7855950919702526, -0.2601509323410484, -0.3716458557819937])
xj = SE3(SO3([0.9808117180995966 -0.10324811424001251 0.16537291357534614; 0.1288775743580047 0.979847640127283 -0.1526079059701412; -0.1462837805982418 0.17099248241626244 0.9743524139093666]), [-1.163682322658609, 0.07703721260358039, -1.9422210112199072])
Dx = SE3(SO3([0.9707125568402465 0.20062716950299 0.13215850653624178; -0.14863189582804992 0.9337066508663321 -0.32573063974784056; -0.18874769279445788 0.2965478527745502 0.9361803669590452]), [0.6613925921601413, 0.3482373827508147, -1.5519240383773476])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
