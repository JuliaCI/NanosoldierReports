Julia Version 1.5.0-DEV.491
Commit a66db76b65 (2020-03-21 17:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_jCw9st/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_jCw9st/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.06186053270387551 -0.09219615192510006; -0.06186053270387551 0.0 -0.26284542322540605; 0.09219615192510006 0.26284542322540605 0.0])
dAA = so3([0.0 -0.120538279952668 0.006849180355544731; 0.120538279952668 0.0 0.0392661109220578; -0.006849180355544731 -0.0392661109220578 0.0])
dAA = so3([0.0 -0.0918511927751931 0.17758942333323682; 0.0918511927751931 0.0 0.0226615471108534; -0.17758942333323682 -0.0226615471108534 0.0])
dAA = Quaternion(0.9976181128028189, [-0.02581569626285556, 0.03566744510422985, -0.05309881537231495])
dAA = SO3([0.9978418610669484 -0.023795191496984714 -0.06119974807195503; 0.0251491924015891 0.999453560797134 0.021449893507370955; 0.06065590180680517 -0.022942725896273268 0.997895031004991])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9548299031484242 -0.2971449948450589 0.002169813840133194; 0.2954781791440242 0.9501973763263273 0.09908376089095561; -0.03150399503718315 -0.09396700517252872 0.9950767308281322]), [2.6284542322540605, -0.9219615192510004, -0.618605327038755])
xj = SE3(SO3([0.9492453211268868 0.2534211989205204 0.1863089269369555; -0.27691481589045974 0.9542377383283793 0.11290935962218694; -0.1491693837859049 -0.1587703835342901 0.9759817929927319]), [-0.226615471108534, 1.7758942333323682, 0.9185119277519309])
Dx = SE3(SO3([0.8292449639848554 0.5289324695877354 0.1805082610895576; -0.5311702273201548 0.8463305319551385 -0.03978467404902423; -0.1738130585267158 -0.06288937347717381 0.9827685115983505]), [-1.9773737573436359, 3.2674268250678677, 1.7906683373469876])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
