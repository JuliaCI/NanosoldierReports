Julia Version 1.5.0-DEV.486
Commit 1d2ef1687b (2020-03-20 09:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_0wI6qa/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_0wI6qa/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.0859163007326206 0.08264288391021112; -0.0859163007326206 0.0 -0.09198845125998541; -0.08264288391021112 0.09198845125998541 0.0])
dAA = so3([0.0 0.01803332525514825 0.03930498727545403; -0.01803332525514825 0.0 -0.03421975191087924; -0.03930498727545403 0.03421975191087924 0.0])
dAA = so3([0.0 0.14759285240137063 0.032574368350840724; -0.14759285240137063 0.0 0.16108000047440216; -0.032574368350840724 -0.16108000047440216 0.0])
dAA = Quaternion(0.9954661745489207, [0.05512002638123547, 0.026665824233453803, 0.0727860689872754])
dAA = SO3([0.9951857966140425 0.06864950763100859 0.06994623163326467; -0.07639316091202004 0.990443394745737 0.11483016489760539; -0.06139474882711416 -0.11962076285729467 0.9909195516841389])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9941652415324747 0.04913712801060624 0.09602611717416054; -0.040744141036630925 0.9953318002083981 -0.08749012781506575; -0.09987686168409299 0.08306714238962785 0.9915263296329341]), [0.919884512599854, 0.8264288391021111, -0.859163007326206])
xj = SE3(SO3([0.9261349493816884 -0.34143645621443225 0.16029722986223932; 0.37293671155037067 0.8925412067210945 -0.2535515795313609; -0.05650013019253213 0.29460370105038153 0.9539477944917344]), [-1.6108000047440214, 0.3257436835084072, -1.4759285240137061])
Dx = SE3(SO3([0.9111792453589397 -0.4052341748694932 0.07441536363516957; 0.41201007567435927 0.8960693267730501 -0.16524968731982947; 0.00028349589435473777 0.18123196499054417 0.9834403360121773]), [-2.4339179936314954, -0.6739313753335815, -0.8107460487406151])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
