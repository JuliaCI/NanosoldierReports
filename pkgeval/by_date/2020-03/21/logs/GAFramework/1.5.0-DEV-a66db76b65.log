Julia Version 1.5.0-DEV.491
Commit a66db76b65 (2020-03-21 17:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.3
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_ifXd41/Project.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_ifXd41/Manifest.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723055245903908
curgen: 20 fitness: 0.21723055245903908
curgen: 30 fitness: 0.21723055245903908
curgen: 40 fitness: 0.21723055245903908
curgen: 50 fitness: 0.21723055245903908
CoordinateCreature{Array{Float64,1}}([0.22228480875365694], -0.21723055245903908) 0.22228480875365694 -0.21723055245903908
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257922307107544
curgen: 100 fitness: 3.258028647623342
curgen: 150 fitness: 3.258124757386892
curgen: 200 fitness: 3.2581961756693425
curgen: 250 fitness: 3.258275325253717
curgen: 300 fitness: 3.2583399967139495
curgen: 350 fitness: 3.258362397128808
curgen: 400 fitness: 3.2584125044639283
curgen: 450 fitness: 3.2584126424548234
curgen: 500 fitness: 3.2584193953023264
CoordinateCreature{Array{Float64,1}}([-0.22271964654841997, -0.22314294680935312, -0.22268404268543637, -0.2225978918162269, -0.22176687139669943, -0.22242537195734824, 0.2226910011801284, 0.22228445964440474, 0.2225027117616922, 0.22286419275434338, -0.22254335878279333, -0.22172733660768026, 0.22260487654814284, -0.22241780374988296, -0.22254847982804107], -3.2584193953023264) [-0.22271964654841997, -0.22314294680935312, -0.22268404268543637, -0.2225978918162269, -0.22176687139669943, -0.22242537195734824, 0.2226910011801284, 0.22228445964440474, 0.2225027117616922, 0.22286419275434338, -0.22254335878279333, -0.22172733660768026, 0.22260487654814284, -0.22241780374988296, -0.22254847982804107] -3.2584193953023264
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004401558648083892
curgen: 100 fitness: -0.0033073510548717877
curgen: 150 fitness: -0.002346178176992453
curgen: 200 fitness: -0.0019514384563024123
curgen: 250 fitness: -0.0019514384563024123
curgen: 300 fitness: -0.0019514384563024123
curgen: 350 fitness: -0.0014327075710411918
curgen: 400 fitness: -0.0014327075710411918
curgen: 450 fitness: -0.00040962766357210967
curgen: 500 fitness: -0.0003358143466130059
CoordinateCreature{Array{Float64,1}}([-8.055157031492821e-5, -2.2564922165921535e-5, 0.0005727110610221498, 0.0005235273793330185, 0.00024326539649836783, -0.0008232721685560896, 0.00018079747676369223, 8.47674030851726e-5, -0.00017476357314127942, 0.00012314779775951436, -3.367386510652639e-5, -0.0003628299312356284, -0.00029771243565309265, 4.888081081206794e-5, 0.0001930496751058898], 0.0003358143466130059) [-8.055157031492821e-5, -2.2564922165921535e-5, 0.0005727110610221498, 0.0005235273793330185, 0.00024326539649836783, -0.0008232721685560896, 0.00018079747676369223, 8.47674030851726e-5, -0.00017476357314127942, 0.00012314779775951436, -3.367386510652639e-5, -0.0003628299312356284, -0.00029771243565309265, 4.888081081206794e-5, 0.0001930496751058898] 0.0003358143466130059
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
