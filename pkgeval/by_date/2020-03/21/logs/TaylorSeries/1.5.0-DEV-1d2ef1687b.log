Julia Version 1.5.0-DEV.486
Commit 1d2ef1687b (2020-03-20 09:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ───── v1.0.1
  Installed TaylorSeries ─ v0.10.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   6aa5eb33 + TaylorSeries v0.10.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   ae029012 + Requires v1.0.1
   6aa5eb33 + TaylorSeries v0.10.3
   2a0f44e3 + Base64
   b77e0a4c + InteractiveUtils
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   d6f4376e + Markdown
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   2f01184e + SparseArrays
   cf7118a7 + UUIDs
    Testing TaylorSeries
     Status `/tmp/jl_JKpbfJ/Project.toml`
   d1acc4aa IntervalArithmetic v0.16.6
   ae029012 Requires v1.0.1
   6aa5eb33 TaylorSeries v0.10.3
   b77e0a4c InteractiveUtils
   37e2e46d LinearAlgebra
   d6f4376e Markdown
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_JKpbfJ/Manifest.toml`
   96374032 CRlibm v0.8.0
   90fa49ef ErrorfreeArithmetic v0.5.0
   fa42c844 FastRounding v0.2.0
   d1acc4aa IntervalArithmetic v0.16.6
   3cdcf5f2 RecipesBase v0.7.0
   ae029012 Requires v1.0.1
   3cc68bcd SetRounding v0.2.0
   90137ffa StaticArrays v0.12.1
   6aa5eb33 TaylorSeries v0.10.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   8dfed614 Test
   cf7118a7 UUIDs
Test Summary:                | Pass  Total
Tests for Taylor1 expansions |  332    332
Test Summary:                              | Pass  Total
Test `inv` for `Matrix{Taylor1{Float64}}`` |   90     90
Test Summary:                     | Pass  Total
Matrix multiplication for Taylor1 |   16     16
┌ Info: Parameters for `TaylorN` and `HomogeneousPolynomial`:
│ Maximum order       = 6
│ Number of variables = 2
│ Variable names      = ["x", "y"]
└ Variable symbols    = [:x, :y]
 1  -->  x²
 2  -->  x y
 3  -->  y²
Test Summary:                               | Pass  Total
Tests for HomogeneousPolynomial and TaylorN |  455    455
Test Summary:                   | Pass  Total
Integrate for several variables |    6      6
Test Summary:                              | Pass  Total
Tests with mixtures of Taylor1 and TaylorN |  168    168
Test Summary:              | Pass  Total
Tests with nested Taylor1s |   10     10
Test Summary:      | Pass  Total
Mutating functions |   54     54
Test Summary:                                       | Pass  Total
Tests Taylor1 and TaylorN expansions over Intervals |   40     40
Test Summary:                        | Pass  Total
Broadcasting with Taylor1 expansions |   26     26
Test Summary:                                       | Pass  Total
Broadcasting with HomogeneousPolynomial and TaylorN |   27     27
Test Summary:                                 | Pass  Total
Broadcasting with mixtures Taylor1{TalorN{T}} |   15     15
Test Summary:                                 | Pass  Total
Broadcasting with mixtures TaylorN{Talor1{T}} |   14     14
Test Summary:                                     | Pass  Total
Testing an identity proved by Euler (8 variables) |    2      2
Test Summary:                                  | Pass  Total
Test inspired by Fateman (takes a few seconds) |    2      2
    Testing TaylorSeries tests passed 
