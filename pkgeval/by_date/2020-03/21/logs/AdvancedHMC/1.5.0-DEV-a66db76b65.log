Julia Version 1.5.0-DEV.491
Commit a66db76b65 (2020-03-21 17:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed ArgCheck ───────────────────── v2.0.0
  Installed OrderedCollections ─────────── v1.1.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed FillArrays ─────────────────── v0.8.5
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed LazyArrays ─────────────────── v0.15.1
  Installed InplaceOps ─────────────────── v0.3.0
  Installed DataAPI ────────────────────── v1.1.0
  Installed Parameters ─────────────────── v0.12.0
  Installed CompilerSupportLibraries_jll ─ v0.3.0+0
  Installed ProgressMeter ──────────────── v1.2.0
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed Missings ───────────────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.0
  Installed MacroTools ─────────────────── v0.5.4
  Installed StatsBase ──────────────────── v0.32.2
  Installed StaticArrays ───────────────── v0.12.1
  Installed Requires ───────────────────── v1.0.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Rmath ──────────────────────── v0.6.1
  Installed DataStructures ─────────────── v0.17.10
#=#=#                                                                         ##                                                                         3.6%#######                                                                   11.0%###############                                                           21.2%########################                                                  34.7%###################################                                       48.8%################################################                          67.5%####################################################################      95.1%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ##############################                                            42.2%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.3.0+0
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.1
   1914dd2f + MacroTools v0.5.4
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
#=#=#                                                                         #                                                                          2.1%###                                                                        5.5%#######                                                                   10.7%############                                                              17.8%###################                                                       27.3%############################                                              39.6%#######################################                                   54.9%####################################################                      72.2%#######################################################################   98.8%######################################################################## 100.0%
#=#=#                                                                         #########################################                                 57.5%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ############                                                              17.5%#################################                                         45.8%################################################################          89.5%######################################################################## 100.0%
     Status `/tmp/jl_FM2xYa/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.5.2
   31c24e10 Distributions v0.22.6
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.1
   1dea7af3 OrdinaryDiffEq v5.32.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.10
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_FM2xYa/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.4.0
   1520ce14 AbstractTrees v0.3.2
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.6.1
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.5.2
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v1.0.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.3.0+0
   88cd18e8 ConsoleProgressMonitor v0.1.2
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.25.0
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   31c24e10 Distributions v0.22.6
   ced4e74d DistributionsAD v0.4.7
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.4.2
   da5c29d0 EllipsisNotation v0.4.0
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.3.0
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.3.0
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.1
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.3
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.1
   1d6d02ad LeftChildRightSiblingTrees v0.1.2
   6f1fad26 Libtask v0.3.3
   093fc24a LightGraphs v1.3.1
   d3d80556 LineSearches v7.0.1
   6fdf6af0 LogDensityProblems v0.10.3
   e6f89c97 LoggingExtras v0.4.0
   c7f686f2 MCMCChains v3.0.5
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+8
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.32.0
   90014a1f PDMats v0.9.12
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   33c8b6b6 ProgressLogging v0.1.2
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   37e2e3b7 ReverseDiff v1.1.0
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v0.8.4
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   5d786b92 TerminalLoggers v0.1.1
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.9.0
   3a884ed6 UnPack v0.1.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.10
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.13977891
│   t_steps = 0.007693169
└   t_step / t_steps = 18.169223892000815
Sampling  0%|                               |  ETA: 6:17:45[K
  iterations:                    1
  n_steps:                       5
  is_accept:                     true
  acceptance_rate:               0.23231247681605954
  log_density:                   -11.855042656738071
  hamiltonian_energy:            15.920877278758802
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  5.444108748157024
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▊                           |  ETA: 0:00:22[K
  iterations:                    1467
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8179740612717437
  log_density:                   -14.291877156182803
  hamiltonian_energy:            18.554338382560523
  hamiltonian_energy_error:      0.042479470680699905
  max_hamiltonian_energy_error:  0.7021636207880881
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.038529053743338
  nom_step_size:                 1.038529053743338
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8296192864070661, 1.0495 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:18[K
  iterations:                    1782
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.629144947212763
  log_density:                   -12.484921081618179
  hamiltonian_energy:            17.189782802517
  hamiltonian_energy_error:      0.14041649593318084
  max_hamiltonian_energy_error:  0.6973643655847006
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.066746925095301
  nom_step_size:                 1.066746925095301
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8296192864070661, 1.0495 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▋                         |  ETA: 0:00:15[K
  iterations:                    2165
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7549758935269738
  log_density:                   -13.977891934492543
  hamiltonian_energy:            19.542597169025772
  hamiltonian_energy_error:      0.1617249301733068
  max_hamiltonian_energy_error:  0.5153530391153609
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▉                        |  ETA: 0:00:12[K
  iterations:                    2663
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.967910084581788
  log_density:                   -10.523780623789573
  hamiltonian_energy:            13.737757647858608
  hamiltonian_energy_error:      -0.1935249524483087
  max_hamiltonian_energy_error:  -0.1948044124872883
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████▏                      |  ETA: 0:00:10[K
  iterations:                    3138
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8408962646048784
  log_density:                   -13.339139027118435
  hamiltonian_energy:            15.248793289117476
  hamiltonian_energy_error:      0.28601314501549524
  max_hamiltonian_energy_error:  0.336479359560073
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▍                     |  ETA: 0:00:08[K
  iterations:                    3630
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9821142699499141
  log_density:                   -12.740951341985784
  hamiltonian_energy:            17.406094725740925
  hamiltonian_energy_error:      -0.23619099220301365
  max_hamiltonian_energy_error:  -0.39976902292547933
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▋                    |  ETA: 0:00:07[K
  iterations:                    4108
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9919053283607056
  log_density:                   -13.729822896777238
  hamiltonian_energy:            23.539692681584505
  hamiltonian_energy_error:      -0.6721611934177005
  max_hamiltonian_energy_error:  -0.6959274887080085
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▉                   |  ETA: 0:00:06[K
  iterations:                    4618
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9721509232487856
  log_density:                   -12.922019098268215
  hamiltonian_energy:            17.054555757086035
  hamiltonian_energy_error:      -0.20653246715584217
  max_hamiltonian_energy_error:  -0.38720899268023956
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████▏                 |  ETA: 0:00:05[K
  iterations:                    5099
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.945516625590234
  log_density:                   -14.216659491862657
  hamiltonian_energy:            17.641772216859685
  hamiltonian_energy_error:      0.10038196244038033
  max_hamiltonian_energy_error:  0.10038196244038033
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▉                 |  ETA: 0:00:05[K
  iterations:                    5356
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7618054540781822
  log_density:                   -13.698123902986332
  hamiltonian_energy:            20.257775858479565
  hamiltonian_energy_error:      0.0394871009419262
  max_hamiltonian_energy_error:  0.4707993868428382
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▏               |  ETA: 0:00:04[K
  iterations:                    5865
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6274401461950598
  log_density:                   -15.270344673021377
  hamiltonian_energy:            21.722353988023382
  hamiltonian_energy_error:      0.4100263301734124
  max_hamiltonian_energy_error:  0.9730406187630436
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▋              |  ETA: 0:00:04[K
  iterations:                    6440
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9926927732909901
  log_density:                   -9.954402286504642
  hamiltonian_energy:            14.147560197549925
  hamiltonian_energy_error:      -0.4342544484854294
  max_hamiltonian_energy_error:  -0.44152322848889014
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|█████████████████▉             |  ETA: 0:00:03[K
  iterations:                    6940
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9649872831103777
  log_density:                   -12.655759388238897
  hamiltonian_energy:            19.646502086273962
  hamiltonian_energy_error:      -0.4025098269958889
  max_hamiltonian_energy_error:  -0.4025098269958889
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▎           |  ETA: 0:00:03[K
  iterations:                    7455
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8859035970601811
  log_density:                   -11.582614382721179
  hamiltonian_energy:            15.539630972365785
  hamiltonian_energy_error:      -0.014719145564736635
  max_hamiltonian_energy_error:  0.23986628197139126
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▌          |  ETA: 0:00:02[K
  iterations:                    7946
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8127807436848374
  log_density:                   -11.735223177302283
  hamiltonian_energy:            16.78237362140458
  hamiltonian_energy_error:      -0.026755815349602585
  max_hamiltonian_energy_error:  0.3808053214421747
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▊         |  ETA: 0:00:02[K
  iterations:                    8431
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.988368766182938
  log_density:                   -13.195854089095949
  hamiltonian_energy:            15.728341755006754
  hamiltonian_energy_error:      -0.011877309667577052
  max_hamiltonian_energy_error:  -0.21093894386076606
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▏       |  ETA: 0:00:02[K
  iterations:                    8959
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8537456421507673
  log_density:                   -13.598827375595707
  hamiltonian_energy:            15.41776633339063
  hamiltonian_energy_error:      0.30675515505438256
  max_hamiltonian_energy_error:  0.30675515505438256
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▌      |  ETA: 0:00:01[K
  iterations:                    9507
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9891625590956937
  log_density:                   -11.913650611214827
  hamiltonian_energy:            12.587335239760987
  hamiltonian_energy_error:      0.06079429692816696
  max_hamiltonian_energy_error:  -0.19588749049429488
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▊     |  ETA: 0:00:01[K
  iterations:                    9978
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9911549274263359
  log_density:                   -11.575652562514176
  hamiltonian_energy:            14.752263932521323
  hamiltonian_energy_error:      -0.1715674511781664
  max_hamiltonian_energy_error:  -0.20380777639811498
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|███████████████████████████    |  ETA: 0:00:01[K
  iterations:                    10447
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9677821507400749
  log_density:                   -11.722591242046406
  hamiltonian_energy:            14.99745429124629
  hamiltonian_energy_error:      -0.06548517229658835
  max_hamiltonian_energy_error:  0.09741414097129741
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▎  |  ETA: 0:00:01[K
  iterations:                    10924
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8486498881238511
  log_density:                   -13.495849424351498
  hamiltonian_energy:            18.431278604730103
  hamiltonian_energy_error:      0.04807329221186052
  max_hamiltonian_energy_error:  0.25896171351438113
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▋ |  ETA: 0:00:00[K
  iterations:                    11450
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9443549584266703
  log_density:                   -14.750568723636466
  hamiltonian_energy:            17.605972115046097
  hamiltonian_energy_error:      0.11255607780938348
  max_hamiltonian_energy_error:  -0.28795823564487577
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6082770080386047
  log_density:                   -16.12167340739272
  hamiltonian_energy:            17.586969571642516
  hamiltonian_energy_error:      0.7391447082333578
  max_hamiltonian_energy_error:  0.7391447082333578
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7036911243616383
  nom_step_size:                 0.7036911243616383
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9751355773536806, 1.0560 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.361220333 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9751355773536806, 1.0560 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.704), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0874801078547671
└   average_acceptance_rate = 0.8657266255680549
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.186514921 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⢀⡄⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢣⠀⠀⠀⠀⠀⠀⡜⠘⡄│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠈⢆⠀⢀⡄⠀⢰⠁⠀⠘│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠑⠢⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠘⠒⠁⠈⢢⡇⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⢰⢆⠀⠀⠀⢀⡠⠢⠤⠤⠤⠔⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⢀⠇⠈⢢⡠⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⢀⡠⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠢⣄⣀⣀⣔⡡⠤⠒⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
