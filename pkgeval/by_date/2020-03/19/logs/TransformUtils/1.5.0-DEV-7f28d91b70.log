Julia Version 1.5.0-DEV.483
Commit 7f28d91b70 (2020-03-18 17:21 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_emrqDD/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_emrqDD/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.01057966667478835 -0.09417537256465831; -0.01057966667478835 0.0 0.07148449909253012; 0.09417537256465831 -0.07148449909253012 0.0])
dAA = so3([0.0 0.012418346621073502 0.02630051034166775; -0.012418346621073502 0.0 -0.189987858752892; -0.02630051034166775 0.189987858752892 0.0])
dAA = so3([0.0 0.11879784517340025 0.12497645535177578; -0.11879784517340025 0.0 -0.0751324234012451; -0.12497645535177578 0.0751324234012451 0.0])
dAA = Quaternion(0.9930044884509217, [0.024194855967369904, 0.07190120326559914, -0.09048155519220911])
dAA = SO3([0.9899550167687654 0.10828317115612104 -0.09090555328871652; -0.11774409357929866 0.9873571745797127 -0.10612322193165719; 0.07826489124468802 0.11576080792021365 0.99018889215549])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9974069345003458 0.04518171797047384 0.05601802720427958; -0.01454812329309182 0.8888828272855216 -0.4579035613156406; -0.07048233196533614 0.4559012302222205 0.8872352050964807]), [-0.7148449909253012, -0.9417537256465831, -0.10579666674788349])
xj = SE3(SO3([0.8363443706013229 0.43838929896469836 0.3291548515770616; -0.40660674604132685 0.8987793197909704 -0.16391061097367826; -0.36769423144395547 0.0032491336261943225 0.9299410708714386]), [0.7513242340124509, 1.2497645535177577, -1.1879784517340024])
Dx = SE3(SO3([0.8660069868236709 0.42394796792569406 0.2651415079995235; -0.4912705309967915 0.8201979685659909 0.2931357326126457; -0.09319422807619185 -0.3841138019544424 0.9185703146745958]), [1.5067595697957956, 1.5208790013503757, -1.8815218951428698])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
