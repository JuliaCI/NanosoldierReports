Julia Version 1.5.0-DEV.429
Commit ff4f86714b (2020-03-10 12:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ProgressMeter ──────────────── v1.2.0
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed Requires ───────────────────── v1.0.1
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed LazyArrays ─────────────────── v0.15.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed InplaceOps ─────────────────── v0.3.0
  Installed Missings ───────────────────── v0.4.3
  Installed Rmath ──────────────────────── v0.6.1
  Installed Parameters ─────────────────── v0.12.0
  Installed OrderedCollections ─────────── v1.1.0
  Installed StaticArrays ───────────────── v0.12.1
  Installed MacroTools ─────────────────── v0.5.4
  Installed DataAPI ────────────────────── v1.1.0
  Installed FillArrays ─────────────────── v0.8.5
  Installed StatsFuns ──────────────────── v0.9.4
  Installed SpecialFunctions ───────────── v0.10.0
  Installed DataStructures ─────────────── v0.17.10
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed StatsBase ──────────────────── v0.32.2
#=#=#                                                                         ##                                                                         3.0%######                                                                     8.5%##########                                                                14.8%#################                                                         24.2%#########################                                                 35.1%#####################################                                     51.7%###################################################                       71.4%######################################################################    97.7%######################################################################## 100.0%
#=#=#                                                                         ###########################################################               82.9%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.0
   1914dd2f + MacroTools v0.5.4
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
#=#=#                                                                         ################################################                          66.7%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ###############                                                           21.1%##########################################                                58.9%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       #                                                                          2.6%#####                                                                      8.0%##########                                                                14.7%################                                                          23.5%#########################                                                 35.2%############################                                              40.1%######################################                                    53.5%###################################################                       71.0%###################################################################       93.9%######################################################################## 100.0%
     Status `/tmp/jl_67qpci/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.5.2
   31c24e10 Distributions v0.22.5
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.9
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_67qpci/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.4.0
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.5.1
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.5.2
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v0.7.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.7.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.19.0
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   31c24e10 Distributions v0.22.5
   ced4e74d DistributionsAD v0.4.2
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.4.1
   da5c29d0 EllipsisNotation v0.4.0
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.2.2
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.1
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.1
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.0
   6f1fad26 Libtask v0.3.2
   093fc24a LightGraphs v1.3.1
   6fdf6af0 LogDensityProblems v0.10.3
   c7f686f2 MCMCChains v3.0.4
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+7
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   90014a1f PDMats v0.9.11
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v0.8.4
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.9
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.129930448
│   t_steps = 0.006771242
└   t_step / t_steps = 19.188569541599605
Sampling  0%|                               |  ETA: 5:04:23[K
  iterations:                    1
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.902190115459884
  log_density:                   -10.812289436051355
  hamiltonian_energy:            12.496952385615453
  hamiltonian_energy_error:      0.04667991499550972
  max_hamiltonian_energy_error:  0.21439141366297498
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8250000000000001
  nom_step_size:                 0.8250000000000001
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▊                            |  ETA: 0:00:26[K
  iterations:                    1051
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8789893069923161
  log_density:                   -13.816604383905823
  hamiltonian_energy:            18.994325822656567
  hamiltonian_energy_error:      0.028633923352682444
  max_hamiltonian_energy_error:  0.23769772698137714
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6905880264600183
  nom_step_size:                 0.6905880264600183
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.039786458768765, 1.02489 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:21[K
  iterations:                    1342
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8750780044711638
  log_density:                   -19.262794217651596
  hamiltonian_energy:            26.287321140376722
  hamiltonian_energy_error:      0.2054550379087452
  max_hamiltonian_energy_error:  0.3829857670159811
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7376894449145914
  nom_step_size:                 0.7376894449145914
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.039786458768765, 1.02489 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████▏                          |  ETA: 0:00:17[K
  iterations:                    1616
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9209627932028615
  log_density:                   -16.13403549306301
  hamiltonian_energy:            21.502679176110494
  hamiltonian_energy_error:      0.013905748101301185
  max_hamiltonian_energy_error:  -0.3211183820918819
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9436119261318251
  nom_step_size:                 0.9436119261318251
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.039786458768765, 1.02489 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:15[K
  iterations:                    1886
  n_steps:                       39
  is_accept:                     true
  acceptance_rate:               0.9955064033583432
  log_density:                   -12.547760312945895
  hamiltonian_energy:            17.39937014904986
  hamiltonian_energy_error:      -0.4726130202784624
  max_hamiltonian_energy_error:  -0.7283655336498924
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7829634679821186
  nom_step_size:                 0.7829634679821186
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.039786458768765, 1.02489 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▊                         |  ETA: 0:00:13[K
  iterations:                    2216
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.364638586433404
  hamiltonian_energy:            20.07684263712967
  hamiltonian_energy_error:      -0.06096965040547886
  max_hamiltonian_energy_error:  -0.23097438048286278
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▌                        |  ETA: 0:00:11[K
  iterations:                    2526
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.782463892506707
  log_density:                   -12.232266802724286
  hamiltonian_energy:            16.54015536728705
  hamiltonian_energy_error:      0.11235633965863911
  max_hamiltonian_energy_error:  0.46906778370324886
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▌                       |  ETA: 0:00:10[K
  iterations:                    2916
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8078952600558548
  log_density:                   -17.1935647926933
  hamiltonian_energy:            19.872035530403522
  hamiltonian_energy_error:      0.47964872199486663
  max_hamiltonian_energy_error:  0.5398226679208484
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▍                      |  ETA: 0:00:09[K
  iterations:                    3241
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6956633473754626
  log_density:                   -14.760182624319306
  hamiltonian_energy:            19.097904962474512
  hamiltonian_energy_error:      0.3727581359861851
  max_hamiltonian_energy_error:  0.6973857522933002
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▌                     |  ETA: 0:00:08[K
  iterations:                    3668
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8106628273571852
  log_density:                   -13.558120923966078
  hamiltonian_energy:            15.471875714843595
  hamiltonian_energy_error:      0.32861233429741965
  max_hamiltonian_energy_error:  0.36487000024371063
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 33%|██████████▎                    |  ETA: 0:00:07[K
  iterations:                    3985
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.942941632186112
  log_density:                   -11.420810837951025
  hamiltonian_energy:            15.357466749978839
  hamiltonian_energy_error:      -0.11080901107764518
  max_hamiltonian_energy_error:  0.17645356191191475
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████▎                   |  ETA: 0:00:06[K
  iterations:                    4375
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7866249841152791
  log_density:                   -14.14669589663986
  hamiltonian_energy:            22.716167781281946
  hamiltonian_energy_error:      -0.11557614840788943
  max_hamiltonian_energy_error:  0.4962626227215381
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████▏                  |  ETA: 0:00:06[K
  iterations:                    4703
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8212956007769778
  log_density:                   -14.100943894287866
  hamiltonian_energy:            18.008290712333576
  hamiltonian_energy_error:      0.18299844585149572
  max_hamiltonian_energy_error:  0.36903722618643897
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████▏                 |  ETA: 0:00:05[K
  iterations:                    5098
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9913332957129596
  log_density:                   -12.607119019728795
  hamiltonian_energy:            16.08331791051982
  hamiltonian_energy_error:      -0.05499725508940756
  max_hamiltonian_energy_error:  -0.05499725508940756
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|██████████████                 |  ETA: 0:00:05[K
  iterations:                    5406
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8395084106565142
  log_density:                   -16.19294647471407
  hamiltonian_energy:            25.4385839929634
  hamiltonian_energy_error:      -0.12299051144525919
  max_hamiltonian_energy_error:  0.35525682435827477
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▏               |  ETA: 0:00:04[K
  iterations:                    5849
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9301945336885941
  log_density:                   -14.07157720395306
  hamiltonian_energy:            17.530219592661243
  hamiltonian_energy_error:      0.13082831201041145
  max_hamiltonian_energy_error:  0.13082831201041145
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:04[K
  iterations:                    6161
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.666678943973201
  log_density:                   -11.956432012990835
  hamiltonian_energy:            19.313091581724063
  hamiltonian_energy_error:      0.012690216553767897
  max_hamiltonian_energy_error:  0.7913701817486718
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████              |  ETA: 0:00:03[K
  iterations:                    6567
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9671238774737613
  log_density:                   -12.423346431431273
  hamiltonian_energy:            15.248541293729511
  hamiltonian_energy_error:      -0.020123349516682154
  max_hamiltonian_energy_error:  -0.15094943267796168
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|█████████████████▉             |  ETA: 0:00:03[K
  iterations:                    6908
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9055182189703677
  log_density:                   -15.839756710276605
  hamiltonian_energy:            19.268680411897925
  hamiltonian_energy_error:      0.24576866722534163
  max_hamiltonian_energy_error:  0.30490575442316015
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|███████████████████            |  ETA: 0:00:03[K
  iterations:                    7333
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8538073967242966
  log_density:                   -15.697191556423853
  hamiltonian_energy:            19.419467308248215
  hamiltonian_energy_error:      0.2692683340253268
  max_hamiltonian_energy_error:  0.2692683340253268
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|███████████████████▊           |  ETA: 0:00:03[K
  iterations:                    7664
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9481468215943917
  log_density:                   -14.701208377166921
  hamiltonian_energy:            19.05008583003442
  hamiltonian_energy_error:      0.08154126508384252
  max_hamiltonian_energy_error:  0.09993913477795147
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▉          |  ETA: 0:00:02[K
  iterations:                    8063
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7485092644986143
  log_density:                   -13.563891351956315
  hamiltonian_energy:            20.848699946449674
  hamiltonian_energy_error:      -0.004486547847072586
  max_hamiltonian_energy_error:  0.5162508217438742
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▊         |  ETA: 0:00:02[K
  iterations:                    8397
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6486133975882864
  log_density:                   -12.997602883013538
  hamiltonian_energy:            22.575072955312855
  hamiltonian_energy_error:      -0.11189454327319837
  max_hamiltonian_energy_error:  0.8902409744762458
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▊        |  ETA: 0:00:02[K
  iterations:                    8800
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7284605892007777
  log_density:                   -12.206096612389185
  hamiltonian_energy:            19.721482892372244
  hamiltonian_energy_error:      -0.04063540101255825
  max_hamiltonian_energy_error:  0.6642464065616629
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▋       |  ETA: 0:00:02[K
  iterations:                    9138
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8202998995729137
  log_density:                   -21.88268113225508
  hamiltonian_energy:            26.77669001310487
  hamiltonian_energy_error:      0.5386654544584424
  max_hamiltonian_energy_error:  0.5386654544584424
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▋      |  ETA: 0:00:01[K
  iterations:                    9532
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9791177983504292
  log_density:                   -15.595753358919584
  hamiltonian_energy:            20.627372898233553
  hamiltonian_energy_error:      0.02971805624751056
  max_hamiltonian_energy_error:  -0.09418208559877783
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▌     |  ETA: 0:00:01[K
  iterations:                    9865
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.672463522508577
  log_density:                   -14.226441037155574
  hamiltonian_energy:            19.399255669158237
  hamiltonian_energy_error:      0.2918112963022139
  max_hamiltonian_energy_error:  0.7399844906285296
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▌    |  ETA: 0:00:01[K
  iterations:                    10262
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9936852230785786
  log_density:                   -12.391609154690471
  hamiltonian_energy:            15.106890855517182
  hamiltonian_energy_error:      -0.005966317588992354
  max_hamiltonian_energy_error:  -0.05400285578318886
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▍   |  ETA: 0:00:01[K
  iterations:                    10597
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8630883675780472
  log_density:                   -13.527078388778866
  hamiltonian_energy:            19.337134899674595
  hamiltonian_energy_error:      -0.06360693388183947
  max_hamiltonian_energy_error:  0.4603183870842855
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▍  |  ETA: 0:00:00[K
  iterations:                    11000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7258894567630431
  log_density:                   -15.870528202488888
  hamiltonian_energy:            22.911743567112154
  hamiltonian_energy_error:      0.1975820818080578
  max_hamiltonian_energy_error:  0.569009247588955
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▎ |  ETA: 0:00:00[K
  iterations:                    11331
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6652078998990744
  log_density:                   -10.440045579627142
  hamiltonian_energy:            16.98262422083008
  hamiltonian_energy_error:      0.016196735747538327
  max_hamiltonian_energy_error:  0.8317487133138748
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▍|  ETA: 0:00:00[K
  iterations:                    11734
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6842403174490073
  log_density:                   -16.01538460464722
  hamiltonian_energy:            21.5383792549434
  hamiltonian_energy_error:      0.3924009488033384
  max_hamiltonian_energy_error:  0.8137489246681433
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.383064779344956
  hamiltonian_energy:            20.263516402125987
  hamiltonian_energy_error:      -0.49932152175266964
  max_hamiltonian_energy_error:  -0.8503947945714714
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7184514092685471
  nom_step_size:                 0.7184514092685471
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0064223780784447, 0.9741 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.687991577 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0064223780784447, 0.9741 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.718), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0973581812168554
└   average_acceptance_rate = 0.8616618850978581
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.061404728 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡇⠀⠀⠀⠀⠀⠀⡎⠘⡄│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⢱⠀⠀⠀⠀⠀⡸⠀⠀⠘│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠤⡀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠈⡆⠀⡰⠒⠤⠇⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠈⠃⢠⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⢱⡰⠁⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⡜⢱⠀⠀⠀⠀⢀⢄⡀⠀⣀⠤⣀⣀⠔⠃⠀⠀⠘⠃⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⢰⠁⠀⢇⠀⠀⡠⠃⠀⠈⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢇⠀⠀⠀⠀⠀⡎⠀⠀⠀⡎⠀⠀⠈⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠈⡆⠀⠀⠀⣠⡣⠊⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢆⠘⠒⡲⠎⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠱⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
