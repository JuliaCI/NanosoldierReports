Julia Version 1.5.0-DEV.429
Commit ff4f86714b (2020-03-10 12:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Reexport ───────────────────── v0.2.0
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed NLSolversBase ──────────────── v7.6.1
  Installed QuadGK ─────────────────────── v2.3.1
  Installed FileIO ─────────────────────── v1.2.2
  Installed ForwardDiff ────────────────── v0.10.9
  Installed Gridap ─────────────────────── v0.7.1
  Installed Requires ───────────────────── v1.0.1
  Installed TranscodingStreams ─────────── v0.9.5
  Installed CommonSubexpressions ───────── v0.2.0
  Installed DocStringExtensions ────────── v0.8.1
  Installed Parsers ────────────────────── v0.3.12
  Installed DiffResults ────────────────── v1.0.2
  Installed BinaryProvider ─────────────── v0.5.8
  Installed DiffRules ──────────────────── v1.0.1
  Installed JLD2 ───────────────────────── v0.1.12
  Installed WriteVTK ───────────────────── v1.4.0
  Installed Parameters ─────────────────── v0.12.0
  Installed NLsolve ────────────────────── v4.3.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed ArrayInterface ─────────────── v2.5.1
  Installed StaticArrays ───────────────── v0.12.1
  Installed CodecZlib ──────────────────── v0.6.0
  Installed RecipesBase ────────────────── v0.8.0
  Installed FiniteDiff ─────────────────── v2.2.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed FillArrays ─────────────────── v0.8.5
  Installed LineSearches ───────────────── v7.0.1
  Installed BSON ───────────────────────── v0.2.5
  Installed Combinatorics ──────────────── v1.0.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed Polynomials ────────────────── v0.6.1
  Installed DataStructures ─────────────── v0.17.10
  Installed JSON ───────────────────────── v0.21.0
  Installed LightXML ───────────────────── v0.8.1
  Installed Distances ──────────────────── v0.8.2
  Installed NaNMath ────────────────────── v0.3.3
                                                                           0.1%##################                                                        26.2%#################################################################         90.4%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   56d4f2e9 + Gridap v0.7.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   4fba245c + ArrayInterface v2.5.1
   fbb218c0 + BSON v0.2.5
   b99e7846 + BinaryProvider v0.5.8
   944b1d66 + CodecZlib v0.6.0
   861a8166 + Combinatorics v1.0.0
   bbf7d656 + CommonSubexpressions v0.2.0
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   864edb3b + DataStructures v0.17.10
   163ba53b + DiffResults v1.0.2
   b552c78f + DiffRules v1.0.1
   b4f34e82 + Distances v0.8.2
   ffbed154 + DocStringExtensions v0.8.1
   442a2c76 + FastGaussQuadrature v0.4.2
   5789e2e9 + FileIO v1.2.2
   1a297f60 + FillArrays v0.8.5
   6a86dc24 + FiniteDiff v2.2.1
   f6369f11 + ForwardDiff v0.10.9
   56d4f2e9 + Gridap v0.7.1
   033835bb + JLD2 v0.1.12
   682c06a0 + JSON v0.21.0
   9c8b4983 + LightXML v0.8.1
   d3d80556 + LineSearches v7.0.1
   d41bc354 + NLSolversBase v7.6.1
   2774e3e8 + NLsolve v4.3.0
   77ba4419 + NaNMath v0.3.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   69de0a69 + Parsers v0.3.12
   f27b6e38 + Polynomials v0.6.1
   1fd47b50 + QuadGK v2.3.1
   3cdcf5f2 + RecipesBase v0.8.0
   189a3867 + Reexport v0.2.0
   ae029012 + Requires v1.0.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   3bb67fe8 + TranscodingStreams v0.9.5
   64499a7a + WriteVTK v1.4.0
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   a63ad114 + Mmap
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
   Building CodecZlib → `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
   Building LightXML ─→ `~/.julia/packages/LightXML/W8FVT/deps/build.log`
    Testing Gridap
     Status `/tmp/jl_6dgRqU/Project.toml`
   fbb218c0 BSON v0.2.5
   861a8166 Combinatorics v1.0.0
   ffbed154 DocStringExtensions v0.8.1
   442a2c76 FastGaussQuadrature v0.4.2
   5789e2e9 FileIO v1.2.2
   1a297f60 FillArrays v0.8.5
   56d4f2e9 Gridap v0.7.1
   033835bb JLD2 v0.1.12
   682c06a0 JSON v0.21.0
   d3d80556 LineSearches v7.0.1
   2774e3e8 NLsolve v4.3.0
   1fd47b50 QuadGK v2.3.1
   90137ffa StaticArrays v0.12.1
   64499a7a WriteVTK v1.4.0
   37e2e46d LinearAlgebra
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_6dgRqU/Manifest.toml`
   4fba245c ArrayInterface v2.5.1
   fbb218c0 BSON v0.2.5
   b99e7846 BinaryProvider v0.5.8
   944b1d66 CodecZlib v0.6.0
   861a8166 Combinatorics v1.0.0
   bbf7d656 CommonSubexpressions v0.2.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   864edb3b DataStructures v0.17.10
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   ffbed154 DocStringExtensions v0.8.1
   442a2c76 FastGaussQuadrature v0.4.2
   5789e2e9 FileIO v1.2.2
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   f6369f11 ForwardDiff v0.10.9
   56d4f2e9 Gridap v0.7.1
   033835bb JLD2 v0.1.12
   682c06a0 JSON v0.21.0
   9c8b4983 LightXML v0.8.1
   d3d80556 LineSearches v7.0.1
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   77ba4419 NaNMath v0.3.3
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   1fd47b50 QuadGK v2.3.1
   3cdcf5f2 RecipesBase v0.8.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   3bb67fe8 TranscodingStreams v0.9.5
   64499a7a WriteVTK v1.4.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Test Summary: | Pass  Total
Helpers       |   13     13
212.403386 seconds (13.13 M allocations: 688.274 MiB, 0.32% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  2.396116 seconds (2.15 M allocations: 122.005 MiB, 0.89% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 28.263060 seconds (28.78 M allocations: 1.375 GiB, 2.90% gc time)
Test Summary: | Pass  Total
Algebra       |  677    677
 79.169735 seconds (79.74 M allocations: 3.710 GiB, 3.23% gc time)
Test Summary: | Pass  Total
TensorValues  |  227    227
 15.785221 seconds (13.16 M allocations: 670.713 MiB, 3.92% gc time)
Test Summary: | Pass  Total
Arrays        |  278    278
 26.135547 seconds (24.01 M allocations: 1.164 GiB, 2.27% gc time)
Test Summary: | Pass  Total
Fields        |  580    580
 64.350988 seconds (50.43 M allocations: 2.449 GiB, 2.44% gc time)
Test Summary: | Pass  Total
Polynomials   |  256    256
 25.692328 seconds (21.20 M allocations: 1.054 GiB, 4.63% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 17.263921 seconds (29.86 M allocations: 1.331 GiB, 6.00% gc time)
Test Summary: | Pass  Total
ReferenceFEs  |  893    893
 79.007181 seconds (71.93 M allocations: 3.547 GiB, 3.71% gc time)
Test Summary: | Pass  Total
Geometry      | 1600   1600
133.523557 seconds (118.20 M allocations: 5.962 GiB, 3.31% gc time)
Test Summary: | Pass  Total
FESpaces      |  493    493
225.713383 seconds (180.97 M allocations: 9.070 GiB, 2.92% gc time)
Test Summary: | Pass  Total
MultiField    |  110    110
 77.001768 seconds (53.69 M allocations: 2.699 GiB, 2.29% gc time)
Test Summary: |
Visualization | No tests
 30.354990 seconds (21.13 M allocations: 1.069 GiB, 2.17% gc time)
Test Summary: | Pass  Total
Gridap        |   17     17
508.853093 seconds (313.83 M allocations: 15.767 GiB, 2.69% gc time)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000002 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000000 seconds
  0.000055 seconds (1000 allocations: 31.250 KiB)
  0.000027 seconds
  0.000000 seconds
  0.000029 seconds
  0.000033 seconds
  0.000024 seconds
+++ runing suite for n = 100000 +++
  0.000000 seconds
  0.005284 seconds (100.00 k allocations: 3.052 MiB)
  0.002663 seconds
  0.000000 seconds
  0.002711 seconds
  0.003190 seconds
  0.002259 seconds
WARNING: replacing module ArraysBenchs.
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000004 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000004 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000002 seconds
  0.000003 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 1000 +++
  0.000004 seconds
  0.000005 seconds
  0.000073 seconds (1000 allocations: 31.250 KiB)
  0.000354 seconds (1000 allocations: 31.250 KiB)
  0.000005 seconds
  0.000126 seconds
  0.000181 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 100000 +++
  0.000419 seconds
  0.000496 seconds
  0.007508 seconds (100.00 k allocations: 3.052 MiB)
  0.035160 seconds (100.00 k allocations: 3.052 MiB)
  0.000462 seconds
  0.010882 seconds
  0.015951 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1000 +++
  0.000024 seconds
  0.000022 seconds
  0.000085 seconds
  0.000099 seconds
+++ runing suite for n = 100000 +++
  0.002243 seconds
  0.002278 seconds
  0.007405 seconds
  0.006569 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000014 seconds
  0.000000 seconds
  0.000096 seconds
  0.000000 seconds
+++ runing suite for n = 100000 +++
  0.001404 seconds
  0.000000 seconds
  0.008120 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000003 seconds
  0.000003 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1000 +++
  0.000102 seconds
  0.000106 seconds
  0.000118 seconds
+++ runing suite for n = 100000 +++
  0.010082 seconds
  0.010511 seconds
  0.011169 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000007 seconds
  0.000006 seconds
+++ runing suite for n = 1000 +++
  0.000030 seconds
  0.000005 seconds
  0.000119 seconds
  0.000145 seconds
  0.000044 seconds
  0.000002 seconds
  0.000154 seconds
  0.000141 seconds
  0.000044 seconds
  0.000009 seconds
  0.000155 seconds
  0.000147 seconds
  0.000101 seconds
  0.000002 seconds
  0.000652 seconds
  0.000642 seconds
+++ runing suite for n = 100000 +++
  0.003037 seconds
  0.000497 seconds
  0.011623 seconds
  0.012785 seconds
  0.002765 seconds
  0.000128 seconds
  0.013102 seconds
  0.012653 seconds
  0.002998 seconds
  0.000922 seconds
  0.015094 seconds
  0.013163 seconds
  0.008393 seconds
  0.000158 seconds
  0.060455 seconds
  0.055004 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000002 seconds
  0.000003 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1000 +++
  0.000083 seconds
  0.000007 seconds
  0.000230 seconds
  0.000268 seconds (1 allocation: 112 bytes)
  0.000005 seconds
  0.000220 seconds
  0.000189 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 100000 +++
  0.008372 seconds
  0.000732 seconds
  0.022933 seconds
  0.019988 seconds (1 allocation: 112 bytes)
  0.000557 seconds
  0.022751 seconds
  0.019796 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000002 seconds
  0.000002 seconds
  0.000004 seconds
  0.000002 seconds
  0.000014 seconds
  0.000005 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000003 seconds
+++ runing suite for n = 1000 +++
  0.000115 seconds
  0.000103 seconds
  0.000254 seconds
  0.000084 seconds
  0.000093 seconds
  0.000269 seconds
  0.000106 seconds
  0.000119 seconds
  0.000103 seconds
  0.000112 seconds
  0.000117 seconds
  0.000101 seconds
  0.000246 seconds
+++ runing suite for n = 100000 +++
  0.010369 seconds
  0.010981 seconds
  0.034343 seconds
  0.009473 seconds
  0.010393 seconds
  0.029822 seconds
  0.011740 seconds
  0.012305 seconds
  0.011260 seconds
  0.011799 seconds
  0.012142 seconds
  0.010349 seconds
  0.024952 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000003 seconds
  0.000002 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000003 seconds
  0.000012 seconds
+++ runing suite for n = 1000 +++
  0.000087 seconds
  0.000245 seconds
  0.001099 seconds
+++ runing suite for n = 100000 +++
  0.009069 seconds
  0.026608 seconds
  0.100796 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000006 seconds
+++ runing suite for n = 1000 +++
  0.000069 seconds
  0.000520 seconds
+++ runing suite for n = 100000 +++
  0.007214 seconds
  0.055755 seconds
+++ runing suite for n = 1 +++
  0.000007 seconds
  0.000000 seconds
  0.000003 seconds
  0.111156 seconds (74.39 k allocations: 3.606 MiB)
  0.000000 seconds
  0.000003 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000007 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000017 seconds
  0.000049 seconds
  0.000001 seconds
  0.000002 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000019 seconds
  0.000099 seconds
  0.001774 seconds
  0.004658 seconds
  0.000027 seconds
  0.000138 seconds
  0.000002 seconds
+++ runing suite for n = 100000 +++
  0.002235 seconds
  0.011927 seconds
  0.195874 seconds
  0.505953 seconds
  0.003335 seconds
  0.015337 seconds
  0.000087 seconds
+++ runing suite for n = 1 +++
  0.000005 seconds
  0.000005 seconds
  0.000011 seconds
  0.000010 seconds (30 allocations: 1.406 KiB)
+++ runing suite for n = 1 +++
  0.000002 seconds
  0.000003 seconds
  0.000002 seconds
  0.000005 seconds (30 allocations: 1.406 KiB)
+++ runing suite for n = 10 +++
  0.000008 seconds
  0.000015 seconds
  0.000013 seconds
  0.000040 seconds (300 allocations: 14.062 KiB)
+++ runing suite for n = 1000 +++
  0.000876 seconds
  0.001549 seconds
  0.001215 seconds
  0.003682 seconds (30.00 k allocations: 1.373 MiB)
+++ runing suite for n = 100000 +++
  0.075624 seconds
  0.148178 seconds
  0.132758 seconds
  0.563371 seconds (3.00 M allocations: 137.329 MiB, 27.08% gc time)
    Testing Gridap tests passed 
