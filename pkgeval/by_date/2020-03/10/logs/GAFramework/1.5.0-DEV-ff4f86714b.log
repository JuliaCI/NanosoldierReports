Julia Version 1.5.0-DEV.429
Commit ff4f86714b (2020-03-10 12:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.2
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.2
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_BFspkH/Project.toml`
   5789e2e9 FileIO v1.2.2
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_BFspkH/Manifest.toml`
   5789e2e9 FileIO v1.2.2
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721959061319696
curgen: 20 fitness: 0.2172228826538162
curgen: 30 fitness: 0.217233628208573
curgen: 40 fitness: 0.217233628208573
curgen: 50 fitness: 0.217233628208573
CoordinateCreature{Array{Float64,1}}([0.22254840302171822], -0.217233628208573) 0.22254840302171822 -0.217233628208573
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2569805944564334
curgen: 100 fitness: 3.257986683771731
curgen: 150 fitness: 3.258273623269822
curgen: 200 fitness: 3.2583212806875683
curgen: 250 fitness: 3.258358344456179
curgen: 300 fitness: 3.2583824648137756
curgen: 350 fitness: 3.2583893314778587
curgen: 400 fitness: 3.2584109507651395
curgen: 450 fitness: 3.2584641821412212
curgen: 500 fitness: 3.2584736373144407
CoordinateCreature{Array{Float64,1}}([0.22245940629785996, -0.22246356274962767, -0.22289043044873552, -0.2224418772753176, -0.2229434782201183, -0.22240596856560527, -0.22236780369006612, -0.22264392964259416, 0.22277580249281106, 0.22255907128918226, -0.2225440778051508, -0.22252152082968882, -0.22249756537398857, 0.22241619421473965, -0.22306036730557108], -3.2584736373144407) [0.22245940629785996, -0.22246356274962767, -0.22289043044873552, -0.2224418772753176, -0.2229434782201183, -0.22240596856560527, -0.22236780369006612, -0.22264392964259416, 0.22277580249281106, 0.22255907128918226, -0.2225440778051508, -0.22252152082968882, -0.22249756537398857, 0.22241619421473965, -0.22306036730557108] -3.2584736373144407
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002162936823566497
curgen: 100 fitness: -0.0021307894815549844
curgen: 150 fitness: -0.00029958029890053695
curgen: 200 fitness: -0.00029958029890053695
curgen: 250 fitness: -0.00029084305006676914
curgen: 300 fitness: -0.00029084305006676914
curgen: 350 fitness: -0.00029084305006676914
curgen: 400 fitness: -0.00029084305006676914
curgen: 450 fitness: -0.00029084305006676914
curgen: 500 fitness: -0.00029084305006676914
CoordinateCreature{Array{Float64,1}}([-0.0005038067613860973, 0.00027043133325504315, 0.00016977237558504603, -0.0004293469708108055, 0.00023585101854432973, -9.272530750554809e-5, -0.0001937690125797338, -0.0002609497059366502, 9.950119402182041e-6, -0.000402171363871925, -0.00018445690288464514, 0.0005516923095767257, -0.0004271200901515101, 0.00016884427451164966, 0.0002117826933160819], 0.00029084305006676914) [-0.0005038067613860973, 0.00027043133325504315, 0.00016977237558504603, -0.0004293469708108055, 0.00023585101854432973, -9.272530750554809e-5, -0.0001937690125797338, -0.0002609497059366502, 9.950119402182041e-6, -0.000402171363871925, -0.00018445690288464514, 0.0005516923095767257, -0.0004271200901515101, 0.00016884427451164966, 0.0002117826933160819] 0.00029084305006676914
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
