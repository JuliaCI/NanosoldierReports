Julia Version 1.5.0-DEV.429
Commit ff4f86714b (2020-03-10 12:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_SR7L7l/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_SR7L7l/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.10990202915084107 0.06702236354967565; -0.10990202915084107 0.0 0.16295728542525403; -0.06702236354967565 -0.16295728542525403 0.0])
dAA = so3([0.0 0.05872395737475601 -0.14947128018967684; -0.05872395737475601 0.0 -0.20728934330666574; 0.14947128018967684 0.20728934330666574 0.0])
dAA = so3([0.0 -0.08583646940539708 0.12204763411336428; 0.08583646940539708 0.0 -0.14352440615567907; -0.12204763411336428 0.14352440615567907 0.0])
dAA = Quaternion(0.9976336607026687, [-0.04790719539286678, 0.04924041611688499, -0.0027131316256834687])
dAA = SO3([0.9941779608568166 -0.06630557136811126 -0.08493381748238062; 0.05769674963679915 0.993304412997766 -0.1000871030678381; 0.09100146827348753 0.09460398683307081 0.991346971774947])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9222509417524799 0.04311222140371403 -0.3841803441123728; -0.22992462672710354 0.8600665429581938 -0.45543408711727257; 0.31078588523461953 0.5083570379660132 0.8031097406266192]), [-1.6295728542525403, 0.6702236354967566, -1.0990202915084106])
xj = SE3(SO3([0.9698750973470189 -0.004345354689923944 0.24356398222793396; -0.05424431464418957 0.9708851564464722 0.23332288211980243; -0.23748652567017928 -0.23950601429719423 0.9414016248342572]), [1.4352440615567907, 1.2204763411336428, 0.8583646940539708])
Dx = SE3(SO3([0.8331328655954984 -0.30167300331824065 0.4635547727438326; -0.12556819698692323 0.7130839342177057 0.6897419304827364; -0.5386299807568147 -0.6328544080825793 0.5562131264186073]), [3.308341264437904, 1.6004354411463684, 0.14394869202884836])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
