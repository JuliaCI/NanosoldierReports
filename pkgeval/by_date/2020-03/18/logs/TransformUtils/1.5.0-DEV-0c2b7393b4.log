Julia Version 1.5.0-DEV.471
Commit 0c2b7393b4 (2020-03-17 17:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_FTSCpI/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_FTSCpI/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.007565485487820252 -0.17270255068240647; -0.007565485487820252 0.0 0.21002116928260164; 0.17270255068240647 -0.21002116928260164 0.0])
dAA = so3([0.0 0.07937161285929635 0.31069231931637425; -0.07937161285929635 0.0 0.011903790451940571; -0.31069231931637425 -0.011903790451940571 0.0])
dAA = so3([0.0 -0.040570270028225885 0.010485492924247435; 0.040570270028225885 0.0 0.29034559678424027; -0.010485492924247435 -0.29034559678424027 0.0])
dAA = Quaternion(0.9977081597238349, [0.057021360924786636, 0.005219186951606473, 0.03605208047156899])
dAA = SO3([0.9950600394886694 -0.07437922575690663 0.06575141510729027; 0.07136082291079358 0.9963367816241936 0.04712377888326117; -0.0690155835033106 -0.04219891418682776 0.9967226800244643])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.6955259774724133 0.1668688155860575 0.6988550729914969; -0.18877052488295837 0.9809268326569458 -0.04634908746701105; -0.6932599105649024 -0.09968624458027578 0.7137600080174182]), [-2.1002116928260164, -1.7270255068240645, -0.07565485487820252])
xj = SE3(SO3([0.9835634600538681 -0.17580754720228417 0.04116584012964816; 0.1802715456054179 0.9431722213930774 -0.279156462646813; 0.01025133610300969 0.28198912592361497 0.9593628317633213]), [-2.9034559678424023, 0.10485492924247433, 0.40570270028225885])
Dx = SE3(SO3([0.6429571423247753 -0.4958135876203734 -0.5837593677745763; 0.3399373486837691 0.8677357056325924 -0.3625980476232002; 0.6863298857717098 0.03469339276175304 0.7264624260037613]), [-1.2381881866092763, 1.6149195261844196, -0.302683550576357])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
