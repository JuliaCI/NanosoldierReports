Julia Version 1.5.0-DEV.378
Commit cdf580aff8 (2020-03-01 16:49 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CpuId ────────────── v0.2.2
  Installed OrderedCollections ─ v1.1.0
  Installed SIMDPirates ──────── v0.6.3
  Installed Parameters ───────── v0.12.0
  Installed VectorizationBase ── v0.6.2
  Installed SLEEFPirates ─────── v0.4.0
  Installed LoopVectorization ── v0.6.17
   Updating `~/.julia/environments/v1.5/Project.toml`
  [bdcacae8] + LoopVectorization v0.6.17
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [bdcacae8] + LoopVectorization v0.6.17
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [21efa798] + SIMDPirates v0.6.3
  [476501e8] + SLEEFPirates v0.4.0
  [3d5dd08c] + VectorizationBase v0.6.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
   Building VectorizationBase → `~/.julia/packages/VectorizationBase/YUkNJ/deps/build.log`
   Building SLEEFPirates ─────→ `~/.julia/packages/SLEEFPirates/xTDqS/deps/build.log`
    Testing LoopVectorization
Status `/tmp/jl_THvLZJ/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [bdcacae8] LoopVectorization v0.6.17
  [bac558e1] OrderedCollections v1.1.0
  [d96e819e] Parameters v0.12.0
  [21efa798] SIMDPirates v0.6.3
  [476501e8] SLEEFPirates v0.4.0
  [3d5dd08c] VectorizationBase v0.6.2
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
#= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/printmethods.jl:2 =# @__LINE__() = 2
  9.129791 seconds (5.48 M allocations: 274.208 MiB, 4.02% gc time)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/ifelsemasks.jl:287 =# @__LINE__()) = (Float32, 287)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/ifelsemasks.jl:287 =# @__LINE__()) = (Float64, 287)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/ifelsemasks.jl:287 =# @__LINE__()) = (Int32, 287)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/ifelsemasks.jl:287 =# @__LINE__()) = (Int64, 287)
 58.881336 seconds (43.88 M allocations: 2.041 GiB, 1.79% gc time)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/dot.jl:178 =# @__LINE__()) = (Float32, 178)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/dot.jl:178 =# @__LINE__()) = (Float64, 178)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/dot.jl:178 =# @__LINE__()) = (Int32, 178)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/dot.jl:178 =# @__LINE__()) = (Int64, 178)
 14.492960 seconds (13.19 M allocations: 661.891 MiB, 1.52% gc time)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/special.jl:176 =# @__LINE__()) = (Float32, 176)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/special.jl:176 =# @__LINE__()) = (Float64, 176)
  5.410758 seconds (4.11 M allocations: 207.248 MiB, 1.72% gc time)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/gemv.jl:141 =# @__LINE__()) = (Float32, 141)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/gemv.jl:141 =# @__LINE__()) = (Float64, 141)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/gemv.jl:141 =# @__LINE__()) = (Int32, 141)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/gemv.jl:141 =# @__LINE__()) = (Int64, 141)
 33.880878 seconds (27.05 M allocations: 1.196 GiB, 2.22% gc time)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/miscellaneous.jl:435 =# @__LINE__()) = (Float32, 435)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/miscellaneous.jl:435 =# @__LINE__()) = (Float64, 435)
 36.556500 seconds (31.40 M allocations: 1.480 GiB, 2.43% gc time)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/copy.jl:84 =# @__LINE__()) = (Float32, 84)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/copy.jl:84 =# @__LINE__()) = (Float64, 84)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/copy.jl:84 =# @__LINE__()) = (Int32, 84)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/copy.jl:84 =# @__LINE__()) = (Int64, 84)
  7.549496 seconds (6.64 M allocations: 340.386 MiB, 1.44% gc time)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/broadcast.jl:5 =# @__LINE__()) = (Float32, 5)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/broadcast.jl:5 =# @__LINE__()) = (Float64, 5)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/broadcast.jl:5 =# @__LINE__()) = (Int32, 5)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/broadcast.jl:5 =# @__LINE__()) = (Int64, 5)
101.689702 seconds (67.43 M allocations: 3.221 GiB, 2.03% gc time)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/map.jl:5 =# @__LINE__()) = (Float32, 5)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/map.jl:5 =# @__LINE__()) = (Float64, 5)
  0.925365 seconds (600.63 k allocations: 30.827 MiB, 2.25% gc time)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/filter.jl:4 =# @__LINE__()) = (Float32, 4)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/filter.jl:4 =# @__LINE__()) = (Float64, 4)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/filter.jl:4 =# @__LINE__()) = (Int32, 4)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/filter.jl:4 =# @__LINE__()) = (Int64, 4)
  1.230579 seconds (736.04 k allocations: 38.530 MiB, 1.44% gc time)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/gemm.jl:520 =# @__LINE__()) = (Float32, 520)
 31.215850 seconds (21.31 M allocations: 924.331 MiB, 1.56% gc time)
 34.007721 seconds (15.80 M allocations: 703.600 MiB, 0.93% gc time)
 35.757026 seconds (24.33 M allocations: 1.064 GiB, 1.77% gc time)
 29.069209 seconds (15.59 M allocations: 708.124 MiB, 1.33% gc time)
 16.663798 seconds (9.34 M allocations: 426.927 MiB, 1.04% gc time)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/gemm.jl:520 =# @__LINE__()) = (Float64, 520)
 28.547056 seconds (20.93 M allocations: 906.065 MiB, 1.37% gc time)
 33.140672 seconds (15.63 M allocations: 697.745 MiB, 0.97% gc time)
 35.602545 seconds (25.06 M allocations: 1.104 GiB, 1.21% gc time)
 29.442941 seconds (15.39 M allocations: 700.827 MiB, 1.02% gc time)
 16.387896 seconds (9.21 M allocations: 420.552 MiB, 1.20% gc time)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/gemm.jl:520 =# @__LINE__()) = (Int32, 520)
 36.679116 seconds (22.10 M allocations: 939.862 MiB, 1.05% gc time)
 40.900906 seconds (16.52 M allocations: 728.130 MiB, 0.73% gc time)
 48.456290 seconds (25.26 M allocations: 1.073 GiB, 0.92% gc time)
 36.627489 seconds (16.30 M allocations: 732.715 MiB, 0.75% gc time)
 18.771812 seconds (9.72 M allocations: 436.768 MiB, 1.04% gc time)
(T, #= /home/pkgeval/.julia/packages/LoopVectorization/MVClY/test/gemm.jl:520 =# @__LINE__()) = (Int64, 520)
 35.089828 seconds (22.06 M allocations: 938.427 MiB, 1.00% gc time)
 42.562157 seconds (16.37 M allocations: 723.442 MiB, 0.58% gc time)
 48.951497 seconds (26.19 M allocations: 1.122 GiB, 0.78% gc time)
 36.929792 seconds (16.12 M allocations: 726.242 MiB, 0.68% gc time)
 20.558649 seconds (9.72 M allocations: 436.881 MiB, 0.69% gc time)
660.003308 seconds (353.43 M allocations: 15.282 GiB, 1.01% gc time)
Test Summary:        | Pass  Total
LoopVectorization.jl |  846    846
930.489744 seconds (555.17 M allocations: 24.798 GiB, 1.32% gc time)
    Testing LoopVectorization tests passed 
