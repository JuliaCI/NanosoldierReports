Julia Version 1.5.0-DEV.373
Commit e39e945a81 (2020-02-29 18:45 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_lBJMKm/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.050129171948952334 0.26736051305629144; 0.050129171948952334 0.0 -0.12228724002467735; -0.26736051305629144 0.12228724002467735 0.0])
dAA = so3([0.0 0.10110864747848869 0.010695357344892817; -0.10110864747848869 0.0 0.03952789397355991; -0.010695357344892817 -0.03952789397355991 0.0])
dAA = so3([0.0 0.019213345980665306 0.08846102641465334; -0.019213345980665306 0.0 -0.03795932749240349; -0.08846102641465334 0.03795932749240349 0.0])
dAA = Quaternion(0.9958076973249331, [-0.0652150481658343, -0.03892517806849223, -0.05097899521840701])
dAA = SO3([0.999962488127474 0.005297602801667144 -0.006852571960015101; -0.004720226170751764 0.9966465847836883 0.0816902962652684; 0.007262355183297421 -0.08165488621978566 0.996634204587433])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9678955033884074 0.24833701399227576 0.03882038126940291; -0.2509629591151762 0.9633982811284508 0.09424088852987823; -0.013995987734205018 -0.100957810000746 0.9947922561656767]), [1.2228724002467735, 2.673605130562914, 0.5012917194895233])
xj = SE3(SO3([0.9493027773594148 0.2670416508130263 -0.16587041215586026; -0.20143100423174706 0.9218007176296577 0.33122347065333113; 0.24134992735008456 -0.2810199169249431 0.9288584493127071]), [0.37959327492403483, 0.8846102641465333, -0.19213345980665303])
Dx = SE3(SO3([0.9659996798170015 0.031063728538862426 -0.2566703398577909; 0.017322573752064818 0.9827487084611934 0.18413284458906487; 0.2579622976949429 -0.1823184598089844 0.9487968339854562]), [-0.35752945767945565, -1.8629253116967142, -0.89114688154216])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
