Julia Version 1.5.0-DEV.378
Commit cdf580aff8 (2020-03-01 16:49 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_Mf3qZn/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.09772408210794661 -0.1175408050058749; 0.09772408210794661 0.0 -0.11289860594450385; 0.1175408050058749 0.11289860594450385 0.0])
dAA = so3([0.0 0.09459612380000641 0.05170805103633397; -0.09459612380000641 0.0 0.04527142928832228; -0.05170805103633397 -0.04527142928832228 0.0])
dAA = so3([0.0 -0.001929787891155564 0.04224324625566885; 0.001929787891155564 0.0 0.12112695704032801; -0.04224324625566885 -0.12112695704032801 0.0])
dAA = Quaternion(0.9984759044153858, [0.0051425400471211795, 0.054662322627247316, -0.005608303552412593])
dAA = SO3([0.9971569031401573 -0.061897735655204456 -0.04297418807481649; 0.05705819284764685 0.9927355653919729 -0.10592667197094723; 0.04921862603620717 0.1031734826718491 0.9934448949612])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9639386648210649 0.22587337636702304 0.14072479636348317; -0.24040010177605417 0.9658755023774537 0.09639660249803611; -0.11414920730800296 -0.1267506676734397 0.9853447248122313]), [1.1289860594450385, -1.175408050058749, 0.9772408210794661])
xj = SE3(SO3([0.9624569052615023 0.029716693219376457 0.2698029348590505; -0.023114370052959254 0.9993513355318672 -0.027615830020628822; -0.27044857443053094 0.02034272142017554 0.962519476308773]), [-1.21126957040328, 0.4224324625566885, 0.019297878911555637])
Dx = SE3(SO3([0.964177611507632 -0.2139211987117141 0.1568414939012667; 0.22934732439253097 0.969382729568043 -0.087732140115226; -0.13327167088854633 0.12056054228873449 0.983719379387039]), [-2.5306354815358594, 1.1361334746785514, -1.11920962493531])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
