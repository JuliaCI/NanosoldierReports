Julia Version 1.5.0-DEV.462
Commit b0619303e4 (2020-03-15 15:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed ProgressMeter ──────────────── v1.2.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Parameters ─────────────────── v0.12.0
  Installed MacroTools ─────────────────── v0.5.4
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed DataStructures ─────────────── v0.17.10
  Installed Requires ───────────────────── v1.0.1
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed StatsFuns ──────────────────── v0.9.4
  Installed Missings ───────────────────── v0.4.3
  Installed InplaceOps ─────────────────── v0.3.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed FillArrays ─────────────────── v0.8.5
  Installed StatsBase ──────────────────── v0.32.2
  Installed ArgCheck ───────────────────── v2.0.0
  Installed LazyArrays ─────────────────── v0.15.0
  Installed DataAPI ────────────────────── v1.1.0
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.7%#####                                                                      7.5%##########                                                                14.8%################                                                          22.7%#########################                                                 35.2%###################################                                       49.0%##################################################                        69.8%###################################################################       93.9%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.0
   1914dd2f + MacroTools v0.5.4
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
#=#=#                                                                         ##                                                                         3.6%####################                                                      28.4%####################################                                      50.2%##################################################                        69.9%###################################################################       93.2%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                                                                                                  1.0%##                                                                         3.2%#####                                                                      7.0%########                                                                  12.2%#############                                                             19.0%###################                                                       26.9%###########################                                               37.9%####################################                                      51.4%#################################################                         68.9%################################################################          89.2%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       #########                                                                 13.8%#########################################################                 80.5%######################################################################## 100.0%
     Status `/tmp/jl_1Bpnah/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.5.2
   31c24e10 Distributions v0.22.5
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.0
   1dea7af3 OrdinaryDiffEq v5.31.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.10
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_1Bpnah/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.4.0
   1520ce14 AbstractTrees v0.3.2
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.5.1
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.5.2
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v0.7.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   88cd18e8 ConsoleProgressMonitor v0.1.2
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.24.0
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   31c24e10 Distributions v0.22.5
   ced4e74d DistributionsAD v0.4.5
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.4.2
   da5c29d0 EllipsisNotation v0.4.0
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.2.2
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.1
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.1
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.0
   1d6d02ad LeftChildRightSiblingTrees v0.1.2
   6f1fad26 Libtask v0.3.3
   093fc24a LightGraphs v1.3.1
   d3d80556 LineSearches v7.0.1
   6fdf6af0 LogDensityProblems v0.10.3
   e6f89c97 LoggingExtras v0.4.0
   c7f686f2 MCMCChains v3.0.4
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+7
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.31.0
   90014a1f PDMats v0.9.12
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   33c8b6b6 ProgressLogging v0.1.2
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   37e2e3b7 ReverseDiff v1.1.0
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v0.8.4
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   5d786b92 TerminalLoggers v0.1.1
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.9.0
   3a884ed6 UnPack v0.1.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.10
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
DenseEuclideanMetric: Test Failed at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/adaptation/precond.jl:148
  Expression: ≈(res.adaptor.pc.var, diag(Σ), rtol = 0.2)
   Evaluated: [9.31393158500031, 9.826596128812398, 5.5066557092780695, 3.6117071270241237, 4.900212988784408, 12.804955003294083, 12.264526233093367, 9.87720203162892, 6.486476766490131, 5.787817341717483] ≈ [9.132739322510982, 9.64369534958878, 5.751597393789568, 5.457458804269262, 5.363961318108063, 17.75608160405736, 9.424114529608644, 7.909513965604998, 6.998561590907058, 5.694619770387615] (rtol=0.2)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/adaptation/precond.jl:148
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/adaptation/precond.jl:138
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/adaptation/precond.jl:116
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.158705298
│   t_steps = 0.008094794
└   t_step / t_steps = 19.605847659619254
Sampling  0%|                               |  ETA: 5:24:28[K
  iterations:                    1
  n_steps:                       9
  is_accept:                     true
  acceptance_rate:               0.16322378285449168
  log_density:                   -11.413361421616166
  hamiltonian_energy:            15.279493860180892
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  5.184317718876848
  tree_depth:                    3
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  7%|██▏                            |  ETA: 0:00:30[K
  iterations:                    832
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7552592286600914
  log_density:                   -12.792759706477181
  hamiltonian_energy:            14.21502587771692
  hamiltonian_energy_error:      0.47132394574130565
  max_hamiltonian_energy_error:  0.47132394574130565
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.96810691037911
  nom_step_size:                 0.96810691037911
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1993945535024095, 1.1754 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▉                            |  ETA: 0:00:23[K
  iterations:                    1104
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7178754566078434
  log_density:                   -15.585342924519106
  hamiltonian_energy:            18.04520908659228
  hamiltonian_energy_error:      0.5042649439041611
  max_hamiltonian_energy_error:  0.5042649439041611
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7721575363691757
  nom_step_size:                 0.7721575363691757
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8393727485706565, 1.0091 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:20[K
  iterations:                    1323
  n_steps:                       63
  is_accept:                     true
  acceptance_rate:               0.8905204325540397
  log_density:                   -12.492193158185408
  hamiltonian_energy:            15.71815843549356
  hamiltonian_energy_error:      0.03407631333837102
  max_hamiltonian_energy_error:  0.4460632995985847
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8825008572514044
  nom_step_size:                 0.8825008572514044
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8393727485706565, 1.0091 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:17[K
  iterations:                    1548
  n_steps:                       431
  is_accept:                     true
  acceptance_rate:               0.5935268460468515
  log_density:                   -14.2522773627267
  hamiltonian_energy:            19.164498341494753
  hamiltonian_energy_error:      -1.361317829966307
  max_hamiltonian_energy_error:  3.7104874707846847
  tree_depth:                    8
  numerical_error:               false
  step_size:                     1.5173671065785561
  nom_step_size:                 1.5173671065785561
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8393727485706565, 1.0091 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:15[K
  iterations:                    1793
  n_steps:                       55
  is_accept:                     true
  acceptance_rate:               0.8132841151526454
  log_density:                   -15.174640477123107
  hamiltonian_energy:            20.884009806853886
  hamiltonian_energy_error:      0.12476625801629382
  max_hamiltonian_energy_error:  0.6008835266487367
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8651980907668826
  nom_step_size:                 0.8651980907668826
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8393727485706565, 1.0091 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████▏                         |  ETA: 0:00:14[K
  iterations:                    1980
  n_steps:                       947
  is_accept:                     true
  acceptance_rate:               0.7788726402309676
  log_density:                   -11.580164231774054
  hamiltonian_energy:            16.82664349125677
  hamiltonian_energy_error:      -3.0839819099603147
  max_hamiltonian_energy_error:  -3.311688118618072
  tree_depth:                    9
  numerical_error:               false
  step_size:                     1.5017760929638237
  nom_step_size:                 1.5017760929638237
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▊                         |  ETA: 0:00:13[K
  iterations:                    2203
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.06612778236413
  hamiltonian_energy:            17.14934700601599
  hamiltonian_energy_error:      -0.18567123661322427
  max_hamiltonian_energy_error:  -0.30357831214248066
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▉                        |  ETA: 0:00:10[K
  iterations:                    2655
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9586508821343885
  log_density:                   -13.752993774757485
  hamiltonian_energy:            20.625412514373753
  hamiltonian_energy_error:      -0.3276010254915427
  max_hamiltonian_energy_error:  -0.416911910041879
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▊                       |  ETA: 0:00:09[K
  iterations:                    2998
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.005002804409283
  hamiltonian_energy:            19.448570960680513
  hamiltonian_energy_error:      -0.07347028407125222
  max_hamiltonian_energy_error:  -0.48848237098301084
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|████████▉                      |  ETA: 0:00:08[K
  iterations:                    3426
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9759013895483396
  log_density:                   -12.535726114645183
  hamiltonian_energy:            15.685266726113483
  hamiltonian_energy_error:      -0.09269227537406621
  max_hamiltonian_energy_error:  -0.2503141845786434
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|█████████▊                     |  ETA: 0:00:07[K
  iterations:                    3782
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.984032958911022
  log_density:                   -12.5697071100627
  hamiltonian_energy:            15.222365925542187
  hamiltonian_energy_error:      0.028278569374466045
  max_hamiltonian_energy_error:  0.03554339265802753
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▉                    |  ETA: 0:00:06[K
  iterations:                    4215
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.947909032416131
  log_density:                   -14.669366893843582
  hamiltonian_energy:            22.368389596115907
  hamiltonian_energy_error:      -0.27539764345582896
  max_hamiltonian_energy_error:  -0.3009725436895181
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▊                   |  ETA: 0:00:06[K
  iterations:                    4567
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.846879723046535
  log_density:                   -10.523473676652872
  hamiltonian_energy:            14.249559734757547
  hamiltonian_energy_error:      -0.08054483949435465
  max_hamiltonian_energy_error:  0.27352743293045556
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|████████████▉                  |  ETA: 0:00:05[K
  iterations:                    4994
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9685004456692162
  log_density:                   -12.604745003357547
  hamiltonian_energy:            18.26373595142886
  hamiltonian_energy_error:      -0.22798674932705865
  max_hamiltonian_energy_error:  -0.22798674932705865
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▉                 |  ETA: 0:00:05[K
  iterations:                    5351
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8346082172614283
  log_density:                   -16.00405178919679
  hamiltonian_energy:            20.48523897721238
  hamiltonian_energy_error:      0.2630906013535359
  max_hamiltonian_energy_error:  0.36667190395329285
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|███████████████                |  ETA: 0:00:04[K
  iterations:                    5783
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9941026077674276
  log_density:                   -16.797229365789647
  hamiltonian_energy:            21.819707169333796
  hamiltonian_energy_error:      -0.16084312489905983
  max_hamiltonian_energy_error:  -0.6110077981994877
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:04[K
  iterations:                    6125
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9981914629290208
  log_density:                   -12.601221290762112
  hamiltonian_energy:            17.083763726519233
  hamiltonian_energy_error:      -0.20628177605757614
  max_hamiltonian_energy_error:  -0.20628177605757614
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████              |  ETA: 0:00:03[K
  iterations:                    6563
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9987224280328151
  log_density:                   -14.599767316366648
  hamiltonian_energy:            20.458858531719816
  hamiltonian_energy_error:      -0.1820313486297458
  max_hamiltonian_energy_error:  -0.1820313486297458
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|█████████████████▉             |  ETA: 0:00:03[K
  iterations:                    6907
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6000832299220382
  log_density:                   -21.26172133765642
  hamiltonian_energy:            25.939919332861983
  hamiltonian_energy_error:      0.8901774029165708
  max_hamiltonian_energy_error:  1.0210153214866118
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|██████████████████▉            |  ETA: 0:00:03[K
  iterations:                    7304
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9400628523806402
  log_density:                   -11.521089187766925
  hamiltonian_energy:            14.266960041598365
  hamiltonian_energy_error:      -0.01091456083054787
  max_hamiltonian_energy_error:  0.12534862987005724
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████           |  ETA: 0:00:02[K
  iterations:                    7744
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.61301169677608
  hamiltonian_energy:            16.169885272337922
  hamiltonian_energy_error:      -0.3666701395456897
  max_hamiltonian_energy_error:  -0.36798053520828233
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▉          |  ETA: 0:00:02[K
  iterations:                    8091
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.438136279357034
  hamiltonian_energy:            18.933230873354095
  hamiltonian_energy_error:      -0.6547030102800271
  max_hamiltonian_energy_error:  -0.7686497489182464
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████         |  ETA: 0:00:02[K
  iterations:                    8522
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8526652075355102
  log_density:                   -14.762051620413903
  hamiltonian_energy:            22.961026667101624
  hamiltonian_energy_error:      -0.10683211870278697
  max_hamiltonian_energy_error:  0.44505691144901505
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 74%|██████████████████████▉        |  ETA: 0:00:02[K
  iterations:                    8873
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7338980904012108
  log_density:                   -14.86247607033343
  hamiltonian_energy:            21.940048910897662
  hamiltonian_energy_error:      0.14778819929139786
  max_hamiltonian_energy_error:  0.7148860844897875
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████       |  ETA: 0:00:01[K
  iterations:                    9303
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9574947000112596
  log_density:                   -12.74613073082561
  hamiltonian_energy:            16.93003115448561
  hamiltonian_energy_error:      -0.24616085546289668
  max_hamiltonian_energy_error:  -0.42950006871823376
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|█████████████████████████      |  ETA: 0:00:01[K
  iterations:                    9654
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8868840415941505
  log_density:                   -11.823930320516492
  hamiltonian_energy:            16.76770214480903
  hamiltonian_energy_error:      -0.16039900041997868
  max_hamiltonian_energy_error:  0.4186999111554073
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████     |  ETA: 0:00:01[K
  iterations:                    10085
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8792153710180953
  log_density:                   -20.905408614224246
  hamiltonian_energy:            25.420285411417375
  hamiltonian_energy_error:      0.3299193207652351
  max_hamiltonian_energy_error:  -0.48761013900148953
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|███████████████████████████    |  ETA: 0:00:01[K
  iterations:                    10431
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.807483312864793
  hamiltonian_energy:            20.984840010027465
  hamiltonian_energy_error:      -0.012139832271767403
  max_hamiltonian_energy_error:  -0.44239184579010526
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 90%|████████████████████████████   |  ETA: 0:00:01[K
  iterations:                    10855
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9438448165062306
  log_density:                   -12.715034566317533
  hamiltonian_energy:            18.738553159911632
  hamiltonian_energy_error:      -0.46343884674532276
  max_hamiltonian_energy_error:  -0.7198178387133183
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|█████████████████████████████  |  ETA: 0:00:00[K
  iterations:                    11212
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9921919839932635
  log_density:                   -12.934538200270906
  hamiltonian_energy:            17.29729917022871
  hamiltonian_energy_error:      -0.12004185921230714
  max_hamiltonian_energy_error:  -0.12004185921230714
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████▏|  ETA: 0:00:00[K
  iterations:                    11652
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.996422632297248
  log_density:                   -11.7420382016218
  hamiltonian_energy:            14.289903346977948
  hamiltonian_energy_error:      -0.09068318023354571
  max_hamiltonian_energy_error:  -0.15094672752270988
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8982859486211867
  log_density:                   -12.515760750352499
  hamiltonian_energy:            16.43540407975519
  hamiltonian_energy_error:      0.02280496281401767
  max_hamiltonian_energy_error:  0.2797501602168495
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6970801934933686
  nom_step_size:                 0.6970801934933686
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.1094994537520857, 1.0120 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.430947998 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.1094994537520857, 1.0120 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.697), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.096792397262128
└   average_acceptance_rate = 0.8632923392937588
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.127735669 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢇⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⡇⠸⡀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠱⡀⢸⠀⠀⢣│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢆⠀⠀⢀⡠⠔⠣⡀⢰⠁⠀⠱⡇⠀⠀⠘│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠈⢆⡠⠃⠀⠀⠀⠑⠇⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠤⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⣠⡇⠀⠀⠀⠀⢀⡠⠤⠤⠒⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⢀⣔⠏⠘⢄⢀⡠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠵⣄⣠⠧⠎⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary:                                            | Pass  Fail  Total
AdvancedHMC                                              | 2874     1   2875
  Online v.s. naive v.s. true var/cov estimation         |   12           12
  Preconditioner constructors                            |    2            2
  Stan HMC adaptors                                      |   12           12
  Adapted mass v.s. true variance                        |   19     1     20
    DiagEuclideanMetric                                  |   10           10
    DenseEuclideanMetric                                 |    9     1     10
  Initialisation adaptor by metric                       |    2            2
  rand momentum variables from metric via vector of RNGs |    2            2
  Passing random number generator                        |   12           12
  TreeSampler                                            |    5            5
  TerminationCriterion                                   |    2            2
  Termination                                            |   20           20
  BinaryTree                                             |    4            4
  ClassicNoUTurn                                         |    4            4
  PhasePoint                                             |    4            4
  Metric                                                 |   60           60
  step(::Leapfrog) against step(::Leapfrog)              |    2            2
  jitter                                                 |    4            4
  temper                                                 |    7            7
  Eq (2.11) from (Neal, 2011)                            |    4            4
  `gdemo`                                                |    1            1
  HMC and NUTS                                           | 2664         2664
  drop_warmup                                            |    4            4
  Matrix mode                                            |   28           28
ERROR: LoadError: Some tests did not pass: 2874 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/runtests.jl:3
ERROR: Package AdvancedHMC errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1523
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
