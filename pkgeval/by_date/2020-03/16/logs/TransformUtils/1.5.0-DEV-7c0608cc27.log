Julia Version 1.5.0-DEV.464
Commit 7c0608cc27 (2020-03-16 06:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_3S6tcd/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_3S6tcd/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.03650496106357234 -0.2652557017288045; 0.03650496106357234 0.0 0.1509213370675001; 0.2652557017288045 -0.1509213370675001 0.0])
dAA = so3([0.0 0.012909885293049162 0.009985455312934786; -0.012909885293049162 0.0 -0.08279858831333814; -0.009985455312934786 0.08279858831333814 0.0])
dAA = so3([0.0 0.06120479539539171 -0.17019387678851894; -0.06120479539539171 0.0 -0.10932571215870686; 0.17019387678851894 0.10932571215870686 0.0])
dAA = Quaternion(0.992704883760356, [0.03232874769000396, 0.04107865465503173, 0.1086481015152451])
dAA = SO3([0.9980538591712866 -0.04695367289311746 -0.041034702328011624; 0.04657431543040011 0.998863229545033 -0.010152921011062032; 0.04146477222283983 0.00822199882713431 0.9991061362036544])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9991706629971457 0.03460993104668941 0.02145084797362438; -0.029461685323733642 0.9781366818252304 -0.2058655890764973; -0.028106855102082093 0.2050628789929356 0.9783451437787174]), [-1.5092133706750008, -2.652557017288045, 0.3650496106357234])
xj = SE3(SO3([0.8355143550572508 -0.5016495942319902 0.22419510944743187; 0.5348143653748954 0.836061407848971 -0.1223720429438215; -0.12605299314936633 0.22214636371652868 0.9668307173469457]), [1.0932571215870686, -1.7019387678851892, -0.6120479539539171])
Dx = SE3(SO3([0.8226078527605313 -0.5321091714268258 0.20043989188822875; 0.5261898532764311 0.8459742463110775 0.08632388364370627; -0.2155007166708165 0.03445873273731173 0.9758955050887892]), [2.599768491125613, 0.8195394647899148, -1.095813044329117])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
