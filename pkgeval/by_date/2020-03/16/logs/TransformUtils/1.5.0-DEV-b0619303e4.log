Julia Version 1.5.0-DEV.462
Commit b0619303e4 (2020-03-15 15:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_TYqGZA/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_TYqGZA/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.015402832961290273 -0.015329979635813396; 0.015402832961290273 0.0 0.17781124566615383; 0.015329979635813396 -0.17781124566615383 0.0])
dAA = so3([0.0 -0.05257560586202488 0.16673094505799568; 0.05257560586202488 0.0 0.12890663450490045; -0.16673094505799568 -0.12890663450490045 0.0])
dAA = so3([0.0 -0.08178954028509498 0.04366144386159313; 0.08178954028509498 0.0 0.048341425802240365; -0.04366144386159313 -0.048341425802240365 0.0])
dAA = Quaternion(0.996700768052704, [-0.041101383909208845, -0.06458742267094042, 0.02695774539205795])
dAA = SO3([0.9916934874951405 0.04300338191715546 0.12122184623001427; -0.058208236221853414 0.9904702198866743 0.12482205235287629; -0.11469885830149691 -0.13084132627473072 0.9847460176324668])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9068134104116004 -0.19060432341631392 0.3759779655680525; 0.05954340821378644 0.9409077574506926 0.3333874240390528; -0.41730566882798137 -0.27993317749798435 0.8645770034530835]), [-1.7781124566615383, -0.15329979635813396, 0.15402832961290272])
xj = SE3(SO3([0.9394728724720758 -0.11103490176252027 -0.32413264642682066; 0.17843898263022462 0.966168426047778 0.18622057347739465; 0.2924897457466796 -0.23278707674384935 0.9275019814178814]), [-0.4834142580224036, 0.4366144386159313, 0.8178954028509497])
Dx = SE3(SO3([0.7404938356854454 0.05398438980854897 -0.6698914576025397; -0.09305055214957882 0.9954039254716949 -0.022641110842863188; 0.6655903199840838 0.0790993730224136 0.7421137481080283]), [0.9321397000554157, 0.1224413864899424, 1.2574121868222554])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
