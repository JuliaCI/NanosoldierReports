Julia Version 1.5.0-DEV.415
Commit 4ee9be2781 (2020-03-06 18:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_RmP1tK/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_RmP1tK/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.2204122156077422 -0.008255520465111126; -0.2204122156077422 0.0 0.02158266820283851; 0.008255520465111126 -0.02158266820283851 0.0])
dAA = so3([0.0 0.05512111146194069 -0.22702395088995853; -0.05512111146194069 0.0 -0.0605695370318213; 0.22702395088995853 0.0605695370318213 0.0])
dAA = so3([0.0 -0.00383075858963936 0.015807701935932717; 0.00383075858963936 0.0 0.01847657203121914; -0.015807701935932717 -0.01847657203121914 0.0])
dAA = Quaternion(0.9973056771875088, [-0.03436401454110255, 0.06480576778757834, -0.0008445209565908121])
dAA = SO3([0.9812577000480848 0.08912108455078024 -0.17085303153539894; -0.09260999415111185 0.9956234377883223 -0.012544285945965078; 0.16898732224541096 0.028131875427276222 0.9852166677971249])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8345548799125333 0.08790947574450023 -0.543865862587922; -0.1712757881403137 0.9796687845499584 -0.1044685453872191; 0.5236246335029433 0.18033578860762553 0.8326441295872891]), [-0.21582668202838506, -0.08255520465111126, -2.204122156077422])
xj = SE3(SO3([0.9480089861719564 -0.012610135742291416 0.3179936266873606; -0.04286950974587816 0.9850472127605248 0.16686579567685367; -0.31534293597822594 -0.17182250466479182 0.9332930191635155]), [-0.18476572031219138, 0.15807701935932716, 0.038307585896393596])
Dx = SE3(SO3([0.6333867054003126 -0.26920908407372635 0.7254982773751588; -0.015526564573022553 0.932925708347993 0.3597339968587274; -0.7736796541299874 -0.2391152269421179 0.5867228485662735]), [1.1588990551528207, 0.6428607671964924, 1.8251144655141869])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
