Julia Version 1.5.0-DEV.418
Commit 4d745aa2f6 (2020-03-07 14:17 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_RVbD40/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_RVbD40/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.0038463904227537234 -0.09213067138080956; -0.0038463904227537234 0.0 0.26076882915854493; 0.09213067138080956 -0.26076882915854493 0.0])
dAA = so3([0.0 -0.07116196295438197 -0.17512210078844248; 0.07116196295438197 0.0 0.0907344472842716; 0.17512210078844248 -0.0907344472842716 0.0])
dAA = so3([0.0 -0.023942149506384888 0.018120226134431844; 0.023942149506384888 0.0 -0.11453322029566614; -0.018120226134431844 0.11453322029566614 0.0])
dAA = Quaternion(0.9894227739738384, [0.01625393043881301, -0.13936922617821115, -0.036804930127519245])
dAA = SO3([0.9971559705092611 0.06553562373043775 0.037216293474719095; -0.06870813645251339 0.9934252267250684 0.09157243521644225; -0.03097034812456485 -0.09386906268046567 0.9951027266611895])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8908717507720237 -0.12134033998552206 -0.4377488384548691; 0.21839709060537874 0.9593904118364118 0.17852940511710114; 0.3983092196918057 -0.2546498764353871 0.8811941930925027]), [-2.607688291585449, -0.9213067138080956, -0.03846390422753723])
xj = SE3(SO3([0.7494309261163897 0.14715246153281167 -0.6455226100185529; -0.22051151080457887 0.9747988055551896 -0.033792932557826345; 0.6242819559966575 0.1676706347367066 0.7629931832355892]), [1.1453322029566613, 0.18120226134431844, 0.23942149506384888])
Dx = SE3(SO3([0.8681450275879938 0.410771953782208 -0.27855091645907326; -0.4614661554914924 0.8746597913895928 -0.14838880234780577; 0.18268332822166267 0.2573648214349855 0.948888903021631]), [3.69492900775112, 0.5315802743516933, -1.2011790905121411])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
