Julia Version 1.5.0-DEV.415
Commit 4ee9be2781 (2020-03-06 18:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed DiffResults ────────────────── v1.0.2
  Installed CommonSubexpressions ───────── v0.2.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed NLSolversBase ──────────────── v7.6.1
  Installed FileIO ─────────────────────── v1.2.2
  Installed DiffRules ──────────────────── v1.0.1
  Installed Gridap ─────────────────────── v0.7.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+2
  Installed ArrayInterface ─────────────── v2.5.0
  Installed Reexport ───────────────────── v0.2.0
  Installed QuadGK ─────────────────────── v2.3.1
  Installed DocStringExtensions ────────── v0.8.1
  Installed Polynomials ────────────────── v0.6.1
  Installed LightXML ───────────────────── v0.8.1
  Installed ForwardDiff ────────────────── v0.10.9
  Installed Parameters ─────────────────── v0.12.0
  Installed Distances ──────────────────── v0.8.2
  Installed Parsers ────────────────────── v0.3.12
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FillArrays ─────────────────── v0.8.5
  Installed WriteVTK ───────────────────── v1.4.0
  Installed JLD2 ───────────────────────── v0.1.12
  Installed NLsolve ────────────────────── v4.3.0
  Installed Combinatorics ──────────────── v1.0.0
  Installed RecipesBase ────────────────── v0.8.0
  Installed FiniteDiff ─────────────────── v2.2.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed StaticArrays ───────────────── v0.12.1
  Installed LineSearches ───────────────── v7.0.1
  Installed BinaryProvider ─────────────── v0.5.8
  Installed TranscodingStreams ─────────── v0.9.5
  Installed Requires ───────────────────── v1.0.1
  Installed CodecZlib ──────────────────── v0.6.0
  Installed BSON ───────────────────────── v0.2.5
  Installed NaNMath ────────────────────── v0.3.3
  Installed JSON ───────────────────────── v0.21.0
  Installed DataStructures ─────────────── v0.17.10
#=#=#                                                                         ##O#- #                                                                                                                                                  0.9%###                                                                        4.9%#######                                                                   11.0%############                                                              18.0%####################                                                      27.9%#############################                                             41.6%########################################                                  56.7%########################################################                  79.0%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   56d4f2e9 + Gridap v0.7.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   4fba245c + ArrayInterface v2.5.0
   fbb218c0 + BSON v0.2.5
   b99e7846 + BinaryProvider v0.5.8
   944b1d66 + CodecZlib v0.6.0
   861a8166 + Combinatorics v1.0.0
   bbf7d656 + CommonSubexpressions v0.2.0
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   864edb3b + DataStructures v0.17.10
   163ba53b + DiffResults v1.0.2
   b552c78f + DiffRules v1.0.1
   b4f34e82 + Distances v0.8.2
   ffbed154 + DocStringExtensions v0.8.1
   442a2c76 + FastGaussQuadrature v0.4.2
   5789e2e9 + FileIO v1.2.2
   1a297f60 + FillArrays v0.8.5
   6a86dc24 + FiniteDiff v2.2.1
   f6369f11 + ForwardDiff v0.10.9
   56d4f2e9 + Gridap v0.7.1
   033835bb + JLD2 v0.1.12
   682c06a0 + JSON v0.21.0
   9c8b4983 + LightXML v0.8.1
   d3d80556 + LineSearches v7.0.1
   d41bc354 + NLSolversBase v7.6.1
   2774e3e8 + NLsolve v4.3.0
   77ba4419 + NaNMath v0.3.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+2
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   69de0a69 + Parsers v0.3.12
   f27b6e38 + Polynomials v0.6.1
   1fd47b50 + QuadGK v2.3.1
   3cdcf5f2 + RecipesBase v0.8.0
   189a3867 + Reexport v0.2.0
   ae029012 + Requires v1.0.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   3bb67fe8 + TranscodingStreams v0.9.5
   64499a7a + WriteVTK v1.4.0
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   a63ad114 + Mmap
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
   Building LightXML ─→ `~/.julia/packages/LightXML/W8FVT/deps/build.log`
   Building CodecZlib → `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
    Testing Gridap
     Status `/tmp/jl_8MRtD1/Project.toml`
   fbb218c0 BSON v0.2.5
   861a8166 Combinatorics v1.0.0
   ffbed154 DocStringExtensions v0.8.1
   442a2c76 FastGaussQuadrature v0.4.2
   5789e2e9 FileIO v1.2.2
   1a297f60 FillArrays v0.8.5
   56d4f2e9 Gridap v0.7.1
   033835bb JLD2 v0.1.12
   682c06a0 JSON v0.21.0
   d3d80556 LineSearches v7.0.1
   2774e3e8 NLsolve v4.3.0
   1fd47b50 QuadGK v2.3.1
   90137ffa StaticArrays v0.12.1
   64499a7a WriteVTK v1.4.0
   37e2e46d LinearAlgebra
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_8MRtD1/Manifest.toml`
   4fba245c ArrayInterface v2.5.0
   fbb218c0 BSON v0.2.5
   b99e7846 BinaryProvider v0.5.8
   944b1d66 CodecZlib v0.6.0
   861a8166 Combinatorics v1.0.0
   bbf7d656 CommonSubexpressions v0.2.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   864edb3b DataStructures v0.17.10
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   ffbed154 DocStringExtensions v0.8.1
   442a2c76 FastGaussQuadrature v0.4.2
   5789e2e9 FileIO v1.2.2
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   f6369f11 ForwardDiff v0.10.9
   56d4f2e9 Gridap v0.7.1
   033835bb JLD2 v0.1.12
   682c06a0 JSON v0.21.0
   9c8b4983 LightXML v0.8.1
   d3d80556 LineSearches v7.0.1
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   77ba4419 NaNMath v0.3.3
   efe28fd5 OpenSpecFun_jll v0.5.3+2
   bac558e1 OrderedCollections v1.1.0
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   1fd47b50 QuadGK v2.3.1
   3cdcf5f2 RecipesBase v0.8.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   3bb67fe8 TranscodingStreams v0.9.5
   64499a7a WriteVTK v1.4.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Test Summary: | Pass  Total
Helpers       |   13     13
199.765412 seconds (13.33 M allocations: 699.652 MiB, 0.29% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  2.084225 seconds (2.16 M allocations: 122.196 MiB, 1.82% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 27.072078 seconds (28.79 M allocations: 1.376 GiB, 3.56% gc time)
Test Summary: | Pass  Total
Algebra       |  677    677
 73.448969 seconds (79.72 M allocations: 3.708 GiB, 3.00% gc time)
Test Summary: | Pass  Total
TensorValues  |  227    227
 15.304385 seconds (13.16 M allocations: 671.576 MiB, 2.05% gc time)
Test Summary: | Pass  Total
Arrays        |  278    278
 24.697554 seconds (24.01 M allocations: 1.165 GiB, 3.44% gc time)
Test Summary: | Pass  Total
Fields        |  580    580
 59.922263 seconds (50.43 M allocations: 2.449 GiB, 2.40% gc time)
Test Summary: | Pass  Total
Polynomials   |  256    256
 24.170363 seconds (21.20 M allocations: 1.054 GiB, 4.07% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 16.472769 seconds (29.86 M allocations: 1.331 GiB, 9.49% gc time)
Test Summary: | Pass  Total
ReferenceFEs  |  893    893
 74.101514 seconds (71.92 M allocations: 3.547 GiB, 3.15% gc time)
Test Summary: | Pass  Total
Geometry      | 1600   1600
123.097169 seconds (118.21 M allocations: 5.964 GiB, 2.89% gc time)
Test Summary: | Pass  Total
FESpaces      |  493    493
219.455409 seconds (180.97 M allocations: 9.071 GiB, 2.87% gc time)
Test Summary: | Pass  Total
MultiField    |  110    110
 71.265790 seconds (53.69 M allocations: 2.697 GiB, 1.93% gc time)
Test Summary: |
Visualization | No tests
 27.304784 seconds (21.14 M allocations: 1.070 GiB, 2.28% gc time)
Test Summary: | Pass  Total
Gridap        |   17     17
484.031375 seconds (313.83 M allocations: 15.766 GiB, 2.38% gc time)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000000 seconds
  0.000084 seconds (1000 allocations: 31.250 KiB)
  0.000030 seconds
  0.000000 seconds
  0.000023 seconds
  0.000058 seconds
  0.000042 seconds
+++ runing suite for n = 100000 +++
  0.000000 seconds
  0.006557 seconds (100.00 k allocations: 3.052 MiB)
  0.002446 seconds
  0.000000 seconds
  0.002542 seconds
  0.003050 seconds
  0.002273 seconds
WARNING: replacing module ArraysBenchs.
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000004 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds (10 allocations: 320 bytes)
  0.000005 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000004 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 1000 +++
  0.000003 seconds
  0.000004 seconds
  0.000083 seconds (1000 allocations: 31.250 KiB)
  0.000344 seconds (1000 allocations: 31.250 KiB)
  0.000005 seconds
  0.000158 seconds
  0.000179 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 100000 +++
  0.000326 seconds
  0.000534 seconds
  0.007780 seconds (100.00 k allocations: 3.052 MiB)
  0.030681 seconds (100.00 k allocations: 3.052 MiB)
  0.000381 seconds
  0.010868 seconds
  0.016472 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1000 +++
  0.000023 seconds
  0.000022 seconds
  0.000069 seconds
  0.000064 seconds
+++ runing suite for n = 100000 +++
  0.002324 seconds
  0.002316 seconds
  0.006765 seconds
  0.006470 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000021 seconds
  0.000000 seconds
  0.000084 seconds
  0.000000 seconds
+++ runing suite for n = 100000 +++
  0.001704 seconds
  0.000000 seconds
  0.008249 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000003 seconds
  0.000003 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
+++ runing suite for n = 1000 +++
  0.000097 seconds
  0.000100 seconds
  0.000111 seconds
+++ runing suite for n = 100000 +++
  0.010065 seconds
  0.010051 seconds
  0.010977 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000005 seconds
  0.000005 seconds
+++ runing suite for n = 1000 +++
  0.000028 seconds
  0.000004 seconds
  0.000107 seconds
  0.000126 seconds
  0.000027 seconds
  0.000001 seconds
  0.000129 seconds
  0.000119 seconds
  0.000029 seconds
  0.000009 seconds
  0.000132 seconds
  0.000113 seconds
  0.000080 seconds
  0.000002 seconds
  0.000571 seconds
  0.000538 seconds
+++ runing suite for n = 100000 +++
  0.002847 seconds
  0.000466 seconds
  0.011001 seconds
  0.013783 seconds
  0.003239 seconds
  0.000136 seconds
  0.015521 seconds
  0.014333 seconds
  0.003210 seconds
  0.001066 seconds
  0.015637 seconds
  0.014249 seconds
  0.009407 seconds
  0.000130 seconds
  0.068607 seconds
  0.056476 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1000 +++
  0.000085 seconds
  0.000008 seconds
  0.000233 seconds
  0.000216 seconds (1 allocation: 112 bytes)
  0.000006 seconds
  0.000231 seconds
  0.000219 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 100000 +++
  0.007999 seconds
  0.000708 seconds
  0.021778 seconds
  0.019272 seconds (1 allocation: 112 bytes)
  0.000540 seconds
  0.021361 seconds
  0.019034 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000003 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000002 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000003 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000003 seconds
+++ runing suite for n = 1000 +++
  0.000113 seconds
  0.000118 seconds
  0.000482 seconds
  0.000105 seconds
  0.000115 seconds
  0.000346 seconds
  0.000124 seconds
  0.000131 seconds
  0.000116 seconds
  0.000123 seconds
  0.000131 seconds
  0.000111 seconds
  0.000270 seconds
+++ runing suite for n = 100000 +++
  0.011182 seconds
  0.011372 seconds
  0.043616 seconds
  0.009413 seconds
  0.015004 seconds
  0.055725 seconds
  0.010869 seconds
  0.032969 seconds
  0.031274 seconds
  0.032081 seconds
  0.012597 seconds
  0.010355 seconds
  0.023957 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000003 seconds
  0.000002 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000004 seconds
  0.000012 seconds
+++ runing suite for n = 1000 +++
  0.000102 seconds
  0.000313 seconds
  0.001199 seconds
+++ runing suite for n = 100000 +++
  0.009929 seconds
  0.031962 seconds
  0.087057 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000006 seconds
+++ runing suite for n = 1000 +++
  0.000071 seconds
  0.000639 seconds
+++ runing suite for n = 100000 +++
  0.007935 seconds
  0.056722 seconds
+++ runing suite for n = 1 +++
  0.000006 seconds
  0.000001 seconds
  0.000003 seconds
  0.115933 seconds (74.39 k allocations: 3.606 MiB)
  0.000000 seconds
  0.000002 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000003 seconds
  0.000006 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000020 seconds
  0.000046 seconds
  0.000001 seconds
  0.000002 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000021 seconds
  0.000119 seconds
  0.002107 seconds
  0.005028 seconds
  0.000032 seconds
  0.000171 seconds
  0.000001 seconds
+++ runing suite for n = 100000 +++
  0.002294 seconds
  0.012189 seconds
  0.167260 seconds
  0.399742 seconds
  0.003414 seconds
  0.016699 seconds
  0.000087 seconds
+++ runing suite for n = 1 +++
  0.000006 seconds
  0.000006 seconds
  0.000008 seconds
  0.000010 seconds (30 allocations: 1.406 KiB)
+++ runing suite for n = 1 +++
  0.000002 seconds
  0.000003 seconds
  0.000002 seconds
  0.000005 seconds (30 allocations: 1.406 KiB)
+++ runing suite for n = 10 +++
  0.000008 seconds
  0.000016 seconds
  0.000013 seconds
  0.000040 seconds (300 allocations: 14.062 KiB)
+++ runing suite for n = 1000 +++
  0.000874 seconds
  0.001519 seconds
  0.001216 seconds
  0.003948 seconds (30.00 k allocations: 1.373 MiB)
+++ runing suite for n = 100000 +++
  0.078256 seconds
  0.158584 seconds
  0.123497 seconds
  0.576786 seconds (3.00 M allocations: 137.329 MiB, 34.36% gc time)
    Testing Gridap tests passed 
