Julia Version 1.5.0-DEV.460
Commit 3935491dc5 (2020-03-13 16:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ───────────────────── v0.4.3
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed Requires ───────────────────── v1.0.1
  Installed ArgCheck ───────────────────── v2.0.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed DataStructures ─────────────── v0.17.10
  Installed DataAPI ────────────────────── v1.1.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed Parameters ─────────────────── v0.12.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed ProgressMeter ──────────────── v1.2.0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed InplaceOps ─────────────────── v0.3.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed LazyArrays ─────────────────── v0.15.0
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed FillArrays ─────────────────── v0.8.5
  Installed StatsBase ──────────────────── v0.32.2
  Installed OrderedCollections ─────────── v1.1.0
  Installed MacroTools ─────────────────── v0.5.4
  Installed SpecialFunctions ───────────── v0.10.0
#=#=#                                                                         ##O#- #                                                                       ######################################################################## 100.0%
#=#=#                                                                         ############################################################              84.4%######################################################################## 100.0%
#=#=#                                                                                                                                                    0.4%####                                                                       6.4%###########                                                               15.8%##################                                                        26.2%#############################                                             41.6%##########################################                                59.0%##########################################################                81.4%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.0
   1914dd2f + MacroTools v0.5.4
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
#=#=#                                                                         #############                                                             18.9%######################################################################## 100.0%
#=#=#                                                                         ##                                                                         3.0%#########                                                                 13.4%#################                                                         24.2%##############################                                            42.2%#############################################                             62.8%###################################################                       72.0%#######################################################################   98.8%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
     Status `/tmp/jl_O93gV7/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.5.2
   31c24e10 Distributions v0.22.5
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.10
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_O93gV7/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.4.0
   1520ce14 AbstractTrees v0.3.2
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.5.1
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.5.2
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v0.7.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   88cd18e8 ConsoleProgressMonitor v0.1.2
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.21.1
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   31c24e10 Distributions v0.22.5
   ced4e74d DistributionsAD v0.4.2
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.4.2
   da5c29d0 EllipsisNotation v0.4.0
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.2.2
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.1
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.1
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.0
   1d6d02ad LeftChildRightSiblingTrees v0.1.2
   6f1fad26 Libtask v0.3.3
   093fc24a LightGraphs v1.3.1
   6fdf6af0 LogDensityProblems v0.10.3
   e6f89c97 LoggingExtras v0.4.0
   c7f686f2 MCMCChains v3.0.4
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+7
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   90014a1f PDMats v0.9.12
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   33c8b6b6 ProgressLogging v0.1.2
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v0.8.4
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   5d786b92 TerminalLoggers v0.1.1
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.10
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.160082145
│   t_steps = 0.006961151
└   t_step / t_steps = 22.996505175652707
Sampling  0%|                               |  ETA: 5:52:37[K
  iterations:                    1
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.17564850146597435
  log_density:                   -11.920646260689649
  hamiltonian_energy:            16.246472256203056
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  5.683534511681767
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▊                            |  ETA: 0:00:27[K
  iterations:                    1051
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.4961359285125129
  log_density:                   -15.382678453143344
  hamiltonian_energy:            16.577555460735027
  hamiltonian_energy_error:      1.4566576645618685
  max_hamiltonian_energy_error:  1.4566576645618685
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.239618270137871
  nom_step_size:                 1.239618270137871
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9771709843856615, 0.9929 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▋                           |  ETA: 0:00:20[K
  iterations:                    1423
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.9025385540929353
  log_density:                   -18.52723780559952
  hamiltonian_energy:            22.933045252317477
  hamiltonian_energy_error:      0.3799463909038252
  max_hamiltonian_energy_error:  -0.800536623571773
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.859010074517117
  nom_step_size:                 0.859010074517117
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9771709843856615, 0.9929 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▎                          |  ETA: 0:00:18[K
  iterations:                    1634
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.9718128061439476
  log_density:                   -12.699099258279077
  hamiltonian_energy:            17.41015288782217
  hamiltonian_energy_error:      -0.36739256349510896
  max_hamiltonian_energy_error:  -0.6392682076168441
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.7626663392097727
  nom_step_size:                 0.7626663392097727
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9771709843856615, 0.9929 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████                          |  ETA: 0:00:15[K
  iterations:                    1928
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.652335618370203
  log_density:                   -13.784194167453517
  hamiltonian_energy:            23.66493826703875
  hamiltonian_energy_error:      -0.23430357151511672
  max_hamiltonian_energy_error:  1.3037074423782045
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8545702251702672
  nom_step_size:                 0.8545702251702672
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9771709843856615, 0.9929 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|█████▉                         |  ETA: 0:00:13[K
  iterations:                    2287
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9036532895841239
  log_density:                   -15.953668711236208
  hamiltonian_energy:            21.04858473231725
  hamiltonian_energy_error:      0.10203595428986745
  max_hamiltonian_energy_error:  0.2638518282522426
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▉                        |  ETA: 0:00:11[K
  iterations:                    2642
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.967783129944902
  log_density:                   -14.82485214246763
  hamiltonian_energy:            20.661418971021924
  hamiltonian_energy_error:      -0.11621199811904148
  max_hamiltonian_energy_error:  -0.18964225007694324
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████▏                      |  ETA: 0:00:09[K
  iterations:                    3138
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8069242181093284
  log_density:                   -18.40964773514233
  hamiltonian_energy:            24.03730974886816
  hamiltonian_energy_error:      0.3471100198720478
  max_hamiltonian_energy_error:  0.4056189655259175
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▎                     |  ETA: 0:00:08[K
  iterations:                    3570
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8082790995436154
  log_density:                   -12.251503124876201
  hamiltonian_energy:            22.92999292829406
  hamiltonian_energy_error:      -0.44701302393204756
  max_hamiltonian_energy_error:  0.7159463349633945
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 33%|██████████▎                    |  ETA: 0:00:07[K
  iterations:                    3974
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8454659401142202
  log_density:                   -17.814471841532956
  hamiltonian_energy:            24.68891693682039
  hamiltonian_energy_error:      0.16389263440086665
  max_hamiltonian_energy_error:  0.3910788150403981
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▋                   |  ETA: 0:00:06[K
  iterations:                    4490
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.792669389517593
  log_density:                   -14.611535462014896
  hamiltonian_energy:            16.820969116438373
  hamiltonian_energy_error:      0.3967575710745699
  max_hamiltonian_energy_error:  0.44908941178275086
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▋                  |  ETA: 0:00:05[K
  iterations:                    4911
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8507840289076164
  log_density:                   -11.300104821234754
  hamiltonian_energy:            13.448437136599662
  hamiltonian_energy_error:      0.1318085285432602
  max_hamiltonian_energy_error:  0.32950531916500303
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 44%|█████████████▊                 |  ETA: 0:00:05[K
  iterations:                    5332
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8228076296851871
  log_density:                   -14.474689459123697
  hamiltonian_energy:            16.703401653169443
  hamiltonian_energy_error:      0.3458933186350386
  max_hamiltonian_energy_error:  0.47101922715176414
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|███████████████                |  ETA: 0:00:04[K
  iterations:                    5797
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8481136303369355
  log_density:                   -17.301877595574812
  hamiltonian_energy:            20.37416243951452
  hamiltonian_energy_error:      0.44123064781310717
  max_hamiltonian_energy_error:  0.44123064781310717
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:04[K
  iterations:                    6139
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.861849033660925
  log_density:                   -16.210079394485103
  hamiltonian_energy:            24.40875417087368
  hamiltonian_energy_error:      -0.027240232220385963
  max_hamiltonian_energy_error:  0.3651974013033765
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████▏             |  ETA: 0:00:03[K
  iterations:                    6612
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9841840932035362
  log_density:                   -12.01199703967568
  hamiltonian_energy:            17.737072765895512
  hamiltonian_energy_error:      -0.43671482934406924
  max_hamiltonian_energy_error:  -0.43671482934406924
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▎            |  ETA: 0:00:03[K
  iterations:                    7044
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8394464212129051
  log_density:                   -16.487761391659042
  hamiltonian_energy:            21.953375021798003
  hamiltonian_energy_error:      0.14364311530034612
  max_hamiltonian_energy_error:  0.4399894474629029
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▏           |  ETA: 0:00:03[K
  iterations:                    7406
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8712171817131765
  log_density:                   -14.945436408377159
  hamiltonian_energy:            20.585725938534083
  hamiltonian_energy_error:      -0.005194214556809129
  max_hamiltonian_energy_error:  0.37683729010855416
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▍          |  ETA: 0:00:02[K
  iterations:                    7909
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9658663922397286
  log_density:                   -11.710230494541817
  hamiltonian_energy:            15.017149081460321
  hamiltonian_energy_error:      -0.07100685033172027
  max_hamiltonian_energy_error:  0.11302301646138879
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▌         |  ETA: 0:00:02[K
  iterations:                    8326
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9692127531535587
  log_density:                   -14.284435437678063
  hamiltonian_energy:            17.91508631744991
  hamiltonian_energy_error:      -0.11705999027313041
  max_hamiltonian_energy_error:  -0.5300127087469235
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▋        |  ETA: 0:00:02[K
  iterations:                    8762
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9323034303950991
  log_density:                   -15.47084027692516
  hamiltonian_energy:            19.104769715358835
  hamiltonian_energy_error:      0.1294142258359443
  max_hamiltonian_energy_error:  0.21173359404906122
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|████████████████████████       |  ETA: 0:00:01[K
  iterations:                    9269
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9056393451416233
  log_density:                   -16.27943900190161
  hamiltonian_energy:            24.75585057853212
  hamiltonian_energy_error:      -0.45658844685766553
  max_hamiltonian_energy_error:  -0.8497922255884731
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 81%|█████████████████████████      |  ETA: 0:00:01[K
  iterations:                    9683
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9043445969192995
  log_density:                   -12.698702517739438
  hamiltonian_energy:            17.054780644761507
  hamiltonian_energy_error:      0.001769176249972304
  max_hamiltonian_energy_error:  0.19290099573361275
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████▏    |  ETA: 0:00:01[K
  iterations:                    10118
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9210343393240734
  log_density:                   -13.865480600927398
  hamiltonian_energy:            17.664050538359998
  hamiltonian_energy_error:      0.0709091745239796
  max_hamiltonian_energy_error:  0.18540097047683446
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:01[K
  iterations:                    10540
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9938592796891063
  log_density:                   -13.259198921137727
  hamiltonian_energy:            22.007007157159862
  hamiltonian_energy_error:      -0.6432989238544451
  max_hamiltonian_energy_error:  -0.6432989238544451
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▎  |  ETA: 0:00:00[K
  iterations:                    10925
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6552315254263623
  log_density:                   -18.147255085907176
  hamiltonian_energy:            22.83401390654698
  hamiltonian_energy_error:      0.6661828319291452
  max_hamiltonian_energy_error:  0.8531277759421307
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▌ |  ETA: 0:00:00[K
  iterations:                    11420
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.928851762382122
  log_density:                   -13.6436320519209
  hamiltonian_energy:            20.331806971083004
  hamiltonian_energy_error:      -0.3584018403693534
  max_hamiltonian_energy_error:  -0.49629055128927035
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▎|  ETA: 0:00:00[K
  iterations:                    11728
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8460402410352429
  log_density:                   -17.41394638174919
  hamiltonian_energy:            22.258854997767003
  hamiltonian_energy_error:      0.3312133234781136
  max_hamiltonian_energy_error:  0.3312133234781136
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.78552149656764
  hamiltonian_energy:            16.3723371777268
  hamiltonian_energy_error:      -0.34691875832954366
  max_hamiltonian_energy_error:  -0.6316912902298881
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7119177569830063
  nom_step_size:                 0.7119177569830063
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0613231024841365, 1.0082 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.34541249 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0613231024841365, 1.0082 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.712), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0811402807115393
└   average_acceptance_rate = 0.864160768170499
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.253737705 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            5 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡇⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢱⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢆⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠈⡆⠀⢠⠢⡀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠑⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢱⢠⠃⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠣⡀⠀⠀⡎⠀⠀⠈⠃⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⠀⠀⠀⡸⢣⠀⠀⢠⠒⠒⠃⠀⠀⠈⠒⠢⠇⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⢠⠃⠀⢣⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⡠⠊⠁⠀⠀⢀⠤⣀⡠⠔⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣄⠀⢀⢎⣀⣀⣀⠤⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠈⠙⠓⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
