Julia Version 1.5.0-DEV.424
Commit 3dac6ddb31 (2020-03-09 17:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ProgressMeter ──────────────── v1.2.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed ArgCheck ───────────────────── v2.0.0
  Installed Parameters ─────────────────── v0.12.0
  Installed FillArrays ─────────────────── v0.8.5
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed LazyArrays ─────────────────── v0.15.0
  Installed DataStructures ─────────────── v0.17.10
  Installed OrderedCollections ─────────── v1.1.0
  Installed DataAPI ────────────────────── v1.1.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed Missings ───────────────────── v0.4.3
  Installed InplaceOps ─────────────────── v0.3.0
  Installed StatsBase ──────────────────── v0.32.2
  Installed SpecialFunctions ───────────── v0.10.0
  Installed MacroTools ─────────────────── v0.5.4
  Installed OpenSpecFun_jll ────────────── v0.5.3+2
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Requires ───────────────────── v1.0.1
  Installed StatsFuns ──────────────────── v0.9.4
  Installed StaticArrays ───────────────── v0.12.1
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.2%#####                                                                      7.8%##########                                                                14.1%#################                                                         23.8%#########################                                                 36.1%####################################                                      50.5%#################################################                         68.4%####################################################################      94.7%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.0
   1914dd2f + MacroTools v0.5.4
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+2
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
#=#=#                                                                         #                                                                          2.4%#####                                                                      7.9%##########                                                                14.1%################                                                          22.8%########################                                                  33.8%##################################                                        48.1%###########################################                               60.1%########################################################                  78.0%######################################################################## 100.0%
#=#=#                                                                         ##############################################################            87.5%######################################################################## 100.0%
#=#=#                                                                         ###############                                                           21.1%##########################################                                58.9%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
┌ Error: Error building `Libtask`: 
│ fatal: not a git repository (or any parent up to mount point /home)
│ Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
│ ┌ Error: Download failed: curl: (22) The requested URL returned error: 404 Not Found
│ └ @ Base download.jl:43
│ ERROR: LoadError: failed process: Process(`git -C /home/pkgeval/.julia/packages/Libtask/04fjt tag`, ProcessExited(128)) [128]
│ 
│ Stacktrace:
│  [1] pipeline_error at ./process.jl:525 [inlined]
│  [2] (::Base.var"#571#572"{Base.Process})() at ./process.jl:319
│  [3] iterate(::Base.EachLine{Base.PipeEndpoint}, ::Nothing) at ./io.jl:964 (repeats 2 times)
│  [4] _collect(::UnitRange{Int64}, ::Base.EachLine{Base.PipeEndpoint}, ::Base.HasEltype, ::Base.SizeUnknown) at ./array.jl:613
│  [5] collect at ./array.jl:602 [inlined]
│  [6] #readlines#307 at ./io.jl:498 [inlined]
│  [7] readlines at ./io.jl:498 [inlined]
│  [8] find_prev_tag(::String) at /home/pkgeval/.julia/packages/Libtask/04fjt/deps/build.jl:3
│  [9] include_build_script(::SubString{String}, ::Bool) at /home/pkgeval/.julia/packages/Libtask/04fjt/deps/build.jl:44
│  [10] top-level scope at /home/pkgeval/.julia/packages/Libtask/04fjt/deps/build.jl:64
│  [11] include(::String) at ./client.jl:441
│  [12] top-level scope at none:5
│ in expression starting at /home/pkgeval/.julia/packages/Libtask/04fjt/deps/build.jl:64
└ @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:912
     Status `/tmp/jl_PAT4Pr/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.5.2
   31c24e10 Distributions v0.22.5
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.9
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_PAT4Pr/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.4.0
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.5.0
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.5.2
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v0.7.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.6.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.19.0
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   31c24e10 Distributions v0.22.5
   ced4e74d DistributionsAD v0.4.2
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.4.1
   da5c29d0 EllipsisNotation v0.4.0
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.2.2
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.1
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.1
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.0
   6f1fad26 Libtask v0.3.2
   093fc24a LightGraphs v1.3.1
   6fdf6af0 LogDensityProblems v0.10.3
   c7f686f2 MCMCChains v3.0.4
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+7
   efe28fd5 OpenSpecFun_jll v0.5.3+2
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   90014a1f PDMats v0.9.11
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v0.8.4
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.9
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.137352406
│   t_steps = 0.007914017
└   t_step / t_steps = 17.35558642343073
Sampling  0%|                               |  ETA: 5:31:14[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               2.296413205840798e-6
  log_density:                   -10.934325805176558
  hamiltonian_energy:            19.208959473177828
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  12.984162127998502
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▏                           |  ETA: 0:00:23[K
  iterations:                    1215
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9713941847388686
  log_density:                   -16.262755354463764
  hamiltonian_energy:            20.274084455656435
  hamiltonian_energy_error:      0.07760188890782871
  max_hamiltonian_energy_error:  -0.3436257808313776
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8266004168641191
  nom_step_size:                 0.8266004168641191
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8628735435892168, 1.0514 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▊                           |  ETA: 0:00:20[K
  iterations:                    1466
  n_steps:                       159
  is_accept:                     true
  acceptance_rate:               0.9445351822677382
  log_density:                   -13.803788159419007
  hamiltonian_energy:            18.401986514455032
  hamiltonian_energy_error:      -0.0727683599736686
  max_hamiltonian_energy_error:  -0.31943698070224613
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.8367751667769259
  nom_step_size:                 0.8367751667769259
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8628735435892168, 1.0514 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:17[K
  iterations:                    1688
  n_steps:                       47
  is_accept:                     true
  acceptance_rate:               0.8963636759077497
  log_density:                   -16.446124573084532
  hamiltonian_energy:            20.61564565600389
  hamiltonian_energy_error:      0.29238573534036405
  max_hamiltonian_energy_error:  0.3875184781660366
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8962399603408181
  nom_step_size:                 0.8962399603408181
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8628735435892168, 1.0514 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▎                         |  ETA: 0:00:15[K
  iterations:                    2019
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9589216913004525
  log_density:                   -16.98239460531755
  hamiltonian_energy:            24.49592124173289
  hamiltonian_energy_error:      0.017644909777960294
  max_hamiltonian_energy_error:  0.09846626884320742
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▎                        |  ETA: 0:00:12[K
  iterations:                    2410
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7791335772622249
  log_density:                   -15.938034157337812
  hamiltonian_energy:            25.155739498599225
  hamiltonian_energy_error:      -0.025179151558951673
  max_hamiltonian_energy_error:  0.44186840654090886
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████▎                       |  ETA: 0:00:10[K
  iterations:                    2807
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9642380468062172
  log_density:                   -15.17367152618274
  hamiltonian_energy:            21.071063456954995
  hamiltonian_energy_error:      -0.0893021646972798
  max_hamiltonian_energy_error:  -0.26088954391733665
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▌                      |  ETA: 0:00:09[K
  iterations:                    3276
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.99870117854154
  log_density:                   -14.38911215994878
  hamiltonian_energy:            22.318869833739196
  hamiltonian_energy_error:      -0.55133030052097
  max_hamiltonian_energy_error:  -0.5668810825996005
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▌                     |  ETA: 0:00:08[K
  iterations:                    3663
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.840048723317837
  log_density:                   -19.509679685067184
  hamiltonian_energy:            26.125806902238036
  hamiltonian_energy_error:      0.24656343138293124
  max_hamiltonian_energy_error:  0.570548055681094
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▌                    |  ETA: 0:00:07[K
  iterations:                    4053
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9614180336268692
  log_density:                   -17.777126226747505
  hamiltonian_energy:            24.462077193086024
  hamiltonian_energy_error:      -0.12315041199360977
  max_hamiltonian_energy_error:  -0.48955478113709106
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▋                   |  ETA: 0:00:06[K
  iterations:                    4518
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.969434715869667
  log_density:                   -12.720204418911733
  hamiltonian_energy:            16.762524499060007
  hamiltonian_energy_error:      -0.09707266118768132
  max_hamiltonian_energy_error:  -0.16555547729680598
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▊                  |  ETA: 0:00:05[K
  iterations:                    4928
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9967370148962252
  log_density:                   -14.26626952379754
  hamiltonian_energy:            16.971983679961237
  hamiltonian_energy_error:      -0.09901815464953145
  max_hamiltonian_energy_error:  -0.43308669180531467
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 44%|█████████████▋                 |  ETA: 0:00:05[K
  iterations:                    5271
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.95868022356245
  hamiltonian_energy:            15.004361191222937
  hamiltonian_energy_error:      -0.19589511004728521
  max_hamiltonian_energy_error:  -0.301085192012744
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▉                |  ETA: 0:00:04[K
  iterations:                    5753
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7791954872731769
  log_density:                   -15.776721136098047
  hamiltonian_energy:            25.130703670746165
  hamiltonian_energy_error:      -0.01454930948543165
  max_hamiltonian_energy_error:  0.4947609030746314
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▊               |  ETA: 0:00:04[K
  iterations:                    6099
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9758522222909024
  log_density:                   -12.371375559904841
  hamiltonian_energy:            14.339447752494738
  hamiltonian_energy_error:      0.039754691263212294
  max_hamiltonian_energy_error:  -0.08250964334379418
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▋              |  ETA: 0:00:03[K
  iterations:                    6456
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9858694733702532
  log_density:                   -18.83440548127291
  hamiltonian_energy:            22.454536257579694
  hamiltonian_energy_error:      0.07763795454352973
  max_hamiltonian_energy_error:  -0.5760302412840659
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▊             |  ETA: 0:00:03[K
  iterations:                    6847
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8603347764118742
  log_density:                   -15.442076310171743
  hamiltonian_energy:            20.5950686168643
  hamiltonian_energy_error:      0.1587677407615935
  max_hamiltonian_energy_error:  0.2638091566078984
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|██████████████████▉            |  ETA: 0:00:03[K
  iterations:                    7285
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8274792572126345
  log_density:                   -18.16657308958243
  hamiltonian_energy:            23.94503410236863
  hamiltonian_energy_error:      0.3235372650539041
  max_hamiltonian_energy_error:  0.41456030347951156
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████           |  ETA: 0:00:02[K
  iterations:                    7756
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9597160933854852
  log_density:                   -16.467063715502512
  hamiltonian_energy:            23.66598437379236
  hamiltonian_energy_error:      -0.0748066011058448
  max_hamiltonian_energy_error:  0.11291651631814403
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████▏         |  ETA: 0:00:02[K
  iterations:                    8165
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.796222378268839
  hamiltonian_energy:            14.909616619746467
  hamiltonian_energy_error:      -0.1485492011798133
  max_hamiltonian_energy_error:  -0.15857228692361147
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████▏        |  ETA: 0:00:02[K
  iterations:                    8551
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9673825124068861
  log_density:                   -14.635671973719742
  hamiltonian_energy:            22.429561493677586
  hamiltonian_energy_error:      -0.32087982580303276
  max_hamiltonian_energy_error:  -0.32087982580303276
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:01[K
  iterations:                    9102
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9577297322788335
  log_density:                   -10.482644463965357
  hamiltonian_energy:            13.09984888492517
  hamiltonian_energy_error:      -0.11073823402318439
  max_hamiltonian_energy_error:  -0.12551758266880952
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▌      |  ETA: 0:00:01[K
  iterations:                    9501
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9991086750106961
  log_density:                   -11.475576799970003
  hamiltonian_energy:            17.739475784738644
  hamiltonian_energy_error:      -0.5421291756067887
  max_hamiltonian_energy_error:  -0.5421291756067887
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▍     |  ETA: 0:00:01[K
  iterations:                    9845
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7689279017464269
  log_density:                   -13.048695923816595
  hamiltonian_energy:            22.12311479419443
  hamiltonian_energy_error:      -0.23852030769862864
  max_hamiltonian_energy_error:  0.6055188957300217
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▌    |  ETA: 0:00:01[K
  iterations:                    10260
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8311105607176172
  log_density:                   -10.939342995975133
  hamiltonian_energy:            19.263795126811637
  hamiltonian_energy_error:      -0.3818976885222476
  max_hamiltonian_energy_error:  0.5862368031167975
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▍   |  ETA: 0:00:01[K
  iterations:                    10604
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8994052502486178
  log_density:                   -11.711690131146845
  hamiltonian_energy:            17.533402912927055
  hamiltonian_energy_error:      -0.26425285548970834
  max_hamiltonian_energy_error:  -0.3150735142165857
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▋  |  ETA: 0:00:00[K
  iterations:                    11096
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9383460642523982
  log_density:                   -14.011182263539695
  hamiltonian_energy:            17.43431616584863
  hamiltonian_energy_error:      0.11517248283552206
  max_hamiltonian_energy_error:  0.12157919808662143
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▊ |  ETA: 0:00:00[K
  iterations:                    11523
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8955034902621252
  log_density:                   -13.898939252158302
  hamiltonian_energy:            18.31305959704364
  hamiltonian_energy_error:      0.0845667140431523
  max_hamiltonian_energy_error:  0.24069269132108317
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 99%|██████████████████████████████▊|  ETA: 0:00:00[K
  iterations:                    11922
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6738206265954219
  log_density:                   -11.638333885179021
  hamiltonian_energy:            19.99692295085279
  hamiltonian_energy_error:      0.011908876519083123
  max_hamiltonian_energy_error:  0.7966875611342346
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6915625659194354
  log_density:                   -20.646804175015067
  hamiltonian_energy:            23.05153257530309
  hamiltonian_energy_error:      0.929260446029474
  max_hamiltonian_energy_error:  0.929260446029474
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7127668454960838
  nom_step_size:                 0.7127668454960838
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.007767484643302, 0.97118 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.417892288 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.007767484643302, 0.97118 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.713), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.098166651660043
└   average_acceptance_rate = 0.8662834666715841
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.882949751 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢣⠀⠀⡸⢣⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⡀⠀⠀⢠⠒⠤⠤⠤⡄⠀⠀⠀⠀⡇⠈⡆⢰⠁⠀⠱│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⢸⢣⠀⠀⡎⠀⠀⠀⠀⠘⡄⠀⠀⢸⠀⠀⠸⠇⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⡇⠈⡆⡸⠀⠀⠀⠀⠀⠀⠈⠢⢄⡇⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢆⠀⠀⠀⢀⠜⠁⠀⠀⠀⡠⠔⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡈⢆⠀⢀⠎⠀⢀⣀⠤⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⡌⢲⠚⠊⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
