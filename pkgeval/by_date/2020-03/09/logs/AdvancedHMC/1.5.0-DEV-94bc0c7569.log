Julia Version 1.5.0-DEV.421
Commit 94bc0c7569 (2020-03-08 11:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Requires ───────────────────── v1.0.1
  Installed ProgressMeter ──────────────── v1.2.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed Missings ───────────────────── v0.4.3
  Installed DataAPI ────────────────────── v1.1.0
  Installed MacroTools ─────────────────── v0.5.4
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed FillArrays ─────────────────── v0.8.5
  Installed Parameters ─────────────────── v0.12.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed InplaceOps ─────────────────── v0.3.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed DataStructures ─────────────── v0.17.10
  Installed OpenSpecFun_jll ────────────── v0.5.3+2
  Installed LazyArrays ─────────────────── v0.15.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed StatsBase ──────────────────── v0.32.2
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                                                                                                    0.7%#####                                                                      7.2%##########                                                                15.2%##################                                                        25.4%###########################                                               38.3%######################################                                    53.5%#####################################################                     75.0%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.0
   1914dd2f + MacroTools v0.5.4
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+2
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
#=#=#                                                                         ##                                                                         3.5%##########                                                                13.9%##################                                                        26.4%################################                                          45.0%###############################################                           66.5%###########################################################               82.0%######################################################################    97.4%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         #############                                                             18.9%################################################                          67.7%######################################################################## 100.0%
#=#=#                                                                         ###################################################                       71.3%######################################################################## 100.0%
┌ Error: Error building `Libtask`: 
│ fatal: not a git repository (or any parent up to mount point /home)
│ Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
│ ┌ Error: Download failed: curl: (22) The requested URL returned error: 404 Not Found
│ └ @ Base download.jl:43
│ ERROR: LoadError: failed process: Process(`git -C /home/pkgeval/.julia/packages/Libtask/04fjt tag`, ProcessExited(128)) [128]
│ 
│ Stacktrace:
│  [1] pipeline_error at ./process.jl:525 [inlined]
│  [2] (::Base.var"#571#572"{Base.Process})() at ./process.jl:319
│  [3] iterate(::Base.EachLine{Base.PipeEndpoint}, ::Nothing) at ./io.jl:964 (repeats 2 times)
│  [4] _collect(::UnitRange{Int64}, ::Base.EachLine{Base.PipeEndpoint}, ::Base.HasEltype, ::Base.SizeUnknown) at ./array.jl:613
│  [5] collect at ./array.jl:602 [inlined]
│  [6] #readlines#307 at ./io.jl:498 [inlined]
│  [7] readlines at ./io.jl:498 [inlined]
│  [8] find_prev_tag(::String) at /home/pkgeval/.julia/packages/Libtask/04fjt/deps/build.jl:3
│  [9] include_build_script(::SubString{String}, ::Bool) at /home/pkgeval/.julia/packages/Libtask/04fjt/deps/build.jl:44
│  [10] top-level scope at /home/pkgeval/.julia/packages/Libtask/04fjt/deps/build.jl:64
│  [11] include(::String) at ./client.jl:441
│  [12] top-level scope at none:5
│ in expression starting at /home/pkgeval/.julia/packages/Libtask/04fjt/deps/build.jl:64
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:912
     Status `/tmp/jl_L2YH3F/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.5.2
   31c24e10 Distributions v0.22.5
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.9
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_L2YH3F/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.4.0
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.5.0
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.5.2
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v0.7.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.6.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.19.0
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   31c24e10 Distributions v0.22.5
   ced4e74d DistributionsAD v0.4.2
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.4.1
   da5c29d0 EllipsisNotation v0.4.0
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.2.2
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.1
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.1
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.0
   6f1fad26 Libtask v0.3.2
   093fc24a LightGraphs v1.3.1
   6fdf6af0 LogDensityProblems v0.10.3
   c7f686f2 MCMCChains v3.0.4
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+7
   efe28fd5 OpenSpecFun_jll v0.5.3+2
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   90014a1f PDMats v0.9.11
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v0.8.4
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.9
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.174673995
│   t_steps = 0.007484687
└   t_step / t_steps = 23.337514982256437
Sampling  0%|                               |  ETA: 5:25:35[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.3268941155051706
  log_density:                   -14.869896346907243
  hamiltonian_energy:            19.90136173191616
  hamiltonian_energy_error:      0.7037295171264404
  max_hamiltonian_energy_error:  1.5718966721611238
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9
  nom_step_size:                 0.9
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▍                            |  ETA: 0:00:30[K
  iterations:                    943
  n_steps:                       47
  is_accept:                     true
  acceptance_rate:               0.9887718069553807
  log_density:                   -15.889129003205957
  hamiltonian_energy:            21.13845588652349
  hamiltonian_energy_error:      0.0296884075575079
  max_hamiltonian_energy_error:  0.05524795002080296
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.399895485549059
  nom_step_size:                 0.399895485549059
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9723933592744562, 0.9301 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▊                            |  ETA: 0:00:27[K
  iterations:                    1059
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9419232338098976
  log_density:                   -11.034896812744138
  hamiltonian_energy:            14.327252051244045
  hamiltonian_energy_error:      -0.3421256798143961
  max_hamiltonian_energy_error:  -0.3421256798143961
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.920364048399507
  nom_step_size:                 0.920364048399507
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9723933592744562, 0.9301 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:23[K
  iterations:                    1288
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8581154794539262
  log_density:                   -13.778569046906004
  hamiltonian_energy:            15.653335676444632
  hamiltonian_energy_error:      0.30985117918687344
  max_hamiltonian_energy_error:  0.30985117918687344
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8226923412350854
  nom_step_size:                 0.8226923412350854
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9723933592744562, 0.9301 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▊                           |  ETA: 0:00:20[K
  iterations:                    1471
  n_steps:                       79
  is_accept:                     true
  acceptance_rate:               0.843985146888501
  log_density:                   -13.697158331040868
  hamiltonian_energy:            20.41611738553928
  hamiltonian_energy_error:      -0.14384172370845505
  max_hamiltonian_energy_error:  0.5917830067989343
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.7969569634015852
  nom_step_size:                 0.7969569634015852
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9723933592744562, 0.9301 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▌                          |  ETA: 0:00:17[K
  iterations:                    1732
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.968125119283765
  log_density:                   -15.01792191827202
  hamiltonian_energy:            17.8856117322514
  hamiltonian_energy_error:      -0.04124078533178377
  max_hamiltonian_energy_error:  -0.6201861663210373
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.9211857402046956
  nom_step_size:                 0.9211857402046956
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9723933592744562, 0.9301 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████▏                         |  ETA: 0:00:16[K
  iterations:                    1966
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9981672774755296
  log_density:                   -12.20745471723533
  hamiltonian_energy:            17.056795381820827
  hamiltonian_energy_error:      -0.11243974168973025
  max_hamiltonian_energy_error:  -0.11243974168973025
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.4529631017283442
  nom_step_size:                 0.4529631017283442
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|██████                         |  ETA: 0:00:13[K
  iterations:                    2301
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9752965942791393
  log_density:                   -14.864163363779927
  hamiltonian_energy:            18.514031792245966
  hamiltonian_energy_error:      0.02880884823260743
  max_hamiltonian_energy_error:  -0.24754908778624696
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▊                        |  ETA: 0:00:12[K
  iterations:                    2606
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.500763862145845
  hamiltonian_energy:            17.88019381585249
  hamiltonian_energy_error:      -0.36318550039528574
  max_hamiltonian_energy_error:  -0.37450173555097876
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▊                       |  ETA: 0:00:10[K
  iterations:                    2976
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.70129697899726
  log_density:                   -16.679401355519882
  hamiltonian_energy:            19.80159669447864
  hamiltonian_energy_error:      0.5259204285772228
  max_hamiltonian_energy_error:  0.6677137564193529
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▌                      |  ETA: 0:00:09[K
  iterations:                    3303
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8171603128807449
  log_density:                   -13.058097124118163
  hamiltonian_energy:            15.05949794969913
  hamiltonian_energy_error:      0.2898173112926852
  max_hamiltonian_energy_error:  0.37611261370452276
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▋                     |  ETA: 0:00:08[K
  iterations:                    3735
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7779268350340477
  log_density:                   -16.532510899528432
  hamiltonian_energy:            20.59703063324138
  hamiltonian_energy_error:      0.2505713141154793
  max_hamiltonian_energy_error:  0.5880225300126796
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▌                    |  ETA: 0:00:07[K
  iterations:                    4056
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.886458029218576
  log_density:                   -13.56761585597324
  hamiltonian_energy:            17.032869977451092
  hamiltonian_energy_error:      0.09502267379592766
  max_hamiltonian_energy_error:  0.3809809959410586
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▌                   |  ETA: 0:00:06[K
  iterations:                    4473
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.994644141052901
  log_density:                   -13.495498412599417
  hamiltonian_energy:            20.797702607206382
  hamiltonian_energy_error:      -0.6550909157906446
  max_hamiltonian_energy_error:  -0.6794577439023683
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▍                  |  ETA: 0:00:06[K
  iterations:                    4802
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.4649466499127364
  log_density:                   -19.989072402881497
  hamiltonian_energy:            22.136199021674713
  hamiltonian_energy_error:      1.2430412376766569
  max_hamiltonian_energy_error:  1.2430412376766569
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▌                 |  ETA: 0:00:05[K
  iterations:                    5213
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6721661498163566
  log_density:                   -18.442437772252333
  hamiltonian_energy:            22.78390494431477
  hamiltonian_energy_error:      0.6809439078686736
  max_hamiltonian_energy_error:  0.8138166956928252
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 46%|██████████████▍                |  ETA: 0:00:05[K
  iterations:                    5545
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.386241150928647
  hamiltonian_energy:            19.693184861039157
  hamiltonian_energy_error:      -0.05920738314774354
  max_hamiltonian_energy_error:  -0.2902150715277685
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▎               |  ETA: 0:00:04[K
  iterations:                    5906
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9325759226833128
  log_density:                   -16.30007625755897
  hamiltonian_energy:            18.67482000300014
  hamiltonian_energy_error:      0.24576094953027194
  max_hamiltonian_energy_error:  -0.427078948553941
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████▏              |  ETA: 0:00:04[K
  iterations:                    6261
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7540153439364291
  log_density:                   -14.736939782823615
  hamiltonian_energy:            23.545752710844564
  hamiltonian_energy_error:      -0.07261387116205853
  max_hamiltonian_energy_error:  0.579082723845616
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████▎             |  ETA: 0:00:04[K
  iterations:                    6659
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5794250567951009
  log_density:                   -14.072779623131018
  hamiltonian_energy:            19.38309715556815
  hamiltonian_energy_error:      0.4306808052180173
  max_hamiltonian_energy_error:  1.064818756380813
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|██████████████████             |  ETA: 0:00:03[K
  iterations:                    6991
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9078074145782047
  log_density:                   -12.176875108547431
  hamiltonian_energy:            16.80310134026352
  hamiltonian_energy_error:      -0.08865941200514627
  max_hamiltonian_energy_error:  0.24334103833567866
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▏           |  ETA: 0:00:03[K
  iterations:                    7386
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7060409147500337
  log_density:                   -11.788192702593319
  hamiltonian_energy:            14.96089072079058
  hamiltonian_energy_error:      0.2554352278843872
  max_hamiltonian_energy_error:  0.6562417433107637
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████           |  ETA: 0:00:03[K
  iterations:                    7743
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6712028368551746
  log_density:                   -11.535708407227748
  hamiltonian_energy:            18.27723957765272
  hamiltonian_energy_error:      0.015204340742744904
  max_hamiltonian_energy_error:  0.8967771389964057
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████          |  ETA: 0:00:02[K
  iterations:                    8131
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9928313118600608
  log_density:                   -13.921628508216504
  hamiltonian_energy:            18.17160735000616
  hamiltonian_energy_error:      -0.05806349944620948
  max_hamiltonian_energy_error:  -0.10429413799684539
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|█████████████████████▉         |  ETA: 0:00:02[K
  iterations:                    8469
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9958930440992445
  log_density:                   -11.902704740518834
  hamiltonian_energy:            15.667605283667806
  hamiltonian_energy_error:      -0.18018360459750227
  max_hamiltonian_energy_error:  -0.18018360459750227
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 74%|██████████████████████▉        |  ETA: 0:00:02[K
  iterations:                    8856
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9869728191697368
  log_density:                   -13.802076723062722
  hamiltonian_energy:            22.527077273918284
  hamiltonian_energy_error:      -0.8606467412040324
  max_hamiltonian_energy_error:  -0.9554214221455837
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|███████████████████████▊       |  ETA: 0:00:02[K
  iterations:                    9208
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.826043597207568
  log_density:                   -12.802573882790538
  hamiltonian_energy:            19.158123611483518
  hamiltonian_energy_error:      -0.08484832140474197
  max_hamiltonian_energy_error:  0.3936791803085242
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▊      |  ETA: 0:00:01[K
  iterations:                    9591
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5885482313194894
  log_density:                   -13.54984099682844
  hamiltonian_energy:            20.09329046589226
  hamiltonian_energy_error:      0.16985054402871924
  max_hamiltonian_energy_error:  0.8683697613349857
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▊     |  ETA: 0:00:01[K
  iterations:                    9945
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8808511161232683
  log_density:                   -15.568094571308105
  hamiltonian_energy:            20.730114362711767
  hamiltonian_energy_error:      0.055550510116059826
  max_hamiltonian_energy_error:  0.43478476964542523
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▋    |  ETA: 0:00:01[K
  iterations:                    10322
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7974170510629129
  log_density:                   -14.788722289901129
  hamiltonian_energy:            18.197441193129713
  hamiltonian_energy_error:      0.2875577608269495
  max_hamiltonian_energy_error:  0.3975130490772756
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▋   |  ETA: 0:00:01[K
  iterations:                    10670
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7004599216201601
  log_density:                   -11.868657711781111
  hamiltonian_energy:            18.44097656506132
  hamiltonian_energy_error:      0.02238309776053171
  max_hamiltonian_energy_error:  0.7269946741216664
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▌  |  ETA: 0:00:00[K
  iterations:                    11046
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.81481153993409
  log_density:                   -14.45715484472279
  hamiltonian_energy:            17.538280203755992
  hamiltonian_energy_error:      0.2528761737183949
  max_hamiltonian_energy_error:  0.4036608594018176
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▌ |  ETA: 0:00:00[K
  iterations:                    11396
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9980505594177213
  log_density:                   -16.04100989158777
  hamiltonian_energy:            22.815697910817903
  hamiltonian_energy_error:      -0.6901280372857848
  max_hamiltonian_energy_error:  -1.2251261423957374
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▍|  ETA: 0:00:00[K
  iterations:                    11757
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9353541516493048
  log_density:                   -11.361427296792813
  hamiltonian_energy:            14.16269871051498
  hamiltonian_energy_error:      -0.01427565154159538
  max_hamiltonian_energy_error:  0.132786064761083
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8121630326860808
  log_density:                   -13.925976476180349
  hamiltonian_energy:            15.838056794677575
  hamiltonian_energy_error:      0.36660985564156334
  max_hamiltonian_energy_error:  0.40117056059974665
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.751202058420485
  nom_step_size:                 0.751202058420485
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9477504576289344, 1.0193 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.930491394 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9477504576289344, 1.0193 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.751), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0656263148326002
└   average_acceptance_rate = 0.8527934669874029
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.921420829 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢸⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠈⡆│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢆⠀⡜⠀⠀⢣│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢄⠀⢀⠔⢆⠀⢠⠃⠀⠑⠇⠀⠀⠸│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠑⠃⠀⠀⠑⠃⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⢠⣤⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠒⠢⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡀⠀⠀⠀⠀⡮⠟⡄⠀⠀⠀⠀⡠⠒⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠱⡀⠀⢠⡾⠀⠀⠘⠢⣀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢆⠱⣠⠗⠃⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠣⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
