Julia Version 1.5.0-DEV.424
Commit 3dac6ddb31 (2020-03-09 17:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_kuPRwc/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_kuPRwc/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.007257615196017602 0.04374145323024331; -0.007257615196017602 0.0 0.04261719636034012; -0.04374145323024331 -0.04261719636034012 0.0])
dAA = so3([0.0 0.1912574600820959 0.3199947571816091; -0.1912574600820959 0.0 -0.054572698600894934; -0.3199947571816091 0.054572698600894934 0.0])
dAA = so3([0.0 0.10473196750042231 0.15190958082991465; -0.10473196750042231 0.0 -0.1397577945683489; -0.15190958082991465 0.1397577945683489 0.0])
dAA = Quaternion(0.99868023489214, [0.0420885235740731, 0.022354521822369723, 0.019147322873656017])
dAA = SO3([0.9947127765320576 0.08978895256291515 -0.04984411902661624; -0.08792598763768363 0.9953868767681411 0.038392528644299616; 0.053061406896376395 -0.03380694537251234 0.9980188262466583])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.5968748674029517 0.4611665163895718 0.6565560424090359; -0.35985748429331127 0.8852560588989288 -0.2946596361581031; -0.7171073724769521 -0.06039167445801837 0.694341315201219]), [-0.4261719636034012, 0.43741453230243305, -0.07257615196017601])
xj = SE3(SO3([0.9892247540526075 -0.08793216134435393 0.11705691338348573; 0.11070369876809037 0.9724773564422204 -0.2050182486663428; -0.09580749996019246 0.21576775989118707 0.9717330892497779]), [1.3975779456834887, 1.5190958082991464, -1.047319675004223])
Dx = SE3(SO3([0.6193101039262573 -0.5571664035251804 -0.5531912815271623; 0.5599844291779783 0.8073095270928228 -0.18619550623840642; 0.5503384724449691 -0.19446574569311276 0.8119794575597091]), [1.3982951491434452, 1.8574836893289852, 0.20186151178674067])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
