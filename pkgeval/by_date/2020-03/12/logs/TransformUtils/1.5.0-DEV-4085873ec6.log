Julia Version 1.5.0-DEV.431
Commit 4085873ec6 (2020-03-10 23:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_JBwQGG/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_JBwQGG/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.2570123984938372 -0.007822431474850995; -0.2570123984938372 0.0 0.13359512961809278; 0.007822431474850995 -0.13359512961809278 0.0])
dAA = so3([0.0 -0.04052052766668811 0.0375650833021724; 0.04052052766668811 0.0 0.14376519802067614; -0.0375650833021724 -0.14376519802067614 0.0])
dAA = so3([0.0 0.036345889531682905 -0.027644697831311058; -0.036345889531682905 0.0 0.043699742926830536; 0.027644697831311058 -0.043699742926830536 0.0])
dAA = Quaternion(0.9959468547244213, [0.07128353154492638, 0.05471444558570355, 0.0038535878432041613])
dAA = SO3([0.9881514363172823 0.13985398298695606 0.06322659524896677; -0.14748886834223918 0.9792439207060633 0.13902653514830754; -0.0424708443431267 -0.14670448937541808 0.988268192434564])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9905765176902893 -0.1154859072168082 0.07362858028571949; 0.08214742575695529 0.9311373093348897 0.35529580859628446; -0.10958997692346406 -0.34589928649665186 0.9318496233615281]), [-1.3359512961809277, -0.07822431474850994, -2.570123984938372])
xj = SE3(SO3([0.9629897797415853 0.01037225338336903 0.2693382640342887; 0.08559097139254361 0.935772688726612 -0.3420579784911441; -0.2555873035370376 0.3524512610179149 0.900251764162419]), [-0.4369974292683053, -0.27644697831311055, -0.36345889531682907])
Dx = SE3(SO3([0.9889559472522476 0.048520702548055655 0.1400424072152906; 0.05689266438290572 0.7482223747271697 -0.6610041623901082; -0.13685524883549102 0.6616713832272616 0.7371984953079448]), [0.6323707332625677, -1.051672900504361, 2.0520410480787072])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
