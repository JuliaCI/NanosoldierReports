Julia Version 1.5.0-DEV.451
Commit 57f72b136c (2020-03-12 17:07 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_ZFSDLp/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_ZFSDLp/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.05323095827230813 -0.0007178787233025165; -0.05323095827230813 0.0 0.0504337984880168; 0.0007178787233025165 -0.0504337984880168 0.0])
dAA = so3([0.0 -0.16222702164570535 0.09271482825630387; 0.16222702164570535 0.0 0.007764970139504043; -0.09271482825630387 -0.007764970139504043 0.0])
dAA = so3([0.0 -0.05527688693337205 -0.12121299117780344; 0.05527688693337205 0.0 0.03904125313105955; 0.12121299117780344 -0.03904125313105955 0.0])
dAA = Quaternion(0.9992188908141116, [0.013666823162153641, 0.037078163656056734, 0.00018964378573246488])
dAA = SO3([0.9987069994415367 -0.04994489502760999 -0.009478223840128882; 0.04760360253262649 0.984225908471897 -0.17039148487698835; 0.01783889829553062 0.16971997099148423 0.9853308607540168])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8928678470850383 -0.3931619839843268 0.21956926467799742; 0.38874380187178276 0.9190596890772375 0.06486558732890359; -0.22729994313241833 0.027439793416851793 0.973438130334558]), [-0.504337984880168, -0.007178787233025165, -0.5323095827230813])
xj = SE3(SO3([0.9828627004477825 0.002862492160632892 0.18431689615204297; 0.009798663140466339 0.9976545607980437 -0.067744841276086; -0.18407851115530122 0.06838993681451047 0.9805294071435874]), [-0.39041253131059545, -1.2121299117780344, 0.5527688693337205])
Dx = SE3(SO3([0.9232167080089846 0.3748428253833494 -0.08463903538959622; -0.38246976931157667 0.9176552730945057 -0.10782242496158854; 0.0372529947226094 0.1319153365627968 0.9905607292658646]), [-0.6133351772151798, -1.1224388346638154, 1.003111405308633])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
