Julia Version 1.5.0-DEV.451
Commit 57f72b136c (2020-03-12 17:07 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Requires ───────────────────── v1.0.1
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed ArgCheck ───────────────────── v2.0.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed Rmath ──────────────────────── v0.6.1
  Installed FillArrays ─────────────────── v0.8.5
  Installed StatsFuns ──────────────────── v0.9.4
  Installed OrderedCollections ─────────── v1.1.0
  Installed DataAPI ────────────────────── v1.1.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed StatsBase ──────────────────── v0.32.2
  Installed Missings ───────────────────── v0.4.3
  Installed Parameters ─────────────────── v0.12.0
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed ProgressMeter ──────────────── v1.2.0
  Installed MacroTools ─────────────────── v0.5.4
  Installed DataStructures ─────────────── v0.17.10
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed LazyArrays ─────────────────── v0.15.0
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ##                                                                         3.1%######                                                                     9.0%###########                                                               15.6%#################                                                         24.5%##########################                                                36.3%#####################################                                     51.6%##################################################                        69.8%###################################################################       94.1%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.0
   1914dd2f + MacroTools v0.5.4
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
#=#=#                                                                         #                                                                          2.5%#####                                                                      8.2%##########                                                                14.4%#################                                                         24.1%##########################                                                36.2%####################################                                      50.9%########################################                                  55.9%#######################################################                   76.5%######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.2%########################                                                  34.2%####################################                                      50.9%########################################################                  78.6%######################################################################## 100.0%
#=#=#                                                                         ###############################################                           65.6%######################################################################## 100.0%
#=#=#                                                                         #################################################                         69.0%######################################################################## 100.0%
     Status `/tmp/jl_69YAgz/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.5.2
   31c24e10 Distributions v0.22.5
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.9
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_69YAgz/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.4.0
   1520ce14 AbstractTrees v0.3.2
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.5.1
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.5.2
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v0.7.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   88cd18e8 ConsoleProgressMonitor v0.1.2
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.20.0
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   31c24e10 Distributions v0.22.5
   ced4e74d DistributionsAD v0.4.2
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.4.2
   da5c29d0 EllipsisNotation v0.4.0
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.2.2
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.1
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.1
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.0
   1d6d02ad LeftChildRightSiblingTrees v0.1.2
   6f1fad26 Libtask v0.3.3
   093fc24a LightGraphs v1.3.1
   6fdf6af0 LogDensityProblems v0.10.3
   e6f89c97 LoggingExtras v0.4.0
   c7f686f2 MCMCChains v3.0.4
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+7
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   90014a1f PDMats v0.9.11
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   33c8b6b6 ProgressLogging v0.1.1
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v0.8.4
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   5d786b92 TerminalLoggers v0.1.1
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.9
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.126412586
│   t_steps = 0.007074326
└   t_step / t_steps = 17.86920563174499
Sampling  0%|                               |  ETA: 5:39:35[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.010445239329541629
  log_density:                   -10.759951450563364
  hamiltonian_energy:            14.06735530639926
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  4.5616089709243255
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▉                            |  ETA: 0:00:25[K
  iterations:                    1115
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.588018173915891
  log_density:                   -13.151522058918989
  hamiltonian_energy:            19.331819849042024
  hamiltonian_energy_error:      -0.32107870029428653
  max_hamiltonian_energy_error:  1.2336306560784998
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.2340528492352814
  nom_step_size:                 1.2340528492352814
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9516940620933126, 0.9962 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▊                           |  ETA: 0:00:19[K
  iterations:                    1430
  n_steps:                       51
  is_accept:                     true
  acceptance_rate:               0.8558765002773115
  log_density:                   -15.46784839219005
  hamiltonian_energy:            18.783700939520525
  hamiltonian_energy_error:      0.33122161616247325
  max_hamiltonian_energy_error:  0.6303147184680284
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8492100891385767
  nom_step_size:                 0.8492100891385767
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9516940620933126, 0.9962 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▌                          |  ETA: 0:00:16[K
  iterations:                    1755
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9458935569137418
  log_density:                   -10.490263836628815
  hamiltonian_energy:            12.666518053126273
  hamiltonian_energy_error:      -0.059038292458419406
  max_hamiltonian_energy_error:  0.13052663890200833
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7618632265631072
  nom_step_size:                 0.7618632265631072
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9516940620933126, 0.9962 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▋                         |  ETA: 0:00:13[K
  iterations:                    2170
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9870373898486239
  log_density:                   -13.983689957528298
  hamiltonian_energy:            21.38109104771242
  hamiltonian_energy_error:      -0.2861484373078973
  max_hamiltonian_energy_error:  -0.3377864292280641
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▉                        |  ETA: 0:00:10[K
  iterations:                    2663
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9658743090476047
  log_density:                   -18.21472665330903
  hamiltonian_energy:            23.5463726849775
  hamiltonian_energy_error:      -0.026964462828576785
  max_hamiltonian_energy_error:  -0.49937864527195686
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████▏                      |  ETA: 0:00:09[K
  iterations:                    3127
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9849930124657769
  log_density:                   -11.8235884217344
  hamiltonian_energy:            16.631275406835957
  hamiltonian_energy_error:      -0.19449807160611599
  max_hamiltonian_energy_error:  -0.19449807160611599
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▍                     |  ETA: 0:00:07[K
  iterations:                    3618
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6890351053888555
  log_density:                   -17.48544979812409
  hamiltonian_energy:            29.257806472257045
  hamiltonian_energy_error:      0.07119300154224817
  max_hamiltonian_energy_error:  0.6926143595350709
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▋                    |  ETA: 0:00:06[K
  iterations:                    4118
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9319922427839804
  log_density:                   -12.545406348182409
  hamiltonian_energy:            17.23125451197383
  hamiltonian_energy_error:      -0.031405144918537076
  max_hamiltonian_energy_error:  0.15489052522334035
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▉                   |  ETA: 0:00:05[K
  iterations:                    4616
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.681748619977679
  log_density:                   -14.711139147770623
  hamiltonian_energy:            23.72271641696141
  hamiltonian_energy_error:      0.168906639935269
  max_hamiltonian_energy_error:  0.8049321413286883
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▎                 |  ETA: 0:00:05[K
  iterations:                    5112
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9921378529367487
  log_density:                   -13.121630277300877
  hamiltonian_energy:            15.936749537787753
  hamiltonian_energy_error:      0.007366059777192291
  max_hamiltonian_energy_error:  -0.09557627888532494
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▌                |  ETA: 0:00:04[K
  iterations:                    5595
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9206199455554669
  log_density:                   -11.064305011792412
  hamiltonian_energy:            14.974732525849406
  hamiltonian_energy_error:      -0.05079802843129322
  max_hamiltonian_energy_error:  0.19320455521373248
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:03[K
  iterations:                    6140
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7518641890750413
  log_density:                   -17.432373414641475
  hamiltonian_energy:            26.19913818228654
  hamiltonian_energy_error:      0.16899573040398508
  max_hamiltonian_energy_error:  0.5237361559896208
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████▏             |  ETA: 0:00:03[K
  iterations:                    6633
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7329910751283755
  log_density:                   -20.09440220185747
  hamiltonian_energy:            25.02280348550919
  hamiltonian_energy_error:      0.548163615564011
  max_hamiltonian_energy_error:  0.5655148777987193
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▍            |  ETA: 0:00:03[K
  iterations:                    7122
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8064920706000638
  log_density:                   -13.256556382951409
  hamiltonian_energy:            18.737244036025416
  hamiltonian_energy_error:      0.13551857686322677
  max_hamiltonian_energy_error:  0.4606477046447317
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▋           |  ETA: 0:00:02[K
  iterations:                    7614
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.990744872544113
  log_density:                   -18.132898230278933
  hamiltonian_energy:            25.09556373940368
  hamiltonian_energy_error:      -0.3039575935558574
  max_hamiltonian_energy_error:  -0.8432423199520116
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████          |  ETA: 0:00:02[K
  iterations:                    8109
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.974478429045915
  log_density:                   -13.132545065964687
  hamiltonian_energy:            17.377547139305314
  hamiltonian_energy_error:      -0.1375156084490463
  max_hamiltonian_energy_error:  -0.2652953672365008
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▎        |  ETA: 0:00:02[K
  iterations:                    8604
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9590692280107299
  log_density:                   -10.825727779910535
  hamiltonian_energy:            15.48740705856401
  hamiltonian_energy_error:      -0.1874962234127615
  max_hamiltonian_energy_error:  -0.1874962234127615
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:01[K
  iterations:                    9095
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.979861433661768
  log_density:                   -14.424598829789781
  hamiltonian_energy:            22.682322307325187
  hamiltonian_energy_error:      -0.407325603038732
  max_hamiltonian_energy_error:  -0.6013594748821838
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▋      |  ETA: 0:00:01[K
  iterations:                    9535
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.287149948909386
  hamiltonian_energy:            18.630049313025527
  hamiltonian_energy_error:      -0.04003590787873179
  max_hamiltonian_energy_error:  -0.16742465732991363
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▉     |  ETA: 0:00:01[K
  iterations:                    9998
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9578039860117443
  log_density:                   -14.340888536432074
  hamiltonian_energy:            19.029050945329065
  hamiltonian_energy_error:      0.02297555339988122
  max_hamiltonian_energy_error:  0.09993603454595146
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|███████████████████████████    |  ETA: 0:00:01[K
  iterations:                    10465
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6806580753757485
  log_density:                   -15.637984946622314
  hamiltonian_energy:            27.4622258458623
  hamiltonian_energy_error:      0.04057175760230791
  max_hamiltonian_energy_error:  0.8174365130307564
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▎  |  ETA: 0:00:00[K
  iterations:                    10946
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9282222030348048
  log_density:                   -17.37008637233867
  hamiltonian_energy:            21.174248851564574
  hamiltonian_energy_error:      0.17988239085440938
  max_hamiltonian_energy_error:  0.17988239085440938
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▌ |  ETA: 0:00:00[K
  iterations:                    11418
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6651096132658729
  log_density:                   -18.975675677772287
  hamiltonian_energy:            20.84606678404718
  hamiltonian_energy_error:      0.8038593034481565
  max_hamiltonian_energy_error:  0.8038593034481565
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 99%|██████████████████████████████▊|  ETA: 0:00:00[K
  iterations:                    11907
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9045034749691491
  log_density:                   -12.531763614325865
  hamiltonian_energy:            18.086517804667317
  hamiltonian_energy_error:      -0.032618417783140785
  max_hamiltonian_energy_error:  0.3358118289496481
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:04[K
  iterations:                    12000
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.44565936823017477
  log_density:                   -12.90042723397295
  hamiltonian_energy:            26.266726545588995
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  1.1237703525419747
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.63834794246562
  nom_step_size:                 0.63834794246562
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9404233166942831, 0.9376 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 4.908451117 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9404233166942831, 0.9376 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.638), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0598727794523877
└   average_acceptance_rate = 0.8865131039964237
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.163321754 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡄⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠱⡀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⢱⠀⠀⢠⡆⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⢣⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠘⡄⠀⡜⠘⡄│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠁⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⢇⢰⠁⠀⠘│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⡸⢣⠀⠀⠀⠀⡸⠉⠉⠣⡀⡇⠀⠀⢸⡎⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠇⠀⠀⠀⠀⠀⠀⠀⢀⠇⠈⡆⠀⠀⡰⠁⠀⠀⠀⠈⠁⠀⠀⠀⠁⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠸⠤⠔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⢀⣀⠤⠔⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⢀⡀⢀⠇⡰⠒⠤⡠⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠛⠥⡜⠑⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
