Julia Version 1.5.0-DEV.451
Commit 57f72b136c (2020-03-12 17:07 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_LzfL38/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_LzfL38/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.14515920327748402 -0.11262818977629996; 0.14515920327748402 0.0 -0.08436067693048478; 0.11262818977629996 0.08436067693048478 0.0])
dAA = so3([0.0 -0.0005331232534521088 -0.007973502871367314; 0.0005331232534521088 0.0 0.05189364737921276; 0.007973502871367314 -0.05189364737921276 0.0])
dAA = so3([0.0 -0.07946891567783572 -0.012191422433301735; 0.07946891567783572 0.0 -0.03211211869305974; 0.012191422433301735 0.03211211869305974 0.0])
dAA = Quaternion(0.9984904093974878, [-0.01798828033857178, 0.05145856150330308, -0.006733539909228519])
dAA = SO3([0.9986384035625264 0.024201363143947618 -0.04621290893315227; -0.02304849292008108 0.9994136864148271 0.02531897274454568; 0.046798567330656855 -0.024219360617094097 0.9986106932469216])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9998007208531349 -3.7795363145267695e-5 -0.01996289440593044; 0.0026201727024338824 0.9915957186676279 0.1293486196874165; 0.01979023184708114 -0.129375149435821 0.9913982133491555]), [0.8436067693048478, -1.1262818977629996, 1.4515920327748402])
xj = SE3(SO3([0.9665131085002421 0.02622327701932849 0.25527387418137204; -0.0497064671285169 0.9950561762514875 0.08597949307463092; -0.25175718107494194 -0.09578906955460208 0.963038304498353]), [0.3211211869305973, -0.12191422433301734, 0.7946891567783572])
Dx = SE3(SO3([0.961207930081601 0.026929582402556777 0.27450703586587377; -0.016754126785539315 0.9990851782744224 -0.03934597549965335; -0.2753154815550668 0.03322053798464389 0.9607797778222189]), [-0.532750105349002, 1.0809333402205261, -0.5109084408804465])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
