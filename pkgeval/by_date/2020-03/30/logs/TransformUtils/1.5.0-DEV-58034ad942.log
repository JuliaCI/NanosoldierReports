Julia Version 1.5.0-DEV.537
Commit 58034ad942 (2020-03-30 17:59 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_oGu9cB/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_oGu9cB/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.11238458869130526 0.03618419323925625; 0.11238458869130526 0.0 -0.013388007320782304; -0.03618419323925625 0.013388007320782304 0.0])
dAA = so3([0.0 0.09034120370504012 -0.04431900684771357; -0.09034120370504012 0.0 0.010312049111516139; 0.04431900684771357 -0.010312049111516139 0.0])
dAA = so3([0.0 -0.005564883841889753 -0.033081788940351284; 0.005564883841889753 0.0 -0.01943339829987947; 0.033081788940351284 0.01943339829987947 0.0])
dAA = Quaternion(0.9992702160019975, [-0.010779758892104184, -0.01094823062679062, 0.03497096589589855])
dAA = SO3([0.9963040909930171 0.004239248619910539 -0.08579153245931147; -0.007465017483085047 0.9992756966703625 -0.03731428088465857; 0.08557120885295323 0.037816805987557274 0.995614110687642])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9685254358485409 0.22487405918618383 -0.10672458769900485; -0.22203287533868168 0.9743002993802691 0.03795166526458831; 0.11251614276729949 -0.013060786065417948 0.9935640560548283]), [0.13388007320782302, 0.36184193239256246, 1.1238458869130525])
xj = SE3(SO3([0.9832560931380162 -0.1729600261832782 -0.05737843366322037; 0.17589791226557755 0.9830952630199219 0.050829403777753114; 0.04761701132553416 -0.060071067665477644 0.997057715010497]), [0.19433398299879467, -0.3308178894035128, 0.05564883841889753])
Dx = SE3(SO3([0.9186110993752893 -0.3925546175493184 0.04532681706485604; 0.39186426186621326 0.919720361278352 0.023597824519765345; -0.050951431545839566 -0.003915263813102109 0.9986934576398824]), [0.09215498958203439, -0.6473126625301358, -1.0940617044639174])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
