Julia Version 1.5.0-DEV.399
Commit 780bbe6c2d (2020-03-04 16:59 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed OrderedCollections ─────────── v1.1.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed Parameters ─────────────────── v0.12.0
  Installed MacroTools ─────────────────── v0.5.4
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed Missings ───────────────────── v0.4.3
  Installed ArgCheck ───────────────────── v2.0.0
  Installed DataAPI ────────────────────── v1.1.0
  Installed FillArrays ─────────────────── v0.8.5
  Installed StatsFuns ──────────────────── v0.9.4
  Installed LazyArrays ─────────────────── v0.15.0
  Installed DataStructures ─────────────── v0.17.10
  Installed StatsBase ──────────────────── v0.32.2
  Installed ProgressMeter ──────────────── v1.2.0
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed OpenSpecFun_jll ────────────── v0.5.3+2
  Installed Requires ───────────────────── v1.0.1
  Installed SpecialFunctions ───────────── v0.10.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed StaticArrays ───────────────── v0.12.1
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                                                                                                    0.6%########                                                                  12.2%##################                                                        25.4%###################################                                       49.6%##########################################################                81.5%######################################################################## 100.0%
#=#=#                                                                         ##############################                                            42.2%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.0
   1914dd2f + MacroTools v0.5.4
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+2
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
#=#=#                                                                         ###                                                                        4.4%#######################                                                   32.0%#################################################                         69.1%######################################################################## 100.0%
#=#=#                                                                         ###############################################                           65.6%######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.1%####                                                                       6.4%########                                                                  12.1%##############                                                            19.8%#####################                                                     29.4%#####################                                                     30.4%###############################                                           44.1%###########################################                               60.7%##########################################################                81.7%######################################################################## 100.0%
#=#=#                                                                         #######################################                                   55.2%######################################################################## 100.0%
     Status `/tmp/jl_YdXoKH/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.5.2
   31c24e10 Distributions v0.22.5
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.9
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_YdXoKH/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.4.0
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.5.0
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.5.2
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v0.7.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.6.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.18.1
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   31c24e10 Distributions v0.22.5
   ced4e74d DistributionsAD v0.4.1
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.4.1
   da5c29d0 EllipsisNotation v0.4.0
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.2.2
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.1
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.1
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.0
   6f1fad26 Libtask v0.3.1
   093fc24a LightGraphs v1.3.1
   6fdf6af0 LogDensityProblems v0.10.3
   c7f686f2 MCMCChains v3.0.3
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+6
   efe28fd5 OpenSpecFun_jll v0.5.3+2
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   90014a1f PDMats v0.9.11
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v0.8.4
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.3.3
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.9
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.161901601
│   t_steps = 0.007552283
└   t_step / t_steps = 21.43743832163069
Sampling  0%|                               |  ETA: 5:48:18[K
  iterations:                    1
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.2740576854442924
  log_density:                   -10.865884622583712
  hamiltonian_energy:            13.629840086307077
  hamiltonian_energy_error:      0.026002864944020487
  max_hamiltonian_energy_error:  3.7703390045970178
  tree_depth:                    3
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:22[K
  iterations:                    1303
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8097319582308172
  log_density:                   -12.115814945563436
  hamiltonian_energy:            15.714421184492872
  hamiltonian_energy_error:      -0.03660657911652798
  max_hamiltonian_energy_error:  0.43704200653973047
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9101928054044713
  nom_step_size:                 0.9101928054044713
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8120636982429911, 0.9540 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▉                           |  ETA: 0:00:20[K
  iterations:                    1484
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9208643116524676
  log_density:                   -11.735517796184604
  hamiltonian_energy:            15.285080734318274
  hamiltonian_energy_error:      -0.007027213533930876
  max_hamiltonian_energy_error:  0.17523077053579428
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6889802926962079
  nom_step_size:                 0.6889802926962079
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8120636982429911, 0.9540 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:17[K
  iterations:                    1771
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9346659627707395
  log_density:                   -12.69752377541838
  hamiltonian_energy:            16.832467621211002
  hamiltonian_energy_error:      -0.40038557184496426
  max_hamiltonian_energy_error:  -0.8269980287270187
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9646718553573141
  nom_step_size:                 0.9646718553573141
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8120636982429911, 0.9540 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████▏                         |  ETA: 0:00:16[K
  iterations:                    1961
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9323609754677039
  log_density:                   -13.605604181745548
  hamiltonian_energy:            22.12958457779798
  hamiltonian_energy_error:      0.038807034598075774
  max_hamiltonian_energy_error:  0.1802379936892038
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.2965637621776548
  nom_step_size:                 0.2965637621776548
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████                         |  ETA: 0:00:13[K
  iterations:                    2342
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9081545532101665
  log_density:                   -12.682934032852422
  hamiltonian_energy:            16.969361271813643
  hamiltonian_energy_error:      -0.0019476058424388043
  max_hamiltonian_energy_error:  0.24654370116973823
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▉                        |  ETA: 0:00:11[K
  iterations:                    2653
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.084930535715706
  hamiltonian_energy:            15.942716291225922
  hamiltonian_energy_error:      -0.11229275448835274
  max_hamiltonian_energy_error:  -0.3050361998385167
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|███████▉                       |  ETA: 0:00:10[K
  iterations:                    3072
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9482403591238115
  log_density:                   -14.288260746557985
  hamiltonian_energy:            19.37627554582756
  hamiltonian_energy_error:      -0.14261723841544338
  max_hamiltonian_energy_error:  -0.39324652068539123
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▊                      |  ETA: 0:00:09[K
  iterations:                    3404
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8059333374706504
  log_density:                   -22.163679829706165
  hamiltonian_energy:            27.63120912121029
  hamiltonian_energy_error:      0.5769569850157552
  max_hamiltonian_energy_error:  0.7068075602799873
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|█████████▉                     |  ETA: 0:00:08[K
  iterations:                    3810
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6057277155295157
  log_density:                   -16.13552667788587
  hamiltonian_energy:            23.684885492791615
  hamiltonian_energy_error:      0.32481687008157323
  max_hamiltonian_energy_error:  0.8880890373039847
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▊                    |  ETA: 0:00:07[K
  iterations:                    4144
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8188054645184879
  log_density:                   -18.54457907561704
  hamiltonian_energy:            21.684125271160916
  hamiltonian_energy_error:      0.531261929431043
  max_hamiltonian_energy_error:  0.573165350514472
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▊                   |  ETA: 0:00:06[K
  iterations:                    4549
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8939321603602987
  log_density:                   -13.560607529494066
  hamiltonian_energy:            15.66261911746987
  hamiltonian_energy_error:      0.23754798869942917
  max_hamiltonian_energy_error:  0.23754798869942917
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▋                  |  ETA: 0:00:06[K
  iterations:                    4890
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9383357141052492
  log_density:                   -11.747571493843774
  hamiltonian_energy:            16.319112222047302
  hamiltonian_energy_error:      -0.12438380467263954
  max_hamiltonian_energy_error:  0.22720027236457696
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 44%|█████████████▋                 |  ETA: 0:00:05[K
  iterations:                    5274
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.832186836446285
  hamiltonian_energy:            16.60189886788789
  hamiltonian_energy_error:      -0.1460416142161236
  max_hamiltonian_energy_error:  -0.23051694251384092
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▌                |  ETA: 0:00:05[K
  iterations:                    5623
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9162548561376911
  log_density:                   -14.892819772390412
  hamiltonian_energy:            20.313001687919538
  hamiltonian_energy_error:      0.047244326551098226
  max_hamiltonian_energy_error:  0.12857432196180696
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▌               |  ETA: 0:00:04[K
  iterations:                    6006
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8974815714537697
  log_density:                   -15.27513016823198
  hamiltonian_energy:            18.300131896672514
  hamiltonian_energy_error:      0.24520664390703928
  max_hamiltonian_energy_error:  0.2899510136349406
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▍              |  ETA: 0:00:04[K
  iterations:                    6330
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.09645073746648
  hamiltonian_energy:            16.472876058890712
  hamiltonian_energy_error:      -0.06907041759949806
  max_hamiltonian_energy_error:  -0.13791049557353574
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▌             |  ETA: 0:00:03[K
  iterations:                    6790
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9926267784987433
  log_density:                   -13.752398081276652
  hamiltonian_energy:            17.728889809411523
  hamiltonian_energy_error:      -0.028787162190738513
  max_hamiltonian_energy_error:  -0.0873230332781425
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|███████████████████            |  ETA: 0:00:03[K
  iterations:                    7341
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7366217473379163
  log_density:                   -17.228945138236647
  hamiltonian_energy:            20.965649790323237
  hamiltonian_energy_error:      0.4723814034890985
  max_hamiltonian_energy_error:  0.5284357121521239
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|████████████████████           |  ETA: 0:00:03[K
  iterations:                    7734
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5720141540029734
  log_density:                   -12.77790737255149
  hamiltonian_energy:            22.37481812096322
  hamiltonian_energy_error:      0.1769059855944235
  max_hamiltonian_energy_error:  1.1953161943012809
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▊          |  ETA: 0:00:02[K
  iterations:                    8026
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.953743654933316
  log_density:                   -12.064469869753125
  hamiltonian_energy:            15.556029810987205
  hamiltonian_energy_error:      -0.01909048891550924
  max_hamiltonian_energy_error:  0.10342534301069506
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▋         |  ETA: 0:00:02[K
  iterations:                    8388
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9522955749958665
  log_density:                   -14.6781157038902
  hamiltonian_energy:            18.67967915541007
  hamiltonian_energy_error:      0.0916011280495006
  max_hamiltonian_energy_error:  0.16988294176999474
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▊        |  ETA: 0:00:02[K
  iterations:                    8786
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6897990875905435
  log_density:                   -16.573051459915234
  hamiltonian_energy:            23.701567355262913
  hamiltonian_energy_error:      0.28708519935845445
  max_hamiltonian_energy_error:  0.7055261920787572
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▍       |  ETA: 0:00:02[K
  iterations:                    9069
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.995408981430682
  log_density:                   -15.41568689650147
  hamiltonian_energy:            20.96728312232665
  hamiltonian_energy_error:      -0.1479958118501692
  max_hamiltonian_energy_error:  -0.24490025306958785
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▌      |  ETA: 0:00:01[K
  iterations:                    9468
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.918202349105071
  log_density:                   -18.296862233563854
  hamiltonian_energy:            20.762138394400992
  hamiltonian_energy_error:      0.2675868779245434
  max_hamiltonian_energy_error:  -0.4690119863736868
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▌     |  ETA: 0:00:01[K
  iterations:                    9863
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.593906652545097
  log_density:                   -21.425059029301046
  hamiltonian_energy:            24.86430731857438
  hamiltonian_energy_error:      0.8493850602052362
  max_hamiltonian_energy_error:  1.0383394169745195
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▌    |  ETA: 0:00:01[K
  iterations:                    10252
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9902076579947446
  log_density:                   -12.784002943614333
  hamiltonian_energy:            16.179660729603686
  hamiltonian_energy_error:      -0.006441164537388744
  max_hamiltonian_energy_error:  -0.04953110618068024
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▍   |  ETA: 0:00:01[K
  iterations:                    10608
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8137965942485942
  log_density:                   -15.395344936595748
  hamiltonian_energy:            21.227626336897714
  hamiltonian_energy_error:      0.18030260746941096
  max_hamiltonian_energy_error:  0.49051805463961173
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▍  |  ETA: 0:00:01[K
  iterations:                    10989
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7929872782624565
  log_density:                   -13.076639098249697
  hamiltonian_energy:            15.964719110864312
  hamiltonian_energy_error:      0.23682596099660813
  max_hamiltonian_energy_error:  0.40619238296342175
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▍ |  ETA: 0:00:00[K
  iterations:                    11349
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9041808424541153
  log_density:                   -12.090995729218195
  hamiltonian_energy:            16.470394294871216
  hamiltonian_energy_error:      -0.05917125448225846
  max_hamiltonian_energy_error:  0.2118253066547453
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▎|  ETA: 0:00:00[K
  iterations:                    11722
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9254745955740571
  log_density:                   -15.722902852504626
  hamiltonian_energy:            27.867365632045612
  hamiltonian_energy_error:      -0.6945859019558007
  max_hamiltonian_energy_error:  -0.7359443824016161
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9869470245571925
  log_density:                   -11.548828496152597
  hamiltonian_energy:            13.600987854268553
  hamiltonian_energy_error:      0.0013498818902260012
  max_hamiltonian_energy_error:  0.045614171292205796
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7035243450941299
  nom_step_size:                 0.7035243450941299
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0293485299096745, 1.0054 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.817589609 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0293485299096745, 1.0054 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.704), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0771981750120254
└   average_acceptance_rate = 0.8692462149538664
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.93037209 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Matrix mode: Test Failed at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/sampler_mat.jl:48
  Expression: ≈(mean(samples), zeros(D, n_chains), atol = RNDATOL * n_chains)
   Evaluated: [0.08361453750880958 -0.011451012430100578 … -0.0030479418467278295 -0.014270914160641107; 0.5081601073873134 0.007351973608258043 … -0.012651976208813068 -0.01829489313121728; … ; -0.6277157979559571 -0.02729501910802389 … 0.013029325491886755 -0.011905461389078914; -0.9146273708688007 0.02250683500155922 … 0.022514076431393488 0.012426026275764779] ≈ [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0] (atol=1.25)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/sampler_mat.jl:48
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/sampler_mat.jl:6
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⡆⠀⠀⠀⠀⢀⡄⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠘⡄⠀⠀⠀⡎⠘⡄│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⡸⠱⡀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠘⠢⣀⡜⠀⠀⠘│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⡉⠉⠁⠀⢀⡠⡆⠀⠀⠀⢀⠇⠀⠱⠤⠤⠒⠒⠉⠉⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⢠⡻⢣⠀⠀⡰⠁⠀⠸⡀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⣎⠇⠀⢇⡰⠁⠀⠀⠀⢱⢀⡠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡆⠀⠀⠀⢀⠜⡜⠀⠀⠈⠃⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡘⡄⠀⢠⢎⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠱⡱⢤⠓⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠘⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary:                                            | Pass  Fail  Total
AdvancedHMC                                              | 2874     1   2875
  Online v.s. naive v.s. true var/cov estimation         |   12           12
  Preconditioner constructors                            |    2            2
  Stan HMC adaptors                                      |   12           12
  Adapted mass v.s. true variance                        |   20           20
  Initialisation adaptor by metric                       |    2            2
  rand momentum variables from metric via vector of RNGs |    2            2
  Passing random number generator                        |   12           12
  TreeSampler                                            |    5            5
  TerminationCriterion                                   |    2            2
  Termination                                            |   20           20
  BinaryTree                                             |    4            4
  ClassicNoUTurn                                         |    4            4
  PhasePoint                                             |    4            4
  Metric                                                 |   60           60
  step(::Leapfrog) against step(::Leapfrog)              |    2            2
  jitter                                                 |    4            4
  temper                                                 |    7            7
  Eq (2.11) from (Neal, 2011)                            |    4            4
  `gdemo`                                                |    1            1
  HMC and NUTS                                           | 2664         2664
  drop_warmup                                            |    4            4
  Matrix mode                                            |   27     1     28
ERROR: LoadError: Some tests did not pass: 2874 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/runtests.jl:3
ERROR: Package AdvancedHMC errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1523
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
