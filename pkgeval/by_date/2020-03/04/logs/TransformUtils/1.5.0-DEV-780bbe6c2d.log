Julia Version 1.5.0-DEV.399
Commit 780bbe6c2d (2020-03-04 16:59 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_7xTsX8/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_7xTsX8/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.03213439274612408 -0.10689720334215247; 0.03213439274612408 0.0 -0.06548777333227772; 0.10689720334215247 0.06548777333227772 0.0])
dAA = so3([0.0 0.0045714318149554815 0.14989064233620783; -0.0045714318149554815 0.0 -0.005501597585229098; -0.14989064233620783 0.005501597585229098 0.0])
dAA = so3([0.0 0.1647900775889637 -0.091281228438917; -0.1647900775889637 0.0 0.035655414379728675; 0.091281228438917 -0.035655414379728675 0.0])
dAA = Quaternion(0.9980749835322917, [-0.0059493185806284606, -0.06066554443249313, -0.011429110820673829])
dAA = SO3([0.9875466292535 -0.037696606205199254 -0.15274364448533054; 0.04175227544015181 0.9988532093130444 0.0234310422431751; 0.15168520872392474 -0.029516641503428077 0.9879880390615758])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9305450335775557 0.013709295020257176 0.3659207505925201; -0.008615472280994492 0.9998419741032557 -0.015549934362562655; -0.3660761042754923 0.011317334109769097 0.9305160954154026]), [0.6548777333227772, -1.0689720334215247, 0.32134392746124074])
xj = SE3(SO3([0.9526759182417073 0.05874015073540699 -0.2982585950042372; -0.050777645215737036 0.9981179565741161 0.03438277927474437; 0.29971690901359677 -0.017610776697599684 0.9538656273267438]), [-0.3565541437972867, -0.91281228438917, -1.647900775889637])
Dx = SE3(SO3([0.7772261192864189 0.05250798247712576 -0.6270266910388707; -0.03431710941329315 0.9985662071011187 0.041083646834257685; 0.6282848840299196 -0.010413539833687853 0.7779136601754996]), [-0.22163487067745852, 0.11998245349993208, -2.2049460777760244])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
