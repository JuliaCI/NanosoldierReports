Julia Version 1.5.0-DEV.378
Commit cdf580aff8 (2020-03-01 16:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_BZmCbw/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.12623966216588453 0.048074437177830026; 0.12623966216588453 0.0 0.06424639341920708; -0.048074437177830026 -0.06424639341920708 0.0])
dAA = so3([0.0 0.15652994040262377 -0.05889501376505161; -0.15652994040262377 0.0 0.005218009280323239; 0.05889501376505161 -0.005218009280323239 0.0])
dAA = so3([0.0 -0.11577503072863636 -0.18070977068452532; 0.11577503072863636 0.0 -0.10763613003892528; 0.18070977068452532 0.10763613003892528 0.0])
dAA = Quaternion(0.9911083324882556, [0.08111480878236223, 0.011294121099089855, -0.10486707727952269])
dAA = SO3([0.9889486766154634 0.13417069681831065 0.06307724737028864; -0.13933542163525411 0.9864849810058254 0.08621497855745369; -0.05065723342474966 -0.09405108380675478 0.9942777470790167])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9138601441603234 0.3809581121231707 -0.14046548943716666; -0.3790652401439511 0.9244585952130489 0.041059097059300914; 0.14549632514218974 0.01572331212773172 0.9892338433484027]), [-0.6424639341920708, 0.4807443717783002, 1.2623966216588454])
xj = SE3(SO3([0.8653731644481293 0.5010621432094784 -0.008124955098657067; -0.4632555723815332 0.7936848120744195 -0.3942825049883031; -0.19111138351885038 0.34496542975306577 0.9189533673504839]), [1.0763613003892527, -1.807097706845253, 1.1577503072863635])
Dx = SE3(SO3([0.9386281256130395 0.20723360086926518 0.27573805772673093; -0.10159457259246503 0.930036433671008 -0.3531441276083567; -0.32962976902565455 0.30345752044606034 0.8940121635955648]), [2.4227816294248923, -1.4618602443017599, -0.43889203355391104])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
