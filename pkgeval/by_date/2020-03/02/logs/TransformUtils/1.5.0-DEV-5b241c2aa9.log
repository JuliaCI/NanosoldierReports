Julia Version 1.5.0-DEV.385
Commit 5b241c2aa9 (2020-03-02 14:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_apY4C8/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_apY4C8/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.07663392287289011 -0.033546544238152794; 0.07663392287289011 0.0 0.021636320938714954; 0.033546544238152794 -0.021636320938714954 0.0])
dAA = so3([0.0 -0.1429964622632061 0.02955695162384599; 0.1429964622632061 0.0 -0.22050966371090658; -0.02955695162384599 0.22050966371090658 0.0])
dAA = so3([0.0 0.00877675628288454 -0.053179604236010015; -0.00877675628288454 0.0 -0.02563020248704207; 0.053179604236010015 0.02563020248704207 0.0])
dAA = Quaternion(0.9923495628773047, [0.04120205875900332, 0.1086982067176212, 0.04158647938471772])
dAA = SO3([0.9890560975492179 -0.09439732424692382 0.11338951043078778; 0.08764968267439918 0.9941509353672892 0.0630987387783745; -0.1186826399596408 -0.05246963772855255 0.9915449400248307])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9357622470745238 -0.3123713928497187 0.16362496716321898; 0.35164382333727073 0.7918982696085836 -0.4992431793221389; 0.026374958934264028 0.5247106283658239 0.8508719751062189]), [-0.21636320938714954, -0.3354654423815279, 0.766339228728901])
xj = SE3(SO3([0.8350409037210045 -0.15908087851433086 0.5266877283589555; 0.2794763766121685 0.9472302462997482 -0.15699622737713073; -0.4739194488819187 0.2782950495176425 0.8354353484174771]), [0.2563020248704207, -0.5317960423601001, -0.0877675628288454])
Dx = SE3(SO3([0.8671762880670486 0.1915658055470253 0.4596823115580744; -0.2881966029637815 0.9458266788664618 0.14951458652778865; -0.4061379118654054 -0.26213438479062307 0.8754070829368756]), [0.3507368073554932, -0.7512798712607052, -0.5513789863182597])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
