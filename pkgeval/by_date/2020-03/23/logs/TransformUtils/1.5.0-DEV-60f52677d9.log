Julia Version 1.5.0-DEV.492
Commit 60f52677d9 (2020-03-22 11:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_p3CP4I/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_p3CP4I/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.07015942476832968 0.02149543863162756; 0.07015942476832968 0.0 -0.24182299109949318; -0.02149543863162756 0.24182299109949318 0.0])
dAA = so3([0.0 0.11963581545823852 0.07254089085129928; -0.11963581545823852 0.0 -0.08024435030087096; -0.07254089085129928 0.08024435030087096 0.0])
dAA = so3([0.0 0.15191332183176012 0.08575269025292942; -0.15191332183176012 0.0 0.0177961616166018; -0.08575269025292942 -0.0177961616166018 0.0])
dAA = Quaternion(0.9958669960595764, [-0.08511870372279871, -0.025821309705338732, -0.018357352775586408])
dAA = SO3([0.9864830678203625 0.14302796224215752 0.0799634849201951; -0.12866531771351902 0.9782809720414257 -0.16251638612571617; -0.10147114329406916 0.15003113596363798 0.9834603526935161])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.939652743386969 0.3089959289654002 0.14688171338921752; -0.2731049651152321 0.9360242613220505 -0.22197355753764347; -0.20607377289395834 0.1684639370883841 0.9639260874288703]), [2.4182299109949317, 0.21495438631627561, 0.7015942476832967])
xj = SE3(SO3([0.9876589167247184 0.10627360764798023 -0.11504687971274574; -0.04938222640714476 0.9083958553362109 0.4151847368618784; 0.14863128852711105 -0.40437963638822966 0.9024332937925628]), [-0.177961616166018, 0.8575269025292941, -1.5191332183176012])
Dx = SE3(SO3([0.9109139314543472 -0.06489509405435281 -0.40746096285418765; 0.28399863451892593 0.8149952859744508 0.5051014347938527; 0.29930015882683814 -0.5758222908216559 0.7608206781621604]), [-2.1573745479911097, -0.5748616399958786, -2.6645843047437636])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
