Julia Version 1.5.0-DEV.498
Commit cf3c0a3991 (2020-03-23 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_z10IHp/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_z10IHp/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.1142315284478884 0.0002934282024437802; -0.1142315284478884 0.0 0.04083019774765252; -0.0002934282024437802 -0.04083019774765252 0.0])
dAA = so3([0.0 0.14020909439855922 0.014057326115723221; -0.14020909439855922 0.0 -0.08149575361664621; -0.014057326115723221 0.08149575361664621 0.0])
dAA = so3([0.0 -0.07719848622368246 -0.014203073958538516; 0.07719848622368246 0.0 -0.030445239515163376; 0.014203073958538516 0.030445239515163376 0.0])
dAA = Quaternion(0.9967453370923857, [0.004626528026194335, 0.07743109173071866, 0.021948901029400884])
dAA = SO3([0.9984456328656293 -0.034467610028460986 -0.04379842543378607; 0.03821872221350003 0.9953947373565042 0.08791271873479645; 0.04056658087539918 -0.08944998994914446 0.9951648365040726])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9388010213576657 0.34445836970592597 -0.0010362612311473523; -0.3373965640259301 0.9189400634421784 -0.20423691729063467; -0.06939885360220285 0.19208745753021134 0.9789209405147482]), [-0.4083019774765252, 0.002934282024437802, -1.142315284478884])
xj = SE3(SO3([0.9199069089241185 -0.10342585088591393 0.3782517313670862; 0.11561612683490162 0.9932476450726169 -0.009593058604895247; -0.37470547117618863 0.05255672103761526 0.9256530672689444]), [0.30445239515163375, -0.14203073958538515, 0.7719848622368245])
Dx = SE3(SO3([0.8506051918499545 -0.43586201330993046 0.29410051504768947; 0.35113770377692904 0.8872046409154549 0.2992828730888967; -0.39137337745964246 -0.15130178614772863 0.9077084603132987]), [0.585194997562958, 0.4800130911735693, 1.9028171094553372])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
