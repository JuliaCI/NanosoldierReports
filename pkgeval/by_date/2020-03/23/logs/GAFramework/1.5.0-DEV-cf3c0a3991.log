Julia Version 1.5.0-DEV.498
Commit cf3c0a3991 (2020-03-23 16:56 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.4
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_tVMJme/Project.toml`
   5789e2e9 FileIO v1.2.4
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_tVMJme/Manifest.toml`
   5789e2e9 FileIO v1.2.4
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21719691457653442
curgen: 20 fitness: 0.21719691457653442
curgen: 30 fitness: 0.21722571385303655
curgen: 40 fitness: 0.21722571385303655
curgen: 50 fitness: 0.21722571385303655
CoordinateCreature{Array{Float64,1}}([0.2229714686655207], -0.21722571385303655) 0.2229714686655207 -0.21722571385303655
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.256822426397809
curgen: 100 fitness: 3.257987348229712
curgen: 150 fitness: 3.258043350529464
curgen: 200 fitness: 3.258323143262564
curgen: 250 fitness: 3.258374360215062
curgen: 300 fitness: 3.258386847598956
curgen: 350 fitness: 3.258386847598956
curgen: 400 fitness: 3.258413822704038
curgen: 450 fitness: 3.258449629297539
curgen: 500 fitness: 3.2584710871304945
CoordinateCreature{Array{Float64,1}}([-0.22278596541212733, -0.22209434412433152, 0.22249740571957397, -0.2224253616256986, -0.22259724726432886, 0.22273382233791403, 0.22258090472883788, -0.22243785411538372, 0.22280041366469786, -0.22259085355741723, -0.22276503904032252, -0.22246609074928286, 0.22284366799489885, 0.22263434659976958, 0.22209221328212703], -3.2584710871304945) [-0.22278596541212733, -0.22209434412433152, 0.22249740571957397, -0.2224253616256986, -0.22259724726432886, 0.22273382233791403, 0.22258090472883788, -0.22243785411538372, 0.22280041366469786, -0.22259085355741723, -0.22276503904032252, -0.22246609074928286, 0.22284366799489885, 0.22263434659976958, 0.22209221328212703] -3.2584710871304945
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.005719665099491067
curgen: 100 fitness: -0.0019241722058609412
curgen: 150 fitness: -0.001771175638054956
curgen: 200 fitness: -0.001771175638054956
curgen: 250 fitness: -0.001766378998553364
curgen: 300 fitness: -0.0015675341748817573
curgen: 350 fitness: -0.0015460581686852493
curgen: 400 fitness: -0.0015460581686852493
curgen: 450 fitness: -0.0014105373989821146
curgen: 500 fitness: -0.0012278506861491678
CoordinateCreature{Array{Float64,1}}([0.00050855144720579, -8.704088089128074e-5, -0.00014914813602024584, -0.0019243040572397376, -0.0004623349421489383, -0.0006611175730965205, 0.00024862160452316143, -0.0004883419370545908, 0.0001923698475522844, -7.582682392778903e-5, -0.0004774388227460158, -0.00021434264477400314, 0.0008433411377918171, 0.0004395896931886436, -0.0001594866657783692], 0.0012278506861491678) [0.00050855144720579, -8.704088089128074e-5, -0.00014914813602024584, -0.0019243040572397376, -0.0004623349421489383, -0.0006611175730965205, 0.00024862160452316143, -0.0004883419370545908, 0.0001923698475522844, -7.582682392778903e-5, -0.0004774388227460158, -0.00021434264477400314, 0.0008433411377918171, 0.0004395896931886436, -0.0001594866657783692] 0.0012278506861491678
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
