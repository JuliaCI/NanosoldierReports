Julia Version 1.5.0-DEV.511
Commit 458d4bb7ee (2020-03-26 16:44 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_9eWvpa/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_9eWvpa/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.10639346981432905 0.2473580773336761; -0.10639346981432905 0.0 -0.25672436181609654; -0.2473580773336761 0.25672436181609654 0.0])
dAA = so3([0.0 0.039089007808141105 -0.09413655372381319; -0.039089007808141105 0.0 0.060275126618123356; 0.09413655372381319 -0.060275126618123356 0.0])
dAA = so3([0.0 0.14865040407932187 0.16839833568699503; -0.14865040407932187 0.0 0.12927073151547028; -0.16839833568699503 -0.12927073151547028 0.0])
dAA = Quaternion(0.9998609407704719, [-0.0023319747152802076, 0.01651133165413561, -0.00019220437396061748])
dAA = SO3([0.9946736176385441 0.08369058797090961 0.06016876148746367; -0.077720796983751 0.992389513110994 -0.0955119468105178; -0.06770429890385407 0.09032684956538703 0.9936081663098034])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9677688068771871 0.11390374256356856 -0.2246096032352978; -0.0786989125696326 0.9839891947880249 0.15991168093910949; 0.23922796156775425 -0.13708100514085284 0.9612381496974153]), [2.567243618160965, 2.473580773336761, -1.0639346981432904])
xj = SE3(SO3([0.9965934019430859 0.0006708195684982455 0.08246903179141449; -0.0016345814851770068 0.9999311566051015 0.011619388699597806; -0.08245555982997829 -0.011714608465097948 0.9965258895792092]), [-1.2927073151547026, 1.68398335686995, -1.4865040407932186])
Dx = SE3(SO3([0.9448749718274734 -0.0808467583195507 0.31729338045923905; 0.12321039879700661 0.9856037127939764 -0.11577788629531827; -0.3033652670335117 0.14848947099356632 0.9412334416932585]), [-3.7744900537588277, -1.158691953220114, 0.33452642445969394])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
