Julia Version 1.5.0-DEV.537
Commit 58034ad942 (2020-03-30 17:59 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_90lnBA/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_90lnBA/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.1275521425021397 0.10876890421957874; 0.1275521425021397 0.0 -0.000579046025046504; -0.10876890421957874 0.000579046025046504 0.0])
dAA = so3([0.0 0.10112396075515429 -0.07148348459160002; -0.10112396075515429 0.0 0.0962024733408192; 0.07148348459160002 -0.0962024733408192 0.0])
dAA = so3([0.0 -0.08352321236768334 -0.06252423175975876; 0.08352321236768334 0.0 0.12929282814479803; 0.06252423175975876 -0.12929282814479803 0.0])
dAA = Quaternion(0.9993578617475454, [-0.03359522649589766, 0.00046738655812372305, -0.01245015943145346])
dAA = SO3([0.9823126428768011 -0.059986031734074075 0.1773796708791429; 0.06018539831291493 0.9981781199836889 0.004261292731581088; -0.17731212444249314 0.006489744419243851 0.9841332703161004])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.952685847665142 0.26760007744658126 -0.1441522605064994; -0.22516719855377865 0.9398976910732595 0.2566944935338482; 0.20417984316281854 -0.21209085049982548 0.9556819883100589]), [0.005790460250465039, 1.0876890421957874, 1.2755214250213969])
xj = SE3(SO3([0.9980647752115013 0.06194244680705526 0.005462395588981577; -0.061983352207696574 0.9839865356337544 0.1671184063488485; 0.004976799283880335 -0.16713357225595746 0.9859217009954951]), [-1.2929282814479803, -0.6252423175975875, 0.8352321236768333])
Dx = SE3(SO3([0.9658149662679033 -0.19667510577092095 0.16887970186770848; 0.20776866792542276 0.9768699779389802 -0.050569030344588484; -0.15502784124609503 0.0839282370331555 0.9843385695313791]), [-0.941473210208801, -1.86413613350846, -0.6732633604230379])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
