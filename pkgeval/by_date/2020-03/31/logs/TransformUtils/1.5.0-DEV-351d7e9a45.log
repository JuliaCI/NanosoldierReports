Julia Version 1.5.0-DEV.552
Commit 351d7e9a45 (2020-03-31 14:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_5QQ42a/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_5QQ42a/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.05728286105922858 0.04463532916622393; 0.05728286105922858 0.0 0.07784566259269243; -0.04463532916622393 -0.07784566259269243 0.0])
dAA = so3([0.0 -0.0836717649746809 0.029525150808022784; 0.0836717649746809 0.0 -0.048360882819875016; -0.029525150808022784 0.048360882819875016 0.0])
dAA = so3([0.0 -0.15104202398239222 0.08120660672899516; 0.15104202398239222 0.0 0.11727697784452223; -0.08120660672899516 -0.11727697784452223 0.0])
dAA = Quaternion(0.9929633629024398, [-0.039774532979936286, 0.05274658438436912, -0.09828298070107803])
dAA = SO3([0.9895675222395348 -0.09249507260776689 -0.11045714314607125; 0.11030806094625238 0.979609168988139 0.16792262421914902; 0.09267281488648982 -0.17835508845460954 0.9795923702251681])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9755283843772201 -0.2025230816977061 0.08560825108618293; 0.21139985947273676 0.970968213697777 -0.11194117831904098; -0.060452218232897245 0.1272993690801822 0.9900204038011085]), [-0.7784566259269243, 0.4463532916622393, 0.5728286105922857])
xj = SE3(SO3([0.8481158854121531 0.4477485106106813 0.2832326184560603; -0.5006657013898942 0.8521878468382686 0.15201884472959531; -0.17330118396400218 -0.2707344546729731 0.9469263723698917]), [-1.1727697784452222, 0.8120660672899516, 1.5104202398239222])
Dx = SE3(SO3([0.7319969015371419 0.6333102705663837 0.251194421385424; -0.679954655868204 0.7023035779169385 0.21078745315653585; -0.04292088190119375 -0.32509657894262817 0.9447063100544122]), [-0.3640315370234293, 0.5543078181356863, 0.8535400649749797])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
