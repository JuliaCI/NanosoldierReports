Julia Version 1.5.0-DEV.537
Commit 58034ad942 (2020-03-30 17:59 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed DataAPI ────────────────────── v1.1.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed StatsFuns ──────────────────── v0.9.4
  Installed SpecialFunctions ───────────── v0.10.0
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed DataStructures ─────────────── v0.17.10
  Installed StatsBase ──────────────────── v0.32.2
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed ArgCheck ───────────────────── v2.0.0
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed Rmath ──────────────────────── v0.6.1
  Installed FillArrays ─────────────────── v0.8.6
  Installed OrderedCollections ─────────── v1.1.0
  Installed LazyArrays ─────────────────── v0.15.1
  Installed StaticArrays ───────────────── v0.12.1
  Installed Requires ───────────────────── v1.0.1
  Installed ProgressMeter ──────────────── v1.2.0
  Installed Parameters ─────────────────── v0.12.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed MacroTools ─────────────────── v0.5.5
  Installed Missings ───────────────────── v0.4.3
  Installed InplaceOps ─────────────────── v0.3.0
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.3.3+0
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.6
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.1
   1914dd2f + MacroTools v0.5.5
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
     Status `/tmp/jl_X3yFV3/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.6.6
   31c24e10 Distributions v0.23.2
   f6369f11 ForwardDiff v0.10.10
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.1
   1dea7af3 OrdinaryDiffEq v5.32.1
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.10.1
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.12
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_X3yFV3/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.5.6
   1520ce14 AbstractTrees v0.3.2
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.6.2
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.6.6
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v1.0.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.3.3+0
   88cd18e8 ConsoleProgressMonitor v0.1.2
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.25.1
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   31c24e10 Distributions v0.23.2
   ced4e74d DistributionsAD v0.4.9
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.5.0
   da5c29d0 EllipsisNotation v0.4.0
   cad2338a EllipticalSliceSampling v0.2.1
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+5
   1a297f60 FillArrays v0.8.6
   6a86dc24 FiniteDiff v2.3.0
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.10
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.3.0
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.2
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.3
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.1
   1d6d02ad LeftChildRightSiblingTrees v0.1.2
   6f1fad26 Libtask v0.3.3
   093fc24a LightGraphs v1.3.1
   d3d80556 LineSearches v7.0.1
   6fdf6af0 LogDensityProblems v0.10.3
   e6f89c97 LoggingExtras v0.4.0
   c7f686f2 MCMCChains v3.0.8
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.5
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.9+0
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.32.1
   90014a1f PDMats v0.9.12
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v1.0.0
   f27b6e38 Polynomials v0.6.1
   33c8b6b6 ProgressLogging v0.1.2
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   37e2e3b7 ReverseDiff v1.1.0
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v1.0.1
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   5d786b92 TerminalLoggers v0.1.1
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.10.1
   3a884ed6 UnPack v0.1.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.12
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.176192459
│   t_steps = 0.007716606
└   t_step / t_steps = 22.832895576112087
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 6:28:17[K
  iterations:                    1
  n_steps:                       63
  is_accept:                     true
  acceptance_rate:               0.5273951007363142
  log_density:                   -11.192972685632979
  hamiltonian_energy:            13.112586972021504
  hamiltonian_energy_error:      -0.2445615063101556
  max_hamiltonian_energy_error:  1.986150267114967
  tree_depth:                    5
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▏                           |  ETA: 0:00:27[K
  iterations:                    1213
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.9324776299074312
  log_density:                   -13.677880264011485
  hamiltonian_energy:            16.49675349533736
  hamiltonian_energy_error:      0.16607756489962355
  max_hamiltonian_energy_error:  0.3358314941333873
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8729419381234572
  nom_step_size:                 0.8729419381234572
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0408952821617583, 1.0512 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:21[K
  iterations:                    1541
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.9491615670906921
  log_density:                   -13.754374118742435
  hamiltonian_energy:            18.975343307991206
  hamiltonian_energy_error:      -0.34148127417104135
  max_hamiltonian_energy_error:  -0.6111852528190198
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8455155625012631
  nom_step_size:                 0.8455155625012631
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0408952821617583, 1.0512 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:17[K
  iterations:                    1878
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.3650504694135566
  log_density:                   -15.213751037317657
  hamiltonian_energy:            17.74865546229002
  hamiltonian_energy_error:      0.9530099877602112
  max_hamiltonian_energy_error:  1.4498737024324555
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.2539308697151947
  nom_step_size:                 1.2539308697151947
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0408952821617583, 1.0512 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|██████                         |  ETA: 0:00:14[K
  iterations:                    2325
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9485923943961557
  log_density:                   -10.829203696542557
  hamiltonian_energy:            15.058021327682088
  hamiltonian_energy_error:      -0.20735280565151726
  max_hamiltonian_energy_error:  -0.20735280565151726
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▎                       |  ETA: 0:00:11[K
  iterations:                    2828
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.82219218324605
  log_density:                   -12.565767072091354
  hamiltonian_energy:            21.08728492818367
  hamiltonian_energy_error:      -0.1531032259367784
  max_hamiltonian_energy_error:  0.5610053380524889
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▊                      |  ETA: 0:00:09[K
  iterations:                    3391
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9920415068799964
  log_density:                   -14.399256042306057
  hamiltonian_energy:            16.483736320055478
  hamiltonian_energy_error:      0.05043712267509903
  max_hamiltonian_energy_error:  -0.2718454385826128
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|██████████                     |  ETA: 0:00:08[K
  iterations:                    3879
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9337917413796576
  log_density:                   -14.076355739257266
  hamiltonian_energy:            19.20370126550609
  hamiltonian_energy_error:      -0.24952704079277055
  max_hamiltonian_energy_error:  -0.6423477709345882
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▍                   |  ETA: 0:00:07[K
  iterations:                    4383
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9097206968291047
  log_density:                   -14.900875084250435
  hamiltonian_energy:            17.744049189020156
  hamiltonian_energy_error:      0.21507994131614083
  max_hamiltonian_energy_error:  0.2569133802086583
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▊                  |  ETA: 0:00:06[K
  iterations:                    4946
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8065444259309017
  log_density:                   -13.077712904426974
  hamiltonian_energy:            15.069091601307816
  hamiltonian_energy_error:      0.30575253332911423
  max_hamiltonian_energy_error:  0.3655153096429462
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|██████████████                 |  ETA: 0:00:05[K
  iterations:                    5442
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7022281674890526
  log_density:                   -12.47166744861693
  hamiltonian_energy:            22.66111384653859
  hamiltonian_energy_error:      -0.06821413329706871
  max_hamiltonian_energy_error:  0.843516124437663
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▍               |  ETA: 0:00:04[K
  iterations:                    5967
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9415974769394128
  log_density:                   -11.542747024552474
  hamiltonian_energy:            17.255443321301243
  hamiltonian_energy_error:      -0.2709807024064048
  max_hamiltonian_energy_error:  -0.2709807024064048
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▊              |  ETA: 0:00:04[K
  iterations:                    6491
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7577138729851915
  log_density:                   -15.140316873584794
  hamiltonian_energy:            19.480308596749133
  hamiltonian_energy_error:      0.3623068631496551
  max_hamiltonian_energy_error:  0.5452831888279448
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|██████████████████▏            |  ETA: 0:00:03[K
  iterations:                    7014
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.08116982893327
  hamiltonian_energy:            17.97704045294335
  hamiltonian_energy_error:      -0.19394630954663228
  max_hamiltonian_energy_error:  -0.2641391851447139
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▌           |  ETA: 0:00:03[K
  iterations:                    7531
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9796756972328734
  log_density:                   -13.730468832354934
  hamiltonian_energy:            16.777539063779745
  hamiltonian_energy_error:      0.04011070005220674
  max_hamiltonian_energy_error:  -0.10015365189184422
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▉          |  ETA: 0:00:02[K
  iterations:                    8060
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.385318021359677
  hamiltonian_energy:            15.468392687475609
  hamiltonian_energy_error:      -0.05013216990791136
  max_hamiltonian_energy_error:  -0.3113916752233248
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▎        |  ETA: 0:00:02[K
  iterations:                    8612
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9998465606347949
  log_density:                   -13.74417218184967
  hamiltonian_energy:            16.102543812282818
  hamiltonian_energy_error:      -0.02555260106903745
  max_hamiltonian_energy_error:  -0.31827468139284143
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:02[K
  iterations:                    9092
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -18.88698736557293
  hamiltonian_energy:            26.248621322359607
  hamiltonian_energy_error:      -0.13004633035469126
  max_hamiltonian_energy_error:  -0.43012800420741826
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▊      |  ETA: 0:00:01[K
  iterations:                    9591
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8401584100143573
  log_density:                   -16.450795839016955
  hamiltonian_energy:            20.083875179808885
  hamiltonian_energy_error:      0.22244910511202676
  max_hamiltonian_energy_error:  0.4300146264862974
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████     |  ETA: 0:00:01[K
  iterations:                    10041
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9563844235385323
  log_density:                   -12.909671380065435
  hamiltonian_energy:            17.562351455982324
  hamiltonian_energy_error:      -0.07714882022195724
  max_hamiltonian_energy_error:  -0.1563265148495887
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▊    |  ETA: 0:00:01[K
  iterations:                    10338
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8737797117995735
  log_density:                   -13.906301909664291
  hamiltonian_energy:            18.340162948494235
  hamiltonian_energy_error:      0.1076288463679198
  max_hamiltonian_energy_error:  0.22863406958943955
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▏  |  ETA: 0:00:01[K
  iterations:                    10867
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9980683998720515
  log_density:                   -13.651954349472545
  hamiltonian_energy:            17.95426042955154
  hamiltonian_energy_error:      -0.08103748517631004
  max_hamiltonian_energy_error:  -0.11714736724339048
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▌ |  ETA: 0:00:00[K
  iterations:                    11424
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.327095821362754
  hamiltonian_energy:            16.036791085675393
  hamiltonian_energy_error:      -0.0002936517386196158
  max_hamiltonian_energy_error:  -0.33580035947264975
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|██████████████████████████████▉|  ETA: 0:00:00[K
  iterations:                    11943
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9835323578434669
  log_density:                   -13.712096530789623
  hamiltonian_energy:            18.090397995173497
  hamiltonian_energy_error:      -0.07586855204639775
  max_hamiltonian_energy_error:  -0.18210968513778525
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9846528203062278
  log_density:                   -14.387826837928614
  hamiltonian_energy:            16.23314995369417
  hamiltonian_energy_error:      0.05954228083357904
  max_hamiltonian_energy_error:  -0.29303868353340334
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6706949101469999
  nom_step_size:                 0.6706949101469999
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9856863542195148, 0.9440 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.357496486 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9856863542195148, 0.9440 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.671), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0763181792338705
└   average_acceptance_rate = 0.8768622167109964
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.148892194 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡆⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠘⡄│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡆⠀⠀⠀⠀⠀⢠⠃⠀⠘│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠸⡀⠀⡸⢣⠀⡸⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⢣⡰⠁⠀⠣⡇⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠉⠢⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠤⠇⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⡰⢣⠀⠀⠀⢀⡠⠒⠒⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⢠⠃⠀⠱⠤⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⣀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⡰⠁⠀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠵⣤⣠⠖⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
