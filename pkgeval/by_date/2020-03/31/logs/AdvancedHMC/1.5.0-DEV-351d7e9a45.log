Julia Version 1.5.0-DEV.552
Commit 351d7e9a45 (2020-03-31 14:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ProgressMeter ──────────────── v1.2.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Rmath ──────────────────────── v0.6.1
  Installed StatsFuns ──────────────────── v0.9.4
  Installed Parameters ─────────────────── v0.12.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed InplaceOps ─────────────────── v0.3.0
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed DataAPI ────────────────────── v1.1.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed Requires ───────────────────── v1.0.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed StatsBase ──────────────────── v0.32.2
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Missings ───────────────────── v0.4.3
  Installed LazyArrays ─────────────────── v0.15.1
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed FillArrays ─────────────────── v0.8.6
  Installed MacroTools ─────────────────── v0.5.5
  Installed DataStructures ─────────────── v0.17.10
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.3.3+0
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.6
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.1
   1914dd2f + MacroTools v0.5.5
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
     Status `/tmp/jl_BNf6JE/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.6.6
   31c24e10 Distributions v0.23.2
   f6369f11 ForwardDiff v0.10.10
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.1
   1dea7af3 OrdinaryDiffEq v5.32.1
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.10.1
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.12
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_BNf6JE/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.5.6
   1520ce14 AbstractTrees v0.3.2
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.6.2
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.6.6
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v1.0.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.3.3+0
   88cd18e8 ConsoleProgressMonitor v0.1.2
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.25.1
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   31c24e10 Distributions v0.23.2
   ced4e74d DistributionsAD v0.4.9
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.5.0
   da5c29d0 EllipsisNotation v0.4.0
   cad2338a EllipticalSliceSampling v0.2.1
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+5
   1a297f60 FillArrays v0.8.6
   6a86dc24 FiniteDiff v2.3.0
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.10
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.3.0
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.2
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.3
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.1
   1d6d02ad LeftChildRightSiblingTrees v0.1.2
   6f1fad26 Libtask v0.3.3
   093fc24a LightGraphs v1.3.1
   d3d80556 LineSearches v7.0.1
   6fdf6af0 LogDensityProblems v0.10.3
   e6f89c97 LoggingExtras v0.4.0
   c7f686f2 MCMCChains v3.0.8
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.5
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.9+0
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.32.1
   90014a1f PDMats v0.9.12
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v1.0.0
   f27b6e38 Polynomials v0.6.1
   33c8b6b6 ProgressLogging v0.1.2
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   37e2e3b7 ReverseDiff v1.1.0
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v1.0.1
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   5d786b92 TerminalLoggers v0.1.1
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.10.1
   3a884ed6 UnPack v0.1.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.12
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.132344472
│   t_steps = 0.007004571
└   t_step / t_steps = 18.894015350833048
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 5:44:00[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.000908203045186823
  log_density:                   -10.43770111148991
  hamiltonian_energy:            15.362378114634843
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  7.004042586314608
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:22[K
  iterations:                    1357
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6092790036280747
  log_density:                   -13.717320392758356
  hamiltonian_energy:            21.91284297916706
  hamiltonian_energy_error:      -0.03324488497077738
  max_hamiltonian_energy_error:  1.7107559061869857
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9894799797278807
  nom_step_size:                 0.9894799797278807
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8123407009732848, 0.9756 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|███▉                           |  ETA: 0:00:20[K
  iterations:                    1516
  n_steps:                       127
  is_accept:                     true
  acceptance_rate:               0.9658965213498708
  log_density:                   -16.951535813260925
  hamiltonian_energy:            23.064841223771523
  hamiltonian_energy_error:      -0.07725572147071347
  max_hamiltonian_energy_error:  -0.4684915061072239
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.8430233766050761
  nom_step_size:                 0.8430233766050761
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8123407009732848, 0.9756 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:17[K
  iterations:                    1786
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8399944099969058
  log_density:                   -14.023304652026564
  hamiltonian_energy:            16.720336316560964
  hamiltonian_energy_error:      0.190510786348856
  max_hamiltonian_energy_error:  0.3660813491738182
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9825753553034362
  nom_step_size:                 0.9825753553034362
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8123407009732848, 0.9756 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▏                         |  ETA: 0:00:16[K
  iterations:                    2000
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9942652107888352
  log_density:                   -11.19903743133463
  hamiltonian_energy:            14.512897765001988
  hamiltonian_energy_error:      -0.011626963203557494
  max_hamiltonian_energy_error:  -0.01944848704252955
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.2565817977127694
  nom_step_size:                 0.2565817977127694
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▍                        |  ETA: 0:00:13[K
  iterations:                    2463
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7541786511652424
  log_density:                   -16.571869685767787
  hamiltonian_energy:            21.699079443213964
  hamiltonian_energy_error:      0.3794274028449145
  max_hamiltonian_energy_error:  0.5402763669487918
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▎                       |  ETA: 0:00:11[K
  iterations:                    2822
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.828911599945562
  log_density:                   -14.921468466533158
  hamiltonian_energy:            19.52904307104062
  hamiltonian_energy_error:      0.21679778887937573
  max_hamiltonian_energy_error:  0.40877896380385437
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▌                      |  ETA: 0:00:09[K
  iterations:                    3287
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6384851619209803
  log_density:                   -19.718197227570457
  hamiltonian_energy:            26.17328415324153
  hamiltonian_energy_error:      0.5807097518682696
  max_hamiltonian_energy_error:  0.8047853087737984
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▍                     |  ETA: 0:00:08[K
  iterations:                    3652
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6675316108086635
  log_density:                   -13.596663012301464
  hamiltonian_energy:            22.06858881521736
  hamiltonian_energy_error:      0.05129835918361891
  max_hamiltonian_energy_error:  0.7303198764739456
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▍                    |  ETA: 0:00:07[K
  iterations:                    4033
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.996244036729669
  log_density:                   -14.543502194938933
  hamiltonian_energy:            19.73006295245498
  hamiltonian_energy_error:      -0.12876552739076175
  max_hamiltonian_energy_error:  -0.20003339785451146
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▋                   |  ETA: 0:00:06[K
  iterations:                    4511
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6294016168038938
  log_density:                   -19.979068432085878
  hamiltonian_energy:            22.70657446966057
  hamiltonian_energy_error:      0.879062805589971
  max_hamiltonian_energy_error:  0.879062805589971
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▋                  |  ETA: 0:00:06[K
  iterations:                    4870
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8353161892863865
  log_density:                   -15.353375553589013
  hamiltonian_energy:            22.206538392912964
  hamiltonian_energy_error:      -0.04104531605404915
  max_hamiltonian_energy_error:  0.6127116978416112
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▉                 |  ETA: 0:00:05[K
  iterations:                    5352
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.347398430489893
  hamiltonian_energy:            21.292855231590245
  hamiltonian_energy_error:      -0.6294331735414396
  max_hamiltonian_energy_error:  -0.6294331735414396
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▊                |  ETA: 0:00:04[K
  iterations:                    5725
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.567261912392066
  hamiltonian_energy:            16.609805804284843
  hamiltonian_energy_error:      -0.25780614056611384
  max_hamiltonian_energy_error:  -0.35970189398268815
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████               |  ETA: 0:00:04[K
  iterations:                    6192
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.923705602341674
  log_density:                   -12.824819586084981
  hamiltonian_energy:            16.91083696629571
  hamiltonian_energy_error:      0.007317303955908017
  max_hamiltonian_energy_error:  0.2225237319955795
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████              |  ETA: 0:00:04[K
  iterations:                    6569
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8535362920696683
  log_density:                   -10.948931004240514
  hamiltonian_energy:            14.249543047956706
  hamiltonian_energy_error:      0.01908096499604639
  max_hamiltonian_energy_error:  0.2974502284658289
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|█████████████████▉             |  ETA: 0:00:03[K
  iterations:                    6943
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8402607128189068
  log_density:                   -13.355221784351738
  hamiltonian_energy:            19.05437530384049
  hamiltonian_energy_error:      -0.0034130028041303717
  max_hamiltonian_energy_error:  0.304703812451951
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▏           |  ETA: 0:00:03[K
  iterations:                    7380
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.788853626132428
  log_density:                   -14.058714273356241
  hamiltonian_energy:            19.678857038960697
  hamiltonian_energy_error:      0.12388378453528048
  max_hamiltonian_energy_error:  0.41050930819717024
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████▏          |  ETA: 0:00:03[K
  iterations:                    7779
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5499430055963648
  log_density:                   -13.391985720950494
  hamiltonian_energy:            22.43091361744262
  hamiltonian_energy_error:      0.10653363802970972
  max_hamiltonian_energy_error:  1.0228014565178398
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▍         |  ETA: 0:00:02[K
  iterations:                    8291
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8089142941320249
  log_density:                   -23.749116180727007
  hamiltonian_energy:            29.652801663474975
  hamiltonian_energy_error:      0.6669868144053268
  max_hamiltonian_energy_error:  0.6669868144053268
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▌        |  ETA: 0:00:02[K
  iterations:                    8698
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9749933727389765
  log_density:                   -15.924156506153402
  hamiltonian_energy:            23.208447231648044
  hamiltonian_energy_error:      -0.126808693645021
  max_hamiltonian_energy_error:  -0.15628137837375178
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▋       |  ETA: 0:00:02[K
  iterations:                    9143
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7427250530613896
  log_density:                   -13.379104691986399
  hamiltonian_energy:            25.38708595658619
  hamiltonian_energy_error:      -0.5290615892929438
  max_hamiltonian_energy_error:  0.7227421089715342
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▉      |  ETA: 0:00:01[K
  iterations:                    9613
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -10.560486838259912
  hamiltonian_energy:            15.685905515516385
  hamiltonian_energy_error:      -0.602540050388825
  max_hamiltonian_energy_error:  -0.6103884894984439
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▊     |  ETA: 0:00:01[K
  iterations:                    9981
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.019735476108234
  hamiltonian_energy:            22.045653249676157
  hamiltonian_energy_error:      -0.2774953823787243
  max_hamiltonian_energy_error:  -0.5513563553759226
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|███████████████████████████    |  ETA: 0:00:01[K
  iterations:                    10451
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9916270943406548
  log_density:                   -14.804544489653871
  hamiltonian_energy:            21.822201233831677
  hamiltonian_energy_error:      -0.2963507545984463
  max_hamiltonian_energy_error:  -0.34190651398275307
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 90%|████████████████████████████   |  ETA: 0:00:01[K
  iterations:                    10822
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7990822849792293
  log_density:                   -13.8444917878596
  hamiltonian_energy:            16.278432613930313
  hamiltonian_energy_error:      0.3207992063578242
  max_hamiltonian_energy_error:  0.39296588438546287
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▏ |  ETA: 0:00:00[K
  iterations:                    11284
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9336653492068218
  log_density:                   -12.842289606924904
  hamiltonian_energy:            16.992072380696875
  hamiltonian_energy_error:      -0.00013448159137752214
  max_hamiltonian_energy_error:  0.13902624967462174
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████▏|  ETA: 0:00:00[K
  iterations:                    11662
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7577973029052283
  log_density:                   -13.74456953498349
  hamiltonian_energy:            17.765501460627746
  hamiltonian_energy_error:      0.26771296054086946
  max_hamiltonian_energy_error:  0.5502363663767831
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.973262456327194
  log_density:                   -13.942689066754976
  hamiltonian_energy:            18.6351149306655
  hamiltonian_energy_error:      -0.05525334056126141
  max_hamiltonian_energy_error:  0.06390142414590372
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165067885616877
  nom_step_size:                 0.7165067885616877
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9535025884810487, 0.9114 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.673406871 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9535025884810487, 0.9114 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.717), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0903599514412463
└   average_acceptance_rate = 0.8642129360167572
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.207776306 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⢣⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠸⡀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⡸⠀⠀⡇│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⠀⠀⠀⠀⠀⡜⠑⡄⡇⠀⠀⢸│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠈⠢⡠⠔⠉⠉⠣⡀⡸⠀⠀⠈⠁⠀⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⢰⡆⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⢰⢆⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠑⠃⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⡜⢱⢀⡔⠁⠀⠀⠀⠀⠀⠀⢀⠇⠀⠱⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⢀⠇⢠⡏⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⢸⡠⠃⠸⠤⠒⠒⠢⠤⠔⠒⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⢀⡗⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠒⢖⡲⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
