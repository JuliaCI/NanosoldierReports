Julia Version 1.5.0-DEV.399
Commit 780bbe6c2d (2020-03-04 16:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_i4Ekjg/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_i4Ekjg/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.19999239536266955 -0.11779379245671875; -0.19999239536266955 0.0 0.03790238855389785; 0.11779379245671875 -0.03790238855389785 0.0])
dAA = so3([0.0 -0.02151250939826597 0.03289145640523761; 0.02151250939826597 0.0 0.08417184102568837; -0.03289145640523761 -0.08417184102568837 0.0])
dAA = so3([0.0 -0.04758925620539298 -0.2502596657950682; 0.04758925620539298 0.0 -0.19111701485574517; 0.2502596657950682 0.19111701485574517 0.0])
dAA = Quaternion(0.9987805331890863, [-0.018958905771635597, -0.0351779695068962, 0.02899166907645188])
dAA = SO3([0.9930615381616346 0.1021721250980037 -0.05822060010861105; -0.10326999902307703 0.9945220238455408 -0.016163272810404458; 0.05625023311793996 0.022063565875165593 0.998172885994731])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9951946687758935 -0.06191198497303491 0.07585827151167093; 0.0446862757590795 0.9765192988734249 0.21074438470938708; -0.08712466928960585 -0.2063418644978603 0.9745934162289028]), [-0.37902388553897853, -1.1779379245671875, -1.9999239536266953])
xj = SE3(SO3([0.9741234474302786 -0.13841571577129458 -0.17867456112740143; 0.1556406365564962 0.9840433550201333 0.0862245190940983; 0.16388868606111276 -0.11180234822328222 0.9801228155251371]), [1.9111701485574517, -2.502596657950682, 0.4758925620539297])
Dx = SE3(SO3([0.9621187144433072 -0.08403660707431745 -0.25935579420825444; 0.05785907199522436 0.9925764238078085 -0.10697836551729875; 0.2664205455774932 0.08791980193527577 0.9598386329596517]), [2.0042901325980575, -1.9462098721946575, 2.307480247109195])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
