Julia Version 1.5.0-DEV.415
Commit 4ee9be2781 (2020-03-06 18:27 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_QVDHdj/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_QVDHdj/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.10362999199674366 0.08424745270725725; -0.10362999199674366 0.0 -0.064679368830191; -0.08424745270725725 0.064679368830191 0.0])
dAA = so3([0.0 0.07919727859925411 0.0723530486214849; -0.07919727859925411 0.0 0.24994214721063696; -0.0723530486214849 -0.24994214721063696 0.0])
dAA = so3([0.0 0.23355012513609874 -0.01976891996256082; -0.23355012513609874 0.0 0.04530024720387696; 0.01976891996256082 -0.04530024720387696 0.0])
dAA = Quaternion(0.9982882776556128, [0.041899118077656686, 0.009764451307443082, -0.03961860788025412])
dAA = SO3([0.9879032813138529 -0.009944772865213508 0.1547520864543749; 0.03113117965251057 0.9903438084900669 -0.13509252621382672; -0.1519143061820253 0.13827596493262906 0.978673490546865])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9654044545047801 0.12871600718496268 0.2267739595206835; -0.23745314151148944 0.7933279041857091 0.5605772400183894; -0.10775084597650506 -0.595031953708934 0.7964463128527097]), [0.64679368830191, 0.8424745270725725, -1.0362999199674365])
xj = SE3(SO3([0.9793194778304047 0.1990814933174693 0.036054394468218925; -0.1873285671489515 0.9595594912147314 -0.2101275582822175; -0.07642884450195675 0.19902799259956463 0.9770089507726546]), [-0.4530024720387696, -0.1976891996256082, -2.3355012513609874])
Dx = SE3(SO3([0.998156415697225 -0.05710168977356461 -0.020571019116028988; 0.022918718038118402 0.6684422797518466 -0.7434108224956397; 0.05620055307519374 0.7415688205858968 0.6685186475850052]), [-0.6747679250979072, -0.1936859733075169, -1.8672413510675336])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
