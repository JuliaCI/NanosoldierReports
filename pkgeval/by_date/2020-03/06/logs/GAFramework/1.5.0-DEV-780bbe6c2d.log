Julia Version 1.5.0-DEV.399
Commit 780bbe6c2d (2020-03-04 16:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.2
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.2
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_FXjyXQ/Project.toml`
   5789e2e9 FileIO v1.2.2
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_FXjyXQ/Manifest.toml`
   5789e2e9 FileIO v1.2.2
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172205011482511
curgen: 20 fitness: 0.2172205011482511
curgen: 30 fitness: 0.2172303576340175
curgen: 40 fitness: 0.2172303576340175
curgen: 50 fitness: 0.2172303576340175
CoordinateCreature{Array{Float64,1}}([-0.22282015652521509], -0.2172303576340175) -0.22282015652521509 -0.2172303576340175
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258091095266492
curgen: 100 fitness: 3.258253304400472
curgen: 150 fitness: 3.258297097738786
curgen: 200 fitness: 3.2583086086180026
curgen: 250 fitness: 3.2583159523286387
curgen: 300 fitness: 3.2583382291954748
curgen: 350 fitness: 3.2584312559912223
curgen: 400 fitness: 3.2584312559912223
curgen: 450 fitness: 3.2584331935273174
curgen: 500 fitness: 3.2584393637700084
CoordinateCreature{Array{Float64,1}}([-0.22267722947422153, -0.22239951731828575, -0.22236833429911199, 0.22302802484831927, -0.22273500067959984, 0.22275350253257925, 0.2221759059137306, 0.22236929795663327, -0.22250874982087065, -0.22279249313218308, 0.22270872447290518, -0.2233805387884899, 0.22251031141234662, -0.22276271379156004, 0.22223711163796342], -3.2584393637700084) [-0.22267722947422153, -0.22239951731828575, -0.22236833429911199, 0.22302802484831927, -0.22273500067959984, 0.22275350253257925, 0.2221759059137306, 0.22236929795663327, -0.22250874982087065, -0.22279249313218308, 0.22270872447290518, -0.2233805387884899, 0.22251031141234662, -0.22276271379156004, 0.22223711163796342] -3.2584393637700084
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002286909687938987
curgen: 100 fitness: -0.0022825892074536114
curgen: 150 fitness: -0.0022825892074536114
curgen: 200 fitness: -0.002275056616610982
curgen: 250 fitness: -0.002275056616610982
curgen: 300 fitness: -0.002275056616610982
curgen: 350 fitness: -0.002275056616610982
curgen: 400 fitness: -0.0022361768954795025
curgen: 450 fitness: -0.0018357610556734016
curgen: 500 fitness: -0.0018331057457317002
CoordinateCreature{Array{Float64,1}}([-0.0008637344316748329, 0.00017587477410453537, -0.0020172336573258676, 5.1055140732609877e-5, -0.00012620590377100812, -0.0005223355301454378, -0.00016063790994501752, 0.00017425969756162734, 0.0005548108915799854, 0.0004038337597312591, -3.396869210440151e-5, 1.1010935668768869e-5, -0.0006144749586654789, -0.0007545484764974186, 0.0016208201778105495], 0.0018331057457317002) [-0.0008637344316748329, 0.00017587477410453537, -0.0020172336573258676, 5.1055140732609877e-5, -0.00012620590377100812, -0.0005223355301454378, -0.00016063790994501752, 0.00017425969756162734, 0.0005548108915799854, 0.0004038337597312591, -3.396869210440151e-5, 1.1010935668768869e-5, -0.0006144749586654789, -0.0007545484764974186, 0.0016208201778105495] 0.0018331057457317002
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
