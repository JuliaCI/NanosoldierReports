Julia Version 1.5.0-DEV.486
Commit 1d2ef1687b (2020-03-20 09:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed LightXML ───────────────────── v0.8.1
  Installed CodecZlib ──────────────────── v0.6.0
  Installed Distances ──────────────────── v0.8.2
  Installed JLD2 ───────────────────────── v0.1.12
  Installed Parameters ─────────────────── v0.12.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed StaticArrays ───────────────── v0.12.1
  Installed Gridap ─────────────────────── v0.8.0
  Installed Reexport ───────────────────── v0.2.0
  Installed FillArrays ─────────────────── v0.8.5
  Installed DiffResults ────────────────── v1.0.2
  Installed QuadGK ─────────────────────── v2.3.1
  Installed Requires ───────────────────── v1.0.1
  Installed SpecialFunctions ───────────── v0.10.0
  Installed LineSearches ───────────────── v7.0.1
  Installed NLsolve ────────────────────── v4.3.0
  Installed DocStringExtensions ────────── v0.8.1
  Installed TranscodingStreams ─────────── v0.9.5
  Installed BinaryProvider ─────────────── v0.5.8
  Installed NaNMath ────────────────────── v0.3.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed ArrayInterface ─────────────── v2.6.0
  Installed FileIO ─────────────────────── v1.2.3
  Installed Parsers ────────────────────── v0.3.12
  Installed WriteVTK ───────────────────── v1.4.0
  Installed Polynomials ────────────────── v0.6.1
  Installed JSON ───────────────────────── v0.21.0
  Installed FiniteDiff ─────────────────── v2.3.0
  Installed OrderedCollections ─────────── v1.1.0
  Installed ForwardDiff ────────────────── v0.10.9
  Installed CompilerSupportLibraries_jll ─ v0.3.0+0
  Installed Combinatorics ──────────────── v1.0.0
  Installed CommonSubexpressions ───────── v0.2.0
  Installed NLSolversBase ──────────────── v7.6.1
  Installed RecipesBase ────────────────── v0.8.0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed DataStructures ─────────────── v0.17.10
  Installed BSON ───────────────────────── v0.2.5
#=#=#                                                                         ##############################                                            42.2%######################################################################## 100.0%
#=#=#                                                                         ##                                                                         3.2%#######                                                                   10.4%##############                                                            20.1%######################                                                    30.6%#################################                                         46.7%##############################################                            64.9%###############################################################           87.5%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   56d4f2e9 + Gridap v0.8.0
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   4fba245c + ArrayInterface v2.6.0
   fbb218c0 + BSON v0.2.5
   b99e7846 + BinaryProvider v0.5.8
   944b1d66 + CodecZlib v0.6.0
   861a8166 + Combinatorics v1.0.0
   bbf7d656 + CommonSubexpressions v0.2.0
   e66e0078 + CompilerSupportLibraries_jll v0.3.0+0
   864edb3b + DataStructures v0.17.10
   163ba53b + DiffResults v1.0.2
   b552c78f + DiffRules v1.0.1
   b4f34e82 + Distances v0.8.2
   ffbed154 + DocStringExtensions v0.8.1
   442a2c76 + FastGaussQuadrature v0.4.2
   5789e2e9 + FileIO v1.2.3
   1a297f60 + FillArrays v0.8.5
   6a86dc24 + FiniteDiff v2.3.0
   f6369f11 + ForwardDiff v0.10.9
   56d4f2e9 + Gridap v0.8.0
   033835bb + JLD2 v0.1.12
   682c06a0 + JSON v0.21.0
   9c8b4983 + LightXML v0.8.1
   d3d80556 + LineSearches v7.0.1
   d41bc354 + NLSolversBase v7.6.1
   2774e3e8 + NLsolve v4.3.0
   77ba4419 + NaNMath v0.3.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   69de0a69 + Parsers v0.3.12
   f27b6e38 + Polynomials v0.6.1
   1fd47b50 + QuadGK v2.3.1
   3cdcf5f2 + RecipesBase v0.8.0
   189a3867 + Reexport v0.2.0
   ae029012 + Requires v1.0.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   3bb67fe8 + TranscodingStreams v0.9.5
   64499a7a + WriteVTK v1.4.0
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   a63ad114 + Mmap
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
   Building CodecZlib → `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
   Building LightXML ─→ `~/.julia/packages/LightXML/W8FVT/deps/build.log`
    Testing Gridap
     Status `/tmp/jl_CYmrcQ/Project.toml`
   fbb218c0 BSON v0.2.5
   861a8166 Combinatorics v1.0.0
   ffbed154 DocStringExtensions v0.8.1
   442a2c76 FastGaussQuadrature v0.4.2
   5789e2e9 FileIO v1.2.3
   1a297f60 FillArrays v0.8.5
   56d4f2e9 Gridap v0.8.0
   033835bb JLD2 v0.1.12
   682c06a0 JSON v0.21.0
   d3d80556 LineSearches v7.0.1
   2774e3e8 NLsolve v4.3.0
   1fd47b50 QuadGK v2.3.1
   90137ffa StaticArrays v0.12.1
   64499a7a WriteVTK v1.4.0
   37e2e46d LinearAlgebra
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_CYmrcQ/Manifest.toml`
   4fba245c ArrayInterface v2.6.0
   fbb218c0 BSON v0.2.5
   b99e7846 BinaryProvider v0.5.8
   944b1d66 CodecZlib v0.6.0
   861a8166 Combinatorics v1.0.0
   bbf7d656 CommonSubexpressions v0.2.0
   e66e0078 CompilerSupportLibraries_jll v0.3.0+0
   864edb3b DataStructures v0.17.10
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   ffbed154 DocStringExtensions v0.8.1
   442a2c76 FastGaussQuadrature v0.4.2
   5789e2e9 FileIO v1.2.3
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.3.0
   f6369f11 ForwardDiff v0.10.9
   56d4f2e9 Gridap v0.8.0
   033835bb JLD2 v0.1.12
   682c06a0 JSON v0.21.0
   9c8b4983 LightXML v0.8.1
   d3d80556 LineSearches v7.0.1
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   77ba4419 NaNMath v0.3.3
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   1fd47b50 QuadGK v2.3.1
   3cdcf5f2 RecipesBase v0.8.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   3bb67fe8 TranscodingStreams v0.9.5
   64499a7a WriteVTK v1.4.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Test Summary: | Pass  Total
Helpers       |   13     13
207.481676 seconds (13.17 M allocations: 683.662 MiB, 0.36% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  2.194496 seconds (2.17 M allocations: 120.358 MiB, 1.58% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 26.256680 seconds (29.14 M allocations: 1.373 GiB, 3.93% gc time)
Test Summary: | Pass  Total
Algebra       |  685    685
 70.792534 seconds (79.81 M allocations: 3.667 GiB, 3.47% gc time)
Test Summary: | Pass  Total
TensorValues  |  227    227
 14.141241 seconds (13.21 M allocations: 663.547 MiB, 4.25% gc time)
Test Summary: | Pass  Total
Arrays        |  292    292
 24.340817 seconds (25.30 M allocations: 1.215 GiB, 2.61% gc time)
Test Summary: | Pass  Total
Fields        |  580    580
 57.771679 seconds (50.35 M allocations: 2.421 GiB, 2.88% gc time)
Test Summary: | Pass  Total
Polynomials   |  261    261
 24.835896 seconds (21.35 M allocations: 1.047 GiB, 5.67% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 14.775525 seconds (29.78 M allocations: 1.313 GiB, 7.14% gc time)
Test Summary: | Pass  Total
ReferenceFEs  |  981    981
 78.983411 seconds (78.32 M allocations: 3.812 GiB, 4.53% gc time)
Test Summary: | Pass  Total
Geometry      | 2105   2105
131.575125 seconds (125.84 M allocations: 6.253 GiB, 3.93% gc time)
Test Summary: | Pass  Total
FESpaces      |  917    917
305.072802 seconds (237.37 M allocations: 11.566 GiB, 3.80% gc time)
Test Summary: | Pass  Total
MultiField    |  161    161
 96.505213 seconds (65.40 M allocations: 3.249 GiB, 2.63% gc time)
Test Summary: |
Visualization | No tests
 26.133584 seconds (20.81 M allocations: 1.040 GiB, 2.96% gc time)
Test Summary: | Pass  Total
Gridap        |   24     24
604.969596 seconds (357.45 M allocations: 18.266 GiB, 3.73% gc time)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000005 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000017 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000000 seconds
  0.000102 seconds (1000 allocations: 31.250 KiB)
  0.000024 seconds
  0.000000 seconds
  0.000024 seconds
  0.000033 seconds
  0.000026 seconds
+++ running suite for n = 100000 +++
  0.000000 seconds
  0.006006 seconds (100.00 k allocations: 3.052 MiB)
  0.002769 seconds
  0.000000 seconds
  0.002557 seconds
  0.003854 seconds
  0.002828 seconds
WARNING: replacing module ArraysBenchs.
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000004 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000004 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000004 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1000 +++
  0.000003 seconds
  0.000003 seconds
  0.000064 seconds (1000 allocations: 31.250 KiB)
  0.000320 seconds (1000 allocations: 31.250 KiB)
  0.000005 seconds
  0.000114 seconds
  0.000168 seconds (2 allocations: 288 bytes)
+++ running suite for n = 100000 +++
  0.000290 seconds
  0.000445 seconds
  0.007909 seconds (100.00 k allocations: 3.052 MiB)
  0.031569 seconds (100.00 k allocations: 3.052 MiB)
  0.000451 seconds
  0.012463 seconds
  0.016325 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000029 seconds
  0.000028 seconds
  0.000089 seconds
  0.000080 seconds
+++ running suite for n = 100000 +++
  0.002882 seconds
  0.002843 seconds
  0.008253 seconds
  0.007136 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000018 seconds
  0.000000 seconds
  0.000054 seconds
  0.000000 seconds
+++ running suite for n = 100000 +++
  0.001776 seconds
  0.000000 seconds
  0.005281 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000005 seconds
  0.000003 seconds
  0.000003 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000097 seconds
  0.000089 seconds
  0.000127 seconds
+++ running suite for n = 100000 +++
  0.010823 seconds
  0.011048 seconds
  0.013334 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds (3 allocations: 48 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds (3 allocations: 48 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000004 seconds (30 allocations: 480 bytes)
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000006 seconds
  0.000005 seconds
+++ running suite for n = 1000 +++
  0.000030 seconds
  0.000004 seconds
  0.000112 seconds
  0.000123 seconds
  0.000027 seconds
  0.000002 seconds
  0.000136 seconds
  0.000127 seconds
  0.000027 seconds
  0.000009 seconds
  0.000257 seconds (3.49 k allocations: 54.516 KiB)
  0.000110 seconds
  0.000082 seconds
  0.000002 seconds
  0.000693 seconds
  0.000490 seconds
+++ running suite for n = 100000 +++
  0.003051 seconds
  0.000417 seconds
  0.017519 seconds
  0.013189 seconds
  0.002827 seconds
  0.000166 seconds
  0.013635 seconds
  0.012594 seconds
  0.002713 seconds
  0.000965 seconds
  0.028881 seconds (399.49 k allocations: 6.096 MiB)
  0.011134 seconds
  0.008372 seconds
  0.000160 seconds
  0.049925 seconds
  0.049091 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000003 seconds
  0.000004 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000003 seconds
  0.000004 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1000 +++
  0.000098 seconds
  0.000008 seconds
  0.000203 seconds
  0.000196 seconds (1 allocation: 112 bytes)
  0.000006 seconds
  0.000216 seconds
  0.000192 seconds (1 allocation: 144 bytes)
+++ running suite for n = 100000 +++
  0.007405 seconds
  0.000681 seconds
  0.019311 seconds
  0.019630 seconds (1 allocation: 112 bytes)
  0.000566 seconds
  0.022204 seconds
  0.020036 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
  0.000004 seconds
  0.000001 seconds
  0.000005 seconds
  0.000001 seconds
  0.000002 seconds
  0.000003 seconds
+++ running suite for n = 1 +++
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000003 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
  0.000001 seconds
  0.000001 seconds
  0.000003 seconds
  0.000001 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000003 seconds
+++ running suite for n = 1000 +++
  0.000084 seconds
  0.000112 seconds
  0.000346 seconds
  0.000087 seconds
  0.000192 seconds
  0.000287 seconds
  0.000104 seconds
  0.000124 seconds
  0.000094 seconds
  0.000101 seconds
  0.000126 seconds
  0.000089 seconds
  0.000241 seconds
+++ running suite for n = 100000 +++
  0.008276 seconds
  0.017099 seconds
  0.035079 seconds
  0.008343 seconds
  0.010166 seconds
  0.028060 seconds
  0.010459 seconds
  0.011838 seconds
  0.009130 seconds
  0.009824 seconds
  0.012428 seconds
  0.008655 seconds
  0.025083 seconds
+++ running suite for n = 1 +++
  0.000002 seconds
  0.000001 seconds
  0.000002 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000003 seconds
  0.000014 seconds
+++ running suite for n = 1000 +++
  0.000087 seconds
  0.000303 seconds
  0.001370 seconds
+++ running suite for n = 100000 +++
  0.009014 seconds
  0.029139 seconds
  0.149647 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000005 seconds (3 allocations: 48 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000003 seconds (3 allocations: 48 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000009 seconds (30 allocations: 480 bytes)
+++ running suite for n = 1000 +++
  0.000077 seconds
  0.000667 seconds (3.49 k allocations: 54.516 KiB)
+++ running suite for n = 100000 +++
  0.007986 seconds
  0.072756 seconds (399.49 k allocations: 6.096 MiB)
+++ running suite for n = 1 +++
  0.000008 seconds
  0.000000 seconds
  0.000009 seconds (5 allocations: 96 bytes)
  0.374151 seconds (199.56 k allocations: 9.865 MiB)
  0.000000 seconds
  0.000003 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000005 seconds (5 allocations: 96 bytes)
  0.000011 seconds (5 allocations: 96 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000024 seconds (50 allocations: 960 bytes)
  0.000056 seconds (50 allocations: 960 bytes)
  0.000001 seconds
  0.000003 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000030 seconds
  0.000177 seconds
  0.002317 seconds (5.49 k allocations: 101.391 KiB)
  0.005152 seconds (5.49 k allocations: 101.391 KiB)
  0.000034 seconds
  0.000158 seconds
  0.000001 seconds
+++ running suite for n = 100000 +++
  0.002510 seconds
  0.014509 seconds
  0.239245 seconds (599.49 k allocations: 10.673 MiB)
  0.531702 seconds (599.49 k allocations: 10.673 MiB)
  0.003472 seconds
  0.016205 seconds
  0.000089 seconds
+++ running suite for n = 1 +++
  0.000005 seconds
  0.000004 seconds
  0.000007 seconds
  0.000010 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1 +++
  0.000002 seconds
  0.000003 seconds
  0.000002 seconds
  0.000005 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 10 +++
  0.000008 seconds
  0.000016 seconds
  0.000013 seconds
  0.000036 seconds (300 allocations: 14.062 KiB)
+++ running suite for n = 1000 +++
  0.000749 seconds
  0.001484 seconds
  0.001258 seconds
  0.003288 seconds (30.00 k allocations: 1.373 MiB)
+++ running suite for n = 100000 +++
  0.075478 seconds
  0.149091 seconds
  0.123095 seconds
  0.666593 seconds (3.00 M allocations: 137.329 MiB, 37.71% gc time)
    Testing Gridap tests passed 
