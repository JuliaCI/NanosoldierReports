Julia Version 1.5.0-DEV.483
Commit 7f28d91b70 (2020-03-18 17:21 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed PyCallUtils ──────── v0.2.1
  Installed Requires ─────────── v0.5.2
  Installed BSON ─────────────── v0.2.5
  Installed OrderedCollections ─ v1.1.0
  Installed MacroTools ───────── v0.5.4
  Installed PyCall ───────────── v1.91.4
  Installed DataStructures ───── v0.17.10
  Installed JSON ─────────────── v0.21.0
  Installed VersionParsing ───── v1.2.0
  Installed Parsers ──────────── v0.3.12
  Installed Conda ────────────── v1.4.1
   Updating `~/.julia/environments/v1.5/Project.toml`
   02651160 + PyCallUtils v0.2.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   fbb218c0 + BSON v0.2.5
   8f4d0f93 + Conda v1.4.1
   864edb3b + DataStructures v0.17.10
   682c06a0 + JSON v0.21.0
   1914dd2f + MacroTools v0.5.4
   bac558e1 + OrderedCollections v1.1.0
   69de0a69 + Parsers v0.3.12
   438e738f + PyCall v1.91.4
   02651160 + PyCallUtils v0.2.1
   ae029012 + Requires v0.5.2
   81def892 + VersionParsing v1.2.0
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   a63ad114 + Mmap
   de0858da + Printf
   9a3f8284 + Random
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   4ec0a83e + Unicode
   Building Conda ─→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building PyCall → `~/.julia/packages/PyCall/zqDXB/deps/build.log`
    Testing PyCallUtils
     Status `/tmp/jl_Hju24H/Project.toml`
   fbb218c0 BSON v0.2.5
   438e738f PyCall v1.91.4
   02651160 PyCallUtils v0.2.1
   ae029012 Requires v0.5.2
   9a3f8284 Random
   9e88b42a Serialization
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_Hju24H/Manifest.toml`
   fbb218c0 BSON v0.2.5
   8f4d0f93 Conda v1.4.1
   864edb3b DataStructures v0.17.10
   682c06a0 JSON v0.21.0
   1914dd2f MacroTools v0.5.4
   bac558e1 OrderedCollections v1.1.0
   69de0a69 Parsers v0.3.12
   438e738f PyCall v1.91.4
   02651160 PyCallUtils v0.2.1
   ae029012 Requires v0.5.2
   81def892 VersionParsing v1.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   de0858da Printf
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   4ec0a83e Unicode
┌ Warning: `@get!(dict, key, default)` at /home/pkgeval/.julia/packages/Requires/9Jse8/src/require.jl:11 is deprecated, use `get!(()->default, dict, key)` instead.
│   caller = include(::Function, ::Module, ::String) at Base.jl:380
└ @ Base ./Base.jl:380
WARNING: Method definition getindex(PyCall.PyObject, Union{AbstractString, Symbol}) in module PyCall at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/PyCall.jl:327 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/8LLTL/src/PyCallUtils.jl:45.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition setindex!(PyCall.PyObject, Any, Union{AbstractString, Symbol}) in module PyCall at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/PyCall.jl:336 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/8LLTL/src/PyCallUtils.jl:46.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition getindex(PyCall.PyObject, Integer) in module PyCall at deprecated.jl:65 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/8LLTL/src/PyCallUtils.jl:48.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition getindex(PyCall.PyObject, Integer, Integer) in module PyCall at deprecated.jl:65 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/8LLTL/src/PyCallUtils.jl:49.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition getindex(PyCall.PyObject, Integer...) in module PyCall at deprecated.jl:65 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/8LLTL/src/PyCallUtils.jl:50.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition setindex!(PyCall.PyObject, Any, Integer) in module PyCall at deprecated.jl:65 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/8LLTL/src/PyCallUtils.jl:51.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition setindex!(PyCall.PyObject, Any, Integer, Integer) in module PyCall at deprecated.jl:65 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/8LLTL/src/PyCallUtils.jl:52.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition setindex!(PyCall.PyObject, Any, Integer...) in module PyCall at deprecated.jl:65 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/8LLTL/src/PyCallUtils.jl:53.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition jlwrap_iterator(Any) in module PyCall at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/pyiterator.jl:138 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/8LLTL/src/PyCallUtils.jl:56.
  ** incremental compilation may be fatally broken for this module **

Error During Test at /home/pkgeval/.julia/packages/PyCallUtils/8LLTL/test/runtests.jl:14
  Test threw exception
  Expression: convert(SparseMatrixCSC, PyObject(x)) == x
  PyError (PyImport_ImportModule
  
  The Python package scipy.sparse could not be found by pyimport. Usually this means
  that you did not install scipy.sparse in the Python version being used by PyCall.
  
  PyCall is currently configured to use the Python version at:
  
  /usr/bin/python3
  
  and you should use whatever mechanism you usually use (apt-get, pip, conda,
  etcetera) to install the Python package containing the scipy.sparse module.
  
  One alternative is to re-configure PyCall to use a different Python
  version on your system: set ENV["PYTHON"] to the path/name of the python
  executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.
  
  Another alternative is to configure PyCall to use a Julia-specific Python
  distribution via the Conda.jl package (which installs a private Anaconda
  Python distribution), which has the advantage that packages can be installed
  and kept up-to-date via Julia.  As explained in the PyCall documentation,
  set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
  To install the scipy.sparse module, you can use `pyimport_conda("scipy.sparse", PKG)`,
  where PKG is the Anaconda package the contains the module scipy.sparse,
  or alternatively you can use the Conda package directly (via
  `using Conda` followed by `Conda.add` etcetera).
  
  ) <class 'ModuleNotFoundError'>
  ModuleNotFoundError("No module named 'scipy'",)
  
  Stacktrace:
   [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/PyCall.jl:536
   [2] PyObject(::SparseMatrixCSC{Float64,Int64}) at /home/pkgeval/.julia/packages/PyCallUtils/8LLTL/src/PyCallUtils.jl:67
   [3] top-level scope at /home/pkgeval/.julia/packages/PyCallUtils/8LLTL/test/runtests.jl:14
   [4] include(::String) at ./client.jl:441
   [5] top-level scope at none:6
   [6] eval(::Module, ::Any) at ./boot.jl:331
   [7] exec_options(::Base.JLOptions) at ./client.jl:264
   [8] _start() at ./client.jl:490
  
ERROR: LoadError: There was an error during testing
in expression starting at /home/pkgeval/.julia/packages/PyCallUtils/8LLTL/test/runtests.jl:14
ERROR: Package PyCallUtils errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1523
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
