Julia Version 1.5.0-DEV.486
Commit 1d2ef1687b (2020-03-20 09:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Reexport ───────────────────── v0.2.0
  Installed PDMats ─────────────────────── v0.9.12
  Installed Adapt ──────────────────────── v1.0.1
  Installed DistributionsAD ────────────── v0.4.6
  Installed Arpack ─────────────────────── v0.4.0
  Installed FillArrays ─────────────────── v0.8.5
  Installed DiffRules ──────────────────── v1.0.1
  Installed StaticArrays ───────────────── v0.12.1
  Installed Missings ───────────────────── v0.4.3
  Installed QuadGK ─────────────────────── v2.3.1
  Installed OpenBLAS_jll ───────────────── v0.3.7+8
  Installed Requires ───────────────────── v1.0.1
  Installed DiffResults ────────────────── v1.0.2
  Installed Tracker ────────────────────── v0.2.6
  Installed MacroTools ─────────────────── v0.5.4
  Installed DataAPI ────────────────────── v1.1.0
  Installed IRTools ────────────────────── v0.3.1
  Installed SpecialFunctions ───────────── v0.10.0
  Installed ZygoteRules ────────────────── v0.2.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed Zygote ─────────────────────── v0.4.10
  Installed BinaryProvider ─────────────── v0.5.8
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed IntelOpenMP_jll ────────────── v2018.0.3+0
  Installed FFTW ───────────────────────── v1.2.0
  Installed Distributions ──────────────── v0.22.6
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Arpack_jll ─────────────────── v3.5.0+2
  Installed NaNMath ────────────────────── v0.3.3
  Installed Polynomials ────────────────── v0.6.1
  Installed Compat ─────────────────────── v3.8.0
  Installed ReverseDiff ────────────────── v1.1.0
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed CompilerSupportLibraries_jll ─ v0.3.0+0
  Installed OrderedCollections ─────────── v1.1.0
  Installed StatsBase ──────────────────── v0.32.2
  Installed NNlib ──────────────────────── v0.6.6
  Installed ForwardDiff ────────────────── v0.10.9
  Installed StatsFuns ──────────────────── v0.9.4
  Installed CommonSubexpressions ───────── v0.2.0
  Installed FunctionWrappers ───────────── v1.1.1
  Installed Combinatorics ──────────────── v0.7.0
  Installed MKL_jll ────────────────────── v2019.0.117+2
  Installed FFTW_jll ───────────────────── v3.3.9+4
  Installed RecipesBase ────────────────── v0.8.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed DataStructures ─────────────── v0.17.10
#=#=#                                                                         #                                                                          2.1%####                                                                       6.4%########                                                                  12.0%##############                                                            19.6%####################                                                      28.6%############################                                              39.4%#######################################                                   54.7%####################################################                      73.3%####################################################################      94.5%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         #########                                                                 13.8%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ###########################################################               82.9%######################################################################## 100.0%
#=#=#                                                                         ##                                                                         3.1%######                                                                     9.1%############                                                              17.3%###################                                                       27.7%############################                                              39.6%#########################################                                 57.7%######################################################                    75.4%######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.2%##########################                                                36.4%####################################                                      50.2%################################################                          67.0%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   ced4e74d + DistributionsAD v0.4.6
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   621f4979 + AbstractFFTs v0.5.0
   79e6a3ab + Adapt v1.0.1
   7d9fca2a + Arpack v0.4.0
   68821587 + Arpack_jll v3.5.0+2
   4c555306 + ArrayLayouts v0.1.5
   b99e7846 + BinaryProvider v0.5.8
   861a8166 + Combinatorics v0.7.0
   bbf7d656 + CommonSubexpressions v0.2.0
   34da2185 + Compat v3.8.0
   e66e0078 + CompilerSupportLibraries_jll v0.3.0+0
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   163ba53b + DiffResults v1.0.2
   b552c78f + DiffRules v1.0.1
   31c24e10 + Distributions v0.22.6
   ced4e74d + DistributionsAD v0.4.6
   7a1cc6ca + FFTW v1.2.0
   f5851436 + FFTW_jll v3.3.9+4
   1a297f60 + FillArrays v0.8.5
   f6369f11 + ForwardDiff v0.10.9
   069b7b12 + FunctionWrappers v1.1.1
   7869d1d1 + IRTools v0.3.1
   1d5cc7b8 + IntelOpenMP_jll v2018.0.3+0
   856f044c + MKL_jll v2019.0.117+2
   1914dd2f + MacroTools v0.5.4
   e1d29d7a + Missings v0.4.3
   872c559c + NNlib v0.6.6
   77ba4419 + NaNMath v0.3.3
   4536629a + OpenBLAS_jll v0.3.7+8
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   90014a1f + PDMats v0.9.12
   f27b6e38 + Polynomials v0.6.1
   1fd47b50 + QuadGK v2.3.1
   3cdcf5f2 + RecipesBase v0.8.0
   189a3867 + Reexport v0.2.0
   ae029012 + Requires v1.0.1
   37e2e3b7 + ReverseDiff v1.1.0
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   9f7883ad + Tracker v0.2.6
   e88e6eb3 + Zygote v0.4.10
   700de1a5 + ZygoteRules v0.2.0
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8bb1440f + DelimitedFiles
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   a63ad114 + Mmap
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   1a1011a3 + SharedArrays
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   4607b0f0 + SuiteSparse
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
   Building FFTW ─→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
   Building NNlib → `~/.julia/packages/NNlib/FAI3o/deps/build.log`
    Testing DistributionsAD
     Status `/tmp/jl_2HNHTk/Project.toml`
   861a8166 Combinatorics v0.7.0
   34da2185 Compat v3.8.0
   b552c78f DiffRules v1.0.1
   31c24e10 Distributions v0.22.6
   ced4e74d DistributionsAD v0.4.6
   1a297f60 FillArrays v0.8.5
   26cc04aa FiniteDifferences v0.9.2
   f6369f11 ForwardDiff v0.10.9
   90014a1f PDMats v0.9.12
   37e2e3b7 ReverseDiff v1.1.0
   276daf66 SpecialFunctions v0.10.0
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   9f7883ad Tracker v0.2.6
   e88e6eb3 Zygote v0.4.10
   700de1a5 ZygoteRules v0.2.0
   37e2e46d LinearAlgebra
   9a3f8284 Random
   8dfed614 Test
     Status `/tmp/jl_2HNHTk/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   79e6a3ab Adapt v1.0.1
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4c555306 ArrayLayouts v0.1.5
   b99e7846 BinaryProvider v0.5.8
   861a8166 Combinatorics v0.7.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.3.0+0
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   31c24e10 Distributions v0.22.6
   ced4e74d DistributionsAD v0.4.6
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   26cc04aa FiniteDifferences v0.9.2
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   7869d1d1 IRTools v0.3.1
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   e1d29d7a Missings v0.4.3
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+8
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   90014a1f PDMats v0.9.12
   f27b6e38 Polynomials v0.6.1
   1fd47b50 QuadGK v2.3.1
   3cdcf5f2 RecipesBase v0.8.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   37e2e3b7 ReverseDiff v1.1.0
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   a2af1166 SortingAlgorithms v0.3.1
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   9f7883ad Tracker v0.2.6
   e88e6eb3 Zygote v0.4.10
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
WARNING: could not import Compiler.just_construct_ssa into Wrap

==================================================

Testing: Univariate discrete distributions

[ Info: Testing: Bernoulli
┌ Info: Testing: (a, b)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:86 =#
│         BetaBinomial(10, a, b)
└     end
┌ Info: Testing: (a, b)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:87 =#
│         BetaBinomial(10, a, b)
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:89 =#
│         Binomial(10, p)
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:90 =#
│         Binomial(10, p)
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:92 =#
│         Categorical(p / sum(p))
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:93 =#
│         Categorical(p / sum(p))
└     end
[ Info: Testing: Geometric
[ Info: Testing: NegativeBinomial
[ Info: Testing: Poisson
[ Info: Testing: Skellam
[ Info: Testing: PoissonBinomial
[ Info: Testing: TuringPoissonBinomial
Test Summary:                     | Pass  Total
Univariate discrete distributions |  102    102

==================================================

Testing: Univariate continuous distributions

[ Info: Testing: Arcsine
[ Info: Testing: Beta
[ Info: Testing: BetaPrime
[ Info: Testing: Biweight
[ Info: Testing: Cauchy
[ Info: Testing: Chi
[ Info: Testing: Chisq
[ Info: Testing: Cosine
[ Info: Testing: Epanechnikov
┌ Info: Testing: s->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:162 =#
│         Erlang(1, s)
└     end
[ Info: Testing: Exponential
[ Info: Testing: FDist
[ Info: Testing: Frechet
[ Info: Testing: Gamma
[ Info: Testing: GeneralizedExtremeValue
[ Info: Testing: GeneralizedPareto
[ Info: Testing: Gumbel
[ Info: Testing: InverseGamma
[ Info: Testing: InverseGaussian
[ Info: Testing: Kolmogorov
[ Info: Testing: Laplace
[ Info: Testing: Levy
┌ Info: Testing: (a, b)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:233 =#
│         LocationScale(a, b, Normal())
└     end
[ Info: Testing: Logistic
[ Info: Testing: LogitNormal
[ Info: Testing: LogNormal
[ Info: Testing: Normal
[ Info: Testing: NormalCanon
[ Info: Testing: NormalInverseGaussian
[ Info: Testing: Pareto
[ Info: Testing: PGeneralizedGaussian
[ Info: Testing: Rayleigh
[ Info: Testing: Semicircle
[ Info: Testing: SymTriangularDist
[ Info: Testing: TDist
[ Info: Testing: TriangularDist
[ Info: Testing: Triweight
┌ Info: Testing: (mu, sigma, l, u)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:308 =#
│         truncated(Normal(mu, sigma), l, u)
└     end
[ Info: Testing: Uniform
[ Info: Testing: TuringUniform
[ Info: Testing: VonMises
[ Info: Testing: Weibull
Test Summary:                       | Pass  Total
Univariate continuous distributions | 1107   1107

==================================================

Testing: Multivariate discrete distributions

┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:350 =#
│         Multinomial(2, p / sum(p))
└     end
┌ Info: Testing: (var"##x#261",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Bernoulli(var"##x#261"), 2)
└     end
┌ Info: Testing: (var"##x#262",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Bernoulli(var"##x#262"), 2)
└     end
┌ Info: Testing: (var"##x#263", var"##x#264")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist((((a, b)->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:86 =#
│                     BetaBinomial(10, a, b)
│                 end))(var"##x#263", var"##x#264"), 2)
└     end
┌ Info: Testing: (var"##x#265",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:89 =#
│                     Binomial(10, p)
│                 end))(var"##x#265"), 2)
└     end
┌ Info: Testing: (var"##x#266",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:92 =#
│                     Categorical(p / sum(p))
│                 end))(var"##x#266"), 2)
└     end
┌ Info: Testing: (var"##x#267",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Geometric(var"##x#267"), 2)
└     end
┌ Info: Testing: (var"##x#268", var"##x#269")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(NegativeBinomial(var"##x#268", var"##x#269"), 2)
└     end
┌ Info: Testing: (var"##x#270",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Poisson(var"##x#270"), 2)
└     end
┌ Info: Testing: (var"##x#271", var"##x#272")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Skellam(var"##x#271", var"##x#272"), 2)
└     end
┌ Info: Testing: (var"##x#273",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(PoissonBinomial(var"##x#273"), 2)
└     end
┌ Info: Testing: (var"##x#274",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(TuringPoissonBinomial(var"##x#274"), 2)
└     end
┌ Info: Testing: (var"##x#275",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#275"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#276",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#276"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#277", var"##x#278")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill((((a, b)->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:86 =#
│                             BetaBinomial(10, a, b)
│                         end))(var"##x#277", var"##x#278"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#279",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:89 =#
│                             Binomial(10, p)
│                         end))(var"##x#279"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#280",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:92 =#
│                             Categorical(p / sum(p))
│                         end))(var"##x#280"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#281",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Geometric(var"##x#281"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#282", var"##x#283")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(NegativeBinomial(var"##x#282", var"##x#283"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#284",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Poisson(var"##x#284"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#285", var"##x#286")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Skellam(var"##x#285", var"##x#286"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#287",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(PoissonBinomial(var"##x#287"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#288",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(TuringPoissonBinomial(var"##x#288"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#289",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Bernoulli(var"##x#289"), 2)
└     end
┌ Info: Testing: (var"##x#290",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Bernoulli(var"##x#290"), 2)
└     end
┌ Info: Testing: (var"##x#291", var"##x#292")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist((((a, b)->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:86 =#
│                     BetaBinomial(10, a, b)
│                 end))(var"##x#291", var"##x#292"), 2)
└     end
┌ Info: Testing: (var"##x#293",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:89 =#
│                     Binomial(10, p)
│                 end))(var"##x#293"), 2)
└     end
┌ Info: Testing: (var"##x#294",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:92 =#
│                     Categorical(p / sum(p))
│                 end))(var"##x#294"), 2)
└     end
┌ Info: Testing: (var"##x#295",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Geometric(var"##x#295"), 2)
└     end
┌ Info: Testing: (var"##x#296", var"##x#297")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(NegativeBinomial(var"##x#296", var"##x#297"), 2)
└     end
┌ Info: Testing: (var"##x#298",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Poisson(var"##x#298"), 2)
└     end
┌ Info: Testing: (var"##x#299", var"##x#300")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Skellam(var"##x#299", var"##x#300"), 2)
└     end
┌ Info: Testing: (var"##x#301",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(PoissonBinomial(var"##x#301"), 2)
└     end
┌ Info: Testing: (var"##x#302",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(TuringPoissonBinomial(var"##x#302"), 2)
└     end
┌ Info: Testing: (var"##x#303",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#303"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#304",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#304"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#305", var"##x#306")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill((((a, b)->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:86 =#
│                             BetaBinomial(10, a, b)
│                         end))(var"##x#305", var"##x#306"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#307",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:89 =#
│                             Binomial(10, p)
│                         end))(var"##x#307"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#308",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:92 =#
│                             Categorical(p / sum(p))
│                         end))(var"##x#308"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#309",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Geometric(var"##x#309"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#310", var"##x#311")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(NegativeBinomial(var"##x#310", var"##x#311"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#312",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Poisson(var"##x#312"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#313", var"##x#314")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Skellam(var"##x#313", var"##x#314"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#315",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(PoissonBinomial(var"##x#315"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#316",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(TuringPoissonBinomial(var"##x#316"), prod((2,))), 2))
└     end
Test Summary:                       | Pass  Total
Multivariate discrete distributions |  207    207

==================================================

Testing: Multivariate continuous distributions

┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Arcsine(), 2)
└     end
┌ Info: Testing: (var"##x#317",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Arcsine(var"##x#317"), 2)
└     end
┌ Info: Testing: (var"##x#318", var"##x#319")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Arcsine(var"##x#318", var"##x#319"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Beta(), 2)
└     end
┌ Info: Testing: (var"##x#320",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Beta(var"##x#320"), 2)
└     end
┌ Info: Testing: (var"##x#321", var"##x#322")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Beta(var"##x#321", var"##x#322"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(BetaPrime(), 2)
└     end
┌ Info: Testing: (var"##x#323",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(BetaPrime(var"##x#323"), 2)
└     end
┌ Info: Testing: (var"##x#324", var"##x#325")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(BetaPrime(var"##x#324", var"##x#325"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Biweight(), 2)
└     end
┌ Info: Testing: (var"##x#326",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Biweight(var"##x#326"), 2)
└     end
┌ Info: Testing: (var"##x#327", var"##x#328")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Biweight(var"##x#327", var"##x#328"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Cauchy(), 2)
└     end
┌ Info: Testing: (var"##x#329",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Cauchy(var"##x#329"), 2)
└     end
┌ Info: Testing: (var"##x#330", var"##x#331")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Cauchy(var"##x#330", var"##x#331"), 2)
└     end
┌ Info: Testing: (var"##x#332",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Chi(var"##x#332"), 2)
└     end
┌ Info: Testing: (var"##x#333",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Chisq(var"##x#333"), 2)
└     end
┌ Info: Testing: (var"##x#334", var"##x#335")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Cosine(var"##x#334", var"##x#335"), 2)
└     end
┌ Info: Testing: (var"##x#336", var"##x#337")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Epanechnikov(var"##x#336", var"##x#337"), 2)
└     end
┌ Info: Testing: (var"##x#338",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(((s->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:162 =#
│                     Erlang(1, s)
│                 end))(var"##x#338"), 2)
└     end
┌ Info: Testing: (var"##x#339",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Exponential(var"##x#339"), 2)
└     end
┌ Info: Testing: (var"##x#340", var"##x#341")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(FDist(var"##x#340", var"##x#341"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Frechet(), 2)
└     end
┌ Info: Testing: (var"##x#342",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Frechet(var"##x#342"), 2)
└     end
┌ Info: Testing: (var"##x#343", var"##x#344")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Frechet(var"##x#343", var"##x#344"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Gamma(), 2)
└     end
┌ Info: Testing: (var"##x#345",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Gamma(var"##x#345"), 2)
└     end
┌ Info: Testing: (var"##x#346", var"##x#347")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Gamma(var"##x#346", var"##x#347"), 2)
└     end
┌ Info: Testing: (var"##x#348", var"##x#349", var"##x#350")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(GeneralizedExtremeValue(var"##x#348", var"##x#349", var"##x#350"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(GeneralizedPareto(), 2)
└     end
┌ Info: Testing: (var"##x#351", var"##x#352")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(GeneralizedPareto(var"##x#351", var"##x#352"), 2)
└     end
┌ Info: Testing: (var"##x#353", var"##x#354", var"##x#355")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(GeneralizedPareto(var"##x#353", var"##x#354", var"##x#355"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Gumbel(), 2)
└     end
┌ Info: Testing: (var"##x#356",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Gumbel(var"##x#356"), 2)
└     end
┌ Info: Testing: (var"##x#357", var"##x#358")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Gumbel(var"##x#357", var"##x#358"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(InverseGamma(), 2)
└     end
┌ Info: Testing: (var"##x#359",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(InverseGamma(var"##x#359"), 2)
└     end
┌ Info: Testing: (var"##x#360", var"##x#361")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(InverseGamma(var"##x#360", var"##x#361"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(InverseGaussian(), 2)
└     end
┌ Info: Testing: (var"##x#362",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(InverseGaussian(var"##x#362"), 2)
└     end
┌ Info: Testing: (var"##x#363", var"##x#364")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(InverseGaussian(var"##x#363", var"##x#364"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Kolmogorov(), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Laplace(), 2)
└     end
┌ Info: Testing: (var"##x#365",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Laplace(var"##x#365"), 2)
└     end
┌ Info: Testing: (var"##x#366", var"##x#367")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Laplace(var"##x#366", var"##x#367"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Levy(), 2)
└     end
┌ Info: Testing: (var"##x#368",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Levy(var"##x#368"), 2)
└     end
┌ Info: Testing: (var"##x#369", var"##x#370")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Levy(var"##x#369", var"##x#370"), 2)
└     end
┌ Info: Testing: (var"##x#371", var"##x#372")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist((((a, b)->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:233 =#
│                     LocationScale(a, b, Normal())
│                 end))(var"##x#371", var"##x#372"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Logistic(), 2)
└     end
┌ Info: Testing: (var"##x#373",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Logistic(var"##x#373"), 2)
└     end
┌ Info: Testing: (var"##x#374", var"##x#375")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Logistic(var"##x#374", var"##x#375"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(LogitNormal(), 2)
└     end
┌ Info: Testing: (var"##x#376",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(LogitNormal(var"##x#376"), 2)
└     end
┌ Info: Testing: (var"##x#377", var"##x#378")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(LogitNormal(var"##x#377", var"##x#378"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(LogNormal(), 2)
└     end
┌ Info: Testing: (var"##x#379",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(LogNormal(var"##x#379"), 2)
└     end
┌ Info: Testing: (var"##x#380", var"##x#381")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(LogNormal(var"##x#380", var"##x#381"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Normal(), 2)
└     end
┌ Info: Testing: (var"##x#382",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Normal(var"##x#382"), 2)
└     end
┌ Info: Testing: (var"##x#383", var"##x#384")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Normal(var"##x#383", var"##x#384"), 2)
└     end
┌ Info: Testing: (var"##x#385", var"##x#386")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(NormalCanon(var"##x#385", var"##x#386"), 2)
└     end
┌ Info: Testing: (var"##x#387", var"##x#388", var"##x#389", var"##x#390")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(NormalInverseGaussian(var"##x#387", var"##x#388", var"##x#389", var"##x#390"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Pareto(), 2)
└     end
┌ Info: Testing: (var"##x#391",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Pareto(var"##x#391"), 2)
└     end
┌ Info: Testing: (var"##x#392", var"##x#393")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Pareto(var"##x#392", var"##x#393"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(PGeneralizedGaussian(), 2)
└     end
┌ Info: Testing: (var"##x#394", var"##x#395", var"##x#396")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(PGeneralizedGaussian(var"##x#394", var"##x#395", var"##x#396"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Rayleigh(), 2)
└     end
┌ Info: Testing: (var"##x#397",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Rayleigh(var"##x#397"), 2)
└     end
┌ Info: Testing: (var"##x#398",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Semicircle(var"##x#398"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(SymTriangularDist(), 2)
└     end
┌ Info: Testing: (var"##x#399",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(SymTriangularDist(var"##x#399"), 2)
└     end
┌ Info: Testing: (var"##x#400", var"##x#401")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(SymTriangularDist(var"##x#400", var"##x#401"), 2)
└     end
┌ Info: Testing: (var"##x#402",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(TDist(var"##x#402"), 2)
└     end
┌ Info: Testing: (var"##x#403", var"##x#404")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Triweight(var"##x#403", var"##x#404"), 2)
└     end
┌ Info: Testing: (var"##x#405", var"##x#406", var"##x#407", var"##x#408")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist((((mu, sigma, l, u)->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:308 =#
│                     truncated(Normal(mu, sigma), l, u)
│                 end))(var"##x#405", var"##x#406", var"##x#407", var"##x#408"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Uniform(), 2)
└     end
┌ Info: Testing: (var"##x#409", var"##x#410")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Uniform(var"##x#409", var"##x#410"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(TuringUniform(), 2)
└     end
┌ Info: Testing: (var"##x#411", var"##x#412")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(TuringUniform(var"##x#411", var"##x#412"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Weibull(), 2)
└     end
┌ Info: Testing: (var"##x#413",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Weibull(var"##x#413"), 2)
└     end
┌ Info: Testing: (var"##x#414", var"##x#415")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Weibull(var"##x#414", var"##x#415"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Arcsine(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#416",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Arcsine(var"##x#416"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#417", var"##x#418")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Arcsine(var"##x#417", var"##x#418"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Beta(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#419",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Beta(var"##x#419"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#420", var"##x#421")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Beta(var"##x#420", var"##x#421"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(BetaPrime(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#422",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(BetaPrime(var"##x#422"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#423", var"##x#424")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(BetaPrime(var"##x#423", var"##x#424"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Biweight(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#425",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Biweight(var"##x#425"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#426", var"##x#427")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Biweight(var"##x#426", var"##x#427"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Cauchy(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#428",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Cauchy(var"##x#428"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#429", var"##x#430")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Cauchy(var"##x#429", var"##x#430"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#431",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Chi(var"##x#431"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#432",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Chisq(var"##x#432"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#433", var"##x#434")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Cosine(var"##x#433", var"##x#434"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#435", var"##x#436")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Epanechnikov(var"##x#435", var"##x#436"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#437",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(((s->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:162 =#
│                             Erlang(1, s)
│                         end))(var"##x#437"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#438",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Exponential(var"##x#438"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#439", var"##x#440")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(FDist(var"##x#439", var"##x#440"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Frechet(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#441",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Frechet(var"##x#441"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#442", var"##x#443")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Frechet(var"##x#442", var"##x#443"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Gamma(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#444",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Gamma(var"##x#444"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#445", var"##x#446")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Gamma(var"##x#445", var"##x#446"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#447", var"##x#448", var"##x#449")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(GeneralizedExtremeValue(var"##x#447", var"##x#448", var"##x#449"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(GeneralizedPareto(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#450", var"##x#451")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(GeneralizedPareto(var"##x#450", var"##x#451"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#452", var"##x#453", var"##x#454")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(GeneralizedPareto(var"##x#452", var"##x#453", var"##x#454"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Gumbel(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#455",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Gumbel(var"##x#455"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#456", var"##x#457")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Gumbel(var"##x#456", var"##x#457"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(InverseGamma(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#458",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(InverseGamma(var"##x#458"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#459", var"##x#460")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(InverseGamma(var"##x#459", var"##x#460"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(InverseGaussian(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#461",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(InverseGaussian(var"##x#461"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#462", var"##x#463")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(InverseGaussian(var"##x#462", var"##x#463"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Kolmogorov(), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Laplace(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#464",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Laplace(var"##x#464"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#465", var"##x#466")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Laplace(var"##x#465", var"##x#466"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Levy(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#467",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Levy(var"##x#467"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#468", var"##x#469")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Levy(var"##x#468", var"##x#469"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#470", var"##x#471")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill((((a, b)->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:233 =#
│                             LocationScale(a, b, Normal())
│                         end))(var"##x#470", var"##x#471"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Logistic(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#472",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Logistic(var"##x#472"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#473", var"##x#474")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Logistic(var"##x#473", var"##x#474"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(LogitNormal(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#475",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(LogitNormal(var"##x#475"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#476", var"##x#477")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(LogitNormal(var"##x#476", var"##x#477"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(LogNormal(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#478",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(LogNormal(var"##x#478"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#479", var"##x#480")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(LogNormal(var"##x#479", var"##x#480"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Normal(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#481",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Normal(var"##x#481"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#482", var"##x#483")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Normal(var"##x#482", var"##x#483"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#484", var"##x#485")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(NormalCanon(var"##x#484", var"##x#485"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#486", var"##x#487", var"##x#488", var"##x#489")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(NormalInverseGaussian(var"##x#486", var"##x#487", var"##x#488", var"##x#489"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Pareto(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#490",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Pareto(var"##x#490"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#491", var"##x#492")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Pareto(var"##x#491", var"##x#492"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(PGeneralizedGaussian(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#493", var"##x#494", var"##x#495")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(PGeneralizedGaussian(var"##x#493", var"##x#494", var"##x#495"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Rayleigh(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#496",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Rayleigh(var"##x#496"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#497",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Semicircle(var"##x#497"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(SymTriangularDist(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#498",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(SymTriangularDist(var"##x#498"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#499", var"##x#500")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(SymTriangularDist(var"##x#499", var"##x#500"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#501",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(TDist(var"##x#501"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#502", var"##x#503")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Triweight(var"##x#502", var"##x#503"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#504", var"##x#505", var"##x#506", var"##x#507")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill((((mu, sigma, l, u)->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:308 =#
│                             truncated(Normal(mu, sigma), l, u)
│                         end))(var"##x#504", var"##x#505", var"##x#506", var"##x#507"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Uniform(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#508", var"##x#509")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Uniform(var"##x#508", var"##x#509"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(TuringUniform(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#510", var"##x#511")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(TuringUniform(var"##x#510", var"##x#511"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Weibull(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#512",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Weibull(var"##x#512"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#513", var"##x#514")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Weibull(var"##x#513", var"##x#514"), prod((2,))), 2))
└     end
[ Info: Testing: MvNormal
┌ Info: Testing: (m, v)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:370 =#
│         MvNormal(m, v * I)
└     end
┌ Info: Testing: cov_num->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:374 =#
│         MvNormal(dim, cov_num)
└     end
[ Info: Testing: TuringMvNormal
┌ Info: Testing: (m, v)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:379 =#
│         TuringMvNormal(m, v * I)
└     end
┌ Info: Testing: cov_num->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:383 =#
│         TuringMvNormal(dim, cov_num)
└     end
[ Info: Testing: MvLogNormal
┌ Info: Testing: cov_num->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:391 =#
│         MvLogNormal(dim, cov_num)
└     end
[ Info: Testing: Dirichlet
┌ Info: Testing: (m, v)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:397 =#
│         MvNormal(m, v * I)
└     end
┌ Info: Testing: cov_num->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:400 =#
│         MvNormal(dim, cov_num)
└     end
┌ Info: Testing: cov_num->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:406 =#
│         MvLogNormal(dim, cov_num)
└     end
Test Summary:                         | Pass  Total
Multivariate continuous distributions | 2580   2580

==================================================

Testing: Matrix-variate continuous distributions

┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Arcsine(), 2, 2)
└     end
┌ Info: Testing: (var"##x#515",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Arcsine(var"##x#515"), 2, 2)
└     end
┌ Info: Testing: (var"##x#516", var"##x#517")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Arcsine(var"##x#516", var"##x#517"), 2, 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Beta(), 2, 2)
└     end
┌ Info: Testing: (var"##x#518",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Beta(var"##x#518"), 2, 2)
└     end
┌ Info: Testing: (var"##x#519", var"##x#520")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(Beta(var"##x#519", var"##x#520"), 2, 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(BetaPrime(), 2, 2)
└     end
┌ Info: Testing: (var"##x#521",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(BetaPrime(var"##x#521"), 2, 2)
└     end
┌ Info: Testing: (var"##x#522", var"##x#523")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/GvgiL/test/distributions.jl:22 =#
│         filldist(BetaPrime(var"##x#522", var"##x#523"), 2, 2)
└     end

signal (15): Terminated
in expression starting at none:13
pthread_cond_wait at /lib/x86_64-linux-gnu/libpthread.so.0 (unknown line)
