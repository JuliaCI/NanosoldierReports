Julia Version 1.5.0-DEV.483
Commit 7f28d91b70 (2020-03-18 17:21 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed DataAPI ───────────────────── v1.1.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed LearnBase ─────────────────── v0.2.2
  Installed TableTraits ───────────────── v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Tables ────────────────────── v1.0.3
  Installed JSON ──────────────────────── v0.21.0
  Installed DataFrames ────────────────── v0.20.2
  Installed Missings ──────────────────── v0.4.3
  Installed DataValueInterfaces ───────── v1.0.0
  Installed OrderedCollections ────────── v1.1.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed CategoricalArrays ─────────── v0.7.7
  Installed StatsBase ─────────────────── v0.32.2
  Installed MLDataPattern ─────────────── v0.5.0
  Installed DataStructures ────────────── v0.17.10
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed InvertedIndices ───────────── v1.0.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Compat ────────────────────── v3.8.0
  Installed Parsers ───────────────────── v0.3.12
  Installed Reexport ──────────────────── v0.2.0
  Installed MLDataUtils ───────────────── v0.5.0
  Installed SimilaritySearch ──────────── v0.3.19
   Updating `~/.julia/environments/v1.5/Project.toml`
   5d8de97f + KCenters v0.2.2
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   324d7699 + CategoricalArrays v0.7.7
   34da2185 + Compat v3.8.0
   9a962f9c + DataAPI v1.1.0
   a93c6f00 + DataFrames v0.20.2
   864edb3b + DataStructures v0.17.10
   e2d170a0 + DataValueInterfaces v1.0.0
   41ab1584 + InvertedIndices v1.0.0
   82899510 + IteratorInterfaceExtensions v1.0.0
   682c06a0 + JSON v0.21.0
   5d8de97f + KCenters v0.2.2
   7f8f8fb0 + LearnBase v0.2.2
   9920b226 + MLDataPattern v0.5.0
   cc2ba9b6 + MLDataUtils v0.5.0
   66a33bbf + MLLabelUtils v0.5.1
   dbb5928d + MappedArrays v0.2.2
   e1d29d7a + Missings v0.4.3
   bac558e1 + OrderedCollections v1.1.0
   69de0a69 + Parsers v0.3.12
   2dfb63ee + PooledArrays v0.5.3
   189a3867 + Reexport v0.2.0
   053f045d + SimilaritySearch v0.3.19
   a2af1166 + SortingAlgorithms v0.3.1
   2913bbd2 + StatsBase v0.32.2
   3783bdb8 + TableTraits v1.0.0
   bd369af6 + Tables v1.0.3
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8bb1440f + DelimitedFiles
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   a63ad114 + Mmap
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   1a1011a3 + SharedArrays
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing KCenters
     Status `/tmp/jl_rFmYA9/Project.toml`
   682c06a0 JSON v0.21.0
   5d8de97f KCenters v0.2.2
   cc2ba9b6 MLDataUtils v0.5.0
   053f045d SimilaritySearch v0.3.19
   2913bbd2 StatsBase v0.32.2
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_rFmYA9/Manifest.toml`
   324d7699 CategoricalArrays v0.7.7
   34da2185 Compat v3.8.0
   9a962f9c DataAPI v1.1.0
   a93c6f00 DataFrames v0.20.2
   864edb3b DataStructures v0.17.10
   e2d170a0 DataValueInterfaces v1.0.0
   41ab1584 InvertedIndices v1.0.0
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5d8de97f KCenters v0.2.2
   7f8f8fb0 LearnBase v0.2.2
   9920b226 MLDataPattern v0.5.0
   cc2ba9b6 MLDataUtils v0.5.0
   66a33bbf MLLabelUtils v0.5.1
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   bac558e1 OrderedCollections v1.1.0
   69de0a69 Parsers v0.3.12
   2dfb63ee PooledArrays v0.5.3
   189a3867 Reexport v0.2.0
   053f045d SimilaritySearch v0.3.19
   a2af1166 SortingAlgorithms v0.3.1
   2913bbd2 StatsBase v0.32.2
   3783bdb8 TableTraits v1.0.0
   bd369af6 Tables v1.0.3
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9323044313987097
[ Info: 0.8326150393486023
[ Info: 0.5563809144993623
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32783655367791653
mean(cdnet.distances) = 0.409482447480162
mean(crand.distances) = 0.3508930052568515
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7046840312465319,"seconds":4.548579454421997e-6,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":8.046875,"distances_sum":1466.4416252610197}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8291177572427578,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":8.5,"distances_sum":2019.840145931504}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.181640625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.181640625,"f1":null,"seconds":3.201887011528015e-6,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":6.2734375,"distances_sum":473.2815430843491}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3818359375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3818359375,"f1":null,"seconds":3.6507844924926758e-6,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":6.3203125,"distances_sum":968.8753037933698}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7294921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7294921875,"f1":0.8291177572427578,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":8.5,"distances_sum":2019.840145931504}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.899336600899102,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":8.3828125,"distances_sum":2481.3410877713864}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8698062354312361,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":8.6640625,"distances_sum":2217.3430293654724}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8641519938394946,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":8.7578125,"distances_sum":2192.344131437703}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8330078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8330078125,"f1":0.899336600899102,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":8.3828125,"distances_sum":2481.3410877713864}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9499141483516487,"seconds":6.342306733131409e-6,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":8.8515625,"distances_sum":2780.254129799341}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9481284340659347,"seconds":6.336718797683716e-6,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":8.8125,"distances_sum":2771.546058456849}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.954696345321346,"seconds":2.5503337383270264e-5,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":8.84375,"distances_sum":2833.9877439441275}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9306089743589749,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":8.7265625,"distances_sum":2649.250126294253}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.954696345321346,"seconds":2.5503337383270264e-5,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":8.84375,"distances_sum":2833.9877439441275}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.954696345321346,"seconds":2.5503337383270264e-5,"exhaustive_search_seconds":2.8442591428756714e-6,"evaluations":8.84375,"distances_sum":2833.9877439441275}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8562130577755586,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.5703125,"distances_sum":1956.4574770093247}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7962724775224784,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.484375,"distances_sum":1687.665639368448}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7813049797424804,"seconds":5.038455128669739e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6328125,"distances_sum":1620.735083986602}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8562130577755586,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.5703125,"distances_sum":1956.4574770093247}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.950881410256411,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8828125,"distances_sum":2574.541420016935}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.923815247252748,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9453125,"distances_sum":2307.85942145084}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9551568223443232,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9375,"distances_sum":2603.354484745605}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9416666666666673,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.78125,"distances_sum":2524.4506144216994}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8672535797535805,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8359375,"distances_sum":1976.4603637497976}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9566334706959712,"seconds":6.970018148422241e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.90625,"distances_sum":2616.7876989101014}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9566334706959712,"seconds":6.970018148422241e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.90625,"distances_sum":2616.7876989101014}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9762477106227108,"seconds":6.686896085739136e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9375,"distances_sum":2760.265642701728}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790006868131873,"seconds":6.971880793571472e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.96875,"distances_sum":2776.7593336992554}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9817536630036634,"seconds":7.051974534988403e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.984375,"distances_sum":2782.134627296506}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9656879578754584,"seconds":6.631016731262207e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9296875,"distances_sum":2683.882721334423}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9817536630036634,"seconds":7.051974534988403e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.984375,"distances_sum":2782.134627296506}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9817536630036634,"seconds":7.051974534988403e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.984375,"distances_sum":2782.134627296506}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8729088619713629,"seconds":6.332993507385254e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.640625,"distances_sum":2117.02718885569}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8672535797535806,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.578125,"distances_sum":2077.143660528363}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7931271853146862,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.4296875,"distances_sum":1691.4451723545103}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8729088619713629,"seconds":6.332993507385254e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.640625,"distances_sum":2117.02718885569}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.9009558150183159,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.96875,"distances_sum":2227.9646443771658}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9647352647352653,"seconds":6.815418601036072e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9453125,"distances_sum":2730.0505360595716}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9579269688644692,"seconds":6.936490535736084e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9453125,"distances_sum":2665.409118124081}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9500515109890115,"seconds":6.932765245437622e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.96875,"distances_sum":2605.6135385091256}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9647352647352653,"seconds":6.815418601036072e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9453125,"distances_sum":2730.0505360595716}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9732543498168503,"seconds":7.033348083496094e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9765625,"distances_sum":2793.788440458739}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9690876831501836,"seconds":6.817281246185303e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.953125,"distances_sum":2761.9377295504714}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9732543498168503,"seconds":7.033348083496094e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9765625,"distances_sum":2793.788440458739}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9732543498168503,"seconds":7.033348083496094e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9765625,"distances_sum":2793.788440458739}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23046875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.23046875,"f1":null,"seconds":3.958120942115784e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":6.6328125,"distances_sum":520.6900355910296}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7910043081918089,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.359375,"distances_sum":1635.4590212994094}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.533203125,"f1":0.6799081127206132,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.546875,"distances_sum":1281.469356793682}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.7910043081918089,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.359375,"distances_sum":1635.4590212994094}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8509816572316582,"seconds":6.154179573059082e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.671875,"distances_sum":1982.2959830277216}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9515567765567772,"seconds":6.992369890213013e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8828125,"distances_sum":2601.419338649443}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.85930735930736,"seconds":4.822388291358948e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.6171875,"distances_sum":2013.747224020136}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9515567765567772,"seconds":6.992369890213013e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8828125,"distances_sum":2601.419338649443}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9682119963369966,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9765625,"distances_sum":2680.304873010253}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.971766254578755,"seconds":6.534159183502197e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9921875,"distances_sum":2726.0268398227126}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9567193223443229,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8828125,"distances_sum":2621.7009318894698}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.971766254578755,"seconds":6.534159183502197e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9921875,"distances_sum":2726.0268398227126}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.971766254578755,"seconds":6.534159183502197e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9921875,"distances_sum":2726.0268398227126}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1953125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1953125,"f1":null,"seconds":2.7585774660110474e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":5.28125,"distances_sum":460.0332779210073}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.835525412087913,"seconds":4.781410098075867e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.96875,"distances_sum":1923.3968082226454}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.732421875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.732421875,"f1":0.835525412087913,"seconds":4.781410098075867e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.96875,"distances_sum":1923.3968082226454}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8430985680985689,"seconds":4.695728421211243e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.96875,"distances_sum":1998.0383122560427}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.8430985680985689,"seconds":4.695728421211243e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.96875,"distances_sum":1998.0383122560427}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9090175449550457,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.3515625,"distances_sum":2318.835389532479}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9592662545787551,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.8125,"distances_sum":2726.6500081404643}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9592662545787551,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.8125,"distances_sum":2726.6500081404643}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9592662545787551,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.8125,"distances_sum":2726.6500081404643}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7875759657009666,"seconds":4.639849066734314e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.0859375,"distances_sum":1711.8795848013738}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8319982101232107,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.140625,"distances_sum":1925.9903411183168}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7294921875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7294921875,"f1":0.8319982101232107,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.140625,"distances_sum":1925.9903411183168}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9403018856143861,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.765625,"distances_sum":2592.9457971822926}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8553290459540468,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.296875,"distances_sum":2022.6391206251749}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8939191017316024,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.609375,"distances_sum":2247.215023673179}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9100389194139202,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7265625,"distances_sum":2307.8494800146755}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9403018856143861,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.765625,"distances_sum":2592.9457971822926}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9463885073260077,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.78125,"distances_sum":2640.462735122793}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.972435897435898,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9140625,"distances_sum":2795.4969896506027}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9692536630036633,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8671875,"distances_sum":2789.676976601443}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9638793498168503,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8515625,"distances_sum":2748.4738732473243}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.972435897435898,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9140625,"distances_sum":2795.4969896506027}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.972435897435898,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9140625,"distances_sum":2795.4969896506027}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1943359375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1943359375,"f1":null,"seconds":2.7902424335479736e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.46875,"distances_sum":490.3603928728673}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.400390625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.400390625,"f1":null,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.1015625,"distances_sum":1042.4388617652062}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.400390625,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.400390625,"f1":null,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.1015625,"distances_sum":1042.4388617652062}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7904808732933741,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.9765625,"distances_sum":1727.2810682132092}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7900477994228002,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.7890625,"distances_sum":1776.217313186528}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6708984375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6708984375,"f1":0.7900477994228002,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.7890625,"distances_sum":1776.217313186528}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8894178737928746,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5703125,"distances_sum":2223.331982823975}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9119167291042298,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.609375,"distances_sum":2371.4651827912903}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7959956709956718,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.9296875,"distances_sum":1786.555431735016}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9039210789210798,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.609375,"distances_sum":2317.591023490516}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8556958666333674,"seconds":4.760921001434326e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2734375,"distances_sum":2006.4802033095114}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9119167291042298,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.609375,"distances_sum":2371.4651827912903}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8486328125,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9119167291042298,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.609375,"distances_sum":2371.4651827912903}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4609375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4609375,"f1":null,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.75,"distances_sum":1084.7877663265838}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.427734375,"f1":null,"seconds":3.5744160413742065e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.65625,"distances_sum":1040.7131268533049}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4609375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4609375,"f1":null,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.75,"distances_sum":1084.7877663265838}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.791762404262405,"seconds":4.775822162628174e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.1640625,"distances_sum":1694.2169810396483}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8988334582084592,"seconds":6.5211206674575806e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.53125,"distances_sum":2223.6240506670683}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8595498251748261,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.125,"distances_sum":2018.4740759535318}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.785017066267067,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.0703125,"distances_sum":1659.6242252072493}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.828125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.828125,"f1":0.8988334582084592,"seconds":6.5211206674575806e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.53125,"distances_sum":2223.6240506670683}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9008876540126548,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.546875,"distances_sum":2239.2705196515994}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.940396062271063,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":2534.9410337358067}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9535599816849825,"seconds":6.683170795440674e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":2655.927651057841}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9514766483516488,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8046875,"distances_sum":2648.2523103045137}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9535599816849825,"seconds":6.683170795440674e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":2655.927651057841}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9535599816849825,"seconds":6.683170795440674e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":2655.927651057841}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.326171875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.326171875,"f1":null,"seconds":3.680586814880371e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.21875,"distances_sum":663.4193558358417}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9816406249999998,"recall":0.6572265625,"f1":0.7742817078754582,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.8671875,"distances_sum":1411.6845814237686}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6572265625,"state":{"ssize":1,"bsize":4},"perf":{"precision":0.9816406249999998,"recall":0.6572265625,"f1":0.7742817078754582,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.8671875,"distances_sum":1411.6845814237686}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9873046875,"recall":0.9150390625,"f1":0.9474237351190481,"seconds":7.22147524356842e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.828125,"distances_sum":2210.3779113864007}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9773158482142856,"recall":0.763671875,"f1":0.846215568285881,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3046875,"distances_sum":1752.7131689309108}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":0.9788690476190474,"recall":0.7578125,"f1":0.844203192640693,"seconds":5.1800161600112915e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.1328125,"distances_sum":1702.7921681066382}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":0.9873046875,"recall":0.9150390625,"f1":0.9474237351190481,"seconds":7.22147524356842e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.828125,"distances_sum":2210.3779113864007}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":11}, perf: {"precision":0.981538318452381,"recall":0.94140625,"f1":0.9595345409798535,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9296875,"distances_sum":2334.5324573956195}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":0.9820033482142858,"recall":0.9296875,"f1":0.9531743646978024,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.90625,"distances_sum":2282.7729358223914}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":3,"bsize":9}, perf: {"precision":0.9812593005952381,"recall":0.91796875,"f1":0.9462919242216121,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8671875,"distances_sum":2265.9767299775926}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":4,"bsize":11},"perf":{"precision":0.981538318452381,"recall":0.94140625,"f1":0.9595345409798535,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9296875,"distances_sum":2334.5324573956195}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":4,"bsize":11},"perf":{"precision":0.981538318452381,"recall":0.94140625,"f1":0.9595345409798535,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9296875,"distances_sum":2334.5324573956195}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.52734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.52734375,"f1":0.67580821955822,"seconds":3.7439167499542236e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.5078125,"distances_sum":1115.5342495066436}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.52734375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.52734375,"f1":0.67580821955822,"seconds":3.7439167499542236e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.5078125,"distances_sum":1115.5342495066436}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.537109375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.537109375,"f1":0.680386280386281,"seconds":3.6507844924926758e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.4375,"distances_sum":1116.9167726170563}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9325778388278395,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5078125,"distances_sum":2167.154080949181}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9325778388278395,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5078125,"distances_sum":2167.154080949181}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9404506951381957,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.609375,"distances_sum":2235.884820988161}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9404506951381957,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.609375,"distances_sum":2235.884820988161}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9404506951381957,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.609375,"distances_sum":2235.884820988161}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8611643564768574,"seconds":4.712492227554321e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.1875,"distances_sum":1691.783650389055}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3603515625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3603515625,"f1":null,"seconds":3.255903720855713e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.578125,"distances_sum":724.1420026944262}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8611643564768574,"seconds":4.712492227554321e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.1875,"distances_sum":1691.783650389055}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8659689269064276,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.2578125,"distances_sum":1715.782003441673}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8662124333999345,"seconds":4.738569259643555e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.09375,"distances_sum":1704.4427428782767}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8659689269064276,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.2578125,"distances_sum":1715.782003441673}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.779296875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8659689269064276,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.2578125,"distances_sum":1715.782003441673}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7080078125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7080078125,"f1":0.8153331043956051,"seconds":4.341825842857361e-6,"exhaustive_search_seconds":2.6710331439971924e-5,"evaluations":7.640625,"distances_sum":1587.2504102990902}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8757528929403937,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":2.6710331439971924e-5,"evaluations":8.09375,"distances_sum":1816.5809349477806}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":3.2372772693634033e-6,"exhaustive_search_seconds":2.6710331439971924e-5,"evaluations":5.6875,"distances_sum":846.1688117316944}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8757528929403937,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":2.6710331439971924e-5,"evaluations":8.09375,"distances_sum":1816.5809349477806}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9419184981684986,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":2.6710331439971924e-5,"evaluations":8.6953125,"distances_sum":2177.8766064529395}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.954395604395605,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":2.6710331439971924e-5,"evaluations":8.78125,"distances_sum":2245.7178868366714}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9263793498168504,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":2.6710331439971924e-5,"evaluations":8.453125,"distances_sum":2117.068570322665}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8826928280053289,"seconds":4.909932613372803e-6,"exhaustive_search_seconds":2.6710331439971924e-5,"evaluations":8.0859375,"distances_sum":1889.6906917865342}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.954395604395605,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":2.6710331439971924e-5,"evaluations":8.78125,"distances_sum":2245.7178868366714}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9804716117216119,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":2.6710331439971924e-5,"evaluations":8.9453125,"distances_sum":2399.918702367574}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9796130952380954,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":2.6710331439971924e-5,"evaluations":8.921875,"distances_sum":2397.703280705921}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9596783424908429,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":2.6710331439971924e-5,"evaluations":8.75,"distances_sum":2298.6810397562963}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9804716117216119,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":2.6710331439971924e-5,"evaluations":8.9453125,"distances_sum":2399.918702367574}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9804716117216119,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":2.6710331439971924e-5,"evaluations":8.9453125,"distances_sum":2399.918702367574}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.21875,"f1":null,"seconds":2.866610884666443e-6,"exhaustive_search_seconds":1.2908130884170532e-6,"evaluations":5.8828125,"distances_sum":459.59388299529957}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.21875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.21875,"f1":null,"seconds":2.866610884666443e-6,"exhaustive_search_seconds":1.2908130884170532e-6,"evaluations":5.8828125,"distances_sum":459.59388299529957}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.21875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.21875,"f1":null,"seconds":2.866610884666443e-6,"exhaustive_search_seconds":1.2908130884170532e-6,"evaluations":5.8828125,"distances_sum":459.59388299529957}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2470703125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2470703125,"f1":null,"seconds":2.825632691383362e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.578125,"distances_sum":443.076814130191}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7920673076923084,"seconds":4.602596163749695e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.5625,"distances_sum":1287.6744262946252}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8573462995338003,"seconds":4.781410098075867e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.109375,"distances_sum":1526.7757855237196}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8573462995338003,"seconds":4.781410098075867e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.109375,"distances_sum":1526.7757855237196}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9050995879120886,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.421875,"distances_sum":1723.5542642134485}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9168326465201475,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5078125,"distances_sum":1808.5777920852438}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8979515276390286,"seconds":6.457790732383728e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4140625,"distances_sum":1701.1399386098155}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8564453125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8564453125,"f1":0.9168326465201475,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5078125,"distances_sum":1808.5777920852438}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9344582500832508,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6328125,"distances_sum":1837.0275807194523}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9733459249084253,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9453125,"distances_sum":2075.6794854425434}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9591174450549457,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8515625,"distances_sum":1987.544069750016}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9281192765567774,"seconds":5.1800161600112915e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.703125,"distances_sum":1807.6223698084787}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9554773351648359,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":1987.7187422323557}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9733459249084253,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9453125,"distances_sum":2075.6794854425434}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9733459249084253,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9453125,"distances_sum":2075.6794854425434}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7833562271062279,"seconds":4.5299530029296875e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.21875,"distances_sum":1223.3580168760375}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7833562271062279,"seconds":4.5299530029296875e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.21875,"distances_sum":1223.3580168760375}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8935241841491849,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.1953125,"distances_sum":1639.0458052175766}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8384785353535362,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8046875,"distances_sum":1439.6834270077954}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8173828125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8935241841491849,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.1953125,"distances_sum":1639.0458052175766}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.922066995504496,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5390625,"distances_sum":1784.18689369533}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9009303196803206,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.359375,"distances_sum":1660.8715101974171}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9338999542124546,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.609375,"distances_sum":1833.1620396147448}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8971528471528478,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3203125,"distances_sum":1673.235495293526}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586512445887451,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.796875,"distances_sum":1981.225610151714}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9260016025641034,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.59375,"distances_sum":1800.7652683648942}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9586512445887451,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.796875,"distances_sum":1981.225610151714}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9586512445887451,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.796875,"distances_sum":1981.225610151714}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.423828125, conf: {"ssize":2,"bsize":2}, perf: {"precision":1.0,"recall":0.423828125,"f1":0.5735847485847485,"seconds":3.766268491744995e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.953125,"distances_sum":830.0218309942532}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.423828125,"state":{"ssize":2,"bsize":2},"perf":{"precision":1.0,"recall":0.423828125,"f1":0.5735847485847485,"seconds":3.766268491744995e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.953125,"distances_sum":830.0218309942532}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.8000130078255087,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.4609375,"distances_sum":1365.530197015945}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8952927281052288,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.3828125,"distances_sum":1747.1919942689751}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.846803717116218,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.8203125,"distances_sum":1545.848331238492}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8193359375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8193359375,"f1":0.8952927281052288,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.3828125,"distances_sum":1747.1919942689751}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9525183150183155,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.75,"distances_sum":2100.6999097304033}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9290126540126546,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.5078125,"distances_sum":1945.3462243550691}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9543414918414922,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.78125,"distances_sum":2103.609916979223}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9543414918414922,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.78125,"distances_sum":2103.609916979223}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9543414918414922,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.78125,"distances_sum":2103.609916979223}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.7995577339327347,"seconds":4.474073648452759e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.6875,"distances_sum":1318.2334212862531}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7812489593739601,"seconds":4.669651389122009e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.7109375,"distances_sum":1266.864926645243}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6826171875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.7995577339327347,"seconds":4.474073648452759e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.6875,"distances_sum":1318.2334212862531}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9261847527472534,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5859375,"distances_sum":1815.9594753254692}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519402472527478,"seconds":7.0016831159591675e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":1994.4140922492525}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.901448031135532,"seconds":5.127862095832825e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3984375,"distances_sum":1702.0151619393464}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8728370587745595,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.9765625,"distances_sum":1623.495935666616}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9519402472527478,"seconds":7.0016831159591675e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":1994.4140922492525}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9542842574092577,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7890625,"distances_sum":2022.6856814833789}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.953760302197803,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.796875,"distances_sum":2022.6323345286949}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9571543040293043,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2027.0978040137154}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9571543040293043,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2027.0978040137154}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9571543040293043,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2027.0978040137154}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5537109375,"f1":0.6968241827616832,"seconds":3.814697265625e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.703125,"distances_sum":999.1082915404957}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.310546875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.310546875,"f1":null,"seconds":3.03611159324646e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.9453125,"distances_sum":626.6833334586964}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":3.214925527572632e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.8515625,"distances_sum":764.3657106014514}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5537109375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5537109375,"f1":0.6968241827616832,"seconds":3.814697265625e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.703125,"distances_sum":999.1082915404957}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9252377830502838,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6171875,"distances_sum":1784.6877057250483}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.630859375,"f1":0.7623912545787553,"seconds":4.174187779426575e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.3125,"distances_sum":1198.463943484707}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.64453125,"f1":0.7714115745365753,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.2734375,"distances_sum":1233.685361382422}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8542415917415926,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.78125,"distances_sum":1476.8132150408117}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.84300074925075,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.8046875,"distances_sum":1423.6185234779086}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9252377830502838,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6171875,"distances_sum":1784.6877057250483}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9710565476190478,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9140625,"distances_sum":2028.5560781088516}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9701465201465205,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9296875,"distances_sum":2054.5456946423797}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9733630952380957,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9296875,"distances_sum":2047.9591321227404}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9634672619047624,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9140625,"distances_sum":2000.7755174558768}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9316568847818854,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6328125,"distances_sum":1842.4000309568517}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9733630952380957,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9296875,"distances_sum":2047.9591321227404}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9733630952380957,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9296875,"distances_sum":2047.9591321227404}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2802734375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2802734375,"f1":null,"seconds":2.983957529067993e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.796875,"distances_sum":528.5603715361322}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2919921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2919921875,"f1":null,"seconds":2.9765069484710693e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.796875,"distances_sum":568.5725839662712}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.693237838550339,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.875,"distances_sum":1054.3266328985167}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.552734375,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.552734375,"f1":0.693237838550339,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.875,"distances_sum":1054.3266328985167}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7847881285381294,"seconds":4.231929779052734e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.34375,"distances_sum":1237.7634171772952}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.781196928071929,"seconds":4.192814230918884e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.3125,"distances_sum":1226.7410240780457}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.845442057942059,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.7421875,"distances_sum":1426.2312714685459}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.7004795551670558,"seconds":4.395842552185059e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.9140625,"distances_sum":1064.8983727712387}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":9,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.845442057942059,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.7421875,"distances_sum":1426.2312714685459}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":12,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9493246336996342,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.71875,"distances_sum":1938.0546423849967}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":11,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8732600732600742,"seconds":4.762783646583557e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.0703125,"distances_sum":1555.673549190444}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9303888819513829,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6484375,"distances_sum":1827.4686817984673}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8885192932067941,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2890625,"distances_sum":1608.2236926701783}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8967090201465208,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2578125,"distances_sum":1642.6122874372875}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8775131118881128,"seconds":5.0086528062820435e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.109375,"distances_sum":1561.3252382002452}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8861294955044963,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2578125,"distances_sum":1600.130556078523}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":10,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8992158882783893,"seconds":7.886439561843872e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.3671875,"distances_sum":1671.9925878332515}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":12,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9493246336996342,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.71875,"distances_sum":1938.0546423849967}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.912109375,"state":{"ssize":12,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9493246336996342,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.71875,"distances_sum":1938.0546423849967}}, n: 9
mean(cfft.distances) = 0.3278365526555836
mean(cdnet.distances) = 0.648448692535066
mean(crand.distances) = 0.3404215907000409
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8711111111111111
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9088888888888889
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8711111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9066666666666666
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666666
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8733333333333334
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.92
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8755555555555556
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.851111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8933333333333332
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9155555555555556
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 15]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 6), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 2, 2, 3, 3, 3, 1, 2]
acc = 0.9866666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 15]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 6), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 2, 2, 3, 3, 3, 1, 2]
acc = 0.9866666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 15]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 6), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 2, 2, 3, 3, 3, 1, 2]
acc = 0.9866666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 15]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 6), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 2, 2, 3, 3, 3, 1, 2]
acc = 0.9866666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 15]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 6), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 2, 2, 3, 3, 3, 1, 2]
acc = 0.9866666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 15]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 6), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 2, 2, 3, 3, 3, 1, 2]
acc = 0.94
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 15]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 6), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 2, 2, 3, 3, 3, 1, 2]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.5327527217070261] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 32, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 14]]
** centroid: 10, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 12: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
finished with 13 centroids; started with 12
acc = 0.9533333333333334
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.19232399779960635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19232399779960635, 0.15373780129494163] ***
*** starting iteration: 2; err: [Inf, 0.19232399779960635, 0.15373780129494163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19232399779960635, 0.15373780129494163, 0.14896790803670212] ***
*** starting iteration: 3; err: [Inf, 0.19232399779960635, 0.15373780129494163, 0.14896790803670212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19232399779960635, 0.15373780129494163, 0.14896790803670212, 0.14584876940230485] ***
*** starting iteration: 4; err: [Inf, 0.19232399779960635, 0.15373780129494163, 0.14896790803670212, 0.14584876940230485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19232399779960635, 0.15373780129494163, 0.14896790803670212, 0.14584876940230485, 0.14384247796112173] ***
*** starting iteration: 5; err: [Inf, 0.19232399779960635, 0.15373780129494163, 0.14896790803670212, 0.14584876940230485, 0.14384247796112173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19232399779960635, 0.15373780129494163, 0.14896790803670212, 0.14584876940230485, 0.14384247796112173, 0.14269024647587725] ***
*** starting iteration: 6; err: [Inf, 0.19232399779960635, 0.15373780129494163, 0.14896790803670212, 0.14584876940230485, 0.14384247796112173, 0.14269024647587725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19232399779960635, 0.15373780129494163, 0.14896790803670212, 0.14584876940230485, 0.14384247796112173, 0.14269024647587725, 0.14217328181904224] ***
*** finished computation of 7 references, err: [Inf, 0.19232399779960635, 0.15373780129494163, 0.14896790803670212, 0.14584876940230485, 0.14384247796112173, 0.14269024647587725, 0.14217328181904224] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [56, 41, 0]]
** centroid: 1, normalized-entropy: 0.9826808027585991, [(1, 56), (2, 41)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 59, 24]]
** centroid: 2, normalized-entropy: 0.8676293117125105, [(2, 59), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [46, 45, 0]]
** centroid: 3, normalized-entropy: 0.999912889501356, [(1, 46), (2, 45)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [72, 14, 0]]
** centroid: 4, normalized-entropy: 0.6409441847875289, [(1, 72), (2, 14)]
*** center 5: selecting labels [1] (freq >= 2) [from [122, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 98, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2410498815200602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2410498815200602, 0.20265246839080756] ***
*** finished computation of 7 references, err: [Inf, 0.2410498815200602, 0.20265246839080756] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [55, 76, 0]]
** centroid: 1, normalized-entropy: 0.9813827323346352, [(1, 55), (2, 76)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [54, 7, 0]]
** centroid: 2, normalized-entropy: 0.5140912790181233, [(1, 54), (2, 7)]
*** center 3: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 86, 24]]
** centroid: 4, normalized-entropy: 0.7568336324184036, [(2, 86), (3, 24)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [78, 4, 0]]
** centroid: 5, normalized-entropy: 0.2811937964320427, [(1, 78), (2, 4)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [30, 84, 0]]
** centroid: 6, normalized-entropy: 0.8314743880097292, [(1, 30), (2, 84)]
*** center 7: selecting labels [1] (freq >= 1) [from [119, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2196711340054836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2196711340054836, 0.19310867877166044] ***
*** finished computation of 7 references, err: [Inf, 0.2196711340054836, 0.19310867877166044] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [125, 6, 0]]
** centroid: 1, normalized-entropy: 0.2682870428573907, [(1, 125), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [90, 10, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 90), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 47, 19]]
** centroid: 3, normalized-entropy: 0.8659653498997099, [(2, 47), (3, 19)]
*** center 4: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [25, 86, 0]]
** centroid: 5, normalized-entropy: 0.7695944821271463, [(1, 25), (2, 86)]
*** center 6: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 93, 0]]
** centroid: 7, normalized-entropy: 0.0849955598367127, [(1, 1), (2, 93)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22825525129406615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22825525129406615, 0.1898228454025186] ***
*** finished computation of 7 references, err: [Inf, 0.22825525129406615, 0.1898228454025186] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [3, 115, 0]]
** centroid: 1, normalized-entropy: 0.17089522427059886, [(1, 3), (2, 115)]
*** center 2: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [51, 56, 0]]
** centroid: 3, normalized-entropy: 0.9984242941042116, [(1, 51), (2, 56)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [63, 17, 0]]
** centroid: 4, normalized-entropy: 0.7462343013654809, [(1, 63), (2, 17)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 48, 27]]
** centroid: 5, normalized-entropy: 0.9426831892554921, [(2, 48), (3, 27)]
*** center 6: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [108, 5, 0]]
** centroid: 7, normalized-entropy: 0.26144010659136985, [(1, 108), (2, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3750935004696854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3750935004696854, 0.3090264831673824] ***
*** starting iteration: 2; err: [Inf, 0.3750935004696854, 0.3090264831673824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3750935004696854, 0.3090264831673824, 0.2947395457452661] ***
*** starting iteration: 3; err: [Inf, 0.3750935004696854, 0.3090264831673824, 0.2947395457452661] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3750935004696854, 0.3090264831673824, 0.2947395457452661, 0.29091145364321525] ***
*** starting iteration: 4; err: [Inf, 0.3750935004696854, 0.3090264831673824, 0.2947395457452661, 0.29091145364321525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3750935004696854, 0.3090264831673824, 0.2947395457452661, 0.29091145364321525, 0.2896161745218476] ***
*** starting iteration: 5; err: [Inf, 0.3750935004696854, 0.3090264831673824, 0.2947395457452661, 0.29091145364321525, 0.2896161745218476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3750935004696854, 0.3090264831673824, 0.2947395457452661, 0.29091145364321525, 0.2896161745218476, 0.28923284250112985] ***
*** finished computation of 3 references, err: [Inf, 0.3750935004696854, 0.3090264831673824, 0.2947395457452661, 0.29091145364321525, 0.2896161745218476, 0.28923284250112985] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [51, 169, 24]]
** centroid: 1, normalized-entropy: 0.7369944576340831, [(1, 51), (2, 169), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [202, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [132, 88, 0]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(1, 132), (2, 88)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3799208766421948] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3799208766421948, 0.30640247117621877] ***
*** starting iteration: 2; err: [Inf, 0.3799208766421948, 0.30640247117621877] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3799208766421948, 0.30640247117621877, 0.29623285823709694] ***
*** starting iteration: 3; err: [Inf, 0.3799208766421948, 0.30640247117621877, 0.29623285823709694] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3799208766421948, 0.30640247117621877, 0.29623285823709694, 0.2935764133592305] ***
*** starting iteration: 4; err: [Inf, 0.3799208766421948, 0.30640247117621877, 0.29623285823709694, 0.2935764133592305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3799208766421948, 0.30640247117621877, 0.29623285823709694, 0.2935764133592305, 0.29275163337364907] ***
*** finished computation of 3 references, err: [Inf, 0.3799208766421948, 0.30640247117621877, 0.29623285823709694, 0.2935764133592305, 0.29275163337364907] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [77, 152, 19]]
** centroid: 1, normalized-entropy: 0.7828172295812946, [(1, 77), (2, 152), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [195, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [134, 90, 0]]
** centroid: 3, normalized-entropy: 0.9719855908477281, [(1, 134), (2, 90)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4347821356535986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4347821356535986, 0.29396892810656483] ***
*** starting iteration: 2; err: [Inf, 0.4347821356535986, 0.29396892810656483] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4347821356535986, 0.29396892810656483, 0.29286452320947504] ***
*** starting iteration: 3; err: [Inf, 0.4347821356535986, 0.29396892810656483, 0.29286452320947504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4347821356535986, 0.29396892810656483, 0.29286452320947504, 0.29282162985638777] ***
*** finished computation of 3 references, err: [Inf, 0.4347821356535986, 0.29396892810656483, 0.29286452320947504, 0.29282162985638777] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [225, 26, 0]]
** centroid: 1, normalized-entropy: 0.4802598858412035, [(1, 225), (2, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [174, 39, 0]]
** centroid: 2, normalized-entropy: 0.6868088934028034, [(1, 174), (2, 39)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 176, 27]]
** centroid: 3, normalized-entropy: 0.5656219889163192, [(2, 176), (3, 27)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38714796179967065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38714796179967065, 0.302611913302684] ***
*** starting iteration: 2; err: [Inf, 0.38714796179967065, 0.302611913302684] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38714796179967065, 0.302611913302684, 0.2962766782151306] ***
*** starting iteration: 3; err: [Inf, 0.38714796179967065, 0.302611913302684, 0.2962766782151306] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38714796179967065, 0.302611913302684, 0.2962766782151306, 0.2953274665447931] ***
*** finished computation of 3 references, err: [Inf, 0.38714796179967065, 0.302611913302684, 0.2962766782151306, 0.2953274665447931] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [240, 22, 0]]
** centroid: 1, normalized-entropy: 0.41601369407155325, [(1, 240), (2, 22)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 191, 24]]
** centroid: 2, normalized-entropy: 0.5048067743702243, [(2, 191), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [145, 44, 0]]
** centroid: 3, normalized-entropy: 0.7828677719871754, [(1, 145), (2, 44)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4206803499635817] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4206803499635817, 0.3007717669237757] ***
*** starting iteration: 2; err: [Inf, 0.4206803499635817, 0.3007717669237757] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4206803499635817, 0.3007717669237757, 0.3001845867608323] ***
*** finished computation of 3 references, err: [Inf, 0.4206803499635817, 0.3007717669237757, 0.3001845867608323] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [105, 142, 19]]
** centroid: 1, normalized-entropy: 0.8105659733008593, [(1, 105), (2, 142), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [181, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [120, 100, 0]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(1, 120), (2, 100)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38259982364182393] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38259982364182393, 0.31459798958470886] ***
*** starting iteration: 2; err: [Inf, 0.38259982364182393, 0.31459798958470886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38259982364182393, 0.31459798958470886, 0.2989623286123241] ***
*** starting iteration: 3; err: [Inf, 0.38259982364182393, 0.31459798958470886, 0.2989623286123241] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38259982364182393, 0.31459798958470886, 0.2989623286123241, 0.2946080856019634] ***
*** starting iteration: 4; err: [Inf, 0.38259982364182393, 0.31459798958470886, 0.2989623286123241, 0.2946080856019634] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38259982364182393, 0.31459798958470886, 0.2989623286123241, 0.2946080856019634, 0.29374910084282174] ***
*** finished computation of 3 references, err: [Inf, 0.38259982364182393, 0.31459798958470886, 0.2989623286123241, 0.2946080856019634, 0.29374910084282174] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [236, 24, 0]]
** centroid: 1, normalized-entropy: 0.4441260450795996, [(1, 236), (2, 24)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 172, 27]]
** centroid: 2, normalized-entropy: 0.572808035783978, [(2, 172), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [163, 45, 0]]
** centroid: 3, normalized-entropy: 0.7534393408598373, [(1, 163), (2, 45)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.21833217890466797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21833217890466797, 0.16711204976535987] ***
*** starting iteration: 2; err: [Inf, 0.21833217890466797, 0.16711204976535987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21833217890466797, 0.16711204976535987, 0.1589992368632908] ***
*** starting iteration: 3; err: [Inf, 0.21833217890466797, 0.16711204976535987, 0.1589992368632908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21833217890466797, 0.16711204976535987, 0.1589992368632908, 0.1554453191926879] ***
*** starting iteration: 4; err: [Inf, 0.21833217890466797, 0.16711204976535987, 0.1589992368632908, 0.1554453191926879] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21833217890466797, 0.16711204976535987, 0.1589992368632908, 0.1554453191926879, 0.15322283371540157] ***
*** starting iteration: 5; err: [Inf, 0.21833217890466797, 0.16711204976535987, 0.1589992368632908, 0.1554453191926879, 0.15322283371540157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21833217890466797, 0.16711204976535987, 0.1589992368632908, 0.1554453191926879, 0.15322283371540157, 0.15212099596151504] ***
*** starting iteration: 6; err: [Inf, 0.21833217890466797, 0.16711204976535987, 0.1589992368632908, 0.1554453191926879, 0.15322283371540157, 0.15212099596151504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21833217890466797, 0.16711204976535987, 0.1589992368632908, 0.1554453191926879, 0.15322283371540157, 0.15212099596151504, 0.15159123919267525] ***
*** finished computation of 7 references, err: [Inf, 0.21833217890466797, 0.16711204976535987, 0.1589992368632908, 0.1554453191926879, 0.15322283371540157, 0.15212099596151504, 0.15159123919267525] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 103, 19]]
** centroid: 1, normalized-entropy: 0.6240145748145288, [(2, 103), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [58, 43, 0]]
** centroid: 2, normalized-entropy: 0.9840304711717017, [(1, 58), (2, 43)]
*** center 3: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [26, 59, 0]]
** centroid: 4, normalized-entropy: 0.8883630233845602, [(1, 26), (2, 59)]
*** center 5: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [97, 37, 0]]
** centroid: 7, normalized-entropy: 0.8501091888128283, [(1, 97), (2, 37)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.210166831333274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210166831333274, 0.16503385721141756] ***
*** starting iteration: 2; err: [Inf, 0.210166831333274, 0.16503385721141756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210166831333274, 0.16503385721141756, 0.15484860106325965] ***
*** starting iteration: 3; err: [Inf, 0.210166831333274, 0.16503385721141756, 0.15484860106325965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210166831333274, 0.16503385721141756, 0.15484860106325965, 0.15112002370208838] ***
*** starting iteration: 4; err: [Inf, 0.210166831333274, 0.16503385721141756, 0.15484860106325965, 0.15112002370208838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210166831333274, 0.16503385721141756, 0.15484860106325965, 0.15112002370208838, 0.14933369698762514] ***
*** starting iteration: 5; err: [Inf, 0.210166831333274, 0.16503385721141756, 0.15484860106325965, 0.15112002370208838, 0.14933369698762514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210166831333274, 0.16503385721141756, 0.15484860106325965, 0.15112002370208838, 0.14933369698762514, 0.14866011476736218] ***
*** finished computation of 7 references, err: [Inf, 0.210166831333274, 0.16503385721141756, 0.15484860106325965, 0.15112002370208838, 0.14933369698762514, 0.14866011476736218] ***
*** center 1: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [51, 51, 0]]
** centroid: 2, normalized-entropy: 1.0, [(1, 51), (2, 51)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [51, 57, 0]]
** centroid: 3, normalized-entropy: 0.9977724720899819, [(1, 51), (2, 57)]
*** center 4: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 109, 27]]
** centroid: 5, normalized-entropy: 0.7189771503746143, [(2, 109), (3, 27)]
*** center 6: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [77, 24, 0]]
** centroid: 7, normalized-entropy: 0.7910662980902586, [(1, 77), (2, 24)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31589584758186395] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31589584758186395, 0.2961519035614199] ***
*** starting iteration: 2; err: [Inf, 0.31589584758186395, 0.2961519035614199] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31589584758186395, 0.2961519035614199, 0.2953789789137338] ***
*** finished computation of 3 references, err: [Inf, 0.31589584758186395, 0.2961519035614199, 0.2953789789137338] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 183, 24]]
** centroid: 1, normalized-entropy: 0.5175827525559071, [(2, 183), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [157, 32, 0]]
** centroid: 2, normalized-entropy: 0.6561288920730015, [(1, 157), (2, 32)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [228, 42, 0]]
** centroid: 3, normalized-entropy: 0.6235702082127973, [(1, 228), (2, 42)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39990427996823635] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39990427996823635, 0.30577729039754287] ***
*** starting iteration: 2; err: [Inf, 0.39990427996823635, 0.30577729039754287] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39990427996823635, 0.30577729039754287, 0.2940843151156222] ***
*** starting iteration: 3; err: [Inf, 0.39990427996823635, 0.30577729039754287, 0.2940843151156222] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39990427996823635, 0.30577729039754287, 0.2940843151156222, 0.29256997832182285] ***
*** finished computation of 3 references, err: [Inf, 0.39990427996823635, 0.30577729039754287, 0.2940843151156222, 0.29256997832182285] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [72, 142, 19]]
** centroid: 1, normalized-entropy: 0.79108858498827, [(1, 72), (2, 142), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [132, 100, 0]]
** centroid: 2, normalized-entropy: 0.9862325350724501, [(1, 132), (2, 100)]
*** center 3: selecting labels [1] (freq >= 1) [from [202, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.515508489871769] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.515508489871769, 0.34397712635152833] ***
*** starting iteration: 2; err: [Inf, 0.515508489871769, 0.34397712635152833] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.515508489871769, 0.34397712635152833, 0.33819856384568014] ***
*** starting iteration: 3; err: [Inf, 0.515508489871769, 0.34397712635152833, 0.33819856384568014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.515508489871769, 0.34397712635152833, 0.33819856384568014, 0.3337670253754511] ***
*** finished computation of 3 references, err: [Inf, 0.515508489871769, 0.34397712635152833, 0.33819856384568014, 0.3337670253754511] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [100, 119, 0]]
** centroid: 1, normalized-entropy: 0.994563622107485, [(1, 100), (2, 119)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [247, 18, 0]]
** centroid: 2, normalized-entropy: 0.3581302240642332, [(1, 247), (2, 18)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [52, 104, 27]]
** centroid: 3, normalized-entropy: 0.8747600101452547, [(1, 52), (2, 104), (3, 27)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.26018687324492157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26018687324492157, 0.18295223476063158] ***
*** starting iteration: 2; err: [Inf, 0.26018687324492157, 0.18295223476063158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26018687324492157, 0.18295223476063158, 0.15844217197502497] ***
*** starting iteration: 3; err: [Inf, 0.26018687324492157, 0.18295223476063158, 0.15844217197502497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26018687324492157, 0.18295223476063158, 0.15844217197502497, 0.1509765432326] ***
*** starting iteration: 4; err: [Inf, 0.26018687324492157, 0.18295223476063158, 0.15844217197502497, 0.1509765432326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26018687324492157, 0.18295223476063158, 0.15844217197502497, 0.1509765432326, 0.14684989666510317] ***
*** starting iteration: 5; err: [Inf, 0.26018687324492157, 0.18295223476063158, 0.15844217197502497, 0.1509765432326, 0.14684989666510317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26018687324492157, 0.18295223476063158, 0.15844217197502497, 0.1509765432326, 0.14684989666510317, 0.14542829049275713] ***
*** starting iteration: 6; err: [Inf, 0.26018687324492157, 0.18295223476063158, 0.15844217197502497, 0.1509765432326, 0.14684989666510317, 0.14542829049275713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26018687324492157, 0.18295223476063158, 0.15844217197502497, 0.1509765432326, 0.14684989666510317, 0.14542829049275713, 0.1449605650827848] ***
*** finished computation of 7 references, err: [Inf, 0.26018687324492157, 0.18295223476063158, 0.15844217197502497, 0.1509765432326, 0.14684989666510317, 0.14542829049275713, 0.1449605650827848] ***
*** center 1: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [66, 13, 0]]
** centroid: 2, normalized-entropy: 0.6451006442088483, [(1, 66), (2, 13)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 105, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [127, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [72, 5, 0]]
** centroid: 5, normalized-entropy: 0.34673146824966367, [(1, 72), (2, 5)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [11, 93, 0]]
** centroid: 6, normalized-entropy: 0.48702128315977294, [(1, 11), (2, 93)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 41, 24]]
** centroid: 7, normalized-entropy: 0.9500796252338518, [(2, 41), (3, 24)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20663037426585423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20663037426585423, 0.15418803268230927] ***
*** starting iteration: 2; err: [Inf, 0.20663037426585423, 0.15418803268230927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20663037426585423, 0.15418803268230927, 0.15107067730808366] ***
*** starting iteration: 3; err: [Inf, 0.20663037426585423, 0.15418803268230927, 0.15107067730808366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20663037426585423, 0.15418803268230927, 0.15107067730808366, 0.15036058188185678] ***
*** finished computation of 7 references, err: [Inf, 0.20663037426585423, 0.15418803268230927, 0.15107067730808366, 0.15036058188185678] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [85, 35, 0]]
** centroid: 1, normalized-entropy: 0.8708644692353648, [(1, 85), (2, 35)]
*** center 2: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [14, 78, 0]]
** centroid: 3, normalized-entropy: 0.6152538910563409, [(1, 14), (2, 78)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 80, 19]]
** centroid: 4, normalized-entropy: 0.7054690408228712, [(2, 80), (3, 19)]
*** center 5: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [60, 49, 0]]
** centroid: 7, normalized-entropy: 0.9926410394727402, [(1, 60), (2, 49)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27699708302730114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27699708302730114, 0.19579796993133167] ***
*** starting iteration: 2; err: [Inf, 0.27699708302730114, 0.19579796993133167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27699708302730114, 0.19579796993133167, 0.1725159796079442] ***
*** starting iteration: 3; err: [Inf, 0.27699708302730114, 0.19579796993133167, 0.1725159796079442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27699708302730114, 0.19579796993133167, 0.1725159796079442, 0.16212579914483186] ***
*** starting iteration: 4; err: [Inf, 0.27699708302730114, 0.19579796993133167, 0.1725159796079442, 0.16212579914483186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27699708302730114, 0.19579796993133167, 0.1725159796079442, 0.16212579914483186, 0.15693447415785364] ***
*** starting iteration: 5; err: [Inf, 0.27699708302730114, 0.19579796993133167, 0.1725159796079442, 0.16212579914483186, 0.15693447415785364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27699708302730114, 0.19579796993133167, 0.1725159796079442, 0.16212579914483186, 0.15693447415785364, 0.1515694396511681] ***
*** starting iteration: 6; err: [Inf, 0.27699708302730114, 0.19579796993133167, 0.1725159796079442, 0.16212579914483186, 0.15693447415785364, 0.1515694396511681] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27699708302730114, 0.19579796993133167, 0.1725159796079442, 0.16212579914483186, 0.15693447415785364, 0.1515694396511681, 0.1476607792193944] ***
*** starting iteration: 7; err: [Inf, 0.27699708302730114, 0.19579796993133167, 0.1725159796079442, 0.16212579914483186, 0.15693447415785364, 0.1515694396511681, 0.1476607792193944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27699708302730114, 0.19579796993133167, 0.1725159796079442, 0.16212579914483186, 0.15693447415785364, 0.1515694396511681, 0.1476607792193944, 0.14594916659484114] ***
*** starting iteration: 8; err: [Inf, 0.27699708302730114, 0.19579796993133167, 0.1725159796079442, 0.16212579914483186, 0.15693447415785364, 0.1515694396511681, 0.1476607792193944, 0.14594916659484114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27699708302730114, 0.19579796993133167, 0.1725159796079442, 0.16212579914483186, 0.15693447415785364, 0.1515694396511681, 0.1476607792193944, 0.14594916659484114, 0.14522200356191514] ***
*** finished computation of 7 references, err: [Inf, 0.27699708302730114, 0.19579796993133167, 0.1725159796079442, 0.16212579914483186, 0.15693447415785364, 0.1515694396511681, 0.1476607792193944, 0.14594916659484114, 0.14522200356191514] ***
*** center 1: selecting labels [1] (freq >= 1) [from [128, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [85, 13, 0]]
** centroid: 2, normalized-entropy: 0.5646695797525669, [(1, 85), (2, 13)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 61, 27]]
** centroid: 3, normalized-entropy: 0.8894663896628687, [(2, 61), (3, 27)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [18, 78, 0]]
** centroid: 4, normalized-entropy: 0.6962122601251459, [(1, 18), (2, 78)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [96, 1, 0]]
** centroid: 5, normalized-entropy: 0.0828365528136124, [(1, 96), (2, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [6, 88, 0]]
** centroid: 6, normalized-entropy: 0.3424637724817958, [(1, 6), (2, 88)]
*** center 7: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2149756014474329] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2149756014474329, 0.17236615250770887] ***
*** starting iteration: 2; err: [Inf, 0.2149756014474329, 0.17236615250770887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2149756014474329, 0.17236615250770887, 0.15832777181640267] ***
*** starting iteration: 3; err: [Inf, 0.2149756014474329, 0.17236615250770887, 0.15832777181640267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2149756014474329, 0.17236615250770887, 0.15832777181640267, 0.15373140297425972] ***
*** finished computation of 7 references, err: [Inf, 0.2149756014474329, 0.17236615250770887, 0.15832777181640267, 0.15373140297425972] ***
*** center 1: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [60, 41, 0]]
** centroid: 2, normalized-entropy: 0.9743197211096905, [(1, 60), (2, 41)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 109, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [74, 63, 0]]
** centroid: 4, normalized-entropy: 0.9953446067777747, [(1, 74), (2, 63)]
*** center 5: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 42, 24]]
** centroid: 6, normalized-entropy: 0.9456603046006401, [(2, 42), (3, 24)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [89, 2, 0]]
** centroid: 7, normalized-entropy: 0.15240699892386778, [(1, 89), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2296842942621721] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2296842942621721, 0.17601723076267423] ***
*** starting iteration: 2; err: [Inf, 0.2296842942621721, 0.17601723076267423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2296842942621721, 0.17601723076267423, 0.16585653847937976] ***
*** starting iteration: 3; err: [Inf, 0.2296842942621721, 0.17601723076267423, 0.16585653847937976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2296842942621721, 0.17601723076267423, 0.16585653847937976, 0.16065047328839305] ***
*** finished computation of 7 references, err: [Inf, 0.2296842942621721, 0.17601723076267423, 0.16585653847937976, 0.16065047328839305] ***
*** center 1: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 132, 19]]
** centroid: 2, normalized-entropy: 0.5458839015055826, [(2, 132), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [49, 30, 0]]
** centroid: 3, normalized-entropy: 0.9578630237479795, [(1, 49), (2, 30)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [111, 45, 0]]
** centroid: 4, normalized-entropy: 0.8667256130949592, [(1, 111), (2, 45)]
*** center 5: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [53, 35, 0]]
** centroid: 7, normalized-entropy: 0.9696055994904408, [(1, 53), (2, 35)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.21264565389078374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21264565389078374, 0.15854254338577545] ***
*** starting iteration: 2; err: [Inf, 0.21264565389078374, 0.15854254338577545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21264565389078374, 0.15854254338577545, 0.1530518371261366] ***
*** starting iteration: 3; err: [Inf, 0.21264565389078374, 0.15854254338577545, 0.1530518371261366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21264565389078374, 0.15854254338577545, 0.1530518371261366, 0.15027800987082265] ***
*** finished computation of 7 references, err: [Inf, 0.21264565389078374, 0.15854254338577545, 0.1530518371261366, 0.15027800987082265] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [53, 51, 0]]
** centroid: 1, normalized-entropy: 0.9997332130219014, [(1, 53), (2, 51)]
*** center 2: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 116, 27]]
** centroid: 3, normalized-entropy: 0.6989779242384453, [(2, 116), (3, 27)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [74, 28, 0]]
** centroid: 4, normalized-entropy: 0.8478617451660525, [(1, 74), (2, 28)]
*** center 5: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [82, 1, 0]]
** centroid: 6, normalized-entropy: 0.09408443883267342, [(1, 82), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [53, 45, 0]]
** centroid: 7, normalized-entropy: 0.9951876662918929, [(1, 53), (2, 45)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38341986817830764] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38341986817830764, 0.3019797224020054] ***
*** starting iteration: 2; err: [Inf, 0.38341986817830764, 0.3019797224020054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38341986817830764, 0.3019797224020054, 0.29259216775642233] ***
*** starting iteration: 3; err: [Inf, 0.38341986817830764, 0.3019797224020054, 0.29259216775642233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38341986817830764, 0.3019797224020054, 0.29259216775642233, 0.29006409562576013] ***
*** finished computation of 3 references, err: [Inf, 0.38341986817830764, 0.3019797224020054, 0.29259216775642233, 0.29006409562576013] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [131, 81, 0]]
** centroid: 1, normalized-entropy: 0.9594946836431022, [(1, 131), (2, 81)]
*** center 2: selecting labels [1] (freq >= 2) [from [199, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [55, 176, 24]]
** centroid: 3, normalized-entropy: 0.7365456060854623, [(1, 55), (2, 176), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38457988947071414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38457988947071414, 0.31062504925766493] ***
*** starting iteration: 2; err: [Inf, 0.38457988947071414, 0.31062504925766493] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38457988947071414, 0.31062504925766493, 0.29901048362763344] ***
*** starting iteration: 3; err: [Inf, 0.38457988947071414, 0.31062504925766493, 0.29901048362763344] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38457988947071414, 0.31062504925766493, 0.29901048362763344, 0.29696987682710524] ***
*** finished computation of 3 references, err: [Inf, 0.38457988947071414, 0.31062504925766493, 0.29901048362763344, 0.29696987682710524] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [163, 35, 0]]
** centroid: 1, normalized-entropy: 0.6729546264799154, [(1, 163), (2, 35)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 184, 19]]
** centroid: 2, normalized-entropy: 0.44836043605257264, [(2, 184), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [243, 23, 0]]
** centroid: 3, normalized-entropy: 0.42456302435263293, [(1, 243), (2, 23)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4928609044940352] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4928609044940352, 0.36773067357429096] ***
*** starting iteration: 2; err: [Inf, 0.4928609044940352, 0.36773067357429096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4928609044940352, 0.36773067357429096, 0.3222774126255575] ***
*** starting iteration: 3; err: [Inf, 0.4928609044940352, 0.36773067357429096, 0.3222774126255575] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4928609044940352, 0.36773067357429096, 0.3222774126255575, 0.3015687042174266] ***
*** finished computation of 3 references, err: [Inf, 0.4928609044940352, 0.36773067357429096, 0.3222774126255575, 0.3015687042174266] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [89, 153, 27]]
** centroid: 1, normalized-entropy: 0.8352684279656296, [(1, 89), (2, 153), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [106, 88, 0]]
** centroid: 2, normalized-entropy: 0.9937811379408324, [(1, 106), (2, 88)]
*** center 3: selecting labels [1] (freq >= 2) [from [204, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.43490795589152825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43490795589152825, 0.3187515927526216] ***
*** starting iteration: 2; err: [Inf, 0.43490795589152825, 0.3187515927526216] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43490795589152825, 0.3187515927526216, 0.2988214957284498] ***
*** starting iteration: 3; err: [Inf, 0.43490795589152825, 0.3187515927526216, 0.2988214957284498] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43490795589152825, 0.3187515927526216, 0.2988214957284498, 0.2968872626628111] ***
*** finished computation of 3 references, err: [Inf, 0.43490795589152825, 0.3187515927526216, 0.2988214957284498, 0.2968872626628111] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [1, 193, 24]]
** centroid: 1, normalized-entropy: 0.3417465004926853, [(1, 1), (2, 193), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [162, 63, 0]]
** centroid: 2, normalized-entropy: 0.8554508105601307, [(1, 162), (2, 63)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [222, 1, 0]]
** centroid: 3, normalized-entropy: 0.04143657108746376, [(1, 222), (2, 1)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3586341168960442] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3586341168960442, 0.3036461358518525] ***
*** starting iteration: 2; err: [Inf, 0.3586341168960442, 0.3036461358518525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3586341168960442, 0.3036461358518525, 0.30128937760490865] ***
*** starting iteration: 3; err: [Inf, 0.3586341168960442, 0.3036461358518525, 0.30128937760490865] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3586341168960442, 0.3036461358518525, 0.30128937760490865, 0.30088266143659087] ***
*** finished computation of 3 references, err: [Inf, 0.3586341168960442, 0.3036461358518525, 0.30128937760490865, 0.30088266143659087] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [122, 92, 0]]
** centroid: 1, normalized-entropy: 0.9857770091118137, [(1, 122), (2, 92)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [87, 150, 19]]
** centroid: 2, normalized-entropy: 0.7946523019685128, [(1, 87), (2, 150), (3, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [197, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4427899097300496] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4427899097300496, 0.3067198498774951] ***
*** starting iteration: 2; err: [Inf, 0.4427899097300496, 0.3067198498774951] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4427899097300496, 0.3067198498774951, 0.3009847623458051] ***
*** starting iteration: 3; err: [Inf, 0.4427899097300496, 0.3067198498774951, 0.3009847623458051] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4427899097300496, 0.3067198498774951, 0.3009847623458051, 0.3000258051090758] ***
*** finished computation of 3 references, err: [Inf, 0.4427899097300496, 0.3067198498774951, 0.3009847623458051, 0.3000258051090758] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [252, 7, 0]]
** centroid: 1, normalized-entropy: 0.1792560669283214, [(1, 252), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [145, 60, 0]]
** centroid: 2, normalized-entropy: 0.8721617883411698, [(1, 145), (2, 60)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [2, 174, 27]]
** centroid: 3, normalized-entropy: 0.40593666139114004, [(1, 2), (2, 174), (3, 27)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1863520650847538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1863520650847538, 0.15709529656430218] ***
*** starting iteration: 2; err: [Inf, 0.1863520650847538, 0.15709529656430218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1863520650847538, 0.15709529656430218, 0.15092214931560508] ***
*** starting iteration: 3; err: [Inf, 0.1863520650847538, 0.15709529656430218, 0.15092214931560508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1863520650847538, 0.15709529656430218, 0.15092214931560508, 0.1483174724100219] ***
*** starting iteration: 4; err: [Inf, 0.1863520650847538, 0.15709529656430218, 0.15092214931560508, 0.1483174724100219] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1863520650847538, 0.15709529656430218, 0.15092214931560508, 0.1483174724100219, 0.147442212043744] ***
*** finished computation of 7 references, err: [Inf, 0.1863520650847538, 0.15709529656430218, 0.15092214931560508, 0.1483174724100219, 0.147442212043744] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [4, 79, 0]]
** centroid: 1, normalized-entropy: 0.27866980356389914, [(1, 4), (2, 79)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [114, 9, 0]]
** centroid: 2, normalized-entropy: 0.3776463213737003, [(1, 114), (2, 9)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 102, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [85, 11, 0]]
** centroid: 4, normalized-entropy: 0.5135877363803757, [(1, 85), (2, 11)]
*** center 5: selecting labels [1] (freq >= 2) [from [119, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 41, 24]]
** centroid: 6, normalized-entropy: 0.9500796252338518, [(2, 41), (3, 24)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [63, 15, 0]]
** centroid: 7, normalized-entropy: 0.7062740891876008, [(1, 63), (2, 15)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2118455416179434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118455416179434, 0.17223627678002754] ***
*** starting iteration: 2; err: [Inf, 0.2118455416179434, 0.17223627678002754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818] ***
*** starting iteration: 3; err: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854] ***
*** starting iteration: 4; err: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854, 0.15670727022589817] ***
*** starting iteration: 5; err: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854, 0.15670727022589817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854, 0.15670727022589817, 0.15480733991878434] ***
*** starting iteration: 6; err: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854, 0.15670727022589817, 0.15480733991878434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854, 0.15670727022589817, 0.15480733991878434, 0.153035671412498] ***
*** starting iteration: 7; err: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854, 0.15670727022589817, 0.15480733991878434, 0.153035671412498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854, 0.15670727022589817, 0.15480733991878434, 0.153035671412498, 0.15161733215498827] ***
*** starting iteration: 8; err: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854, 0.15670727022589817, 0.15480733991878434, 0.153035671412498, 0.15161733215498827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854, 0.15670727022589817, 0.15480733991878434, 0.153035671412498, 0.15161733215498827, 0.15038583870709077] ***
*** starting iteration: 9; err: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854, 0.15670727022589817, 0.15480733991878434, 0.153035671412498, 0.15161733215498827, 0.15038583870709077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854, 0.15670727022589817, 0.15480733991878434, 0.153035671412498, 0.15161733215498827, 0.15038583870709077, 0.14769842327716223] ***
*** starting iteration: 10; err: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854, 0.15670727022589817, 0.15480733991878434, 0.153035671412498, 0.15161733215498827, 0.15038583870709077, 0.14769842327716223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854, 0.15670727022589817, 0.15480733991878434, 0.153035671412498, 0.15161733215498827, 0.15038583870709077, 0.14769842327716223, 0.14633696460803186] ***
*** finished computation of 7 references, err: [Inf, 0.2118455416179434, 0.17223627678002754, 0.16187359310750818, 0.15869520119889854, 0.15670727022589817, 0.15480733991878434, 0.153035671412498, 0.15161733215498827, 0.15038583870709077, 0.14769842327716223, 0.14633696460803186] ***
*** center 1: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [66, 16, 0]]
** centroid: 2, normalized-entropy: 0.7120640548905481, [(1, 66), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 81, 19]]
** centroid: 3, normalized-entropy: 0.7014714598838974, [(2, 81), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [79, 47, 0]]
** centroid: 6, normalized-entropy: 0.9529596446519795, [(1, 79), (2, 47)]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 98, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.20544565914302082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20544565914302082, 0.17026334059197104] ***
*** starting iteration: 2; err: [Inf, 0.20544565914302082, 0.17026334059197104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20544565914302082, 0.17026334059197104, 0.16066234178332867] ***
*** starting iteration: 3; err: [Inf, 0.20544565914302082, 0.17026334059197104, 0.16066234178332867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20544565914302082, 0.17026334059197104, 0.16066234178332867, 0.1549478023699757] ***
*** starting iteration: 4; err: [Inf, 0.20544565914302082, 0.17026334059197104, 0.16066234178332867, 0.1549478023699757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20544565914302082, 0.17026334059197104, 0.16066234178332867, 0.1549478023699757, 0.1507566222555187] ***
*** starting iteration: 5; err: [Inf, 0.20544565914302082, 0.17026334059197104, 0.16066234178332867, 0.1549478023699757, 0.1507566222555187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20544565914302082, 0.17026334059197104, 0.16066234178332867, 0.1549478023699757, 0.1507566222555187, 0.1484502376220573] ***
*** starting iteration: 6; err: [Inf, 0.20544565914302082, 0.17026334059197104, 0.16066234178332867, 0.1549478023699757, 0.1507566222555187, 0.1484502376220573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20544565914302082, 0.17026334059197104, 0.16066234178332867, 0.1549478023699757, 0.1507566222555187, 0.1484502376220573, 0.14710143007473486] ***
*** starting iteration: 7; err: [Inf, 0.20544565914302082, 0.17026334059197104, 0.16066234178332867, 0.1549478023699757, 0.1507566222555187, 0.1484502376220573, 0.14710143007473486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20544565914302082, 0.17026334059197104, 0.16066234178332867, 0.1549478023699757, 0.1507566222555187, 0.1484502376220573, 0.14710143007473486, 0.14672309729568045] ***
*** finished computation of 7 references, err: [Inf, 0.20544565914302082, 0.17026334059197104, 0.16066234178332867, 0.1549478023699757, 0.1507566222555187, 0.1484502376220573, 0.14710143007473486, 0.14672309729568045] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [7, 75, 0]]
** centroid: 1, normalized-entropy: 0.42080948947668984, [(1, 7), (2, 75)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [67, 25, 0]]
** centroid: 2, normalized-entropy: 0.8439491244805034, [(1, 67), (2, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 80, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 50, 27]]
** centroid: 5, normalized-entropy: 0.9346466439786693, [(2, 50), (3, 27)]
*** center 6: selecting labels [1] (freq >= 2) [from [150, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [88, 11, 0]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(1, 88), (2, 11)]
finished with 8 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 12)
[0.9510019001036966, 0.9499889110667553, 0.9349918781056505, 0.9259528990067912, 0.922014829200458, 0.9039878201554847, 0.8990397583211954, 0.8910137682592773, 0.8640346933760107, 0.8529757302212392, 0.8490556424688162, 0.8130375884866904]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9510019001036966
finished with 13
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.40786511062815023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40786511062815023, 0.296838121706838] ***
*** starting iteration: 2; err: [Inf, 0.40786511062815023, 0.296838121706838] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40786511062815023, 0.296838121706838, 0.2953033539628772] ***
*** starting iteration: 3; err: [Inf, 0.40786511062815023, 0.296838121706838, 0.2953033539628772] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40786511062815023, 0.296838121706838, 0.2953033539628772, 0.2949704917248439] ***
*** finished computation of 3 references, err: [Inf, 0.40786511062815023, 0.296838121706838, 0.2953033539628772, 0.2949704917248439] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [238, 13, 0]]
** centroid: 1, normalized-entropy: 0.29396449417736664, [(1, 238), (2, 13)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 200, 24]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 200), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [147, 44, 0]]
** centroid: 3, normalized-entropy: 0.7786496347845098, [(1, 147), (2, 44)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3986459540306539] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3986459540306539, 0.30021202482137904] ***
*** starting iteration: 2; err: [Inf, 0.3986459540306539, 0.30021202482137904] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3986459540306539, 0.30021202482137904, 0.29656048141687974] ***
*** starting iteration: 3; err: [Inf, 0.3986459540306539, 0.30021202482137904, 0.29656048141687974] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3986459540306539, 0.30021202482137904, 0.29656048141687974, 0.29603594828137325] ***
*** finished computation of 3 references, err: [Inf, 0.3986459540306539, 0.30021202482137904, 0.29656048141687974, 0.29603594828137325] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [247, 11, 0]]
** centroid: 1, normalized-entropy: 0.25424875152237963, [(1, 247), (2, 11)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [1, 173, 19]]
** centroid: 2, normalized-entropy: 0.4656848645931274, [(2, 173), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [158, 58, 0]]
** centroid: 3, normalized-entropy: 0.8393307617496655, [(1, 158), (2, 58)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.45875787894022296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45875787894022296, 0.3025127677288817] ***
*** starting iteration: 2; err: [Inf, 0.45875787894022296, 0.3025127677288817] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45875787894022296, 0.3025127677288817, 0.3000249089156536] ***
*** starting iteration: 3; err: [Inf, 0.45875787894022296, 0.3025127677288817, 0.3000249089156536] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45875787894022296, 0.3025127677288817, 0.3000249089156536, 0.2996505568644543] ***
*** finished computation of 3 references, err: [Inf, 0.45875787894022296, 0.3025127677288817, 0.3000249089156536, 0.2996505568644543] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [94, 143, 27]]
** centroid: 1, normalized-entropy: 0.8492341530246721, [(1, 94), (2, 143), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [90, 98, 0]]
** centroid: 2, normalized-entropy: 0.998693408098057, [(1, 90), (2, 98)]
*** center 3: selecting labels [1] (freq >= 2) [from [215, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 13)
[0.9510019001036966, 0.9499889110667553, 0.9349918781056505, 0.9279848710986437, 0.9259528990067912, 0.922014829200458, 0.9039878201554847, 0.8990397583211954, 0.8910137682592773, 0.8640346933760107, 0.8529757302212392, 0.8490556424688162, 0.8130375884866904]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9510019001036966
finished with 13
iteration 3 finished
generating 4 configurations using top 12 configurations, starting with 13)
[0.9510019001036966, 0.9499889110667553, 0.9349918781056505, 0.9279848710986437, 0.9259528990067912, 0.922014829200458, 0.9039878201554847, 0.8990397583211954, 0.8910137682592773, 0.8640346933760107, 0.8529757302212392, 0.8490556424688162, 0.8130375884866904]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9510019001036966
finished with 14
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.27814494510245574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27814494510245574, 0.22268047749257838] ***
*** starting iteration: 2; err: [Inf, 0.27814494510245574, 0.22268047749257838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27814494510245574, 0.22268047749257838, 0.19991632447334695] ***
*** starting iteration: 3; err: [Inf, 0.27814494510245574, 0.22268047749257838, 0.19991632447334695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27814494510245574, 0.22268047749257838, 0.19991632447334695, 0.19180579718716959] ***
*** starting iteration: 4; err: [Inf, 0.27814494510245574, 0.22268047749257838, 0.19991632447334695, 0.19180579718716959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27814494510245574, 0.22268047749257838, 0.19991632447334695, 0.19180579718716959, 0.18843724609173657] ***
*** starting iteration: 5; err: [Inf, 0.27814494510245574, 0.22268047749257838, 0.19991632447334695, 0.19180579718716959, 0.18843724609173657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27814494510245574, 0.22268047749257838, 0.19991632447334695, 0.19180579718716959, 0.18843724609173657, 0.18722919365195362] ***
*** starting iteration: 6; err: [Inf, 0.27814494510245574, 0.22268047749257838, 0.19991632447334695, 0.19180579718716959, 0.18843724609173657, 0.18722919365195362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27814494510245574, 0.22268047749257838, 0.19991632447334695, 0.19180579718716959, 0.18843724609173657, 0.18722919365195362, 0.18652090771884486] ***
*** finished computation of 7 references, err: [Inf, 0.27814494510245574, 0.22268047749257838, 0.19991632447334695, 0.19180579718716959, 0.18843724609173657, 0.18722919365195362, 0.18652090771884486] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [62, 12, 0]]
** centroid: 1, normalized-entropy: 0.6394571324851642, [(1, 62), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [75, 2, 0]]
** centroid: 2, normalized-entropy: 0.17378132267943294, [(1, 75), (2, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [135, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 48, 24]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 48), (3, 24)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 99, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [97, 1, 0]]
** centroid: 6, normalized-entropy: 0.08214305133815322, [(1, 97), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [16, 95, 0]]
** centroid: 7, normalized-entropy: 0.5949898952560516, [(1, 16), (2, 95)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3025745712681443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3025745712681443, 0.2236705455402641] ***
*** starting iteration: 2; err: [Inf, 0.3025745712681443, 0.2236705455402641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3025745712681443, 0.2236705455402641, 0.21152644883143135] ***
*** starting iteration: 3; err: [Inf, 0.3025745712681443, 0.2236705455402641, 0.21152644883143135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3025745712681443, 0.2236705455402641, 0.21152644883143135, 0.20502685606821736] ***
*** starting iteration: 4; err: [Inf, 0.3025745712681443, 0.2236705455402641, 0.21152644883143135, 0.20502685606821736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3025745712681443, 0.2236705455402641, 0.21152644883143135, 0.20502685606821736, 0.199723730656155] ***
*** starting iteration: 5; err: [Inf, 0.3025745712681443, 0.2236705455402641, 0.21152644883143135, 0.20502685606821736, 0.199723730656155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3025745712681443, 0.2236705455402641, 0.21152644883143135, 0.20502685606821736, 0.199723730656155, 0.19669115565985307] ***
*** starting iteration: 6; err: [Inf, 0.3025745712681443, 0.2236705455402641, 0.21152644883143135, 0.20502685606821736, 0.199723730656155, 0.19669115565985307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3025745712681443, 0.2236705455402641, 0.21152644883143135, 0.20502685606821736, 0.199723730656155, 0.19669115565985307, 0.19567641403213298] ***
*** starting iteration: 7; err: [Inf, 0.3025745712681443, 0.2236705455402641, 0.21152644883143135, 0.20502685606821736, 0.199723730656155, 0.19669115565985307, 0.19567641403213298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3025745712681443, 0.2236705455402641, 0.21152644883143135, 0.20502685606821736, 0.199723730656155, 0.19669115565985307, 0.19567641403213298, 0.194791528360005] ***
*** finished computation of 7 references, err: [Inf, 0.3025745712681443, 0.2236705455402641, 0.21152644883143135, 0.20502685606821736, 0.199723730656155, 0.19669115565985307, 0.19567641403213298, 0.194791528360005] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [47, 65, 0]]
** centroid: 1, normalized-entropy: 0.9812872088817248, [(1, 47), (2, 65)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 99, 19]]
** centroid: 2, normalized-entropy: 0.6367368786558286, [(2, 99), (3, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [87, 10, 0]]
** centroid: 4, normalized-entropy: 0.478723511385963, [(1, 87), (2, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [35, 63, 0]]
** centroid: 6, normalized-entropy: 0.940285958670631, [(1, 35), (2, 63)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [91, 5, 0]]
** centroid: 7, normalized-entropy: 0.29518174309075856, [(1, 91), (2, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25897950746294957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25897950746294957, 0.2144533200482691] ***
*** starting iteration: 2; err: [Inf, 0.25897950746294957, 0.2144533200482691] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25897950746294957, 0.2144533200482691, 0.20116747926216924] ***
*** starting iteration: 3; err: [Inf, 0.25897950746294957, 0.2144533200482691, 0.20116747926216924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25897950746294957, 0.2144533200482691, 0.20116747926216924, 0.19333522038665535] ***
*** starting iteration: 4; err: [Inf, 0.25897950746294957, 0.2144533200482691, 0.20116747926216924, 0.19333522038665535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25897950746294957, 0.2144533200482691, 0.20116747926216924, 0.19333522038665535, 0.19051595596873064] ***
*** starting iteration: 5; err: [Inf, 0.25897950746294957, 0.2144533200482691, 0.20116747926216924, 0.19333522038665535, 0.19051595596873064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25897950746294957, 0.2144533200482691, 0.20116747926216924, 0.19333522038665535, 0.19051595596873064, 0.18952997182698353] ***
*** finished computation of 7 references, err: [Inf, 0.25897950746294957, 0.2144533200482691, 0.20116747926216924, 0.19333522038665535, 0.19051595596873064, 0.18952997182698353] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [49, 52, 0]]
** centroid: 1, normalized-entropy: 0.999363485672765, [(1, 49), (2, 52)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 103, 27]]
** centroid: 2, normalized-entropy: 0.7370484525801073, [(2, 103), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [48, 59, 0]]
** centroid: 3, normalized-entropy: 0.9923628747472766, [(1, 48), (2, 59)]
*** center 4: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [86, 27, 0]]
** centroid: 7, normalized-entropy: 0.7932698344258595, [(1, 86), (2, 27)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 14)
[0.9510019001036966, 0.9499889110667553, 0.9349918781056505, 0.9299958641276006, 0.9279848710986437, 0.9259528990067912, 0.922014829200458, 0.9039878201554847, 0.8990397583211954, 0.8910137682592773, 0.8640346933760107, 0.8529757302212392, 0.8490556424688162, 0.8130375884866904]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9510019001036966
finished with 14
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9510019001036966, 0.9499889110667553, 0.9349918781056505, 0.9299958641276006, 0.9279848710986437, 0.9259528990067912, 0.922014829200458, 0.9039878201554847, 0.8990397583211954, 0.8910137682592773, 0.8640346933760107, 0.8529757302212392, 0.8490556424688162, 0.8130375884866904]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9510019001036966
finished with 14
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9510019001036966, 0.9499889110667553, 0.9349918781056505, 0.9299958641276006, 0.9279848710986437, 0.9259528990067912, 0.922014829200458, 0.9039878201554847, 0.8990397583211954, 0.8910137682592773, 0.8640346933760107, 0.8529757302212392, 0.8490556424688162, 0.8130375884866904]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9510019001036966
finished with 16
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.33777323897925204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33777323897925204, 0.2536435456912931] ***
*** finished computation of 3 references, err: [Inf, 0.33777323897925204, 0.2536435456912931] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [129, 177, 24]]
** centroid: 1, normalized-entropy: 0.8118588642190199, [(1, 129), (2, 177), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [133, 80, 0]]
** centroid: 2, normalized-entropy: 0.9548654347204524, [(1, 133), (2, 80)]
*** center 3: selecting labels [1] (freq >= 1) [from [123, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4120268260772484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4120268260772484, 0.27051883179839625] ***
*** finished computation of 3 references, err: [Inf, 0.4120268260772484, 0.27051883179839625] ***
*** center 1: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [125, 207, 19]]
** centroid: 2, normalized-entropy: 0.7618510851526787, [(1, 125), (2, 207), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [169, 35, 0]]
** centroid: 3, normalized-entropy: 0.6612805854775594, [(1, 169), (2, 35)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3907799456321608] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3907799456321608, 0.24554060869801347] ***
*** finished computation of 3 references, err: [Inf, 0.3907799456321608, 0.24554060869801347] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [82, 98, 0]]
** centroid: 1, normalized-entropy: 0.9942929346520455, [(1, 82), (2, 98)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [48, 132, 27]]
** centroid: 2, normalized-entropy: 0.8114659252263057, [(1, 48), (2, 132), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [269, 11, 0]]
** centroid: 3, normalized-entropy: 0.23900757647088733, [(1, 269), (2, 11)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36021178605331405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36021178605331405, 0.2994204909588258] ***
*** finished computation of 3 references, err: [Inf, 0.36021178605331405, 0.2994204909588258] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [229, 18, 0]]
** centroid: 1, normalized-entropy: 0.376560278142727, [(1, 229), (2, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [152, 27, 0]]
** centroid: 2, normalized-entropy: 0.6119334051869455, [(1, 152), (2, 27)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [4, 212, 24]]
** centroid: 3, normalized-entropy: 0.37144807973124805, [(1, 4), (2, 212), (3, 24)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3794845040870839] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3794845040870839, 0.335083811539693] ***
*** finished computation of 3 references, err: [Inf, 0.3794845040870839, 0.335083811539693] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [108, 119, 0]]
** centroid: 1, normalized-entropy: 0.9983054737785806, [(1, 108), (2, 119)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [86, 100, 19]]
** centroid: 2, normalized-entropy: 0.8511039547500588, [(1, 86), (2, 100), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [212, 23, 0]]
** centroid: 3, normalized-entropy: 0.4622145578130442, [(1, 212), (2, 23)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3641798666579233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3641798666579233, 0.31792094589474945] ***
*** finished computation of 3 references, err: [Inf, 0.3641798666579233, 0.31792094589474945] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [119, 112, 0]]
** centroid: 1, normalized-entropy: 0.9993375041688846, [(1, 119), (2, 112)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [13, 104, 27]]
** centroid: 2, normalized-entropy: 0.6972465636426944, [(1, 13), (2, 104), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [267, 25, 0]]
** centroid: 3, normalized-entropy: 0.4216662763288357, [(1, 267), (2, 25)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 16)
[0.9510019001036966, 0.9499889110667553, 0.9349918781056505, 0.9299958641276006, 0.9279848710986437, 0.9259528990067912, 0.922014829200458, 0.9039878201554847, 0.8990397583211954, 0.8910137682592773, 0.888987790185395, 0.8640346933760107, 0.8529757302212392, 0.8490556424688162, 0.8130375884866904, 0.7990715266164368]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9510019001036966
finished with 17
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.2064000453097975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2064000453097975, 0.1483038610222193] ***
*** starting iteration: 2; err: [Inf, 0.2064000453097975, 0.1483038610222193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2064000453097975, 0.1483038610222193, 0.14420132118196147] ***
*** starting iteration: 3; err: [Inf, 0.2064000453097975, 0.1483038610222193, 0.14420132118196147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2064000453097975, 0.1483038610222193, 0.14420132118196147, 0.14380695612810263] ***
*** finished computation of 7 references, err: [Inf, 0.2064000453097975, 0.1483038610222193, 0.14420132118196147, 0.14380695612810263] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 72, 24]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 72), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [107, 2, 0]]
** centroid: 3, normalized-entropy: 0.13206535647488304, [(1, 107), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [51, 51, 0]]
** centroid: 4, normalized-entropy: 1.0, [(1, 51), (2, 51)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [54, 38, 0]]
** centroid: 5, normalized-entropy: 0.978070970973496, [(1, 54), (2, 38)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 94, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19094904364719206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19094904364719206, 0.1485772032480592] ***
*** starting iteration: 2; err: [Inf, 0.19094904364719206, 0.1485772032480592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19094904364719206, 0.1485772032480592, 0.14547506591858067] ***
*** starting iteration: 3; err: [Inf, 0.19094904364719206, 0.1485772032480592, 0.14547506591858067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19094904364719206, 0.1485772032480592, 0.14547506591858067, 0.14513367973058589] ***
*** finished computation of 7 references, err: [Inf, 0.19094904364719206, 0.1485772032480592, 0.14547506591858067, 0.14513367973058589] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 81, 19]]
** centroid: 1, normalized-entropy: 0.7014714598838974, [(2, 81), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [88, 8, 0]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(1, 88), (2, 8)]
*** center 4: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [87, 14, 0]]
** centroid: 5, normalized-entropy: 0.5805970961414402, [(1, 87), (2, 14)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 92, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [62, 47, 0]]
** centroid: 7, normalized-entropy: 0.9862958176866949, [(1, 62), (2, 47)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19978173827924214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19978173827924214, 0.15180642928682392] ***
*** starting iteration: 2; err: [Inf, 0.19978173827924214, 0.15180642928682392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19978173827924214, 0.15180642928682392, 0.14776695059749229] ***
*** starting iteration: 3; err: [Inf, 0.19978173827924214, 0.15180642928682392, 0.14776695059749229] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19978173827924214, 0.15180642928682392, 0.14776695059749229, 0.14721894124662432] ***
*** finished computation of 7 references, err: [Inf, 0.19978173827924214, 0.15180642928682392, 0.14776695059749229, 0.14721894124662432] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [16, 82, 0]]
** centroid: 1, normalized-entropy: 0.6420642892306891, [(1, 16), (2, 82)]
*** center 2: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [60, 36, 0]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(1, 60), (2, 36)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [53, 41, 0]]
** centroid: 4, normalized-entropy: 0.988212082728797, [(1, 53), (2, 41)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 82, 27]]
** centroid: 5, normalized-entropy: 0.8076226097576925, [(2, 82), (3, 27)]
*** center 6: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 17)
[0.9510019001036966, 0.9499889110667553, 0.9349918781056505, 0.9299958641276006, 0.9299958641276006, 0.9279848710986437, 0.9259528990067912, 0.922014829200458, 0.9039878201554847, 0.8990397583211954, 0.8910137682592773, 0.888987790185395, 0.8640346933760107, 0.8529757302212392, 0.8490556424688162, 0.8130375884866904, 0.7990715266164368]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9510019001036966
finished with 18
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.2314765079341292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2314765079341292, 0.20580610712464373] ***
*** starting iteration: 2; err: [Inf, 0.2314765079341292, 0.20580610712464373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2314765079341292, 0.20580610712464373, 0.1979532853753359] ***
*** starting iteration: 3; err: [Inf, 0.2314765079341292, 0.20580610712464373, 0.1979532853753359] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2314765079341292, 0.20580610712464373, 0.1979532853753359, 0.19472990326119122] ***
*** finished computation of 7 references, err: [Inf, 0.2314765079341292, 0.20580610712464373, 0.1979532853753359, 0.19472990326119122] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [51, 72, 0]]
** centroid: 1, normalized-entropy: 0.9788698505067782, [(1, 51), (2, 72)]
*** center 2: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [23, 40, 0]]
** centroid: 3, normalized-entropy: 0.9468188316776024, [(1, 23), (2, 40)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [77, 18, 0]]
** centroid: 4, normalized-entropy: 0.7003691487575897, [(1, 77), (2, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [51, 7, 0]]
** centroid: 5, normalized-entropy: 0.5313400141801669, [(1, 51), (2, 7)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 120, 24]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 120), (3, 24)]
*** center 7: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.26177958571359045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26177958571359045, 0.2045044838918605] ***
*** starting iteration: 2; err: [Inf, 0.26177958571359045, 0.2045044838918605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26177958571359045, 0.2045044838918605, 0.19566369179155918] ***
*** starting iteration: 3; err: [Inf, 0.26177958571359045, 0.2045044838918605, 0.19566369179155918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26177958571359045, 0.2045044838918605, 0.19566369179155918, 0.19291942154659122] ***
*** finished computation of 7 references, err: [Inf, 0.26177958571359045, 0.2045044838918605, 0.19566369179155918, 0.19291942154659122] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [76, 25, 0]]
** centroid: 1, normalized-entropy: 0.8073313266519867, [(1, 76), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [66, 17, 0]]
** centroid: 2, normalized-entropy: 0.7314625617214586, [(1, 66), (2, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 98, 19]]
** centroid: 4, normalized-entropy: 0.6400041428422206, [(2, 98), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [10, 93, 0]]
** centroid: 5, normalized-entropy: 0.4596942127956402, [(1, 10), (2, 93)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [103, 9, 0]]
** centroid: 6, normalized-entropy: 0.40343635676427997, [(1, 103), (2, 9)]
*** center 7: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2698923140552001] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2698923140552001, 0.24123014825203554] ***
*** starting iteration: 2; err: [Inf, 0.2698923140552001, 0.24123014825203554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2698923140552001, 0.24123014825203554, 0.20536614144486243] ***
*** starting iteration: 3; err: [Inf, 0.2698923140552001, 0.24123014825203554, 0.20536614144486243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2698923140552001, 0.24123014825203554, 0.20536614144486243, 0.19630146481660843] ***
*** finished computation of 7 references, err: [Inf, 0.2698923140552001, 0.24123014825203554, 0.20536614144486243, 0.19630146481660843] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 60, 27]]
** centroid: 1, normalized-entropy: 0.8935711016541908, [(2, 60), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [2, 92, 0]]
** centroid: 2, normalized-entropy: 0.14854949043034832, [(1, 2), (2, 92)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [19, 77, 0]]
** centroid: 3, normalized-entropy: 0.7177418091697444, [(1, 19), (2, 77)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [64, 11, 0]]
** centroid: 4, normalized-entropy: 0.6014353864290773, [(1, 64), (2, 11)]
*** center 5: selecting labels [1] (freq >= 1) [from [117, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [130, 1, 0]]
** centroid: 7, normalized-entropy: 0.06466104967715186, [(1, 130), (2, 1)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.2004193465760909] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2004193465760909, 0.16624013820377878] ***
*** starting iteration: 2; err: [Inf, 0.2004193465760909, 0.16624013820377878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2004193465760909, 0.16624013820377878, 0.15867055876366795] ***
*** starting iteration: 3; err: [Inf, 0.2004193465760909, 0.16624013820377878, 0.15867055876366795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2004193465760909, 0.16624013820377878, 0.15867055876366795, 0.15686874599196016] ***
*** starting iteration: 4; err: [Inf, 0.2004193465760909, 0.16624013820377878, 0.15867055876366795, 0.15686874599196016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2004193465760909, 0.16624013820377878, 0.15867055876366795, 0.15686874599196016, 0.1560398835153319] ***
*** finished computation of 7 references, err: [Inf, 0.2004193465760909, 0.16624013820377878, 0.15867055876366795, 0.15686874599196016, 0.1560398835153319] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [162, 10, 0]]
** centroid: 1, normalized-entropy: 0.32001486274754665, [(1, 162), (2, 10)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [46, 109, 0]]
** centroid: 2, normalized-entropy: 0.8773118802464468, [(1, 46), (2, 109)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 162, 35]]
** centroid: 3, normalized-entropy: 0.67494214402296, [(2, 162), (3, 35)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [149, 7, 0]]
** centroid: 4, normalized-entropy: 0.26419969320029135, [(1, 149), (2, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [88, 82, 0]]
** centroid: 6, normalized-entropy: 0.999101248968496, [(1, 88), (2, 82)]
*** center 7: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21120198765117676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21120198765117676, 0.15389961784658954] ***
*** starting iteration: 2; err: [Inf, 0.21120198765117676, 0.15389961784658954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21120198765117676, 0.15389961784658954, 0.14922584653273224] ***
*** starting iteration: 3; err: [Inf, 0.21120198765117676, 0.15389961784658954, 0.14922584653273224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21120198765117676, 0.15389961784658954, 0.14922584653273224, 0.14780613238364457] ***
*** starting iteration: 4; err: [Inf, 0.21120198765117676, 0.15389961784658954, 0.14922584653273224, 0.14780613238364457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21120198765117676, 0.15389961784658954, 0.14922584653273224, 0.14780613238364457, 0.14755729124508798] ***
*** finished computation of 7 references, err: [Inf, 0.21120198765117676, 0.15389961784658954, 0.14922584653273224, 0.14780613238364457, 0.14755729124508798] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [77, 19, 0]]
** centroid: 1, normalized-entropy: 0.7177418091697444, [(1, 77), (2, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [42, 17, 0]]
** centroid: 2, normalized-entropy: 0.8663006754980497, [(1, 42), (2, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [40, 31, 0]]
** centroid: 3, normalized-entropy: 0.9883779727795042, [(1, 40), (2, 31)]
*** center 4: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 66, 10]]
** centroid: 5, normalized-entropy: 0.5617526078313283, [(2, 66), (3, 10)]
*** center 6: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 57, 3]]
** centroid: 7, normalized-entropy: 0.2863969571159561, [(2, 57), (3, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18791503486409783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18791503486409783, 0.15147150031570344] ***
*** starting iteration: 2; err: [Inf, 0.18791503486409783, 0.15147150031570344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18791503486409783, 0.15147150031570344, 0.14508141473215072] ***
*** starting iteration: 3; err: [Inf, 0.18791503486409783, 0.15147150031570344, 0.14508141473215072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18791503486409783, 0.15147150031570344, 0.14508141473215072, 0.14294397645723075] ***
*** starting iteration: 4; err: [Inf, 0.18791503486409783, 0.15147150031570344, 0.14508141473215072, 0.14294397645723075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18791503486409783, 0.15147150031570344, 0.14508141473215072, 0.14294397645723075, 0.14239090562891216] ***
*** finished computation of 7 references, err: [Inf, 0.18791503486409783, 0.15147150031570344, 0.14508141473215072, 0.14294397645723075, 0.14239090562891216] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [5, 65, 0]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(1, 5), (2, 65)]
*** center 2: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [31, 36, 0]]
** centroid: 4, normalized-entropy: 0.995978956518722, [(1, 31), (2, 36)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [58, 22, 0]]
** centroid: 5, normalized-entropy: 0.8485481782946159, [(1, 58), (2, 22)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 68, 20]]
** centroid: 6, normalized-entropy: 0.7732266742876346, [(2, 68), (3, 20)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [52, 1, 0]]
** centroid: 7, normalized-entropy: 0.13503620280212753, [(1, 52), (2, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23300858564302326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23300858564302326, 0.16771631164383144] ***
*** starting iteration: 2; err: [Inf, 0.23300858564302326, 0.16771631164383144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974] ***
*** starting iteration: 3; err: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974, 0.15187033004127443] ***
*** starting iteration: 4; err: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974, 0.15187033004127443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974, 0.15187033004127443, 0.1498768504159525] ***
*** starting iteration: 5; err: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974, 0.15187033004127443, 0.1498768504159525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974, 0.15187033004127443, 0.1498768504159525, 0.14657764074672014] ***
*** starting iteration: 6; err: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974, 0.15187033004127443, 0.1498768504159525, 0.14657764074672014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974, 0.15187033004127443, 0.1498768504159525, 0.14657764074672014, 0.14414668265730143] ***
*** starting iteration: 7; err: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974, 0.15187033004127443, 0.1498768504159525, 0.14657764074672014, 0.14414668265730143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974, 0.15187033004127443, 0.1498768504159525, 0.14657764074672014, 0.14414668265730143, 0.14310743960924446] ***
*** starting iteration: 8; err: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974, 0.15187033004127443, 0.1498768504159525, 0.14657764074672014, 0.14414668265730143, 0.14310743960924446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974, 0.15187033004127443, 0.1498768504159525, 0.14657764074672014, 0.14414668265730143, 0.14310743960924446, 0.1420451389765367] ***
*** starting iteration: 9; err: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974, 0.15187033004127443, 0.1498768504159525, 0.14657764074672014, 0.14414668265730143, 0.14310743960924446, 0.1420451389765367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974, 0.15187033004127443, 0.1498768504159525, 0.14657764074672014, 0.14414668265730143, 0.14310743960924446, 0.1420451389765367, 0.14143614053167403] ***
*** finished computation of 7 references, err: [Inf, 0.23300858564302326, 0.16771631164383144, 0.15459138831309974, 0.15187033004127443, 0.1498768504159525, 0.14657764074672014, 0.14414668265730143, 0.14310743960924446, 0.1420451389765367, 0.14143614053167403] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 23]]
** centroid: 1, normalized-entropy: 0.9972943816462351, [(2, 26), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 72, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [63, 5, 0]]
** centroid: 4, normalized-entropy: 0.378958787501346, [(1, 63), (2, 5)]
*** center 5: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [12, 57, 0]]
** centroid: 6, normalized-entropy: 0.6665783579949205, [(1, 12), (2, 57)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [52, 4, 0]]
** centroid: 7, normalized-entropy: 0.3712323266408756, [(1, 52), (2, 4)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18068190052965655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18068190052965655, 0.15997711119800806] ***
*** starting iteration: 2; err: [Inf, 0.18068190052965655, 0.15997711119800806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18068190052965655, 0.15997711119800806, 0.1576699257036671] ***
*** starting iteration: 3; err: [Inf, 0.18068190052965655, 0.15997711119800806, 0.1576699257036671] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18068190052965655, 0.15997711119800806, 0.1576699257036671, 0.15639952035341412] ***
*** starting iteration: 4; err: [Inf, 0.18068190052965655, 0.15997711119800806, 0.1576699257036671, 0.15639952035341412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18068190052965655, 0.15997711119800806, 0.1576699257036671, 0.15639952035341412, 0.15464649128355085] ***
*** starting iteration: 5; err: [Inf, 0.18068190052965655, 0.15997711119800806, 0.1576699257036671, 0.15639952035341412, 0.15464649128355085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18068190052965655, 0.15997711119800806, 0.1576699257036671, 0.15639952035341412, 0.15464649128355085, 0.15323937643598765] ***
*** starting iteration: 6; err: [Inf, 0.18068190052965655, 0.15997711119800806, 0.1576699257036671, 0.15639952035341412, 0.15464649128355085, 0.15323937643598765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18068190052965655, 0.15997711119800806, 0.1576699257036671, 0.15639952035341412, 0.15464649128355085, 0.15323937643598765, 0.15171989051811396] ***
*** starting iteration: 7; err: [Inf, 0.18068190052965655, 0.15997711119800806, 0.1576699257036671, 0.15639952035341412, 0.15464649128355085, 0.15323937643598765, 0.15171989051811396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18068190052965655, 0.15997711119800806, 0.1576699257036671, 0.15639952035341412, 0.15464649128355085, 0.15323937643598765, 0.15171989051811396, 0.15026789329387247] ***
*** starting iteration: 8; err: [Inf, 0.18068190052965655, 0.15997711119800806, 0.1576699257036671, 0.15639952035341412, 0.15464649128355085, 0.15323937643598765, 0.15171989051811396, 0.15026789329387247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18068190052965655, 0.15997711119800806, 0.1576699257036671, 0.15639952035341412, 0.15464649128355085, 0.15323937643598765, 0.15171989051811396, 0.15026789329387247, 0.14929289274848997] ***
*** finished computation of 7 references, err: [Inf, 0.18068190052965655, 0.15997711119800806, 0.1576699257036671, 0.15639952035341412, 0.15464649128355085, 0.15323937643598765, 0.15171989051811396, 0.15026789329387247, 0.14929289274848997] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [50, 7, 0]]
** centroid: 1, normalized-entropy: 0.5373760853377334, [(1, 50), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [14, 72, 0]]
** centroid: 2, normalized-entropy: 0.6409441847875289, [(1, 14), (2, 72)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [58, 7, 0]]
** centroid: 3, normalized-entropy: 0.49291577961610966, [(1, 58), (2, 7)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [42, 25, 0]]
** centroid: 4, normalized-entropy: 0.9530483471581301, [(1, 42), (2, 25)]
*** center 5: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 67, 19]]
** centroid: 7, normalized-entropy: 0.7618624463753669, [(2, 67), (3, 19)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26183727478049695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26183727478049695, 0.19560064844042063] ***
*** starting iteration: 2; err: [Inf, 0.26183727478049695, 0.19560064844042063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26183727478049695, 0.19560064844042063, 0.18199125331826507] ***
*** starting iteration: 3; err: [Inf, 0.26183727478049695, 0.19560064844042063, 0.18199125331826507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26183727478049695, 0.19560064844042063, 0.18199125331826507, 0.16875095730461181] ***
*** starting iteration: 4; err: [Inf, 0.26183727478049695, 0.19560064844042063, 0.18199125331826507, 0.16875095730461181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26183727478049695, 0.19560064844042063, 0.18199125331826507, 0.16875095730461181, 0.1582507937438786] ***
*** starting iteration: 5; err: [Inf, 0.26183727478049695, 0.19560064844042063, 0.18199125331826507, 0.16875095730461181, 0.1582507937438786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26183727478049695, 0.19560064844042063, 0.18199125331826507, 0.16875095730461181, 0.1582507937438786, 0.15211773018352687] ***
*** starting iteration: 6; err: [Inf, 0.26183727478049695, 0.19560064844042063, 0.18199125331826507, 0.16875095730461181, 0.1582507937438786, 0.15211773018352687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26183727478049695, 0.19560064844042063, 0.18199125331826507, 0.16875095730461181, 0.1582507937438786, 0.15211773018352687, 0.14708487623371183] ***
*** starting iteration: 7; err: [Inf, 0.26183727478049695, 0.19560064844042063, 0.18199125331826507, 0.16875095730461181, 0.1582507937438786, 0.15211773018352687, 0.14708487623371183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26183727478049695, 0.19560064844042063, 0.18199125331826507, 0.16875095730461181, 0.1582507937438786, 0.15211773018352687, 0.14708487623371183, 0.1458802159447223] ***
*** starting iteration: 8; err: [Inf, 0.26183727478049695, 0.19560064844042063, 0.18199125331826507, 0.16875095730461181, 0.1582507937438786, 0.15211773018352687, 0.14708487623371183, 0.1458802159447223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26183727478049695, 0.19560064844042063, 0.18199125331826507, 0.16875095730461181, 0.1582507937438786, 0.15211773018352687, 0.14708487623371183, 0.1458802159447223, 0.14547253342717886] ***
*** finished computation of 7 references, err: [Inf, 0.26183727478049695, 0.19560064844042063, 0.18199125331826507, 0.16875095730461181, 0.1582507937438786, 0.15211773018352687, 0.14708487623371183, 0.1458802159447223, 0.14547253342717886] ***
*** center 1: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [71, 8, 0]]
** centroid: 2, normalized-entropy: 0.47299536229314826, [(1, 71), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [19, 58, 0]]
** centroid: 3, normalized-entropy: 0.8060914696192223, [(1, 19), (2, 58)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 43, 17]]
** centroid: 4, normalized-entropy: 0.8599530497177523, [(2, 43), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [2, 65, 0]]
** centroid: 5, normalized-entropy: 0.19364280468389852, [(1, 2), (2, 65)]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [55, 2, 0]]
** centroid: 7, normalized-entropy: 0.2192973081321754, [(1, 55), (2, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24877006491459905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24877006491459905, 0.19809484402649105] ***
*** starting iteration: 2; err: [Inf, 0.24877006491459905, 0.19809484402649105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935] ***
*** starting iteration: 3; err: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935, 0.1733103220127523] ***
*** starting iteration: 4; err: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935, 0.1733103220127523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935, 0.1733103220127523, 0.16458874124847353] ***
*** starting iteration: 5; err: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935, 0.1733103220127523, 0.16458874124847353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935, 0.1733103220127523, 0.16458874124847353, 0.15861012028902768] ***
*** starting iteration: 6; err: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935, 0.1733103220127523, 0.16458874124847353, 0.15861012028902768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935, 0.1733103220127523, 0.16458874124847353, 0.15861012028902768, 0.1543807005304843] ***
*** starting iteration: 7; err: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935, 0.1733103220127523, 0.16458874124847353, 0.15861012028902768, 0.1543807005304843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935, 0.1733103220127523, 0.16458874124847353, 0.15861012028902768, 0.1543807005304843, 0.1509131895713508] ***
*** starting iteration: 8; err: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935, 0.1733103220127523, 0.16458874124847353, 0.15861012028902768, 0.1543807005304843, 0.1509131895713508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935, 0.1733103220127523, 0.16458874124847353, 0.15861012028902768, 0.1543807005304843, 0.1509131895713508, 0.14948943624086677] ***
*** starting iteration: 9; err: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935, 0.1733103220127523, 0.16458874124847353, 0.15861012028902768, 0.1543807005304843, 0.1509131895713508, 0.14948943624086677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935, 0.1733103220127523, 0.16458874124847353, 0.15861012028902768, 0.1543807005304843, 0.1509131895713508, 0.14948943624086677, 0.14871438393741845] ***
*** finished computation of 7 references, err: [Inf, 0.24877006491459905, 0.19809484402649105, 0.1838610583161935, 0.1733103220127523, 0.16458874124847353, 0.15861012028902768, 0.1543807005304843, 0.1509131895713508, 0.14948943624086677, 0.14871438393741845] ***
*** center 1: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [49, 43, 0]]
** centroid: 3, normalized-entropy: 0.996929708080541, [(1, 49), (2, 43)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 73, 14]]
** centroid: 4, normalized-entropy: 0.6365048555378351, [(2, 73), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [11, 65, 0]]
** centroid: 5, normalized-entropy: 0.5965109917085881, [(1, 11), (2, 65)]
*** center 6: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [38, 14, 0]]
** centroid: 7, normalized-entropy: 0.8403586716091169, [(1, 38), (2, 14)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2673986317962408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2673986317962408, 0.1877384291337803] ***
*** starting iteration: 2; err: [Inf, 0.2673986317962408, 0.1877384291337803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2673986317962408, 0.1877384291337803, 0.1642474178215489] ***
*** starting iteration: 3; err: [Inf, 0.2673986317962408, 0.1877384291337803, 0.1642474178215489] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2673986317962408, 0.1877384291337803, 0.1642474178215489, 0.15506000861153008] ***
*** starting iteration: 4; err: [Inf, 0.2673986317962408, 0.1877384291337803, 0.1642474178215489, 0.15506000861153008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2673986317962408, 0.1877384291337803, 0.1642474178215489, 0.15506000861153008, 0.15158472122624517] ***
*** starting iteration: 5; err: [Inf, 0.2673986317962408, 0.1877384291337803, 0.1642474178215489, 0.15506000861153008, 0.15158472122624517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2673986317962408, 0.1877384291337803, 0.1642474178215489, 0.15506000861153008, 0.15158472122624517, 0.15054936117306353] ***
*** starting iteration: 6; err: [Inf, 0.2673986317962408, 0.1877384291337803, 0.1642474178215489, 0.15506000861153008, 0.15158472122624517, 0.15054936117306353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2673986317962408, 0.1877384291337803, 0.1642474178215489, 0.15506000861153008, 0.15158472122624517, 0.15054936117306353, 0.15002415543049574] ***
*** finished computation of 7 references, err: [Inf, 0.2673986317962408, 0.1877384291337803, 0.1642474178215489, 0.15506000861153008, 0.15158472122624517, 0.15054936117306353, 0.15002415543049574] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [71, 1, 0]]
** centroid: 1, normalized-entropy: 0.1055910363751953, [(1, 71), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [54, 13, 0]]
** centroid: 2, normalized-entropy: 0.709825885194168, [(1, 54), (2, 13)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 83, 12]]
** centroid: 3, normalized-entropy: 0.5472469471683307, [(2, 83), (3, 12)]
*** center 4: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 57, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [56, 27, 0]]
** centroid: 6, normalized-entropy: 0.9100534290139191, [(1, 56), (2, 27)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [45, 5, 0]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(1, 45), (2, 5)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26690143457893284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26690143457893284, 0.16331270343391224] ***
*** starting iteration: 2; err: [Inf, 0.26690143457893284, 0.16331270343391224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26690143457893284, 0.16331270343391224, 0.1532079993057996] ***
*** starting iteration: 3; err: [Inf, 0.26690143457893284, 0.16331270343391224, 0.1532079993057996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26690143457893284, 0.16331270343391224, 0.1532079993057996, 0.14990203948225825] ***
*** starting iteration: 4; err: [Inf, 0.26690143457893284, 0.16331270343391224, 0.1532079993057996, 0.14990203948225825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26690143457893284, 0.16331270343391224, 0.1532079993057996, 0.14990203948225825, 0.14886910027638078] ***
*** starting iteration: 5; err: [Inf, 0.26690143457893284, 0.16331270343391224, 0.1532079993057996, 0.14990203948225825, 0.14886910027638078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26690143457893284, 0.16331270343391224, 0.1532079993057996, 0.14990203948225825, 0.14886910027638078, 0.14795115202339365] ***
*** finished computation of 7 references, err: [Inf, 0.26690143457893284, 0.16331270343391224, 0.1532079993057996, 0.14990203948225825, 0.14886910027638078, 0.14795115202339365] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [6, 58, 0]]
** centroid: 1, normalized-entropy: 0.44886448872302936, [(1, 6), (2, 58)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [81, 4, 0]]
** centroid: 2, normalized-entropy: 0.2737691686829417, [(1, 81), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 68, 18]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 68), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [45, 40, 0]]
** centroid: 4, normalized-entropy: 0.9975025463691153, [(1, 45), (2, 40)]
*** center 5: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [45, 12, 0]]
** centroid: 7, normalized-entropy: 0.7424875695421234, [(1, 45), (2, 12)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2388883733227849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2388883733227849, 0.16902299222163855] ***
*** starting iteration: 2; err: [Inf, 0.2388883733227849, 0.16902299222163855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2388883733227849, 0.16902299222163855, 0.16021927392482757] ***
*** starting iteration: 3; err: [Inf, 0.2388883733227849, 0.16902299222163855, 0.16021927392482757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2388883733227849, 0.16902299222163855, 0.16021927392482757, 0.15651756421104074] ***
*** starting iteration: 4; err: [Inf, 0.2388883733227849, 0.16902299222163855, 0.16021927392482757, 0.15651756421104074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2388883733227849, 0.16902299222163855, 0.16021927392482757, 0.15651756421104074, 0.15454927125107498] ***
*** starting iteration: 5; err: [Inf, 0.2388883733227849, 0.16902299222163855, 0.16021927392482757, 0.15651756421104074, 0.15454927125107498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2388883733227849, 0.16902299222163855, 0.16021927392482757, 0.15651756421104074, 0.15454927125107498, 0.15294020865112543] ***
*** starting iteration: 6; err: [Inf, 0.2388883733227849, 0.16902299222163855, 0.16021927392482757, 0.15651756421104074, 0.15454927125107498, 0.15294020865112543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2388883733227849, 0.16902299222163855, 0.16021927392482757, 0.15651756421104074, 0.15454927125107498, 0.15294020865112543, 0.1514807399166748] ***
*** starting iteration: 7; err: [Inf, 0.2388883733227849, 0.16902299222163855, 0.16021927392482757, 0.15651756421104074, 0.15454927125107498, 0.15294020865112543, 0.1514807399166748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2388883733227849, 0.16902299222163855, 0.16021927392482757, 0.15651756421104074, 0.15454927125107498, 0.15294020865112543, 0.1514807399166748, 0.15070022107660772] ***
*** finished computation of 7 references, err: [Inf, 0.2388883733227849, 0.16902299222163855, 0.16021927392482757, 0.15651756421104074, 0.15454927125107498, 0.15294020865112543, 0.1514807399166748, 0.15070022107660772] ***
*** center 1: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [9, 45, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 9), (2, 45)]
*** center 3: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [5, 68, 0]]
** centroid: 4, normalized-entropy: 0.3602750564216625, [(1, 5), (2, 68)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [91, 17, 0]]
** centroid: 5, normalized-entropy: 0.6280710155029396, [(1, 91), (2, 17)]
*** center 6: selecting labels [1] (freq >= 1) [from [44, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 59, 18]]
** centroid: 7, normalized-entropy: 0.7845191388986644, [(2, 59), (3, 18)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3081155085396022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3081155085396022, 0.1740422478299588] ***
*** starting iteration: 2; err: [Inf, 0.3081155085396022, 0.1740422478299588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3081155085396022, 0.1740422478299588, 0.1631951370583847] ***
*** starting iteration: 3; err: [Inf, 0.3081155085396022, 0.1740422478299588, 0.1631951370583847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3081155085396022, 0.1740422478299588, 0.1631951370583847, 0.1563190279651899] ***
*** starting iteration: 4; err: [Inf, 0.3081155085396022, 0.1740422478299588, 0.1631951370583847, 0.1563190279651899] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3081155085396022, 0.1740422478299588, 0.1631951370583847, 0.1563190279651899, 0.15205436431709676] ***
*** starting iteration: 5; err: [Inf, 0.3081155085396022, 0.1740422478299588, 0.1631951370583847, 0.1563190279651899, 0.15205436431709676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3081155085396022, 0.1740422478299588, 0.1631951370583847, 0.1563190279651899, 0.15205436431709676, 0.1502004427658394] ***
*** starting iteration: 6; err: [Inf, 0.3081155085396022, 0.1740422478299588, 0.1631951370583847, 0.1563190279651899, 0.15205436431709676, 0.1502004427658394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3081155085396022, 0.1740422478299588, 0.1631951370583847, 0.1563190279651899, 0.15205436431709676, 0.1502004427658394, 0.14926462092809378] ***
*** finished computation of 7 references, err: [Inf, 0.3081155085396022, 0.1740422478299588, 0.1631951370583847, 0.1563190279651899, 0.15205436431709676, 0.1502004427658394, 0.14926462092809378] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [19, 37, 0]]
** centroid: 1, normalized-entropy: 0.9241335419915458, [(1, 19), (2, 37)]
*** center 2: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 21]]
** centroid: 3, normalized-entropy: 0.9945386816500111, [(2, 25), (3, 21)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 64, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 44, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [115, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [67, 11, 0]]
** centroid: 7, normalized-entropy: 0.5869185834047994, [(1, 67), (2, 11)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26770202603936194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26770202603936194, 0.1676878720112145] ***
*** starting iteration: 2; err: [Inf, 0.26770202603936194, 0.1676878720112145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996] ***
*** starting iteration: 3; err: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893] ***
*** starting iteration: 4; err: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893, 0.1508073357800022] ***
*** starting iteration: 5; err: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893, 0.1508073357800022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893, 0.1508073357800022, 0.1489768081177026] ***
*** starting iteration: 6; err: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893, 0.1508073357800022, 0.1489768081177026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893, 0.1508073357800022, 0.1489768081177026, 0.1471630714656785] ***
*** starting iteration: 7; err: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893, 0.1508073357800022, 0.1489768081177026, 0.1471630714656785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893, 0.1508073357800022, 0.1489768081177026, 0.1471630714656785, 0.14509825883060692] ***
*** starting iteration: 8; err: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893, 0.1508073357800022, 0.1489768081177026, 0.1471630714656785, 0.14509825883060692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893, 0.1508073357800022, 0.1489768081177026, 0.1471630714656785, 0.14509825883060692, 0.1433078429326415] ***
*** starting iteration: 9; err: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893, 0.1508073357800022, 0.1489768081177026, 0.1471630714656785, 0.14509825883060692, 0.1433078429326415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893, 0.1508073357800022, 0.1489768081177026, 0.1471630714656785, 0.14509825883060692, 0.1433078429326415, 0.14215031349286436] ***
*** starting iteration: 10; err: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893, 0.1508073357800022, 0.1489768081177026, 0.1471630714656785, 0.14509825883060692, 0.1433078429326415, 0.14215031349286436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893, 0.1508073357800022, 0.1489768081177026, 0.1471630714656785, 0.14509825883060692, 0.1433078429326415, 0.14215031349286436, 0.14149154144432396] ***
*** finished computation of 7 references, err: [Inf, 0.26770202603936194, 0.1676878720112145, 0.15584800672437996, 0.15261705284006893, 0.1508073357800022, 0.1489768081177026, 0.1471630714656785, 0.14509825883060692, 0.1433078429326415, 0.14215031349286436, 0.14149154144432396] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [39, 37, 0]]
** centroid: 1, normalized-entropy: 0.9995003941817588, [(1, 39), (2, 37)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [67, 4, 0]]
** centroid: 2, normalized-entropy: 0.3127333763966432, [(1, 67), (2, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [58, 8, 0]]
** centroid: 4, normalized-entropy: 0.5328350630342235, [(1, 58), (2, 8)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 61, 17]]
** centroid: 5, normalized-entropy: 0.7564041945982506, [(2, 61), (3, 17)]
*** center 6: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 79, 0]]
** centroid: 7, normalized-entropy: 0.27866980356389914, [(1, 4), (2, 79)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17720363204274325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17720363204274325, 0.15260019950568676] ***
*** starting iteration: 2; err: [Inf, 0.17720363204274325, 0.15260019950568676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17720363204274325, 0.15260019950568676, 0.14994081215001642] ***
*** starting iteration: 3; err: [Inf, 0.17720363204274325, 0.15260019950568676, 0.14994081215001642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17720363204274325, 0.15260019950568676, 0.14994081215001642, 0.14885145562328397] ***
*** starting iteration: 4; err: [Inf, 0.17720363204274325, 0.15260019950568676, 0.14994081215001642, 0.14885145562328397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17720363204274325, 0.15260019950568676, 0.14994081215001642, 0.14885145562328397, 0.1483841411639005] ***
*** finished computation of 7 references, err: [Inf, 0.17720363204274325, 0.15260019950568676, 0.14994081215001642, 0.14885145562328397, 0.1483841411639005] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 77, 18]]
** centroid: 1, normalized-entropy: 0.7003691487575897, [(2, 77), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [104, 25, 0]]
** centroid: 3, normalized-entropy: 0.7093502365779696, [(1, 104), (2, 25)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [22, 39, 0]]
** centroid: 4, normalized-entropy: 0.9432261548473416, [(1, 22), (2, 39)]
*** center 5: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 53, 0]]
** centroid: 6, normalized-entropy: 0.13303964861069897, [(1, 1), (2, 53)]
*** center 7: selecting labels [1] (freq >= 1) [from [45, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19407595140021294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407595140021294, 0.15579569666087628] ***
*** starting iteration: 2; err: [Inf, 0.19407595140021294, 0.15579569666087628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407595140021294, 0.15579569666087628, 0.1522729479558766] ***
*** starting iteration: 3; err: [Inf, 0.19407595140021294, 0.15579569666087628, 0.1522729479558766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407595140021294, 0.15579569666087628, 0.1522729479558766, 0.14949971183016897] ***
*** starting iteration: 4; err: [Inf, 0.19407595140021294, 0.15579569666087628, 0.1522729479558766, 0.14949971183016897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407595140021294, 0.15579569666087628, 0.1522729479558766, 0.14949971183016897, 0.1476496854396537] ***
*** starting iteration: 5; err: [Inf, 0.19407595140021294, 0.15579569666087628, 0.1522729479558766, 0.14949971183016897, 0.1476496854396537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407595140021294, 0.15579569666087628, 0.1522729479558766, 0.14949971183016897, 0.1476496854396537, 0.14622695684619247] ***
*** starting iteration: 6; err: [Inf, 0.19407595140021294, 0.15579569666087628, 0.1522729479558766, 0.14949971183016897, 0.1476496854396537, 0.14622695684619247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407595140021294, 0.15579569666087628, 0.1522729479558766, 0.14949971183016897, 0.1476496854396537, 0.14622695684619247, 0.14514080560579895] ***
*** starting iteration: 7; err: [Inf, 0.19407595140021294, 0.15579569666087628, 0.1522729479558766, 0.14949971183016897, 0.1476496854396537, 0.14622695684619247, 0.14514080560579895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407595140021294, 0.15579569666087628, 0.1522729479558766, 0.14949971183016897, 0.1476496854396537, 0.14622695684619247, 0.14514080560579895, 0.14395979386847466] ***
*** starting iteration: 8; err: [Inf, 0.19407595140021294, 0.15579569666087628, 0.1522729479558766, 0.14949971183016897, 0.1476496854396537, 0.14622695684619247, 0.14514080560579895, 0.14395979386847466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407595140021294, 0.15579569666087628, 0.1522729479558766, 0.14949971183016897, 0.1476496854396537, 0.14622695684619247, 0.14514080560579895, 0.14395979386847466, 0.14335493244137615] ***
*** finished computation of 7 references, err: [Inf, 0.19407595140021294, 0.15579569666087628, 0.1522729479558766, 0.14949971183016897, 0.1476496854396537, 0.14622695684619247, 0.14514080560579895, 0.14395979386847466, 0.14335493244137615] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [39, 32, 0]]
** centroid: 1, normalized-entropy: 0.9929768866085175, [(1, 39), (2, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [80, 7, 0]]
** centroid: 3, normalized-entropy: 0.40379715049939235, [(1, 80), (2, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 63, 16]]
** centroid: 4, normalized-entropy: 0.7269625813353975, [(2, 63), (3, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 71, 2]]
** centroid: 6, normalized-entropy: 0.18116640155354563, [(2, 71), (3, 2)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [36, 23, 0]]
** centroid: 7, normalized-entropy: 0.9646900825612559, [(1, 36), (2, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1935151389837265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1935151389837265, 0.15816278604790568] ***
*** starting iteration: 2; err: [Inf, 0.1935151389837265, 0.15816278604790568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1935151389837265, 0.15816278604790568, 0.15107350028306246] ***
*** starting iteration: 3; err: [Inf, 0.1935151389837265, 0.15816278604790568, 0.15107350028306246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1935151389837265, 0.15816278604790568, 0.15107350028306246, 0.14810827087424697] ***
*** starting iteration: 4; err: [Inf, 0.1935151389837265, 0.15816278604790568, 0.15107350028306246, 0.14810827087424697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1935151389837265, 0.15816278604790568, 0.15107350028306246, 0.14810827087424697, 0.14646028104051947] ***
*** starting iteration: 5; err: [Inf, 0.1935151389837265, 0.15816278604790568, 0.15107350028306246, 0.14810827087424697, 0.14646028104051947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1935151389837265, 0.15816278604790568, 0.15107350028306246, 0.14810827087424697, 0.14646028104051947, 0.14542425898090006] ***
*** starting iteration: 6; err: [Inf, 0.1935151389837265, 0.15816278604790568, 0.15107350028306246, 0.14810827087424697, 0.14646028104051947, 0.14542425898090006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1935151389837265, 0.15816278604790568, 0.15107350028306246, 0.14810827087424697, 0.14646028104051947, 0.14542425898090006, 0.1444966206913814] ***
*** finished computation of 7 references, err: [Inf, 0.1935151389837265, 0.15816278604790568, 0.15107350028306246, 0.14810827087424697, 0.14646028104051947, 0.14542425898090006, 0.1444966206913814] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [84, 7, 0]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(1, 84), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [8, 82, 0]]
** centroid: 2, normalized-entropy: 0.43275015878875417, [(1, 8), (2, 82)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 52, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 32, 17]]
** centroid: 4, normalized-entropy: 0.9313043685793762, [(2, 32), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [50, 9, 0]]
** centroid: 5, normalized-entropy: 0.6161661934005354, [(1, 50), (2, 9)]
*** center 6: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [83, 1, 0]]
** centroid: 7, normalized-entropy: 0.09317131799548928, [(1, 83), (2, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.271636755829677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.271636755829677, 0.17009285495430232] ***
*** starting iteration: 2; err: [Inf, 0.271636755829677, 0.17009285495430232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.271636755829677, 0.17009285495430232, 0.1548577707465738] ***
*** starting iteration: 3; err: [Inf, 0.271636755829677, 0.17009285495430232, 0.1548577707465738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.271636755829677, 0.17009285495430232, 0.1548577707465738, 0.15045300619956106] ***
*** starting iteration: 4; err: [Inf, 0.271636755829677, 0.17009285495430232, 0.1548577707465738, 0.15045300619956106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.271636755829677, 0.17009285495430232, 0.1548577707465738, 0.15045300619956106, 0.14693857812136413] ***
*** starting iteration: 5; err: [Inf, 0.271636755829677, 0.17009285495430232, 0.1548577707465738, 0.15045300619956106, 0.14693857812136413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.271636755829677, 0.17009285495430232, 0.1548577707465738, 0.15045300619956106, 0.14693857812136413, 0.14481946988403796] ***
*** starting iteration: 6; err: [Inf, 0.271636755829677, 0.17009285495430232, 0.1548577707465738, 0.15045300619956106, 0.14693857812136413, 0.14481946988403796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.271636755829677, 0.17009285495430232, 0.1548577707465738, 0.15045300619956106, 0.14693857812136413, 0.14481946988403796, 0.143577927631326] ***
*** starting iteration: 7; err: [Inf, 0.271636755829677, 0.17009285495430232, 0.1548577707465738, 0.15045300619956106, 0.14693857812136413, 0.14481946988403796, 0.143577927631326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.271636755829677, 0.17009285495430232, 0.1548577707465738, 0.15045300619956106, 0.14693857812136413, 0.14481946988403796, 0.143577927631326, 0.14300144321285188] ***
*** finished computation of 7 references, err: [Inf, 0.271636755829677, 0.17009285495430232, 0.1548577707465738, 0.15045300619956106, 0.14693857812136413, 0.14481946988403796, 0.143577927631326, 0.14300144321285188] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [82, 6, 0]]
** centroid: 1, normalized-entropy: 0.3591016256485496, [(1, 82), (2, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [42, 33, 0]]
** centroid: 3, normalized-entropy: 0.9895875212220558, [(1, 42), (2, 33)]
*** center 4: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 73, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 42, 20]]
** centroid: 6, normalized-entropy: 0.9071657675730821, [(2, 42), (3, 20)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [39, 29, 0]]
** centroid: 7, normalized-entropy: 0.9843432030984676, [(1, 39), (2, 29)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2174126878059469] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2174126878059469, 0.16504387976042925] ***
*** starting iteration: 2; err: [Inf, 0.2174126878059469, 0.16504387976042925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2174126878059469, 0.16504387976042925, 0.1499721641112119] ***
*** starting iteration: 3; err: [Inf, 0.2174126878059469, 0.16504387976042925, 0.1499721641112119] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2174126878059469, 0.16504387976042925, 0.1499721641112119, 0.14611137640103697] ***
*** starting iteration: 4; err: [Inf, 0.2174126878059469, 0.16504387976042925, 0.1499721641112119, 0.14611137640103697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2174126878059469, 0.16504387976042925, 0.1499721641112119, 0.14611137640103697, 0.14515060608275235] ***
*** finished computation of 7 references, err: [Inf, 0.2174126878059469, 0.16504387976042925, 0.1499721641112119, 0.14611137640103697, 0.14515060608275235] ***
*** center 1: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [60, 5, 0]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(1, 60), (2, 5)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 40, 20]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 40), (3, 20)]
*** center 4: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [20, 64, 0]]
** centroid: 5, normalized-entropy: 0.7918583525674836, [(1, 20), (2, 64)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 62, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [48, 10, 0]]
** centroid: 7, normalized-entropy: 0.6631968402398286, [(1, 48), (2, 10)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17882895916700364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17882895916700364, 0.1601760762874037] ***
*** starting iteration: 2; err: [Inf, 0.17882895916700364, 0.1601760762874037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17882895916700364, 0.1601760762874037, 0.15524934272188692] ***
*** starting iteration: 3; err: [Inf, 0.17882895916700364, 0.1601760762874037, 0.15524934272188692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17882895916700364, 0.1601760762874037, 0.15524934272188692, 0.15121527883037925] ***
*** starting iteration: 4; err: [Inf, 0.17882895916700364, 0.1601760762874037, 0.15524934272188692, 0.15121527883037925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17882895916700364, 0.1601760762874037, 0.15524934272188692, 0.15121527883037925, 0.1483113573011942] ***
*** starting iteration: 5; err: [Inf, 0.17882895916700364, 0.1601760762874037, 0.15524934272188692, 0.15121527883037925, 0.1483113573011942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17882895916700364, 0.1601760762874037, 0.15524934272188692, 0.15121527883037925, 0.1483113573011942, 0.1475605021920055] ***
*** finished computation of 7 references, err: [Inf, 0.17882895916700364, 0.1601760762874037, 0.15524934272188692, 0.15121527883037925, 0.1483113573011942, 0.1475605021920055] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [72, 7, 0]]
** centroid: 1, normalized-entropy: 0.43180499427520785, [(1, 72), (2, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [2, 52, 0]]
** centroid: 4, normalized-entropy: 0.22853814395352806, [(1, 2), (2, 52)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 61, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 35, 18]]
** centroid: 6, normalized-entropy: 0.9244571409964927, [(2, 35), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [47, 21, 0]]
** centroid: 7, normalized-entropy: 0.8918107543797084, [(1, 47), (2, 21)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1984060973357409] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1984060973357409, 0.1578838475830853] ***
*** starting iteration: 2; err: [Inf, 0.1984060973357409, 0.1578838475830853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1984060973357409, 0.1578838475830853, 0.15032294044084846] ***
*** starting iteration: 3; err: [Inf, 0.1984060973357409, 0.1578838475830853, 0.15032294044084846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1984060973357409, 0.1578838475830853, 0.15032294044084846, 0.1474566343277693] ***
*** starting iteration: 4; err: [Inf, 0.1984060973357409, 0.1578838475830853, 0.15032294044084846, 0.1474566343277693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1984060973357409, 0.1578838475830853, 0.15032294044084846, 0.1474566343277693, 0.14636710725352167] ***
*** starting iteration: 5; err: [Inf, 0.1984060973357409, 0.1578838475830853, 0.15032294044084846, 0.1474566343277693, 0.14636710725352167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1984060973357409, 0.1578838475830853, 0.15032294044084846, 0.1474566343277693, 0.14636710725352167, 0.1452301291730255] ***
*** starting iteration: 6; err: [Inf, 0.1984060973357409, 0.1578838475830853, 0.15032294044084846, 0.1474566343277693, 0.14636710725352167, 0.1452301291730255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1984060973357409, 0.1578838475830853, 0.15032294044084846, 0.1474566343277693, 0.14636710725352167, 0.1452301291730255, 0.1444309259224683] ***
*** finished computation of 7 references, err: [Inf, 0.1984060973357409, 0.1578838475830853, 0.15032294044084846, 0.1474566343277693, 0.14636710725352167, 0.1452301291730255, 0.1444309259224683] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [70, 2, 0]]
** centroid: 1, normalized-entropy: 0.18312206830137262, [(1, 70), (2, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [8, 68, 0]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(1, 8), (2, 68)]
*** center 4: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [3, 67, 0]]
** centroid: 5, normalized-entropy: 0.25524211319019174, [(1, 3), (2, 67)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 44, 16]]
** centroid: 6, normalized-entropy: 0.8366407419411671, [(2, 44), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [39, 9, 0]]
** centroid: 7, normalized-entropy: 0.6962122601251459, [(1, 39), (2, 9)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19694893394969404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19694893394969404, 0.16787040731869637] ***
*** starting iteration: 2; err: [Inf, 0.19694893394969404, 0.16787040731869637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19694893394969404, 0.16787040731869637, 0.15880125640705228] ***
*** starting iteration: 3; err: [Inf, 0.19694893394969404, 0.16787040731869637, 0.15880125640705228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19694893394969404, 0.16787040731869637, 0.15880125640705228, 0.15537680253759026] ***
*** starting iteration: 4; err: [Inf, 0.19694893394969404, 0.16787040731869637, 0.15880125640705228, 0.15537680253759026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19694893394969404, 0.16787040731869637, 0.15880125640705228, 0.15537680253759026, 0.15423153170756995] ***
*** starting iteration: 5; err: [Inf, 0.19694893394969404, 0.16787040731869637, 0.15880125640705228, 0.15537680253759026, 0.15423153170756995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19694893394969404, 0.16787040731869637, 0.15880125640705228, 0.15537680253759026, 0.15423153170756995, 0.1535229178611189] ***
*** finished computation of 7 references, err: [Inf, 0.19694893394969404, 0.16787040731869637, 0.15880125640705228, 0.15537680253759026, 0.15423153170756995, 0.1535229178611189] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 85, 21]]
** centroid: 1, normalized-entropy: 0.7181384220154764, [(2, 85), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [61, 20, 0]]
** centroid: 2, normalized-entropy: 0.8063495153650776, [(1, 61), (2, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [55, 37, 0]]
** centroid: 3, normalized-entropy: 0.9722080563599758, [(1, 55), (2, 37)]
*** center 4: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [52, 31, 0]]
** centroid: 5, normalized-entropy: 0.9533171305598173, [(1, 52), (2, 31)]
*** center 6: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2088779052272439] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2088779052272439, 0.17734233015030623] ***
*** starting iteration: 2; err: [Inf, 0.2088779052272439, 0.17734233015030623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995] ***
*** starting iteration: 3; err: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995, 0.16345520775206387] ***
*** starting iteration: 4; err: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995, 0.16345520775206387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995, 0.16345520775206387, 0.16124312896374612] ***
*** starting iteration: 5; err: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995, 0.16345520775206387, 0.16124312896374612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995, 0.16345520775206387, 0.16124312896374612, 0.1559791955985129] ***
*** starting iteration: 6; err: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995, 0.16345520775206387, 0.16124312896374612, 0.1559791955985129] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995, 0.16345520775206387, 0.16124312896374612, 0.1559791955985129, 0.15010613180324436] ***
*** starting iteration: 7; err: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995, 0.16345520775206387, 0.16124312896374612, 0.1559791955985129, 0.15010613180324436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995, 0.16345520775206387, 0.16124312896374612, 0.1559791955985129, 0.15010613180324436, 0.14645231245132162] ***
*** starting iteration: 8; err: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995, 0.16345520775206387, 0.16124312896374612, 0.1559791955985129, 0.15010613180324436, 0.14645231245132162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995, 0.16345520775206387, 0.16124312896374612, 0.1559791955985129, 0.15010613180324436, 0.14645231245132162, 0.14521079285256563] ***
*** starting iteration: 9; err: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995, 0.16345520775206387, 0.16124312896374612, 0.1559791955985129, 0.15010613180324436, 0.14645231245132162, 0.14521079285256563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995, 0.16345520775206387, 0.16124312896374612, 0.1559791955985129, 0.15010613180324436, 0.14645231245132162, 0.14521079285256563, 0.14447831006813794] ***
*** finished computation of 7 references, err: [Inf, 0.2088779052272439, 0.17734233015030623, 0.16689091222546995, 0.16345520775206387, 0.16124312896374612, 0.1559791955985129, 0.15010613180324436, 0.14645231245132162, 0.14521079285256563, 0.14447831006813794] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [22, 47, 0]]
** centroid: 1, normalized-entropy: 0.903116172156872, [(1, 22), (2, 47)]
*** center 2: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 83, 12]]
** centroid: 3, normalized-entropy: 0.5472469471683307, [(2, 83), (3, 12)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [39, 42, 0]]
** centroid: 4, normalized-entropy: 0.9990102708804813, [(1, 39), (2, 42)]
*** center 5: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [48, 16, 0]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(1, 48), (2, 16)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2596240268461406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596240268461406, 0.17247373891063034] ***
*** starting iteration: 2; err: [Inf, 0.2596240268461406, 0.17247373891063034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596240268461406, 0.17247373891063034, 0.1529067586194724] ***
*** starting iteration: 3; err: [Inf, 0.2596240268461406, 0.17247373891063034, 0.1529067586194724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596240268461406, 0.17247373891063034, 0.1529067586194724, 0.1498880909346044] ***
*** starting iteration: 4; err: [Inf, 0.2596240268461406, 0.17247373891063034, 0.1529067586194724, 0.1498880909346044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596240268461406, 0.17247373891063034, 0.1529067586194724, 0.1498880909346044, 0.14919140916131438] ***
*** finished computation of 7 references, err: [Inf, 0.2596240268461406, 0.17247373891063034, 0.1529067586194724, 0.1498880909346044, 0.14919140916131438] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 88, 17]]
** centroid: 1, normalized-entropy: 0.6388469391771899, [(2, 88), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [5, 66, 0]]
** centroid: 2, normalized-entropy: 0.3674984948272913, [(1, 5), (2, 66)]
*** center 3: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [55, 1, 0]]
** centroid: 4, normalized-entropy: 0.12923377484588472, [(1, 55), (2, 1)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [53, 7, 0]]
** centroid: 5, normalized-entropy: 0.5197027865043053, [(1, 53), (2, 7)]
*** center 6: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [77, 21, 0]]
** centroid: 7, normalized-entropy: 0.7495952572594798, [(1, 77), (2, 21)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20364416326768697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20364416326768697, 0.15572401035577058] ***
*** starting iteration: 2; err: [Inf, 0.20364416326768697, 0.15572401035577058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20364416326768697, 0.15572401035577058, 0.15111023762263356] ***
*** starting iteration: 3; err: [Inf, 0.20364416326768697, 0.15572401035577058, 0.15111023762263356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20364416326768697, 0.15572401035577058, 0.15111023762263356, 0.1500626488085836] ***
*** starting iteration: 4; err: [Inf, 0.20364416326768697, 0.15572401035577058, 0.15111023762263356, 0.1500626488085836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20364416326768697, 0.15572401035577058, 0.15111023762263356, 0.1500626488085836, 0.1495442827511579] ***
*** finished computation of 7 references, err: [Inf, 0.20364416326768697, 0.15572401035577058, 0.15111023762263356, 0.1500626488085836, 0.1495442827511579] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 29, 0]]
** centroid: 1, normalized-entropy: 0.99919835426364, [(1, 31), (2, 29)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [40, 26, 0]]
** centroid: 2, normalized-entropy: 0.9672947789468944, [(1, 40), (2, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [23, 25, 0]]
** centroid: 3, normalized-entropy: 0.9987472979361685, [(1, 23), (2, 25)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [46, 19, 0]]
** centroid: 4, normalized-entropy: 0.871683617119982, [(1, 46), (2, 19)]
*** center 5: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 84, 16]]
** centroid: 6, normalized-entropy: 0.634309554640566, [(2, 84), (3, 16)]
*** center 7: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1982273503150791] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1982273503150791, 0.16419191835355013] ***
*** starting iteration: 2; err: [Inf, 0.1982273503150791, 0.16419191835355013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1982273503150791, 0.16419191835355013, 0.15373051267303525] ***
*** starting iteration: 3; err: [Inf, 0.1982273503150791, 0.16419191835355013, 0.15373051267303525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1982273503150791, 0.16419191835355013, 0.15373051267303525, 0.14739567441493273] ***
*** starting iteration: 4; err: [Inf, 0.1982273503150791, 0.16419191835355013, 0.15373051267303525, 0.14739567441493273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1982273503150791, 0.16419191835355013, 0.15373051267303525, 0.14739567441493273, 0.14605765990167857] ***
*** starting iteration: 5; err: [Inf, 0.1982273503150791, 0.16419191835355013, 0.15373051267303525, 0.14739567441493273, 0.14605765990167857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1982273503150791, 0.16419191835355013, 0.15373051267303525, 0.14739567441493273, 0.14605765990167857, 0.14553428125567736] ***
*** finished computation of 7 references, err: [Inf, 0.1982273503150791, 0.16419191835355013, 0.15373051267303525, 0.14739567441493273, 0.14605765990167857, 0.14553428125567736] ***
*** center 1: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [51, 24, 0]]
** centroid: 2, normalized-entropy: 0.9043814577244941, [(1, 51), (2, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [39, 32, 0]]
** centroid: 3, normalized-entropy: 0.9929768866085175, [(1, 39), (2, 32)]
*** center 4: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [61, 16, 0]]
** centroid: 5, normalized-entropy: 0.7372413771710565, [(1, 61), (2, 16)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 59, 9]]
** centroid: 6, normalized-entropy: 0.5638560041131417, [(2, 59), (3, 9)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 58, 10]]
** centroid: 7, normalized-entropy: 0.6024308020404452, [(2, 58), (3, 10)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19664673961792142] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19664673961792142, 0.1734043381428346] ***
*** starting iteration: 2; err: [Inf, 0.19664673961792142, 0.1734043381428346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068] ***
*** starting iteration: 3; err: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068, 0.1627232001107186] ***
*** starting iteration: 4; err: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068, 0.1627232001107186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068, 0.1627232001107186, 0.15832727636396884] ***
*** starting iteration: 5; err: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068, 0.1627232001107186, 0.15832727636396884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068, 0.1627232001107186, 0.15832727636396884, 0.15563302099145948] ***
*** starting iteration: 6; err: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068, 0.1627232001107186, 0.15832727636396884, 0.15563302099145948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068, 0.1627232001107186, 0.15832727636396884, 0.15563302099145948, 0.1536985132806003] ***
*** starting iteration: 7; err: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068, 0.1627232001107186, 0.15832727636396884, 0.15563302099145948, 0.1536985132806003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068, 0.1627232001107186, 0.15832727636396884, 0.15563302099145948, 0.1536985132806003, 0.15087244216911494] ***
*** starting iteration: 8; err: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068, 0.1627232001107186, 0.15832727636396884, 0.15563302099145948, 0.1536985132806003, 0.15087244216911494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068, 0.1627232001107186, 0.15832727636396884, 0.15563302099145948, 0.1536985132806003, 0.15087244216911494, 0.1490993177294731] ***
*** starting iteration: 9; err: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068, 0.1627232001107186, 0.15832727636396884, 0.15563302099145948, 0.1536985132806003, 0.15087244216911494, 0.1490993177294731] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068, 0.1627232001107186, 0.15832727636396884, 0.15563302099145948, 0.1536985132806003, 0.15087244216911494, 0.1490993177294731, 0.14813709343969822] ***
*** finished computation of 7 references, err: [Inf, 0.19664673961792142, 0.1734043381428346, 0.1663049051403068, 0.1627232001107186, 0.15832727636396884, 0.15563302099145948, 0.1536985132806003, 0.15087244216911494, 0.1490993177294731, 0.14813709343969822] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [61, 19, 0]]
** centroid: 1, normalized-entropy: 0.79085809055281, [(1, 61), (2, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [26, 56, 0]]
** centroid: 2, normalized-entropy: 0.9011701959974223, [(1, 26), (2, 56)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 82, 22]]
** centroid: 3, normalized-entropy: 0.7444131797881749, [(2, 82), (3, 22)]
*** center 4: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [32, 33, 0]]
** centroid: 5, normalized-entropy: 0.9998292601233937, [(1, 32), (2, 33)]
*** center 6: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2353460219549015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353460219549015, 0.17682345632929355] ***
*** starting iteration: 2; err: [Inf, 0.2353460219549015, 0.17682345632929355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353460219549015, 0.17682345632929355, 0.16500898709101602] ***
*** starting iteration: 3; err: [Inf, 0.2353460219549015, 0.17682345632929355, 0.16500898709101602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353460219549015, 0.17682345632929355, 0.16500898709101602, 0.1599117674268782] ***
*** starting iteration: 4; err: [Inf, 0.2353460219549015, 0.17682345632929355, 0.16500898709101602, 0.1599117674268782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353460219549015, 0.17682345632929355, 0.16500898709101602, 0.1599117674268782, 0.15692556970193983] ***
*** starting iteration: 5; err: [Inf, 0.2353460219549015, 0.17682345632929355, 0.16500898709101602, 0.1599117674268782, 0.15692556970193983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353460219549015, 0.17682345632929355, 0.16500898709101602, 0.1599117674268782, 0.15692556970193983, 0.15334599043428898] ***
*** starting iteration: 6; err: [Inf, 0.2353460219549015, 0.17682345632929355, 0.16500898709101602, 0.1599117674268782, 0.15692556970193983, 0.15334599043428898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353460219549015, 0.17682345632929355, 0.16500898709101602, 0.1599117674268782, 0.15692556970193983, 0.15334599043428898, 0.1516248344294727] ***
*** starting iteration: 7; err: [Inf, 0.2353460219549015, 0.17682345632929355, 0.16500898709101602, 0.1599117674268782, 0.15692556970193983, 0.15334599043428898, 0.1516248344294727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353460219549015, 0.17682345632929355, 0.16500898709101602, 0.1599117674268782, 0.15692556970193983, 0.15334599043428898, 0.1516248344294727, 0.1508088901862502] ***
*** finished computation of 7 references, err: [Inf, 0.2353460219549015, 0.17682345632929355, 0.16500898709101602, 0.1599117674268782, 0.15692556970193983, 0.15334599043428898, 0.1516248344294727, 0.1508088901862502] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [86, 1, 0]]
** centroid: 1, normalized-entropy: 0.09054385326964301, [(1, 86), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [64, 2, 0]]
** centroid: 2, normalized-entropy: 0.19590927087360496, [(1, 64), (2, 2)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 61, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [117, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [21, 42, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 21), (2, 42)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 56, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 35, 15]]
** centroid: 7, normalized-entropy: 0.8812908992306927, [(2, 35), (3, 15)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2555788083784282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2555788083784282, 0.18784540114551782] ***
*** starting iteration: 2; err: [Inf, 0.2555788083784282, 0.18784540114551782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2555788083784282, 0.18784540114551782, 0.17213337529730052] ***
*** starting iteration: 3; err: [Inf, 0.2555788083784282, 0.18784540114551782, 0.17213337529730052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2555788083784282, 0.18784540114551782, 0.17213337529730052, 0.16135358549840748] ***
*** starting iteration: 4; err: [Inf, 0.2555788083784282, 0.18784540114551782, 0.17213337529730052, 0.16135358549840748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2555788083784282, 0.18784540114551782, 0.17213337529730052, 0.16135358549840748, 0.15324139709863813] ***
*** starting iteration: 5; err: [Inf, 0.2555788083784282, 0.18784540114551782, 0.17213337529730052, 0.16135358549840748, 0.15324139709863813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2555788083784282, 0.18784540114551782, 0.17213337529730052, 0.16135358549840748, 0.15324139709863813, 0.14824639581888915] ***
*** starting iteration: 6; err: [Inf, 0.2555788083784282, 0.18784540114551782, 0.17213337529730052, 0.16135358549840748, 0.15324139709863813, 0.14824639581888915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2555788083784282, 0.18784540114551782, 0.17213337529730052, 0.16135358549840748, 0.15324139709863813, 0.14824639581888915, 0.1462778728911653] ***
*** starting iteration: 7; err: [Inf, 0.2555788083784282, 0.18784540114551782, 0.17213337529730052, 0.16135358549840748, 0.15324139709863813, 0.14824639581888915, 0.1462778728911653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2555788083784282, 0.18784540114551782, 0.17213337529730052, 0.16135358549840748, 0.15324139709863813, 0.14824639581888915, 0.1462778728911653, 0.14508706632722168] ***
*** starting iteration: 8; err: [Inf, 0.2555788083784282, 0.18784540114551782, 0.17213337529730052, 0.16135358549840748, 0.15324139709863813, 0.14824639581888915, 0.1462778728911653, 0.14508706632722168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2555788083784282, 0.18784540114551782, 0.17213337529730052, 0.16135358549840748, 0.15324139709863813, 0.14824639581888915, 0.1462778728911653, 0.14508706632722168, 0.14439724889956415] ***
*** finished computation of 7 references, err: [Inf, 0.2555788083784282, 0.18784540114551782, 0.17213337529730052, 0.16135358549840748, 0.15324139709863813, 0.14824639581888915, 0.1462778728911653, 0.14508706632722168, 0.14439724889956415] ***
*** center 1: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [6, 79, 0]]
** centroid: 2, normalized-entropy: 0.3681150054280774, [(1, 6), (2, 79)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 51, 12]]
** centroid: 3, normalized-entropy: 0.7024665512903904, [(2, 51), (3, 12)]
*** center 4: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [51, 38, 0]]
** centroid: 5, normalized-entropy: 0.9845543528607513, [(1, 51), (2, 38)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [49, 18, 0]]
** centroid: 6, normalized-entropy: 0.8395304981054318, [(1, 49), (2, 18)]
*** center 7: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2612508527059108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612508527059108, 0.1950835132934153] ***
*** starting iteration: 2; err: [Inf, 0.2612508527059108, 0.1950835132934153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612508527059108, 0.1950835132934153, 0.1650147657841444] ***
*** starting iteration: 3; err: [Inf, 0.2612508527059108, 0.1950835132934153, 0.1650147657841444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612508527059108, 0.1950835132934153, 0.1650147657841444, 0.14729009734932333] ***
*** starting iteration: 4; err: [Inf, 0.2612508527059108, 0.1950835132934153, 0.1650147657841444, 0.14729009734932333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612508527059108, 0.1950835132934153, 0.1650147657841444, 0.14729009734932333, 0.1423170130047947] ***
*** starting iteration: 5; err: [Inf, 0.2612508527059108, 0.1950835132934153, 0.1650147657841444, 0.14729009734932333, 0.1423170130047947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612508527059108, 0.1950835132934153, 0.1650147657841444, 0.14729009734932333, 0.1423170130047947, 0.1408252529175952] ***
*** starting iteration: 6; err: [Inf, 0.2612508527059108, 0.1950835132934153, 0.1650147657841444, 0.14729009734932333, 0.1423170130047947, 0.1408252529175952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612508527059108, 0.1950835132934153, 0.1650147657841444, 0.14729009734932333, 0.1423170130047947, 0.1408252529175952, 0.14038618460670113] ***
*** finished computation of 7 references, err: [Inf, 0.2612508527059108, 0.1950835132934153, 0.1650147657841444, 0.14729009734932333, 0.1423170130047947, 0.1408252529175952, 0.14038618460670113] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [87, 5, 0]]
** centroid: 1, normalized-entropy: 0.30458668852140236, [(1, 87), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [40, 12, 0]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(1, 40), (2, 12)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [1, 76, 0]]
** centroid: 3, normalized-entropy: 0.1000009430103234, [(1, 1), (2, 76)]
*** center 4: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [14, 54, 0]]
** centroid: 5, normalized-entropy: 0.7335379291086666, [(1, 14), (2, 54)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 40, 21]]
** centroid: 6, normalized-entropy: 0.9288391461883213, [(2, 40), (3, 21)]
*** center 7: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19568956260569392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19568956260569392, 0.14926202089642174] ***
*** starting iteration: 2; err: [Inf, 0.19568956260569392, 0.14926202089642174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19568956260569392, 0.14926202089642174, 0.14602847791835666] ***
*** starting iteration: 3; err: [Inf, 0.19568956260569392, 0.14926202089642174, 0.14602847791835666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19568956260569392, 0.14926202089642174, 0.14602847791835666, 0.14561962008848786] ***
*** finished computation of 7 references, err: [Inf, 0.19568956260569392, 0.14926202089642174, 0.14602847791835666, 0.14561962008848786] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [66, 25, 0]]
** centroid: 1, normalized-entropy: 0.8481636883083004, [(1, 66), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [59, 7, 0]]
** centroid: 2, normalized-entropy: 0.48791799258948565, [(1, 59), (2, 7)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [27, 29, 0]]
** centroid: 3, normalized-entropy: 0.9990797181805819, [(1, 27), (2, 29)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 67, 1]]
** centroid: 4, normalized-entropy: 0.11058084476988722, [(2, 67), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 39, 12]]
** centroid: 5, normalized-entropy: 0.787126586201269, [(2, 39), (3, 12)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [49, 15, 0]]
** centroid: 6, normalized-entropy: 0.7855602922535471, [(1, 49), (2, 15)]
*** center 7: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18961325525492428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18961325525492428, 0.15709667870867997] ***
*** starting iteration: 2; err: [Inf, 0.18961325525492428, 0.15709667870867997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18961325525492428, 0.15709667870867997, 0.1495655480399728] ***
*** starting iteration: 3; err: [Inf, 0.18961325525492428, 0.15709667870867997, 0.1495655480399728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18961325525492428, 0.15709667870867997, 0.1495655480399728, 0.14657248051092028] ***
*** starting iteration: 4; err: [Inf, 0.18961325525492428, 0.15709667870867997, 0.1495655480399728, 0.14657248051092028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18961325525492428, 0.15709667870867997, 0.1495655480399728, 0.14657248051092028, 0.1459585612937808] ***
*** finished computation of 7 references, err: [Inf, 0.18961325525492428, 0.15709667870867997, 0.1495655480399728, 0.14657248051092028, 0.1459585612937808] ***
*** center 1: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [55, 23, 0]]
** centroid: 2, normalized-entropy: 0.8749315876677922, [(1, 55), (2, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [7, 49, 0]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(1, 7), (2, 49)]
*** center 4: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [23, 43, 0]]
** centroid: 6, normalized-entropy: 0.9327076126690367, [(1, 23), (2, 43)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 69, 16]]
** centroid: 7, normalized-entropy: 0.6977652006354232, [(2, 69), (3, 16)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2113338205870241] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2113338205870241, 0.15754334878921508] ***
*** starting iteration: 2; err: [Inf, 0.2113338205870241, 0.15754334878921508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2113338205870241, 0.15754334878921508, 0.15083889030478895] ***
*** starting iteration: 3; err: [Inf, 0.2113338205870241, 0.15754334878921508, 0.15083889030478895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2113338205870241, 0.15754334878921508, 0.15083889030478895, 0.1489351727361791] ***
*** starting iteration: 4; err: [Inf, 0.2113338205870241, 0.15754334878921508, 0.15083889030478895, 0.1489351727361791] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2113338205870241, 0.15754334878921508, 0.15083889030478895, 0.1489351727361791, 0.14736002049408853] ***
*** starting iteration: 5; err: [Inf, 0.2113338205870241, 0.15754334878921508, 0.15083889030478895, 0.1489351727361791, 0.14736002049408853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2113338205870241, 0.15754334878921508, 0.15083889030478895, 0.1489351727361791, 0.14736002049408853, 0.14670236359536648] ***
*** finished computation of 7 references, err: [Inf, 0.2113338205870241, 0.15754334878921508, 0.15083889030478895, 0.1489351727361791, 0.14736002049408853, 0.14670236359536648] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [22, 35, 0]]
** centroid: 1, normalized-entropy: 0.9621461334087003, [(1, 22), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 67, 0]]
** centroid: 2, normalized-entropy: 0.11058084476988722, [(1, 1), (2, 67)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 54, 20]]
** centroid: 3, normalized-entropy: 0.8418521897563208, [(2, 54), (3, 20)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [52, 4, 0]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(1, 52), (2, 4)]
*** center 5: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [63, 20, 0]]
** centroid: 6, normalized-entropy: 0.7966394665488286, [(1, 63), (2, 20)]
*** center 7: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 370,3 => 35,1 => 595), Dict(2 => 394,3 => 31,1 => 575))
[ Info: ===== scores for single classifier: {"micro_f1":0.941,"precision":0.941,"recall":0.941,"macro_recall":0.9532803648936953,"macro_f1":0.8590046235243992,"accuracy":0.941,"class_f1":{"2":0.9216467463479416,"3":0.6813186813186815,"1":0.9740484429065743},"class_precision":{"2":0.9665738161559888,"3":0.5166666666666667,"1":0.9690189328743546},"class_recall":{"2":0.8807106598984772,"3":1.0,"1":0.9791304347826087}}
[ Info: ===== scores for 1: {"micro_f1":0.983,"precision":0.983,"recall":0.983,"macro_recall":0.9890796733612889,"macro_f1":0.9879236004429407,"accuracy":0.983,"class_f1":{"2":0.9786700125470514,"3":1.0,"1":0.9851007887817704},"class_precision":{"2":0.967741935483871,"3":1.0,"1":0.9929328621908127},"class_recall":{"2":0.9898477157360406,"3":1.0,"1":0.9773913043478261}}
[ Info: ===== scores for 5: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9841756786581328,"macro_f1":0.9724388871424714,"accuracy":0.975,"class_f1":{"2":0.9688667496886675,"3":0.96875,"1":0.9796999117387467},"class_precision":{"2":0.9511002444987775,"3":0.9393939393939394,"1":0.9946236559139785},"class_recall":{"2":0.9873096446700508,"3":1.0,"1":0.9652173913043478}}
[ Info: ===== scores for 7: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9841756786581328,"macro_f1":0.9724388871424714,"accuracy":0.975,"class_f1":{"2":0.9688667496886675,"3":0.96875,"1":0.9796999117387467},"class_precision":{"2":0.9511002444987775,"3":0.9393939393939394,"1":0.9946236559139785},"class_recall":{"2":0.9873096446700508,"3":1.0,"1":0.9652173913043478}}
[ Info: ===== scores for 9: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9839093651143971,"macro_f1":0.9632160299772385,"accuracy":0.975,"class_f1":{"2":0.968789013732834,"3":0.9393939393939393,"1":0.9814651368049425},"class_precision":{"2":0.9533169533169533,"3":0.8857142857142857,"1":0.996415770609319},"class_recall":{"2":0.9847715736040609,"3":1.0,"1":0.9669565217391304}}
[ Info: ===== scores for 11: {"micro_f1":0.977,"precision":0.977,"recall":0.977,"macro_recall":0.985335098947988,"macro_f1":0.9646367312997617,"accuracy":0.977,"class_f1":{"2":0.9712858926342072,"3":0.9393939393939393,"1":0.9832303618711387},"class_precision":{"2":0.9557739557739557,"3":0.8857142857142857,"1":0.9982078853046595},"class_recall":{"2":0.9873096446700508,"3":1.0,"1":0.9686956521739131}}
(score = 0.981, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.981, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.983, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.983, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.977, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.972, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.972, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.983,"k":1,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.983,"precision":0.983,"recall":0.983,"macro_recall":0.9890796733612889,"macro_f1":0.9879236004429407,"accuracy":0.983,"class_f1":{"2":0.9786700125470514,"3":1.0,"1":0.9851007887817704},"class_precision":{"2":0.967741935483871,"3":1.0,"1":0.9929328621908127},"class_recall":{"2":0.9898477157360406,"3":1.0,"1":0.9773913043478261}}
Test Summary: | Pass  Total
AKNC          |    8      8
[1620, 1, 3, 1, 1, 4, 3, 2, 1, 2, 9, 1, 5, 16, 1, 2, 1, 10, 7, 2, 12, 24, 5, 4, 11, 12, 9, 3, 3, 6, 5, 7, 2, 36, 4, 10, 11, 8, 3, 9, 1, 35, 9, 3, 5, 12, 33, 20, 3, 8, 3, 18, 6, 3, 5, 3, 29, 3, 12, 14, 15, 6, 8, 32, 49, 6, 12, 14, 13, 27, 2, 27, 6, 10, 6, 7, 14, 5, 94, 5, 58, 6, 24, 2, 6, 2, 73, 39, 42, 34, 6, 4, 18, 23, 12, 18, 55, 8, 12, 36, 70, 5, 48, 28, 11, 161, 138, 13, 32, 14, 5, 5, 27, 21, 28, 1, 6, 15, 9, 10, 7, 41, 4, 119, 10, 17, 2, 51, 2, 11, 10, 24, 5, 81, 92, 4, 14, 13, 41, 83, 6, 12, 75, 4, 11, 35, 9, 156, 8, 9, 148, 106, 4, 8, 22, 111, 2, 17, 34, 22, 6, 70, 13, 85, 45, 14, 5, 65, 67, 19, 7, 39, 76, 10, 27, 13, 29, 2, 56, 2, 8, 3, 15, 6, 7, 21, 20, 6, 29, 8, 11, 176, 9, 32, 7, 16, 3, 15, 5, 17, 335, 36, 199, 15, 21, 11, 60, 58, 22, 16, 7, 22, 21, 12, 23, 26, 39, 6, 43, 4, 48, 19, 11, 19, 177, 27, 69, 6, 9, 179, 11, 3, 13, 44, 27, 22, 58, 2, 59, 193, 7, 2, 49, 72, 22, 138, 15, 5, 37, 21, 49, 7, 2, 11, 8, 80, 3, 38, 21, 6, 42, 99, 184, 17, 133, 26, 23, 10, 3, 24, 17, 17, 26, 17, 13, 17, 23, 20, 9, 11, 28, 23, 85, 6, 52, 31, 17, 20, 103, 67, 47, 12, 2, 3, 3, 60, 10, 37, 3, 17]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.698, speedup = 0.3147139233510003, eval_ratio = 0.099952)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.4184678819444444,"recall":0.40798611111111116,"f1":null,"seconds":0.00021878071129322052,"exhaustive_search_seconds":0.0003905780613422394,"evaluations":590.1640625,"distances_sum":1687.2077351258774}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5781250000000002,"recall":0.5781250000000002,"f1":null,"seconds":0.00035440921783447266,"exhaustive_search_seconds":0.0003905780613422394,"evaluations":797.953125,"distances_sum":1613.2805641587363}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6779513888888886,"recall":0.6779513888888886,"f1":0.6779513888888886,"seconds":0.00047253072261810303,"exhaustive_search_seconds":0.0003905780613422394,"evaluations":943.8515625,"distances_sum":1561.7742052831923}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7578124999999996,"recall":0.7578124999999996,"f1":0.7578124999999996,"seconds":0.0007324609905481339,"exhaustive_search_seconds":0.0003905780613422394,"evaluations":1141.359375,"distances_sum":1532.47060831943}
KCenters.DeloneInvIndex> reached performance {"precision":0.8072916666666663,"recall":0.8072916666666663,"f1":0.8072916666666663,"seconds":0.0006636306643486023,"exhaustive_search_seconds":0.0003905780613422394,"evaluations":1284.34375,"distances_sum":1518.9815923953777}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8200000000000003, speedup = 0.6577090072777402, eval_ratio = 0.12854200000000002)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
