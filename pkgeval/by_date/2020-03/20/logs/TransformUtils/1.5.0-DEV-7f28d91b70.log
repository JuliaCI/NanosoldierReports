Julia Version 1.5.0-DEV.483
Commit 7f28d91b70 (2020-03-18 17:21 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_WXjBR5/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_WXjBR5/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.11468095817434112 0.10448175077741609; 0.11468095817434112 0.0 0.24897266655999647; -0.10448175077741609 -0.24897266655999647 0.0])
dAA = so3([0.0 -0.1348901986666486 -0.03728683329258648; 0.1348901986666486 0.0 0.05924307660405559; 0.03728683329258648 -0.05924307660405559 0.0])
dAA = so3([0.0 -0.021078530576344005 0.01831370578768988; 0.021078530576344005 0.0 0.17119415986089792; -0.01831370578768988 -0.17119415986089792 0.0])
dAA = Quaternion(0.9993159512705048, [-0.029235507293619158, 0.007722342186303938, 0.021290375308307925])
dAA = SO3([0.9990198250680624 0.03230228394160167 -0.030264691855931; -0.038681904637575495 0.9694743736129372 -0.24212217816923193; 0.02151974383183566 0.243055552003981 0.9697736330017706])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9395274659013896 -0.32235052510639156 -0.11566451392085209; 0.3359914166391055 0.9329835216575058 0.1290407542616109; 0.0663167306323251 -0.16009961673655584 0.9848706534154866]), [-2.4897266655999646, 1.0448175077741608, 1.1468095817434112])
xj = SE3(SO3([0.9936050819011147 -0.10772321853333135 0.033832667779812274; 0.10167902524318019 0.9839374907812954 0.14672556035198805; -0.04909497984392837 -0.1423471897292964 0.9885984829698536]), [-1.7119415986089792, 0.18313705787689882, 0.21078530576344004])
Dx = SE3(SO3([0.9644267258855271 0.21994562864702571 0.14664586880231864; -0.21756417739241696 0.9755118318195388 -0.03228768644001792; -0.15015631559572543 -0.0007657800942077464 0.9886619717919589]), [0.379159128179299, -0.9047959576125199, -1.1230168671927885])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
