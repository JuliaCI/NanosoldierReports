Julia Version 1.5.0-DEV.492
Commit 60f52677d9 (2020-03-22 11:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_ZNdrJj/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_ZNdrJj/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.07422955919766033 0.08801750377930712; -0.07422955919766033 0.0 -0.045299852172888615; -0.08801750377930712 0.045299852172888615 0.0])
dAA = so3([0.0 -0.12234204320434004 -0.18456659017175298; 0.12234204320434004 0.0 -0.1511873172271142; 0.18456659017175298 0.1511873172271142 0.0])
dAA = so3([0.0 0.006246252351188442 -0.010664130326839466; -0.006246252351188442 0.0 0.09864685037880588; 0.010664130326839466 -0.09864685037880588 0.0])
dAA = Quaternion(0.9998818846980172, [0.002569384275540768, -0.008580313841670167, -0.01248972103629291])
dAA = SO3([0.9872882806947781 0.1546699406970358 -0.0365931721435105; -0.15250501798179636 0.9867154944504793 0.05598886051455384; 0.044766843680576124 -0.049696503459716566 0.9977605861381565])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8524257104428045 -0.36744399245077 -0.3719614504057088; 0.19947621349129324 0.886156420443053 -0.4182535579749813; 0.4833007846333958 0.2823326246103938 0.8286788525438249]), [0.4529985217288861, 0.880175037793071, -0.7422955919766033])
xj = SE3(SO3([0.9971308190977043 0.06221956792330437 -0.0431144404228851; -0.06279126094428283 0.9979541309094987 -0.01203370889186581; 0.042277501754102935 0.014706392083189614 0.9989976651010388]), [-0.9864685037880588, -0.10664130326839465, -0.062462523511884416])
Dx = SE3(SO3([0.8578873336703644 0.25921328149522016 0.44366405919843477; -0.41009629016625176 0.8656333482422149 0.2872280264926278; -0.3095970857741232 -0.4283542705605397 0.8489182901626741]), [-1.0953212336028182, -0.15361107105597716, 1.5115289754359758])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
