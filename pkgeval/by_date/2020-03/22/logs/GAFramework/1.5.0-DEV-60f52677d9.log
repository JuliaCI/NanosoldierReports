Julia Version 1.5.0-DEV.492
Commit 60f52677d9 (2020-03-22 11:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.3
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_Pk221V/Project.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_Pk221V/Manifest.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21701721958326695
curgen: 20 fitness: 0.21709677014551557
curgen: 30 fitness: 0.21721814130148417
curgen: 40 fitness: 0.2172292111274346
curgen: 50 fitness: 0.2172292111274346
CoordinateCreature{Array{Float64,1}}([-0.22286429810663327], -0.2172292111274346) -0.22286429810663327 -0.2172292111274346
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257441565860769
curgen: 100 fitness: 3.257616418661783
curgen: 150 fitness: 3.2580385641731078
curgen: 200 fitness: 3.2581816833510806
curgen: 250 fitness: 3.2581830612305156
curgen: 300 fitness: 3.258293965024311
curgen: 350 fitness: 3.2583550753306043
curgen: 400 fitness: 3.258425553929764
curgen: 450 fitness: 3.258433709837789
curgen: 500 fitness: 3.2584510390854993
CoordinateCreature{Array{Float64,1}}([0.22266985736641606, 0.22313314291983852, -0.222514902321357, 0.2221991104391284, 0.22276119748646792, -0.22282028468819592, 0.22245603810549394, -0.22267271024549334, -0.22254521723625348, -0.22320094048222627, 0.22291109020320718, 0.22265115198037408, -0.22266705016830038, 0.22256590253725136, -0.22249891769267824], -3.2584510390854993) [0.22266985736641606, 0.22313314291983852, -0.222514902321357, 0.2221991104391284, 0.22276119748646792, -0.22282028468819592, 0.22245603810549394, -0.22267271024549334, -0.22254521723625348, -0.22320094048222627, 0.22291109020320718, 0.22265115198037408, -0.22266705016830038, 0.22256590253725136, -0.22249891769267824] -3.2584510390854993
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0020640877394839663
curgen: 100 fitness: -0.0018865776709731108
curgen: 150 fitness: -0.0009876000946462682
curgen: 200 fitness: -0.0008196149897798932
curgen: 250 fitness: -0.0008196149897798932
curgen: 300 fitness: -0.0008159565990411011
curgen: 350 fitness: -0.0008159565990411011
curgen: 400 fitness: -0.0008159565990411011
curgen: 450 fitness: -0.0008159565990411011
curgen: 500 fitness: -0.0007783808078443144
CoordinateCreature{Array{Float64,1}}([0.0005029708800592167, 1.0048284855425187e-6, -0.000827612919849403, -0.0003536042982215759, 0.00016700109034251164, 0.0004554469363955427, -0.0002759076381164233, -0.00022042190765462696, 0.00011860022463861149, 0.00041087383106143887, 0.0014267722509472371, 0.00027965012172459253, -0.00019132829764775643, 0.0002756406224194873, -0.0003018604083201235], 0.0007783808078443144) [0.0005029708800592167, 1.0048284855425187e-6, -0.000827612919849403, -0.0003536042982215759, 0.00016700109034251164, 0.0004554469363955427, -0.0002759076381164233, -0.00022042190765462696, 0.00011860022463861149, 0.00041087383106143887, 0.0014267722509472371, 0.00027965012172459253, -0.00019132829764775643, 0.0002756406224194873, -0.0003018604083201235] 0.0007783808078443144
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
