Julia Version 1.5.0-DEV.491
Commit a66db76b65 (2020-03-21 17:57 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.3
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_FaQjnT/Project.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_FaQjnT/Manifest.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21715846452184132
curgen: 20 fitness: 0.21715846452184132
curgen: 30 fitness: 0.2172184355089566
curgen: 40 fitness: 0.2172324230611055
curgen: 50 fitness: 0.2172324230611055
CoordinateCreature{Array{Float64,1}}([-0.22238326414774523], -0.2172324230611055) -0.22238326414774523 -0.2172324230611055
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2577414364869366
curgen: 100 fitness: 3.258005135321022
curgen: 150 fitness: 3.258082328109978
curgen: 200 fitness: 3.258391743677931
curgen: 250 fitness: 3.258396259120936
curgen: 300 fitness: 3.2584055752964987
curgen: 350 fitness: 3.2584055752964987
curgen: 400 fitness: 3.25843433842666
curgen: 450 fitness: 3.258475824608518
curgen: 500 fitness: 3.2584789784256576
CoordinateCreature{Array{Float64,1}}([-0.22280179964014654, -0.22249002580879834, 0.222566429475327, -0.22252677880484192, 0.22255120472064577, -0.22252132924153142, -0.2227764081735404, 0.22311775428015823, -0.22261206889652452, 0.22242072756653478, 0.22254675228938217, -0.22266865470952568, -0.2223663597896268, 0.22272985136966106, 0.22271923686075545], -3.2584789784256576) [-0.22280179964014654, -0.22249002580879834, 0.222566429475327, -0.22252677880484192, 0.22255120472064577, -0.22252132924153142, -0.2227764081735404, 0.22311775428015823, -0.22261206889652452, 0.22242072756653478, 0.22254675228938217, -0.22266865470952568, -0.2223663597896268, 0.22272985136966106, 0.22271923686075545] -3.2584789784256576
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002792517232364844
curgen: 100 fitness: -0.002792517232364844
curgen: 150 fitness: -0.0026719468314695405
curgen: 200 fitness: -0.002660056047773196
curgen: 250 fitness: -0.002660056047773196
curgen: 300 fitness: -0.0025778398979809936
curgen: 350 fitness: -0.002569009740909678
curgen: 400 fitness: -0.0006932625541367088
curgen: 450 fitness: -0.0006932625541367088
curgen: 500 fitness: -0.0005671657623906867
CoordinateCreature{Array{Float64,1}}([-0.00010181510679416628, -0.000428499047882544, -9.292767945589984e-5, 8.465459332409123e-5, -0.0007229845732688661, 0.00011204301763335011, -0.0003805033045214089, 0.00010084725302401606, 0.00039908772494977107, 0.0006726305679285883, 0.00023769336014347134, -0.0009894019633133028, 0.0005101777800337278, 0.0001808348188850643, -0.00013683847539996643], 0.0005671657623906867) [-0.00010181510679416628, -0.000428499047882544, -9.292767945589984e-5, 8.465459332409123e-5, -0.0007229845732688661, 0.00011204301763335011, -0.0003805033045214089, 0.00010084725302401606, 0.00039908772494977107, 0.0006726305679285883, 0.00023769336014347134, -0.0009894019633133028, 0.0005101777800337278, 0.0001808348188850643, -0.00013683847539996643] 0.0005671657623906867
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
