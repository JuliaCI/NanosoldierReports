Julia Version 1.5.0-DEV.418
Commit 4d745aa2f6 (2020-03-07 14:17 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Mods ───────────── v0.1.0
  Installed Multiplexers ───── v0.3.1
  Installed ECC ────────────── v0.2.3
  Installed Primes ─────────── v0.4.0
  Installed RecipesBase ────── v0.8.0
  Installed SynchronicBallot ─ v0.2.1
  Installed PeaceVote ──────── v0.2.1
  Installed PeaceFounder ───── v0.2.0
  Installed Synchronizers ──── v0.1.0
  Installed DiffieHellman ──── v0.3.0
  Installed BitConverter ───── v0.1.1
  Installed Paillier ───────── v0.2.4
  Installed CryptoGroups ───── v0.1.2
  Installed Polynomials ────── v0.6.1
   Updating `~/.julia/environments/v1.5/Project.toml`
   916f7771 + PeaceFounder v0.2.0
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   3a3ce9e8 + BitConverter v0.1.1
   bc997328 + CryptoGroups v0.1.2
   0e61fee8 + DiffieHellman v0.3.0
   a99b485a + ECC v0.2.3
   7475f97c + Mods v0.1.0
   d8f48be2 + Multiplexers v0.3.1
   84e01822 + Paillier v0.2.4
   916f7771 + PeaceFounder v0.2.0
   129db535 + PeaceVote v0.2.1
   f27b6e38 + Polynomials v0.6.1
   27ebfcd6 + Primes v0.4.0
   3cdcf5f2 + RecipesBase v0.8.0
   c4fd2470 + SynchronicBallot v0.2.1
   9279c0cf + Synchronizers v0.1.0
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
ERROR:     Expected value for target `test` to be a list of dependency names.

Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] read_project_targets(::Dict{String,Any}, ::Pkg.Types.Project) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:52
 [3] Pkg.Types.Project(::Dict{String,Any}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:122
 [4] read_project(::IOStream; path::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:140
 [5] #30 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:144 [inlined]
 [6] open(::Pkg.Types.var"#30#31"{String}, ::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./io.jl:298
 [7] open at ./io.jl:296 [inlined]
 [8] read_project(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:143
 [9] Pkg.Types.EnvCache(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:272
 [10] gen_target_project(::Pkg.Types.Context, ::Pkg.Types.PackageSpec, ::String, ::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1447
 [11] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1503
 [12] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [13] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [14] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [15] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [16] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [17] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [18] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [19] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [20] top-level scope at none:13
