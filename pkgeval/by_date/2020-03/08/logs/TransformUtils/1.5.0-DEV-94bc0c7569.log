Julia Version 1.5.0-DEV.421
Commit 94bc0c7569 (2020-03-08 11:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_NVl3mu/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_NVl3mu/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.22133556406486946 -0.02473202630505627; -0.22133556406486946 0.0 0.105510516520573; 0.02473202630505627 -0.105510516520573 0.0])
dAA = so3([0.0 -0.20088938243537907 -0.1267562133310531; 0.20088938243537907 0.0 -0.06776147117256241; 0.1267562133310531 0.06776147117256241 0.0])
dAA = so3([0.0 -0.04315471388942521 0.18207731204450503; 0.04315471388942521 0.0 0.19026217291178416; -0.18207731204450503 -0.19026217291178416 0.0])
dAA = Quaternion(0.993694276776463, [-0.08177997452990375, 0.06153432556397302, -0.045795707713468])
dAA = SO3([0.9997698930513614 -0.013102852952394484 -0.016984586912190184; 0.012770164743699224 0.9997273171309833 -0.019550301135929395; 0.017236120227261013 0.019328906502817694 0.9996645985193819])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8292086162406606 -0.49690546868090574 -0.25592582118117396; 0.44490747151682003 0.8639443866575655 -0.23591828786974747; 0.3383347640145168 0.08176216703275718 0.9374670850229083]), [-1.05510516520573, -0.24732026305056268, -2.2133556406486945])
xj = SE3(SO3([0.928164616403308 0.1815899892378282 0.32486231031854945; -0.3005987742680856 0.8804392934218023 0.3666974604594939; -0.21943295505785948 -0.4380088200111078 0.8717783272294927]), [-1.9026217291178416, 1.8207731204450501, 0.4315471388942521])
Dx = SE3(SO3([0.5616616595441527 0.39409639280467057 0.7274779813688217; -0.7388520113159083 0.6346049763309665 0.2266588392064391; -0.3723357162193086 -0.6648041495014303 0.6476121966371031]), [1.112204718667099, 2.424106268006659, 2.2085096213019293])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
