Julia Version 1.5.0-DEV.418
Commit 4d745aa2f6 (2020-03-07 14:17 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_8BrRLm/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_8BrRLm/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.02058983377638519 -0.019876671631620414; -0.02058983377638519 0.0 0.061380878552424925; 0.019876671631620414 -0.061380878552424925 0.0])
dAA = so3([0.0 -0.008123928381770177 0.22454893561306155; 0.008123928381770177 0.0 0.06885370663518141; -0.22454893561306155 -0.06885370663518141 0.0])
dAA = so3([0.0 -0.010254834133518742 0.02043218417317067; 0.010254834133518742 0.0 -0.0753620262870786; -0.02043218417317067 0.0753620262870786 0.0])
dAA = Quaternion(0.9997507364278103, [0.02195233393259217, 0.004028701592584228, 0.0005741170968287886])
dAA = SO3([0.9959288752970253 0.07456356485784377 0.050655208471514925; -0.07162795136010652 0.9957733518065711 -0.057487984969568445; -0.05472761582196619 0.053625615405300864 0.9970602697123411])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.846710844097333 -0.06610318578930104 0.5279309759016675; -0.02778040055117805 0.9854058026390744 0.1679394339351475; -0.5313275786491776 -0.15686227383837967 0.8325174059520049]), [-0.6138087855242492, -0.19876671631620413, -0.20589833776385189])
xj = SE3(SO3([0.999793213115255 -0.00220443985602975 0.020215623997177502; 0.004406154230409076 0.9939744388859234 -0.10952351640771794; -0.019852375514581615 0.1095899415381492 0.9937786111101874]), [0.7536202628707859, 0.2043218417317067, 0.10254834133518742])
Dx = SE3(SO3([0.8569614652827882 -0.08770768946291391 -0.5078625879403341; -0.05863357780716149 0.9624233728309821 -0.265147798373224; 0.5120343255817016 0.2569992463757693 0.8196171281692315]), [0.9827328150615329, 0.25843074019671225, 1.0463898454178229])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
