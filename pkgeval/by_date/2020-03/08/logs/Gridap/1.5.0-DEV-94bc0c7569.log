Julia Version 1.5.0-DEV.421
Commit 94bc0c7569 (2020-03-08 11:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed NaNMath ────────────────────── v0.3.3
  Installed BSON ───────────────────────── v0.2.5
  Installed LightXML ───────────────────── v0.8.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed FileIO ─────────────────────── v1.2.2
  Installed DiffRules ──────────────────── v1.0.1
  Installed StaticArrays ───────────────── v0.12.1
  Installed Gridap ─────────────────────── v0.7.1
  Installed Requires ───────────────────── v1.0.1
  Installed DiffResults ────────────────── v1.0.2
  Installed FiniteDiff ─────────────────── v2.2.1
  Installed Combinatorics ──────────────── v1.0.0
  Installed Reexport ───────────────────── v0.2.0
  Installed WriteVTK ───────────────────── v1.4.0
  Installed DocStringExtensions ────────── v0.8.1
  Installed JLD2 ───────────────────────── v0.1.12
  Installed BinaryProvider ─────────────── v0.5.8
  Installed Polynomials ────────────────── v0.6.1
  Installed Parsers ────────────────────── v0.3.12
  Installed CodecZlib ──────────────────── v0.6.0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FillArrays ─────────────────── v0.8.5
  Installed CommonSubexpressions ───────── v0.2.0
  Installed JSON ───────────────────────── v0.21.0
  Installed Parameters ─────────────────── v0.12.0
  Installed TranscodingStreams ─────────── v0.9.5
  Installed DataStructures ─────────────── v0.17.10
  Installed QuadGK ─────────────────────── v2.3.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+2
  Installed Distances ──────────────────── v0.8.2
  Installed SpecialFunctions ───────────── v0.10.0
  Installed NLsolve ────────────────────── v4.3.0
  Installed ArrayInterface ─────────────── v2.5.0
  Installed ForwardDiff ────────────────── v0.10.9
  Installed RecipesBase ────────────────── v0.8.0
  Installed LineSearches ───────────────── v7.0.1
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed NLSolversBase ──────────────── v7.6.1
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ##                                                                         2.8%#####                                                                      8.3%###########                                                               15.7%##################                                                        25.4%###########################                                               38.3%#####################################                                     52.5%###################################################                       70.9%##################################################################        91.8%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   56d4f2e9 + Gridap v0.7.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   4fba245c + ArrayInterface v2.5.0
   fbb218c0 + BSON v0.2.5
   b99e7846 + BinaryProvider v0.5.8
   944b1d66 + CodecZlib v0.6.0
   861a8166 + Combinatorics v1.0.0
   bbf7d656 + CommonSubexpressions v0.2.0
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   864edb3b + DataStructures v0.17.10
   163ba53b + DiffResults v1.0.2
   b552c78f + DiffRules v1.0.1
   b4f34e82 + Distances v0.8.2
   ffbed154 + DocStringExtensions v0.8.1
   442a2c76 + FastGaussQuadrature v0.4.2
   5789e2e9 + FileIO v1.2.2
   1a297f60 + FillArrays v0.8.5
   6a86dc24 + FiniteDiff v2.2.1
   f6369f11 + ForwardDiff v0.10.9
   56d4f2e9 + Gridap v0.7.1
   033835bb + JLD2 v0.1.12
   682c06a0 + JSON v0.21.0
   9c8b4983 + LightXML v0.8.1
   d3d80556 + LineSearches v7.0.1
   d41bc354 + NLSolversBase v7.6.1
   2774e3e8 + NLsolve v4.3.0
   77ba4419 + NaNMath v0.3.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+2
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   69de0a69 + Parsers v0.3.12
   f27b6e38 + Polynomials v0.6.1
   1fd47b50 + QuadGK v2.3.1
   3cdcf5f2 + RecipesBase v0.8.0
   189a3867 + Reexport v0.2.0
   ae029012 + Requires v1.0.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   3bb67fe8 + TranscodingStreams v0.9.5
   64499a7a + WriteVTK v1.4.0
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   a63ad114 + Mmap
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
   Building LightXML ─→ `~/.julia/packages/LightXML/W8FVT/deps/build.log`
   Building CodecZlib → `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
    Testing Gridap
     Status `/tmp/jl_L0fsgK/Project.toml`
   fbb218c0 BSON v0.2.5
   861a8166 Combinatorics v1.0.0
   ffbed154 DocStringExtensions v0.8.1
   442a2c76 FastGaussQuadrature v0.4.2
   5789e2e9 FileIO v1.2.2
   1a297f60 FillArrays v0.8.5
   56d4f2e9 Gridap v0.7.1
   033835bb JLD2 v0.1.12
   682c06a0 JSON v0.21.0
   d3d80556 LineSearches v7.0.1
   2774e3e8 NLsolve v4.3.0
   1fd47b50 QuadGK v2.3.1
   90137ffa StaticArrays v0.12.1
   64499a7a WriteVTK v1.4.0
   37e2e46d LinearAlgebra
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_L0fsgK/Manifest.toml`
   4fba245c ArrayInterface v2.5.0
   fbb218c0 BSON v0.2.5
   b99e7846 BinaryProvider v0.5.8
   944b1d66 CodecZlib v0.6.0
   861a8166 Combinatorics v1.0.0
   bbf7d656 CommonSubexpressions v0.2.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   864edb3b DataStructures v0.17.10
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   ffbed154 DocStringExtensions v0.8.1
   442a2c76 FastGaussQuadrature v0.4.2
   5789e2e9 FileIO v1.2.2
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   f6369f11 ForwardDiff v0.10.9
   56d4f2e9 Gridap v0.7.1
   033835bb JLD2 v0.1.12
   682c06a0 JSON v0.21.0
   9c8b4983 LightXML v0.8.1
   d3d80556 LineSearches v7.0.1
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   77ba4419 NaNMath v0.3.3
   efe28fd5 OpenSpecFun_jll v0.5.3+2
   bac558e1 OrderedCollections v1.1.0
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   1fd47b50 QuadGK v2.3.1
   3cdcf5f2 RecipesBase v0.8.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   3bb67fe8 TranscodingStreams v0.9.5
   64499a7a WriteVTK v1.4.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Test Summary: | Pass  Total
Helpers       |   13     13
204.425299 seconds (13.46 M allocations: 705.885 MiB, 0.31% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  2.185554 seconds (2.16 M allocations: 122.239 MiB, 1.73% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 28.276544 seconds (28.90 M allocations: 1.381 GiB, 3.89% gc time)
Test Summary: | Pass  Total
Algebra       |  675    675
 75.968418 seconds (79.72 M allocations: 3.710 GiB, 4.13% gc time)
Test Summary: | Pass  Total
TensorValues  |  227    227
 15.420881 seconds (13.16 M allocations: 671.404 MiB, 1.96% gc time)
Test Summary: | Pass  Total
Arrays        |  278    278
 26.413836 seconds (24.01 M allocations: 1.165 GiB, 3.15% gc time)
Test Summary: | Pass  Total
Fields        |  580    580
 63.343413 seconds (50.43 M allocations: 2.448 GiB, 3.02% gc time)
Test Summary: | Pass  Total
Polynomials   |  256    256
 24.159681 seconds (21.20 M allocations: 1.054 GiB, 2.79% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 17.233587 seconds (29.86 M allocations: 1.332 GiB, 9.96% gc time)
Test Summary: | Pass  Total
ReferenceFEs  |  893    893
 78.808818 seconds (71.92 M allocations: 3.546 GiB, 2.97% gc time)
Test Summary: | Pass  Total
Geometry      | 1600   1600
132.069247 seconds (118.20 M allocations: 5.963 GiB, 2.89% gc time)
Test Summary: | Pass  Total
FESpaces      |  493    493
232.322365 seconds (180.98 M allocations: 9.072 GiB, 2.92% gc time)
Test Summary: | Pass  Total
MultiField    |  110    110
 79.239986 seconds (53.69 M allocations: 2.696 GiB, 3.25% gc time)
Test Summary: |
Visualization | No tests
 30.729458 seconds (21.14 M allocations: 1.070 GiB, 4.39% gc time)
Test Summary: | Pass  Total
Gridap        |   17     17
536.696707 seconds (313.83 M allocations: 15.767 GiB, 2.91% gc time)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000000 seconds
  0.000068 seconds (1000 allocations: 31.250 KiB)
  0.000045 seconds
  0.000000 seconds
  0.000053 seconds
  0.000054 seconds
  0.000030 seconds
+++ runing suite for n = 100000 +++
  0.000000 seconds
  0.005330 seconds (100.00 k allocations: 3.052 MiB)
  0.002729 seconds
  0.000000 seconds
  0.002712 seconds
  0.003265 seconds
  0.002455 seconds
WARNING: replacing module ArraysBenchs.
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000004 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000058 seconds
  0.000007 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 1000 +++
  0.000003 seconds
  0.000005 seconds
  0.000088 seconds (1000 allocations: 31.250 KiB)
  0.000333 seconds (1000 allocations: 31.250 KiB)
  0.000005 seconds
  0.000109 seconds
  0.000170 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 100000 +++
  0.000345 seconds
  0.000456 seconds
  0.008264 seconds (100.00 k allocations: 3.052 MiB)
  0.028462 seconds (100.00 k allocations: 3.052 MiB)
  0.000426 seconds
  0.010560 seconds
  0.019675 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000003 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
+++ runing suite for n = 1000 +++
  0.000025 seconds
  0.000027 seconds
  0.000081 seconds
  0.000102 seconds
+++ runing suite for n = 100000 +++
  0.002458 seconds
  0.002584 seconds
  0.008169 seconds
  0.008468 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000017 seconds
  0.000000 seconds
  0.000119 seconds
  0.000000 seconds
+++ runing suite for n = 100000 +++
  0.001744 seconds
  0.000000 seconds
  0.009930 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000003 seconds
  0.000003 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
+++ runing suite for n = 1000 +++
  0.000124 seconds
  0.000244 seconds
  0.000130 seconds
+++ runing suite for n = 100000 +++
  0.012306 seconds
  0.012962 seconds
  0.013036 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000006 seconds
  0.000006 seconds
+++ runing suite for n = 1000 +++
  0.000034 seconds
  0.000006 seconds
  0.000126 seconds
  0.000142 seconds
  0.000030 seconds
  0.000002 seconds
  0.000150 seconds
  0.000138 seconds
  0.000028 seconds
  0.000009 seconds
  0.000148 seconds
  0.000152 seconds
  0.000106 seconds
  0.000002 seconds
  0.000667 seconds
  0.000670 seconds
+++ runing suite for n = 100000 +++
  0.003415 seconds
  0.000546 seconds
  0.013132 seconds
  0.013736 seconds
  0.002717 seconds
  0.000155 seconds
  0.014037 seconds
  0.012090 seconds
  0.003593 seconds
  0.001174 seconds
  0.017738 seconds
  0.015175 seconds
  0.008991 seconds
  0.000185 seconds
  0.080725 seconds
  0.058885 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000003 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1000 +++
  0.000073 seconds
  0.000008 seconds
  0.000192 seconds
  0.000198 seconds (1 allocation: 112 bytes)
  0.000006 seconds
  0.000214 seconds
  0.000199 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 100000 +++
  0.007196 seconds
  0.000711 seconds
  0.019651 seconds
  0.020240 seconds (1 allocation: 112 bytes)
  0.000565 seconds
  0.020689 seconds
  0.020010 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000002 seconds
  0.000002 seconds
  0.000005 seconds
  0.000002 seconds
  0.000002 seconds
  0.000004 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000003 seconds
  0.000002 seconds
  0.000002 seconds
  0.000003 seconds
+++ runing suite for n = 1000 +++
  0.000129 seconds
  0.000127 seconds
  0.000392 seconds
  0.000093 seconds
  0.000118 seconds
  0.000327 seconds
  0.000108 seconds
  0.000116 seconds
  0.000116 seconds
  0.000115 seconds
  0.000211 seconds
  0.000105 seconds
  0.000262 seconds
+++ runing suite for n = 100000 +++
  0.011075 seconds
  0.011239 seconds
  0.037537 seconds
  0.010071 seconds
  0.010839 seconds
  0.034378 seconds
  0.011692 seconds
  0.012506 seconds
  0.011207 seconds
  0.011315 seconds
  0.012607 seconds
  0.010671 seconds
  0.024582 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000003 seconds
  0.000002 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000003 seconds
  0.000016 seconds
+++ runing suite for n = 1000 +++
  0.000089 seconds
  0.000291 seconds
  0.000894 seconds
+++ runing suite for n = 100000 +++
  0.035970 seconds
  0.035884 seconds
  0.114490 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000006 seconds
+++ runing suite for n = 1000 +++
  0.000093 seconds
  0.000577 seconds
+++ runing suite for n = 100000 +++
  0.008655 seconds
  0.058563 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000003 seconds
  0.105284 seconds (74.39 k allocations: 3.606 MiB)
  0.000000 seconds
  0.000003 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000008 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000019 seconds
  0.000049 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
+++ runing suite for n = 1000 +++
  0.000024 seconds
  0.000138 seconds
  0.001830 seconds
  0.004622 seconds
  0.000032 seconds
  0.000191 seconds
  0.000002 seconds
+++ runing suite for n = 100000 +++
  0.002329 seconds
  0.012133 seconds
  0.182813 seconds
  0.573091 seconds
  0.005307 seconds
  0.026766 seconds
  0.000139 seconds
+++ runing suite for n = 1 +++
  0.000006 seconds
  0.000007 seconds
  0.000008 seconds
  0.000009 seconds (30 allocations: 1.406 KiB)
+++ runing suite for n = 1 +++
  0.000002 seconds
  0.000003 seconds
  0.000002 seconds
  0.000368 seconds (30 allocations: 1.406 KiB)
+++ runing suite for n = 10 +++
  0.000008 seconds
  0.000016 seconds
  0.000013 seconds
  0.000037 seconds (300 allocations: 14.062 KiB)
+++ runing suite for n = 1000 +++
  0.000745 seconds
  0.001919 seconds
  0.001228 seconds
  0.003625 seconds (30.00 k allocations: 1.373 MiB)
+++ runing suite for n = 100000 +++
  0.100147 seconds
  0.149456 seconds
  0.143990 seconds
  0.419113 seconds (3.00 M allocations: 137.329 MiB)
    Testing Gridap tests passed 
