Julia Version 1.5.0-DEV.511
Commit 458d4bb7ee (2020-03-26 16:44 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_ZFkrpY/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_ZFkrpY/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.02428943465982774 -0.08233488130946084; -0.02428943465982774 0.0 0.05597429246892776; 0.08233488130946084 -0.05597429246892776 0.0])
dAA = so3([0.0 0.07428793453046548 0.005230107674497967; -0.07428793453046548 0.0 -0.08714843368881182; -0.005230107674497967 0.08714843368881182 0.0])
dAA = so3([0.0 0.12376910365915382 0.12233858096389066; -0.12376910365915382 0.0 0.16527433545218284; -0.12233858096389066 -0.16527433545218284 0.0])
dAA = Quaternion(0.9907916575098898, [-0.046924926419953626, 0.12672683605778912, 0.00838162944001179])
dAA = SO3([0.9901172852887122 0.07370264702883036 -0.1193133739086057; -0.0813185815026139 0.9948643305109254 -0.060268168874218285; 0.11425869627697426 0.06937495007560146 0.9910257648654218])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9827868855656274 0.1846026806481185 -0.007196378098949317; -0.18177340155972466 0.9592998747600997 -0.2161068734924089; -0.032990423544134104 0.21369511127488555 0.9763431934374269]), [-0.5597429246892776, -0.8233488130946084, -0.24289434659827738])
xj = SE3(SO3([0.8049447523832299 -0.08326423458197825 0.58747852118199; -0.06072853316959793 0.9733444595808481 0.22116195030415092; -0.5902338442259725 -0.21369986018419376 0.7784320001692417]), [-1.6527433545218284, 1.2233858096389065, -1.2376910365915381])
Dx = SE3(SO3([0.8216000428041774 -0.25170908219235216 0.5114840247808894; -0.03579200222045226 0.8726918018669089 0.48695785395795704; -0.5689396296982877 -0.41839163100637133 0.7079944497399704]), [-1.4134096386781754, 1.5490782685947888, -1.405710752961218])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
