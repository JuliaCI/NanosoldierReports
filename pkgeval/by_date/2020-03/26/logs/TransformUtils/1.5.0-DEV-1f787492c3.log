Julia Version 1.5.0-DEV.507
Commit 1f787492c3 (2020-03-25 15:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_7bYM68/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_7bYM68/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.08941578447210441 0.026700110410098923; 0.08941578447210441 0.0 0.2585826507061353; -0.026700110410098923 -0.2585826507061353 0.0])
dAA = so3([0.0 -0.17074860136981349 0.1723790645726273; 0.17074860136981349 0.0 -0.07192048875359466; -0.1723790645726273 0.07192048875359466 0.0])
dAA = so3([0.0 0.0008451110932572767 0.02266412202876225; -0.0008451110932572767 0.0 0.01583571892581836; -0.02266412202876225 -0.01583571892581836 0.0])
dAA = Quaternion(0.9977318118752018, [-0.014044259389587596, 0.04883870244244268, -0.04414489205065397])
dAA = SO3([0.9725056994240574 -0.22034818610560525 -0.0753614056908115; 0.21582663645980865 0.9743491423232814 -0.06373862132437552; 0.08747301059281722 0.045721173802256015 0.9951171019955257])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8220874223907874 -0.36149184682051283 0.43988170526763914; 0.43642646776519395 0.8962568725132843 -0.07909207739528999; -0.36565586031249026 0.25699662090191244 0.8945661119582674]), [-2.585826507061353, 0.2670011041009892, 0.8941578447210441])
xj = SE3(SO3([0.946188098247927 0.21101055550958644 0.24536223873592858; -0.2303933465317168 0.9716619925010457 0.05283822671905338; -0.22725973820254064 -0.10652472854897856 0.9679904408617263]), [-0.1583571892581836, 0.22664122028762249, -0.008451110932572767])
Dx = SE3(SO3([0.7603984354488813 0.6364795261871771 -0.12918216638313568; -0.6069358880707241 0.7672036478496497 0.20743044737451632; 0.23113426214798855 -0.07932449477139523 0.9696827199607961]), [2.308022127078731, -1.1456506416331493, 0.2635481059765942])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
