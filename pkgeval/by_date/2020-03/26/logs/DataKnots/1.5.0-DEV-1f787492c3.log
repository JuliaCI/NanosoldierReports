Julia Version 1.5.0-DEV.507
Commit 1f787492c3 (2020-03-25 15:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed DataValueInterfaces ───────── v1.0.0
  Installed DataAPI ───────────────────── v1.1.0
  Installed Tables ────────────────────── v0.2.11
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed TableTraits ───────────────── v1.0.0
  Installed DataKnots ─────────────────── v0.9.0
  Installed PrettyPrinting ────────────── v0.1.0
   Updating `~/.julia/environments/v1.5/Project.toml`
   f3f2b2ad + DataKnots v0.9.0
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9a962f9c + DataAPI v1.1.0
   f3f2b2ad + DataKnots v0.9.0
   e2d170a0 + DataValueInterfaces v1.0.0
   82899510 + IteratorInterfaceExtensions v1.0.0
   54e16d92 + PrettyPrinting v0.1.0
   3783bdb8 + TableTraits v1.0.0
   bd369af6 + Tables v0.2.11
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing DataKnots
     Status `/tmp/jl_i6U42H/Project.toml`
   336ed68f CSV v0.5.23
   a93c6f00 DataFrames v0.20.0
   f3f2b2ad DataKnots v0.9.0
   9563631e NarrativeTest v0.3.0
   54e16d92 PrettyPrinting v0.1.0
   bd369af6 Tables v0.2.11
   44cfe95a Pkg
   9a3f8284 Random
   10745b16 Statistics
     Status `/tmp/jl_i6U42H/Manifest.toml`
   336ed68f CSV v0.5.23
   324d7699 CategoricalArrays v0.7.7
   34da2185 Compat v3.8.0
   9a962f9c DataAPI v1.1.0
   a93c6f00 DataFrames v0.20.0
   f3f2b2ad DataKnots v0.9.0
   864edb3b DataStructures v0.17.10
   e2d170a0 DataValueInterfaces v1.0.0
   48062228 FilePathsBase v0.7.0
   41ab1584 InvertedIndices v1.0.0
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   e1d29d7a Missings v0.4.3
   9563631e NarrativeTest v0.3.0
   bac558e1 OrderedCollections v1.1.0
   69de0a69 Parsers v0.3.12
   2dfb63ee PooledArrays v0.5.3
   54e16d92 PrettyPrinting v0.1.0
   189a3867 Reexport v0.2.0
   a2af1166 SortingAlgorithms v0.3.1
   3783bdb8 TableTraits v1.0.0
   bd369af6 Tables v0.2.11
   ea10d353 WeakRefStrings v0.6.2
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: Pkg.installed() is deprecated
└ @ Pkg /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Pkg.jl:530
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/knots.md, line 85:
    chicago_file = """
    name,department,position,salary,rate
    "JEFFERY A","POLICE","SERGEANT",101442,
    "NANCY A","POLICE","POLICE OFFICER",80016,
    "JAMES A","FIRE","FIRE ENGINEER-EMT",103350,
    "DANIEL A","FIRE","FIRE FIGHTER-EMT",95484,
    "LAKENYA A","OEMC","CROSSING GUARD",,17.68
    "DORIS A","OEMC","CROSSING GUARD",,19.38
    """ |> IOBuffer |> CSV.File

    chicago = DataKnot(:employee => chicago_file)

    chicago[It.employee]
Expected output:
      │ employee                                                │
      │ name       department  position           salary  rate  │
    ──┼─────────────────────────────────────────────────────────┼
    1 │ JEFFERY A  POLICE      SERGEANT           101442        │
    2 │ NANCY A    POLICE      POLICE OFFICER      80016        │
    3 │ JAMES A    FIRE        FIRE ENGINEER-EMT  103350        │
    4 │ DANIEL A   FIRE        FIRE FIGHTER-EMT    95484        │
    5 │ LAKENYA A  OEMC        CROSSING GUARD             17.68 │
    6 │ DORIS A    OEMC        CROSSING GUARD             19.38 │
Actual output:
      │ employee                                          │
    ──┼───────────────────────────────────────────────────┼
    1 │ JEFFERY A; POLICE; SERGEANT; 101442; missing      │
    2 │ NANCY A; POLICE; POLICE OFFICER; 80016; missing   │
    3 │ JAMES A; FIRE; FIRE ENGINEER-EMT; 103350; missing │
    4 │ DANIEL A; FIRE; FIRE FIGHTER-EMT; 95484; missing  │
    5 │ LAKENYA A; OEMC; CROSSING GUARD; missing; 17.68   │
    6 │ DORIS A; OEMC; CROSSING GUARD; missing; 19.38     │
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/knots.md, line 112:
    chicago[It.employee >>
            Record(It.name, It.department, It.salary)
           ] |> DataFrame
Expected output:
    6×3 DataFrames.DataFrame
    │ Row │ name      │ department │ salary  │
    │     │ String    │ String     │ Int64⍰  │
    ├─────┼───────────┼────────────┼─────────┤
    │ 1   │ JEFFERY A │ POLICE     │ 101442  │
    │ 2   │ NANCY A   │ POLICE     │ 80016   │
    │ 3   │ JAMES A   │ FIRE       │ 103350  │
    │ 4   │ DANIEL A  │ FIRE       │ 95484   │
    │ 5   │ LAKENYA A │ OEMC       │ missing │
    │ 6   │ DORIS A   │ OEMC       │ missing │
Actual output:
    ERROR: cannot find "name" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:286 [inlined]
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Record(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Navigation, ::Vararg{DataKnots.Navigation,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:617
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Navigation, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [20] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [21] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [22] query at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130 [inlined]
     [23] getindex(::DataKnot, ::DataKnots.Query; kws::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:123
     [24] getindex(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:123
     [25] top-level scope at knots.md:112
     [26] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/knots.md, line 186:
    cell(abc)
Expected output:
    @VectorTree (1:N) × Char ['a':'\x01':'c']
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,Array{Int64,1},StepRange{Char,Int64}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,Array{Int64,1},StepRange{Char,Int64}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,Array{Int64,1},StepRange{Char,Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,Array{Int64,1},StepRange{Char,Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/knots.md, line 201:
    cell(unitknot)
Expected output:
    @VectorTree (1:1) × () [()]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/knots.md, line 214:
    cell(recknot)
Expected output:
    @VectorTree (1:1) × (hello = String, main = (0:N) × Char) [(hello = "Hello World!", main = 'a':'\x01':'c')]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},DataKnots.TupleVector{Base.OneTo{Int64}}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/knots.md, line 400:
    show(chicago, as=:shape)
Expected output:
    1-element DataKnot:
      #               1:1
      └╴employee      0:N
        ├╴name        String
        ├╴department  String
        ├╴position    String
        ├╴salary      Union{Missing, Int64}
        └╴rate        Union{Missing, Float64}
Actual output:
    1-element DataKnot:
      #           1:1
      └╴employee  0:N × CSV.Row{false}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 39:
    using Statistics: mean

    @query chicago begin
        employee
        group(department)
        keep(mean_salary => mean(employee.salary))
        employee
        filter(salary > mean_salary)
    end
Expected output:
      │ employee                                         │
      │ name       department  position           salary │
    ──┼──────────────────────────────────────────────────┼
    1 │ JAMES A    FIRE        FIRE ENGINEER-EMT  103350 │
    2 │ ROBERT K   FIRE        FIRE FIGHTER-EMT   103272 │
    3 │ JEFFERY A  POLICE      SERGEANT           101442 │
Actual output:
    ERROR: cannot find "department" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Group(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:2240
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [20] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [21] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [22] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [23] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [24] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 71:
    @query chicago employee
Expected output:
      │ employee                                         │
      │ name       department  position           salary │
    ──┼──────────────────────────────────────────────────┼
    1 │ ANTHONY A  POLICE      POLICE OFFICER      72510 │
    2 │ DANIEL A   FIRE        FIRE FIGHTER-EMT    95484 │
    3 │ JAMES A    FIRE        FIRE ENGINEER-EMT  103350 │
    4 │ JEFFERY A  POLICE      SERGEANT           101442 │
    5 │ NANCY A    POLICE      POLICE OFFICER      80016 │
    6 │ ROBERT K   FIRE        FIRE FIGHTER-EMT   103272 │
Actual output:
      │ employee                                 │
    ──┼──────────────────────────────────────────┼
    1 │ ANTHONY A; POLICE; POLICE OFFICER; 72510 │
    2 │ DANIEL A; FIRE; FIRE FIGHTER-EMT; 95484  │
    3 │ JAMES A; FIRE; FIRE ENGINEER-EMT; 103350 │
    4 │ JEFFERY A; POLICE; SERGEANT; 101442      │
    5 │ NANCY A; POLICE; POLICE OFFICER; 80016   │
    6 │ ROBERT K; FIRE; FIRE FIGHTER-EMT; 103272 │
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 98:
    @query chicago employee.name
Expected output:
      │ name      │
    ──┼───────────┼
    1 │ ANTHONY A │
    2 │ DANIEL A  │
    3 │ JAMES A   │
    4 │ JEFFERY A │
    5 │ NANCY A   │
    6 │ ROBERT K  │
Actual output:
    ERROR: cannot find "name" at
    (0:N) × CSV.Row{false}
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [5] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [6] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [7] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [8] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [9] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [10] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [11] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [12] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [13] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 114:
    @query chicago begin
        employee
        name
    end
Expected output:

Actual output:
    ERROR: cannot find "name" at
    (0:N) × CSV.Row{false}
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [5] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [6] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [7] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [8] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [9] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [10] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [11] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [12] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [13] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 124:
    @query chicago employee{name, salary}
Expected output:
      │ employee          │
      │ name       salary │
    ──┼───────────────────┼
    1 │ ANTHONY A   72510 │
    2 │ DANIEL A    95484 │
    3 │ JAMES A    103350 │
    4 │ JEFFERY A  101442 │
    5 │ NANCY A     80016 │
    6 │ ROBERT K   103272 │
Actual output:
    ERROR: cannot find "name" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Record(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:617
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [20] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [21] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [22] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [23] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [24] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 142:
    @query chicago begin
        employee
        {name => titlecase(name), highly_paid => salary > 100_000}
    end
Expected output:
      │ employee               │
      │ name       highly_paid │
    ──┼────────────────────────┼
    1 │ Anthony A        false │
    2 │ Daniel A         false │
    3 │ James A           true │
    4 │ Jeffery A         true │
    5 │ Nancy A          false │
    6 │ Robert K          true │
Actual output:
    ERROR: cannot find "name" at
    (1:1) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Lift(::DataKnots.Environment, ::DataKnots.Pipeline, ::Function, ::Tuple{DataKnots.Query}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1063
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [18] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [19] getindex at ./broadcast.jl:564 [inlined]
     [20] macro expansion at ./broadcast.jl:910 [inlined]
     [21] macro expansion at ./simdloop.jl:77 [inlined]
     [22] copyto! at ./broadcast.jl:909 [inlined]
     [23] copyto! at ./broadcast.jl:864 [inlined]
     [24] copy at ./broadcast.jl:840 [inlined]
     [25] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [26] Record(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:617
     [27] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [28] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [29] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [30] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [31] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [32] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [33] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [34] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [35] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [36] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [37] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 161:
    @query chicago employee.filter(salary > 100_000)
Expected output:
      │ employee                                         │
      │ name       department  position           salary │
    ──┼──────────────────────────────────────────────────┼
    1 │ JAMES A    FIRE        FIRE ENGINEER-EMT  103350 │
    2 │ JEFFERY A  POLICE      SERGEANT           101442 │
    3 │ ROBERT K   FIRE        FIRE FIGHTER-EMT   103272 │
Actual output:
    ERROR: cannot find "salary" at
    (1:1) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Lift(::DataKnots.Environment, ::DataKnots.Pipeline, ::Function, ::Tuple{DataKnots.Query,DataKnots.Query}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1063
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Filter(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1850
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [20] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [21] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [22] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [23] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [24] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [25] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [26] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 209:
    show(as=:shape, chicago)
Expected output:
    1-element DataKnot:
      #               1:1
      └╴employee      0:N
        ├╴name        String
        ├╴department  String
        ├╴position    String
        └╴salary      Int64
Actual output:
    1-element DataKnot:
      #           1:1
      └╴employee  0:N × CSV.Row{false}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 227:
    chicago
Expected output:
    │ employee{name,department,position,salary}                                   │
    ┼─────────────────────────────────────────────────────────────────────────────┼
    │ ANTHONY A, POLICE, POLICE OFFICER, 72510; DANIEL A, FIRE, FIRE FIGHTER-EMT,…│
Actual output:
    │ employee                                                                    │
    ┼─────────────────────────────────────────────────────────────────────────────┼
    │ [ANTHONY A; POLICE; POLICE OFFICER; 72510]; [DANIEL A; FIRE; FIRE FIGHTER-E…│
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 237:
    @query chicago employee{name, salary}
Expected output:
      │ employee          │
      │ name       salary │
    ──┼───────────────────┼
    1 │ ANTHONY A   72510 │
    2 │ DANIEL A    95484 │
    3 │ JAMES A    103350 │
    4 │ JEFFERY A  101442 │
    5 │ NANCY A     80016 │
    6 │ ROBERT K   103272 │
Actual output:
    ERROR: cannot find "name" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Record(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:617
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [20] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [21] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [22] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [23] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [24] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 253:
    show(as=:shape, @query chicago employee{name, salary})
Expected output:
    6-element DataKnot:
      employee  0:N
      ├╴name    1:1 × String
      └╴salary  1:1 × Int64
Actual output:
    ERROR: cannot find "name" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Record(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:617
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [20] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [21] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [22] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [23] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [24] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 271:
    using Statistics: mean

    @query chicago begin
        mean_salary => mean(employee.salary)
    end
Expected output:
    │ mean_salary │
    ┼─────────────┼
    │     92679.0 │
Actual output:
    ERROR: cannot find "salary" at
    (0:N) × CSV.Row{false}
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [5] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [6] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [7] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [8] getindex at ./broadcast.jl:564 [inlined]
     [9] macro expansion at ./broadcast.jl:910 [inlined]
     [10] macro expansion at ./simdloop.jl:77 [inlined]
     [11] copyto! at ./broadcast.jl:909 [inlined]
     [12] copyto! at ./broadcast.jl:864 [inlined]
     [13] copy at ./broadcast.jl:840 [inlined]
     [14] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [15] Lift(::DataKnots.Environment, ::DataKnots.Pipeline, ::Function, ::Tuple{DataKnots.Query}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1063
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [20] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [21] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [22] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [23] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [24] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [25] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [26] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [27] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [28] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 287:
    @query chicago employee.group(department)
Expected output:
      │ department  employee{name,department,position,salary}                     │
    ──┼───────────────────────────────────────────────────────────────────────────┼
    1 │ FIRE        DANIEL A, FIRE, FIRE FIGHTER-EMT, 95484; JAMES A, FIRE, FIRE …│
    2 │ POLICE      ANTHONY A, POLICE, POLICE OFFICER, 72510; JEFFERY A, POLICE, …│
Actual output:
    ERROR: cannot find "department" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Group(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:2240
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [20] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [21] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [22] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [23] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [24] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 299:
    show(as=:shape, @query chicago employee.group(department))
Expected output:
    2-element DataKnot:
      #               0:N
      ├╴department    1:1 × String
      └╴employee      1:N
        ├╴name        String
        ├╴department  String
        ├╴position    String
        └╴salary      Int64
Actual output:
    ERROR: cannot find "department" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Group(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:2240
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [20] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [21] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [22] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [23] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [24] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 314:
    @query chicago begin
        employee
        group(department)
        {department, employee.salary}
    end
Expected output:
      │ department  salary                │
    ──┼───────────────────────────────────┼
    1 │ FIRE        95484; 103350; 103272 │
    2 │ POLICE      72510; 101442; 80016  │
Actual output:
    ERROR: cannot find "department" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Group(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:2240
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [20] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [21] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [22] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [23] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [24] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 330:
    @query chicago begin
        employee
        group(department)
        {department, mean_salary => mean(employee.salary)}
    end
Expected output:
      │ department  mean_salary │
    ──┼─────────────────────────┼
    1 │ FIRE           100702.0 │
    2 │ POLICE          84656.0 │
Actual output:
    ERROR: cannot find "department" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Group(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:2240
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [20] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [21] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [22] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [23] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [24] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 364:
    @query chicago begin
        employee
        {name, salary, mean_salary => mean(employee.salary)}
    end
Expected output:
    ERROR: cannot find "employee" ⋮
Actual output:
    ERROR: cannot find "name" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Record(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:617
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [20] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [21] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [22] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [23] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [24] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 375:
    @query chicago begin
        keep(mean_salary => mean(employee.salary))
        employee
        {name, salary, mean_salary}
    end
Expected output:
      │ employee                       │
      │ name       salary  mean_salary │
    ──┼────────────────────────────────┼
    1 │ ANTHONY A   72510      92679.0 │
    2 │ DANIEL A    95484      92679.0 │
    3 │ JAMES A    103350      92679.0 │
    4 │ JEFFERY A  101442      92679.0 │
    5 │ NANCY A     80016      92679.0 │
    6 │ ROBERT K   103272      92679.0 │
Actual output:
    ERROR: cannot find "salary" at
    (0:N) × CSV.Row{false}
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [5] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [6] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [7] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [8] getindex at ./broadcast.jl:564 [inlined]
     [9] macro expansion at ./broadcast.jl:910 [inlined]
     [10] macro expansion at ./simdloop.jl:77 [inlined]
     [11] copyto! at ./broadcast.jl:909 [inlined]
     [12] copyto! at ./broadcast.jl:864 [inlined]
     [13] copy at ./broadcast.jl:840 [inlined]
     [14] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [15] Lift(::DataKnots.Environment, ::DataKnots.Pipeline, ::Function, ::Tuple{DataKnots.Query}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1063
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] Keep(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1424
     [20] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [21] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [22] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [23] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [24] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [25] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [26] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [27] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [28] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [29] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [30] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 396:
    @query chicago begin
        employee
        group(department)
        keep(mean_salary => mean(employee.salary))
        employee
        {name, salary, mean_salary}
    end
Expected output:
      │ employee                       │
      │ name       salary  mean_salary │
    ──┼────────────────────────────────┼
    1 │ DANIEL A    95484     100702.0 │
    2 │ JAMES A    103350     100702.0 │
    3 │ ROBERT K   103272     100702.0 │
    4 │ ANTHONY A   72510      84656.0 │
    5 │ JEFFERY A  101442      84656.0 │
    6 │ NANCY A     80016      84656.0 │
Actual output:
    ERROR: cannot find "department" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Group(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:2240
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [20] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [21] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [22] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [23] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [24] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/overview.md, line 418:
    @query chicago begin
        employee
        group(department)
        keep(mean_salary => mean(employee.salary))
        employee
        filter(salary > mean_salary)
    end
Expected output:
      │ employee                                         │
      │ name       department  position           salary │
    ──┼──────────────────────────────────────────────────┼
    1 │ JAMES A    FIRE        FIRE ENGINEER-EMT  103350 │
    2 │ ROBERT K   FIRE        FIRE FIGHTER-EMT   103272 │
    3 │ JEFFERY A  POLICE      SERGEANT           101442 │
Actual output:
    ERROR: cannot find "department" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Group(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:2240
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [20] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [21] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [22] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [23] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [24] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 96:
    p = block_filler(["POLICE", "FIRE"])
    p(["GARRY M", "ANTHONY R", "DANA A"])
Expected output:
    @VectorTree (0:N) × String [["POLICE", "FIRE"], ["POLICE", "FIRE"], ["POLICE", "FIRE"]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,StepRange{Int64,Int64},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,StepRange{Int64,Int64},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,StepRange{Int64,Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,StepRange{Int64,Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 103:
    p = null_filler()
    p(["GARRY M", "ANTHONY R", "DANA A"])
Expected output:
    @VectorTree (0:1) × Bottom [missing, missing, missing]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Union{},1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Union{},1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Union{},1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Union{},1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 144:
    p = tuple_of(:first => chain_of(lift(split), lift(first), lift(titlecase)),
                 :last => lift(last))
    p(["JEFFERY A", "JAMES A", "TERRY A"])
Expected output:
    @VectorTree (first = String, last = Char) [(first = "Jeffery", last = 'A') … ]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:113
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 161:
    p = wrap()
    p(["GARRY M", "ANTHONY R", "DANA A"])
Expected output:
    @VectorTree (1:1) × String ["GARRY M", "ANTHONY R", "DANA A"]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 168:
    p = flatten()
    p(@VectorTree [[String]] [[["GARRY M"], ["ANTHONY R", "DANA A"]], [[], ["JOSE S"], ["CHARLES S"]]])
Expected output:
    @VectorTree (0:N) × String [["GARRY M", "ANTHONY R", "DANA A"], ["JOSE S", "CHARLES S"]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 178:
    p = distribute(:employee)
    p(@VectorTree (department = String, employee = [String]) [
        "POLICE"    ["GARRY M", "ANTHONY R", "DANA A"]
        "FIRE"      ["JOSE S", "CHARLES S"]]) |> display
Expected output:
    @VectorTree of 2 × (0:N) × (department = String, employee = String):
     [(department = "POLICE", employee = "GARRY M"), (department = "POLICE", employee = "ANTHONY R"), (department = "POLICE", employee = "DANA A")]
     [(department = "FIRE", employee = "JOSE S"), (department = "FIRE", employee = "CHARLES S")]
Actual output:
    @VectorTree of 2 × (0:N) × (department = String, employee = String):
    ERROR: BoundsError: attempt to access String
      at index [1]
    Stacktrace:
     [1] indexed_iterate(::String, ::Int64) at ./tuple.jl:85
     [2] show_vector(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}, ::Char, ::Char) at ./arrayshow.jl:458 (repeats 2 times)
     [3] show_vectortree(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:113
     [5] sprint(::Function, ::DataKnots.TupleVector{UnitRange{Int64}}; context::IOContext{Base.PipeEndpoint}, sizehint::Int64) at ./strings/io.jl:103
     [6] alignment(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{UnitRange{Int64}}) at ./show.jl:2055
     [7] alignment(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Int64, ::Int64, ::Int64) at ./arrayshow.jl:68
     [8] print_matrix(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::String, ::String, ::String, ::String, ::String, ::String, ::Int64, ::Int64) at ./arrayshow.jl:196
     [9] print_matrix at ./arrayshow.jl:169 [inlined]
     [10] print_array at ./arrayshow.jl:317 [inlined]
     [11] display_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:506
     [12] show(::IOContext{Base.PipeEndpoint}, ::MIME{Symbol("text/plain")}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:307
     [13] display(::TextDisplay, ::MIME{Symbol("text/plain")}, ::Any) at ./multimedia.jl:240
     [14] display(::TextDisplay, ::Any) at ./multimedia.jl:241
     [15] display(::Any) at ./multimedia.jl:326
     [16] |>(::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::typeof(display)) at ./operators.jl:823
     [17] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:674
     [18] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 215:
    p = sieve_by()
    p(@VectorTree (String, Bool) [("JEFFERY A", true), ("JAMES A", true), ("TERRY A", false)])
Expected output:
    @VectorTree (0:1) × String ["JEFFERY A", "JAMES A", missing]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 309:
    p(["GARRY M", "ANTHONY R", "DANA A"])
Expected output:
    @VectorTree (1:N) × String [["POLICE", "FIRE"], ["POLICE", "FIRE"], ["POLICE", "FIRE"]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,StepRange{Int64,Int64},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,StepRange{Int64,Int64},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,StepRange{Int64,Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,StepRange{Int64,Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 317:
    p(["GARRY M", "ANTHONY R", "DANA A"])
Expected output:
    @VectorTree (0:1) × Bottom [missing, missing, missing]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Union{},1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Union{},1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Union{},1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Union{},1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 330:
    p([260004, 185364, 170112, missing, 202728, 197736])
Expected output:
    @VectorTree (0:1) × Int64 [260004, 185364, 170112, missing, 202728, 197736]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Int64,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Int64,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Int64,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Int64,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 338:
    p([[260004, 185364, 170112], Int[], [202728, 197736]])
Expected output:
    @VectorTree (0:N) × Int64 [[260004, 185364, 170112], [], [202728, 197736]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{Int64,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{Int64,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{Int64,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{Int64,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 465:
    p(@VectorTree ([Int], [Int]) [
        [260004, 185364, 170112]    200000
        missing                     200000
        [202728, 197736]            [200000, 200000]]
    ) |> display
Expected output:
    @VectorTree of 3 × (0:N) × (Int64, (0:N) × Int64):
     [(260004, [200000]), (185364, [200000]), (170112, [200000])]
     []
     [(202728, [200000, 200000]), (197736, [200000, 200000])]
Actual output:
    @VectorTree of 3 × (0:N) × (Int64, (0:N) × Int64):
    ERROR: BoundsError: attempt to access String
      at index [1]
    Stacktrace:
     [1] indexed_iterate(::String, ::Int64) at ./tuple.jl:85
     [2] show_vector(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}, ::Char, ::Char) at ./arrayshow.jl:458 (repeats 2 times)
     [3] show_vectortree(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:113
     [5] sprint(::Function, ::DataKnots.TupleVector{UnitRange{Int64}}; context::IOContext{Base.PipeEndpoint}, sizehint::Int64) at ./strings/io.jl:103
     [6] alignment(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{UnitRange{Int64}}) at ./show.jl:2055
     [7] alignment(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Int64, ::Int64, ::Int64) at ./arrayshow.jl:68
     [8] print_matrix(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::String, ::String, ::String, ::String, ::String, ::String, ::Int64, ::Int64) at ./arrayshow.jl:196
     [9] print_matrix at ./arrayshow.jl:169 [inlined]
     [10] print_array at ./arrayshow.jl:317 [inlined]
     [11] display_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:506
     [12] show(::IOContext{Base.PipeEndpoint}, ::MIME{Symbol("text/plain")}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:307
     [13] display(::TextDisplay, ::MIME{Symbol("text/plain")}, ::Any) at ./multimedia.jl:240
     [14] display(::TextDisplay, ::Any) at ./multimedia.jl:241
     [15] display(::Any) at ./multimedia.jl:326
     [16] |>(::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::typeof(display)) at ./operators.jl:823
     [17] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:674
     [18] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 483:
    p(@VectorTree ([Int], [Int]) [
        [260004, 185364, 170112]    200000
        missing                     200000
        [202728, 197736]            [200000, 200000]]
    ) |> display
Expected output:
    @VectorTree of 3 × (0:N) × (Int64, Int64):
     [(260004, 200000), (185364, 200000), (170112, 200000)]
     []
     [(202728, 200000), (202728, 200000), (197736, 200000), (197736, 200000)]
Actual output:
    @VectorTree of 3 × (0:N) × (Int64, Int64):
    ERROR: BoundsError: attempt to access String
      at index [1]
    Stacktrace:
     [1] indexed_iterate(::String, ::Int64) at ./tuple.jl:85
     [2] show_vector(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}, ::Char, ::Char) at ./arrayshow.jl:458 (repeats 2 times)
     [3] show_vectortree(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:113
     [5] sprint(::Function, ::DataKnots.TupleVector{UnitRange{Int64}}; context::IOContext{Base.PipeEndpoint}, sizehint::Int64) at ./strings/io.jl:103
     [6] alignment(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{UnitRange{Int64}}) at ./show.jl:2055
     [7] alignment(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Int64, ::Int64, ::Int64) at ./arrayshow.jl:68
     [8] print_matrix(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::String, ::String, ::String, ::String, ::String, ::String, ::Int64, ::Int64) at ./arrayshow.jl:196
     [9] print_matrix at ./arrayshow.jl:169 [inlined]
     [10] print_array at ./arrayshow.jl:317 [inlined]
     [11] display_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:506
     [12] show(::IOContext{Base.PipeEndpoint}, ::MIME{Symbol("text/plain")}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:307
     [13] display(::TextDisplay, ::MIME{Symbol("text/plain")}, ::Any) at ./multimedia.jl:240
     [14] display(::TextDisplay, ::Any) at ./multimedia.jl:241
     [15] display(::Any) at ./multimedia.jl:326
     [16] |>(::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::typeof(display)) at ./operators.jl:823
     [17] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:674
     [18] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 529:
    p(@VectorTree [String] [["GARRY M"], ["ANTHONY R"], ["DANA A"]])
Expected output:
    @VectorTree (1:1) × String ["GARRY M", "ANTHONY R", "DANA A"]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 561:
    p(@VectorTree [String] [["GARRY M"], ["ANTHONY R"], ["DANA A"]])
Expected output:
    @VectorTree (0:N) × String [["GARRY M"], ["ANTHONY R"], ["DANA A"]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Base.OneTo{Int64},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Base.OneTo{Int64},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 564:
    p(@VectorTree (1:1)String ["GARRY M", "ANTHONY R", "DANA A"])
Expected output:
    @VectorTree (0:N) × String [["GARRY M"], ["ANTHONY R"], ["DANA A"]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Base.OneTo{Int64},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Base.OneTo{Int64},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 575:
    p(@VectorTree (Int, Bool) [260004 true; 185364 false; 170112 false])
Expected output:
    @VectorTree (0:1) × Int64 [260004, missing, missing]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Int64,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Int64,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Int64,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Int64,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 587:
    p(@VectorTree [String] [["GARRY M", "ANTHONY R", "DANA A"], ["JOSE S", "CHARLES S"], missing])
Expected output:
    @VectorTree (0:1) × String ["ANTHONY R", "CHARLES S", missing]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 592:
    p = get_by(-1)

    p(@VectorTree [String] [["GARRY M", "ANTHONY R", "DANA A"], ["JOSE S", "CHARLES S"], missing])
Expected output:
    @VectorTree (0:1) × String ["DANA A", "CHARLES S", missing]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 602:
    p(@VectorTree [String] [["GARRY M", "ANTHONY R", "DANA A"], ["JOSE S", "CHARLES S"]])
Expected output:
    @VectorTree (1:1) × String ["GARRY M", "JOSE S"]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 605:
    p = get_by(-1, x1to1)

    p(@VectorTree [String] [["GARRY M", "ANTHONY R", "DANA A"], ["JOSE S", "CHARLES S"]])
Expected output:
    @VectorTree (1:1) × String ["DANA A", "CHARLES S"]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 616:
    p(@VectorTree ([String], Int) [(["GARRY M", "ANTHONY R", "DANA A"], 1), (["JOSE S", "CHARLES S"], -1), (missing, 0)])
Expected output:
    @VectorTree (0:1) × String ["GARRY M", "CHARLES S", missing]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 619:
    p(@VectorTree ([String], Int) [(["GARRY M", "ANTHONY R", "DANA A"], 1), (["JOSE S", "CHARLES S"], -1)])
Expected output:
    @VectorTree (0:1) × String ["GARRY M", "CHARLES S"]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Base.OneTo{Int64},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Base.OneTo{Int64},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 631:
    p(@VectorTree [String] [["GARRY M", "ANTHONY R", "DANA A"], ["JOSE S", "CHARLES S"], missing])
Expected output:
    @VectorTree (0:N) × String [["GARRY M", "ANTHONY R"], ["JOSE S", "CHARLES S"], []]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 636:
    p = slice_by(-1)

    p(@VectorTree [String] [["GARRY M", "ANTHONY R", "DANA A"], ["JOSE S", "CHARLES S"], missing])
Expected output:
    @VectorTree (0:N) × String [["GARRY M", "ANTHONY R"], ["JOSE S"], []]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 644:
    p = slice_by(2, true)

    p(@VectorTree [String] [["GARRY M", "ANTHONY R", "DANA A"], ["JOSE S", "CHARLES S"], missing])
Expected output:
    @VectorTree (0:N) × String [["DANA A"], [], []]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 649:
    p = slice_by(-1, true)

    p(@VectorTree [String] [["GARRY M", "ANTHONY R", "DANA A"], ["JOSE S", "CHARLES S"], missing])
Expected output:
    @VectorTree (0:N) × String [["DANA A"], ["CHARLES S"], []]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 661:
    p(@VectorTree ([String], Int) [(["GARRY M", "ANTHONY R", "DANA A"], 1), (["JOSE S", "CHARLES S"], -1), (missing, 0)])
Expected output:
    @VectorTree (0:N) × String [["GARRY M"], ["JOSE S"], []]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 673:
    p(@VectorTree [String] [["FIRE", "POLICE", "POLICE", "FIRE"], ["FIRE", "OEMC", "OEMC"], []])
Expected output:
    @VectorTree (0:N) × String [["FIRE", "POLICE"], ["FIRE", "OEMC"], []]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 678:
    p(@VectorTree [(0:1)String] [["POLICE", "FIRE", missing, "OEMC", "POLICE", missing]])
Expected output:
    @VectorTree (0:N) × ((0:1) × String) [[missing, "FIRE", "OEMC", "POLICE"]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 688:
    p(@VectorTree [(String, String)] [[("DANIEL A", "FIRE"), ("JEFFERY A", "POLICE"), ("JAMES A", "FIRE"), ("NANCY A", "POLICE")]])
Expected output:
    @VectorTree (0:N) × ((1:N) × String, String) [[(["DANIEL A", "JAMES A"], "FIRE"), (["JEFFERY A", "NANCY A"], "POLICE")]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 693:
    p(@VectorTree [(String, (0:1)((0:1)Int, (0:1)Int))] [[("JEFFERY A", (10, missing)), ("NANCY A", (8, missing))], [("JAMES A", (10, missing)), ("DANIEL A", (10, missing))], [("LAKENYA A", (missing, 2)), ("DORIS A", (missing, 2)), ("ASKEW A", (6, missing)), ("MARY Z", missing)], []])
Expected output:
    @VectorTree (0:N) × ((1:N) × String, (0:1) × ((0:1) × Int64, (0:1) × Int64)) [[(["NANCY A"], (8, missing)), (["JEFFERY A"], (10, missing))], [(["JAMES A", "DANIEL A"], (10, missing))], [(["MARY Z"], missing), (["LAKENYA A", "DORIS A"], (missing, 2)), (["ASKEW A"], (6, missing))], []]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/pipelines.md, line 698:
    p(@VectorTree [(String, [String])] [[("ANTONIO", ["POLICE", "OEMC"]), ("DOLORES", ["FINANCE"]), ("MARY", ["FINANCE"]), ("CRYSTAL", ["POLICE", "OEMC"]), ("PIA", ["POLICE"]), ("CALVIN", [])]])
Expected output:
    @VectorTree (0:N) × ((1:N) × String, (0:N) × String) [[(["CALVIN"], []), (["DOLORES", "MARY"], ["FINANCE"]), (["PIA"], ["POLICE"]), (["ANTONIO", "CRYSTAL"], ["POLICE", "OEMC"])]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/queries.md, line 434:
    Q = Lift(3) >> (It .+ 4) >> (It .* 6)
Expected output:
    Lift(3) >> (It .+ 4) >> It .* 6
Actual output:
    Lift(3) >> (It .+ 4) >> (It .* 6)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/queries.md, line 445:
    Q = It >> Q >> It
Expected output:
    It >> Lift(3) >> (It .+ 4) >> It .* 6 >> It
Actual output:
    It >> Lift(3) >> (It .+ 4) >> (It .* 6) >> It
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/queries.md, line 1044:
    Q = It.department >>
        (1 .* (It.employee >> Count))
Expected output:
    It.department >> 1 .* (It.employee >> Count)
Actual output:
    It.department >> (1 .* It.employee >> Count)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/shapes.md, line 122:
    dept_employee = column(:employee)

    dept_employee(depts) |> display
Expected output:
    @VectorTree of 3 × (1:N) × (name = (1:1) × String,
                                position = (1:1) × String,
                                salary = (0:1) × Int64,
                                rate = (0:1) × Float64):
     [(name = "JEFFERY A", position = "SERGEANT", salary = 101442, rate = missing), (name = "NANCY A", position = "POLICE OFFICER", salary = 80016, rate = missing)]
     [(name = "JAMES A", position = "FIRE ENGINEER-EMT", salary = 103350, rate = missing), (name = "DANIEL A", position = "FIRE FIGHTER-EMT", salary = 95484, rate = missing)]
     [(name = "LAKENYA A", position = "CROSSING GUARD", salary = missing, rate = 17.68), (name = "DORIS A", position = "CROSSING GUARD", salary = missing, rate = 19.38)]
Actual output:
    @VectorTree of 3 × (1:N) × (name = (1:1) × String,
                                position = (1:1) × String,
                                salary = (0:1) × Int64,
                                rate = (0:1) × Float64):
    ERROR: BoundsError: attempt to access String
      at index [1]
    Stacktrace:
     [1] indexed_iterate(::String, ::Int64) at ./tuple.jl:85
     [2] show_vector(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}, ::Char, ::Char) at ./arrayshow.jl:458 (repeats 2 times)
     [3] show_vectortree(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:113
     [5] sprint(::Function, ::DataKnots.TupleVector{UnitRange{Int64}}; context::IOContext{Base.PipeEndpoint}, sizehint::Int64) at ./strings/io.jl:103
     [6] alignment(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{UnitRange{Int64}}) at ./show.jl:2055
     [7] alignment(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Int64, ::Int64, ::Int64) at ./arrayshow.jl:68
     [8] print_matrix(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::String, ::String, ::String, ::String, ::String, ::String, ::Int64, ::Int64) at ./arrayshow.jl:196
     [9] print_matrix at ./arrayshow.jl:169 [inlined]
     [10] print_array at ./arrayshow.jl:317 [inlined]
     [11] display_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:506
     [12] show(::IOContext{Base.PipeEndpoint}, ::MIME{Symbol("text/plain")}, ::DataKnots.BlockVector{DataKnots.x1toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:307
     [13] display(::TextDisplay, ::MIME{Symbol("text/plain")}, ::Any) at ./multimedia.jl:240
     [14] display(::TextDisplay, ::Any) at ./multimedia.jl:241
     [15] display(::Any) at ./multimedia.jl:326
     [16] |>(::DataKnots.BlockVector{DataKnots.x1toN,Array{Int64,1},DataKnots.TupleVector{Base.OneTo{Int64}}}, ::typeof(display)) at ./operators.jl:823
     [17] top-level scope at shapes.md:124
     [18] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/shapes.md, line 172:
    dept_employee_rate(depts)
Expected output:
    @VectorTree (0:N) × Float64 [[], [], [17.68, 19.38]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{Float64,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{Float64,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/shapes.md, line 218:
    round_digits(x, d) = round(x, digits=d)

    round_it =
        chain_of(
            tuple_of(column(1),
                     chain_of(column(2), column(:P))),
            tuple_lift(round_digits),
            wrap())

    round_it(@VectorTree (Float64, (P = (1:1)Int,)) [(17.68, (P = 1,)), (19.38, (P = 1,))])
Expected output:
    @VectorTree (1:1) × Float64 [17.7, 19.4]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{Float64,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{Float64,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{Float64,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{Float64,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/shapes.md, line 267:
    slots = @VectorTree (P = Int,) [(P = 1,), (P = 1,), (P = 1,)]

    input = TupleVector(:depts => depts, :slots => slots)

    dept_employee_round_rate(input)
Expected output:
    @VectorTree (0:N) × Float64 [[], [], [17.7, 19.4]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{Float64,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{Float64,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/shapes.md, line 335:
    labels(emp_shp)
Expected output:
    Symbol[:name, :position, :salary, :rate]
Actual output:
    [:name, :position, :salary, :rate]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/tutorial.md, line 1164:
    using CSV

    employee_data = """
        name,department,position,salary,rate
        "JEFFERY A","POLICE","SERGEANT",101442,
        "NANCY A","POLICE","POLICE OFFICER",80016,
        "ANTHONY A","POLICE","POLICE OFFICER",72510,
        "ALBA M","POLICE","POLICE CADET",,9.46
        "JAMES A","FIRE","FIRE ENGINEER-EMT",103350,
        "DANIEL A","FIRE","FIREFIGHTER-EMT",95484,
        "ROBERT K","FIRE","FIREFIGHTER-EMT",103272,
        "LAKENYA A","OEMC","CROSSING GUARD",,17.68
        "DORIS A","OEMC","CROSSING GUARD",,19.38
        "BRENDA B","OEMC","TRAFFIC CONTROL AIDE",64392,
        """ |> IOBuffer |> CSV.File

    chicago′ = DataKnot(:employee => employee_data)

    chicago′[It.employee]
Expected output:
       │ employee                                                   │
       │ name       department  position              salary  rate  │
    ───┼────────────────────────────────────────────────────────────┼
     1 │ JEFFERY A  POLICE      SERGEANT              101442        │
     2 │ NANCY A    POLICE      POLICE OFFICER         80016        │
     3 │ ANTHONY A  POLICE      POLICE OFFICER         72510        │
     4 │ ALBA M     POLICE      POLICE CADET                   9.46 │
     5 │ JAMES A    FIRE        FIRE ENGINEER-EMT     103350        │
     6 │ DANIEL A   FIRE        FIREFIGHTER-EMT        95484        │
     7 │ ROBERT K   FIRE        FIREFIGHTER-EMT       103272        │
     8 │ LAKENYA A  OEMC        CROSSING GUARD                17.68 │
     9 │ DORIS A    OEMC        CROSSING GUARD                19.38 │
    10 │ BRENDA B   OEMC        TRAFFIC CONTROL AIDE   64392        │
Actual output:
       │ employee                                             │
    ───┼──────────────────────────────────────────────────────┼
     1 │ JEFFERY A; POLICE; SERGEANT; 101442; missing         │
     2 │ NANCY A; POLICE; POLICE OFFICER; 80016; missing      │
     3 │ ANTHONY A; POLICE; POLICE OFFICER; 72510; missing    │
     4 │ ALBA M; POLICE; POLICE CADET; missing; 9.46          │
     5 │ JAMES A; FIRE; FIRE ENGINEER-EMT; 103350; missing    │
     6 │ DANIEL A; FIRE; FIREFIGHTER-EMT; 95484; missing      │
     7 │ ROBERT K; FIRE; FIREFIGHTER-EMT; 103272; missing     │
     8 │ LAKENYA A; OEMC; CROSSING GUARD; missing; 17.68      │
     9 │ DORIS A; OEMC; CROSSING GUARD; missing; 19.38        │
    10 │ BRENDA B; OEMC; TRAFFIC CONTROL AIDE; 64392; missing │
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/tutorial.md, line 1202:
    using Statistics: mean

    highly_compensated =
        chicago′[Keep(:avg_salary => mean.(It.employee.salary)) >>
                 It.employee >>
                 Filter(It.salary .> It.avg_salary) >>
                 Collect(:rate => nothing)]
Expected output:
      │ employee                                         │
      │ name       department  position           salary │
    ──┼──────────────────────────────────────────────────┼
    1 │ JEFFERY A  POLICE      SERGEANT           101442 │
    2 │ JAMES A    FIRE        FIRE ENGINEER-EMT  103350 │
    3 │ DANIEL A   FIRE        FIREFIGHTER-EMT     95484 │
    4 │ ROBERT K   FIRE        FIREFIGHTER-EMT    103272 │
Actual output:
    ERROR: cannot find "salary" at
    (0:N) × CSV.Row{false}
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:286 [inlined]
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Lift(::DataKnots.Environment, ::DataKnots.Pipeline, ::Function, ::Tuple{DataKnots.Navigation}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1063
     [14] BroadcastLift(::DataKnots.Environment, ::DataKnots.Pipeline, ::Function, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1099
     [15] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [16] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [17] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [18] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:278 [inlined]
     [19] Keep(::DataKnots.Environment, ::DataKnots.Pipeline, ::Pair{Symbol,DataKnots.Query}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1424
     [20] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [21] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [22] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [23] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [24] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [25] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [26] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [27] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [28] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [29] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [30] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [31] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [32] query at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130 [inlined]
     [33] getindex(::DataKnot, ::DataKnots.Query; kws::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:123
     [34] getindex(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:123
     [35] top-level scope at tutorial.md:1204
     [36] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/tutorial.md, line 1221:
    using DataFrames

    highly_compensated |> DataFrame
Expected output:
    4×4 DataFrames.DataFrame
    │ Row │ name      │ department │ position          │ salary │
    │     │ String    │ String     │ String            │ Int64⍰ │
    ├─────┼───────────┼────────────┼───────────────────┼────────┤
    │ 1   │ JEFFERY A │ POLICE     │ SERGEANT          │ 101442 │
    │ 2   │ JAMES A   │ FIRE       │ FIRE ENGINEER-EMT │ 103350 │
    │ 3   │ DANIEL A  │ FIRE       │ FIREFIGHTER-EMT   │ 95484  │
    │ 4   │ ROBERT K  │ FIRE       │ FIREFIGHTER-EMT   │ 103272 │
Actual output:
    ERROR: UndefVarError: highly_compensated not defined
    Stacktrace:
     [1] top-level scope at tutorial.md:1223
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/tutorial.md, line 1241:
    chicago′[It.employee >> Group(It.department)]
Expected output:
      │ department  employee{name,department,position,salary,rate}                │
    ──┼───────────────────────────────────────────────────────────────────────────┼
    1 │ FIRE        JAMES A, FIRE, FIRE ENGINEER-EMT, 103350, missing; DANIEL A, …│
    2 │ OEMC        LAKENYA A, OEMC, CROSSING GUARD, missing, 17.68; DORIS A, OEM…│
    3 │ POLICE      JEFFERY A, POLICE, SERGEANT, 101442, missing; NANCY A, POLICE…│
Actual output:
    ERROR: cannot find "department" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:286 [inlined]
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Group(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Navigation) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:2240
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Navigation, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [20] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [21] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [22] query at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130 [inlined]
     [23] getindex(::DataKnot, ::DataKnots.Query; kws::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:123
     [24] getindex(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:123
     [25] top-level scope at tutorial.md:1241
     [26] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/tutorial.md, line 1253:
    Restructure =
        :department =>
            It.employee >>
            Group(It.department) >>
            Record(
               :name => It.department,
               :employee =>
                   It.employee >>
                   Collect(:department => nothing))

    chicago′[Restructure]
Expected output:
      │ department                                                                │
      │ name    employee{name,position,salary,rate}                               │
    ──┼───────────────────────────────────────────────────────────────────────────┼
    1 │ FIRE    JAMES A, FIRE ENGINEER-EMT, 103350, missing; DANIEL A, FIREFIGHTE…│
    2 │ OEMC    LAKENYA A, CROSSING GUARD, missing, 17.68; DORIS A, CROSSING GUAR…│
    3 │ POLICE  JEFFERY A, SERGEANT, 101442, missing; NANCY A, POLICE OFFICER, 80…│
Actual output:
    ERROR: cannot find "department" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:286 [inlined]
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Group(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Navigation) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:2240
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Navigation, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [20] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [21] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:278 [inlined]
     [22] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::Pair{Symbol,DataKnots.Query}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [23] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [24] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [25] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [26] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [27] query at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130 [inlined]
     [28] getindex(::DataKnot, ::Pair{Symbol,DataKnots.Query}; kws::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:123
     [29] getindex(::DataKnot, ::Pair{Symbol,DataKnots.Query}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:123
     [30] top-level scope at tutorial.md:1263
     [31] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/tutorial.md, line 1276:
    chicago″ = chicago′[Restructure >> Collect]
Expected output:
    │ employee{name,department,position,sa… department{name,employee{name,positio…│
    ┼─────────────────────────────────────────────────────────────────────────────┼
    │ JEFFERY A, POLICE, SERGEANT, 101442,… FIRE, [JAMES A, FIRE ENGINEER-EMT, 10…│
Actual output:
    ERROR: cannot find "department" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:286 [inlined]
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Group(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Navigation) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:2240
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Navigation, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [20] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [21] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::Pair{Symbol,DataKnots.Query}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:278
     [22] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::Pair{Symbol,DataKnots.Query}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [23] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [24] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [25] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [26] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [27] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [28] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [29] query at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130 [inlined]
     [30] getindex(::DataKnot, ::DataKnots.Query; kws::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:123
     [31] getindex(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:123
     [32] top-level scope at tutorial.md:1276
     [33] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/tutorial.md, line 1288:
    using Statistics: mean

    chicago″[
        It.department >>
        Record(
            It.name,
            :mean_salary => mean.(It.employee.salary))]
Expected output:
      │ department          │
      │ name    mean_salary │
    ──┼─────────────────────┼
    1 │ FIRE       100702.0 │
    2 │ OEMC        64392.0 │
    3 │ POLICE      84656.0 │
Actual output:
    ERROR: UndefVarError: chicago″ not defined
    Stacktrace:
     [1] top-level scope at tutorial.md:1290
     [2] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 295:
    tv = TupleVector(:name => ["GARRY M", "ANTHONY R", "DANA A"],
                     :salary => [260004, 185364, 170112])
Expected output:
    @VectorTree (name = String, salary = Int64) [(name = "GARRY M", salary = 260004) … ]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:113
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 309:
    TupleVector(:salary => [260004, 185364, 170112], "#B" => [true, false, false])
Expected output:
    @VectorTree (salary = Int64, "#B" = Bool) [(salary = 260004, #B = 1) … ]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:113
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 314:
    TupleVector(length(tv), columns(tv))
Expected output:
    @VectorTree (String, Int64) [("GARRY M", 260004) … ]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:113
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 329:
    labels(tv)
Expected output:
    Symbol[:name, :salary]
Actual output:
    [:name, :salary]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 416:
    bv = BlockVector([1, 3, 5, 7], ["JEFFERY A", "NANCY A", "JAMES A", "DANIEL A", "LAKENYA A", "DORIS A"])
Expected output:
    @VectorTree (0:N) × String [["JEFFERY A", "NANCY A"], ["JAMES A", "DANIEL A"], ["LAKENYA A", "DORIS A"]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 430:
    BlockVector([1, 1, 1, 1, 1, 2, 3], [17.68, 19.38], x0to1)
Expected output:
    @VectorTree (0:1) × Float64 [missing, missing, missing, missing, 17.68, 19.38]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Float64,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Float64,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 433:
    BlockVector([1, 3, 5, 7], ["JEFFERY A", "NANCY A", "JAMES A", "DANIEL A", "LAKENYA A", "DORIS A"], x1toN)
Expected output:
    @VectorTree (1:N) × String [["JEFFERY A", "NANCY A"], ["JAMES A", "DANIEL A"], ["LAKENYA A", "DORIS A"]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 439:
    BlockVector(:, ["POLICE", "FIRE", "OEMC"])
Expected output:
    @VectorTree (1:1) × String ["POLICE", "FIRE", "OEMC"]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 483:
    elts = ["POLICE", "FIRE", "HEALTH", "AVIATION", "WATER MGMNT", "FINANCE"]

    reg_bv = BlockVector(:, elts)
Expected output:
    @VectorTree (1:1) × String ["POLICE", "FIRE", "HEALTH", "AVIATION", "WATER MGMNT", "FINANCE"]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 488:
    opt_bv = BlockVector([1, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7], elts, x0to1)
Expected output:
    @VectorTree (0:1) × String ["POLICE", "FIRE", missing, "HEALTH", missing, "AVIATION", "WATER MGMNT", missing, missing, "FINANCE"]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 491:
    plu_bv = BlockVector([1, 1, 1, 2, 2, 4, 4, 6, 7], elts)
Expected output:
    @VectorTree (0:N) × String [[], [], ["POLICE"], [], ["FIRE", "HEALTH"], [], ["AVIATION", "WATER MGMNT"], ["FINANCE"]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 494:
    reg_bv[[1,3,5,3]]
Expected output:
    @VectorTree (1:1) × String ["POLICE", "HEALTH", "WATER MGMNT", "HEALTH"]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 497:
    plu_bv[[1,3,5,3]]
Expected output:
    @VectorTree (0:N) × String [[], ["POLICE"], ["FIRE", "HEALTH"], ["POLICE"]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 500:
    reg_bv[Base.OneTo(4)]
Expected output:
    @VectorTree (1:1) × String ["POLICE", "FIRE", "HEALTH", "AVIATION"]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 503:
    reg_bv[Base.OneTo(6)]
Expected output:
    @VectorTree (1:1) × String ["POLICE", "FIRE", "HEALTH", "AVIATION", "WATER MGMNT", "FINANCE"]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x1to1,Base.OneTo{Int64},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 506:
    plu_bv[Base.OneTo(6)]
Expected output:
    @VectorTree (0:N) × String [[], [], ["POLICE"], [], ["FIRE", "HEALTH"], []]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 509:
    opt_bv[Base.OneTo(10)]
Expected output:
    @VectorTree (0:1) × String ["POLICE", "FIRE", missing, "HEALTH", missing, "AVIATION", "WATER MGMNT", missing, missing, "FINANCE"]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0to1,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 520:
    @VectorTree (name = String, salary = Int) [
        "GARRY M"   260004
        "ANTHONY R" 185364
        "DANA A"    170112
    ]
Expected output:
    @VectorTree (name = String, salary = Int64) [(name = "GARRY M", salary = 260004) … ]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:113
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 527:
    @VectorTree (name = String, salary = Int) [
        ("GARRY M", 260004),
        ("ANTHONY R", 185364),
        ("DANA A", 170112),
    ]
Expected output:
    @VectorTree (name = String, salary = Int64) [(name = "GARRY M", salary = 260004) … ]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:113
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 534:
    @VectorTree (name = String, salary = Int) [
        (name = "GARRY M", salary = 260004),
        (name = "ANTHONY R", salary = 185364),
        (name = "DANA A", salary = 170112),
    ]
Expected output:
    @VectorTree (name = String, salary = Int64) [(name = "GARRY M", salary = 260004) … ]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:113
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 543:
    @VectorTree (String, Int) ["GARRY M" 260004; "ANTHONY R" 185364; "DANA A" 170112]
Expected output:
    @VectorTree (String, Int64) [("GARRY M", 260004) … ]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:113
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 549:
    @VectorTree [String] [
        "HEALTH",
        ["FINANCE", "HUMAN RESOURCES"],
        missing,
        ["POLICE", "FIRE"],
    ]
Expected output:
    @VectorTree (0:N) × String [["HEALTH"], ["FINANCE", "HUMAN RESOURCES"], [], ["POLICE", "FIRE"]]
Actual output:
    @ERROR: MethodError: no method matching !(::Char)
    Closest candidates are:
      !(!Matched::Missing) at missing.jl:100
      !(!Matched::Bool) at bool.jl:35
      !(!Matched::Function) at operators.jl:885
    Stacktrace:
     [1] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}, ::Char, ::Char) at ./arrayshow.jl:461
     [2] show_vector(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at ./arrayshow.jl:458
     [3] show_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.PipeEndpoint}, ::DataKnots.BlockVector{DataKnots.x0toN,Array{Int64,1},Array{String,1}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:304
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/vectors.md, line 596:
    hier_data = @VectorTree (name = (1:1)String, employee = (0:N)(name = (1:1)String, salary = (0:1)Int)) [
        "POLICE"    ["GARRY M" 260004; "ANTHONY R" 185364; "DANA A" 170112]
        "FIRE"      ["JOSE S" 202728; "CHARLES S" 197736]
    ]
    display(hier_data)
Expected output:
    @VectorTree of 2 × (name = (1:1) × String,
                        employee = (0:N) × (name = (1:1) × String,
                                            salary = (0:1) × Int64)):
     (name = "POLICE", employee = [(name = "GARRY M", salary = 260004) … ])
     (name = "FIRE", employee = [(name = "JOSE S", salary = 202728) … ])
Actual output:
    @VectorTree of 2 × (name = (1:1) × String,
                        employee = (0:N) × (name = (1:1) × String,
                                            salary = (0:1) × Int64)):
    ERROR: BoundsError: attempt to access String
      at index [1]
    Stacktrace:
     [1] indexed_iterate(::String, ::Int64) at ./tuple.jl:85
     [2] show_vector(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}, ::Char, ::Char) at ./arrayshow.jl:458 (repeats 2 times)
     [3] show_vectortree(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:498
     [4] show(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::DataKnots.TupleVector{UnitRange{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:113
     [5] show(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::NamedTuple{(:name, :employee),Tuple{String,DataKnots.TupleVector{UnitRange{Int64}}}}) at ./namedtuple.jl:150
     [6] sprint(::Function, ::NamedTuple{(:name, :employee),Tuple{String,DataKnots.TupleVector{UnitRange{Int64}}}}; context::IOContext{Base.PipeEndpoint}, sizehint::Int64) at ./strings/io.jl:103
     [7] alignment(::IOContext{Base.PipeEndpoint}, ::NamedTuple{(:name, :employee),Tuple{String,DataKnots.TupleVector{UnitRange{Int64}}}}) at ./show.jl:2055
     [8] alignment(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Int64, ::Int64, ::Int64) at ./arrayshow.jl:68
     [9] print_matrix(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}, ::String, ::String, ::String, ::String, ::String, ::String, ::Int64, ::Int64) at ./arrayshow.jl:196
     [10] print_matrix at ./arrayshow.jl:169 [inlined]
     [11] print_array at ./arrayshow.jl:317 [inlined]
     [12] display_vectortree(::IOContext{Base.PipeEndpoint}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:506
     [13] show(::IOContext{Base.PipeEndpoint}, ::MIME{Symbol("text/plain")}, ::DataKnots.TupleVector{Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/vectors.jl:116
     [14] display(::TextDisplay, ::MIME{Symbol("text/plain")}, ::Any) at ./multimedia.jl:240
     [15] display(::TextDisplay, ::Any) at ./multimedia.jl:241
     [16] display(::Any) at ./multimedia.jl:326
     [17] top-level scope at vectors.md:600
     [18] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../README.md, line 36:
    using Statistics: mean

    @query chicago begin
        employee
        group(department)
        keep(avg_salary => mean(employee.salary))
        employee
        filter(salary > avg_salary)
    end
Expected output:
      │ employee                                         │
      │ name       department  position           salary │
    ──┼──────────────────────────────────────────────────┼
    1 │ JAMES A    FIRE        FIRE ENGINEER-EMT  103350 │
    2 │ JEFFERY A  POLICE      SERGEANT           101442 │
Actual output:
    ERROR: cannot find "department" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Group(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:2240
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [20] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [21] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [22] query(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130
     [23] top-level scope at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:199
     [24] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../README.md, line 63:
    using Statistics: mean

    chicago[It.employee >>
            Group(It.department) >>
            Keep(:avg_salary => mean.(It.employee.salary)) >>
            It.employee >>
            Filter(It.salary .> It.avg_salary)]
Expected output:
      │ employee                                         │
      │ name       department  position           salary │
    ──┼──────────────────────────────────────────────────┼
    1 │ JAMES A    FIRE        FIRE ENGINEER-EMT  103350 │
    2 │ JEFFERY A  POLICE      SERGEANT           101442 │
Actual output:
    ERROR: cannot find "department" at
    (0:N) × Any
    Stacktrace:
     [1] error(::String) at ./error.jl:33
     [2] Get(::DataKnots.Environment, ::DataKnots.Pipeline, ::Symbol) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1284
     [3] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:286 [inlined]
     [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]
     [5] _broadcast_getindex at ./broadcast.jl:604 [inlined]
     [6] getindex at ./broadcast.jl:564 [inlined]
     [7] macro expansion at ./broadcast.jl:910 [inlined]
     [8] macro expansion at ./simdloop.jl:77 [inlined]
     [9] copyto! at ./broadcast.jl:909 [inlined]
     [10] copyto! at ./broadcast.jl:864 [inlined]
     [11] copy at ./broadcast.jl:840 [inlined]
     [12] materialize(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(DataKnots.assemble),Tuple{Base.RefValue{DataKnots.Environment},Base.RefValue{DataKnots.Pipeline},Array{DataKnots.AbstractQuery,1}}}) at ./broadcast.jl:820
     [13] Group(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Navigation) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:2240
     [14] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [15] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Navigation, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [16] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [17] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [18] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [19] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [20] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [21] Compose(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query, ::Vararg{DataKnots.Query,N} where N) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:547
     [22] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [23] Each(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:1140
     [24] assemble(::DataKnots.Environment, ::DataKnots.Pipeline, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:281
     [25] assemble at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:152 [inlined]
     [26] assemble(::DataKnots.BlockOf, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:149
     [27] query(::DataKnot, ::DataKnots.Query, ::Array{Pair{Symbol,DataKnot},1}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:131
     [28] query at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:130 [inlined]
     [29] getindex(::DataKnot, ::DataKnots.Query; kws::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:123
     [30] getindex(::DataKnot, ::DataKnots.Query) at /home/pkgeval/.julia/packages/DataKnots/FyCA9/src/queries.jl:123
     [31] top-level scope at README.md:65
     [32] eval(::Module, ::Any) at ./boot.jl:331
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Tests passed: 674
Tests failed: 99
TESTING UNSUCCESSFUL!
ERROR: Package DataKnots errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1523
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:16
