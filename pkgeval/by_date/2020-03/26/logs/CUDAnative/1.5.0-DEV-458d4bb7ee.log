Julia Version 1.5.0-DEV.511
Commit 458d4bb7ee (2020-03-26 16:44 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TerminalMenus ────── v0.1.0
  Installed Cthulhu ──────────── v1.0.0
  Installed OrderedCollections ─ v1.1.0
  Installed MacroTools ───────── v0.5.5
  Installed BinaryProvider ───── v0.5.8
  Installed DataStructures ───── v0.17.10
  Installed CUDAdrv ──────────── v6.2.2
  Installed CUDAnative ───────── v3.0.1
  Installed CEnum ────────────── v0.2.0
  Installed TimerOutputs ─────── v0.5.3
  Installed Adapt ────────────── v1.0.1
  Installed CodeTracking ─────── v0.5.8
  Installed CUDAapi ──────────── v4.0.0
  Installed Compat ───────────── v2.2.0
  Installed LLVM ─────────────── v1.3.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   be33ccc6 + CUDAnative v3.0.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   79e6a3ab + Adapt v1.0.1
   b99e7846 + BinaryProvider v0.5.8
   fa961155 + CEnum v0.2.0
   3895d2a7 + CUDAapi v4.0.0
   c5f51814 + CUDAdrv v6.2.2
   be33ccc6 + CUDAnative v3.0.1
   da1fd8a2 + CodeTracking v0.5.8
   34da2185 + Compat v2.2.0
   f68482b8 + Cthulhu v1.0.0
   864edb3b + DataStructures v0.17.10
   929cbde3 + LLVM v1.3.4
   1914dd2f + MacroTools v0.5.5
   bac558e1 + OrderedCollections v1.1.0
   dc548174 + TerminalMenus v0.1.0
   a759f4b9 + TimerOutputs v0.5.3
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8bb1440f + DelimitedFiles
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   a63ad114 + Mmap
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   1a1011a3 + SharedArrays
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing CUDAnative
     Status `/tmp/jl_crEX8u/Project.toml`
   79e6a3ab Adapt v1.0.1
   b99e7846 BinaryProvider v0.5.8
   fa961155 CEnum v0.2.0
   3895d2a7 CUDAapi v4.0.0
   c5f51814 CUDAdrv v6.2.2
   be33ccc6 CUDAnative v3.0.1
   f68482b8 Cthulhu v1.0.0
   864edb3b DataStructures v0.17.10
   929cbde3 LLVM v1.3.4
   1914dd2f MacroTools v0.5.5
   a759f4b9 TimerOutputs v0.5.3
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   44cfe95a Pkg
   de0858da Printf
   8dfed614 Test
     Status `/tmp/jl_crEX8u/Manifest.toml`
   79e6a3ab Adapt v1.0.1
   b99e7846 BinaryProvider v0.5.8
   fa961155 CEnum v0.2.0
   3895d2a7 CUDAapi v4.0.0
   c5f51814 CUDAdrv v6.2.2
   be33ccc6 CUDAnative v3.0.1
   da1fd8a2 CodeTracking v0.5.8
   34da2185 Compat v2.2.0
   f68482b8 Cthulhu v1.0.0
   864edb3b DataStructures v0.17.10
   929cbde3 LLVM v1.3.4
   1914dd2f MacroTools v0.5.5
   bac558e1 OrderedCollections v1.1.0
   dc548174 TerminalMenus v0.1.0
   a759f4b9 TimerOutputs v0.5.3
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
[ Info: Testing using device Tesla T4 (compute capability 7.5.0, 14.570 GiB available memory) on CUDA driver 10.2.0 and toolkit 10.2.89
method caching: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/base.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached,),Tuple{Bool}}, ::Type{T} where T) at ./error.jl:157
   [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/base.jl:17
   [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/base.jl:7
   [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/base.jl:5
   [7] include(::String) at ./client.jl:441
   [8] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:153 [inlined]
   [9] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [10] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [11] include(::String) at ./client.jl:441
   [12] top-level scope at none:6
   [13] eval(::Module, ::Any) at ./boot.jl:331
   [14] exec_options(::Base.JLOptions) at ./client.jl:264
   [15] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
basic reflection: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] (::var"#28#93"{var"#valid_kernel#91"})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:11
   [18] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [19] sprint(::Function) at ./strings/io.jl:101
   [20] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:11
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [22] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:8
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [27] include(::String) at ./client.jl:441
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [31] include(::String) at ./client.jl:441
   [32] top-level scope at none:6
   [33] eval(::Module, ::Any) at ./boot.jl:331
   [34] exec_options(::Base.JLOptions) at ./client.jl:264
   [35] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
exceptions: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:29
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] code_llvm at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72 [inlined]
   [18] (::var"#29#96"{var"#foobar#95"})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:31
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:31
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:30
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [28] include(::String) at ./client.jl:441
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [32] include(::String) at ./client.jl:441
   [33] top-level scope at none:6
   [34] eval(::Module, ::Any) at ./boot.jl:331
   [35] exec_options(::Base.JLOptions) at ./client.jl:264
   [36] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
sysimg: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:39
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] code_llvm at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72 [inlined]
   [18] (::var"#30#98"{var"#576#foobar#97"})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:46
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:46
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:42
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [28] include(::String) at ./client.jl:441
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [32] include(::String) at ./client.jl:441
   [33] top-level scope at none:6
   [34] eval(::Module, ::Any) at ./boot.jl:331
   [35] exec_options(::Base.JLOptions) at ./client.jl:264
   [36] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
child functions: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:50
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] code_llvm at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72 [inlined]
   [18] (::var"#31#101"{var"#parent#100"{var"#child#99"}})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:55
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:55
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:52
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [28] include(::String) at ./client.jl:441
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [32] include(::String) at ./client.jl:441
   [33] top-level scope at none:6
   [34] eval(::Module, ::Any) at ./boot.jl:331
   [35] exec_options(::Base.JLOptions) at ./client.jl:264
   [36] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
JuliaLang/julia#21121: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:59
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] code_llvm at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72 [inlined]
   [18] (::var"#32#103"{var"#579#foobar#102"})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:67
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:67
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:60
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [28] include(::String) at ./client.jl:441
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [32] include(::String) at ./client.jl:441
   [33] top-level scope at none:6
   [34] eval(::Module, ::Any) at ./boot.jl:331
   [35] exec_options(::Base.JLOptions) at ./client.jl:264
   [36] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
wrapper function aggregate rewriting: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:72
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] code_llvm at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72 [inlined]
   [18] (::var"#33#105"{var"#kernel#104"})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:79
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:79
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:73
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:72
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [30] include(::String) at ./client.jl:441
   [31] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [32] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [34] include(::String) at ./client.jl:441
   [35] top-level scope at none:6
   [36] eval(::Module, ::Any) at ./boot.jl:331
   [37] exec_options(::Base.JLOptions) at ./client.jl:264
   [38] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
property_annotations: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:86
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] (::var"#35#108"{var"#582#kernel#107"})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:89
   [18] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [19] sprint(::Function) at ./strings/io.jl:101
   [20] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:89
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [22] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:87
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:72
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [29] include(::String) at ./client.jl:441
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [33] include(::String) at ./client.jl:441
   [34] top-level scope at none:6
   [35] eval(::Module, ::Any) at ./boot.jl:331
   [36] exec_options(::Base.JLOptions) at ./client.jl:264
   [37] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
LLVM D32593: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:122
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.DevNull, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] code_llvm(::Base.DevNull, ::Any, ::Any; cap::VersionNumber, kernel::Bool, optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74
   [17] code_llvm(::Base.DevNull, ::Any, ::Any) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72
   [18] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:130
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [20] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:123
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [22] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [25] include(::String) at ./client.jl:441
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [29] include(::String) at ./client.jl:441
   [30] top-level scope at none:6
   [31] eval(::Module, ::Any) at ./boot.jl:331
   [32] exec_options(::Base.JLOptions) at ./client.jl:264
   [33] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
kernel names: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:133
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] code_llvm at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72 [inlined]
   [18] (::var"#43#119"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#regular#115"})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:138
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint at ./strings/io.jl:101 [inlined]
   [21] (::var"#test_name#117"{var"#test_name#42#118"})(::Function, ::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:138
   [22] (::var"#test_name#117"{var"#test_name#42#118"})(::Function, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:138
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:142
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:134
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [30] include(::String) at ./client.jl:441
   [31] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [32] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [34] include(::String) at ./client.jl:441
   [35] top-level scope at none:6
   [36] eval(::Module, ::Any) at ./boot.jl:331
   [37] exec_options(::Base.JLOptions) at ./client.jl:264
   [38] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
PTX TBAA: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:148
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] (::var"#44#122"{var"#load#120"})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:153
   [18] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [19] sprint(::Function) at ./strings/io.jl:101
   [20] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:153
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [22] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:149
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [27] include(::String) at ./client.jl:441
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [31] include(::String) at ./client.jl:441
   [32] top-level scope at none:6
   [33] eval(::Module, ::Any) at ./boot.jl:331
   [34] exec_options(::Base.JLOptions) at ./client.jl:264
   [35] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
tracked pointers: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:174
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.DevNull, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:181
   [18] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [19] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:175
   [20] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [24] include(::String) at ./client.jl:441
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [26] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [28] include(::String) at ./client.jl:441
   [29] top-level scope at none:6
   [30] eval(::Module, ::Any) at ./boot.jl:331
   [31] exec_options(::Base.JLOptions) at ./client.jl:264
   [32] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
CUDAnative.jl#278: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:185
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.DevNull, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:190
   [18] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [19] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:190
   [20] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [24] include(::String) at ./client.jl:441
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [26] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [28] include(::String) at ./client.jl:441
   [29] top-level scope at none:6
   [30] eval(::Module, ::Any) at ./boot.jl:331
   [31] exec_options(::Base.JLOptions) at ./client.jl:264
   [32] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
ghost values: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:199
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] code_llvm at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72 [inlined]
   [18] (::var"#47#127")(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:202
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:202
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:200
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [28] include(::String) at ./client.jl:441
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [32] include(::String) at ./client.jl:441
   [33] top-level scope at none:6
   [34] eval(::Module, ::Any) at ./boot.jl:331
   [35] exec_options(::Base.JLOptions) at ./client.jl:264
   [36] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
CUDAnative.jl#553: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:213
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] code_llvm at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72 [inlined]
   [18] (::var"#49#130"{var"#587#kernel#129"})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:219
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:219
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:214
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [28] include(::String) at ./client.jl:441
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [32] include(::String) at ./client.jl:441
   [33] top-level scope at none:6
   [34] eval(::Module, ::Any) at ./boot.jl:331
   [35] exec_options(::Base.JLOptions) at ./client.jl:264
   [36] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
reinterpret(Nothing, nothing): Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:223
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.DevNull, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:225
   [18] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [19] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:224
   [20] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [24] include(::String) at ./client.jl:441
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [26] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [28] include(::String) at ./client.jl:441
   [29] top-level scope at none:6
   [30] eval(::Module, ::Any) at ./boot.jl:331
   [31] exec_options(::Base.JLOptions) at ./client.jl:264
   [32] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
ldg: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:228
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] code_llvm at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72 [inlined]
   [18] (::var"#50#132")(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:229
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:229
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:229
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:7
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [28] include(::String) at ./client.jl:441
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [32] include(::String) at ./client.jl:441
   [33] top-level scope at none:6
   [34] eval(::Module, ::Any) at ./boot.jl:331
   [35] exec_options(::Base.JLOptions) at ./client.jl:264
   [36] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
basic reflection: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:244
  Test threw exception
  Expression: CUDAnative.code_ptx(devnull, valid_kernel, Tuple{}) == nothing
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_ptx(::Base.DevNull, ::CUDAnative.CompilerJob; raw::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112
   [16] code_ptx(::Base.DevNull, ::Any, ::Any; cap::VersionNumber, kernel::Bool, raw::Bool, strict::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:109
   [17] code_ptx(::Base.DevNull, ::Any, ::Any) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:107
   [18] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:244
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [20] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:241
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [22] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:240
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
basic reflection: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:245
  Test threw exception
  Expression: CUDAnative.code_ptx(devnull, invalid_kernel, Tuple{}) == nothing
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_ptx(::Base.DevNull, ::CUDAnative.CompilerJob; raw::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112
   [16] code_ptx(::Base.DevNull, ::Any, ::Any; cap::VersionNumber, kernel::Bool, raw::Bool, strict::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:109
   [17] code_ptx(::Base.DevNull, ::Any, ::Any) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:107
   [18] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:245
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [20] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:241
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [22] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:240
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
child functions: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:249
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_ptx(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; raw::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112
   [16] #code_ptx#234 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:109 [inlined]
   [17] code_ptx at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:107 [inlined]
   [18] (::var"#51#137"{var"#594#parent#136"{var"#593#child#135"}})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:258
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:258
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:252
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:240
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [28] include(::String) at ./client.jl:441
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [32] include(::String) at ./client.jl:441
   [33] top-level scope at none:6
   [34] eval(::Module, ::Any) at ./boot.jl:331
   [35] exec_options(::Base.JLOptions) at ./client.jl:264
   [36] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
kernel functions: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:262
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_ptx(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; raw::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112
   [16] #code_ptx#234 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:109 [inlined]
   [17] (::var"#52#140"{var"#entry#139"{var"#nonentry#138"}})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:269
   [18] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [19] sprint(::Function) at ./strings/io.jl:101
   [20] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:269
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [22] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:263
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:240
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [27] include(::String) at ./client.jl:441
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [31] include(::String) at ./client.jl:441
   [32] top-level scope at none:6
   [33] eval(::Module, ::Any) at ./boot.jl:331
   [34] exec_options(::Base.JLOptions) at ./client.jl:264
   [35] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
idempotency: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:298
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_ptx(::Base.DevNull, ::CUDAnative.CompilerJob; raw::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112
   [16] code_ptx(::Base.DevNull, ::Any, ::Any; cap::VersionNumber, kernel::Bool, raw::Bool, strict::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:109
   [17] code_ptx(::Base.DevNull, ::Any, ::Any) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:107
   [18] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:302
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [20] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:301
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [22] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:240
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [25] include(::String) at ./client.jl:441
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [29] include(::String) at ./client.jl:441
   [30] top-level scope at none:6
   [31] eval(::Module, ::Any) at ./boot.jl:331
   [32] exec_options(::Base.JLOptions) at ./client.jl:264
   [33] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
child function reuse: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:306
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_ptx(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; raw::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112
   [16] #code_ptx#234 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:109 [inlined]
   [17] code_ptx at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:107 [inlined]
   [18] (::var"#58#149"{var"#parent1#148"{var"#597#child#147"}})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:316
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:316
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:310
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:240
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [28] include(::String) at ./client.jl:441
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [32] include(::String) at ./client.jl:441
   [33] top-level scope at none:6
   [34] eval(::Module, ::Any) at ./boot.jl:331
   [35] exec_options(::Base.JLOptions) at ./client.jl:264
   [36] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
child function reuse bis: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:328
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_ptx(::Base.DevNull, ::CUDAnative.CompilerJob; raw::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112
   [16] code_ptx(::Base.DevNull, ::Any, ::Any; cap::VersionNumber, kernel::Bool, raw::Bool, strict::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:109
   [17] code_ptx(::Base.DevNull, ::Any, ::Any) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:107
   [18] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:337
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [20] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:331
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [22] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:240
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [25] include(::String) at ./client.jl:441
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [29] include(::String) at ./client.jl:441
   [30] top-level scope at none:6
   [31] eval(::Module, ::Any) at ./boot.jl:331
   [32] exec_options(::Base.JLOptions) at ./client.jl:264
   [33] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
indirect sysimg function use: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:346
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_ptx(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; raw::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112
   [16] #code_ptx#234 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:109 [inlined]
   [17] code_ptx at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:107 [inlined]
   [18] (::var"#60#157"{var"#601#kernel#156"})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:358
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:358
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:352
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:240
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [28] include(::String) at ./client.jl:441
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [32] include(::String) at ./client.jl:441
   [33] top-level scope at none:6
   [34] eval(::Module, ::Any) at ./boot.jl:331
   [35] exec_options(::Base.JLOptions) at ./client.jl:264
   [36] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
compile for host after PTX: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:363
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_ptx(::Base.DevNull, ::CUDAnative.CompilerJob; raw::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112
   [16] code_ptx(::Base.DevNull, ::Any, ::Any; cap::VersionNumber, kernel::Bool, raw::Bool, strict::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:109
   [17] code_ptx(::Base.DevNull, ::Any, ::Any) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:107
   [18] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:376
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [20] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:365
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [22] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:240
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [25] include(::String) at ./client.jl:441
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [29] include(::String) at ./client.jl:441
   [30] top-level scope at none:6
   [31] eval(::Module, ::Any) at ./boot.jl:331
   [32] exec_options(::Base.JLOptions) at ./client.jl:264
   [33] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
LLVM intrinsics: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:380
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_ptx(::Base.DevNull, ::CUDAnative.CompilerJob; raw::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112
   [16] code_ptx(::Base.DevNull, ::Any, ::Any; cap::VersionNumber, kernel::Bool, raw::Bool, strict::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:109
   [17] code_ptx(::Base.DevNull, ::Any, ::Any) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:107
   [18] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:386
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [20] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:382
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [22] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:240
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [25] include(::String) at ./client.jl:441
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [29] include(::String) at ./client.jl:441
   [30] top-level scope at none:6
   [31] eval(::Module, ::Any) at ./boot.jl:331
   [32] exec_options(::Base.JLOptions) at ./client.jl:264
   [33] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
kernel names: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:389
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_ptx(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; raw::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112
   [16] #code_ptx#234 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:109 [inlined]
   [17] code_ptx at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:107 [inlined]
   [18] (::var"#63#166"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#605#regular#162"})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:394
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint at ./strings/io.jl:101 [inlined]
   [21] (::var"#607#test_name#164"{var"#test_name#62#165"})(::Function, ::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:394
   [22] (::var"#607#test_name#164"{var"#test_name#62#165"})(::Function, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:394
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:398
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:390
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:240
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [30] include(::String) at ./client.jl:441
   [31] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [32] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [34] include(::String) at ./client.jl:441
   [35] top-level scope at none:6
   [36] eval(::Module, ::Any) at ./boot.jl:331
   [37] exec_options(::Base.JLOptions) at ./client.jl:264
   [38] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
exception arguments: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:404
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_ptx(::Base.DevNull, ::CUDAnative.CompilerJob; raw::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112
   [16] code_ptx(::Base.DevNull, ::Any, ::Any; cap::VersionNumber, kernel::Bool, raw::Bool, strict::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:109
   [17] code_ptx(::Base.DevNull, ::Any, ::Any) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:107
   [18] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:410
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [20] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:405
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [22] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:240
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [25] include(::String) at ./client.jl:441
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [29] include(::String) at ./client.jl:441
   [30] top-level scope at none:6
   [31] eval(::Module, ::Any) at ./boot.jl:331
   [32] exec_options(::Base.JLOptions) at ./client.jl:264
   [33] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
GC and TLS lowering: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:413
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_ptx(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; raw::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112
   [16] #code_ptx#234 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:109 [inlined]
   [17] code_ptx at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:107 [inlined]
   [18] (::var"#64#170"{var"#609#kernel#169"{var"#inner#168"}})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:429
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:429
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:414
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:240
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [28] include(::String) at ./client.jl:441
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [32] include(::String) at ./client.jl:441
   [33] top-level scope at none:6
   [34] eval(::Module, ::Any) at ./boot.jl:331
   [35] exec_options(::Base.JLOptions) at ./client.jl:264
   [36] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
float boxes: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:455
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] code_llvm at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72 [inlined]
   [18] (::var"#66#174"{var"#611#kernel#173"})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:466
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:466
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:456
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:240
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [28] include(::String) at ./client.jl:441
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [32] include(::String) at ./client.jl:441
   [33] top-level scope at none:6
   [34] eval(::Module, ::Any) at ./boot.jl:331
   [35] exec_options(::Base.JLOptions) at ./client.jl:264
   [36] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
recursion: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(CUDAnative.code_llvm(devnull, recurse_outer, Tuple{Int}))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: CUDAnative.KernelError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:485
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:482
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
┌ Error: Failed to validate error message
│ MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
│ Closest candidates are:
│   Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
└ @ Main ~/.julia/packages/CUDAnative/j8fTC/test/util.jl:14
recursion: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
  Expression: ($(Expr(:escape, :(((msg,)->begin
        occursin("recursion is currently not supported", msg) && (occursin("[1] recurse_outer", msg) && (occursin("[2] recurse_inner", msg) && occursin("[3] recurse_outer", msg)))
    end)))))(msg)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:485
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:482
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
base intrinsics: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:493
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.DevNull, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] code_llvm at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72 [inlined]
   [18] #70 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:499 [inlined]
   [19] withenv(::var"#70#179"{var"#613#foobar#177"}, ::Pair{String,Nothing}) at ./env.jl:161
   [20] #69 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:498 [inlined]
   [21] with_logstate(::var"#69#178"{var"#613#foobar#177"}, ::Base.CoreLogging.LogState) at ./logging.jl:398
   [22] with_logger(::Function, ::Test.TestLogger) at ./logging.jl:505
   [23] #collect_test_logs#45 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/logging.jl:51 [inlined]
   [24] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:497
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:494
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
   [31] include(::String) at ./client.jl:441
   [32] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:155 [inlined]
   [33] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [35] include(::String) at ./client.jl:441
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:264
   [39] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(CUDAnative.code_llvm(foobar, Tuple{BigInt}; strict = true))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: CUDAnative.KernelError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:527
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:525
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
┌ Error: Failed to validate error message
│ MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
│ Closest candidates are:
│   Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
└ @ Main ~/.julia/packages/CUDAnative/j8fTC/test/util.jl:14
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
  Expression: ($(Expr(:escape, :(((msg,)->begin
        occursin("passing and using non-bitstype argument", msg) && occursin("BigInt", msg)
    end)))))(msg)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:527
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:525
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(CUDAnative.code_llvm(foobar, Tuple{Any}; strict = true))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: CUDAnative.KernelError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:534
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:525
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
┌ Error: Failed to validate error message
│ MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
│ Closest candidates are:
│   Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
└ @ Main ~/.julia/packages/CUDAnative/j8fTC/test/util.jl:14
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
  Expression: ($(Expr(:escape, :(((msg,)->begin
        occursin("passing and using non-bitstype argument", msg) && occursin("Any", msg)
    end)))))(msg)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:534
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:525
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(CUDAnative.code_llvm(foobar, Tuple{Union{Int32, Int64}}; strict = true))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: CUDAnative.KernelError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:540
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:525
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
┌ Error: Failed to validate error message
│ MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
│ Closest candidates are:
│   Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
└ @ Main ~/.julia/packages/CUDAnative/j8fTC/test/util.jl:14
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
  Expression: ($(Expr(:escape, :(((msg,)->begin
        occursin("passing and using non-bitstype argument", msg) && occursin("Union{Int32, Int64}", msg)
    end)))))(msg)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:540
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:525
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(CUDAnative.code_llvm(foobar, Tuple{Union{Int32, Int64}}; strict = true))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: CUDAnative.KernelError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:546
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:525
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
┌ Error: Failed to validate error message
│ MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
│ Closest candidates are:
│   Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
└ @ Main ~/.julia/packages/CUDAnative/j8fTC/test/util.jl:14
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
  Expression: ($(Expr(:escape, :(((msg,)->begin
        occursin("passing and using non-bitstype argument", msg) && occursin("Union{Int32, Int64}", msg)
    end)))))(msg)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:546
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:525
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(CUDAnative.code_llvm(foobar, Tuple{CleverType{BigInt}}; strict = true))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: CUDAnative.KernelError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:553
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:525
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
┌ Error: Failed to validate error message
│ MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
│ Closest candidates are:
│   Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
└ @ Main ~/.julia/packages/CUDAnative/j8fTC/test/util.jl:14
non-isbits arguments: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
  Expression: ($(Expr(:escape, :(((msg,)->begin
        occursin("passing and using non-bitstype argument", msg) && (occursin("CleverType", msg) && occursin("BigInt", msg))
    end)))))(msg)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:553
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:525
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
invalid LLVM IR: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(CUDAnative.code_llvm(foobar, Tuple{Int}; strict = true))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: CUDAnative.InvalidIRError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:564
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:562
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
┌ Error: Failed to validate error message
│ MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
│ Closest candidates are:
│   Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
└ @ Main ~/.julia/packages/CUDAnative/j8fTC/test/util.jl:14
invalid LLVM IR: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
  Expression: ($(Expr(:escape, :(((msg,)->begin
        occursin("invalid LLVM IR", msg) && (occursin(CUDAnative.RUNTIME_FUNCTION, msg) && (occursin("[1] println", msg) && occursin(r"\[2\] .+foobar", msg)))
    end)))))(msg)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:564
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:562
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
invalid LLVM IR (ccall): Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(CUDAnative.code_llvm(foobar, Tuple{Ptr{Int}}; strict = true))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: CUDAnative.InvalidIRError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:576
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:574
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
┌ Error: Failed to validate error message
│ MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
│ Closest candidates are:
│   Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
└ @ Main ~/.julia/packages/CUDAnative/j8fTC/test/util.jl:14
invalid LLVM IR (ccall): Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
  Expression: ($(Expr(:escape, :(((msg,)->begin
        occursin("invalid LLVM IR", msg) && (occursin(CUDAnative.POINTER_FUNCTION, msg) && occursin(r"\[1\] .+foobar", msg))
    end)))))(msg)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:576
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:574
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
delayed bindings: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(CUDAnative.code_llvm(kernel, Tuple{}; strict = true))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: CUDAnative.InvalidIRError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:587
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:585
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
┌ Error: Failed to validate error message
│ MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
│ Closest candidates are:
│   Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
└ @ Main ~/.julia/packages/CUDAnative/j8fTC/test/util.jl:14
delayed bindings: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
  Expression: ($(Expr(:escape, :(((msg,)->begin
        occursin("invalid LLVM IR", msg) && (occursin(CUDAnative.DELAYED_BINDING, msg) && (occursin("use of 'undefined'", msg) && occursin(r"\[1\] .+kernel", msg)))
    end)))))(msg)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:587
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:585
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
dynamic call (invoke): Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(CUDAnative.code_llvm(kernel, Tuple{Int, Ptr{Int}}; strict = true))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: CUDAnative.InvalidIRError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:600
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:597
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
┌ Error: Failed to validate error message
│ MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
│ Closest candidates are:
│   Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
└ @ Main ~/.julia/packages/CUDAnative/j8fTC/test/util.jl:14
dynamic call (invoke): Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
  Expression: ($(Expr(:escape, :(((msg,)->begin
        occursin("invalid LLVM IR", msg) && (occursin(CUDAnative.DYNAMIC_CALL, msg) && (occursin("call to nospecialize_child", msg) && occursin(r"\[1\] .+kernel", msg)))
    end)))))(msg)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:600
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:597
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
dynamic call (apply): Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
  Expression: try
    $(Expr(:escape, :(CUDAnative.code_llvm(func, Tuple{}; strict = true))))
catch err
    msg = sprint(showerror, err)
    rethrow()
end
    Expected: CUDAnative.InvalidIRError
      Thrown: MethodError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:5
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:612
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:610
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
┌ Error: Failed to validate error message
│ MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
│ Closest candidates are:
│   Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
└ @ Main ~/.julia/packages/CUDAnative/j8fTC/test/util.jl:14
dynamic call (apply): Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
  Expression: ($(Expr(:escape, :(((msg,)->begin
        occursin("invalid LLVM IR", msg) && (occursin(CUDAnative.DYNAMIC_CALL, msg) && (occursin("call to pointer", msg) && occursin("[1] func", msg)))
    end)))))(msg)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:16
 [2] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:612
 [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [4] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:610
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:481
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/codegen.jl:5
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
stripping invariant.load: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:7
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#kernel#208",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#kernel#208", ::Type{Tuple{CUDAnative.DevicePtr{Float64,CUDAnative.AS.Generic},Tuple{Float64,Float64}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:17
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:8
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:7
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:163 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
stripping const TBAA: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:21
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#926#kernel#209",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#926#kernel#209", ::Type{Tuple{CuDeviceArray{Int64,2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{Tuple{Int64,Int64},Tuple{Int64,Int64}}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:37
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:24
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:7
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:163 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
ptxas-compatible control flow: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:85
  Test threw exception
  Expression: cpu(input) == gpu(input)
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#927#kernel#211"{var"#throw_some#210"},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] (::var"#gpu#212"{var"#927#kernel#211"{var"#throw_some#210"}})(::Int64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:69
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:85
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:43
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:7
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:5
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
assume: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:88
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] code_llvm at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72 [inlined]
   [18] (::var"#206#215"{var"#foo#214"})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:90
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:90
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:89
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:7
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:5
   [28] include(::String) at ./client.jl:441
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:163 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [32] include(::String) at ./client.jl:441
   [33] top-level scope at none:6
   [34] eval(::Module, ::Any) at ./boot.jl:331
   [35] exec_options(::Base.JLOptions) at ./client.jl:264
   [36] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
basic reflection: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:109
  Test threw exception
  Expression: CUDAnative.code_sass(devnull, valid_kernel, Tuple{}) == nothing
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] codegen at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:55 [inlined]
   [16] code_sass(::Base.DevNull, ::CUDAnative.CompilerJob; verbose::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:162
   [17] code_sass(::Base.DevNull, ::Any, ::Any; cap::VersionNumber, kernel::Bool, verbose::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:155
   [18] code_sass(::Base.DevNull, ::Any, ::Any) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:153
   [19] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:109
   [20] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:106
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:105
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:5
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
function name mangling: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:113
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] codegen at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:55 [inlined]
   [16] code_sass(::Base.DevNull, ::CUDAnative.CompilerJob; verbose::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:162
   [17] code_sass(::Base.DevNull, ::Any, ::Any; cap::VersionNumber, kernel::Bool, verbose::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:155
   [18] code_sass(::Base.DevNull, ::Any, ::Any) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:153
   [19] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:121
   [20] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:114
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:105
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/codegen.jl:5
   [26] include(::String) at ./client.jl:441
   [27] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:163 [inlined]
   [28] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [30] include(::String) at ./client.jl:441
   [31] top-level scope at none:6
   [32] eval(::Module, ::Any) at ./boot.jl:331
   [33] exec_options(::Base.JLOptions) at ./client.jl:264
   [34] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
low-level interface: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:13
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#dummy#271",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#dummy#271", ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 (repeats 2 times)
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:14 [inlined]
   [26] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [27] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:14 [inlined]
   [28] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:9 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [32] include(::String) at ./client.jl:441
   [33] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [34] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [35] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [36] include(::String) at ./client.jl:441
   [37] top-level scope at none:6
   [38] eval(::Module, ::Any) at ./boot.jl:331
   [39] exec_options(::Base.JLOptions) at ./client.jl:264
   [40] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
launch configuration: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:25
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#dummy#271",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#dummy#271", ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:26 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:26 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:9 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
compilation params: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:43
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#dummy#271",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#dummy#271", ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:44 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:44 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:9 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
reflection: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:51
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.DevNull, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] code_llvm(::Base.DevNull, ::Any, ::Any; cap::VersionNumber, kernel::Bool, optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74
   [17] code_llvm(::Base.DevNull, ::Any, ::Any) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72
   [18] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:55 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:52 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [22] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:9 [inlined]
   [23] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [24] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [25] include(::String) at ./client.jl:441
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [29] include(::String) at ./client.jl:441
   [30] top-level scope at none:6
   [31] eval(::Module, ::Any) at ./boot.jl:331
   [32] exec_options(::Base.JLOptions) at ./client.jl:264
   [33] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
shared memory: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:106
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#dummy#271",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#dummy#271", ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:107 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:107 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:9 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
streams: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:111
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#dummy#271",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#dummy#271", ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:113 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:112 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:9 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
external kernels: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:117
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(Main.KernelModule.external_dummy),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::typeof(Main.KernelModule.external_dummy), ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:123 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:118 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:9 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
calling device function: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:138
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#parent#309"{var"#child#308"},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#parent#309"{var"#child#308"}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:145 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:139 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:9 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
varargs: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:149
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#kernel#310",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:156 [inlined]
   [26] (::var"#238#313"{var"#kernel#310"})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:41
   [27] redirect_stdout(::var"#238#313"{var"#kernel#310"}, ::IOStream) at ./stream.jl:1152
   [28] #237 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:40 [inlined]
   [29] open(::var"#237#312"{var"#kernel#310"}, ::String, ::Vararg{String,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./io.jl:298
   [30] open at ./io.jl:296 [inlined]
   [31] #236 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:39 [inlined]
   [32] mktemp(::var"#236#311"{var"#kernel#310"}, ::String) at ./file.jl:659
   [33] mktemp(::Function) at ./file.jl:657
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:37 [inlined]
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:155 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:150 [inlined]
   [38] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:9 [inlined]
   [40] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [42] include(::String) at ./client.jl:441
   [43] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [44] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [45] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [46] include(::String) at ./client.jl:441
   [47] top-level scope at none:6
   [48] eval(::Module, ::Any) at ./boot.jl:331
   [49] exec_options(::Base.JLOptions) at ./client.jl:264
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
manually allocated: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:172
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1331#kernel#314",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1331#kernel#314", ::Type{Tuple{CUDAnative.DevicePtr{Float32,CUDAnative.AS.Generic},CUDAnative.DevicePtr{Float32,CUDAnative.AS.Generic}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:188 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:173 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
scalar through single-value array: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:193
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1332#kernel#315",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1332#kernel#315", ::Type{Tuple{CUDAnative.DevicePtr{Float32,CUDAnative.AS.Generic},CUDAnative.DevicePtr{Float32,CUDAnative.AS.Generic}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:210 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:194 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
scalar through single-value array, using device function: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:215
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1334#parent#317"{var"#1333#child#316"},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1334#parent#317"{var"#1333#child#316"}, ::Type{Tuple{CUDAnative.DevicePtr{Float32,CUDAnative.AS.Generic},CUDAnative.DevicePtr{Float32,CUDAnative.AS.Generic}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:235 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:216 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
tuples: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:240
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1339#kernel#318",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1339#kernel#318", ::Type{Tuple{Tuple{Bool},CUDAnative.DevicePtr{Int64,CUDAnative.AS.Generic}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:255 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:243 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
ghost function parameters: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:260
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1340#kernel#319",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1340#kernel#319", ::Type{Tuple{ExecGhost,CUDAnative.DevicePtr{Float32,CUDAnative.AS.Generic},CUDAnative.DevicePtr{Float32,CUDAnative.AS.Generic},CUDAnative.DevicePtr{Float32,CUDAnative.AS.Generic}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:279 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:263 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
immutables: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:296
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1341#kernel#321",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1341#kernel#321", ::Type{Tuple{CUDAnative.DevicePtr{Float32,CUDAnative.AS.Generic},Complex{Float32}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:307 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:299 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
automatic recompilation: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:312
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1344#kernel#322",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1344#kernel#322", ::Type{Tuple{CUDAnative.DevicePtr{Int64,CUDAnative.AS.Generic}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:320 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:313 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
automatic recompilation (bis): Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:333
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1346#kernel#323",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1346#kernel#323", ::Type{Tuple{CUDAnative.DevicePtr{Int64,CUDAnative.AS.Generic}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:343 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:334 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
non-isbits arguments: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:353
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#kernel1#324",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#kernel1#324", ::Type{Tuple{Type{Int64},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:358 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:354 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
splatting: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:368
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1347#kernel#326",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1347#kernel#326", ::Type{Tuple{CUDAnative.DevicePtr{Int64,CUDAnative.AS.Generic},Int64,Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:378 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:369 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
object invoke: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:390
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},KernelObject{Float64},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] (::var"#outer#327")(::CuPtr{Float64}, ::Float64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:404
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:410 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:393 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
closures: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:415
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#inner#329"{Float64},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] (::var"#1350#outer#328")(::CUDAnative.CuHostArray{Float64,1}, ::Float64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:422
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:428 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:416 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
conversions: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:433
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1355#kernel#330",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1355#kernel#330", ::Type{Tuple{Device,CUDAnative.DevicePtr{Int64,CUDAnative.AS.Generic}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:452 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:434 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
argument count: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:496
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::typeof(kernel), ::Type{Tuple{Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] eval at ./boot.jl:331 [inlined]
   [27] eval(::Expr) at ./client.jl:451
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:515 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:497 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [33] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
keyword arguments: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:520
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#241#335",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#241#335", ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:523 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:521 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
captured values: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:548
  Test threw exception
  Expression: f(1) == 1
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#kernel#341"{Int64},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] (::var"#f#340")(::Int64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:542
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:548 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:535 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
captured values: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:549
  Test threw exception
  Expression: f(2) == 2
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#kernel#341"{Int64},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] (::var"#f#340")(::Int64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:542
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:549 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:535 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:169 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
  
stack traces at different debug levels: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:575
  Expression: occursin("ERROR: KernelException: exception thrown during kernel execution on device", err)
   Evaluated: occursin("ERROR: KernelException: exception thrown during kernel execution on device", "[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...\nERROR: MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var\"#hook_module_setup#116\"(Core.Box(#undef)), module_activation=CUDAnative.var\"#hook_module_activation#117\"{CUDAnative.CompilerJob,CUDAnative.var\"#postprocess#115\",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var\"#postprocess#115\"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var\"#hook_emit_function#120\"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var\"#hook_emitted_function#121\"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)\nClosest candidates are:\n  Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument \"cached\"\nStacktrace:\n [1] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157\n")
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:575 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:560 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:558 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
stack traces at different debug levels: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:581
  Expression: occursin("ERROR: KernelException: exception thrown during kernel execution on device", err)
   Evaluated: occursin("ERROR: KernelException: exception thrown during kernel execution on device", "[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...\nERROR: MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var\"#hook_module_setup#116\"(Core.Box(#undef)), module_activation=CUDAnative.var\"#hook_module_activation#117\"{CUDAnative.CompilerJob,CUDAnative.var\"#postprocess#115\",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var\"#postprocess#115\"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var\"#hook_emit_function#120\"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var\"#hook_emitted_function#121\"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)\nClosest candidates are:\n  Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument \"cached\"\nStacktrace:\n [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var\"#hook_module_setup#116\",CUDAnative.var\"#hook_module_activation#117\"{CUDAnative.CompilerJob,CUDAnative.var\"#postprocess#115\",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var\"#hook_emit_function#120\"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var\"#hook_emitted_function#121\"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157\n [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151\n [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]\n [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168\n [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]\n [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]\n [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]\n [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96\n [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130\n [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140\n [11] (::CUDAnative.var\"#156#159\"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175\n [12] get!(::CUDAnative.var\"#156#159\"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450\n [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168\n [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92\n [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45\n [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]\n [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326\n [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]\n [19] get!(::CUDAnative.var\"#217#218\"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450\n [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]\n [21] macro expansion at ./lock.jl:183 [inlined]\n [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391\n [23] cufunction(::typeof(kernel), ::Type{Tuple{CUDAnative.DevicePtr{Int64,CUDAnative.AS.Generic},Float64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422\n [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422\n [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157\n")
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:581 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:560 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:558 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
stack traces at different debug levels: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:582
  Expression: occursin("ERROR: a exception was thrown during kernel execution", out)
   Evaluated: occursin("ERROR: a exception was thrown during kernel execution", "")
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:582 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:560 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:558 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
stack traces at different debug levels: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:583
  Expression: occursin("Run Julia on debug level 2 for device stack traces", out)
   Evaluated: occursin("Run Julia on debug level 2 for device stack traces", "")
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:583 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:560 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:558 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
stack traces at different debug levels: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:588
  Expression: occursin("ERROR: KernelException: exception thrown during kernel execution on device", err)
   Evaluated: occursin("ERROR: KernelException: exception thrown during kernel execution on device", "[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...\nERROR: MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var\"#hook_module_setup#116\"(Core.Box(#undef)), module_activation=CUDAnative.var\"#hook_module_activation#117\"{CUDAnative.CompilerJob,CUDAnative.var\"#postprocess#115\",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var\"#postprocess#115\"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var\"#hook_emit_function#120\"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var\"#hook_emitted_function#121\"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)\nClosest candidates are:\n  Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument \"cached\"\nStacktrace:\n [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var\"#hook_module_setup#116\",CUDAnative.var\"#hook_module_activation#117\"{CUDAnative.CompilerJob,CUDAnative.var\"#postprocess#115\",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var\"#hook_emit_function#120\"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var\"#hook_emitted_function#121\"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157\n [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151\n [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]\n [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168\n [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]\n [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]\n [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]\n [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96\n [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130\n [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140\n [11] (::CUDAnative.var\"#156#159\"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175\n [12] get!(::CUDAnative.var\"#156#159\"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450\n [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168\n [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92\n [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45\n [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]\n [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326\n [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]\n [19] get!(::CUDAnative.var\"#217#218\"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450\n [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]\n [21] macro expansion at ./lock.jl:183 [inlined]\n [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391\n [23] cufunction(::typeof(kernel), ::Type{Tuple{CUDAnative.DevicePtr{Int64,CUDAnative.AS.Generic},Float64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422\n [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422\n [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157\n")
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:588 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:560 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:558 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
stack traces at different debug levels: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:589
  Expression: occursin("ERROR: a exception was thrown during kernel execution", out)
   Evaluated: occursin("ERROR: a exception was thrown during kernel execution", "")
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:589 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:560 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:558 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
stack traces at different debug levels: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:593
  Expression: occursin("[1] Int64 at float.jl", out)
   Evaluated: occursin("[1] Int64 at float.jl", "")
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:593 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:560 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:558 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
stack traces at different debug levels: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:595
  Expression: occursin("[2] kernel at none:2", out)
   Evaluated: occursin("[2] kernel at none:2", "")
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:595 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:560 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:558 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
#329: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:615
  Expression: occursin("ERROR: KernelException: exception thrown during kernel execution on device", err)
   Evaluated: occursin("ERROR: KernelException: exception thrown during kernel execution on device", "[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...\nERROR: MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var\"#hook_module_setup#116\"(Core.Box(#undef)), module_activation=CUDAnative.var\"#hook_module_activation#117\"{CUDAnative.CompilerJob,CUDAnative.var\"#postprocess#115\",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var\"#postprocess#115\"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var\"#hook_emit_function#120\"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var\"#hook_emitted_function#121\"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)\nClosest candidates are:\n  Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument \"cached\"\nStacktrace:\n [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var\"#hook_module_setup#116\",CUDAnative.var\"#hook_module_activation#117\"{CUDAnative.CompilerJob,CUDAnative.var\"#postprocess#115\",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var\"#hook_emit_function#120\"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var\"#hook_emitted_function#121\"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157\n [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151\n [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]\n [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168\n [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]\n [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]\n [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]\n [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96\n [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130\n [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140\n [11] (::CUDAnative.var\"#156#159\"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175\n [12] get!(::CUDAnative.var\"#156#159\"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450\n [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168\n [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92\n [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45\n [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]\n [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326\n [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]\n [19] get!(::CUDAnative.var\"#217#218\"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(bar),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450\n [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]\n [21] macro expansion at ./lock.jl:183 [inlined]\n [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391\n [23] cufunction(::typeof(bar), ::Type{Tuple{CuDeviceArray{Int64,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422\n [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422\n [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157\n")
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:615 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:602 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:558 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
#329: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:616
  Expression: occursin("ERROR: a exception was thrown during kernel execution", out)
   Evaluated: occursin("ERROR: a exception was thrown during kernel execution", "")
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:616 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:602 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:558 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
#329: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:617
  Expression: occursin("foo at none:1", out)
   Evaluated: occursin("foo at none:1", "")
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:617 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:602 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:558 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
#329: Test Failed at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:618
  Expression: occursin("bar at none:2", out)
   Evaluated: occursin("bar at none:2", "")
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:618 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:602 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:558 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
trap: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:629
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1376#kernel#343"{var"#trap#342"},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1376#kernel#343"{var"#trap#342"}, ::Type{Tuple{Int32,CUDAnative.DevicePtr{Int32,CUDAnative.AS.Generic}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:657 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:630 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:629 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
unreachable: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:668
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1382#kernel#345"{var"#unreachable#344"},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1382#kernel#345"{var"#unreachable#344"}, ::Type{Tuple{Int32,CUDAnative.DevicePtr{Int32,CUDAnative.AS.Generic}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:697 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:669 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:629 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
mapreduce (full): Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:757
  Test threw exception
  Expression: mapreduce(identity, +, A) ≈ mapreduce_gpu(identity, +, dA)
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#reduce_kernel#348",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#reduce_kernel#348", ::Type{Tuple{typeof(identity),typeof(+),Float32,CuDeviceArray{Float32,1,CUDAnative.AS.Global},Val{256},CuDeviceArray{Float32,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] (::var"#mapreduce_gpu#346"{var"#mapreduce_gpu#246#347"})(::Function, ::Function, ::CUDAnative.CuHostArray{Float32,1}; dims::Function, init::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:715
   [27] (::var"#mapreduce_gpu#346"{var"#mapreduce_gpu#246#347"})(::Function, ::Function, ::CUDAnative.CuHostArray{Float32,1}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:710
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:757 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:709 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:629 [inlined]
   [33] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
mapreduce (full, complex): Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:809
  Test threw exception
  Expression: mapreduce(identity, +, A) ≈ mapreduce_gpu(identity, +, dA)
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1390#reduce_kernel#351",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1390#reduce_kernel#351", ::Type{Tuple{typeof(identity),typeof(+),Complex{Float32},CuDeviceArray{Complex{Float32},1,CUDAnative.AS.Global},Val{256},CuDeviceArray{Complex{Float32},1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] (::var"#1389#mapreduce_gpu#349"{var"#mapreduce_gpu#247#350"})(::Function, ::Function, ::CUDAnative.CuHostArray{Complex{Float32},1}; dims::Function, init::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:767
   [27] (::var"#1389#mapreduce_gpu#349"{var"#mapreduce_gpu#247#350"})(::Function, ::Function, ::CUDAnative.CuHostArray{Complex{Float32},1}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:762
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:809 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:761 [inlined]
   [31] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [32] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:629 [inlined]
   [33] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
mapreduce (reduced): Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:859
  Test threw exception
  Expression: mapreduce(identity, +, A) ≈ mapreduce_gpu(identity, +, dA)
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1394#reduce_kernel#353",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1394#reduce_kernel#353", ::Type{Tuple{typeof(identity),typeof(+),Int64,CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Int64,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] (::var"#1393#mapreduce_gpu#352")(::Function, ::Function, ::CUDAnative.CuHostArray{Int64,1}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:818
   [27] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:859 [inlined]
   [28] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:813 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:629 [inlined]
   [32] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
basic usage: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:868
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#hello#354",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:881 [inlined]
   [26] (::var"#250#357"{var"#hello#354"})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:41
   [27] redirect_stdout(::var"#250#357"{var"#hello#354"}, ::IOStream) at ./stream.jl:1152
   [28] #249 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:40 [inlined]
   [29] open(::var"#249#356"{var"#hello#354"}, ::String, ::Vararg{String,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./io.jl:298
   [30] open at ./io.jl:296 [inlined]
   [31] #248 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:39 [inlined]
   [32] mktemp(::var"#248#355"{var"#hello#354"}, ::String) at ./file.jl:659
   [33] mktemp(::Function) at ./file.jl:657
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:37 [inlined]
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:880 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:869 [inlined]
   [38] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:868 [inlined]
   [40] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [42] include(::String) at ./client.jl:441
   [43] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [44] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [45] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [46] include(::String) at ./client.jl:441
   [47] top-level scope at none:6
   [48] eval(::Module, ::Any) at ./boot.jl:331
   [49] exec_options(::Base.JLOptions) at ./client.jl:264
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
anonymous functions: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:887
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1398#hello#358",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:896 [inlined]
   [26] (::var"#254#362"{var"#1398#hello#358"})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:41
   [27] redirect_stdout(::var"#254#362"{var"#1398#hello#358"}, ::IOStream) at ./stream.jl:1152
   [28] #253 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:40 [inlined]
   [29] open(::var"#253#361"{var"#1398#hello#358"}, ::String, ::Vararg{String,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./io.jl:298
   [30] open at ./io.jl:296 [inlined]
   [31] #252 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:39 [inlined]
   [32] mktemp(::var"#252#360"{var"#1398#hello#358"}, ::String) at ./file.jl:659
   [33] mktemp(::Function) at ./file.jl:657
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:37 [inlined]
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:895 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:888 [inlined]
   [38] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:868 [inlined]
   [40] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [42] include(::String) at ./client.jl:441
   [43] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [44] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [45] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [46] include(::String) at ./client.jl:441
   [47] top-level scope at none:6
   [48] eval(::Module, ::Any) at ./boot.jl:331
   [49] exec_options(::Base.JLOptions) at ./client.jl:264
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
closures: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:903
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1400#hello#363",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:913 [inlined]
   [26] (::var"#258#367"{var"#1400#hello#363"})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:41
   [27] redirect_stdout(::var"#258#367"{var"#1400#hello#363"}, ::IOStream) at ./stream.jl:1152
   [28] #257 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:40 [inlined]
   [29] open(::var"#257#366"{var"#1400#hello#363"}, ::String, ::Vararg{String,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./io.jl:298
   [30] open at ./io.jl:296 [inlined]
   [31] #256 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:39 [inlined]
   [32] mktemp(::var"#256#365"{var"#1400#hello#363"}, ::String) at ./file.jl:659
   [33] mktemp(::Function) at ./file.jl:657
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:37 [inlined]
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:912 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:904 [inlined]
   [38] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:868 [inlined]
   [40] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [42] include(::String) at ./client.jl:441
   [43] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [44] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [45] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [46] include(::String) at ./client.jl:441
   [47] top-level scope at none:6
   [48] eval(::Module, ::Any) at ./boot.jl:331
   [49] exec_options(::Base.JLOptions) at ./client.jl:264
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
argument passing: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:920
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1402#kernel#368",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1402#kernel#368", ::Type{Tuple{Int16,Int32,Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:933 [inlined]
   [27] (::var"#261#371"{Tuple{Int16,Int32,Int64}})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:41
   [28] redirect_stdout(::var"#261#371"{Tuple{Int16,Int32,Int64}}, ::IOStream) at ./stream.jl:1152
   [29] #260 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:40 [inlined]
   [30] open(::var"#260#370"{Tuple{Int16,Int32,Int64}}, ::String, ::Vararg{String,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./io.jl:298
   [31] open at ./io.jl:296 [inlined]
   [32] #259 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:39 [inlined]
   [33] mktemp(::var"#259#369"{Tuple{Int16,Int32,Int64}}, ::String) at ./file.jl:659
   [34] mktemp(::Function) at ./file.jl:657
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:37 [inlined]
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:932 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:923 [inlined]
   [39] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [40] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:868 [inlined]
   [41] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [42] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [43] include(::String) at ./client.jl:441
   [44] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [45] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [46] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [47] include(::String) at ./client.jl:441
   [48] top-level scope at none:6
   [49] eval(::Module, ::Any) at ./boot.jl:331
   [50] exec_options(::Base.JLOptions) at ./client.jl:264
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
self-recursion: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:957
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:969 [inlined]
   [26] (::var"#264#375")() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:41
   [27] redirect_stdout(::var"#264#375", ::IOStream) at ./stream.jl:1152
   [28] #263 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:40 [inlined]
   [29] open(::var"#263#374", ::String, ::Vararg{String,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./io.jl:298
   [30] open at ./io.jl:296 [inlined]
   [31] #262 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:39 [inlined]
   [32] mktemp(::var"#262#373", ::String) at ./file.jl:659
   [33] mktemp(::Function) at ./file.jl:657
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:37 [inlined]
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:968 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:958 [inlined]
   [38] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:868 [inlined]
   [40] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [42] include(::String) at ./client.jl:441
   [43] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [44] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [45] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [46] include(::String) at ./client.jl:441
   [47] top-level scope at none:6
   [48] eval(::Module, ::Any) at ./boot.jl:331
   [49] exec_options(::Base.JLOptions) at ./client.jl:264
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
deep recursion: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:975
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(kernel_a),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:1000 [inlined]
   [26] (::var"#267#378")() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:41
   [27] redirect_stdout(::var"#267#378", ::IOStream) at ./stream.jl:1152
   [28] #266 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:40 [inlined]
   [29] open(::var"#266#377", ::String, ::Vararg{String,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./io.jl:298
   [30] open at ./io.jl:296 [inlined]
   [31] #265 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:39 [inlined]
   [32] mktemp(::var"#265#376", ::String) at ./file.jl:659
   [33] mktemp(::Function) at ./file.jl:657
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:37 [inlined]
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:999 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:976 [inlined]
   [38] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:868 [inlined]
   [40] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [42] include(::String) at ./client.jl:441
   [43] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [44] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [45] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [46] include(::String) at ./client.jl:441
   [47] top-level scope at none:6
   [48] eval(::Module, ::Any) at ./boot.jl:331
   [49] exec_options(::Base.JLOptions) at ./client.jl:264
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
streams: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:1006
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1409#hello#379",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:1021 [inlined]
   [26] (::var"#270#382"{var"#1409#hello#379"})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:41
   [27] redirect_stdout(::var"#270#382"{var"#1409#hello#379"}, ::IOStream) at ./stream.jl:1152
   [28] #269 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:40 [inlined]
   [29] open(::var"#269#381"{var"#1409#hello#379"}, ::String, ::Vararg{String,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./io.jl:298
   [30] open at ./io.jl:296 [inlined]
   [31] #268 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:39 [inlined]
   [32] mktemp(::var"#268#380"{var"#1409#hello#379"}, ::String) at ./file.jl:659
   [33] mktemp(::Function) at ./file.jl:657
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:37 [inlined]
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:1020 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:1007 [inlined]
   [38] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [39] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:868 [inlined]
   [40] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [41] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [42] include(::String) at ./client.jl:441
   [43] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [44] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [45] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [46] include(::String) at ./client.jl:441
   [47] top-level scope at none:6
   [48] eval(::Module, ::Any) at ./boot.jl:331
   [49] exec_options(::Base.JLOptions) at ./client.jl:264
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
cooperative groups: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:1033
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#kernel_vadd#383",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#kernel_vadd#383", ::Type{Tuple{CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [26] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:1049 [inlined]
   [27] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [28] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:1034 [inlined]
   [29] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [31] include(::String) at ./client.jl:441
   [32] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [33] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [35] include(::String) at ./client.jl:441
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:264
   [39] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
threading: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:1058
  Got exception outside of a @test
  TaskFailedException:
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1417#kernel#384",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:1069 [inlined]
   [26] (::var"#1316#threadsfor_fun#385"{Array{Any,1},var"#1417#kernel#384",UnitRange{Int64}})(::Bool) at ./threadingconstructs.jl:61
   [27] (::var"#1316#threadsfor_fun#385"{Array{Any,1},var"#1417#kernel#384",UnitRange{Int64}})() at ./threadingconstructs.jl:28
  Stacktrace:
   [1] wait(::Task) at ./task.jl:267
   [2] macro expansion at ./threadingconstructs.jl:69 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:1066 [inlined]
   [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:1059 [inlined]
   [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [7] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/execution.jl:5
   [8] include(::String) at ./client.jl:441
   [9] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:164 [inlined]
   [10] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [11] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [12] include(::String) at ./client.jl:441
   [13] top-level scope at none:6
   [14] eval(::Module, ::Any) at ./boot.jl:331
   [15] exec_options(::Base.JLOptions) at ./client.jl:264
   [16] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int8, cached = false: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#678#388"{CUDAnative.DevicePtr{Int8,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int8,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#678#388"{CUDAnative.DevicePtr{Int8,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int8,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:18
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int8, cached = true: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#674#387"{CUDAnative.DevicePtr{Int8,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int8,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#674#387"{CUDAnative.DevicePtr{Int8,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int8,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:16
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = UInt16, cached = false: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#678#388"{CUDAnative.DevicePtr{UInt16,CUDAnative.AS.Global},CUDAnative.DevicePtr{UInt16,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#678#388"{CUDAnative.DevicePtr{UInt16,CUDAnative.AS.Global},CUDAnative.DevicePtr{UInt16,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:18
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = UInt16, cached = true: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#674#387"{CUDAnative.DevicePtr{UInt16,CUDAnative.AS.Global},CUDAnative.DevicePtr{UInt16,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#674#387"{CUDAnative.DevicePtr{UInt16,CUDAnative.AS.Global},CUDAnative.DevicePtr{UInt16,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:16
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int32, cached = false: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#678#388"{CUDAnative.DevicePtr{Int32,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int32,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#678#388"{CUDAnative.DevicePtr{Int32,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int32,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:18
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int32, cached = true: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#674#387"{CUDAnative.DevicePtr{Int32,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int32,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#674#387"{CUDAnative.DevicePtr{Int32,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int32,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:16
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = UInt32, cached = false: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#678#388"{CUDAnative.DevicePtr{UInt32,CUDAnative.AS.Global},CUDAnative.DevicePtr{UInt32,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#678#388"{CUDAnative.DevicePtr{UInt32,CUDAnative.AS.Global},CUDAnative.DevicePtr{UInt32,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:18
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = UInt32, cached = true: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#674#387"{CUDAnative.DevicePtr{UInt32,CUDAnative.AS.Global},CUDAnative.DevicePtr{UInt32,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#674#387"{CUDAnative.DevicePtr{UInt32,CUDAnative.AS.Global},CUDAnative.DevicePtr{UInt32,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:16
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int64, cached = false: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#678#388"{CUDAnative.DevicePtr{Int64,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int64,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#678#388"{CUDAnative.DevicePtr{Int64,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int64,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:18
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int64, cached = true: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#674#387"{CUDAnative.DevicePtr{Int64,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int64,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#674#387"{CUDAnative.DevicePtr{Int64,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int64,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:16
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = UInt64, cached = false: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#678#388"{CUDAnative.DevicePtr{UInt64,CUDAnative.AS.Global},CUDAnative.DevicePtr{UInt64,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#678#388"{CUDAnative.DevicePtr{UInt64,CUDAnative.AS.Global},CUDAnative.DevicePtr{UInt64,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:18
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = UInt64, cached = true: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#674#387"{CUDAnative.DevicePtr{UInt64,CUDAnative.AS.Global},CUDAnative.DevicePtr{UInt64,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#674#387"{CUDAnative.DevicePtr{UInt64,CUDAnative.AS.Global},CUDAnative.DevicePtr{UInt64,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:16
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int128, cached = false: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#678#388"{CUDAnative.DevicePtr{Int128,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int128,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#678#388"{CUDAnative.DevicePtr{Int128,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int128,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:18
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int128, cached = true: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#674#387"{CUDAnative.DevicePtr{Int128,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int128,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#674#387"{CUDAnative.DevicePtr{Int128,CUDAnative.AS.Global},CUDAnative.DevicePtr{Int128,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:16
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Float32, cached = false: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#678#388"{CUDAnative.DevicePtr{Float32,CUDAnative.AS.Global},CUDAnative.DevicePtr{Float32,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#678#388"{CUDAnative.DevicePtr{Float32,CUDAnative.AS.Global},CUDAnative.DevicePtr{Float32,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:18
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Float32, cached = true: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#674#387"{CUDAnative.DevicePtr{Float32,CUDAnative.AS.Global},CUDAnative.DevicePtr{Float32,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#674#387"{CUDAnative.DevicePtr{Float32,CUDAnative.AS.Global},CUDAnative.DevicePtr{Float32,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:16
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Float64, cached = false: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#678#388"{CUDAnative.DevicePtr{Float64,CUDAnative.AS.Global},CUDAnative.DevicePtr{Float64,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#678#388"{CUDAnative.DevicePtr{Float64,CUDAnative.AS.Global},CUDAnative.DevicePtr{Float64,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:18
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Float64, cached = true: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#674#387"{CUDAnative.DevicePtr{Float64,CUDAnative.AS.Global},CUDAnative.DevicePtr{Float64,CUDAnative.AS.Global}},DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#674#387"{CUDAnative.DevicePtr{Float64,CUDAnative.AS.Global},CUDAnative.DevicePtr{Float64,CUDAnative.AS.Global}}, ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:16
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
indexing: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:24
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#kernel#389",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#kernel#389", ::Type{Tuple{CUDAnative.DevicePtr{Complex{Int8},CUDAnative.AS.Global},CUDAnative.DevicePtr{Complex{Int8},CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:36
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:25
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:5
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/pointer.jl:3
   [33] include(::String) at ./client.jl:441
   [34] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:165 [inlined]
   [35] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [37] include(::String) at ./client.jl:441
   [38] top-level scope at none:6
   [39] eval(::Module, ::Any) at ./boot.jl:331
   [40] exec_options(::Base.JLOptions) at ./client.jl:264
   [41] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
basics: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:48
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#kernel#391",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#kernel#391", ::Type{Tuple{CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:67
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:49
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:3
   [31] include(::String) at ./client.jl:441
   [32] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:166 [inlined]
   [33] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [35] include(::String) at ./client.jl:441
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:264
   [39] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
iteration: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:72
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1651#kernel#392",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1651#kernel#392", ::Type{Tuple{CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:88
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:73
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:3
   [31] include(::String) at ./client.jl:441
   [32] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:166 [inlined]
   [33] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [35] include(::String) at ./client.jl:441
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:264
   [39] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
#313: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:94
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_llvm(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; optimize::Bool, raw::Bool, debuginfo::Symbol, dump_module::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:80
   [16] #code_llvm#231 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:74 [inlined]
   [17] code_llvm at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:72 [inlined]
   [18] (::var"#390#394"{DataType,var"#1656#kernel#393"})(::Base.GenericIOBuffer{Array{UInt8,1}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:102
   [19] sprint(::Function; context::Nothing, sizehint::Int64) at ./strings/io.jl:105
   [20] sprint(::Function) at ./strings/io.jl:101
   [21] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:102
   [22] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [23] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:95
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:94
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:3
   [28] include(::String) at ./client.jl:441
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:166 [inlined]
   [30] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [32] include(::String) at ./client.jl:441
   [33] top-level scope at none:6
   [34] eval(::Module, ::Any) at ./boot.jl:331
   [35] exec_options(::Base.JLOptions) at ./client.jl:264
   [36] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
views: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:108
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1657#kernel#395",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#1657#kernel#395", ::Type{Tuple{CuDeviceArray{Int64,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:128
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:109
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:3
   [31] include(::String) at ./client.jl:441
   [32] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:166 [inlined]
   [33] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [35] include(::String) at ./client.jl:441
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:264
   [39] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
Const: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:144
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] code_ptx(::Base.GenericIOBuffer{Array{UInt8,1}}, ::CUDAnative.CompilerJob; raw::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112
   [16] code_ptx at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:112 [inlined]
   [17] hook at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:338 [inlined]
   [18] (::var"#1645#outer_hook#398"{Base.GenericIOBuffer{Array{UInt8,1}}})(::CUDAnative.CompilerJob) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:226
   [19] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:42
   [20] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [21] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [22] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [23] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#1660#kernel#397",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [25] macro expansion at ./lock.jl:183 [inlined]
   [26] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [27] cufunction(::var"#1660#kernel#397", ::Type{Tuple{CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Int64,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [28] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/reflection.jl:234
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:154
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:145
   [34] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [35] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/array.jl:3
   [36] include(::String) at ./client.jl:441
   [37] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:166 [inlined]
   [38] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [39] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [40] include(::String) at ./client.jl:441
   [41] top-level scope at none:6
   [42] eval(::Module, ::Any) at ./boot.jl:331
   [43] exec_options(::Base.JLOptions) at ./client.jl:264
   [44] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
indexing: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#707#463",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#707#463", ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:6
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:6
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [32] include(::String) at ./client.jl:441
   [33] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [34] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [35] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [36] include(::String) at ./client.jl:441
   [37] top-level scope at none:6
   [38] eval(::Module, ::Any) at ./boot.jl:331
   [39] exec_options(::Base.JLOptions) at ./client.jl:264
   [40] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
math: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:33
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#kernel#477",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#kernel#477", ::Type{Tuple{CuDeviceArray{Float32,0,CUDAnative.AS.Global},Float32}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:41
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:34
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [31] include(::String) at ./client.jl:441
   [32] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [33] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [35] include(::String) at ./client.jl:441
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:264
   [39] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
formatted output: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:275
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#910#487",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] (::var"#402#486")() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [26] redirect_stdout(::var"#402#486", ::IOStream) at ./stream.jl:1152
   [27] #401 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:40 [inlined]
   [28] open(::var"#401#485", ::String, ::Vararg{String,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./io.jl:298
   [29] open at ./io.jl:296 [inlined]
   [30] #400 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:39 [inlined]
   [31] mktemp(::var"#400#484", ::String) at ./file.jl:659
   [32] mktemp(::Function) at ./file.jl:657
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:37
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:276
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:276
   [37] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [39] include(::String) at ./client.jl:441
   [40] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [41] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [42] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [43] include(::String) at ./client.jl:441
   [44] top-level scope at none:6
   [45] eval(::Module, ::Any) at ./boot.jl:331
   [46] exec_options(::Base.JLOptions) at ./client.jl:264
   [47] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
@cuprint: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:313
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#938#512",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422 [inlined]
   [24] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157 [inlined]
   [25] (::var"#420#511")() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [26] redirect_stdout(::var"#420#511", ::IOStream) at ./stream.jl:1152
   [27] #419 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:40 [inlined]
   [28] open(::var"#419#510", ::String, ::Vararg{String,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./io.jl:298
   [29] open at ./io.jl:296 [inlined]
   [30] #418 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:39 [inlined]
   [31] mktemp(::var"#418#509", ::String) at ./file.jl:659
   [32] mktemp(::Function) at ./file.jl:657
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:37
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:316
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:316
   [37] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [39] include(::String) at ./client.jl:441
   [40] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [41] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [42] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [43] include(::String) at ./client.jl:441
   [44] top-level scope at none:6
   [45] eval(::Module, ::Any) at ./boot.jl:331
   [46] exec_options(::Base.JLOptions) at ./client.jl:264
   [47] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
assertion: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:400
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2494#kernel#572",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2494#kernel#572", ::Type{Tuple{Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:407
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:401
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [31] include(::String) at ./client.jl:441
   [32] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [33] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [35] include(::String) at ./client.jl:441
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:264
   [39] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
constructors: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:425
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#1002#573",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#1002#573", ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:427
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:427
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [34] include(::String) at ./client.jl:441
   [35] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [36] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [38] include(::String) at ./client.jl:441
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:264
   [42] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
statically typed: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:454
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2495#kernel#591",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2495#kernel#591", ::Type{Tuple{CuDeviceArray{Float32,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:470
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:455
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:454
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int32: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:475
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2496#kernel#592",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2496#kernel#592", ::Type{Tuple{CuDeviceArray{Int32,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:491
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:475
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:475
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:454
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [37] include(::String) at ./client.jl:441
   [38] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [39] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [40] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [41] include(::String) at ./client.jl:441
   [42] top-level scope at none:6
   [43] eval(::Module, ::Any) at ./boot.jl:331
   [44] exec_options(::Base.JLOptions) at ./client.jl:264
   [45] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int64: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:475
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2496#kernel#592",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2496#kernel#592", ::Type{Tuple{CuDeviceArray{Int64,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:491
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:475
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:475
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:454
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [37] include(::String) at ./client.jl:441
   [38] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [39] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [40] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [41] include(::String) at ./client.jl:441
   [42] top-level scope at none:6
   [43] eval(::Module, ::Any) at ./boot.jl:331
   [44] exec_options(::Base.JLOptions) at ./client.jl:264
   [45] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Float32: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:475
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2496#kernel#592",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2496#kernel#592", ::Type{Tuple{CuDeviceArray{Float32,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:491
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:475
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:475
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:454
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [37] include(::String) at ./client.jl:441
   [38] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [39] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [40] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [41] include(::String) at ./client.jl:441
   [42] top-level scope at none:6
   [43] eval(::Module, ::Any) at ./boot.jl:331
   [44] exec_options(::Base.JLOptions) at ./client.jl:264
   [45] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Float64: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:475
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2496#kernel#592",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2496#kernel#592", ::Type{Tuple{CuDeviceArray{Float64,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:491
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:475
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:475
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:454
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [37] include(::String) at ./client.jl:441
   [38] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [39] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [40] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [41] include(::String) at ./client.jl:441
   [42] top-level scope at none:6
   [43] eval(::Module, ::Any) at ./boot.jl:331
   [44] exec_options(::Base.JLOptions) at ./client.jl:264
   [45] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
alignment: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:496
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2499#kernel#593",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2499#kernel#593", ::Type{Tuple{Tuple{Float32,Float32,Float32},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:506
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:498
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:454
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
statically typed: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:514
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2501#kernel#594",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2501#kernel#594", ::Type{Tuple{CuDeviceArray{Float32,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:533
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:515
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:514
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
typ = Int32: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:538
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2505#kernel#595",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2505#kernel#595", ::Type{Tuple{CuDeviceArray{Int32,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:557
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:538
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:538
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:514
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [37] include(::String) at ./client.jl:441
   [38] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [39] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [40] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [41] include(::String) at ./client.jl:441
   [42] top-level scope at none:6
   [43] eval(::Module, ::Any) at ./boot.jl:331
   [44] exec_options(::Base.JLOptions) at ./client.jl:264
   [45] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
typ = Int64: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:538
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2505#kernel#595",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2505#kernel#595", ::Type{Tuple{CuDeviceArray{Int64,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:557
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:538
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:538
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:514
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [37] include(::String) at ./client.jl:441
   [38] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [39] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [40] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [41] include(::String) at ./client.jl:441
   [42] top-level scope at none:6
   [43] eval(::Module, ::Any) at ./boot.jl:331
   [44] exec_options(::Base.JLOptions) at ./client.jl:264
   [45] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
typ = Float32: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:538
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2505#kernel#595",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2505#kernel#595", ::Type{Tuple{CuDeviceArray{Float32,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:557
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:538
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:538
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:514
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [37] include(::String) at ./client.jl:441
   [38] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [39] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [40] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [41] include(::String) at ./client.jl:441
   [42] top-level scope at none:6
   [43] eval(::Module, ::Any) at ./boot.jl:331
   [44] exec_options(::Base.JLOptions) at ./client.jl:264
   [45] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
typ = Float64: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:538
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2505#kernel#595",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2505#kernel#595", ::Type{Tuple{CuDeviceArray{Float64,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:557
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:538
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:538
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:514
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [37] include(::String) at ./client.jl:441
   [38] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [39] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [40] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [41] include(::String) at ./client.jl:441
   [42] top-level scope at none:6
   [43] eval(::Module, ::Any) at ./boot.jl:331
   [44] exec_options(::Base.JLOptions) at ./client.jl:264
   [45] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
alignment: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:562
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2508#kernel#596",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2508#kernel#596", ::Type{Tuple{Tuple{Float32,Float32,Float32}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:570
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:564
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:514
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
homogeneous: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:580
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2509#kernel#597",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2509#kernel#597", ::Type{Tuple{CuDeviceArray{Float32,1,CUDAnative.AS.Global},CuDeviceArray{Float32,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:606
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:581
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:580
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
heterogeneous: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:613
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2512#kernel#598",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2512#kernel#598", ::Type{Tuple{CuDeviceArray{Float32,1,CUDAnative.AS.Global},CuDeviceArray{Int64,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:637
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:614
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:580
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:423
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = UInt8: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{UInt8,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = UInt16: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{UInt16,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = UInt32: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{UInt32,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = UInt64: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{UInt64,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = UInt128: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{UInt128,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int8: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{Int8,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int16: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{Int16,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int32: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{Int32,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int64: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{Int64,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int128: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{Int128,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Float32: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{Float32,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Float64: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{Float64,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Complex{Float32}: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{Complex{Float32},1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Complex{Float64}: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{Complex{Float64},1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Bool: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2517#kernel#599",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2517#kernel#599", ::Type{Tuple{CuDeviceArray{Bool,1,CUDAnative.AS.Global}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:671
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:666
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:655
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Int32: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:687
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2522#kernel#600",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2522#kernel#600", ::Type{Tuple{CuDeviceArray{Int32,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:692
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:687
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:677
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
T = Float32: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:687
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2522#kernel#600",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2522#kernel#600", ::Type{Tuple{CuDeviceArray{Float32,1,CUDAnative.AS.Global},Int64}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:692
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:687
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:677
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:652
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [35] include(::String) at ./client.jl:441
   [36] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [37] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [38] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [39] include(::String) at ./client.jl:441
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:264
   [43] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
clock and nanosleep: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:707
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#1153#601",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#1153#601", ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:708
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:708
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [32] include(::String) at ./client.jl:441
   [33] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [34] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [35] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [36] include(::String) at ./client.jl:441
   [37] top-level scope at none:6
   [38] eval(::Module, ::Any) at ./boot.jl:331
   [39] exec_options(::Base.JLOptions) at ./client.jl:264
   [40] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
parallel synchronization and communication: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:716
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"##kernel#1165#604",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"##kernel#1165#604", ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/util.jl:59
   [27] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:718
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:718
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [32] include(::String) at ./client.jl:441
   [33] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [34] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [35] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [36] include(::String) at ./client.jl:441
   [37] top-level scope at none:6
   [38] eval(::Module, ::Any) at ./boot.jl:331
   [39] exec_options(::Base.JLOptions) at ./client.jl:264
   [40] _start() at ./client.jl:490
  
[ Info: Building the CUDAnative run-time library for your sm_75 device, this might take a while...
libcudadevrt: Error During Test at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:894
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; cached=false, track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, module_setup=CUDAnative.var"#hook_module_setup#116"(Core.Box(#undef)), module_activation=CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), CUDAnative.var"#postprocess#115"(), Core.Box(nothing), DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}(Dict{Core.MethodInstance,Array{LLVM.Function,1}}()), Core.Box(#undef), Core.Box(#undef)), emit_function=CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.MethodInstance[]), emitted_function=CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}}(CUDAnative.CompilerJob for unbox_uint64(Any) (cap=7.5), Core.Box(nothing), Core.MethodInstance[]), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, static_alloc, prefer_specsig, gnu_pubnames, debug_info_kind, module_setup, module_activation, raise_exception, emit_function, emitted_function) at reflection.jl:986 got unsupported keyword argument "cached"
  Stacktrace:
   [1] kwerr(::NamedTuple{(:cached, :track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :module_setup, :module_activation, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind),Tuple{Bool,Bool,Bool,Bool,Bool,CUDAnative.var"#hook_module_setup#116",CUDAnative.var"#hook_module_activation#117"{CUDAnative.CompilerJob,CUDAnative.var"#postprocess#115",DataStructures.MultiDict{Core.MethodInstance,LLVM.Function}},CUDAnative.var"#hook_emit_function#120"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},CUDAnative.var"#hook_emitted_function#121"{CUDAnative.CompilerJob,Array{Core.MethodInstance,1}},Bool,Int32}}, ::Type{T} where T) at ./error.jl:157
   [2] compile_method_instance(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:151
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [4] irgen(::CUDAnative.CompilerJob, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/irgen.jl:168
   [5] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:97 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
   [8] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:96
   [9] emit_function!(::LLVM.Module, ::VersionNumber, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:130
   [10] build_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:140
   [11] (::CUDAnative.var"#156#159"{VersionNumber,String})() at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:175
   [12] get!(::CUDAnative.var"#156#159"{VersionNumber,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [13] load_runtime(::VersionNumber) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/rtlib.jl:168
   [14] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:92
   [15] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:45
   [16] #compile#169 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/compiler/driver.jl:33 [inlined]
   [17] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:326
   [18] #217 at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:393 [inlined]
   [19] get!(::CUDAnative.var"#217#218"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},var"#2547#kernel#625",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [20] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:392 [inlined]
   [21] macro expansion at ./lock.jl:183 [inlined]
   [22] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:391
   [23] cufunction(::var"#2547#kernel#625", ::Type{Tuple{}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [24] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:422
   [25] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/src/execution.jl:157
   [26] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:896
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:895
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/device/cuda.jl:5
   [31] include(::String) at ./client.jl:441
   [32] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:167 [inlined]
   [33] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [34] top-level scope at /home/pkgeval/.julia/packages/CUDAnative/j8fTC/test/runtests.jl:14
   [35] include(::String) at ./client.jl:441
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:264
   [39] _start() at ./client.jl:490
  
