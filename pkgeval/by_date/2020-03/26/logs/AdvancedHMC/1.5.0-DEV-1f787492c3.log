Julia Version 1.5.0-DEV.507
Commit 1f787492c3 (2020-03-25 15:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ───────────────────── v0.4.3
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed ProgressMeter ──────────────── v1.2.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed OrderedCollections ─────────── v1.1.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed LazyArrays ─────────────────── v0.15.1
  Installed DataAPI ────────────────────── v1.1.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed Parameters ─────────────────── v0.12.0
  Installed CompilerSupportLibraries_jll ─ v0.3.1+0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed StatsBase ──────────────────── v0.32.2
  Installed StaticArrays ───────────────── v0.12.1
  Installed FillArrays ─────────────────── v0.8.5
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed Requires ───────────────────── v1.0.1
  Installed Rmath ──────────────────────── v0.6.1
  Installed MacroTools ─────────────────── v0.5.5
  Installed SpecialFunctions ───────────── v0.10.0
  Installed DataStructures ─────────────── v0.17.10
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.3.1+0
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.1
   1914dd2f + MacroTools v0.5.5
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
     Status `/tmp/jl_DzlZHw/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.6.5
   31c24e10 Distributions v0.23.1
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.1
   1dea7af3 OrdinaryDiffEq v5.32.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.10.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.12
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_DzlZHw/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.5.4
   1520ce14 AbstractTrees v0.3.2
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.6.2
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.6.5
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v1.0.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.3.1+0
   88cd18e8 ConsoleProgressMonitor v0.1.2
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.25.1
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   31c24e10 Distributions v0.23.1
   ced4e74d DistributionsAD v0.4.8
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.5.0
   da5c29d0 EllipsisNotation v0.4.0
   cad2338a EllipticalSliceSampling v0.2.1
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.3.0
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.3.0
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.2
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.3
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.1
   1d6d02ad LeftChildRightSiblingTrees v0.1.2
   6f1fad26 Libtask v0.3.3
   093fc24a LightGraphs v1.3.1
   d3d80556 LineSearches v7.0.1
   6fdf6af0 LogDensityProblems v0.10.3
   e6f89c97 LoggingExtras v0.4.0
   c7f686f2 MCMCChains v3.0.7
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.5
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+8
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.32.0
   90014a1f PDMats v0.9.12
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   33c8b6b6 ProgressLogging v0.1.2
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   37e2e3b7 ReverseDiff v1.1.0
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v1.0.1
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   5d786b92 TerminalLoggers v0.1.1
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.10.0
   3a884ed6 UnPack v0.1.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.12
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.165711701
│   t_steps = 0.009862338
└   t_step / t_steps = 16.802476349928384
Sampling  0%|                               |  ETA: 6:23:41[K
  iterations:                    1
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6567404727209973
  log_density:                   -14.834785886460178
  hamiltonian_energy:            15.873180525623726
  hamiltonian_energy_error:      0.8055373967659989
  max_hamiltonian_energy_error:  0.8055373967659989
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9
  nom_step_size:                 0.9
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  7%|██▏                            |  ETA: 0:00:41[K
  iterations:                    831
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.936984179626968
  hamiltonian_energy:            16.448344183210622
  hamiltonian_energy_error:      -0.5619434033659729
  max_hamiltonian_energy_error:  -0.5619434033659729
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9526863853288899
  nom_step_size:                 0.9526863853288899
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9075759467693563, 0.8045 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|███                            |  ETA: 0:00:30[K
  iterations:                    1139
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6320284537426268
  log_density:                   -16.643310374126468
  hamiltonian_energy:            19.89642976237537
  hamiltonian_energy_error:      0.81743748753604
  max_hamiltonian_energy_error:  0.81743748753604
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.2709226485780953
  nom_step_size:                 1.2709226485780953
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9594227386953382, 1.0816 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▋                           |  ETA: 0:00:25[K
  iterations:                    1411
  n_steps:                       43
  is_accept:                     true
  acceptance_rate:               0.9660550242334021
  log_density:                   -12.177386843312156
  hamiltonian_energy:            16.367067722231987
  hamiltonian_energy_error:      -0.2261339953048278
  max_hamiltonian_energy_error:  -0.29095291141311463
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.818648729856426
  nom_step_size:                 0.818648729856426
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9594227386953382, 1.0816 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▊                           |  ETA: 0:00:26[K
  iterations:                    1431
  n_steps:                       19
  is_accept:                     true
  acceptance_rate:               0.8733160898051107
  log_density:                   -17.6534878816668
  hamiltonian_energy:            21.498385915613852
  hamiltonian_energy_error:      0.3075588950279169
  max_hamiltonian_energy_error:  -0.5736577736061932
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8744614191332315
  nom_step_size:                 0.8744614191332315
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9594227386953382, 1.0816 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:21[K
  iterations:                    1814
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9282830262950443
  log_density:                   -12.79725074656031
  hamiltonian_energy:            18.57978830131915
  hamiltonian_energy_error:      -0.5117436666940023
  max_hamiltonian_energy_error:  -0.8020831230491545
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.812278153219675
  nom_step_size:                 0.812278153219675
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9594227386953382, 1.0816 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▊                         |  ETA: 0:00:17[K
  iterations:                    2208
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5765269031328861
  log_density:                   -12.157646990795493
  hamiltonian_energy:            20.29539818161971
  hamiltonian_energy_error:      0.06792153264249379
  max_hamiltonian_energy_error:  0.9663723545938936
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████                        |  ETA: 0:00:13[K
  iterations:                    2713
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9950584723803361
  log_density:                   -11.175878200126283
  hamiltonian_energy:            13.30076374628034
  hamiltonian_energy_error:      -0.04541179071423862
  max_hamiltonian_energy_error:  -0.05188659263288642
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████▎                      |  ETA: 0:00:11[K
  iterations:                    3176
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9591852059184599
  log_density:                   -11.445822096895323
  hamiltonian_energy:            14.842766599414311
  hamiltonian_energy_error:      -0.11784941574703645
  max_hamiltonian_energy_error:  -0.20328214140763023
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▌                     |  ETA: 0:00:09[K
  iterations:                    3674
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9566695300113054
  log_density:                   -13.351256413468827
  hamiltonian_energy:            21.745938146001535
  hamiltonian_energy_error:      -0.5702733566753437
  max_hamiltonian_energy_error:  -0.5702733566753437
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▉                    |  ETA: 0:00:08[K
  iterations:                    4231
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6525532017324457
  log_density:                   -17.14916504871336
  hamiltonian_energy:            19.123321672806316
  hamiltonian_energy_error:      0.817620505518601
  max_hamiltonian_energy_error:  0.8181461856569641
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▍                  |  ETA: 0:00:06[K
  iterations:                    4777
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.818700510558604
  log_density:                   -12.01028543253161
  hamiltonian_energy:            16.634942415360282
  hamiltonian_energy_error:      0.02803630026925319
  max_hamiltonian_energy_error:  0.35564703628411465
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 44%|█████████████▊                 |  ETA: 0:00:05[K
  iterations:                    5333
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9808339510069796
  log_density:                   -15.044289281505634
  hamiltonian_energy:            18.21621674373405
  hamiltonian_energy_error:      0.06789906631310316
  max_hamiltonian_energy_error:  -0.2254854675247877
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▏               |  ETA: 0:00:05[K
  iterations:                    5868
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8623099324359647
  log_density:                   -14.29485068382252
  hamiltonian_energy:            20.70965258467338
  hamiltonian_energy_error:      -0.0838980136061096
  max_hamiltonian_energy_error:  0.3874145626713421
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▌              |  ETA: 0:00:04[K
  iterations:                    6377
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9445625037687171
  log_density:                   -15.208270717316466
  hamiltonian_energy:            23.177342368286894
  hamiltonian_energy_error:      -0.19693422806815164
  max_hamiltonian_energy_error:  -0.20206200322944667
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|█████████████████▉             |  ETA: 0:00:03[K
  iterations:                    6941
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7295293974357833
  log_density:                   -19.74662719823585
  hamiltonian_energy:            23.537296221486994
  hamiltonian_energy_error:      0.6684025753521077
  max_hamiltonian_energy_error:  0.6684025753521077
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▌           |  ETA: 0:00:03[K
  iterations:                    7527
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.990647641026575
  log_density:                   -15.884001481873923
  hamiltonian_energy:            19.306485119430164
  hamiltonian_energy_error:      0.03395568301110785
  max_hamiltonian_energy_error:  -0.35414384158685763
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▊          |  ETA: 0:00:02[K
  iterations:                    8016
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8909204416648686
  log_density:                   -13.782230383158849
  hamiltonian_energy:            19.675350809476534
  hamiltonian_energy_error:      -0.03806765390180544
  max_hamiltonian_energy_error:  0.24773561031929248
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████         |  ETA: 0:00:02[K
  iterations:                    8534
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.129549302728293
  hamiltonian_energy:            18.072511070097644
  hamiltonian_energy_error:      -0.04155958644646063
  max_hamiltonian_energy_error:  -0.6940116572086872
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▍       |  ETA: 0:00:02[K
  iterations:                    9051
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.816741984481119
  log_density:                   -16.421341816835763
  hamiltonian_energy:            19.822303542207198
  hamiltonian_energy_error:      0.4203537520935079
  max_hamiltonian_energy_error:  0.4203537520935079
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▊      |  ETA: 0:00:01[K
  iterations:                    9567
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9877119627262874
  log_density:                   -13.661650348312744
  hamiltonian_energy:            16.937325020598777
  hamiltonian_energy_error:      -0.028436274627086533
  max_hamiltonian_energy_error:  -0.19785389795297803
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████▏    |  ETA: 0:00:01[K
  iterations:                    10089
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.147899773540807
  hamiltonian_energy:            19.19408177064511
  hamiltonian_energy_error:      -0.7281410225120908
  max_hamiltonian_energy_error:  -0.7583949135096937
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▍   |  ETA: 0:00:01[K
  iterations:                    10609
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.983128810175237
  log_density:                   -13.071511006328715
  hamiltonian_energy:            19.252593813670952
  hamiltonian_energy_error:      -0.4084297627398854
  max_hamiltonian_energy_error:  -0.445462581781058
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|████████████████████████████▉  |  ETA: 0:00:00[K
  iterations:                    11177
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9656822308705818
  log_density:                   -12.755635434264445
  hamiltonian_energy:            18.979297613626205
  hamiltonian_energy_error:      -0.4057517822766741
  max_hamiltonian_energy_error:  -0.4278732189878056
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▎|  ETA: 0:00:00[K
  iterations:                    11704
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9250362578933023
  log_density:                   -17.22257960198696
  hamiltonian_energy:            21.9522273040385
  hamiltonian_energy_error:      0.1894871096652544
  max_hamiltonian_energy_error:  0.21616342426807833
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9981912555846943
  log_density:                   -14.914333243220247
  hamiltonian_energy:            17.892804386212145
  hamiltonian_energy_error:      -0.03865645786883576
  max_hamiltonian_energy_error:  -0.4138731067660686
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7259582638708898
  nom_step_size:                 0.7259582638708898
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9643704026258092, 0.9792 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.694299636 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9643704026258092, 0.9792 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.726), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.089803775162189
└   average_acceptance_rate = 0.8618452265411397
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.191373908 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠈⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡇⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⢱⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠒⠤⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠘⡄│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⡎⠀⠀⢣│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⢇⠀⠀⠀⠀⠀⠀⡜⠈⠑⠃⠀⠀⠸│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠃⠀⠘⡄⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠁⠀⠀⠀⠀⠸⠤⠒⠒⠤⠇⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⢀⡜⠉⠢⡠⠊⠉⠒⠔⠒⠒⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡀⠀⠀⢀⡾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠓⢦⡤⠓⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
