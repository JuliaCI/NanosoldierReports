Julia Version 1.5.0-DEV.385
Commit 5b241c2aa9 (2020-03-02 14:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ───────────────────── v1.0.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+2
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed LazyArrays ─────────────────── v0.15.0
  Installed DataStructures ─────────────── v0.17.10
  Installed StatsBase ──────────────────── v0.32.1
  Installed ProgressMeter ──────────────── v1.2.0
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed Missings ───────────────────── v0.4.3
  Installed ArgCheck ───────────────────── v2.0.0
  Installed OrderedCollections ─────────── v1.1.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed FillArrays ─────────────────── v0.8.5
  Installed MacroTools ─────────────────── v0.5.4
  Installed DataAPI ────────────────────── v1.1.0
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed Rmath ──────────────────────── v0.6.1
  Installed SpecialFunctions ───────────── v0.10.0
  Installed Parameters ─────────────────── v0.12.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed ArrayLayouts ───────────────── v0.1.5
#=#=#                                                                         ##############################                                            42.2%######################################################################## 100.0%
#=#=#                                                                         ##                                                                         3.5%#######                                                                   10.9%##############                                                            20.6%######################                                                    31.2%################################                                          44.6%############################################                              62.5%###########################################################               82.7%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.2.0+1
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.0
   1914dd2f + MacroTools v0.5.4
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+2
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.1
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
#=#=#                                                                         ##                                                                         2.8%#####                                                                      8.1%###########                                                               16.4%###################                                                       27.0%#########################                                                 35.1%##############################                                            42.3%###################################                                       49.3%#################################################                         68.6%##################################################################        93.0%######################################################################## 100.0%
#=#=#                                                                         ################                                                          23.3%##################################################                        69.9%######################################################################## 100.0%
#=#=#                                                                         ########                                                                  11.5%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
     Status `/tmp/jl_8z0vCl/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.5.2
   31c24e10 Distributions v0.22.5
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.1
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.9
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_8z0vCl/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.4.0
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.5.0
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.5.2
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v0.7.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.6.0
   e66e0078 CompilerSupportLibraries_jll v0.2.0+1
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.18.1
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   31c24e10 Distributions v0.22.5
   ced4e74d DistributionsAD v0.4.1
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.4.1
   da5c29d0 EllipsisNotation v0.4.0
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.2.2
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.1
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.1
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.0
   6f1fad26 Libtask v0.3.1
   093fc24a LightGraphs v1.3.1
   6fdf6af0 LogDensityProblems v0.10.3
   c7f686f2 MCMCChains v3.0.3
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+6
   efe28fd5 OpenSpecFun_jll v0.5.3+2
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.29.0
   90014a1f PDMats v0.9.11
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v0.8.4
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.3.3
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.1
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.9
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.158486338
│   t_steps = 0.008497465
└   t_step / t_steps = 18.6510139200338
Sampling  0%|                               |  ETA: 6:07:10[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               1.48616152975382e-6
  log_density:                   -10.506516134490331
  hamiltonian_energy:            18.74368652313389
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  13.419313916530598
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▊                            |  ETA: 0:00:28[K
  iterations:                    1074
  n_steps:                       151
  is_accept:                     true
  acceptance_rate:               0.8697241325270958
  log_density:                   -13.272999219798157
  hamiltonian_energy:            16.88582702359201
  hamiltonian_energy_error:      0.10024518191432819
  max_hamiltonian_energy_error:  0.48306147835906543
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.7717290597610859
  nom_step_size:                 0.7717290597610859
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.180496149205439, 1.01050 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▎                           |  ETA: 0:00:24[K
  iterations:                    1270
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7558537510065516
  log_density:                   -15.40449949448146
  hamiltonian_energy:            19.787076284316083
  hamiltonian_energy_error:      0.2767249132907459
  max_hamiltonian_energy_error:  0.674721586218098
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8377609684944071
  nom_step_size:                 0.8377609684944071
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.180496149205439, 1.01050 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:20[K
  iterations:                    1542
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9175251738815474
  log_density:                   -12.696971697398812
  hamiltonian_energy:            19.842769604808034
  hamiltonian_energy_error:      -0.21815493331077107
  max_hamiltonian_energy_error:  0.30594181742314674
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6801347485606519
  nom_step_size:                 0.6801347485606519
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.180496149205439, 1.01050 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▌                          |  ETA: 0:00:18[K
  iterations:                    1760
  n_steps:                       79
  is_accept:                     true
  acceptance_rate:               0.9984579161660599
  log_density:                   -13.690536836026812
  hamiltonian_energy:            20.505990606960907
  hamiltonian_energy_error:      -0.6605348022114939
  max_hamiltonian_energy_error:  -0.7986290281360198
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.7698558828947992
  nom_step_size:                 0.7698558828947992
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.180496149205439, 1.01050 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▏                         |  ETA: 0:00:16[K
  iterations:                    1986
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.391824742957123
  hamiltonian_energy:            16.00250479310514
  hamiltonian_energy_error:      -0.028713192836043788
  max_hamiltonian_energy_error:  -0.039387772498834295
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.37116299587045876
  nom_step_size:                 0.37116299587045876
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|█████▉                         |  ETA: 0:00:14[K
  iterations:                    2292
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7695272232587765
  log_density:                   -14.923744568026585
  hamiltonian_energy:            17.05367382834685
  hamiltonian_energy_error:      0.4464089340004058
  max_hamiltonian_energy_error:  0.4584646308252296
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████                        |  ETA: 0:00:12[K
  iterations:                    2713
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9710492819840905
  log_density:                   -14.05706015584935
  hamiltonian_energy:            19.098464335107423
  hamiltonian_energy_error:      -0.01977597998921965
  max_hamiltonian_energy_error:  0.07175941095074023
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▉                       |  ETA: 0:00:10[K
  iterations:                    3057
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6033265625249632
  log_density:                   -15.726052173848885
  hamiltonian_energy:            25.114833914294685
  hamiltonian_energy_error:      0.2825204273527966
  max_hamiltonian_energy_error:  1.1502680739039448
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|█████████                      |  ETA: 0:00:09[K
  iterations:                    3471
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7261884659590084
  log_density:                   -11.655122217270964
  hamiltonian_energy:            19.878326508086506
  hamiltonian_energy_error:      -0.25506293981266026
  max_hamiltonian_energy_error:  0.5972096556902144
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▋                     |  ETA: 0:00:08[K
  iterations:                    3717
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9793500286549789
  log_density:                   -17.645470400058002
  hamiltonian_energy:            23.268266201318745
  hamiltonian_energy_error:      0.07002248255035326
  max_hamiltonian_energy_error:  -0.23989267024034433
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▍                    |  ETA: 0:00:07[K
  iterations:                    4033
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8033879604835467
  log_density:                   -15.439092110426063
  hamiltonian_energy:            18.57731678039671
  hamiltonian_energy_error:      0.248617015897743
  max_hamiltonian_energy_error:  0.4615827301111004
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████▎                   |  ETA: 0:00:07[K
  iterations:                    4379
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9732653340567085
  log_density:                   -13.18862022972052
  hamiltonian_energy:            17.125463494546104
  hamiltonian_energy_error:      -0.06908732244890103
  max_hamiltonian_energy_error:  -0.232572737151866
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▍                  |  ETA: 0:00:06[K
  iterations:                    4812
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8972952420841543
  log_density:                   -14.136604214268733
  hamiltonian_energy:            17.436988052998597
  hamiltonian_energy_error:      0.1709815316235428
  max_hamiltonian_energy_error:  0.20264576947901602
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▍                 |  ETA: 0:00:05[K
  iterations:                    5166
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7892766506600611
  log_density:                   -16.73018168537821
  hamiltonian_energy:            19.873911921303964
  hamiltonian_energy_error:      0.44666777956622283
  max_hamiltonian_energy_error:  0.5100819235894427
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▌                |  ETA: 0:00:05[K
  iterations:                    5600
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9242689420919279
  log_density:                   -15.970343214858303
  hamiltonian_energy:            20.050577492659215
  hamiltonian_energy_error:      0.16293431256662672
  max_hamiltonian_energy_error:  0.16293431256662672
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▎               |  ETA: 0:00:04[K
  iterations:                    5915
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9980932733548613
  log_density:                   -16.482198703003686
  hamiltonian_energy:            22.543213920204913
  hamiltonian_energy_error:      -0.028090520983273137
  max_hamiltonian_energy_error:  -0.11479301857477253
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████▏              |  ETA: 0:00:04[K
  iterations:                    6265
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8595032965894324
  log_density:                   -14.70619739872813
  hamiltonian_energy:            23.976598738445396
  hamiltonian_energy_error:      -0.4725463308590534
  max_hamiltonian_energy_error:  -0.798297533282156
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████              |  ETA: 0:00:04[K
  iterations:                    6584
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9556456139877846
  log_density:                   -14.513206147070138
  hamiltonian_energy:            19.985593230949938
  hamiltonian_energy_error:      -0.14004839342509356
  max_hamiltonian_energy_error:  -0.3878351415647465
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▎            |  ETA: 0:00:03[K
  iterations:                    7051
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8529714527488126
  log_density:                   -12.239588207810984
  hamiltonian_energy:            17.77961150359027
  hamiltonian_energy_error:      -0.11337914506356128
  max_hamiltonian_energy_error:  0.4137010386403226
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|███████████████████            |  ETA: 0:00:03[K
  iterations:                    7346
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9665289870592764
  log_density:                   -15.003019690581528
  hamiltonian_energy:            18.68156135886263
  hamiltonian_energy_error:      0.11350485699438195
  max_hamiltonian_energy_error:  -0.13918847196043416
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████▏          |  ETA: 0:00:03[K
  iterations:                    7772
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7414149607584886
  log_density:                   -15.946780479525568
  hamiltonian_energy:            25.67695953047025
  hamiltonian_energy_error:      -0.013088576699431087
  max_hamiltonian_energy_error:  0.5874849428000637
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▊          |  ETA: 0:00:02[K
  iterations:                    8034
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9951154354295423
  log_density:                   -12.144423174596204
  hamiltonian_energy:            15.516751490247033
  hamiltonian_energy_error:      -0.18726391615727245
  max_hamiltonian_energy_error:  -0.27369830652520477
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▉         |  ETA: 0:00:02[K
  iterations:                    8451
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8195046054752922
  log_density:                   -17.921580979478218
  hamiltonian_energy:            21.576199825022204
  hamiltonian_energy_error:      0.47157097253954916
  max_hamiltonian_energy_error:  0.47157097253954916
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▊        |  ETA: 0:00:02[K
  iterations:                    8803
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8968487585400512
  log_density:                   -12.621876769016549
  hamiltonian_energy:            15.929808155822347
  hamiltonian_energy_error:      0.07568064245297634
  max_hamiltonian_energy_error:  0.2022904092749549
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|███████████████████████▊       |  ETA: 0:00:02[K
  iterations:                    9212
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.96962587768878
  log_density:                   -12.487680431821953
  hamiltonian_energy:            17.4639803048881
  hamiltonian_energy_error:      -0.2086963627902989
  max_hamiltonian_energy_error:  -0.2475604469703505
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▋      |  ETA: 0:00:01[K
  iterations:                    9525
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8987547253587265
  log_density:                   -12.795676406404661
  hamiltonian_energy:            17.727754629854736
  hamiltonian_energy_error:      -0.0408441063183993
  max_hamiltonian_energy_error:  0.2396036304634208
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▋     |  ETA: 0:00:01[K
  iterations:                    9941
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9946701082171836
  log_density:                   -13.510262894747765
  hamiltonian_energy:            16.419952366001546
  hamiltonian_energy_error:      -0.03349159005000857
  max_hamiltonian_energy_error:  -0.20000925948750492
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▌    |  ETA: 0:00:01[K
  iterations:                    10260
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.272440148193624
  hamiltonian_energy:            28.36011524177669
  hamiltonian_energy_error:      -1.0449584550413356
  max_hamiltonian_energy_error:  -1.1562933728735132
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▋   |  ETA: 0:00:01[K
  iterations:                    10672
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.930749069881691
  log_density:                   -16.050800341297037
  hamiltonian_energy:            23.15719990081791
  hamiltonian_energy_error:      -0.14331163836246574
  max_hamiltonian_energy_error:  -0.4335068386045151
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▍  |  ETA: 0:00:01[K
  iterations:                    10986
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.831101704818398
  log_density:                   -16.425181745627555
  hamiltonian_energy:            19.262793679429308
  hamiltonian_energy_error:      0.42428553269725455
  max_hamiltonian_energy_error:  0.42428553269725455
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▌ |  ETA: 0:00:00[K
  iterations:                    11403
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6817373985924025
  log_density:                   -18.759005171006915
  hamiltonian_energy:            23.4745674923505
  hamiltonian_energy_error:      0.6170300115685272
  max_hamiltonian_energy_error:  0.7000856236850339
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▎|  ETA: 0:00:00[K
  iterations:                    11726
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9986228852036751
  log_density:                   -16.139919076474605
  hamiltonian_energy:            19.09375272432723
  hamiltonian_energy_error:      0.009686567251861788
  max_hamiltonian_energy_error:  -0.43492621207233384
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9894608691877138
  log_density:                   -19.321140889223507
  hamiltonian_energy:            24.263629043928393
  hamiltonian_energy_error:      0.029711335927398608
  max_hamiltonian_energy_error:  -0.6112773950083579
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.715993150233438
  nom_step_size:                 0.715993150233438
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9070103575793361, 0.9081 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.031881853 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9070103575793361, 0.9081 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.716), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0786207325230472
└   average_acceptance_rate = 0.8630493755925448
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.918104395 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠒⠉│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠣⡀⠀⠀⠀⡰⠢⣀⡜⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠈⢆⠀⡰⠁⠀⠀⠁⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⢠⢆⠀⠀⠀⡸⠀⠀⠀⠀⠑⠃⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡔⠁⡀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠈⢆⠀⣀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⡸⢣⠀⠀⠀⠀⡠⠔⠒⠃⠀⠀⠈⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡄⠀⠀⠀⠀⢀⠎⠀⢀⠇⠈⡆⠀⡰⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡱⡀⠀⠀⡠⠃⠀⠀⡜⠀⠀⠘⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠱⣱⡠⡔⠓⠤⣀⠔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠘⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
