Julia Version 1.5.0-DEV.391
Commit 4e609128ff (2020-03-03 07:30 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_aD8xkd/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_aD8xkd/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.03531323414550272 -0.01898503479303295; 0.03531323414550272 0.0 -0.14576287045221636; 0.01898503479303295 0.14576287045221636 0.0])
dAA = so3([0.0 0.0957537302077584 0.04911624865199404; -0.0957537302077584 0.0 0.1738219797235418; -0.04911624865199404 -0.1738219797235418 0.0])
dAA = so3([0.0 -0.15387443176746354 -0.01117492138475568; 0.15387443176746354 0.0 -0.16984464146367098; 0.01117492138475568 0.16984464146367098 0.0])
dAA = Quaternion(0.9994423261062758, [-0.0036435183659464954, 0.01839684329268144, -0.02762820511829298])
dAA = SO3([0.9989730431011096 0.0005909501267254278 0.04530463480987918; 0.0013025999035422195 0.9991270292679272 -0.04175503107097022; -0.04528976033056573 0.041771164266681864 0.9981001991007744])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9645897992374265 0.20299369513070067 0.16840450986920003; -0.2552014902269067 0.8795844152904976 0.4015015015713387; -0.0666237089410923 -0.4302613346737745 0.9002424480614514]), [1.4576287045221636, -0.18985034793032948, 0.3531323414550272])
xj = SE3(SO3([0.9862507560395666 0.1369699624100823 0.09245904827957012; -0.13886430591034213 0.9902075139348437 0.014345169605656027; -0.08958878699604185 -0.026987195933567416 0.9956131480149412]), [1.6984464146367098, -0.11174921384755679, 1.5387443176746354])
Dx = SE3(SO3([0.9927345338428196 -0.11878461756033923 0.019192705565480875; 0.11660639703977116 0.9103866828936518 -0.396987450405295; 0.02968321891713445 0.3963411437649858 0.9176233455365989]), [0.13336891362514347, -0.3925419741086739, 1.139250738971236])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
