Julia Version 1.5.0-DEV.385
Commit 5b241c2aa9 (2020-03-02 14:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_4AwoMz/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_4AwoMz/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.11868301451619366 -0.012250147735381743; 0.11868301451619366 0.0 0.008148647920038566; 0.012250147735381743 -0.008148647920038566 0.0])
dAA = so3([0.0 0.026304461721294664 0.008646921671660021; -0.026304461721294664 0.0 0.07604093546900009; -0.008646921671660021 -0.07604093546900009 0.0])
dAA = so3([0.0 0.0209202370760092 -0.1200829713410619; -0.0209202370760092 0.0 0.02863484226247298; 0.1200829713410619 -0.02863484226247298 0.0])
dAA = Quaternion(0.9925342527397507, [-0.02172910003861018, -0.11945159288664342, 0.011615520078769325])
dAA = SO3([0.9897236997808647 -0.07180753225561544 0.12365547461975028; 0.07224290867000373 0.9973866003440466 0.0009651948212044108; -0.12340162170317885 0.007977954970048823 0.9923247411989291])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.997612242456824 0.06326571169845426 0.02769952027662167; -0.06736121381698491 0.9798371998719062 0.18809978367952615; -0.015240753700829527 -0.18951652031015703 0.981759241339831]), [-0.08148647920038567, -0.12250147735381742, 1.1868301451619365])
xj = SE3(SO3([0.8246315543674256 -0.03403250687726903 -0.5646455419262708; 0.102420706099448 0.9906732676633043 0.089869214414067; 0.5563207694340145 -0.13194038507204567 0.8204260699681516]), [-0.2863484226247298, -1.200829713410619, -0.209202370760092])
Dx = SE3(SO3([0.8072846032446928 -0.09867332839602294 -0.5818549163041503; 0.047094543650040746 0.993550312473927 -0.1031497966132591; 0.5882802676636822 0.05586905087982902 0.8067248451803958]), [-0.1104586961661916, -0.8049756313540011, -1.5790757092109464])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
