Julia Version 1.5.0-DEV.391
Commit 4e609128ff (2020-03-03 07:30 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FileIO ────── v1.2.2
  Installed GAFramework ─ v0.4.0
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.0
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.2
   91ca9103 + GAFramework v0.4.0
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_yJdErO/Project.toml`
   5789e2e9 FileIO v1.2.2
   91ca9103 GAFramework v0.4.0
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_yJdErO/Manifest.toml`
   5789e2e9 FileIO v1.2.2
   91ca9103 GAFramework v0.4.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172261730489951
curgen: 20 fitness: 0.2172334275064654
curgen: 30 fitness: 0.2172334275064654
curgen: 40 fitness: 0.2172334275064654
curgen: 50 fitness: 0.2172334275064654
CoordinateCreature{Array{Float64,1}}([0.22261549733300678], -0.2172334275064654) 0.22261549733300678 -0.2172334275064654
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257413780729895
curgen: 100 fitness: 3.258126749139016
curgen: 150 fitness: 3.258285265233155
curgen: 200 fitness: 3.258322977209143
curgen: 250 fitness: 3.2583230105181364
curgen: 300 fitness: 3.2583398115410227
curgen: 350 fitness: 3.2583843331822666
curgen: 400 fitness: 3.258393082082053
curgen: 450 fitness: 3.258393511451862
curgen: 500 fitness: 3.2583960494695816
CoordinateCreature{Array{Float64,1}}([0.2227355522781698, 0.22241201192478482, -0.22255640821655986, 0.22247440983185235, 0.22262203194355554, 0.22251494555660448, 0.22266364004811712, -0.22291096422681386, -0.2224426323496799, 0.22145326937017823, -0.22257596270228436, 0.22306200621609557, 0.22339329340901218, 0.22274683239706233, -0.2226208967601521], -3.2583960494695816) [0.2227355522781698, 0.22241201192478482, -0.22255640821655986, 0.22247440983185235, 0.22262203194355554, 0.22251494555660448, 0.22266364004811712, -0.22291096422681386, -0.2224426323496799, 0.22145326937017823, -0.22257596270228436, 0.22306200621609557, 0.22339329340901218, 0.22274683239706233, -0.2226208967601521] -3.2583960494695816
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0039056468674800726
curgen: 100 fitness: -0.0035387542572777875
curgen: 150 fitness: -0.0034238875261110024
curgen: 200 fitness: -0.0024172211765574048
curgen: 250 fitness: -0.002205102920669333
curgen: 300 fitness: -0.0017200639956342911
curgen: 350 fitness: -0.0016842980187732337
curgen: 400 fitness: -0.0016842980187732337
curgen: 450 fitness: -0.0015813077484665428
curgen: 500 fitness: -0.0015813077484665428
CoordinateCreature{Array{Float64,1}}([0.00020742803077751975, -0.0005298772089434509, 0.0010188688639797307, 0.0015665242247905448, -0.0002331861239886256, 0.00012985653871713516, 0.0009683817261409875, 0.00063700837921909, -0.00011523414885818302, 0.0003753910613313099, -0.00019813847030117826, -0.0002623161420516086, 0.00024090140463119743, -0.00010491363028759283, -0.001551995238341979], 0.0015813077484665428) [0.00020742803077751975, -0.0005298772089434509, 0.0010188688639797307, 0.0015665242247905448, -0.0002331861239886256, 0.00012985653871713516, 0.0009683817261409875, 0.00063700837921909, -0.00011523414885818302, 0.0003753910613313099, -0.00019813847030117826, -0.0002623161420516086, 0.00024090140463119743, -0.00010491363028759283, -0.001551995238341979] 0.0015813077484665428
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 fitness: 1.0
curgen: 40 fitness: 1.0
curgen: 60 fitness: 1.0
curgen: 80 fitness: 1.0
curgen: 100 fitness: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 fitness: 1.0
curgen: 40 fitness: 1.0
curgen: 60 fitness: 1.0
curgen: 80 fitness: 1.0
curgen: 100 fitness: 1.0
    Testing GAFramework tests passed 
