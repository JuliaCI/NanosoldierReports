Julia Version 1.5.0-DEV.385
Commit 5b241c2aa9 (2020-03-02 14:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.0
  Installed FileIO ────── v1.2.2
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.0
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.2
   91ca9103 + GAFramework v0.4.0
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_HqcAQ4/Project.toml`
   5789e2e9 FileIO v1.2.2
   91ca9103 GAFramework v0.4.0
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_HqcAQ4/Manifest.toml`
   5789e2e9 FileIO v1.2.2
   91ca9103 GAFramework v0.4.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172329246650569
curgen: 20 fitness: 0.21723312521010998
curgen: 30 fitness: 0.21723312521010998
curgen: 40 fitness: 0.21723348683236318
curgen: 50 fitness: 0.21723348683236318
CoordinateCreature{Array{Float64,1}}([0.22260467364355538], -0.21723348683236318) 0.22260467364355538 -0.21723348683236318
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2573132896542676
curgen: 100 fitness: 3.2581110864115086
curgen: 150 fitness: 3.2582151619982427
curgen: 200 fitness: 3.258237932987297
curgen: 250 fitness: 3.2583855300360667
curgen: 300 fitness: 3.2583855300360667
curgen: 350 fitness: 3.2583954902503662
curgen: 400 fitness: 3.258447071901468
curgen: 450 fitness: 3.258452251517465
curgen: 500 fitness: 3.258453003554995
CoordinateCreature{Array{Float64,1}}([0.2224935094843274, 0.22257262735063776, 0.22276498682551998, 0.22263717032189415, -0.22234276705818237, -0.2224189734885277, 0.22307012012352395, -0.22260894282554758, -0.22288285168167746, 0.22239128853219017, 0.2228250095385335, -0.22321709661522457, 0.22250327672997253, 0.22223977788546515, -0.2226606805754382], -3.258453003554995) [0.2224935094843274, 0.22257262735063776, 0.22276498682551998, 0.22263717032189415, -0.22234276705818237, -0.2224189734885277, 0.22307012012352395, -0.22260894282554758, -0.22288285168167746, 0.22239128853219017, 0.2228250095385335, -0.22321709661522457, 0.22250327672997253, 0.22223977788546515, -0.2226606805754382] -3.258453003554995
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0016161622209835969
curgen: 100 fitness: -0.0014365703138992103
curgen: 150 fitness: -0.0014200687509173804
curgen: 200 fitness: -0.0012739024748213978
curgen: 250 fitness: -0.001205110162402434
curgen: 300 fitness: -0.001205110162402434
curgen: 350 fitness: -0.001205110162402434
curgen: 400 fitness: -0.001205110162402434
curgen: 450 fitness: -0.0011049903171738151
curgen: 500 fitness: -0.0011049903171738151
CoordinateCreature{Array{Float64,1}}([-0.0005691828620911641, 0.0004937287880557757, -0.0006438545997179695, -2.754771191379784e-5, -0.00021643862021292985, -4.904654097767625e-5, 1.4582533719772334e-5, -0.0002376734505719079, 9.926970606167563e-5, -0.0017216144972829472, -0.00048501194479489513, 0.0008257628171100786, -0.0006460694946932072, -0.0002793638720596412, -0.0003072178342188605], 0.0011049903171738151) [-0.0005691828620911641, 0.0004937287880557757, -0.0006438545997179695, -2.754771191379784e-5, -0.00021643862021292985, -4.904654097767625e-5, 1.4582533719772334e-5, -0.0002376734505719079, 9.926970606167563e-5, -0.0017216144972829472, -0.00048501194479489513, 0.0008257628171100786, -0.0006460694946932072, -0.0002793638720596412, -0.0003072178342188605] 0.0011049903171738151
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 fitness: 1.0
curgen: 40 fitness: 1.0
curgen: 60 fitness: 1.0
curgen: 80 fitness: 1.0
curgen: 100 fitness: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 fitness: 1.0
curgen: 40 fitness: 1.0
curgen: 60 fitness: 1.0
curgen: 80 fitness: 1.0
curgen: 100 fitness: 1.0
    Testing GAFramework tests passed 
