Julia Version 1.5.0-DEV.719
Commit 5a71af311a (2020-04-29 17:39 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_ecauFl/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_ecauFl/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723324104866684
curgen: 20 fitness: 0.21723324104866684
curgen: 30 fitness: 0.21723324104866684
curgen: 40 fitness: 0.21723324104866684
curgen: 50 fitness: 0.21723324104866684
CoordinateCreature{Array{Float64,1}}([0.22245467718271433], -0.21723324104866684) 0.22245467718271433 -0.21723324104866684
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579577207600887
curgen: 100 fitness: 3.258025472510969
curgen: 150 fitness: 3.2581220367992505
curgen: 200 fitness: 3.2582257385665554
curgen: 250 fitness: 3.258241697852898
curgen: 300 fitness: 3.258398031642239
curgen: 350 fitness: 3.25844494405831
curgen: 400 fitness: 3.2584461562545135
curgen: 450 fitness: 3.2584473820499382
curgen: 500 fitness: 3.2584746378967164
CoordinateCreature{Array{Float64,1}}([-0.2225983518901816, -0.22234880732816525, -0.2224049415761122, -0.22244922560568087, -0.22278195769450582, 0.22279904777245935, 0.2226210429949623, -0.22219429638898877, 0.22243630223718763, -0.22226312267671822, 0.22230420334420387, -0.22218103493056107, 0.22268383207047027, -0.22242489160343876, -0.22237611734987112], -3.2584746378967164) [-0.2225983518901816, -0.22234880732816525, -0.2224049415761122, -0.22244922560568087, -0.22278195769450582, 0.22279904777245935, 0.2226210429949623, -0.22219429638898877, 0.22243630223718763, -0.22226312267671822, 0.22230420334420387, -0.22218103493056107, 0.22268383207047027, -0.22242489160343876, -0.22237611734987112] -3.2584746378967164
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0017669938202686808
curgen: 100 fitness: -0.0017318233770708957
curgen: 150 fitness: -0.0017318233770708957
curgen: 200 fitness: -0.0017318233770708957
curgen: 250 fitness: -0.0017318233770708957
curgen: 300 fitness: -0.0017318233770708957
curgen: 350 fitness: -0.001708671732131961
curgen: 400 fitness: -0.001708671732131961
curgen: 450 fitness: -0.0012416968691297825
curgen: 500 fitness: -0.001192777889144736
CoordinateCreature{Array{Float64,1}}([-7.400385158757227e-6, -0.0002189198683112863, -0.0009164962994238906, 0.00010408400471363741, -0.0001984715825519023, -0.00046129266074522153, -0.00029957815072341205, 0.0003772139937290929, -6.104198981736735e-6, 0.00023953918996191023, 0.0001584234260831302, -0.001578038345947652, 0.0013665396918677193, -0.00037906392365233735, 0.0002131220363246495], 0.001192777889144736) [-7.400385158757227e-6, -0.0002189198683112863, -0.0009164962994238906, 0.00010408400471363741, -0.0001984715825519023, -0.00046129266074522153, -0.00029957815072341205, 0.0003772139937290929, -6.104198981736735e-6, 0.00023953918996191023, 0.0001584234260831302, -0.001578038345947652, 0.0013665396918677193, -0.00037906392365233735, 0.0002131220363246495] 0.001192777889144736
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
