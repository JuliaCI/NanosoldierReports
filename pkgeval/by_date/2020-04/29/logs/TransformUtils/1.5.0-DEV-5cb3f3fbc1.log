Julia Version 1.5.0-DEV.701
Commit 5cb3f3fbc1 (2020-04-28 13:13 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_xBkk2k/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_xBkk2k/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.0022239640933075793 0.07537699513030413; 0.0022239640933075793 0.0 0.0595626829276962; -0.07537699513030413 -0.0595626829276962 0.0])
dAA = so3([0.0 -0.044482460062957176 -0.0017629127738572868; 0.044482460062957176 0.0 0.03065571070416728; 0.0017629127738572868 -0.03065571070416728 0.0])
dAA = so3([0.0 0.12311850811258417 -0.018087959092311298; -0.12311850811258417 0.0 -0.1543897471800228; 0.018087959092311298 0.1543897471800228 0.0])
dAA = Quaternion(0.9962951625677382, [-0.07369504153743098, 0.005599665702076909, -0.04397310133417472])
dAA = SO3([0.993785315240472 -0.07380814320143943 0.08332529753653474; 0.07735719709084014 0.9961928455626105 -0.04019550358085169; -0.08004130977592223 0.04639151266153282 0.9957114121482841])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9938163020430236 -0.11069939651310987 -0.008648780559298392; 0.11103665375639965 0.9908936760185783 0.07616156740095596; 0.00013898241270286573 -0.07665093892459646 0.99705797938027]), [-0.595626829276962, 0.7537699513030413, 0.02223964093307579])
xj = SE3(SO3([0.9757996111784634 0.21248428175683437 0.05162895341029015; -0.21674005857153897 0.9085828253222631 0.35707281685927855; 0.028963180667280517 -0.3596215782398162 0.9326486233464016]), [1.5438974718002278, -0.18087959092311298, -1.2311850811258416])
Dx = SE3(SO3([0.9457034956503796 0.3120063586475607 0.09108748804386876; -0.32500683644600714 0.904352425621547 0.2766175094526425; 0.0039312311062297475 -0.2912022019764172 0.9566534497852789]), [2.022339567431961, -1.066906187822816, -1.3394257709691733])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
