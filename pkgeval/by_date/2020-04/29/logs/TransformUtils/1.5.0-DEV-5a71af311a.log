Julia Version 1.5.0-DEV.719
Commit 5a71af311a (2020-04-29 17:39 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Ixib63/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Ixib63/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.22052495364030977 0.20915197446105274; 0.22052495364030977 0.0 -0.060603543069681104; -0.20915197446105274 0.060603543069681104 0.0])
dAA = so3([0.0 -0.03133018813907125 -0.13841304369691618; 0.03133018813907125 0.0 -0.19221981768182195; 0.13841304369691618 0.19221981768182195 0.0])
dAA = so3([0.0 0.12309293828726874 0.020900482960839753; -0.12309293828726874 0.0 0.002175337084240997; -0.020900482960839753 -0.002175337084240997 0.0])
dAA = Quaternion(0.9929657214523387, [0.10858686850962294, -0.015663140380383765, 0.04452677892386951])
dAA = SO3([0.990726418051088 -0.009068661703379843 -0.13556889005436004; 0.0236571640328847 0.9940430394924689 0.10638972801213382; 0.1337964990781997 -0.10861028962066292 0.9850392387224651])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9389124873197743 -0.15445008794943813 -0.30755245322937264; -0.006949905688071193 0.8849513235033902 -0.46563167186148835; 0.3440858032030987 0.4393248517464141 0.8298184347627314]), [0.606035430696811, 2.0915197446105274, 2.2052495364030977])
xj = SE3(SO3([0.9729156091106511 -0.22762566424255035 -0.04027126180030157; 0.17411302947461832 0.8361995176495217 -0.5200529008186359; 0.15205219668265696 0.4989558333769082 0.8531841570394598]), [-0.02175337084240997, 0.2090048296083975, -1.2309293828726873])
Dx = SE3(SO3([0.9645915475927493 -0.04784846768549861 0.25937168398415156; 0.07061496324355197 0.9943563712449708 -0.07917659964058776; -0.25411940752082784 0.09468860071140511 0.9625265687847684]), [-1.7586958274376019, -3.07857082421959, -1.781768059158182])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
