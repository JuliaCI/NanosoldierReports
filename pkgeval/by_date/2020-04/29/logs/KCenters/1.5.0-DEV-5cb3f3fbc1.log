Julia Version 1.5.0-DEV.701
Commit 5cb3f3fbc1 (2020-04-28 13:13 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Missings ──────────────────── v0.4.3
  Installed TableTraits ───────────────── v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.2
  Installed StatsBase ─────────────────── v0.32.2
  Installed MLDataUtils ───────────────── v0.5.1
  Installed SimilaritySearch ──────────── v0.3.19
  Installed LearnBase ─────────────────── v0.2.2
  Installed MLDataPattern ─────────────── v0.5.3
  Installed DataAPI ───────────────────── v1.3.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed OrderedCollections ────────── v1.1.0
  Installed Tables ────────────────────── v1.0.4
  Installed PooledArrays ──────────────── v0.5.3
  Installed DataStructures ────────────── v0.17.14
  Installed MappedArrays ──────────────── v0.2.2
  Installed Compat ────────────────────── v3.8.0
  Installed Reexport ──────────────────── v0.2.0
  Installed DataFrames ────────────────── v0.20.2
  Installed CategoricalArrays ─────────── v0.7.7
  Installed InvertedIndices ───────────── v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed JSON ──────────────────────── v0.21.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.8.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.14
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.2
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_R93UxJ/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_R93UxJ/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.8.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.14
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.2
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
WARNING: Method definition deque(Type{T}) where {T} in module DataStructures at /home/pkgeval/.julia/packages/DataStructures/w35Mo/src/deque.jl:89 overwritten at deprecated.jl:70.
  ** incremental compilation may be fatally broken for this module **

Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.932025450070699
[ Info: 0.8307796732584636
[ Info: 0.5529132370650768
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3250056021660566
mean(cdnet.distances) = 0.3435993084559838
mean(crand.distances) = 0.3346215718736251
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7829550657675665,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.90625,"distances_sum":1806.2296750818925}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8533659049284055,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.375,"distances_sum":2104.1761516007}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8533659049284055,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.375,"distances_sum":2104.1761516007}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9485004578754584,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.84375,"distances_sum":2696.1723945832086}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9575549450549456,"seconds":6.822869181632996e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.84375,"distances_sum":2782.8310830429427}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9575549450549456,"seconds":6.822869181632996e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.84375,"distances_sum":2782.8310830429427}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790922619047622,"seconds":6.584450602531433e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9453125,"distances_sum":2924.1063795061}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9796130952380954,"seconds":1.0229647159576416e-5,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9375,"distances_sum":2947.3365515899595}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9796130952380954,"seconds":1.0229647159576416e-5,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9375,"distances_sum":2947.3365515899595}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9796130952380954,"seconds":1.0229647159576416e-5,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9375,"distances_sum":2947.3365515899595}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.171875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.171875,"f1":null,"seconds":3.1441450119018555e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.359375,"distances_sum":441.2134419585651}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1748046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1748046875,"f1":null,"seconds":3.1068921089172363e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.1796875,"distances_sum":418.6995923645684}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1748046875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1748046875,"f1":null,"seconds":3.1068921089172363e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.1796875,"distances_sum":418.6995923645684}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.552734375,"f1":null,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.4765625,"distances_sum":1332.1864147476417}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8795105935730944,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.4140625,"distances_sum":2034.6275804893191}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7169850982350989,"seconds":4.500150680541992e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.5546875,"distances_sum":1381.1897202288098}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8558613261738269,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.3984375,"distances_sum":1897.0183333545474}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.796875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.796875,"f1":0.8795105935730944,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.4140625,"distances_sum":2034.6275804893191}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.933785485347986,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.625,"distances_sum":2372.218525300572}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604223901098908,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7890625,"distances_sum":2605.451497505104}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9063072344322353,"seconds":6.746500730514526e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.609375,"distances_sum":2182.0427142442027}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9336423992674001,"seconds":6.688758730888367e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.59375,"distances_sum":2374.399024117992}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8865332584082593,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.4921875,"distances_sum":2079.023113161284}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8891030844155852,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.5,"distances_sum":2115.924739954163}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9604223901098908,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7890625,"distances_sum":2605.451497505104}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9604223901098908,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7890625,"distances_sum":2605.451497505104}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3486328125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3486328125,"f1":null,"seconds":3.8053840398788452e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":5.4921875,"distances_sum":916.5576973148326}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.486328125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.486328125,"f1":null,"seconds":4.816800355911255e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.6953125,"distances_sum":1250.576863266141}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.71875,"f1":0.824431818181819,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.953125,"distances_sum":1915.3650524638558}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.71875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.71875,"f1":0.824431818181819,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.953125,"distances_sum":1915.3650524638558}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9215976731601739,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.5625,"distances_sum":2455.9586442530476}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8897722069597077,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.4453125,"distances_sum":2195.164770407285}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9518887362637368,"seconds":6.582587957382202e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7578125,"distances_sum":2628.73466478301}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8458400974025981,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.2109375,"distances_sum":1973.606742873865}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8928774350649358,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.34375,"distances_sum":2268.4770191297657}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9518887362637368,"seconds":6.582587957382202e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7578125,"distances_sum":2628.73466478301}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605139652014656,"seconds":6.543472409248352e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.84375,"distances_sum":2666.4459153912553}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9672447344322348,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.859375,"distances_sum":2718.2502783136392}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9587854853479856,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8203125,"distances_sum":2658.1713739707066}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9672447344322348,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.859375,"distances_sum":2718.2502783136392}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9672447344322348,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.859375,"distances_sum":2718.2502783136392}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.7988587801087809,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.015625,"distances_sum":1684.0229701050498}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7966585497835507,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8984375,"distances_sum":1649.1152465550033}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6826171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.7988587801087809,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.015625,"distances_sum":1684.0229701050498}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9445913461538465,"seconds":6.664544343948364e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.65625,"distances_sum":2456.23160833759}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9445913461538465,"seconds":6.664544343948364e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.65625,"distances_sum":2456.23160833759}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9477564102564107,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8046875,"distances_sum":2481.7096815027776}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9627289377289381,"seconds":6.61797821521759e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.859375,"distances_sum":2612.188579456528}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9627289377289381,"seconds":6.61797821521759e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.859375,"distances_sum":2612.188579456528}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9627289377289381,"seconds":6.61797821521759e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.859375,"distances_sum":2612.188579456528}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3115234375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3115234375,"f1":null,"seconds":2.4475157260894775e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":5.375,"distances_sum":844.2690069776027}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.716796875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.716796875,"f1":0.8263372044622053,"seconds":3.6209821701049805e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.015625,"distances_sum":1925.1135752857926}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.447265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.447265625,"f1":0.6009677822177825,"seconds":2.562999725341797e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":6.203125,"distances_sum":1202.8643739418749}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.716796875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.716796875,"f1":0.8263372044622053,"seconds":3.6209821701049805e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.015625,"distances_sum":1925.1135752857926}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9099051989676996,"seconds":3.9637088775634766e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.59375,"distances_sum":2339.8628661297967}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8525390625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8525390625,"f1":0.9099051989676996,"seconds":3.9637088775634766e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.59375,"distances_sum":2339.8628661297967}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9583562271062276,"seconds":6.57886266708374e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.828125,"distances_sum":2637.0140390390898}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9642857142857147,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.8203125,"distances_sum":2682.0447995765653}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9403216575091579,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.75,"distances_sum":2494.1554262405134}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9642857142857147,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.8203125,"distances_sum":2682.0447995765653}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9642857142857147,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.8203125,"distances_sum":2682.0447995765653}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":4.86522912979126e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":6.2265625,"distances_sum":992.080922787156}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19140625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.19140625,"f1":null,"seconds":3.689900040626526e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":5.0703125,"distances_sum":469.57793958209004}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3896484375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3896484375,"f1":null,"seconds":4.86522912979126e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":6.2265625,"distances_sum":992.080922787156}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7971131299256307,"seconds":4.952773451805115e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.9921875,"distances_sum":1726.0895511557144}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.870788066100567,"seconds":4.239380359649658e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.4609375,"distances_sum":2084.415479946294}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7949477605727615,"seconds":4.077330231666565e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.0,"distances_sum":1719.9836241410621}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8578275890775898,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.484375,"distances_sum":1998.3635086502638}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5498046875,"f1":0.6947011322011328,"seconds":4.816800355911255e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.21875,"distances_sum":1415.1079172689494}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":9,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.870788066100567,"seconds":4.239380359649658e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.4609375,"distances_sum":2084.415479946294}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":10,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9016171328671335,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.703125,"distances_sum":2244.6576546692218}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.949307463369964,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.71875,"distances_sum":2579.386227178558}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8971127830502836,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.625,"distances_sum":2227.988244328558}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.956553342490843,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8046875,"distances_sum":2621.1652664695357}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8883819305694316,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.515625,"distances_sum":2200.4823056346577}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.895690247252748,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.640625,"distances_sum":2211.26733967529}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9137076465201471,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.5625,"distances_sum":2375.8221936635946}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9305205211455216,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.6640625,"distances_sum":2455.7980804736767}, best_list's length: 16, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.956553342490843,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8046875,"distances_sum":2621.1652664695357}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.956553342490843,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8046875,"distances_sum":2621.1652664695357}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4794921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":0.9856770833333335,"recall":0.4794921875,"f1":0.6298564282939285,"seconds":6.970018148422241e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":6.6171875,"distances_sum":1222.1401124976792}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4794921875,"state":{"ssize":1,"bsize":3},"perf":{"precision":0.9856770833333335,"recall":0.4794921875,"f1":0.6298564282939285,"seconds":6.970018148422241e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":6.6171875,"distances_sum":1222.1401124976792}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.987611607142857,"recall":0.7607421875,"f1":0.8507242757242761,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.328125,"distances_sum":2056.9487252801464}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9842540922619049,"recall":0.857421875,"f1":0.9123848157051286,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.5703125,"distances_sum":2536.6921891381157}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":0.9766090029761905,"recall":0.7392578125,"f1":0.8294026936605065,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.3359375,"distances_sum":2003.4708250760912}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.857421875,"state":{"ssize":1,"bsize":7},"perf":{"precision":0.9842540922619049,"recall":0.857421875,"f1":0.9123848157051286,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.5703125,"distances_sum":2536.6921891381157}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":9}, perf: {"precision":0.9842819940476191,"recall":0.9072265625,"f1":0.9407036973443226,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.8046875,"distances_sum":2713.722665087119}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":0.9846540178571429,"recall":0.9013671875,"f1":0.9373240041208795,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.78125,"distances_sum":2703.071745943202}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9831194196428571,"recall":0.904296875,"f1":0.9382619333791211,"seconds":4.30084764957428e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.796875,"distances_sum":2732.6965862661173}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":3,"bsize":9}, perf: {"precision":0.9836309523809526,"recall":0.9091796875,"f1":0.9414677770146525,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.828125,"distances_sum":2726.796961006576}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":3,"bsize":8}, perf: {"precision":0.990327380952381,"recall":0.87109375,"f1":0.9220781822344325,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.7109375,"distances_sum":2538.107029353843}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":3,"bsize":9},"perf":{"precision":0.9836309523809526,"recall":0.9091796875,"f1":0.9414677770146525,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.828125,"distances_sum":2726.796961006576}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9091796875,"state":{"ssize":3,"bsize":9},"perf":{"precision":0.9836309523809526,"recall":0.9091796875,"f1":0.9414677770146525,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.828125,"distances_sum":2726.796961006576}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.16796875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.16796875,"f1":null,"seconds":2.8405338525772095e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":4.4609375,"distances_sum":422.62360034611163}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1650390625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1650390625,"f1":null,"seconds":2.983957529067993e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":4.4765625,"distances_sum":420.7708264353067}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.16796875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.16796875,"f1":null,"seconds":2.8405338525772095e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":4.4609375,"distances_sum":422.62360034611163}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8499333999334006,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.2890625,"distances_sum":1971.936016388698}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8499333999334006,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.2890625,"distances_sum":1971.936016388698}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9045818764568773,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.453125,"distances_sum":2270.249546204619}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8801191863691872,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.2578125,"distances_sum":2165.056661452608}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.937917811355312,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.59375,"distances_sum":2496.725149565217}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9067141192141197,"seconds":6.875582039356232e-5,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.6015625,"distances_sum":2263.932658585208}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.937917811355312,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.59375,"distances_sum":2496.725149565217}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.937917811355312,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.1399388313293457e-6,"evaluations":8.59375,"distances_sum":2496.725149565217}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2451171875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2451171875,"f1":null,"seconds":3.427267074584961e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":6.4453125,"distances_sum":492.01342266540473}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2451171875,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2451171875,"f1":null,"seconds":3.427267074584961e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":6.4453125,"distances_sum":492.01342266540473}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2451171875,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2451171875,"f1":null,"seconds":3.427267074584961e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":6.4453125,"distances_sum":492.01342266540473}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":2,"bsize":4}, perf: {"precision":0.9845610119047618,"recall":0.6513671875,"f1":0.7710860320235328,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":7.34375,"distances_sum":1315.144466575422}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6513671875,"state":{"ssize":2,"bsize":4},"perf":{"precision":0.9845610119047618,"recall":0.6513671875,"f1":0.7710860320235328,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":7.34375,"distances_sum":1315.144466575422}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":8}, perf: {"precision":0.9865606398809523,"recall":0.9130859375,"f1":0.9450098729395606,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.8984375,"distances_sum":2165.4684910022606}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":5,"bsize":8},"perf":{"precision":0.9865606398809523,"recall":0.9130859375,"f1":0.9450098729395606,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.8984375,"distances_sum":2165.4684910022606}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":5,"bsize":8},"perf":{"precision":0.9865606398809523,"recall":0.9130859375,"f1":0.9450098729395606,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.8984375,"distances_sum":2165.4684910022606}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":5,"bsize":8},"perf":{"precision":0.9865606398809523,"recall":0.9130859375,"f1":0.9450098729395606,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.8984375,"distances_sum":2165.4684910022606}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8664065101565112,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.84375,"distances_sum":1813.1876253033188}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.5222619771957397e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.0546875,"distances_sum":522.0196433913713}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8664065101565112,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.84375,"distances_sum":1813.1876253033188}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9568910256410262,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7265625,"distances_sum":2409.7956081149905}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9568910256410262,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7265625,"distances_sum":2409.7956081149905}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9755608974358976,"seconds":4.3995678424835205e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.953125,"distances_sum":2487.8027819965623}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9755608974358976,"seconds":4.3995678424835205e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.953125,"distances_sum":2487.8027819965623}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9755608974358976,"seconds":4.3995678424835205e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.953125,"distances_sum":2487.8027819965623}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.224609375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.224609375,"f1":null,"seconds":2.030283212661743e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":6.1640625,"distances_sum":511.54593286989893}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.224609375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.224609375,"f1":null,"seconds":2.030283212661743e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":6.1640625,"distances_sum":511.54593286989893}}, n: 9
mean(cfft.distances) = 0.3295780786745922
mean(cdnet.distances) = 0.8071575957437899
mean(crand.distances) = 0.7554152899231144
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9333333333333332
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8533333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8377777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8888888888888888
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444443
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8333333333333334
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9466666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8955555555555557
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9088888888888889
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.928888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8644444444444445
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.88
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9088888888888889
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8777777777777778
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9355555555555556
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8333333333333334
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9155555555555556
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8777777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 11, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 3, 2, 2, 3, 3, 2, 3, 1]
acc = 0.9866666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 11, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 3, 2, 2, 3, 3, 2, 3, 1]
acc = 0.9866666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 11, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 3, 2, 2, 3, 3, 2, 3, 1]
acc = 0.9866666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 11, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 3, 2, 2, 3, 3, 2, 3, 1]
acc = 0.9866666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 11, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 3, 2, 2, 3, 3, 2, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 11, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 3, 2, 2, 3, 3, 2, 3, 1]
acc = 0.9533333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 11, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 2, 1, 3, 2, 2, 3, 3, 2, 3, 1]
acc = 0.96
*** finished computation of 12 references, err: [Inf, 0.5628811813394229] ***
*** center 1: selecting labels [1] (freq >= 1) [from [43, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.3279779099470547] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3279779099470547, 0.23331434516636124] ***
*** starting iteration: 2; err: [Inf, 0.3279779099470547, 0.23331434516636124] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3279779099470547, 0.23331434516636124, 0.23210009948739238] ***
*** starting iteration: 3; err: [Inf, 0.3279779099470547, 0.23331434516636124, 0.23210009948739238] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3279779099470547, 0.23331434516636124, 0.23210009948739238, 0.23198625867397668] ***
*** finished computation of 3 references, err: [Inf, 0.3279779099470547, 0.23331434516636124, 0.23210009948739238, 0.23198625867397668] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [12, 177, 24]]
** centroid: 1, normalized-entropy: 0.5114628099349293, [(1, 12), (2, 177), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [260, 2, 0]]
** centroid: 2, normalized-entropy: 0.06466104967715186, [(1, 260), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [136, 55, 0]]
** centroid: 3, normalized-entropy: 0.8660689816802385, [(1, 136), (2, 55)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.47969725222928616] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47969725222928616, 0.24763266900638076] ***
*** starting iteration: 2; err: [Inf, 0.47969725222928616, 0.24763266900638076] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47969725222928616, 0.24763266900638076, 0.23922363169647676] ***
*** starting iteration: 3; err: [Inf, 0.47969725222928616, 0.24763266900638076, 0.23922363169647676] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47969725222928616, 0.24763266900638076, 0.23922363169647676, 0.2374107216511374] ***
*** finished computation of 3 references, err: [Inf, 0.47969725222928616, 0.24763266900638076, 0.23922363169647676, 0.2374107216511374] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [134, 50, 0]]
** centroid: 1, normalized-entropy: 0.8439491244805034, [(1, 134), (2, 50)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [14, 176, 24]]
** centroid: 2, normalized-entropy: 0.5320798701094077, [(1, 14), (2, 176), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [266, 3, 0]]
** centroid: 3, normalized-entropy: 0.08833962893030475, [(1, 266), (2, 3)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31277707367130125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31277707367130125, 0.2765207680757681] ***
*** starting iteration: 2; err: [Inf, 0.31277707367130125, 0.2765207680757681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31277707367130125, 0.2765207680757681, 0.25574886163967525] ***
*** starting iteration: 3; err: [Inf, 0.31277707367130125, 0.2765207680757681, 0.25574886163967525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31277707367130125, 0.2765207680757681, 0.25574886163967525, 0.24260851368657138] ***
*** finished computation of 3 references, err: [Inf, 0.31277707367130125, 0.2765207680757681, 0.25574886163967525, 0.24260851368657138] ***
*** center 1: selecting labels [1] (freq >= 2) [from [225, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [89, 77, 0]]
** centroid: 2, normalized-entropy: 0.9962271482775463, [(1, 89), (2, 77)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [98, 160, 18]]
** centroid: 3, normalized-entropy: 0.7844195097273813, [(1, 98), (2, 160), (3, 18)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3191539134708577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3191539134708577, 0.2097676448984066] ***
*** starting iteration: 2; err: [Inf, 0.3191539134708577, 0.2097676448984066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483] ***
*** starting iteration: 3; err: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483, 0.17615101584890583] ***
*** starting iteration: 4; err: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483, 0.17615101584890583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483, 0.17615101584890583, 0.16890763825360774] ***
*** starting iteration: 5; err: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483, 0.17615101584890583, 0.16890763825360774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483, 0.17615101584890583, 0.16890763825360774, 0.16434638201910723] ***
*** starting iteration: 6; err: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483, 0.17615101584890583, 0.16890763825360774, 0.16434638201910723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483, 0.17615101584890583, 0.16890763825360774, 0.16434638201910723, 0.1618705203493794] ***
*** starting iteration: 7; err: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483, 0.17615101584890583, 0.16890763825360774, 0.16434638201910723, 0.1618705203493794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483, 0.17615101584890583, 0.16890763825360774, 0.16434638201910723, 0.1618705203493794, 0.1595483221849231] ***
*** starting iteration: 8; err: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483, 0.17615101584890583, 0.16890763825360774, 0.16434638201910723, 0.1618705203493794, 0.1595483221849231] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483, 0.17615101584890583, 0.16890763825360774, 0.16434638201910723, 0.1618705203493794, 0.1595483221849231, 0.1576915102746539] ***
*** starting iteration: 9; err: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483, 0.17615101584890583, 0.16890763825360774, 0.16434638201910723, 0.1618705203493794, 0.1595483221849231, 0.1576915102746539] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483, 0.17615101584890583, 0.16890763825360774, 0.16434638201910723, 0.1618705203493794, 0.1595483221849231, 0.1576915102746539, 0.15671807966634138] ***
*** finished computation of 7 references, err: [Inf, 0.3191539134708577, 0.2097676448984066, 0.18833317253011483, 0.17615101584890583, 0.16890763825360774, 0.16434638201910723, 0.1618705203493794, 0.1595483221849231, 0.1576915102746539, 0.15671807966634138] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [113, 8, 0]]
** centroid: 1, normalized-entropy: 0.3512580905562789, [(1, 113), (2, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [155, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [36, 54, 0]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(1, 36), (2, 54)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 62, 2]]
** centroid: 4, normalized-entropy: 0.2006223243127146, [(2, 62), (3, 2)]
*** center 5: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 28, 22]]
** centroid: 6, normalized-entropy: 0.9895875212220558, [(2, 28), (3, 22)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [6, 82, 0]]
** centroid: 7, normalized-entropy: 0.3591016256485496, [(1, 6), (2, 82)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26217599888716164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26217599888716164, 0.1780660810260412] ***
*** starting iteration: 2; err: [Inf, 0.26217599888716164, 0.1780660810260412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26217599888716164, 0.1780660810260412, 0.16537445095804768] ***
*** starting iteration: 3; err: [Inf, 0.26217599888716164, 0.1780660810260412, 0.16537445095804768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26217599888716164, 0.1780660810260412, 0.16537445095804768, 0.16083584035253864] ***
*** starting iteration: 4; err: [Inf, 0.26217599888716164, 0.1780660810260412, 0.16537445095804768, 0.16083584035253864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26217599888716164, 0.1780660810260412, 0.16537445095804768, 0.16083584035253864, 0.15903594987843928] ***
*** starting iteration: 5; err: [Inf, 0.26217599888716164, 0.1780660810260412, 0.16537445095804768, 0.16083584035253864, 0.15903594987843928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26217599888716164, 0.1780660810260412, 0.16537445095804768, 0.16083584035253864, 0.15903594987843928, 0.15603097598801466] ***
*** starting iteration: 6; err: [Inf, 0.26217599888716164, 0.1780660810260412, 0.16537445095804768, 0.16083584035253864, 0.15903594987843928, 0.15603097598801466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26217599888716164, 0.1780660810260412, 0.16537445095804768, 0.16083584035253864, 0.15903594987843928, 0.15603097598801466, 0.1536991005467399] ***
*** starting iteration: 7; err: [Inf, 0.26217599888716164, 0.1780660810260412, 0.16537445095804768, 0.16083584035253864, 0.15903594987843928, 0.15603097598801466, 0.1536991005467399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26217599888716164, 0.1780660810260412, 0.16537445095804768, 0.16083584035253864, 0.15903594987843928, 0.15603097598801466, 0.1536991005467399, 0.15258434167546478] ***
*** starting iteration: 8; err: [Inf, 0.26217599888716164, 0.1780660810260412, 0.16537445095804768, 0.16083584035253864, 0.15903594987843928, 0.15603097598801466, 0.1536991005467399, 0.15258434167546478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26217599888716164, 0.1780660810260412, 0.16537445095804768, 0.16083584035253864, 0.15903594987843928, 0.15603097598801466, 0.1536991005467399, 0.15258434167546478, 0.15183870899986693] ***
*** finished computation of 7 references, err: [Inf, 0.26217599888716164, 0.1780660810260412, 0.16537445095804768, 0.16083584035253864, 0.15903594987843928, 0.15603097598801466, 0.1536991005467399, 0.15258434167546478, 0.15183870899986693] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [110, 2, 0]]
** centroid: 1, normalized-entropy: 0.12923377484588472, [(1, 110), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [125, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [56, 25, 0]]
** centroid: 4, normalized-entropy: 0.8915996278279094, [(1, 56), (2, 25)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 73, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [25, 80, 0]]
** centroid: 6, normalized-entropy: 0.7918583525674836, [(1, 25), (2, 80)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 49, 24]]
** centroid: 7, normalized-entropy: 0.9136617865655933, [(2, 49), (3, 24)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22905359807950648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22905359807950648, 0.16672609284145945] ***
*** starting iteration: 2; err: [Inf, 0.22905359807950648, 0.16672609284145945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22905359807950648, 0.16672609284145945, 0.1523013685172287] ***
*** starting iteration: 3; err: [Inf, 0.22905359807950648, 0.16672609284145945, 0.1523013685172287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22905359807950648, 0.16672609284145945, 0.1523013685172287, 0.1487550020533456] ***
*** starting iteration: 4; err: [Inf, 0.22905359807950648, 0.16672609284145945, 0.1523013685172287, 0.1487550020533456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22905359807950648, 0.16672609284145945, 0.1523013685172287, 0.1487550020533456, 0.14759359531302838] ***
*** starting iteration: 5; err: [Inf, 0.22905359807950648, 0.16672609284145945, 0.1523013685172287, 0.1487550020533456, 0.14759359531302838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22905359807950648, 0.16672609284145945, 0.1523013685172287, 0.1487550020533456, 0.14759359531302838, 0.1471466297856944] ***
*** finished computation of 7 references, err: [Inf, 0.22905359807950648, 0.16672609284145945, 0.1523013685172287, 0.1487550020533456, 0.14759359531302838, 0.1471466297856944] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [63, 21, 0]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(1, 63), (2, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [113, 10, 0]]
** centroid: 2, normalized-entropy: 0.40674618256046063, [(1, 113), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 93, 2]]
** centroid: 3, normalized-entropy: 0.14731066693045392, [(2, 93), (3, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [58, 33, 0]]
** centroid: 6, normalized-entropy: 0.9448506439764089, [(1, 58), (2, 33)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 80, 16]]
** centroid: 7, normalized-entropy: 0.6500224216483541, [(2, 80), (3, 16)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3028093037375895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3028093037375895, 0.20026479264883487] ***
*** starting iteration: 2; err: [Inf, 0.3028093037375895, 0.20026479264883487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3028093037375895, 0.20026479264883487, 0.19763929575301326] ***
*** starting iteration: 3; err: [Inf, 0.3028093037375895, 0.20026479264883487, 0.19763929575301326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3028093037375895, 0.20026479264883487, 0.19763929575301326, 0.19671105710907025] ***
*** finished computation of 7 references, err: [Inf, 0.3028093037375895, 0.20026479264883487, 0.19763929575301326, 0.19671105710907025] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 68, 6]]
** centroid: 1, normalized-entropy: 0.40597703847557104, [(2, 68), (3, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [44, 64, 0]]
** centroid: 2, normalized-entropy: 0.975119064940866, [(1, 44), (2, 64)]
*** center 3: selecting labels [1] (freq >= 2) [from [141, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [30, 65, 0]]
** centroid: 4, normalized-entropy: 0.8997437586982626, [(1, 30), (2, 65)]
*** center 5: selecting labels [1] (freq >= 2) [from [99, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 36, 18]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 36), (3, 18)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3746505658549984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3746505658549984, 0.25961757629392096] ***
*** starting iteration: 2; err: [Inf, 0.3746505658549984, 0.25961757629392096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533] ***
*** starting iteration: 3; err: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063] ***
*** starting iteration: 4; err: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063, 0.21638059679200983] ***
*** starting iteration: 5; err: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063, 0.21638059679200983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063, 0.21638059679200983, 0.20965727860411013] ***
*** starting iteration: 6; err: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063, 0.21638059679200983, 0.20965727860411013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063, 0.21638059679200983, 0.20965727860411013, 0.20231086391895572] ***
*** starting iteration: 7; err: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063, 0.21638059679200983, 0.20965727860411013, 0.20231086391895572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063, 0.21638059679200983, 0.20965727860411013, 0.20231086391895572, 0.19735898058917345] ***
*** starting iteration: 8; err: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063, 0.21638059679200983, 0.20965727860411013, 0.20231086391895572, 0.19735898058917345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063, 0.21638059679200983, 0.20965727860411013, 0.20231086391895572, 0.19735898058917345, 0.19546235446934065] ***
*** starting iteration: 9; err: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063, 0.21638059679200983, 0.20965727860411013, 0.20231086391895572, 0.19735898058917345, 0.19546235446934065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063, 0.21638059679200983, 0.20965727860411013, 0.20231086391895572, 0.19735898058917345, 0.19546235446934065, 0.19396819627035347] ***
*** starting iteration: 10; err: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063, 0.21638059679200983, 0.20965727860411013, 0.20231086391895572, 0.19735898058917345, 0.19546235446934065, 0.19396819627035347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063, 0.21638059679200983, 0.20965727860411013, 0.20231086391895572, 0.19735898058917345, 0.19546235446934065, 0.19396819627035347, 0.19236163255050667] ***
*** finished computation of 7 references, err: [Inf, 0.3746505658549984, 0.25961757629392096, 0.23354005890324533, 0.22331471362806063, 0.21638059679200983, 0.20965727860411013, 0.20231086391895572, 0.19735898058917345, 0.19546235446934065, 0.19396819627035347, 0.19236163255050667] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [4, 68, 0]]
** centroid: 1, normalized-entropy: 0.3095434291503252, [(1, 4), (2, 68)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [74, 22, 0]]
** centroid: 2, normalized-entropy: 0.7765557854444601, [(1, 74), (2, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [4, 87, 0]]
** centroid: 3, normalized-entropy: 0.26014536394771426, [(1, 4), (2, 87)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 49, 24]]
** centroid: 4, normalized-entropy: 0.9136617865655933, [(2, 49), (3, 24)]
*** center 5: selecting labels [1] (freq >= 2) [from [93, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [134, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [105, 2, 0]]
** centroid: 7, normalized-entropy: 0.13402979616803584, [(1, 105), (2, 2)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23929523775630493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23929523775630493, 0.19805136224432293] ***
*** starting iteration: 2; err: [Inf, 0.23929523775630493, 0.19805136224432293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23929523775630493, 0.19805136224432293, 0.19296846965347406] ***
*** starting iteration: 3; err: [Inf, 0.23929523775630493, 0.19805136224432293, 0.19296846965347406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23929523775630493, 0.19805136224432293, 0.19296846965347406, 0.19192239701485392] ***
*** starting iteration: 4; err: [Inf, 0.23929523775630493, 0.19805136224432293, 0.19296846965347406, 0.19192239701485392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23929523775630493, 0.19805136224432293, 0.19296846965347406, 0.19192239701485392, 0.19122393430396356] ***
*** finished computation of 7 references, err: [Inf, 0.23929523775630493, 0.19805136224432293, 0.19296846965347406, 0.19192239701485392, 0.19122393430396356] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [64, 2, 0]]
** centroid: 1, normalized-entropy: 0.19590927087360496, [(1, 64), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [41, 37, 0]]
** centroid: 3, normalized-entropy: 0.9981021327390103, [(1, 41), (2, 37)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 93, 18]]
** centroid: 4, normalized-entropy: 0.6394571324851642, [(2, 93), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [105, 26, 0]]
** centroid: 5, normalized-entropy: 0.7188641311053031, [(1, 105), (2, 26)]
*** center 6: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 79, 0]]
** centroid: 7, normalized-entropy: 0.16702680404522793, [(1, 2), (2, 79)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2029310468620657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2029310468620657, 0.16653403902619338] ***
*** finished computation of 7 references, err: [Inf, 0.2029310468620657, 0.16653403902619338] ***
*** center 1: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [37, 27, 0]]
** centroid: 3, normalized-entropy: 0.9823166080205502, [(1, 37), (2, 27)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 111, 24]]
** centroid: 4, normalized-entropy: 0.6751914401458716, [(2, 111), (3, 24)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [60, 22, 0]]
** centroid: 5, normalized-entropy: 0.8390040613676978, [(1, 60), (2, 22)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [61, 74, 0]]
** centroid: 6, normalized-entropy: 0.9933005848443246, [(1, 61), (2, 74)]
*** center 7: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23785231953397437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23785231953397437, 0.16922028400197645] ***
*** finished computation of 7 references, err: [Inf, 0.23785231953397437, 0.16922028400197645] ***
*** center 1: selecting labels [1] (freq >= 1) [from [121, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 17]]
** centroid: 3, normalized-entropy: 0.9681647320759545, [(2, 26), (3, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [105, 65, 0]]
** centroid: 4, normalized-entropy: 0.9596868937742168, [(1, 105), (2, 65)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [87, 7, 0]]
** centroid: 5, normalized-entropy: 0.3823806751537801, [(1, 87), (2, 7)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [6, 75, 0]]
** centroid: 6, normalized-entropy: 0.38094658570539014, [(1, 6), (2, 75)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 56, 7]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(2, 56), (3, 7)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20531151587886365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20531151587886365, 0.15824243183089964] ***
*** finished computation of 7 references, err: [Inf, 0.20531151587886365, 0.15824243183089964] ***
*** center 1: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 105, 18]]
** centroid: 3, normalized-entropy: 0.6006085754131871, [(2, 105), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [64, 69, 0]]
** centroid: 4, normalized-entropy: 0.9989802737140191, [(1, 64), (2, 69)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [57, 33, 0]]
** centroid: 5, normalized-entropy: 0.9480782435939054, [(1, 57), (2, 33)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [85, 30, 0]]
** centroid: 6, normalized-entropy: 0.828055725379504, [(1, 85), (2, 30)]
*** center 7: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3173654620065815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3173654620065815, 0.30055580857016184] ***
*** starting iteration: 2; err: [Inf, 0.3173654620065815, 0.30055580857016184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3173654620065815, 0.30055580857016184, 0.2959490825531182] ***
*** starting iteration: 3; err: [Inf, 0.3173654620065815, 0.30055580857016184, 0.2959490825531182] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3173654620065815, 0.30055580857016184, 0.2959490825531182, 0.29396379191020094] ***
*** finished computation of 3 references, err: [Inf, 0.3173654620065815, 0.30055580857016184, 0.2959490825531182, 0.29396379191020094] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [155, 48, 0]]
** centroid: 1, normalized-entropy: 0.789092159292948, [(1, 155), (2, 48)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [4, 180, 24]]
** centroid: 2, normalized-entropy: 0.4098580467361792, [(1, 4), (2, 180), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [249, 6, 0]]
** centroid: 3, normalized-entropy: 0.16082302082246946, [(1, 249), (2, 6)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4402977909524178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4402977909524178, 0.3301989684046164] ***
*** starting iteration: 2; err: [Inf, 0.4402977909524178, 0.3301989684046164] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4402977909524178, 0.3301989684046164, 0.32346609683576105] ***
*** starting iteration: 3; err: [Inf, 0.4402977909524178, 0.3301989684046164, 0.32346609683576105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4402977909524178, 0.3301989684046164, 0.32346609683576105, 0.31605121116621654] ***
*** finished computation of 3 references, err: [Inf, 0.4402977909524178, 0.3301989684046164, 0.32346609683576105, 0.31605121116621654] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [204, 14, 0]]
** centroid: 1, normalized-entropy: 0.3439745143595339, [(1, 204), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [208, 32, 0]]
** centroid: 2, normalized-entropy: 0.5665095065529052, [(1, 208), (2, 32)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [2, 183, 24]]
** centroid: 3, normalized-entropy: 0.37259839815677437, [(1, 2), (2, 183), (3, 24)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33082270425935645] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33082270425935645, 0.30147013096962644] ***
*** starting iteration: 2; err: [Inf, 0.33082270425935645, 0.30147013096962644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33082270425935645, 0.30147013096962644, 0.2977028393928057] ***
*** starting iteration: 3; err: [Inf, 0.33082270425935645, 0.30147013096962644, 0.2977028393928057] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33082270425935645, 0.30147013096962644, 0.2977028393928057, 0.2969641217618421] ***
*** finished computation of 3 references, err: [Inf, 0.33082270425935645, 0.30147013096962644, 0.2977028393928057, 0.2969641217618421] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [61, 160, 18]]
** centroid: 1, normalized-entropy: 0.7390722862508216, [(1, 61), (2, 160), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [129, 77, 0]]
** centroid: 2, normalized-entropy: 0.953535092313766, [(1, 129), (2, 77)]
*** center 3: selecting labels [1] (freq >= 1) [from [222, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2593620722503723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2593620722503723, 0.20760380354564492] ***
*** finished computation of 7 references, err: [Inf, 0.2593620722503723, 0.20760380354564492] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [120, 10, 0]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(1, 120), (2, 10)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [8, 55, 0]]
** centroid: 2, normalized-entropy: 0.5491087450260074, [(1, 8), (2, 55)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [68, 9, 0]]
** centroid: 3, normalized-entropy: 0.5203346157857599, [(1, 68), (2, 9)]
*** center 4: selecting labels [1, 2, 3] (freq >= 2) [from [26, 71, 3]]
** centroid: 4, normalized-entropy: 0.635896768995797, [(1, 26), (2, 71), (3, 3)]
*** center 5: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 89, 21]]
** centroid: 7, normalized-entropy: 0.7033693386668108, [(2, 89), (3, 21)]
finished with 13 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24287340430769025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24287340430769025, 0.210359987736829] ***
*** finished computation of 7 references, err: [Inf, 0.24287340430769025, 0.210359987736829] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 53, 14]]
** centroid: 1, normalized-entropy: 0.7394809367166378, [(2, 53), (3, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [65, 53, 0]]
** centroid: 2, normalized-entropy: 0.9925270159830354, [(1, 65), (2, 53)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [98, 26, 0]]
** centroid: 3, normalized-entropy: 0.7408656862339816, [(1, 98), (2, 26)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 41, 10]]
** centroid: 4, normalized-entropy: 0.7140152804378671, [(2, 41), (3, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [1, 56, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [140, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21593927286671422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21593927286671422, 0.19268027823167047] ***
*** finished computation of 7 references, err: [Inf, 0.21593927286671422, 0.19268027823167047] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [122, 34, 0]]
** centroid: 1, normalized-entropy: 0.7564041945982506, [(1, 122), (2, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [44, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [22, 52, 0]]
** centroid: 3, normalized-entropy: 0.8779620013943914, [(1, 22), (2, 52)]
*** center 4: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 60, 18]]
** centroid: 5, normalized-entropy: 0.7793498372920851, [(2, 60), (3, 18)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 91, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3089911444049731] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3089911444049731, 0.18827156716182986] ***
*** starting iteration: 2; err: [Inf, 0.3089911444049731, 0.18827156716182986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648] ***
*** starting iteration: 3; err: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648, 0.15856349585835147] ***
*** starting iteration: 4; err: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648, 0.15856349585835147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648, 0.15856349585835147, 0.1522574835015019] ***
*** starting iteration: 5; err: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648, 0.15856349585835147, 0.1522574835015019] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648, 0.15856349585835147, 0.1522574835015019, 0.1488739395844149] ***
*** starting iteration: 6; err: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648, 0.15856349585835147, 0.1522574835015019, 0.1488739395844149] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648, 0.15856349585835147, 0.1522574835015019, 0.1488739395844149, 0.14761533581878286] ***
*** starting iteration: 7; err: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648, 0.15856349585835147, 0.1522574835015019, 0.1488739395844149, 0.14761533581878286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648, 0.15856349585835147, 0.1522574835015019, 0.1488739395844149, 0.14761533581878286, 0.1462214351771539] ***
*** starting iteration: 8; err: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648, 0.15856349585835147, 0.1522574835015019, 0.1488739395844149, 0.14761533581878286, 0.1462214351771539] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648, 0.15856349585835147, 0.1522574835015019, 0.1488739395844149, 0.14761533581878286, 0.1462214351771539, 0.14453288502068268] ***
*** starting iteration: 9; err: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648, 0.15856349585835147, 0.1522574835015019, 0.1488739395844149, 0.14761533581878286, 0.1462214351771539, 0.14453288502068268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648, 0.15856349585835147, 0.1522574835015019, 0.1488739395844149, 0.14761533581878286, 0.1462214351771539, 0.14453288502068268, 0.14363140534845883] ***
*** finished computation of 7 references, err: [Inf, 0.3089911444049731, 0.18827156716182986, 0.16840629951116648, 0.15856349585835147, 0.1522574835015019, 0.1488739395844149, 0.14761533581878286, 0.1462214351771539, 0.14453288502068268, 0.14363140534845883] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [50, 37, 0]]
** centroid: 1, normalized-entropy: 0.9838333347337009, [(1, 50), (2, 37)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [25, 52, 0]]
** centroid: 2, normalized-entropy: 0.9093934226727598, [(1, 25), (2, 52)]
*** center 3: selecting labels [1] (freq >= 2) [from [127, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [114, 1, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 70, 0]]
** centroid: 6, normalized-entropy: 0.18312206830137262, [(1, 2), (2, 70)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 74, 24]]
** centroid: 7, normalized-entropy: 0.8030909760146977, [(2, 74), (3, 24)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2629457217692837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629457217692837, 0.19085780188449655] ***
*** starting iteration: 2; err: [Inf, 0.2629457217692837, 0.19085780188449655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208] ***
*** starting iteration: 3; err: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268] ***
*** starting iteration: 4; err: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268, 0.16563653719235866] ***
*** starting iteration: 5; err: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268, 0.16563653719235866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268, 0.16563653719235866, 0.1631976684563789] ***
*** starting iteration: 6; err: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268, 0.16563653719235866, 0.1631976684563789] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268, 0.16563653719235866, 0.1631976684563789, 0.16112883215856696] ***
*** starting iteration: 7; err: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268, 0.16563653719235866, 0.1631976684563789, 0.16112883215856696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268, 0.16563653719235866, 0.1631976684563789, 0.16112883215856696, 0.15856304512595873] ***
*** starting iteration: 8; err: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268, 0.16563653719235866, 0.1631976684563789, 0.16112883215856696, 0.15856304512595873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268, 0.16563653719235866, 0.1631976684563789, 0.16112883215856696, 0.15856304512595873, 0.15485254009400887] ***
*** starting iteration: 9; err: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268, 0.16563653719235866, 0.1631976684563789, 0.16112883215856696, 0.15856304512595873, 0.15485254009400887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268, 0.16563653719235866, 0.1631976684563789, 0.16112883215856696, 0.15856304512595873, 0.15485254009400887, 0.15187068444549634] ***
*** starting iteration: 10; err: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268, 0.16563653719235866, 0.1631976684563789, 0.16112883215856696, 0.15856304512595873, 0.15485254009400887, 0.15187068444549634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268, 0.16563653719235866, 0.1631976684563789, 0.16112883215856696, 0.15856304512595873, 0.15485254009400887, 0.15187068444549634, 0.15009591072753095] ***
*** finished computation of 7 references, err: [Inf, 0.2629457217692837, 0.19085780188449655, 0.17843087676513208, 0.16997768226145268, 0.16563653719235866, 0.1631976684563789, 0.16112883215856696, 0.15856304512595873, 0.15485254009400887, 0.15187068444549634, 0.15009591072753095] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [54, 39, 0]]
** centroid: 1, normalized-entropy: 0.9811522341999134, [(1, 54), (2, 39)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [95, 9, 0]]
** centroid: 2, normalized-entropy: 0.42480887386781474, [(1, 95), (2, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [152, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [14, 62, 0]]
** centroid: 5, normalized-entropy: 0.6892019851173655, [(1, 14), (2, 62)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 64, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 55, 24]]
** centroid: 7, normalized-entropy: 0.8858834790484443, [(2, 55), (3, 24)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22845399669808583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22845399669808583, 0.15766405080329218] ***
*** starting iteration: 2; err: [Inf, 0.22845399669808583, 0.15766405080329218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22845399669808583, 0.15766405080329218, 0.151737154923614] ***
*** starting iteration: 3; err: [Inf, 0.22845399669808583, 0.15766405080329218, 0.151737154923614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22845399669808583, 0.15766405080329218, 0.151737154923614, 0.14946734358527247] ***
*** starting iteration: 4; err: [Inf, 0.22845399669808583, 0.15766405080329218, 0.151737154923614, 0.14946734358527247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22845399669808583, 0.15766405080329218, 0.151737154923614, 0.14946734358527247, 0.14835580516043867] ***
*** starting iteration: 5; err: [Inf, 0.22845399669808583, 0.15766405080329218, 0.151737154923614, 0.14946734358527247, 0.14835580516043867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22845399669808583, 0.15766405080329218, 0.151737154923614, 0.14946734358527247, 0.14835580516043867, 0.14789923836810115] ***
*** finished computation of 7 references, err: [Inf, 0.22845399669808583, 0.15766405080329218, 0.151737154923614, 0.14946734358527247, 0.14835580516043867, 0.14789923836810115] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 97, 18]]
** centroid: 1, normalized-entropy: 0.6259231316564361, [(2, 97), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [106, 40, 0]]
** centroid: 2, normalized-entropy: 0.847107490529376, [(1, 106), (2, 40)]
*** center 3: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 37, 0]]
** centroid: 4, normalized-entropy: 0.994605981300523, [(1, 44), (2, 37)]
*** center 5: selecting labels [1] (freq >= 2) [from [55, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 62, 0]]
** centroid: 6, normalized-entropy: 0.2006223243127146, [(1, 2), (2, 62)]
*** center 7: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25803843188426784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25803843188426784, 0.21405967300640302] ***
*** finished computation of 7 references, err: [Inf, 0.25803843188426784, 0.21405967300640302] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [51, 6, 0]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(1, 51), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 16, 0]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(1, 72), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 75, 8]]
** centroid: 3, normalized-entropy: 0.4574321808988397, [(2, 75), (3, 8)]
*** center 4: selecting labels [1, 2, 3] (freq >= 2) [from [2, 83, 16]]
** centroid: 4, normalized-entropy: 0.4831990319972236, [(1, 2), (2, 83), (3, 16)]
*** center 5: selecting labels [1] (freq >= 2) [from [120, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [137, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [26, 54, 0]]
** centroid: 7, normalized-entropy: 0.9097361225311661, [(1, 26), (2, 54)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23843794957437237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23843794957437237, 0.20795918853602316] ***
*** finished computation of 7 references, err: [Inf, 0.23843794957437237, 0.20795918853602316] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [38, 69, 0]]
** centroid: 2, normalized-entropy: 0.9385750889380636, [(1, 38), (2, 69)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 51, 24]]
** centroid: 3, normalized-entropy: 0.9043814577244941, [(2, 51), (3, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [50, 28, 0]]
** centroid: 4, normalized-entropy: 0.9418285354475157, [(1, 50), (2, 28)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [91, 22, 0]]
** centroid: 5, normalized-entropy: 0.7111806626974718, [(1, 91), (2, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [166, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22437544886827065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22437544886827065, 0.19786996767134302] ***
*** finished computation of 7 references, err: [Inf, 0.22437544886827065, 0.19786996767134302] ***
*** center 1: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 79, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [35, 26, 0]]
** centroid: 4, normalized-entropy: 0.9842399889605549, [(1, 35), (2, 26)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [89, 62, 0]]
** centroid: 5, normalized-entropy: 0.9768123777357037, [(1, 89), (2, 62)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [86, 8, 0]]
** centroid: 6, normalized-entropy: 0.4199210973757179, [(1, 86), (2, 8)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 62, 18]]
** centroid: 7, normalized-entropy: 0.7691928290130138, [(2, 62), (3, 18)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46419978043688154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46419978043688154, 0.25899047940947095] ***
*** finished computation of 3 references, err: [Inf, 0.46419978043688154, 0.25899047940947095] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [280, 57, 0]]
** centroid: 1, normalized-entropy: 0.6557324501670784, [(1, 280), (2, 57)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [128, 72, 0]]
** centroid: 2, normalized-entropy: 0.9426831892554921, [(1, 128), (2, 72)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 105, 24]]
** centroid: 3, normalized-entropy: 0.6931274153282881, [(2, 105), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3943265263030286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3943265263030286, 0.23884435145553018] ***
*** finished computation of 3 references, err: [Inf, 0.3943265263030286, 0.23884435145553018] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [108, 97, 5]]
** centroid: 1, normalized-entropy: 0.7170442208931689, [(1, 108), (2, 97), (3, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [230, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [76, 132, 19]]
** centroid: 3, normalized-entropy: 0.8094060757356247, [(1, 76), (2, 132), (3, 19)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.33544218988818253] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33544218988818253, 0.23892773398668735] ***
*** finished computation of 3 references, err: [Inf, 0.33544218988818253, 0.23892773398668735] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [4, 192, 18]]
** centroid: 1, normalized-entropy: 0.3458393827444672, [(1, 4), (2, 192), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [165, 8, 0]]
** centroid: 2, normalized-entropy: 0.27021686722886573, [(1, 165), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [243, 37, 0]]
** centroid: 3, normalized-entropy: 0.5632858280004098, [(1, 243), (2, 37)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.30927548878588473] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30927548878588473, 0.23725458536529215] ***
*** starting iteration: 2; err: [Inf, 0.30927548878588473, 0.23725458536529215] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30927548878588473, 0.23725458536529215, 0.23234603522686628] ***
*** starting iteration: 3; err: [Inf, 0.30927548878588473, 0.23725458536529215, 0.23234603522686628] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30927548878588473, 0.23725458536529215, 0.23234603522686628, 0.2320147863793391] ***
*** finished computation of 3 references, err: [Inf, 0.30927548878588473, 0.23725458536529215, 0.23234603522686628, 0.2320147863793391] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [262, 3, 0]]
** centroid: 1, normalized-entropy: 0.08942698754499391, [(1, 262), (2, 3)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [13, 176, 24]]
** centroid: 2, normalized-entropy: 0.5227782274717115, [(1, 13), (2, 176), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [133, 55, 0]]
** centroid: 3, normalized-entropy: 0.8719965742014965, [(1, 133), (2, 55)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3306302703914234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3306302703914234, 0.24186468723553303] ***
*** starting iteration: 2; err: [Inf, 0.3306302703914234, 0.24186468723553303] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3306302703914234, 0.24186468723553303, 0.23985296942718115] ***
*** starting iteration: 3; err: [Inf, 0.3306302703914234, 0.24186468723553303, 0.23985296942718115] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3306302703914234, 0.24186468723553303, 0.23985296942718115, 0.23960588488174878] ***
*** finished computation of 3 references, err: [Inf, 0.3306302703914234, 0.24186468723553303, 0.23985296942718115, 0.23960588488174878] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [79, 152, 24]]
** centroid: 1, normalized-entropy: 0.8136206972984034, [(1, 79), (2, 152), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [114, 77, 0]]
** centroid: 2, normalized-entropy: 0.9727585387776966, [(1, 114), (2, 77)]
*** center 3: selecting labels [1] (freq >= 1) [from [221, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3056488179321076] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3056488179321076, 0.2520040073997524] ***
*** starting iteration: 2; err: [Inf, 0.3056488179321076, 0.2520040073997524] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3056488179321076, 0.2520040073997524, 0.23961197399161477] ***
*** starting iteration: 3; err: [Inf, 0.3056488179321076, 0.2520040073997524, 0.23961197399161477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3056488179321076, 0.2520040073997524, 0.23961197399161477, 0.23644024353317994] ***
*** finished computation of 3 references, err: [Inf, 0.3056488179321076, 0.2520040073997524, 0.23961197399161477, 0.23644024353317994] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [76, 166, 18]]
** centroid: 1, normalized-entropy: 0.7562856548882932, [(1, 76), (2, 166), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [127, 71, 0]]
** centroid: 2, normalized-entropy: 0.9415030811659858, [(1, 127), (2, 71)]
*** center 3: selecting labels [1] (freq >= 1) [from [209, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.23710037658393784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23710037658393784, 0.19495058894806258] ***
*** finished computation of 7 references, err: [Inf, 0.23710037658393784, 0.19495058894806258] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [17, 97, 0]]
** centroid: 1, normalized-entropy: 0.6076407686085387, [(1, 17), (2, 97)]
*** center 2: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [42, 46, 0]]
** centroid: 3, normalized-entropy: 0.9985090989176322, [(1, 42), (2, 46)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [67, 32, 0]]
** centroid: 4, normalized-entropy: 0.9078619154263698, [(1, 67), (2, 32)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 59, 24]]
** centroid: 5, normalized-entropy: 0.8676293117125105, [(2, 59), (3, 24)]
*** center 6: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23241560902541455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23241560902541455, 0.19261711533425718] ***
*** finished computation of 7 references, err: [Inf, 0.23241560902541455, 0.19261711533425718] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [12, 95, 0]]
** centroid: 1, normalized-entropy: 0.5063657452787739, [(1, 12), (2, 95)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [42, 31, 0]]
** centroid: 2, normalized-entropy: 0.9835585673909616, [(1, 42), (2, 31)]
*** center 3: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 68, 24]]
** centroid: 4, normalized-entropy: 0.828055725379504, [(2, 68), (3, 24)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [62, 22, 0]]
** centroid: 5, normalized-entropy: 0.8296071030882032, [(1, 62), (2, 22)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [91, 13, 0]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(1, 91), (2, 13)]
*** center 7: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24833015621970708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24833015621970708, 0.1956410719461549] ***
*** finished computation of 7 references, err: [Inf, 0.24833015621970708, 0.1956410719461549] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [83, 34, 0]]
** centroid: 1, normalized-entropy: 0.8694928443329235, [(1, 83), (2, 34)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [56, 1, 0]]
** centroid: 2, normalized-entropy: 0.1274185117923586, [(1, 56), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 83, 18]]
** centroid: 4, normalized-entropy: 0.6761627418829197, [(2, 83), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [68, 45, 0]]
** centroid: 5, normalized-entropy: 0.9699058425934317, [(1, 68), (2, 45)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [3, 74, 0]]
** centroid: 6, normalized-entropy: 0.23750814382859295, [(1, 3), (2, 74)]
*** center 7: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22783460044343998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22783460044343998, 0.19128508963510282] ***
*** finished computation of 7 references, err: [Inf, 0.22783460044343998, 0.19128508963510282] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 111, 24]]
** centroid: 1, normalized-entropy: 0.6751914401458716, [(2, 111), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [72, 5, 0]]
** centroid: 3, normalized-entropy: 0.34673146824966367, [(1, 72), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [42, 33, 0]]
** centroid: 4, normalized-entropy: 0.9895875212220558, [(1, 42), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [97, 9, 0]]
** centroid: 5, normalized-entropy: 0.41923299508081985, [(1, 97), (2, 9)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [104, 4, 0]]
** centroid: 6, normalized-entropy: 0.22853814395352806, [(1, 104), (2, 4)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 72, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23129294970878464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23129294970878464, 0.1979231181201236] ***
*** finished computation of 7 references, err: [Inf, 0.23129294970878464, 0.1979231181201236] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [85, 20, 0]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(1, 85), (2, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 69, 24]]
** centroid: 3, normalized-entropy: 0.8238116333123173, [(2, 69), (3, 24)]
*** center 4: selecting labels [1] (freq >= 2) [from [151, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [40, 78, 0]]
** centroid: 5, normalized-entropy: 0.9238422284571813, [(1, 40), (2, 78)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [27, 62, 0]]
** centroid: 6, normalized-entropy: 0.8853723770068483, [(1, 27), (2, 62)]
*** center 7: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22161220852145996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22161220852145996, 0.1963576799289308] ***
*** finished computation of 7 references, err: [Inf, 0.22161220852145996, 0.1963576799289308] ***
*** center 1: selecting labels [1] (freq >= 2) [from [148, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 65, 18]]
** centroid: 2, normalized-entropy: 0.7544062039636575, [(2, 65), (3, 18)]
*** center 3: selecting labels [1] (freq >= 2) [from [55, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [69, 22, 0]]
** centroid: 4, normalized-entropy: 0.7979519684655734, [(1, 69), (2, 22)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [17, 83, 0]]
** centroid: 5, normalized-entropy: 0.6577047787442196, [(1, 17), (2, 83)]
*** center 6: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [25, 66, 0]]
** centroid: 7, normalized-entropy: 0.8481636883083004, [(1, 25), (2, 66)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22983257879724014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22983257879724014, 0.18971239506929843] ***
*** starting iteration: 2; err: [Inf, 0.22983257879724014, 0.18971239506929843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22983257879724014, 0.18971239506929843, 0.18563088109610495] ***
*** starting iteration: 3; err: [Inf, 0.22983257879724014, 0.18971239506929843, 0.18563088109610495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22983257879724014, 0.18971239506929843, 0.18563088109610495, 0.18340600122398398] ***
*** starting iteration: 4; err: [Inf, 0.22983257879724014, 0.18971239506929843, 0.18563088109610495, 0.18340600122398398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22983257879724014, 0.18971239506929843, 0.18563088109610495, 0.18340600122398398, 0.1826938832914261] ***
*** finished computation of 7 references, err: [Inf, 0.22983257879724014, 0.18971239506929843, 0.18563088109610495, 0.18340600122398398, 0.1826938832914261] ***
*** center 1: selecting labels [1] (freq >= 2) [from [122, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 84, 24]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(2, 84), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [57, 37, 0]]
** centroid: 3, normalized-entropy: 0.9670941140642181, [(1, 57), (2, 37)]
*** center 4: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [47, 45, 0]]
** centroid: 5, normalized-entropy: 0.9996590716691399, [(1, 47), (2, 45)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [10, 68, 0]]
** centroid: 6, normalized-entropy: 0.552495114325111, [(1, 10), (2, 68)]
*** center 7: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2648850479393617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2648850479393617, 0.1992980728660343] ***
*** starting iteration: 2; err: [Inf, 0.2648850479393617, 0.1992980728660343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2648850479393617, 0.1992980728660343, 0.19468476845445795] ***
*** starting iteration: 3; err: [Inf, 0.2648850479393617, 0.1992980728660343, 0.19468476845445795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2648850479393617, 0.1992980728660343, 0.19468476845445795, 0.1941881974386903] ***
*** finished computation of 7 references, err: [Inf, 0.2648850479393617, 0.1992980728660343, 0.19468476845445795, 0.1941881974386903] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [38, 67, 0]]
** centroid: 1, normalized-entropy: 0.9442529341277702, [(1, 38), (2, 67)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 3, 0]]
** centroid: 2, normalized-entropy: 0.2729708579140699, [(1, 61), (2, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [132, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [89, 27, 0]]
** centroid: 4, normalized-entropy: 0.7827892889687528, [(1, 89), (2, 27)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 73, 24]]
** centroid: 5, normalized-entropy: 0.8071675554288905, [(2, 73), (3, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [4, 59, 0]]
** centroid: 7, normalized-entropy: 0.3411538931451763, [(1, 4), (2, 59)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23107586806253258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23107586806253258, 0.19456294271117566] ***
*** starting iteration: 2; err: [Inf, 0.23107586806253258, 0.19456294271117566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23107586806253258, 0.19456294271117566, 0.19099734661084178] ***
*** starting iteration: 3; err: [Inf, 0.23107586806253258, 0.19456294271117566, 0.19099734661084178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23107586806253258, 0.19456294271117566, 0.19099734661084178, 0.18873907764186745] ***
*** starting iteration: 4; err: [Inf, 0.23107586806253258, 0.19456294271117566, 0.19099734661084178, 0.18873907764186745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23107586806253258, 0.19456294271117566, 0.19099734661084178, 0.18873907764186745, 0.1879814825952053] ***
*** finished computation of 7 references, err: [Inf, 0.23107586806253258, 0.19456294271117566, 0.19099734661084178, 0.18873907764186745, 0.1879814825952053] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 86, 17]]
** centroid: 1, normalized-entropy: 0.646251622274129, [(2, 86), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [50, 24, 0]]
** centroid: 3, normalized-entropy: 0.9090221560878149, [(1, 50), (2, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [76, 24, 0]]
** centroid: 4, normalized-entropy: 0.7950402793845225, [(1, 76), (2, 24)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [84, 25, 0]]
** centroid: 5, normalized-entropy: 0.7768901205770734, [(1, 84), (2, 25)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 78, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 15)
[0.9530188871506237, 0.9469859080637524, 0.9410038781296266, 0.9409918900936866, 0.9399938861016706, 0.9339998681316047, 0.9220178262094431, 0.9169918421415427, 0.90901680123237, 0.9030287772802743, 0.9020217822613033, 0.8880137622652593, 0.8790137442832053, 0.87397876918835, 0.8029916143688599]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9530188871506237
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.5846325513353018] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5846325513353018, 0.3549191149447376] ***
*** starting iteration: 2; err: [Inf, 0.5846325513353018, 0.3549191149447376] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5846325513353018, 0.3549191149447376, 0.3151097215527484] ***
*** starting iteration: 3; err: [Inf, 0.5846325513353018, 0.3549191149447376, 0.3151097215527484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5846325513353018, 0.3549191149447376, 0.3151097215527484, 0.30790703387528257] ***
*** finished computation of 3 references, err: [Inf, 0.5846325513353018, 0.3549191149447376, 0.3151097215527484, 0.30790703387528257] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [107, 151, 24]]
** centroid: 1, normalized-entropy: 0.8300044193213907, [(1, 107), (2, 151), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [85, 83, 0]]
** centroid: 2, normalized-entropy: 0.9998977657936449, [(1, 85), (2, 83)]
*** center 3: selecting labels [1] (freq >= 2) [from [216, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3605392404540122] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3605392404540122, 0.3112349675701599] ***
*** starting iteration: 2; err: [Inf, 0.3605392404540122, 0.3112349675701599] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3605392404540122, 0.3112349675701599, 0.3015853969858138] ***
*** starting iteration: 3; err: [Inf, 0.3605392404540122, 0.3112349675701599, 0.3015853969858138] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3605392404540122, 0.3112349675701599, 0.3015853969858138, 0.298741248655489] ***
*** finished computation of 3 references, err: [Inf, 0.3605392404540122, 0.3112349675701599, 0.3015853969858138, 0.298741248655489] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [162, 43, 0]]
** centroid: 1, normalized-entropy: 0.7410162706298391, [(1, 162), (2, 43)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [7, 182, 24]]
** centroid: 2, normalized-entropy: 0.4484161128391216, [(1, 7), (2, 182), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [245, 4, 0]]
** centroid: 3, normalized-entropy: 0.11873167080049137, [(1, 245), (2, 4)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.50139388540338] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.50139388540338, 0.31524893036251816] ***
*** starting iteration: 2; err: [Inf, 0.50139388540338, 0.31524893036251816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.50139388540338, 0.31524893036251816, 0.3061075782238588] ***
*** starting iteration: 3; err: [Inf, 0.50139388540338, 0.31524893036251816, 0.3061075782238588] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.50139388540338, 0.31524893036251816, 0.3061075782238588, 0.30215526757010636] ***
*** finished computation of 3 references, err: [Inf, 0.50139388540338, 0.31524893036251816, 0.3061075782238588, 0.30215526757010636] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [113, 111, 0]]
** centroid: 1, normalized-entropy: 0.9999424938532381, [(1, 113), (2, 111)]
*** center 2: selecting labels [1] (freq >= 2) [from [231, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [68, 126, 18]]
** centroid: 3, normalized-entropy: 0.804065635897565, [(1, 68), (2, 126), (3, 18)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 16)
[0.9530188871506237, 0.9469859080637524, 0.9410038781296266, 0.9409918900936866, 0.9399938861016706, 0.9339998681316047, 0.9220178262094431, 0.9169918421415427, 0.9109948271624918, 0.90901680123237, 0.9030287772802743, 0.9020217822613033, 0.8880137622652593, 0.8790137442832053, 0.87397876918835, 0.8029916143688599]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9530188871506237
finished with 16
iteration 3 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9530188871506237, 0.9469859080637524, 0.9410038781296266, 0.9409918900936866, 0.9399938861016706, 0.9339998681316047, 0.9220178262094431, 0.9169918421415427, 0.9109948271624918, 0.90901680123237, 0.9030287772802743, 0.9020217822613033, 0.8880137622652593, 0.8790137442832053, 0.87397876918835, 0.8029916143688599]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9530188871506237
finished with 17
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.19998774511666895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19998774511666895, 0.15030810251194346] ***
*** finished computation of 7 references, err: [Inf, 0.19998774511666895, 0.15030810251194346] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [34, 78, 0]]
** centroid: 1, normalized-entropy: 0.8856128713989709, [(1, 34), (2, 78)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [46, 42, 0]]
** centroid: 2, normalized-entropy: 0.9985090989176322, [(1, 46), (2, 42)]
*** center 3: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 91, 24]]
** centroid: 4, normalized-entropy: 0.7389821181149047, [(2, 91), (3, 24)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [57, 22, 0]]
** centroid: 5, normalized-entropy: 0.8533728188427888, [(1, 57), (2, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [110, 1, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20140033883267436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20140033883267436, 0.15392278879811092] ***
*** finished computation of 7 references, err: [Inf, 0.20140033883267436, 0.15392278879811092] ***
*** center 1: selecting labels [1] (freq >= 2) [from [136, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 57, 24]]
** centroid: 2, normalized-entropy: 0.876716288999464, [(2, 57), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [55, 28, 0]]
** centroid: 3, normalized-entropy: 0.9222596474738021, [(1, 55), (2, 28)]
*** center 4: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [48, 65, 0]]
** centroid: 5, normalized-entropy: 0.9836116360305414, [(1, 48), (2, 65)]
*** center 6: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 79, 0]]
** centroid: 7, normalized-entropy: 0.22641094842107634, [(1, 3), (2, 79)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17826617427025063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17826617427025063, 0.14935605639711894] ***
*** finished computation of 7 references, err: [Inf, 0.17826617427025063, 0.14935605639711894] ***
*** center 1: selecting labels [1] (freq >= 2) [from [120, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 68, 18]]
** centroid: 2, normalized-entropy: 0.7401470427139037, [(2, 68), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [45, 20, 0]]
** centroid: 3, normalized-entropy: 0.8904916402194913, [(1, 45), (2, 20)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [35, 53, 0]]
** centroid: 4, normalized-entropy: 0.9696055994904408, [(1, 35), (2, 53)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [16, 95, 0]]
** centroid: 5, normalized-entropy: 0.5949898952560516, [(1, 16), (2, 95)]
*** center 6: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [98, 1, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 17)
[0.9530188871506237, 0.9500158841476206, 0.9469859080637524, 0.9410038781296266, 0.9409918900936866, 0.9399938861016706, 0.9339998681316047, 0.9220178262094431, 0.9169918421415427, 0.9109948271624918, 0.90901680123237, 0.9030287772802743, 0.9020217822613033, 0.8880137622652593, 0.8790137442832053, 0.87397876918835, 0.8029916143688599]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9530188871506237
finished with 17
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9530188871506237, 0.9500158841476206, 0.9469859080637524, 0.9410038781296266, 0.9409918900936866, 0.9399938861016706, 0.9339998681316047, 0.9220178262094431, 0.9169918421415427, 0.9109948271624918, 0.90901680123237, 0.9030287772802743, 0.9020217822613033, 0.8880137622652593, 0.8790137442832053, 0.87397876918835, 0.8029916143688599]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9530188871506237
finished with 19
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.3673611587925895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3673611587925895, 0.3082104547469466] ***
*** starting iteration: 2; err: [Inf, 0.3673611587925895, 0.3082104547469466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3673611587925895, 0.3082104547469466, 0.3054943161963432] ***
*** starting iteration: 3; err: [Inf, 0.3673611587925895, 0.3082104547469466, 0.3054943161963432] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3673611587925895, 0.3082104547469466, 0.3054943161963432, 0.3039254593892252] ***
*** starting iteration: 4; err: [Inf, 0.3673611587925895, 0.3082104547469466, 0.3054943161963432, 0.3039254593892252] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3673611587925895, 0.3082104547469466, 0.3054943161963432, 0.3039254593892252, 0.3036439364255817] ***
*** finished computation of 3 references, err: [Inf, 0.3673611587925895, 0.3082104547469466, 0.3054943161963432, 0.3039254593892252, 0.3036439364255817] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [262, 13, 0]]
** centroid: 1, normalized-entropy: 0.27469674390785415, [(1, 262), (2, 13)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [1, 176, 24]]
** centroid: 2, normalized-entropy: 0.5293608652873645, [(2, 176), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [145, 45, 0]]
** centroid: 3, normalized-entropy: 0.7897492536625221, [(1, 145), (2, 45)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39977824160720277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39977824160720277, 0.30042656022926856] ***
*** starting iteration: 2; err: [Inf, 0.39977824160720277, 0.30042656022926856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39977824160720277, 0.30042656022926856, 0.2986130847789716] ***
*** starting iteration: 3; err: [Inf, 0.39977824160720277, 0.30042656022926856, 0.2986130847789716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39977824160720277, 0.30042656022926856, 0.2986130847789716, 0.2982932769594298] ***
*** finished computation of 3 references, err: [Inf, 0.39977824160720277, 0.30042656022926856, 0.2986130847789716, 0.2982932769594298] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [69, 169, 24]]
** centroid: 1, normalized-entropy: 0.776575586593135, [(1, 69), (2, 169), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [227, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [118, 60, 0]]
** centroid: 3, normalized-entropy: 0.9219957030944405, [(1, 118), (2, 60)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.46209880007211696] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46209880007211696, 0.3025124417841323] ***
*** starting iteration: 2; err: [Inf, 0.46209880007211696, 0.3025124417841323] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46209880007211696, 0.3025124417841323, 0.3007654987674938] ***
*** starting iteration: 3; err: [Inf, 0.46209880007211696, 0.3025124417841323, 0.3007654987674938] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46209880007211696, 0.3025124417841323, 0.3007654987674938, 0.30092353652464576] ***
*** finished computation of 3 references, err: [Inf, 0.46209880007211696, 0.3025124417841323, 0.3007654987674938, 0.30092353652464576] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [73, 176, 18]]
** centroid: 1, normalized-entropy: 0.7382823473010237, [(1, 73), (2, 176), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [199, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [140, 61, 0]]
** centroid: 3, normalized-entropy: 0.8855064177280263, [(1, 140), (2, 61)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3087784479646286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3087784479646286, 0.2518279664693876] ***
*** starting iteration: 2; err: [Inf, 0.3087784479646286, 0.2518279664693876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3087784479646286, 0.2518279664693876, 0.24266664457840245] ***
*** starting iteration: 3; err: [Inf, 0.3087784479646286, 0.2518279664693876, 0.24266664457840245] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3087784479646286, 0.2518279664693876, 0.24266664457840245, 0.24106256150593003] ***
*** starting iteration: 4; err: [Inf, 0.3087784479646286, 0.2518279664693876, 0.24266664457840245, 0.24106256150593003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3087784479646286, 0.2518279664693876, 0.24266664457840245, 0.24106256150593003, 0.24072901324114507] ***
*** finished computation of 3 references, err: [Inf, 0.3087784479646286, 0.2518279664693876, 0.24266664457840245, 0.24106256150593003, 0.24072901324114507] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [270, 4, 0]]
** centroid: 1, normalized-entropy: 0.10992912236299265, [(1, 270), (2, 4)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [5, 178, 24]]
** centroid: 2, normalized-entropy: 0.42739397607563406, [(1, 5), (2, 178), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [133, 52, 0]]
** centroid: 3, normalized-entropy: 0.8569196807055284, [(1, 133), (2, 52)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38975307067250203] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38975307067250203, 0.24185473749182304] ***
*** starting iteration: 2; err: [Inf, 0.38975307067250203, 0.24185473749182304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38975307067250203, 0.24185473749182304, 0.24045950659401324] ***
*** starting iteration: 3; err: [Inf, 0.38975307067250203, 0.24185473749182304, 0.24045950659401324] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38975307067250203, 0.24185473749182304, 0.24045950659401324, 0.24007597622898655] ***
*** finished computation of 3 references, err: [Inf, 0.38975307067250203, 0.24185473749182304, 0.24045950659401324, 0.24007597622898655] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [242, 11, 0]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(1, 242), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [172, 40, 0]]
** centroid: 2, normalized-entropy: 0.6987003526563345, [(1, 172), (2, 40)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 178, 24]]
** centroid: 3, normalized-entropy: 0.5259359840917625, [(2, 178), (3, 24)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35810771116755086] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35810771116755086, 0.23376729691644077] ***
*** starting iteration: 2; err: [Inf, 0.35810771116755086, 0.23376729691644077] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35810771116755086, 0.23376729691644077, 0.23179919087723166] ***
*** starting iteration: 3; err: [Inf, 0.35810771116755086, 0.23376729691644077, 0.23179919087723166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35810771116755086, 0.23376729691644077, 0.23179919087723166, 0.23125761477597828] ***
*** finished computation of 3 references, err: [Inf, 0.35810771116755086, 0.23376729691644077, 0.23179919087723166, 0.23125761477597828] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [248, 22, 0]]
** centroid: 1, normalized-entropy: 0.40737789117688417, [(1, 248), (2, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [164, 44, 0]]
** centroid: 2, normalized-entropy: 0.7444131797881749, [(1, 164), (2, 44)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 171, 18]]
** centroid: 3, normalized-entropy: 0.45371633918694493, [(2, 171), (3, 18)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 19)
[0.9530188871506237, 0.9500158841476206, 0.9469859080637524, 0.9410038781296266, 0.9409918900936866, 0.9399938861016706, 0.9339998681316047, 0.9220178262094431, 0.9169918421415427, 0.9109948271624918, 0.90901680123237, 0.9030287772802743, 0.9020217822613033, 0.8989888091684498, 0.8880137622652593, 0.8810067552582522, 0.8790137442832053, 0.87397876918835, 0.8029916143688599]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9530188871506237
finished with 19
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 19)
[0.9530188871506237, 0.9500158841476206, 0.9469859080637524, 0.9410038781296266, 0.9409918900936866, 0.9399938861016706, 0.9339998681316047, 0.9220178262094431, 0.9169918421415427, 0.9109948271624918, 0.90901680123237, 0.9030287772802743, 0.9020217822613033, 0.8989888091684498, 0.8880137622652593, 0.8810067552582522, 0.8790137442832053, 0.87397876918835, 0.8029916143688599]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9530188871506237
finished with 21
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.42557314037297805] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42557314037297805, 0.34067809853881775] ***
*** starting iteration: 2; err: [Inf, 0.42557314037297805, 0.34067809853881775] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42557314037297805, 0.34067809853881775, 0.30496997474874554] ***
*** starting iteration: 3; err: [Inf, 0.42557314037297805, 0.34067809853881775, 0.30496997474874554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42557314037297805, 0.34067809853881775, 0.30496997474874554, 0.2971350164152682] ***
*** starting iteration: 4; err: [Inf, 0.42557314037297805, 0.34067809853881775, 0.30496997474874554, 0.2971350164152682] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42557314037297805, 0.34067809853881775, 0.30496997474874554, 0.2971350164152682, 0.294501768710377] ***
*** starting iteration: 5; err: [Inf, 0.42557314037297805, 0.34067809853881775, 0.30496997474874554, 0.2971350164152682, 0.294501768710377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42557314037297805, 0.34067809853881775, 0.30496997474874554, 0.2971350164152682, 0.294501768710377, 0.29324189155969443] ***
*** starting iteration: 6; err: [Inf, 0.42557314037297805, 0.34067809853881775, 0.30496997474874554, 0.2971350164152682, 0.294501768710377, 0.29324189155969443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42557314037297805, 0.34067809853881775, 0.30496997474874554, 0.2971350164152682, 0.294501768710377, 0.29324189155969443, 0.2930047045540143] ***
*** finished computation of 3 references, err: [Inf, 0.42557314037297805, 0.34067809853881775, 0.30496997474874554, 0.2971350164152682, 0.294501768710377, 0.29324189155969443, 0.2930047045540143] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [142, 50, 0]]
** centroid: 1, normalized-entropy: 0.8273744775003173, [(1, 142), (2, 50)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [4, 180, 24]]
** centroid: 2, normalized-entropy: 0.4098580467361792, [(1, 4), (2, 180), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [262, 4, 0]]
** centroid: 3, normalized-entropy: 0.11258759940039273, [(1, 262), (2, 4)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38952490028445613] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38952490028445613, 0.34267423553545884] ***
*** starting iteration: 2; err: [Inf, 0.38952490028445613, 0.34267423553545884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466] ***
*** starting iteration: 3; err: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796] ***
*** starting iteration: 4; err: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796, 0.336938654474713] ***
*** starting iteration: 5; err: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796, 0.336938654474713] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796, 0.336938654474713, 0.33488487718679916] ***
*** starting iteration: 6; err: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796, 0.336938654474713, 0.33488487718679916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796, 0.336938654474713, 0.33488487718679916, 0.3322960335811575] ***
*** starting iteration: 7; err: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796, 0.336938654474713, 0.33488487718679916, 0.3322960335811575] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796, 0.336938654474713, 0.33488487718679916, 0.3322960335811575, 0.3301997136693264] ***
*** starting iteration: 8; err: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796, 0.336938654474713, 0.33488487718679916, 0.3322960335811575, 0.3301997136693264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796, 0.336938654474713, 0.33488487718679916, 0.3322960335811575, 0.3301997136693264, 0.3288346881960062] ***
*** starting iteration: 9; err: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796, 0.336938654474713, 0.33488487718679916, 0.3322960335811575, 0.3301997136693264, 0.3288346881960062] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796, 0.336938654474713, 0.33488487718679916, 0.3322960335811575, 0.3301997136693264, 0.3288346881960062, 0.32713887768181815] ***
*** starting iteration: 10; err: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796, 0.336938654474713, 0.33488487718679916, 0.3322960335811575, 0.3301997136693264, 0.3288346881960062, 0.32713887768181815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796, 0.336938654474713, 0.33488487718679916, 0.3322960335811575, 0.3301997136693264, 0.3288346881960062, 0.32713887768181815, 0.32503104778467445] ***
*** finished computation of 3 references, err: [Inf, 0.38952490028445613, 0.34267423553545884, 0.3398047680624466, 0.33876865629994796, 0.336938654474713, 0.33488487718679916, 0.3322960335811575, 0.3301997136693264, 0.3288346881960062, 0.32713887768181815, 0.32503104778467445] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [33, 164, 24]]
** centroid: 1, normalized-entropy: 0.6794166506393756, [(1, 33), (2, 164), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [213, 41, 0]]
** centroid: 2, normalized-entropy: 0.637689484813721, [(1, 213), (2, 41)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [168, 24, 0]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(1, 168), (2, 24)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3766073095744875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3766073095744875, 0.2951200357715095] ***
*** starting iteration: 2; err: [Inf, 0.3766073095744875, 0.2951200357715095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3766073095744875, 0.2951200357715095, 0.29167703761980274] ***
*** starting iteration: 3; err: [Inf, 0.3766073095744875, 0.2951200357715095, 0.29167703761980274] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3766073095744875, 0.2951200357715095, 0.29167703761980274, 0.2913042076484955] ***
*** finished computation of 3 references, err: [Inf, 0.3766073095744875, 0.2951200357715095, 0.29167703761980274, 0.2913042076484955] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [161, 49, 0]]
** centroid: 1, normalized-entropy: 0.7837769474847011, [(1, 161), (2, 49)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [1, 179, 18]]
** centroid: 2, normalized-entropy: 0.3057489939206624, [(1, 1), (2, 179), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [250, 9, 0]]
** centroid: 3, normalized-entropy: 0.21767548390855174, [(1, 250), (2, 9)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31880880036047315] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31880880036047315, 0.24493529780295203] ***
*** starting iteration: 2; err: [Inf, 0.31880880036047315, 0.24493529780295203] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31880880036047315, 0.24493529780295203, 0.24058313338839737] ***
*** starting iteration: 3; err: [Inf, 0.31880880036047315, 0.24493529780295203, 0.24058313338839737] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31880880036047315, 0.24493529780295203, 0.24058313338839737, 0.23976813754634568] ***
*** finished computation of 3 references, err: [Inf, 0.31880880036047315, 0.24493529780295203, 0.24058313338839737, 0.23976813754634568] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [152, 40, 0]]
** centroid: 1, normalized-entropy: 0.7382848661434506, [(1, 152), (2, 40)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [256, 11, 0]]
** centroid: 2, normalized-entropy: 0.24776054665006228, [(1, 256), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 183, 24]]
** centroid: 3, normalized-entropy: 0.5175827525559071, [(2, 183), (3, 24)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3336716067922795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3336716067922795, 0.23893300178593424] ***
*** starting iteration: 2; err: [Inf, 0.3336716067922795, 0.23893300178593424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3336716067922795, 0.23893300178593424, 0.23931016301878658] ***
*** finished computation of 3 references, err: [Inf, 0.3336716067922795, 0.23893300178593424, 0.23931016301878658] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [46, 166, 24]]
** centroid: 1, normalized-entropy: 0.7269708004537598, [(1, 46), (2, 166), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [122, 63, 0]]
** centroid: 2, normalized-entropy: 0.9253350261208155, [(1, 122), (2, 63)]
*** center 3: selecting labels [1] (freq >= 1) [from [246, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2669883370315698] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2669883370315698, 0.23815271318254844] ***
*** starting iteration: 2; err: [Inf, 0.2669883370315698, 0.23815271318254844] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2669883370315698, 0.23815271318254844, 0.236570391731373] ***
*** starting iteration: 3; err: [Inf, 0.2669883370315698, 0.23815271318254844, 0.236570391731373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2669883370315698, 0.23815271318254844, 0.236570391731373, 0.23635040217175565] ***
*** finished computation of 3 references, err: [Inf, 0.2669883370315698, 0.23815271318254844, 0.236570391731373, 0.23635040217175565] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [10, 185, 18]]
** centroid: 1, normalized-entropy: 0.4322006489063993, [(1, 10), (2, 185), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [152, 52, 0]]
** centroid: 2, normalized-entropy: 0.8189555018403103, [(1, 152), (2, 52)]
*** center 3: selecting labels [1] (freq >= 1) [from [250, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 21)
[0.9530188871506237, 0.9500158841476206, 0.9469859080637524, 0.9410038781296266, 0.9409918900936866, 0.9399938861016706, 0.9339998681316047, 0.9220178262094431, 0.9169918421415427, 0.9109948271624918, 0.90901680123237, 0.9030287772802743, 0.9020217822613033, 0.8989888091684498, 0.8880137622652593, 0.8850047652442862, 0.8810067552582522, 0.8790137442832053, 0.87397876918835, 0.8539767312222403, 0.8029916143688599]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9530188871506237
finished with 21
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.2347949870498851] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2347949870498851, 0.17066201563226058] ***
*** finished computation of 7 references, err: [Inf, 0.2347949870498851, 0.17066201563226058] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [204, 24, 0]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(1, 204), (2, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [177, 53, 0]]
** centroid: 3, normalized-entropy: 0.7787684576550705, [(1, 177), (2, 53)]
*** center 4: selecting labels [1] (freq >= 1) [from [138, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [45, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 144, 16]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(2, 144), (3, 16)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 129, 17]]
** centroid: 7, normalized-entropy: 0.5190356256549792, [(2, 129), (3, 17)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19824900522409006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19824900522409006, 0.16055169408023356] ***
*** finished computation of 7 references, err: [Inf, 0.19824900522409006, 0.16055169408023356] ***
*** center 1: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [7, 60, 0]]
** centroid: 2, normalized-entropy: 0.4830306801456181, [(1, 7), (2, 60)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [30, 18, 0]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(1, 30), (2, 18)]
*** center 4: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [81, 46, 0]]
** centroid: 6, normalized-entropy: 0.9444980709274635, [(1, 81), (2, 46)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 45, 19]]
** centroid: 7, normalized-entropy: 0.877437311089633, [(2, 45), (3, 19)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21020859238225967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21020859238225967, 0.18905102614499628] ***
*** finished computation of 7 references, err: [Inf, 0.21020859238225967, 0.18905102614499628] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [10, 54, 0]]
** centroid: 1, normalized-entropy: 0.625262405223423, [(1, 10), (2, 54)]
*** center 2: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [39, 3, 0]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(1, 39), (2, 3)]
*** center 4: selecting labels [1, 2, 3] (freq >= 1) [from [13, 54, 1]]
** centroid: 4, normalized-entropy: 0.511032982570113, [(1, 13), (2, 54), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [136, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [1, 2, 3] (freq >= 1) [from [11, 64, 17]]
** centroid: 7, normalized-entropy: 0.744957165709612, [(1, 11), (2, 64), (3, 17)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1872652067039162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1872652067039162, 0.1587824133085087] ***
*** finished computation of 7 references, err: [Inf, 0.1872652067039162, 0.1587824133085087] ***
*** center 1: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [65, 23, 0]]
** centroid: 2, normalized-entropy: 0.828797154590015, [(1, 65), (2, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [32, 47, 0]]
** centroid: 3, normalized-entropy: 0.9738354819891416, [(1, 32), (2, 47)]
*** center 4: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [22, 34, 0]]
** centroid: 5, normalized-entropy: 0.9666186325481027, [(1, 22), (2, 34)]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 76, 9]]
** centroid: 7, normalized-entropy: 0.48736957102366285, [(2, 76), (3, 9)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20592213154770433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20592213154770433, 0.15948769268114119] ***
*** finished computation of 7 references, err: [Inf, 0.20592213154770433, 0.15948769268114119] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [64, 9, 0]]
** centroid: 1, normalized-entropy: 0.5387379148665815, [(1, 64), (2, 9)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 103, 17]]
** centroid: 2, normalized-entropy: 0.5885870739324579, [(2, 103), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [4, 37, 0]]
** centroid: 3, normalized-entropy: 0.4612160405139095, [(1, 4), (2, 37)]
*** center 4: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 31, 0]]
** centroid: 5, normalized-entropy: 0.9973487979180449, [(1, 35), (2, 31)]
*** center 6: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17818714163079857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17818714163079857, 0.1598820529524237] ***
*** finished computation of 7 references, err: [Inf, 0.17818714163079857, 0.1598820529524237] ***
*** center 1: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 23]]
** centroid: 2, normalized-entropy: 0.987380023288353, [(2, 30), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [55, 23, 0]]
** centroid: 3, normalized-entropy: 0.8749315876677922, [(1, 55), (2, 23)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [34, 48, 0]]
** centroid: 4, normalized-entropy: 0.9788698505067782, [(1, 34), (2, 48)]
*** center 5: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 78, 0]]
** centroid: 7, normalized-entropy: 0.09794058271817412, [(1, 1), (2, 78)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2088142425622791] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2088142425622791, 0.15310626650601625] ***
*** finished computation of 7 references, err: [Inf, 0.2088142425622791, 0.15310626650601625] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 51, 18]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(2, 51), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [58, 35, 0]]
** centroid: 3, normalized-entropy: 0.9554189905653109, [(1, 58), (2, 35)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [25, 43, 0]]
** centroid: 4, normalized-entropy: 0.9488482942421287, [(1, 25), (2, 43)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [25, 51, 0]]
** centroid: 5, normalized-entropy: 0.9138472873262908, [(1, 25), (2, 51)]
*** center 6: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22362903095409273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22362903095409273, 0.16642509786039592] ***
*** finished computation of 7 references, err: [Inf, 0.22362903095409273, 0.16642509786039592] ***
*** center 1: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [58, 22, 0]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(1, 58), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [73, 12, 0]]
** centroid: 4, normalized-entropy: 0.5873116089977589, [(1, 73), (2, 12)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 90, 17]]
** centroid: 5, normalized-entropy: 0.6316198184485629, [(2, 90), (3, 17)]
*** center 6: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [27, 48, 0]]
** centroid: 7, normalized-entropy: 0.9426831892554921, [(1, 27), (2, 48)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22388956552557648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22388956552557648, 0.1644369005560875] ***
*** finished computation of 7 references, err: [Inf, 0.22388956552557648, 0.1644369005560875] ***
*** center 1: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 18]]
** centroid: 2, normalized-entropy: 0.9244571409964927, [(2, 35), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [61, 49, 0]]
** centroid: 3, normalized-entropy: 0.9913982594066482, [(1, 61), (2, 49)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [2, 36, 0]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(1, 2), (2, 36)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [29, 12, 0]]
** centroid: 5, normalized-entropy: 0.8721617883411698, [(1, 29), (2, 12)]
*** center 6: selecting labels [1] (freq >= 1) [from [121, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [8, 43, 0]]
** centroid: 7, normalized-entropy: 0.6267511370265896, [(1, 8), (2, 43)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23085919637978078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23085919637978078, 0.1728664245523978] ***
*** finished computation of 7 references, err: [Inf, 0.23085919637978078, 0.1728664245523978] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [50, 24, 0]]
** centroid: 1, normalized-entropy: 0.9090221560878149, [(1, 50), (2, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [87, 10, 0]]
** centroid: 2, normalized-entropy: 0.478723511385963, [(1, 87), (2, 10)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [20, 35, 0]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(1, 20), (2, 35)]
*** center 4: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 33, 0]]
** centroid: 5, normalized-entropy: 0.1914332548141934, [(1, 1), (2, 33)]
*** center 6: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 74, 16]]
** centroid: 7, normalized-entropy: 0.6751914401458716, [(2, 74), (3, 16)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2115301921684295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2115301921684295, 0.1704001236152835] ***
*** finished computation of 7 references, err: [Inf, 0.2115301921684295, 0.1704001236152835] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [49, 31, 0]]
** centroid: 1, normalized-entropy: 0.9631672450918831, [(1, 49), (2, 31)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 52, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 58, 20]]
** centroid: 4, normalized-entropy: 0.8212809417449864, [(2, 58), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [79, 19, 0]]
** centroid: 5, normalized-entropy: 0.7095128863456239, [(1, 79), (2, 19)]
*** center 6: selecting labels [1] (freq >= 1) [from [129, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [37, 11, 0]]
** centroid: 7, normalized-entropy: 0.7765557854444601, [(1, 37), (2, 11)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2845700158379041] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2845700158379041, 0.18980453573539854] ***
*** finished computation of 7 references, err: [Inf, 0.2845700158379041, 0.18980453573539854] ***
*** center 1: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [37, 74, 3]]
** centroid: 2, normalized-entropy: 0.674902516357165, [(1, 37), (2, 74), (3, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [1, 2, 3] (freq >= 1) [from [26, 104, 14]]
** centroid: 6, normalized-entropy: 0.7015109359741908, [(1, 26), (2, 104), (3, 14)]
*** center 7: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22805913956928997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22805913956928997, 0.16508107650838794] ***
*** finished computation of 7 references, err: [Inf, 0.22805913956928997, 0.16508107650838794] ***
*** center 1: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 95, 17]]
** centroid: 2, normalized-entropy: 0.6142910730156771, [(2, 95), (3, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [42, 23, 0]]
** centroid: 4, normalized-entropy: 0.937456170782005, [(1, 42), (2, 23)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [68, 51, 0]]
** centroid: 5, normalized-entropy: 0.9852281360342514, [(1, 68), (2, 51)]
*** center 6: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [51, 2, 0]]
** centroid: 7, normalized-entropy: 0.23181305002459035, [(1, 51), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20479056872054935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20479056872054935, 0.16692439336143433] ***
*** finished computation of 7 references, err: [Inf, 0.20479056872054935, 0.16692439336143433] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [63, 39, 0]]
** centroid: 1, normalized-entropy: 0.9596868937742168, [(1, 63), (2, 39)]
*** center 2: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [43, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [66, 33, 0]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(1, 66), (2, 33)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 78, 23]]
** centroid: 5, normalized-entropy: 0.7740204128451942, [(2, 78), (3, 23)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [42, 22, 0]]
** centroid: 6, normalized-entropy: 0.9283620723948678, [(1, 42), (2, 22)]
*** center 7: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24175399915128945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24175399915128945, 0.16938423260860144] ***
*** finished computation of 7 references, err: [Inf, 0.24175399915128945, 0.16938423260860144] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [67, 14, 0]]
** centroid: 1, normalized-entropy: 0.6641593279528072, [(1, 67), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [92, 32, 0]]
** centroid: 2, normalized-entropy: 0.8238116333123173, [(1, 92), (2, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [45, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 98, 15]]
** centroid: 6, normalized-entropy: 0.5649141512875933, [(2, 98), (3, 15)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [48, 31, 0]]
** centroid: 7, normalized-entropy: 0.966334094295981, [(1, 48), (2, 31)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19981925521139055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19981925521139055, 0.16106054348684848] ***
*** finished computation of 7 references, err: [Inf, 0.19981925521139055, 0.16106054348684848] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [34, 50, 0]]
** centroid: 1, normalized-entropy: 0.9736680645496202, [(1, 34), (2, 50)]
*** center 2: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [51, 2, 0]]
** centroid: 3, normalized-entropy: 0.23181305002459035, [(1, 51), (2, 2)]
*** center 4: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [59, 58, 0]]
** centroid: 5, normalized-entropy: 0.9999473039445343, [(1, 59), (2, 58)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 79, 19]]
** centroid: 6, normalized-entropy: 0.7095128863456239, [(2, 79), (3, 19)]
*** center 7: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.16986497115716337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16986497115716337, 0.1511416151802987] ***
*** finished computation of 7 references, err: [Inf, 0.16986497115716337, 0.1511416151802987] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [35, 32, 0]]
** centroid: 1, normalized-entropy: 0.9985532860835362, [(1, 35), (2, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [41, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 99, 13]]
** centroid: 4, normalized-entropy: 0.517961870953001, [(2, 99), (3, 13)]
*** center 5: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [55, 17, 0]]
** centroid: 6, normalized-entropy: 0.7885131605379784, [(1, 55), (2, 17)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [69, 25, 0]]
** centroid: 7, normalized-entropy: 0.8356038276131503, [(1, 69), (2, 25)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20133473353739828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20133473353739828, 0.16622205640375615] ***
*** finished computation of 7 references, err: [Inf, 0.20133473353739828, 0.16622205640375615] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [81, 7, 0]]
** centroid: 1, normalized-entropy: 0.40057554263664, [(1, 81), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [35, 46, 0]]
** centroid: 2, normalized-entropy: 0.9866554896538049, [(1, 35), (2, 46)]
*** center 3: selecting labels [1] (freq >= 1) [from [45, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 61, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 57, 18]]
** centroid: 5, normalized-entropy: 0.7950402793845225, [(2, 57), (3, 18)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [85, 6, 0]]
** centroid: 6, normalized-entropy: 0.35056382068186565, [(1, 85), (2, 6)]
*** center 7: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2329624430425465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2329624430425465, 0.1627856463836506] ***
*** finished computation of 7 references, err: [Inf, 0.2329624430425465, 0.1627856463836506] ***
*** center 1: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [42, 61, 0]]
** centroid: 2, normalized-entropy: 0.9753130577847331, [(1, 42), (2, 61)]
*** center 3: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [5, 54, 0]]
** centroid: 4, normalized-entropy: 0.4186843105268563, [(1, 5), (2, 54)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [90, 1, 0]]
** centroid: 5, normalized-entropy: 0.08728058888363333, [(1, 90), (2, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 48, 17]]
** centroid: 7, normalized-entropy: 0.829059069399666, [(2, 48), (3, 17)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19233208196237683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19233208196237683, 0.15360025256313384] ***
*** finished computation of 7 references, err: [Inf, 0.19233208196237683, 0.15360025256313384] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 21]]
** centroid: 1, normalized-entropy: 0.9814538950336533, [(2, 29), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [10, 39, 0]]
** centroid: 3, normalized-entropy: 0.7300166301457938, [(1, 10), (2, 39)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [45, 30, 0]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(1, 45), (2, 30)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 63, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [72, 8, 0]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(1, 72), (2, 8)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [81, 5, 0]]
** centroid: 7, normalized-entropy: 0.32001486274754665, [(1, 81), (2, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20124295898899436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20124295898899436, 0.15790553776966407] ***
*** finished computation of 7 references, err: [Inf, 0.20124295898899436, 0.15790553776966407] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 49, 18]]
** centroid: 1, normalized-entropy: 0.8395304981054318, [(2, 49), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [23, 48, 0]]
** centroid: 2, normalized-entropy: 0.9086185980409245, [(1, 23), (2, 48)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [79, 10, 0]]
** centroid: 3, normalized-entropy: 0.5069923067544342, [(1, 79), (2, 10)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [40, 15, 0]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(1, 40), (2, 15)]
*** center 5: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [18, 53, 0]]
** centroid: 6, normalized-entropy: 0.8168114277045246, [(1, 18), (2, 53)]
*** center 7: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19493447061628102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19493447061628102, 0.15987933896225878] ***
*** finished computation of 7 references, err: [Inf, 0.19493447061628102, 0.15987933896225878] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [58, 34, 0]]
** centroid: 1, normalized-entropy: 0.9503376699710269, [(1, 58), (2, 34)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 77, 14]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 77), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [16, 33, 0]]
** centroid: 3, normalized-entropy: 0.9113423759758414, [(1, 16), (2, 33)]
*** center 4: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [37, 31, 0]]
** centroid: 7, normalized-entropy: 0.9943766625699823, [(1, 37), (2, 31)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21261154037434607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21261154037434607, 0.16516331480443477] ***
*** finished computation of 7 references, err: [Inf, 0.21261154037434607, 0.16516331480443477] ***
*** center 1: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [2, 61, 13]]
** centroid: 2, normalized-entropy: 0.5226904095431005, [(1, 2), (2, 61), (3, 13)]
*** center 3: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [20, 34, 0]]
** centroid: 5, normalized-entropy: 0.9509560484549724, [(1, 20), (2, 34)]
*** center 6: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 7: selecting labels [1, 2, 3] (freq >= 1) [from [11, 86, 5]]
** centroid: 7, normalized-entropy: 0.48411628259068085, [(1, 11), (2, 86), (3, 5)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18206813280982898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18206813280982898, 0.15963763258233665] ***
*** finished computation of 7 references, err: [Inf, 0.18206813280982898, 0.15963763258233665] ***
*** center 1: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [29, 45, 0]]
** centroid: 2, normalized-entropy: 0.966009606256856, [(1, 29), (2, 45)]
*** center 3: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 58, 23]]
** centroid: 5, normalized-entropy: 0.8607781176165941, [(2, 58), (3, 23)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [29, 71, 0]]
** centroid: 6, normalized-entropy: 0.8687212463394044, [(1, 29), (2, 71)]
*** center 7: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17620770379155876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17620770379155876, 0.14930357923358678] ***
*** finished computation of 7 references, err: [Inf, 0.17620770379155876, 0.14930357923358678] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [25, 46, 0]]
** centroid: 1, normalized-entropy: 0.935940714955517, [(1, 25), (2, 46)]
*** center 2: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 53, 6]]
** centroid: 3, normalized-entropy: 0.4743454375622396, [(2, 53), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 42, 18]]
** centroid: 4, normalized-entropy: 0.8812908992306927, [(2, 42), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [40, 19, 0]]
** centroid: 5, normalized-entropy: 0.9065795484987461, [(1, 40), (2, 19)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [78, 17, 0]]
** centroid: 6, normalized-entropy: 0.6777688570413568, [(1, 78), (2, 17)]
*** center 7: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17172367232106625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17172367232106625, 0.15510527845472097] ***
*** finished computation of 7 references, err: [Inf, 0.17172367232106625, 0.15510527845472097] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 50, 16]]
** centroid: 1, normalized-entropy: 0.7990485210442682, [(2, 50), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [92, 15, 0]]
** centroid: 2, normalized-entropy: 0.5847281182574745, [(1, 92), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 48, 3]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(2, 48), (3, 3)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [39, 14, 0]]
** centroid: 4, normalized-entropy: 0.8329458235361399, [(1, 39), (2, 14)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [13, 39, 0]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(1, 13), (2, 39)]
*** center 6: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [71, 8, 0]]
** centroid: 7, normalized-entropy: 0.47299536229314826, [(1, 71), (2, 8)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21691969710518605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21691969710518605, 0.1802192446831614] ***
*** finished computation of 7 references, err: [Inf, 0.21691969710518605, 0.1802192446831614] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [41, 53, 0]]
** centroid: 1, normalized-entropy: 0.988212082728797, [(1, 41), (2, 53)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 89, 17]]
** centroid: 2, normalized-entropy: 0.6352115521361693, [(2, 89), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [37, 1, 0]]
** centroid: 3, normalized-entropy: 0.17556502585750275, [(1, 37), (2, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [25, 30, 0]]
** centroid: 5, normalized-entropy: 0.9940302114769566, [(1, 25), (2, 30)]
*** center 6: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19222197161940857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19222197161940857, 0.16506852125097066] ***
*** finished computation of 7 references, err: [Inf, 0.19222197161940857, 0.16506852125097066] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [113, 1, 0]]
** centroid: 1, normalized-entropy: 0.07253718299881001, [(1, 113), (2, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [29, 22, 0]]
** centroid: 3, normalized-entropy: 0.9863676072907089, [(1, 29), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [65, 11, 0]]
** centroid: 4, normalized-entropy: 0.5965109917085881, [(1, 65), (2, 11)]
*** center 5: selecting labels [1, 2, 3] (freq >= 1) [from [1, 74, 2]]
** centroid: 5, normalized-entropy: 0.1724242078109765, [(1, 1), (2, 74), (3, 2)]
*** center 6: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 69, 13]]
** centroid: 7, normalized-entropy: 0.6307970795750609, [(2, 69), (3, 13)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2441386965904385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2441386965904385, 0.15679021190200002] ***
*** finished computation of 7 references, err: [Inf, 0.2441386965904385, 0.15679021190200002] ***
*** center 1: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [22, 26, 0]]
** centroid: 2, normalized-entropy: 0.9949848281859699, [(1, 22), (2, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 106, 16]]
** centroid: 3, normalized-entropy: 0.5605769426145328, [(2, 106), (3, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [45, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [50, 4, 0]]
** centroid: 5, normalized-entropy: 0.38094658570539014, [(1, 50), (2, 4)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [61, 1, 0]]
** centroid: 6, normalized-entropy: 0.11911602665564841, [(1, 61), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [66, 29, 0]]
** centroid: 7, normalized-entropy: 0.8876297058429742, [(1, 66), (2, 29)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18668668163754046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18668668163754046, 0.15962252360582352] ***
*** finished computation of 7 references, err: [Inf, 0.18668668163754046, 0.15962252360582352] ***
*** center 1: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [31, 45, 0]]
** centroid: 3, normalized-entropy: 0.9753817903274211, [(1, 31), (2, 45)]
*** center 4: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 97, 23]]
** centroid: 5, normalized-entropy: 0.7049450065963296, [(2, 97), (3, 23)]
*** center 6: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [69, 33, 0]]
** centroid: 7, normalized-entropy: 0.9081783472997053, [(1, 69), (2, 33)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21707620074599981] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21707620074599981, 0.16434218023438008] ***
*** finished computation of 7 references, err: [Inf, 0.21707620074599981, 0.16434218023438008] ***
*** center 1: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [77, 18, 0]]
** centroid: 2, normalized-entropy: 0.7003691487575897, [(1, 77), (2, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [12, 45, 0]]
** centroid: 4, normalized-entropy: 0.7424875695421234, [(1, 12), (2, 45)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [33, 26, 0]]
** centroid: 5, normalized-entropy: 0.9898220559635807, [(1, 33), (2, 26)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 92, 13]]
** centroid: 6, normalized-entropy: 0.5402129815415571, [(2, 92), (3, 13)]
*** center 7: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 350,3 => 33,1 => 617), Dict(2 => 380,3 => 34,1 => 586))
[ Info: ===== scores for single classifier: {"micro_f1":0.903,"precision":0.903,"recall":0.903,"macro_recall":0.6194209927549249,"macro_f1":0.6076210196457765,"accuracy":0.903,"class_f1":{"2":0.876117496807152,"3":0.0,"1":0.9467455621301776},"class_precision":{"2":0.8511166253101737,"3":0.0,"1":0.9380234505862647},"class_recall":{"2":0.9026315789473685,"3":0.0,"1":0.9556313993174061}}
[ Info: ===== scores for 1: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.9556181912319447,"macro_f1":0.9625826365489581,"accuracy":0.968,"class_f1":{"2":0.9568733153638813,"3":0.955223880597015,"1":0.9756507136859781},"class_precision":{"2":0.9806629834254144,"3":0.9696969696969697,"1":0.9603305785123967},"class_recall":{"2":0.9342105263157895,"3":0.9411764705882353,"1":0.9914675767918089}}
[ Info: ===== scores for 5: {"micro_f1":0.978,"precision":0.978,"recall":0.978,"macro_recall":0.9733168496426773,"macro_f1":0.974778142729173,"accuracy":0.978,"class_f1":{"2":0.9706666666666667,"3":0.9705882352941176,"1":0.9830795262267343},"class_precision":{"2":0.9837837837837838,"3":0.9705882352941176,"1":0.9748322147651006},"class_recall":{"2":0.9578947368421052,"3":0.9705882352941176,"1":0.9914675767918089}}
[ Info: ===== scores for 7: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9808454583557871,"macro_f1":0.972895611254326,"accuracy":0.975,"class_f1":{"2":0.9667994687915006,"3":0.9714285714285714,"1":0.9804587935429057},"class_precision":{"2":0.9758713136729222,"3":0.9444444444444444,"1":0.9763113367174281},"class_recall":{"2":0.9578947368421052,"3":1.0,"1":0.984641638225256}}
[ Info: ===== scores for 9: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9805370935872103,"macro_f1":0.9728771885611113,"accuracy":0.975,"class_f1":{"2":0.9667110519307589,"3":0.9714285714285714,"1":0.9804919423240035},"class_precision":{"2":0.9784366576819407,"3":0.9444444444444444,"1":0.9747048903878583},"class_recall":{"2":0.9552631578947368,"3":1.0,"1":0.9863481228668942}}
[ Info: ===== scores for 11: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.9779534159631161,"macro_f1":0.9615517441659681,"accuracy":0.971,"class_f1":{"2":0.9614873837981408,"3":0.9444444444444444,"1":0.9787234042553192},"class_precision":{"2":0.9705093833780161,"3":0.8947368421052632,"1":0.9762308998302207},"class_recall":{"2":0.9526315789473684,"3":1.0,"1":0.9812286689419796}}
(score = 0.968, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.971, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.971, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.967, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.977, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.978, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.978, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.978,"k":5,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.978,"precision":0.978,"recall":0.978,"macro_recall":0.9733168496426773,"macro_f1":0.974778142729173,"accuracy":0.978,"class_f1":{"2":0.9706666666666667,"3":0.9705882352941176,"1":0.9830795262267343},"class_precision":{"2":0.9837837837837838,"3":0.9705882352941176,"1":0.9748322147651006},"class_recall":{"2":0.9578947368421052,"3":0.9705882352941176,"1":0.9914675767918089}}
Test Summary: | Pass  Total
AKNC          |    8      8
[321, 2, 1, 4, 1, 3, 4, 2, 4, 7, 3, 20, 4, 6, 32, 1, 3, 9, 9, 6, 2, 1, 2, 11, 3, 8, 6, 23, 4, 7, 29, 3, 4, 1, 9, 1, 4, 10, 5, 10, 5, 11, 12, 3, 11, 4, 22, 6, 72, 30, 2, 12, 59, 2, 4, 10, 4, 17, 7, 10, 8, 6, 38, 49, 10, 7, 19, 12, 50, 92, 202, 2, 13, 8, 6, 9, 11, 73, 12, 23, 23, 6, 27, 5, 41, 62, 33, 3, 73, 1, 38, 29, 4, 10, 12, 43, 18, 235, 1, 16, 5, 15, 17, 3, 5, 80, 1, 5, 5, 13, 40, 6, 30, 57, 21, 50, 5, 4, 37, 1, 96, 12, 17, 17, 24, 4, 16, 47, 4, 5, 16, 18, 19, 20, 97, 41, 48, 4, 14, 2, 20, 2, 5, 19, 3, 23, 64, 75, 6, 16, 15, 35, 7, 69, 20, 43, 169, 8, 37, 87, 5, 23, 2, 11, 13, 3, 16, 15, 94, 16, 6, 24, 25, 42, 99, 10, 532, 19, 12, 34, 58, 10, 32, 45, 55, 43, 11, 97, 2, 6, 173, 22, 5, 46, 30, 7, 9, 25, 56, 26, 16, 93, 5, 20, 39, 24, 29, 4, 9, 6, 4, 3, 1, 51, 4, 16, 822, 14, 56, 4, 3, 10, 17, 7, 235, 8, 11, 36, 208, 2, 38, 601, 15, 110, 8, 29, 14, 20, 119, 3, 8, 54, 21, 8, 38, 11, 98, 6, 28, 18, 29, 3, 21, 17, 5, 5, 6, 7, 16, 5, 100, 5, 12, 96, 19, 124, 8, 3, 8, 13, 36, 28, 4, 98, 9, 52, 34, 45, 26, 17, 24, 2, 33, 18, 15, 13, 9, 18, 19, 9, 58, 20, 42, 34, 9, 14, 159, 4, 18, 6]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6360000000000002, speedup = 0.2870918930466052, eval_ratio = 0.080829)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.39603794642857143,"recall":0.3862847222222222,"f1":null,"seconds":0.00019021518528461456,"exhaustive_search_seconds":0.0003534369170665741,"evaluations":494.984375,"distances_sum":1735.275003033768}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.558159722222222,"recall":0.558159722222222,"f1":null,"seconds":0.00046369433403015137,"exhaustive_search_seconds":0.0003534369170665741,"evaluations":639.109375,"distances_sum":1694.988379383467}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6657986111111107,"recall":0.6657986111111107,"f1":null,"seconds":0.00047049857676029205,"exhaustive_search_seconds":0.0003534369170665741,"evaluations":792.9765625,"distances_sum":1636.918340205689}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.736979166666666,"recall":0.736979166666666,"f1":0.736979166666666,"seconds":0.0005755461752414703,"exhaustive_search_seconds":0.0003534369170665741,"evaluations":905.5390625,"distances_sum":1612.3972718838945}
KCenters.DeloneInvIndex> reached performance {"precision":0.8003472222222213,"recall":0.8003472222222213,"f1":0.8003472222222213,"seconds":0.0006510689854621887,"exhaustive_search_seconds":0.0003534369170665741,"evaluations":1013.5703125,"distances_sum":1591.894873873508}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7760000000000001, speedup = 0.5176657518416872, eval_ratio = 0.109864)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
