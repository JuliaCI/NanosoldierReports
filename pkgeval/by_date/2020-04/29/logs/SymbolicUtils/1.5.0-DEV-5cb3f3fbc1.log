Julia Version 1.5.0-DEV.701
Commit 5cb3f3fbc1 (2020-04-28 13:13 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Libiconv_jll ───────────────── v1.16.0+2
  Installed SymbolicUtils ──────────────── v0.1.0
  Installed EzXML ──────────────────────── v1.1.0
  Installed ExprTools ──────────────────── v0.1.1
  Installed RecipesBase ────────────────── v1.0.1
  Installed Intervals ──────────────────── v1.1.0
  Installed Polynomials ────────────────── v0.8.0
  Installed Mocking ────────────────────── v0.7.1
  Installed Zlib_jll ───────────────────── v1.2.11+9
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed NaNMath ────────────────────── v0.3.3
  Installed TimerOutputs ───────────────── v0.5.5
  Installed Combinatorics ──────────────── v1.0.1
  Installed TimeZones ──────────────────── v1.1.1
  Installed SpecialFunctions ───────────── v0.10.0
  Installed XML2_jll ───────────────────── v2.9.9+4
Updating `~/.julia/environments/v1.5/Project.toml`
  [d1185830] + SymbolicUtils v0.1.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [861a8166] + Combinatorics v1.0.1
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [d8418881] + Intervals v1.1.0
  [94ce4f54] + Libiconv_jll v1.16.0+2
  [78c3b35d] + Mocking v0.7.1
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [f27b6e38] + Polynomials v0.8.0
  [3cdcf5f2] + RecipesBase v1.0.1
  [276daf66] + SpecialFunctions v0.10.0
  [d1185830] + SymbolicUtils v0.1.0
  [f269a46b] + TimeZones v1.1.1
  [a759f4b9] + TimerOutputs v0.5.5
  [02c8fc9c] + XML2_jll v2.9.9+4
  [83775a58] + Zlib_jll v1.2.11+9
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones → `~/.julia/packages/TimeZones/X323b/deps/build.log`
    Testing SymbolicUtils
Status `/tmp/jl_cBImKK/Project.toml`
  [861a8166] Combinatorics v1.0.1
  [77ba4419] NaNMath v0.3.3
  [276daf66] SpecialFunctions v0.10.0
  [d1185830] SymbolicUtils v0.1.0
  [a759f4b9] TimerOutputs v0.5.5
  [8dfed614] Test
Status `/tmp/jl_cBImKK/Manifest.toml`
  [861a8166] Combinatorics v1.0.1
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [d8418881] Intervals v1.1.0
  [94ce4f54] Libiconv_jll v1.16.0+2
  [78c3b35d] Mocking v0.7.1
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [f27b6e38] Polynomials v0.8.0
  [3cdcf5f2] RecipesBase v1.0.1
  [276daf66] SpecialFunctions v0.10.0
  [d1185830] SymbolicUtils v0.1.0
  [f269a46b] TimeZones v1.1.1
  [a759f4b9] TimerOutputs v0.5.5
  [02c8fc9c] XML2_jll v2.9.9+4
  [83775a58] Zlib_jll v1.2.11+9
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
@syms         |   14     14
Test Summary: | Pass  Total
methods test  |    9      9
Test Summary:  | Pass  Total
operator order |   96     96
Test Summary: | Pass  Total
Equality      |    5      5
Test Summary:   | Pass  Total
Literal Matcher |    3      3
Test Summary: | Pass  Total
Slot matcher  |    2      2
Test Summary: | Pass  Total
Term matcher  |    6      6
Test Summary:     | Pass  Total
Equality matching |   11     11
Test Summary: | Pass  Total
Numeric       |   15     15
Test Summary:          | Pass  Total
Pythagorean Identities |    5      5
Test Summary: | Pass  Total
Depth         |    2      2
Test Summary:    | Pass  Total
RuleRewriteError |    2      2
 ──────────────────────────────────────────────────────────────────────────────
                                       Time                   Allocations      
                               ──────────────────────   ───────────────────────
       Tot / % measured:            10.1s / 46.2%            333MiB / 43.2%    

 Section               ncalls     time   %tot     avg     alloc   %tot      avg
 ──────────────────────────────────────────────────────────────────────────────
 (*)(~(~(x::!issort...  1.01k    1.07s  23.1%  1.06ms   35.0MiB  24.3%  35.5KiB
   RHS                    125    911ms  19.6%  7.29ms   32.2MiB  22.4%   264KiB
 (*)(~(~x)) ^ ~y =>...    884    994ms  21.4%  1.12ms   44.6MiB  31.0%  51.7KiB
   RHS                     51    645ms  13.9%  12.6ms   37.0MiB  25.6%   742KiB
 ACRule((~y) ^ ~n *...    833    592ms  12.8%   711μs   13.2MiB  9.15%  16.2KiB
   RHS                     33   7.78ms  0.17%   236μs   10.4KiB  0.01%     323B
 (*)(~(~(x::hasrepe...    707    442ms  9.52%   625μs   14.9MiB  10.3%  21.5KiB
   RHS                     15    325ms  7.01%  21.7ms   12.2MiB  8.44%   831KiB
 ACRule((~x) ^ ~n *...    800    351ms  7.56%   439μs   8.28MiB  5.74%  10.6KiB
   RHS                     31    315μs  0.01%  10.2μs   6.78KiB  0.00%     224B
 (*)(~(~(x::isnotfl...  1.10k    307ms  6.60%   278μs   6.73MiB  4.67%  6.25KiB
   RHS                     94    156ms  3.37%  1.66ms   3.26MiB  2.26%  35.5KiB
 ~x / ~y => ~x * po...  1.16k    197ms  4.23%   170μs   6.89MiB  4.78%  6.10KiB
   RHS                     53   15.7ms  0.34%   296μs   98.6KiB  0.07%  1.86KiB
 ACRule(~(z::_isone...    692    160ms  3.44%   231μs   2.97MiB  2.06%  4.39KiB
   RHS                     13   4.75μs  0.00%   365ns     0.00B  0.00%    0.00B
 ((~x) ^ ~p) ^ ~q =...    769    134ms  2.88%   174μs   2.60MiB  1.81%  3.47KiB
   RHS                     62   7.13ms  0.15%   115μs   18.3KiB  0.01%     302B
 (*)(~x) => ~x            632    128ms  2.76%   203μs   1.31MiB  0.91%  2.13KiB
   RHS                      2    859ns  0.00%   430ns     0.00B  0.00%    0.00B
 ACRule(~(z::_iszer...    692    125ms  2.69%   181μs   2.12MiB  1.47%  3.13KiB
 ACRule(~(a::isnumb...    885    101ms  2.17%   114μs   3.65MiB  2.53%  4.22KiB
   RHS                      1   1.65μs  0.00%  1.65μs     0.00B  0.00%    0.00B
 (~x) ^ ~(z::_iszer...    679   5.01ms  0.11%  7.38μs    387KiB  0.26%     583B
   RHS                     14   5.73μs  0.00%   409ns     0.00B  0.00%    0.00B
 (~x) ^ ~(z::_isone...    665   4.08ms  0.09%  6.14μs    377KiB  0.26%     581B
   RHS                     33   12.4μs  0.00%   375ns     0.00B  0.00%    0.00B
 identity(~x) => ~x     1.16k   3.06ms  0.07%  2.64μs    188KiB  0.13%     167B
 ~x - ~y => ~x + -1...  1.16k   2.69ms  0.06%  2.33μs    235KiB  0.16%     208B
 +(~(~(x::isnotflat...    884   2.34ms  0.05%  2.64μs    137KiB  0.09%     159B
 +(~(~(x::!issorted...    884   2.10ms  0.05%  2.37μs    137KiB  0.09%     159B
 +(~(~(x::hasrepeat...    707   1.77ms  0.04%  2.50μs    104KiB  0.07%     150B
 ACRule(~x + ~(β::i...    884   1.69ms  0.04%  1.91μs   25.0KiB  0.02%    29.0B
 +(~x) => ~x              632   1.67ms  0.04%  2.64μs   89.8KiB  0.06%     145B
 ACRule(~(a::isnumb...    884   1.64ms  0.04%  1.85μs   25.0KiB  0.02%    29.0B
 ACRule(~(α::isnumb...    884   1.57ms  0.03%  1.77μs   25.0KiB  0.02%    29.0B
 ACRule((*)(~(~x)) ...    884   1.55ms  0.03%  1.75μs   25.0KiB  0.02%    29.0B
 ACRule(sec(~x) ^ 2...    630   1.43ms  0.03%  2.26μs   17.1KiB  0.01%    27.8B
 ACRule(~(α::isnumb...    884   1.38ms  0.03%  1.56μs   25.0KiB  0.02%    29.0B
 ACRule(cos(~x) ^ 2...    630   1.33ms  0.03%  2.11μs   17.1KiB  0.01%    27.8B
 ACRule(tan(~x) ^ 2...    630   1.28ms  0.03%  2.03μs   17.1KiB  0.01%    27.8B
 ACRule(~(z::_iszer...    679   1.23ms  0.03%  1.81μs   18.6KiB  0.01%    28.1B
 ACRule(cot(~x) ^ 2...    630   1.18ms  0.03%  1.88μs   17.1KiB  0.01%    27.8B
 ACRule(csc(~x) ^ 2...    630   1.18ms  0.03%  1.88μs   17.1KiB  0.01%    27.8B
 ACRule(sin(~x) ^ 2...    630   1.12ms  0.02%  1.78μs   17.1KiB  0.01%    27.8B
 ACRule(tan(~x) ^ 2...    630   1.09ms  0.02%  1.74μs   17.1KiB  0.01%    27.8B
 ACRule(sin(~x) ^ 2...    630   1.08ms  0.02%  1.71μs   17.1KiB  0.01%    27.8B
 ACRule(cot(~x) ^ 2...    630   1.03ms  0.02%  1.64μs   17.1KiB  0.01%    27.8B
 ──────────────────────────────────────────────────────────────────────────────
Test Summary: |
timerwrite    | No tests
Fuzz test: Error During Test at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:85
  Test threw exception
  Expression: unsimplified ≈ simplified
  MethodError: no method matching isapprox(::Float64, ::Errored)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(!Matched::Polynomials.AbstractPolynomial{T}, ::S; rtol, atol) where {T, S} at /home/pkgeval/.julia/packages/Polynomials/ghqdF/src/common.jl:551
    isapprox(::Any; kwargs...) at floatfuncs.jl:286
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:246
   [2] fuzz_test(::Int64) at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:85
   [3] macro expansion at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:104 [inlined]
   [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [5] top-level scope at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:103
  
Test failed for expression
    ((c * inv(a)) ^ b) = 1.9217522864560106
Simplified to:
    ((inv(a) ^ b) * (c ^ b)) = Errored(DomainError(-0.38735435760230535, "Exponentiation yielding a complex result requires a complex argument.\nReplace x^y with (x+0im)^y, Complex(x)^y, or similar."))
On inputs:
    Any[c, b, a] = [-0.1147087335135349, -0.20978957397191328, -2.581615464945136]

Fuzz test: Error During Test at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:85
  Test threw exception
  Expression: unsimplified ≈ simplified
  MethodError: no method matching isapprox(::Float64, ::Errored)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(!Matched::Polynomials.AbstractPolynomial{T}, ::S; rtol, atol) where {T, S} at /home/pkgeval/.julia/packages/Polynomials/ghqdF/src/common.jl:551
    isapprox(::Any; kwargs...) at floatfuncs.jl:286
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:246
   [2] fuzz_test(::Int64) at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:85
   [3] macro expansion at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:104 [inlined]
   [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [5] top-level scope at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:103
  
Test failed for expression
    ((c * inv(a)) ^ b) = 0.7703123904708427
Simplified to:
    ((inv(a) ^ b) * (c ^ b)) = Errored(DomainError(-0.5087149958690698, "Exponentiation yielding a complex result requires a complex argument.\nReplace x^y with (x+0im)^y, Complex(x)^y, or similar."))
On inputs:
    Any[c, b, a] = [-0.3182368311594851, 0.1433190398912879, -1.9657372165560743]

Fuzz test: Error During Test at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:85
  Test threw exception
  Expression: unsimplified ≈ simplified
  MethodError: no method matching isapprox(::Float64, ::Errored)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(!Matched::Polynomials.AbstractPolynomial{T}, ::S; rtol, atol) where {T, S} at /home/pkgeval/.julia/packages/Polynomials/ghqdF/src/common.jl:551
    isapprox(::Any; kwargs...) at floatfuncs.jl:286
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:246
   [2] fuzz_test(::Int64) at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:85
   [3] macro expansion at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:104 [inlined]
   [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [5] top-level scope at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:103
  
Test failed for expression
    ((c * inv(a)) ^ b) = 0.8308809170681614
Simplified to:
    ((inv(a) ^ b) * (c ^ b)) = Errored(DomainError(-0.665361907805986, "Exponentiation yielding a complex result requires a complex argument.\nReplace x^y with (x+0im)^y, Complex(x)^y, or similar."))
On inputs:
    Any[c, b, a] = [-0.9586426443118322, 0.41201875585113784, -1.502941464288923]

Fuzz test: Error During Test at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:85
  Test threw exception
  Expression: unsimplified ≈ simplified
  MethodError: no method matching isapprox(::Float64, ::Errored)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(!Matched::Polynomials.AbstractPolynomial{T}, ::S; rtol, atol) where {T, S} at /home/pkgeval/.julia/packages/Polynomials/ghqdF/src/common.jl:551
    isapprox(::Any; kwargs...) at floatfuncs.jl:286
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:246
   [2] fuzz_test(::Int64) at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:85
   [3] macro expansion at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:104 [inlined]
   [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [5] top-level scope at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:103
  
Test failed for expression
    ((c * inv(a)) ^ b) = 3.5525043517571735
Simplified to:
    ((inv(a) ^ b) * (c ^ b)) = Errored(DomainError(-2.7301517680495992, "Exponentiation yielding a complex result requires a complex argument.\nReplace x^y with (x+0im)^y, Complex(x)^y, or similar."))
On inputs:
    Any[c, b, a] = [-0.8820428077614473, 1.4424117973456447, -0.3662800038088699]

Test Summary: | Pass  Error  Total
Fuzz test     | 9996      4  10000
ERROR: LoadError: LoadError: Some tests did not pass: 9996 passed, 0 failed, 4 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/fuzz.jl:102
in expression starting at /home/pkgeval/.julia/packages/SymbolicUtils/IWlf0/test/runtests.jl:13
ERROR: Package SymbolicUtils errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1515
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:16
