Julia Version 1.5.0-DEV.607
Commit 8a5b3233a1 (2020-04-09 12:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ───────────────────── v1.0.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed ArgCheck ───────────────────── v2.0.0
  Installed Parameters ─────────────────── v0.12.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed ProgressMeter ──────────────── v1.2.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed Missings ───────────────────── v0.4.3
  Installed DataAPI ────────────────────── v1.1.0
  Installed FillArrays ─────────────────── v0.8.7
  Installed MacroTools ─────────────────── v0.5.5
  Installed SpecialFunctions ───────────── v0.10.0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed LazyArrays ─────────────────── v0.15.1
  Installed DataStructures ─────────────── v0.17.11
  Installed StatsBase ──────────────────── v0.32.2
Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.11
  [1a297f60] + FillArrays v0.8.7
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.1
  [1914dd2f] + MacroTools v0.5.5
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.2
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing AdvancedHMC
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+0.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+1.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+2.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+3.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
Status `/tmp/jl_lw3vy8/Project.toml`
  [0bf59076] AdvancedHMC v0.2.21
  [dce04be8] ArgCheck v2.0.0
  [76274a88] Bijectors v0.6.7
  [31c24e10] Distributions v0.23.2
  [f6369f11] ForwardDiff v0.10.10
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.15.1
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [fce5fe82] Turing v0.10.1
  [b8865327] UnicodePlots v1.2.0
  [e88e6eb3] Zygote v0.4.15
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_lw3vy8/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.5.6
  [1520ce14] AbstractTrees v0.3.2
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [5b7e9947] AdvancedMH v0.4.1
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.8.3
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.6.7
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.7.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.11
  [2b5f629d] DiffEqBase v6.27.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.4.10
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.5.0
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.6.0
  [1a297f60] FillArrays v0.8.7
  [6a86dc24] FiniteDiff v2.3.0
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.3.0
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [2ee39098] LabelledArrays v1.1.0
  [5078a376] LazyArrays v0.15.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.3.4
  [093fc24a] LightGraphs v1.3.1
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [e6f89c97] LoggingExtras v0.4.0
  [c7f686f2] MCMCChains v3.0.11
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.9+2
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v1.0.1
  [f27b6e38] Polynomials v0.5.3
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.0
  [731186ca] RecursiveArrayTools v2.3.1
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [37e2e3b7] ReverseDiff v1.1.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.6.0
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [5d786b92] TerminalLoggers v0.1.1
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.10.1
  [3a884ed6] UnPack v0.1.0
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.15
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.116664981
│   t_steps = 0.006728792
└   t_step / t_steps = 17.33817615405559
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/MJVig/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/MJVig/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 6:16:07[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.00014471839616155848
  log_density:                   -10.885556650517225
  hamiltonian_energy:            16.645287463217215
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  8.840720799293823
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▎                           |  ETA: 0:00:26[K
  iterations:                    1261
  n_steps:                       63
  is_accept:                     true
  acceptance_rate:               0.9933098347424391
  log_density:                   -11.441421194056986
  hamiltonian_energy:            13.448689997235801
  hamiltonian_energy_error:      -0.12560157065875188
  max_hamiltonian_energy_error:  -0.3358047882513677
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8240404669584127
  nom_step_size:                 0.8240404669584127
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9088502191885808, 0.8449 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:21[K
  iterations:                    1544
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9008847991063592
  log_density:                   -15.400564252277544
  hamiltonian_energy:            17.170842213305235
  hamiltonian_energy_error:      0.3528901192622982
  max_hamiltonian_energy_error:  -0.45038632070300366
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9226520555980563
  nom_step_size:                 0.9226520555980563
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9088502191885808, 0.8449 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:19[K
  iterations:                    1778
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               0.48639957591775645
  log_density:                   -20.393440458114735
  hamiltonian_energy:            25.415126329633534
  hamiltonian_energy_error:      1.240389772929813
  max_hamiltonian_energy_error:  1.5506369424826438
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8377670437922505
  nom_step_size:                 0.8377670437922505
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9088502191885808, 0.8449 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▎                         |  ETA: 0:00:16[K
  iterations:                    2055
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.734736280461757
  log_density:                   -15.664158241892377
  hamiltonian_energy:            19.030109210095233
  hamiltonian_energy_error:      0.4874466159437496
  max_hamiltonian_energy_error:  0.5818318536660598
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▎                        |  ETA: 0:00:14[K
  iterations:                    2416
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7299605081478872
  log_density:                   -12.83703788864647
  hamiltonian_energy:            19.078294239770216
  hamiltonian_energy_error:      0.06657098186451549
  max_hamiltonian_energy_error:  0.558243731780319
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████▎                       |  ETA: 0:00:12[K
  iterations:                    2788
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.999536436176119
  log_density:                   -12.59444654904993
  hamiltonian_energy:            15.910108425771881
  hamiltonian_energy_error:      -0.2535711339953224
  max_hamiltonian_energy_error:  -0.4584197944575479
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▍                      |  ETA: 0:00:10[K
  iterations:                    3220
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8215187460389534
  log_density:                   -11.928507871154288
  hamiltonian_energy:            17.0092626844882
  hamiltonian_energy_error:      -0.02073018602584753
  max_hamiltonian_energy_error:  0.3845582049500571
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▏                     |  ETA: 0:00:09[K
  iterations:                    3550
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9942928176743001
  log_density:                   -13.3001840470364
  hamiltonian_energy:            20.384792570085683
  hamiltonian_energy_error:      -0.514576876475612
  max_hamiltonian_energy_error:  -0.514576876475612
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 33%|██████████▎                    |  ETA: 0:00:08[K
  iterations:                    3963
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9282984391203748
  log_density:                   -16.83763180820366
  hamiltonian_energy:            26.773263861107644
  hamiltonian_energy_error:      -0.36859929798177404
  max_hamiltonian_energy_error:  -0.4695502128402609
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████▏                   |  ETA: 0:00:07[K
  iterations:                    4295
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9763397569418993
  log_density:                   -13.511796426116561
  hamiltonian_energy:            18.496823107682545
  hamiltonian_energy_error:      -0.18436838363175312
  max_hamiltonian_energy_error:  -0.23636292770357414
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████▎                  |  ETA: 0:00:06[K
  iterations:                    4729
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8487355643551892
  log_density:                   -12.638876155856783
  hamiltonian_energy:            17.393982658376505
  hamiltonian_energy_error:      0.01410528278685419
  max_hamiltonian_energy_error:  0.30284017450121326
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████                  |  ETA: 0:00:06[K
  iterations:                    5020
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9623008859057206
  log_density:                   -14.048920032800675
  hamiltonian_energy:            21.7108068790127
  hamiltonian_energy_error:      -0.47294964758932423
  max_hamiltonian_energy_error:  -0.4878266110364322
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|██████████████▏                |  ETA: 0:00:05[K
  iterations:                    5452
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9251090979212669
  log_density:                   -13.361657116677392
  hamiltonian_energy:            19.344854407149157
  hamiltonian_energy_error:      -0.1476165494082764
  max_hamiltonian_energy_error:  0.22865376823910566
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▉                |  ETA: 0:00:05[K
  iterations:                    5756
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7656368740625918
  log_density:                   -15.666069128477911
  hamiltonian_energy:            18.86510085138181
  hamiltonian_energy_error:      0.4543749442872844
  max_hamiltonian_energy_error:  0.5221903426497825
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▊               |  ETA: 0:00:04[K
  iterations:                    6081
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.867283476906996
  hamiltonian_energy:            18.232063887664136
  hamiltonian_energy_error:      -0.20413471586591925
  max_hamiltonian_energy_error:  -0.3131127219043428
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▌              |  ETA: 0:00:04[K
  iterations:                    6401
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9676627725405753
  log_density:                   -12.67564936311903
  hamiltonian_energy:            17.916544786518024
  hamiltonian_energy_error:      -0.2887236354286067
  max_hamiltonian_energy_error:  -0.332428071905877
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▍             |  ETA: 0:00:04[K
  iterations:                    6723
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.41496340828716
  hamiltonian_energy:            17.57424671872097
  hamiltonian_energy_error:      -0.6909534692306316
  max_hamiltonian_energy_error:  -0.6997850199874627
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▌            |  ETA: 0:00:03[K
  iterations:                    7149
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -18.64435739494509
  hamiltonian_energy:            27.361978861381964
  hamiltonian_energy_error:      -0.19814274727709957
  max_hamiltonian_energy_error:  -0.35124514666738804
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▎           |  ETA: 0:00:03[K
  iterations:                    7460
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.407564984710783
  hamiltonian_energy:            18.528164880769626
  hamiltonian_energy_error:      -0.24145305033675868
  max_hamiltonian_energy_error:  -0.2600579226777846
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████▏          |  ETA: 0:00:03[K
  iterations:                    7787
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9183807058688798
  log_density:                   -13.116324315969567
  hamiltonian_energy:            17.24324590228177
  hamiltonian_energy_error:      0.0214823390658907
  max_hamiltonian_energy_error:  0.14915099312456803
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████▏         |  ETA: 0:00:02[K
  iterations:                    8157
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8780537723326756
  log_density:                   -11.613853745022043
  hamiltonian_energy:            17.120326008980648
  hamiltonian_energy_error:      -0.1911373441820814
  max_hamiltonian_energy_error:  0.33897388088727354
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▎        |  ETA: 0:00:02[K
  iterations:                    8624
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8027810437757488
  log_density:                   -12.044855068435478
  hamiltonian_energy:            15.391928474637929
  hamiltonian_energy_error:      0.14591172474998793
  max_hamiltonian_energy_error:  0.4228359501840391
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▊        |  ETA: 0:00:02[K
  iterations:                    8791
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9195525945333622
  log_density:                   -14.458769717713041
  hamiltonian_energy:            21.22765795994478
  hamiltonian_energy_error:      -0.09740329673169867
  max_hamiltonian_energy_error:  0.18185780615202063
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|███████████████████████▉       |  ETA: 0:00:02[K
  iterations:                    9221
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8116939090383243
  log_density:                   -11.522594264906848
  hamiltonian_energy:            15.10544478614582
  hamiltonian_energy_error:      0.07154243733213406
  max_hamiltonian_energy_error:  0.35613551202138183
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▌      |  ETA: 0:00:01[K
  iterations:                    9480
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9801240151300643
  log_density:                   -15.973785117951433
  hamiltonian_energy:            22.18914013617803
  hamiltonian_energy_error:      -0.16824286386094656
  max_hamiltonian_energy_error:  -0.363543493179332
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▍     |  ETA: 0:00:01[K
  iterations:                    9833
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8786800933697906
  log_density:                   -14.265854750168032
  hamiltonian_energy:            21.81105992308155
  hamiltonian_energy_error:      -0.15104877665264382
  max_hamiltonian_energy_error:  0.3353423768584918
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▍    |  ETA: 0:00:01[K
  iterations:                    10198
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9960672046783507
  log_density:                   -13.821046791712709
  hamiltonian_energy:            17.171651907992008
  hamiltonian_energy_error:      -0.07481350628054884
  max_hamiltonian_energy_error:  -0.3058810664115157
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▌   |  ETA: 0:00:01[K
  iterations:                    10636
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9262028019277622
  log_density:                   -13.179418000544228
  hamiltonian_energy:            15.06609119283648
  hamiltonian_energy_error:      0.1613473272844974
  max_hamiltonian_energy_error:  0.1613473272844974
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▍  |  ETA: 0:00:01[K
  iterations:                    10989
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.038983847244065
  hamiltonian_energy:            20.150576241540556
  hamiltonian_energy_error:      -0.01040948806892672
  max_hamiltonian_energy_error:  -0.3230900724195642
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▌ |  ETA: 0:00:00[K
  iterations:                    11415
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9745708591349304
  log_density:                   -12.705080862292927
  hamiltonian_energy:            16.657880620552238
  hamiltonian_energy_error:      -0.08646503070011136
  max_hamiltonian_energy_error:  -0.15460134664104785
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▍|  ETA: 0:00:00[K
  iterations:                    11771
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9061268990955326
  log_density:                   -12.032658506734315
  hamiltonian_energy:            13.83677969763214
  hamiltonian_energy_error:      0.12144405506074563
  max_hamiltonian_energy_error:  0.20152888573753103
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.401178456135971
  hamiltonian_energy:            21.615411425105023
  hamiltonian_energy_error:      -0.6590341722422224
  max_hamiltonian_energy_error:  -0.9409839324612861
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7238244790502674
  nom_step_size:                 0.7238244790502674
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0275362752771096, 1.0121 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.181852133 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0275362752771096, 1.0121 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.724), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0963807794526743
└   average_acceptance_rate = 0.8609929493521203
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.176388414 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠑⠢⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡆⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢱⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⢸⢇⠀⠀⠀⠀⠀⠀⢀⠔⠊⢣⠀⡸⠀⠀⢇⢀⠜⠉⠲│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⡇⠈⢆⠀⢀⣀⠤⠒⠁⠀⠀⠀⠣⠇⠀⠀⠘⠃⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⢸⠀⠀⠈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⡠⠤⠤⠒⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⣀⠮⠤⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡒⠢⠤⡲⠝⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠈⠑⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
