Julia Version 1.5.0-DEV.611
Commit 8057c60354 (2020-04-10 14:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_emR9FO/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_emR9FO/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.03207660509345903 -0.06653614849830858; -0.03207660509345903 0.0 -0.11603669642561672; 0.06653614849830858 0.11603669642561672 0.0])
dAA = so3([0.0 0.09640795577258454 -0.054334149282010615; -0.09640795577258454 0.0 -0.1219603773610505; 0.054334149282010615 0.1219603773610505 0.0])
dAA = so3([0.0 -0.029368157645425698 -0.13197687832760294; 0.029368157645425698 0.0 0.06804285535939919; 0.13197687832760294 -0.06804285535939919 0.0])
dAA = Quaternion(0.9955987562743044, [0.004278332604987355, 0.08823393079988584, 0.031298335910723195])
dAA = SO3([0.9923214550019896 0.05334649568698777 0.11158979048574665; -0.058315639635051826 0.9974248461245885 0.04174880246541532; -0.10907527729366272 -0.047935662415989316 0.9928770095797621])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9622666340736281 0.21385099576120625 -0.16825776820269212; -0.25468559687384806 0.9255332715557073 -0.2802202883240277; 0.09580277497871388 0.3124994637680679 0.9450745544405732]), [1.1603669642561671, -0.6653614849830858, -0.3207660509345903])
xj = SE3(SO3([0.8919987702582013 -0.14672101668614265 0.42756419064327783; 0.16215337594822643 0.9867655129493575 0.0003242258232861633; -0.4219531686413194 0.0690417679117214 0.9039849322622442]), [-0.6804285535939919, -1.3197687832760292, 0.29368157645425697])
Dx = SE3(SO3([0.7766182404487917 -0.38588530955909184 0.4979524439830641; 0.20897303083700294 0.9034833933909486 0.3742299162942126; -0.5943015909326003 -0.18657514768387617 0.7823013059440204]), [-1.545802205832215, -0.807317128131445, 1.0738051650415654])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
