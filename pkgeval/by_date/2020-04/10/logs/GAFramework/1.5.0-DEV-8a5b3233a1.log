Julia Version 1.5.0-DEV.607
Commit 8a5b3233a1 (2020-04-09 12:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_aIbIZH/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_aIbIZH/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723361451064443
curgen: 20 fitness: 0.21723361451064443
curgen: 30 fitness: 0.21723361451064443
curgen: 40 fitness: 0.21723361451064443
curgen: 50 fitness: 0.21723361451064443
CoordinateCreature{Array{Float64,1}}([0.2225657494971154], -0.21723361451064443) 0.2225657494971154 -0.21723361451064443
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258213333849548
curgen: 100 fitness: 3.2582458173116033
curgen: 150 fitness: 3.2582458173116033
curgen: 200 fitness: 3.2583667058004417
curgen: 250 fitness: 3.2584346736195915
curgen: 300 fitness: 3.2584585572587845
curgen: 350 fitness: 3.2584779776625497
curgen: 400 fitness: 3.2584779776625497
curgen: 450 fitness: 3.2584779776625497
curgen: 500 fitness: 3.2584779776625497
CoordinateCreature{Array{Float64,1}}([-0.22255490819216786, 0.22262541018311008, -0.22228839307442072, 0.2222769784167155, -0.22232927268421088, -0.22259247219243056, -0.22241159296140256, -0.22231606470201237, -0.22239092557268786, 0.22217338331086683, -0.22232762850839619, 0.2225633075563827, -0.22284301719704258, 0.22252002837955429, 0.22238879118708862], -3.2584779776625497) [-0.22255490819216786, 0.22262541018311008, -0.22228839307442072, 0.2222769784167155, -0.22232927268421088, -0.22259247219243056, -0.22241159296140256, -0.22231606470201237, -0.22239092557268786, 0.22217338331086683, -0.22232762850839619, 0.2225633075563827, -0.22284301719704258, 0.22252002837955429, 0.22238879118708862] -3.2584779776625497
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0027715018130152203
curgen: 100 fitness: -0.002711145343454291
curgen: 150 fitness: -0.0020222514004615277
curgen: 200 fitness: -0.0020222514004615277
curgen: 250 fitness: -0.0018174983128460553
curgen: 300 fitness: -0.001801928545063447
curgen: 350 fitness: -0.0016021687289367037
curgen: 400 fitness: -0.0016021687289367037
curgen: 450 fitness: -0.0014629398293664053
curgen: 500 fitness: -0.0010898365125626697
CoordinateCreature{Array{Float64,1}}([-0.00032662817053931653, -7.159839331902533e-5, -0.0010754252113345274, -0.0003653293128119779, 0.0004406968541635012, -0.0010571681699764039, 8.827208111373072e-5, -0.0013723768300030158, -0.0006051298601926607, 0.00011626829805939161, -0.0001120452295730219, 2.6530395933944463e-5, -0.0005161574110574543, -0.0002571216814670394, -0.000403774276589415], 0.0010898365125626697) [-0.00032662817053931653, -7.159839331902533e-5, -0.0010754252113345274, -0.0003653293128119779, 0.0004406968541635012, -0.0010571681699764039, 8.827208111373072e-5, -0.0013723768300030158, -0.0006051298601926607, 0.00011626829805939161, -0.0001120452295730219, 2.6530395933944463e-5, -0.0005161574110574543, -0.0002571216814670394, -0.000403774276589415] 0.0010898365125626697
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
