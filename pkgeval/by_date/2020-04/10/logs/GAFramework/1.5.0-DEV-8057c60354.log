Julia Version 1.5.0-DEV.611
Commit 8057c60354 (2020-04-10 14:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_W5KclR/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_W5KclR/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722992975604596
curgen: 20 fitness: 0.21722992975604596
curgen: 30 fitness: 0.21723317885839524
curgen: 40 fitness: 0.21723317885839524
curgen: 50 fitness: 0.21723317885839524
CoordinateCreature{Array{Float64,1}}([0.22244745084693054], -0.21723317885839524) 0.22244745084693054 -0.21723317885839524
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2581651473188336
curgen: 100 fitness: 3.258230428816012
curgen: 150 fitness: 3.2583359492524258
curgen: 200 fitness: 3.258337108825359
curgen: 250 fitness: 3.2583533501089033
curgen: 300 fitness: 3.2584063169644124
curgen: 350 fitness: 3.2584063169644124
curgen: 400 fitness: 3.2584077969449887
curgen: 450 fitness: 3.2584428395526954
curgen: 500 fitness: 3.2584569677208863
CoordinateCreature{Array{Float64,1}}([-0.22273253208884508, -0.22247630486391987, 0.22261036649111374, -0.2223669506850522, -0.22255141260543498, -0.22225219090127224, -0.22249432712763584, 0.2228544296612099, -0.22191633189566604, -0.22216818364050891, -0.2228465618053716, 0.22247255119929277, 0.2225555466866366, -0.2225140420864528, 0.22296137796680043], -3.2584569677208863) [-0.22273253208884508, -0.22247630486391987, 0.22261036649111374, -0.2223669506850522, -0.22255141260543498, -0.22225219090127224, -0.22249432712763584, 0.2228544296612099, -0.22191633189566604, -0.22216818364050891, -0.2228465618053716, 0.22247255119929277, 0.2225555466866366, -0.2225140420864528, 0.22296137796680043] -3.2584569677208863
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0025884803669384837
curgen: 100 fitness: -0.0013868442116518054
curgen: 150 fitness: -0.0013868442116518054
curgen: 200 fitness: -0.0013003675762774947
curgen: 250 fitness: -0.0011566774137463653
curgen: 300 fitness: -0.0011566774137463653
curgen: 350 fitness: -0.0008362946915099201
curgen: 400 fitness: -0.0006878544543269527
curgen: 450 fitness: -0.000499384755698884
curgen: 500 fitness: -0.000499384755698884
CoordinateCreature{Array{Float64,1}}([-0.0002601981841112772, 0.00018857017273479375, -3.152227249420599e-5, 0.0004661850446213087, -0.00038187279655184115, -0.00019779660113290482, 0.00046880547935589643, -2.686104012720867e-5, -0.0005542321462602591, -1.971215308888552e-5, 0.0008722784468888196, 9.551385318062164e-5, -6.484068883837483e-5, 0.0008220766815338373, -0.00018044823258974406], 0.000499384755698884) [-0.0002601981841112772, 0.00018857017273479375, -3.152227249420599e-5, 0.0004661850446213087, -0.00038187279655184115, -0.00019779660113290482, 0.00046880547935589643, -2.686104012720867e-5, -0.0005542321462602591, -1.971215308888552e-5, 0.0008722784468888196, 9.551385318062164e-5, -6.484068883837483e-5, 0.0008220766815338373, -0.00018044823258974406] 0.000499384755698884
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
