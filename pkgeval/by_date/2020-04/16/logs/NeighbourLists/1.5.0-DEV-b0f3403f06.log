Julia Version 1.5.0-DEV.638
Commit b0f3403f06 (2020-04-16 01:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed NeighbourLists ─ v0.5.0
  Installed StaticArrays ─── v0.12.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [2fcf5ba9] + NeighbourLists v0.5.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [2fcf5ba9] + NeighbourLists v0.5.0
  [90137ffa] + StaticArrays v0.12.1
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
    Testing NeighbourLists
Status `/tmp/jl_llGzUg/Project.toml`
  [b4f34e82] Distances v0.8.2
  [f6369f11] ForwardDiff v0.10.10
  [b8a86587] NearestNeighbors v0.4.4
  [2fcf5ba9] NeighbourLists v0.5.0
  [90137ffa] StaticArrays v0.12.1
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [8dfed614] Test
Status `/tmp/jl_llGzUg/Manifest.toml`
  [bbf7d656] CommonSubexpressions v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [f6369f11] ForwardDiff v0.10.10
  [77ba4419] NaNMath v0.3.3
  [b8a86587] NearestNeighbors v0.4.4
  [2fcf5ba9] NeighbourLists v0.5.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
# threads = 2
Checking that `fnbody` is correct...
[ Info: Testing PairList Correctness: 
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed

Test Summary:  | Pass  Total
NeighbourLists |   23     23
    Testing NeighbourLists tests passed 
