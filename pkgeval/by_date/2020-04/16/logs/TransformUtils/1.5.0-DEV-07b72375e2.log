Julia Version 1.5.0-DEV.633
Commit 07b72375e2 (2020-04-15 15:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_G36mLI/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_G36mLI/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.08380971880465216 0.13331276875159678; -0.08380971880465216 0.0 -0.18762212828299477; -0.13331276875159678 0.18762212828299477 0.0])
dAA = so3([0.0 -0.07811962028101255 -0.12082996639449357; 0.07811962028101255 0.0 0.09792516361580035; 0.12082996639449357 -0.09792516361580035 0.0])
dAA = so3([0.0 0.00709618669080684 -0.07802939809716368; -0.00709618669080684 0.0 0.059528346645730035; 0.07802939809716368 -0.059528346645730035 0.0])
dAA = Quaternion(0.9972767582203075, [-0.024333004143356533, 0.030724350046918772, -0.06247388844268008])
dAA = SO3([0.9990003041858241 -0.0427835882929532 0.01295981517653608; 0.04132737593610859 0.9944148885356255 0.09711373464611027; -0.017042307204907722 -0.09648105529822236 0.9951889095712808])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9363187957364545 -0.15279842817206415 -0.3161641236743697; 0.22559086511474438 0.9517312608217288 0.20812584835013567; 0.2691019775613267 -0.2661958818667731 0.9255937975968476]), [1.8762212828299476, 1.3331276875159677, -0.8380971880465216])
xj = SE3(SO3([0.9399567306876658 0.29992170483127895 0.1628751528197411; -0.31881766593815936 0.9419371883148819 0.1054022255704249; -0.1218057483072908 -0.1510010074156914 0.9810005379400907]), [-0.5952834664573003, -0.7802939809716367, -0.0709618669080684])
Dx = SE3(SO3([0.775398633301168 0.45268008496923645 0.4402700309434263; -0.4146284615872913 0.8908393491086827 -0.18571077761232563; -0.47627743838695197 -0.038548602463167436 0.8784496610117735]), [-2.584447341080428, -1.8379756916083871, 1.0515991507031215])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
