Julia Version 1.5.0-DEV.621
Commit a24f10b384 (2020-04-13 14:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_WX2PXf/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_WX2PXf/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723218423765067
curgen: 20 fitness: 0.2172336106559386
curgen: 30 fitness: 0.2172336106559386
curgen: 40 fitness: 0.2172336106559386
curgen: 50 fitness: 0.2172336106559386
CoordinateCreature{Array{Float64,1}}([-0.2225282481597464], -0.2172336106559386) -0.2225282481597464 -0.2172336106559386
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2577198956609315
curgen: 100 fitness: 3.2581076940822613
curgen: 150 fitness: 3.2582980502454544
curgen: 200 fitness: 3.2583019195466454
curgen: 250 fitness: 3.2583266730100244
curgen: 300 fitness: 3.258382405690114
curgen: 350 fitness: 3.258400531275111
curgen: 400 fitness: 3.2584317083540357
curgen: 450 fitness: 3.2584339031306775
curgen: 500 fitness: 3.2584339031306775
CoordinateCreature{Array{Float64,1}}([-0.22254318192411093, 0.22253787696108707, 0.22254578023747762, 0.22236139641359404, -0.22261430600757307, -0.22265295486234132, 0.2229954309729002, -0.22269582517931272, -0.22180714689915362, 0.2229411488735893, -0.22258924879578135, -0.22219274833035663, -0.2224575184910031, 0.22319855211281497, -0.22278799699579296], -3.2584339031306775) [-0.22254318192411093, 0.22253787696108707, 0.22254578023747762, 0.22236139641359404, -0.22261430600757307, -0.22265295486234132, 0.2229954309729002, -0.22269582517931272, -0.22180714689915362, 0.2229411488735893, -0.22258924879578135, -0.22219274833035663, -0.2224575184910031, 0.22319855211281497, -0.22278799699579296] -3.2584339031306775
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0073745876727855375
curgen: 100 fitness: -0.005060698817288767
curgen: 150 fitness: -0.003096793362715289
curgen: 200 fitness: -0.0029686688265542216
curgen: 250 fitness: -0.0029233111916369126
curgen: 300 fitness: -0.002675704043525684
curgen: 350 fitness: -0.002675704043525684
curgen: 400 fitness: -0.002123259894261764
curgen: 450 fitness: -0.001757138499726807
curgen: 500 fitness: -0.0016732353235227038
CoordinateCreature{Array{Float64,1}}([-5.6421829090250305e-5, 0.0007361173673294504, -0.0006265172079202629, 0.0002476432388069565, 0.001243797569673339, 1.3460177105555234e-5, 0.00047289714998790654, 0.00187746141949315, -0.00018519950118128098, -0.00010850176098681135, 0.0002454504454703389, 0.0009941233019903468, 0.0003218935769076915, -0.0008989313538793626, -0.0003648784110156511], 0.0016732353235227038) [-5.6421829090250305e-5, 0.0007361173673294504, -0.0006265172079202629, 0.0002476432388069565, 0.001243797569673339, 1.3460177105555234e-5, 0.00047289714998790654, 0.00187746141949315, -0.00018519950118128098, -0.00010850176098681135, 0.0002454504454703389, 0.0009941233019903468, 0.0003218935769076915, -0.0008989313538793626, -0.0003648784110156511] 0.0016732353235227038
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
