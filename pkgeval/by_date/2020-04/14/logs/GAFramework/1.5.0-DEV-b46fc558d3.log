Julia Version 1.5.0-DEV.627
Commit b46fc558d3 (2020-04-14 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_CbWS8P/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_CbWS8P/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722934469893806
curgen: 20 fitness: 0.2172302441103541
curgen: 30 fitness: 0.21723181641710856
curgen: 40 fitness: 0.21723181641710856
curgen: 50 fitness: 0.21723347503216356
CoordinateCreature{Array{Float64,1}}([-0.22248935230404138], -0.21723347503216356) -0.22248935230404138 -0.21723347503216356
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580862729126054
curgen: 100 fitness: 3.2581290373430547
curgen: 150 fitness: 3.258187972044958
curgen: 200 fitness: 3.258318964061676
curgen: 250 fitness: 3.2583825276152463
curgen: 300 fitness: 3.2584223846833527
curgen: 350 fitness: 3.258427562350234
curgen: 400 fitness: 3.258432351386617
curgen: 450 fitness: 3.258438761843712
curgen: 500 fitness: 3.258439637234999
CoordinateCreature{Array{Float64,1}}([0.22243885550730755, -0.22254254943066443, 0.22240833566235488, 0.22220881202536966, 0.22251272651239828, 0.22160256204338127, -0.2223789252569339, 0.2225578880336043, 0.22233381885016884, -0.2227145902638619, -0.22226434247519575, -0.22250816439568155, -0.22258446566564632, 0.222850321232915, 0.22217638534354273], -3.258439637234999) [0.22243885550730755, -0.22254254943066443, 0.22240833566235488, 0.22220881202536966, 0.22251272651239828, 0.22160256204338127, -0.2223789252569339, 0.2225578880336043, 0.22233381885016884, -0.2227145902638619, -0.22226434247519575, -0.22250816439568155, -0.22258446566564632, 0.222850321232915, 0.22217638534354273] -3.258439637234999
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0012516890151061943
curgen: 100 fitness: -0.00124917401149105
curgen: 150 fitness: -0.00124917401149105
curgen: 200 fitness: -0.0012359019495988832
curgen: 250 fitness: -0.0011883577473668083
curgen: 300 fitness: -0.0011883577473668083
curgen: 350 fitness: -0.0005295980373034581
curgen: 400 fitness: -0.0005295980373034581
curgen: 450 fitness: -0.0003255502998058546
curgen: 500 fitness: -0.0002807028676556911
CoordinateCreature{Array{Float64,1}}([-0.00045864957569250776, -9.942749241362196e-5, 0.00039113630154121457, 0.00030421961139334914, 5.582070481625597e-5, 0.00011208216633046115, -0.0003582080269441453, -0.00012064413569129343, 0.000425022328659675, 0.00017997413721735153, -5.320555869876495e-5, -0.000750341434188367, -1.0789858722588569e-5, 0.00010737551438967679, -6.1959217041990386e-6], 0.0002807028676556911) [-0.00045864957569250776, -9.942749241362196e-5, 0.00039113630154121457, 0.00030421961139334914, 5.582070481625597e-5, 0.00011208216633046115, -0.0003582080269441453, -0.00012064413569129343, 0.000425022328659675, 0.00017997413721735153, -5.320555869876495e-5, -0.000750341434188367, -1.0789858722588569e-5, 0.00010737551438967679, -6.1959217041990386e-6] 0.0002807028676556911
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
