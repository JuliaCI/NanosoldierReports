Julia Version 1.5.0-DEV.627
Commit b46fc558d3 (2020-04-14 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed InvertedIndices ───────────── v1.0.0
  Installed DataAPI ───────────────────── v1.1.0
  Installed Missings ──────────────────── v0.4.3
  Installed KCenters ──────────────────── v0.2.2
  Installed Tables ────────────────────── v1.0.4
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed StatsBase ─────────────────── v0.32.2
  Installed SimilaritySearch ──────────── v0.3.19
  Installed TableTraits ───────────────── v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed MLDataPattern ─────────────── v0.5.1
  Installed Compat ────────────────────── v3.8.0
  Installed OrderedCollections ────────── v1.1.0
  Installed Parsers ───────────────────── v1.0.1
  Installed MLDataUtils ───────────────── v0.5.1
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DataStructures ────────────── v0.17.12
  Installed LearnBase ─────────────────── v0.2.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed JSON ──────────────────────── v0.21.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed DataFrames ────────────────── v0.20.2
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.8.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.12
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.1
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.1
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_kt7kUY/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_kt7kUY/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.8.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.12
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.1
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.1
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9326678744951884
[ Info: 0.8302954188982645
[ Info: 0.553681271125873
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32713686463733516
mean(cdnet.distances) = 0.33870581922431786
mean(crand.distances) = 0.35813258950908977
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.8354551698301708,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.8828125,"distances_sum":2298.1644400809337}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.306640625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.306640625,"f1":null,"seconds":3.773719072341919e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":5.125,"distances_sum":983.9983279424471}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.328125,"f1":null,"seconds":3.7048012018203735e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":5.2734375,"distances_sum":1017.6939163336514}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.734375,"f1":0.8354551698301708,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.8828125,"distances_sum":2298.1644400809337}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9400927197802202,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.6640625,"distances_sum":2872.3042973325682}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9400927197802202,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.6640625,"distances_sum":2872.3042973325682}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9600331959706965,"seconds":6.198883056640625e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8125,"distances_sum":3021.3241791061423}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9688472985347988,"seconds":6.22868537902832e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.84375,"distances_sum":3074.3220480007035}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9624828296703302,"seconds":6.299465894699097e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.859375,"distances_sum":2999.7957463434504}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9688472985347988,"seconds":6.22868537902832e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.84375,"distances_sum":3074.3220480007035}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9688472985347988,"seconds":6.22868537902832e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.84375,"distances_sum":3074.3220480007035}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8632128288378298,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.3046875,"distances_sum":2191.3960663884527}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.169921875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.169921875,"f1":null,"seconds":3.2261013984680176e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":4.8359375,"distances_sum":485.5505689707085}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8632128288378298,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.3046875,"distances_sum":2191.3960663884527}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9032977439227445,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.53125,"distances_sum":2415.431350022975}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.83984375,"f1":0.9032977439227445,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.53125,"distances_sum":2415.431350022975}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9562156593406598,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.8359375,"distances_sum":2801.027102674976}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9545100732600735,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.8203125,"distances_sum":2811.7344746395784}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9553800366300371,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.796875,"distances_sum":2812.069516203876}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9392799908424914,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.78125,"distances_sum":2657.6905302531814}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.906957105394606,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.625,"distances_sum":2430.7225882384614}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9562156593406598,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.8359375,"distances_sum":2801.027102674976}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9562156593406598,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.8359375,"distances_sum":2801.027102674976}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7942592130092139,"seconds":4.492700099945068e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.703125,"distances_sum":1733.641852542773}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.40625,"f1":null,"seconds":3.155320882797241e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.6015625,"distances_sum":955.3927273818227}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.673828125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.673828125,"f1":0.7942592130092139,"seconds":4.492700099945068e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.703125,"distances_sum":1733.641852542773}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8338654401154411,"seconds":4.69014048576355e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.90625,"distances_sum":1964.6185076003053}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7999750249750259,"seconds":4.323199391365051e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.671875,"distances_sum":1765.4433115488823}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8734525890775899,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.0625,"distances_sum":2140.0535329877803}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8734525890775899,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.0625,"distances_sum":2140.0535329877803}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8997773060273069,"seconds":5.159527063369751e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.3359375,"distances_sum":2284.289794930965}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9452323717948723,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6171875,"distances_sum":2630.9890446831296}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.919591346153847,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4921875,"distances_sum":2408.3445619068957}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9121685606060614,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.484375,"distances_sum":2362.8197139182967}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9452323717948723,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6171875,"distances_sum":2630.9890446831296}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9052734375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9452323717948723,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6171875,"distances_sum":2630.9890446831296}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2236328125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2236328125,"f1":null,"seconds":2.93925404548645e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.0234375,"distances_sum":576.3681563245972}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":3.5259872674942017e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.375,"distances_sum":1070.9791766065102}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.416015625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.416015625,"f1":null,"seconds":3.5259872674942017e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.375,"distances_sum":1070.9791766065102}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9079014735264742,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4140625,"distances_sum":2434.887738356011}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9099848068598074,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4296875,"distances_sum":2486.410700850703}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5478515625,"f1":null,"seconds":3.935769200325012e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.2890625,"distances_sum":1408.8846881290438}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5244140625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5244140625,"f1":0.6714639527139531,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.3125,"distances_sum":1315.8015283656287}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7985967157842166,"seconds":4.449859261512756e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8828125,"distances_sum":1856.7641198959845}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8679168054168062,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.28125,"distances_sum":2215.251130054973}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8618506493506504,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.265625,"distances_sum":2144.248320484615}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84765625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.84765625,"f1":0.9099848068598074,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4296875,"distances_sum":2486.410700850703}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9577266483516491,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2815.8339625654044}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9495421245421249,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7421875,"distances_sum":2795.6383891031164}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9625057234432239,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8515625,"distances_sum":2883.627530626658}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9255525724275732,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.671875,"distances_sum":2547.323193440424}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9615384615384621,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2839.3550859320735}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9625057234432239,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8515625,"distances_sum":2883.627530626658}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9625057234432239,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8515625,"distances_sum":2883.627530626658}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8574701340326347,"seconds":5.161389708518982e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.59375,"distances_sum":2063.0587778574327}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4443359375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4443359375,"f1":null,"seconds":3.6209821701049805e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.6875,"distances_sum":1079.707692922198}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8574701340326347,"seconds":5.161389708518982e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.59375,"distances_sum":2063.0587778574327}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9233578921078928,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7109375,"distances_sum":2514.165277661721}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9610748626373632,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9140625,"distances_sum":2812.241056116208}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8944768772893781,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.609375,"distances_sum":2316.556705727052}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8673337079587088,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.65625,"distances_sum":2140.093627462006}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8752861721611731,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.59375,"distances_sum":2194.320842015481}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9610748626373632,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9140625,"distances_sum":2812.241056116208}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9703869047619051,"seconds":6.798654794692993e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.96875,"distances_sum":2881.790660740669}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9729567307692311,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.953125,"distances_sum":2883.4444249775443}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9641941391941395,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.984375,"distances_sum":2794.043641111228}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9654819139194142,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9296875,"distances_sum":2834.1028241214653}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9729567307692311,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.953125,"distances_sum":2883.4444249775443}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9729567307692311,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.953125,"distances_sum":2883.4444249775443}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5126953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5126953125,"f1":null,"seconds":4.04752790927887e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.8515625,"distances_sum":1387.2306026594413}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1826171875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1826171875,"f1":null,"seconds":3.0510127544403076e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":5.171875,"distances_sum":500.4483139834577}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8587801087801095,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.9453125,"distances_sum":2193.2107570443554}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8587801087801095,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.9453125,"distances_sum":2193.2107570443554}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9274928196803203,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.6484375,"distances_sum":2624.6766783726443}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9274928196803203,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.6484375,"distances_sum":2624.6766783726443}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591575091575094,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.859375,"distances_sum":2863.5751944604435}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9492673992673996,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.734375,"distances_sum":2812.3042040389273}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9591575091575094,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.859375,"distances_sum":2863.5751944604435}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9591575091575094,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.859375,"distances_sum":2863.5751944604435}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8660313644688653,"seconds":5.1800161600112915e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.25,"distances_sum":1313.9579847252787}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2138671875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2138671875,"f1":null,"seconds":3.0137598514556885e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.625,"distances_sum":330.08286469272963}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8660313644688653,"seconds":5.1800161600112915e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.25,"distances_sum":1313.9579847252787}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9434981684981691,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.6953125,"distances_sum":1668.6210470604415}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9434981684981691,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.6953125,"distances_sum":1668.6210470604415}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9626144688644698,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8359375,"distances_sum":1734.0229341427303}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9464171245421252,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7890625,"distances_sum":1665.0257826024338}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9746852106227111,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.890625,"distances_sum":1804.8045370149564}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9689217032967035,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.921875,"distances_sum":1761.4498518111327}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9548992673992679,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7890625,"distances_sum":1714.443038004069}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9746852106227111,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.890625,"distances_sum":1804.8045370149564}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9746852106227111,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.890625,"distances_sum":1804.8045370149564}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8466096403596413,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.296875,"distances_sum":1302.5753193684552}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2314453125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2314453125,"f1":null,"seconds":2.8833746910095215e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.1328125,"distances_sum":350.12815993753617}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3427734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3427734375,"f1":null,"seconds":3.1851232051849365e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.4765625,"distances_sum":580.779104066588}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8466096403596413,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.296875,"distances_sum":1302.5753193684552}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8963859057609066,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6640625,"distances_sum":1527.7456661810454}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564217032967038,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.796875,"distances_sum":1828.043770293681}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9006238553113561,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6171875,"distances_sum":1569.6887721838787}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8757617382617391,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":1428.4114221225173}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9564217032967038,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.796875,"distances_sum":1828.043770293681}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670787545787547,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.859375,"distances_sum":1853.4707969101355}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9707989926739929,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":1879.150852628543}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9707989926739929,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":1879.150852628543}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9707989926739929,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":1879.150852628543}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1865234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1865234375,"f1":null,"seconds":2.4903565645217896e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":4.4921875,"distances_sum":328.12846803622426}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3671875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3671875,"f1":null,"seconds":3.0938535928726196e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.5859375,"distances_sum":662.2411250100636}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8390385656010665,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.78125,"distances_sum":1352.1349292526036}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8390385656010665,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.78125,"distances_sum":1352.1349292526036}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9319310897435903,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.734375,"distances_sum":1706.0987771191824}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8855769230769238,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.3828125,"distances_sum":1519.3139053777509}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.882415501165502,"seconds":5.014240741729736e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.3828125,"distances_sum":1492.4977479273816}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9319310897435903,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.734375,"distances_sum":1706.0987771191824}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9612923534798539,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":1831.9955773604245}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9351877289377298,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6328125,"distances_sum":1765.4614476657239}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9367673992673997,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.75,"distances_sum":1762.089379281399}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9612923534798539,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":1831.9955773604245}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9612923534798539,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":1831.9955773604245}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8471731393606401,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.7421875,"distances_sum":1389.314525453529}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8482860889110897,"seconds":5.044043064117432e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.8828125,"distances_sum":1374.2476643829052}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.74609375,"f1":0.8471731393606401,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.7421875,"distances_sum":1389.314525453529}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8901993839493848,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.0703125,"distances_sum":1576.5945675467979}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9253808691308696,"seconds":6.077811121940613e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6171875,"distances_sum":1765.9445255394778}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9266254578754585,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.71875,"distances_sum":1738.9053214492064}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9535943223443228,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8359375,"distances_sum":1906.3738237831024}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9535943223443228,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8359375,"distances_sum":1906.3738237831024}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9772321428571433,"seconds":6.206333637237549e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9375,"distances_sum":2010.711049061353}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9641025641025645,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8828125,"distances_sum":1943.302550264737}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9554601648351655,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8125,"distances_sum":1920.8488849236232}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9679716117216122,"seconds":6.206333637237549e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.828125,"distances_sum":1982.1300625666634}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654075091575095,"seconds":1.1879950761795044e-5,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":1952.5244968126474}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9772321428571433,"seconds":6.206333637237549e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9375,"distances_sum":2010.711049061353}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9772321428571433,"seconds":6.206333637237549e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9375,"distances_sum":2010.711049061353}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8376727439227447,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.953125,"distances_sum":1370.5787664598251}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.634765625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.634765625,"f1":0.7623666264291272,"seconds":4.466623067855835e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.3671875,"distances_sum":1156.1849948510594}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8355181277056287,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.9921875,"distances_sum":1375.1881656434184}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7373046875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7373046875,"f1":0.8376727439227447,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.953125,"distances_sum":1370.5787664598251}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9543612637362642,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7421875,"distances_sum":1930.6875824630665}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9294216200466205,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.640625,"distances_sum":1797.636482125132}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9521462912087918,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.765625,"distances_sum":1891.97987146293}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9228740009990019,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6640625,"distances_sum":1755.4768357869268}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9427483974358979,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.71875,"distances_sum":1853.7009562315527}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8535121128871137,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.953125,"distances_sum":1452.9566840427979}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9543612637362642,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7421875,"distances_sum":1930.6875824630665}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9652358058608063,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.828125,"distances_sum":1969.7826029077225}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684752747252752,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":1979.2020611440812}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9796875000000003,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.953125,"distances_sum":2038.609331408805}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708733974358978,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.875,"distances_sum":1997.895974142554}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9682692307692309,"seconds":6.0014426708221436e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.890625,"distances_sum":1960.0993017241292}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9796875000000003,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.953125,"distances_sum":2038.609331408805}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9796875000000003,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.953125,"distances_sum":2038.609331408805}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3271484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3271484375,"f1":null,"seconds":3.071501851081848e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.453125,"distances_sum":647.9695799774141}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3271484375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3271484375,"f1":null,"seconds":3.071501851081848e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.453125,"distances_sum":647.9695799774141}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8668777403152412,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.421875,"distances_sum":1561.6090266497702}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7738426504051512,"seconds":4.453584551811218e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.90625,"distances_sum":1277.285300921531}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8668777403152412,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.421875,"distances_sum":1561.6090266497702}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9339972527472534,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7890625,"distances_sum":1875.7405108800338}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9220498251748259,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.75,"distances_sum":1842.5483371722669}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9339972527472534,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7890625,"distances_sum":1875.7405108800338}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.884765625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9339972527472534,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7890625,"distances_sum":1875.7405108800338}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.326171875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.326171875,"f1":null,"seconds":2.985820174217224e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.453125,"distances_sum":648.1838761568816}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8412904803529813,"seconds":4.757195711135864e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.2265625,"distances_sum":1516.673764647589}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.8412904803529813,"seconds":4.757195711135864e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.2265625,"distances_sum":1516.673764647589}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9412889194139199,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8125,"distances_sum":1906.784200132844}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8545447607947616,"seconds":8.072704076766968e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.359375,"distances_sum":1556.3641799756845}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564560439560443,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.828125,"distances_sum":2008.4562351718566}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.955637591575092,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.78125,"distances_sum":2006.9918998924306}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9189877830502836,"seconds":5.114823579788208e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.578125,"distances_sum":1823.0242638439595}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9564560439560443,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.828125,"distances_sum":2008.4562351718566}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.960828754578755,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8828125,"distances_sum":2027.871317634151}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":12,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9767113095238097,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.921875,"distances_sum":2126.051269624274}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9792239010989013,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9296875,"distances_sum":2127.8017006188024}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9792239010989013,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9296875,"distances_sum":2127.8017006188024}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9792239010989013,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9296875,"distances_sum":2127.8017006188024}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8417946636696647,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.96875,"distances_sum":1378.2370287259484}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8417946636696647,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.96875,"distances_sum":1378.2370287259484}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8417946636696647,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.96875,"distances_sum":1378.2370287259484}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7431640625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8417946636696647,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.96875,"distances_sum":1378.2370287259484}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8066215034965041,"seconds":4.557892680168152e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.7265625,"distances_sum":1249.6346178228068}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6923828125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6923828125,"f1":0.8066215034965041,"seconds":4.557892680168152e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.7265625,"distances_sum":1249.6346178228068}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9466804029304035,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.84375,"distances_sum":1874.1145467437073}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9466804029304035,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.84375,"distances_sum":1874.1145467437073}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9770489926739929,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9609375,"distances_sum":2058.8263989994243}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9770489926739929,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9609375,"distances_sum":2058.8263989994243}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9770489926739929,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9609375,"distances_sum":2058.8263989994243}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.205078125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.205078125,"f1":null,"seconds":3.244727849960327e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.4140625,"distances_sum":396.1827313241261}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.208984375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.208984375,"f1":null,"seconds":3.207474946975708e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.4140625,"distances_sum":402.30344992879026}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8102923118548127,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.5234375,"distances_sum":1305.0651867765123}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6962890625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6962890625,"f1":0.8102923118548127,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.5234375,"distances_sum":1305.0651867765123}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8093224483849492,"seconds":4.569068551063538e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.4921875,"distances_sum":1348.2847553165377}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.929965347152848,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.75,"distances_sum":1880.170643377514}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8681615259740268,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.9375,"distances_sum":1560.4860524514495}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8750005203130211,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.078125,"distances_sum":1586.8761883406612}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.929965347152848,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.75,"distances_sum":1880.170643377514}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9771577380952383,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9765625,"distances_sum":2104.7405952363256}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9588770604395608,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.859375,"distances_sum":2039.2628404616678}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9393315018315025,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.734375,"distances_sum":1942.5499726367796}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9771577380952383,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9765625,"distances_sum":2104.7405952363256}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9771577380952383,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9765625,"distances_sum":2104.7405952363256}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1982421875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1982421875,"f1":null,"seconds":3.2372772693634033e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.1953125,"distances_sum":394.0096512415447}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.203125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.203125,"f1":null,"seconds":3.1013041734695435e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.078125,"distances_sum":387.44321417598417}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.203125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.203125,"f1":null,"seconds":3.1013041734695435e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.078125,"distances_sum":387.44321417598417}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":3.637745976448059e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.4765625,"distances_sum":736.0596860501771}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7888215950715959,"seconds":4.434958100318909e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.1328125,"distances_sum":1280.8759009361424}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8730347777222786,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.1796875,"distances_sum":1539.463660143387}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":9,"bsize":3}, perf: {"precision":1.0,"recall":0.525390625,"f1":0.6705780330780335,"seconds":3.8389116525650024e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.640625,"distances_sum":1005.1085797367872}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8730347777222786,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.1796875,"distances_sum":1539.463660143387}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9366529304029311,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7578125,"distances_sum":1907.2026373654658}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8944539835164843,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.4765625,"distances_sum":1720.6464774415888}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8973333957708964,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.4921875,"distances_sum":1693.7236992446956}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8777611277611286,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.28125,"distances_sum":1618.6834999999282}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9366529304029311,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7578125,"distances_sum":1907.2026373654658}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8896484375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9366529304029311,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7578125,"distances_sum":1907.2026373654658}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.7994111790986796,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.5078125,"distances_sum":1344.9592589131457}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.181640625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.181640625,"f1":null,"seconds":2.941116690635681e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.59375,"distances_sum":386.1172627088804}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6865234375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6865234375,"f1":0.7994111790986796,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.5078125,"distances_sum":1344.9592589131457}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9394631410256414,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7890625,"distances_sum":1944.3833629741514}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9488724816849822,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7578125,"distances_sum":2022.3953923900174}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8941964285714292,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.625,"distances_sum":1703.995220776503}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8640141108891118,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.1484375,"distances_sum":1595.9227175272113}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8571693931068939,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.0859375,"distances_sum":1568.9083678528623}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9488724816849822,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7578125,"distances_sum":2022.3953923900174}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9732142857142861,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8984375,"distances_sum":2136.954936747134}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9631753663003667,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.84375,"distances_sum":2101.3159180969874}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9498225732600738,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.75,"distances_sum":2016.632741553342}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9588229478854482,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.875,"distances_sum":2090.2867234665246}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9732142857142861,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8984375,"distances_sum":2136.954936747134}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9732142857142861,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8984375,"distances_sum":2136.954936747134}}, n: 9
mean(cfft.distances) = 0.32884378498875544
mean(cdnet.distances) = 0.4394826955388245
mean(crand.distances) = 0.33391374254288575
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9444444444444445
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8666666666666666
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8755555555555556
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.88
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8355555555555556
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9266666666666666
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9155555555555556
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9466666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9066666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.88
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8955555555555555
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.92
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9155555555555556
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.88
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8844444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8688888888888888
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9199999999999999
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8644444444444445
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9133333333333334
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 3, 2, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 3, 2, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 3, 2, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 3, 2, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 3, 2, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 3, 2, 3, 1, 3]
acc = 0.94
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 3, 2, 3, 1, 3]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.5147623486320178] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 24, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 8, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 9: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 6]]
** centroid: 10, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 12, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
finished with 15 centroids; started with 12
acc = 0.98
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.20870776140821856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20870776140821856, 0.15836676744347042] ***
*** starting iteration: 2; err: [Inf, 0.20870776140821856, 0.15836676744347042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20870776140821856, 0.15836676744347042, 0.15091752609749837] ***
*** starting iteration: 3; err: [Inf, 0.20870776140821856, 0.15836676744347042, 0.15091752609749837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20870776140821856, 0.15836676744347042, 0.15091752609749837, 0.14958561146869562] ***
*** finished computation of 7 references, err: [Inf, 0.20870776140821856, 0.15836676744347042, 0.15091752609749837, 0.14958561146869562] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 99, 10]]
** centroid: 1, normalized-entropy: 0.4422615143479816, [(2, 99), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [81, 15, 0]]
** centroid: 3, normalized-entropy: 0.625262405223423, [(1, 81), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [97, 5, 0]]
** centroid: 4, normalized-entropy: 0.28221763445592507, [(1, 97), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [93, 8, 0]]
** centroid: 5, normalized-entropy: 0.39938208242459744, [(1, 93), (2, 8)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [67, 27, 0]]
** centroid: 6, normalized-entropy: 0.8651214227512075, [(1, 67), (2, 27)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 75, 13]]
** centroid: 7, normalized-entropy: 0.6041234581483739, [(2, 75), (3, 13)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2332145344662149] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2332145344662149, 0.17127766291124988] ***
*** starting iteration: 2; err: [Inf, 0.2332145344662149, 0.17127766291124988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2332145344662149, 0.17127766291124988, 0.1559732693032469] ***
*** starting iteration: 3; err: [Inf, 0.2332145344662149, 0.17127766291124988, 0.1559732693032469] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2332145344662149, 0.17127766291124988, 0.1559732693032469, 0.1520520004016561] ***
*** finished computation of 7 references, err: [Inf, 0.2332145344662149, 0.17127766291124988, 0.1559732693032469, 0.1520520004016561] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [97, 34, 0]]
** centroid: 1, normalized-entropy: 0.826054434402619, [(1, 97), (2, 34)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 116, 25]]
** centroid: 2, normalized-entropy: 0.674145677369244, [(2, 116), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [65, 14, 0]]
** centroid: 3, normalized-entropy: 0.6739468651941155, [(1, 65), (2, 14)]
*** center 4: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [50, 54, 0]]
** centroid: 5, normalized-entropy: 0.9989326546260583, [(1, 50), (2, 54)]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1824610143818933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1824610143818933, 0.14960580709497856] ***
*** starting iteration: 2; err: [Inf, 0.1824610143818933, 0.14960580709497856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1824610143818933, 0.14960580709497856, 0.14656352592042943] ***
*** starting iteration: 3; err: [Inf, 0.1824610143818933, 0.14960580709497856, 0.14656352592042943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1824610143818933, 0.14960580709497856, 0.14656352592042943, 0.1458983219698535] ***
*** finished computation of 7 references, err: [Inf, 0.1824610143818933, 0.14960580709497856, 0.14656352592042943, 0.1458983219698535] ***
*** center 1: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [127, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 70, 16]]
** centroid: 3, normalized-entropy: 0.6931274153282881, [(2, 70), (3, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [1, 81, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [81, 21, 0]]
** centroid: 6, normalized-entropy: 0.7335379291086666, [(1, 81), (2, 21)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [22, 66, 0]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(1, 22), (2, 66)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28097631237763276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28097631237763276, 0.17810858074609223] ***
*** starting iteration: 2; err: [Inf, 0.28097631237763276, 0.17810858074609223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28097631237763276, 0.17810858074609223, 0.16630049779669973] ***
*** starting iteration: 3; err: [Inf, 0.28097631237763276, 0.17810858074609223, 0.16630049779669973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28097631237763276, 0.17810858074609223, 0.16630049779669973, 0.1614641224847989] ***
*** starting iteration: 4; err: [Inf, 0.28097631237763276, 0.17810858074609223, 0.16630049779669973, 0.1614641224847989] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28097631237763276, 0.17810858074609223, 0.16630049779669973, 0.1614641224847989, 0.15681247075169427] ***
*** starting iteration: 5; err: [Inf, 0.28097631237763276, 0.17810858074609223, 0.16630049779669973, 0.1614641224847989, 0.15681247075169427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28097631237763276, 0.17810858074609223, 0.16630049779669973, 0.1614641224847989, 0.15681247075169427, 0.15321820455410326] ***
*** starting iteration: 6; err: [Inf, 0.28097631237763276, 0.17810858074609223, 0.16630049779669973, 0.1614641224847989, 0.15681247075169427, 0.15321820455410326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28097631237763276, 0.17810858074609223, 0.16630049779669973, 0.1614641224847989, 0.15681247075169427, 0.15321820455410326, 0.15036600437742453] ***
*** starting iteration: 7; err: [Inf, 0.28097631237763276, 0.17810858074609223, 0.16630049779669973, 0.1614641224847989, 0.15681247075169427, 0.15321820455410326, 0.15036600437742453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28097631237763276, 0.17810858074609223, 0.16630049779669973, 0.1614641224847989, 0.15681247075169427, 0.15321820455410326, 0.15036600437742453, 0.14910043426859262] ***
*** starting iteration: 8; err: [Inf, 0.28097631237763276, 0.17810858074609223, 0.16630049779669973, 0.1614641224847989, 0.15681247075169427, 0.15321820455410326, 0.15036600437742453, 0.14910043426859262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28097631237763276, 0.17810858074609223, 0.16630049779669973, 0.1614641224847989, 0.15681247075169427, 0.15321820455410326, 0.15036600437742453, 0.14910043426859262, 0.14871117423530444] ***
*** finished computation of 7 references, err: [Inf, 0.28097631237763276, 0.17810858074609223, 0.16630049779669973, 0.1614641224847989, 0.15681247075169427, 0.15321820455410326, 0.15036600437742453, 0.14910043426859262, 0.14871117423530444] ***
*** center 1: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [113, 21, 0]]
** centroid: 2, normalized-entropy: 0.6263959917169504, [(1, 113), (2, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [19, 53, 0]]
** centroid: 3, normalized-entropy: 0.8325582396745668, [(1, 19), (2, 53)]
*** center 4: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [45, 50, 0]]
** centroid: 5, normalized-entropy: 0.9980008838722993, [(1, 45), (2, 50)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 105, 23]]
** centroid: 6, normalized-entropy: 0.6793929348105144, [(2, 105), (3, 23)]
*** center 7: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18376103577495873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18376103577495873, 0.14785048254029728] ***
*** starting iteration: 2; err: [Inf, 0.18376103577495873, 0.14785048254029728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18376103577495873, 0.14785048254029728, 0.14758027766480752] ***
*** finished computation of 7 references, err: [Inf, 0.18376103577495873, 0.14785048254029728, 0.14758027766480752] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [120, 10, 0]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(1, 120), (2, 10)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [76, 3, 0]]
** centroid: 2, normalized-entropy: 0.23292785546981223, [(1, 76), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [7, 87, 0]]
** centroid: 3, normalized-entropy: 0.3823806751537801, [(1, 7), (2, 87)]
*** center 4: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [108, 2, 0]]
** centroid: 5, normalized-entropy: 0.13110652958234514, [(1, 108), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 70, 0]]
** centroid: 6, normalized-entropy: 0.18312206830137262, [(1, 2), (2, 70)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 46, 25]]
** centroid: 7, normalized-entropy: 0.935940714955517, [(2, 46), (3, 25)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1845872411895348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1845872411895348, 0.16383635022676085] ***
*** starting iteration: 2; err: [Inf, 0.1845872411895348, 0.16383635022676085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616] ***
*** starting iteration: 3; err: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616, 0.15281227193884495] ***
*** starting iteration: 4; err: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616, 0.15281227193884495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616, 0.15281227193884495, 0.15108116560041726] ***
*** starting iteration: 5; err: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616, 0.15281227193884495, 0.15108116560041726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616, 0.15281227193884495, 0.15108116560041726, 0.15006718759996066] ***
*** starting iteration: 6; err: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616, 0.15281227193884495, 0.15108116560041726, 0.15006718759996066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616, 0.15281227193884495, 0.15108116560041726, 0.15006718759996066, 0.1479031560548778] ***
*** starting iteration: 7; err: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616, 0.15281227193884495, 0.15108116560041726, 0.15006718759996066, 0.1479031560548778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616, 0.15281227193884495, 0.15108116560041726, 0.15006718759996066, 0.1479031560548778, 0.14625065834882825] ***
*** starting iteration: 8; err: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616, 0.15281227193884495, 0.15108116560041726, 0.15006718759996066, 0.1479031560548778, 0.14625065834882825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616, 0.15281227193884495, 0.15108116560041726, 0.15006718759996066, 0.1479031560548778, 0.14625065834882825, 0.14518892888930615] ***
*** starting iteration: 9; err: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616, 0.15281227193884495, 0.15108116560041726, 0.15006718759996066, 0.1479031560548778, 0.14625065834882825, 0.14518892888930615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616, 0.15281227193884495, 0.15108116560041726, 0.15006718759996066, 0.1479031560548778, 0.14625065834882825, 0.14518892888930615, 0.14453759717697773] ***
*** finished computation of 7 references, err: [Inf, 0.1845872411895348, 0.16383635022676085, 0.15679001431448616, 0.15281227193884495, 0.15108116560041726, 0.15006718759996066, 0.1479031560548778, 0.14625065834882825, 0.14518892888930615, 0.14453759717697773] ***
*** center 1: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 90, 0]]
** centroid: 2, normalized-entropy: 0.08728058888363333, [(1, 1), (2, 90)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [74, 28, 0]]
** centroid: 3, normalized-entropy: 0.8478617451660525, [(1, 74), (2, 28)]
*** center 4: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [42, 40, 0]]
** centroid: 5, normalized-entropy: 0.9995708393473225, [(1, 42), (2, 40)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [116, 1, 0]]
** centroid: 6, normalized-entropy: 0.07099894663640989, [(1, 116), (2, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 80, 16]]
** centroid: 7, normalized-entropy: 0.6500224216483541, [(2, 80), (3, 16)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23315977869700785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23315977869700785, 0.18142390887913024] ***
*** finished computation of 7 references, err: [Inf, 0.23315977869700785, 0.18142390887913024] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [59, 58, 0]]
** centroid: 1, normalized-entropy: 0.9999473039445343, [(1, 59), (2, 58)]
*** center 2: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [82, 22, 0]]
** centroid: 5, normalized-entropy: 0.7444131797881749, [(1, 82), (2, 22)]
*** center 6: selecting labels [1, 2, 3] (freq >= 1) [from [26, 149, 23]]
** centroid: 6, normalized-entropy: 0.6650354693920959, [(1, 26), (2, 149), (3, 23)]
*** center 7: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1831036471151586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1831036471151586, 0.15064165866242601] ***
*** finished computation of 7 references, err: [Inf, 0.1831036471151586, 0.15064165866242601] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [2, 61, 0]]
** centroid: 1, normalized-entropy: 0.20307392998664567, [(1, 2), (2, 61)]
*** center 2: selecting labels [1] (freq >= 1) [from [115, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [120, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [105, 18, 0]]
** centroid: 4, normalized-entropy: 0.6006085754131871, [(1, 105), (2, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [69, 6, 0]]
** centroid: 5, normalized-entropy: 0.4021791902022729, [(1, 69), (2, 6)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 47, 25]]
** centroid: 6, normalized-entropy: 0.9315627684809641, [(2, 47), (3, 25)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [13, 86, 0]]
** centroid: 7, normalized-entropy: 0.5610284863400681, [(1, 13), (2, 86)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25577599700886583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25577599700886583, 0.18052135752946855] ***
*** finished computation of 7 references, err: [Inf, 0.25577599700886583, 0.18052135752946855] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [4, 83, 0]]
** centroid: 1, normalized-entropy: 0.2690553027246505, [(1, 4), (2, 83)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [7, 86, 16]]
** centroid: 2, normalized-entropy: 0.5870647273627622, [(1, 7), (2, 86), (3, 16)]
*** center 3: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [27, 5, 0]]
** centroid: 5, normalized-entropy: 0.625262405223423, [(1, 27), (2, 5)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [14, 63, 0]]
** centroid: 6, normalized-entropy: 0.6840384356390419, [(1, 14), (2, 63)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [193, 2, 0]]
** centroid: 7, normalized-entropy: 0.08248822045351063, [(1, 193), (2, 2)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35461665042214563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35461665042214563, 0.24595387058763263] ***
*** starting iteration: 2; err: [Inf, 0.35461665042214563, 0.24595387058763263] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35461665042214563, 0.24595387058763263, 0.23430607482363042] ***
*** starting iteration: 3; err: [Inf, 0.35461665042214563, 0.24595387058763263, 0.23430607482363042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35461665042214563, 0.24595387058763263, 0.23430607482363042, 0.2303368822320479] ***
*** finished computation of 3 references, err: [Inf, 0.35461665042214563, 0.24595387058763263, 0.23430607482363042, 0.2303368822320479] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [45, 161, 23]]
** centroid: 1, normalized-entropy: 0.7266016705342151, [(1, 45), (2, 161), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [139, 68, 0]]
** centroid: 2, normalized-entropy: 0.9133889753080662, [(1, 139), (2, 68)]
*** center 3: selecting labels [1] (freq >= 1) [from [230, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31785733934570065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31785733934570065, 0.27232762394581866] ***
*** starting iteration: 2; err: [Inf, 0.31785733934570065, 0.27232762394581866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31785733934570065, 0.27232762394581866, 0.271399363009692] ***
*** finished computation of 3 references, err: [Inf, 0.31785733934570065, 0.27232762394581866, 0.271399363009692] ***
*** center 1: selecting labels [1] (freq >= 1) [from [213, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [3, 129, 25]]
** centroid: 2, normalized-entropy: 0.4820618757241158, [(1, 3), (2, 129), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [208, 89, 0]]
** centroid: 3, normalized-entropy: 0.8808789297928313, [(1, 208), (2, 89)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3041468843122361] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3041468843122361, 0.23461598183993235] ***
*** starting iteration: 2; err: [Inf, 0.3041468843122361, 0.23461598183993235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3041468843122361, 0.23461598183993235, 0.2298769466704626] ***
*** starting iteration: 3; err: [Inf, 0.3041468843122361, 0.23461598183993235, 0.2298769466704626] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3041468843122361, 0.23461598183993235, 0.2298769466704626, 0.22905363542386617] ***
*** finished computation of 3 references, err: [Inf, 0.3041468843122361, 0.23461598183993235, 0.2298769466704626, 0.22905363542386617] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 192, 16]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 192), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [241, 6, 0]]
** centroid: 2, normalized-entropy: 0.16490121929420107, [(1, 241), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [171, 41, 0]]
** centroid: 3, normalized-entropy: 0.7085222836441899, [(1, 171), (2, 41)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.22714293979852274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22714293979852274, 0.1702236203734089] ***
*** starting iteration: 2; err: [Inf, 0.22714293979852274, 0.1702236203734089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22714293979852274, 0.1702236203734089, 0.15734758448938058] ***
*** starting iteration: 3; err: [Inf, 0.22714293979852274, 0.1702236203734089, 0.15734758448938058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22714293979852274, 0.1702236203734089, 0.15734758448938058, 0.15255844116444467] ***
*** starting iteration: 4; err: [Inf, 0.22714293979852274, 0.1702236203734089, 0.15734758448938058, 0.15255844116444467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22714293979852274, 0.1702236203734089, 0.15734758448938058, 0.15255844116444467, 0.14923429644915523] ***
*** starting iteration: 5; err: [Inf, 0.22714293979852274, 0.1702236203734089, 0.15734758448938058, 0.15255844116444467, 0.14923429644915523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22714293979852274, 0.1702236203734089, 0.15734758448938058, 0.15255844116444467, 0.14923429644915523, 0.14749440298046548] ***
*** starting iteration: 6; err: [Inf, 0.22714293979852274, 0.1702236203734089, 0.15734758448938058, 0.15255844116444467, 0.14923429644915523, 0.14749440298046548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22714293979852274, 0.1702236203734089, 0.15734758448938058, 0.15255844116444467, 0.14923429644915523, 0.14749440298046548, 0.14677064016310348] ***
*** finished computation of 7 references, err: [Inf, 0.22714293979852274, 0.1702236203734089, 0.15734758448938058, 0.15255844116444467, 0.14923429644915523, 0.14749440298046548, 0.14677064016310348] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [42, 43, 0]]
** centroid: 1, normalized-entropy: 0.9999001572094882, [(1, 42), (2, 43)]
*** center 2: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [118, 32, 0]]
** centroid: 4, normalized-entropy: 0.7478061583312324, [(1, 118), (2, 32)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [80, 2, 0]]
** centroid: 5, normalized-entropy: 0.16542703399626665, [(1, 80), (2, 2)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 88, 23]]
** centroid: 6, normalized-entropy: 0.7361103940132281, [(2, 88), (3, 23)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 64, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2328307108180053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2328307108180053, 0.16231396228195108] ***
*** starting iteration: 2; err: [Inf, 0.2328307108180053, 0.16231396228195108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2328307108180053, 0.16231396228195108, 0.15108497163931514] ***
*** starting iteration: 3; err: [Inf, 0.2328307108180053, 0.16231396228195108, 0.15108497163931514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2328307108180053, 0.16231396228195108, 0.15108497163931514, 0.14749022922443708] ***
*** starting iteration: 4; err: [Inf, 0.2328307108180053, 0.16231396228195108, 0.15108497163931514, 0.14749022922443708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2328307108180053, 0.16231396228195108, 0.15108497163931514, 0.14749022922443708, 0.14614738814247916] ***
*** starting iteration: 5; err: [Inf, 0.2328307108180053, 0.16231396228195108, 0.15108497163931514, 0.14749022922443708, 0.14614738814247916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2328307108180053, 0.16231396228195108, 0.15108497163931514, 0.14749022922443708, 0.14614738814247916, 0.14576713384074652] ***
*** finished computation of 7 references, err: [Inf, 0.2328307108180053, 0.16231396228195108, 0.15108497163931514, 0.14749022922443708, 0.14614738814247916, 0.14576713384074652] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [61, 45, 0]]
** centroid: 1, normalized-entropy: 0.9835018986559216, [(1, 61), (2, 45)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [64, 7, 0]]
** centroid: 2, normalized-entropy: 0.4645149440905521, [(1, 64), (2, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [101, 1, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 94, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 71, 25]]
** centroid: 6, normalized-entropy: 0.8273744775003173, [(2, 71), (3, 25)]
*** center 7: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2277375556859488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2277375556859488, 0.1700427775652423] ***
*** starting iteration: 2; err: [Inf, 0.2277375556859488, 0.1700427775652423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2277375556859488, 0.1700427775652423, 0.15495661353326587] ***
*** starting iteration: 3; err: [Inf, 0.2277375556859488, 0.1700427775652423, 0.15495661353326587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2277375556859488, 0.1700427775652423, 0.15495661353326587, 0.1520299492976342] ***
*** starting iteration: 4; err: [Inf, 0.2277375556859488, 0.1700427775652423, 0.15495661353326587, 0.1520299492976342] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2277375556859488, 0.1700427775652423, 0.15495661353326587, 0.1520299492976342, 0.14982425830972057] ***
*** starting iteration: 5; err: [Inf, 0.2277375556859488, 0.1700427775652423, 0.15495661353326587, 0.1520299492976342, 0.14982425830972057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2277375556859488, 0.1700427775652423, 0.15495661353326587, 0.1520299492976342, 0.14982425830972057, 0.14834770224911664] ***
*** starting iteration: 6; err: [Inf, 0.2277375556859488, 0.1700427775652423, 0.15495661353326587, 0.1520299492976342, 0.14982425830972057, 0.14834770224911664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2277375556859488, 0.1700427775652423, 0.15495661353326587, 0.1520299492976342, 0.14982425830972057, 0.14834770224911664, 0.14733965741819527] ***
*** starting iteration: 7; err: [Inf, 0.2277375556859488, 0.1700427775652423, 0.15495661353326587, 0.1520299492976342, 0.14982425830972057, 0.14834770224911664, 0.14733965741819527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2277375556859488, 0.1700427775652423, 0.15495661353326587, 0.1520299492976342, 0.14982425830972057, 0.14834770224911664, 0.14733965741819527, 0.14680012580247476] ***
*** finished computation of 7 references, err: [Inf, 0.2277375556859488, 0.1700427775652423, 0.15495661353326587, 0.1520299492976342, 0.14982425830972057, 0.14834770224911664, 0.14733965741819527, 0.14680012580247476] ***
*** center 1: selecting labels [1] (freq >= 2) [from [135, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [114, 1, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [13, 58, 0]]
** centroid: 3, normalized-entropy: 0.6868088934028034, [(1, 13), (2, 58)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 65, 16]]
** centroid: 5, normalized-entropy: 0.7169622516889513, [(2, 65), (3, 16)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [37, 56, 0]]
** centroid: 6, normalized-entropy: 0.9696787018231177, [(1, 37), (2, 56)]
*** center 7: selecting labels [1] (freq >= 2) [from [113, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4848241819119131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4848241819119131, 0.3132388095256758] ***
*** starting iteration: 2; err: [Inf, 0.4848241819119131, 0.3132388095256758] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4848241819119131, 0.3132388095256758, 0.3050144833467856] ***
*** starting iteration: 3; err: [Inf, 0.4848241819119131, 0.3132388095256758, 0.3050144833467856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4848241819119131, 0.3132388095256758, 0.3050144833467856, 0.3042582665128192] ***
*** finished computation of 3 references, err: [Inf, 0.4848241819119131, 0.3132388095256758, 0.3050144833467856, 0.3042582665128192] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [98, 138, 23]]
** centroid: 1, normalized-entropy: 0.8357833432455392, [(1, 98), (2, 138), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [184, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [132, 91, 0]]
** centroid: 3, normalized-entropy: 0.9754768684700932, [(1, 132), (2, 91)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4058108069086405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4058108069086405, 0.317094682915502] ***
*** starting iteration: 2; err: [Inf, 0.4058108069086405, 0.317094682915502] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4058108069086405, 0.317094682915502, 0.3000162620225857] ***
*** starting iteration: 3; err: [Inf, 0.4058108069086405, 0.317094682915502, 0.3000162620225857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4058108069086405, 0.317094682915502, 0.3000162620225857, 0.2967552810668599] ***
*** starting iteration: 4; err: [Inf, 0.4058108069086405, 0.317094682915502, 0.3000162620225857, 0.2967552810668599] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4058108069086405, 0.317094682915502, 0.3000162620225857, 0.2967552810668599, 0.29543980964315664] ***
*** starting iteration: 5; err: [Inf, 0.4058108069086405, 0.317094682915502, 0.3000162620225857, 0.2967552810668599, 0.29543980964315664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4058108069086405, 0.317094682915502, 0.3000162620225857, 0.2967552810668599, 0.29543980964315664, 0.29510644389626417] ***
*** finished computation of 3 references, err: [Inf, 0.4058108069086405, 0.317094682915502, 0.3000162620225857, 0.2967552810668599, 0.29543980964315664, 0.29510644389626417] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 177, 25]]
** centroid: 1, normalized-entropy: 0.5400798634000192, [(2, 177), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [261, 10, 0]]
** centroid: 2, normalized-entropy: 0.22789536587928325, [(1, 261), (2, 10)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [163, 31, 0]]
** centroid: 3, normalized-entropy: 0.6338160650651753, [(1, 163), (2, 31)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4304480917589122] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4304480917589122, 0.30459902254722154] ***
*** starting iteration: 2; err: [Inf, 0.4304480917589122, 0.30459902254722154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4304480917589122, 0.30459902254722154, 0.29180083072547436] ***
*** starting iteration: 3; err: [Inf, 0.4304480917589122, 0.30459902254722154, 0.29180083072547436] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4304480917589122, 0.30459902254722154, 0.29180083072547436, 0.2892898456968445] ***
*** starting iteration: 4; err: [Inf, 0.4304480917589122, 0.30459902254722154, 0.29180083072547436, 0.2892898456968445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4304480917589122, 0.30459902254722154, 0.29180083072547436, 0.2892898456968445, 0.288758067802332] ***
*** finished computation of 3 references, err: [Inf, 0.4304480917589122, 0.30459902254722154, 0.29180083072547436, 0.2892898456968445, 0.288758067802332] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [154, 48, 0]]
** centroid: 1, normalized-entropy: 0.7910662980902586, [(1, 154), (2, 48)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [5, 183, 16]]
** centroid: 2, normalized-entropy: 0.3531723900494684, [(1, 5), (2, 183), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [253, 8, 0]]
** centroid: 3, normalized-entropy: 0.19764785711524674, [(1, 253), (2, 8)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.29478866758395555] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29478866758395555, 0.23789081332489131] ***
*** starting iteration: 2; err: [Inf, 0.29478866758395555, 0.23789081332489131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29478866758395555, 0.23789081332489131, 0.22974520261810571] ***
*** starting iteration: 3; err: [Inf, 0.29478866758395555, 0.23789081332489131, 0.22974520261810571] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29478866758395555, 0.23789081332489131, 0.22974520261810571, 0.22687557631755365] ***
*** starting iteration: 4; err: [Inf, 0.29478866758395555, 0.23789081332489131, 0.22974520261810571, 0.22687557631755365] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29478866758395555, 0.23789081332489131, 0.22974520261810571, 0.22687557631755365, 0.22646838646975007] ***
*** finished computation of 3 references, err: [Inf, 0.29478866758395555, 0.23789081332489131, 0.22974520261810571, 0.22687557631755365, 0.22646838646975007] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 181, 23]]
** centroid: 1, normalized-entropy: 0.5081408784843806, [(2, 181), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [169, 40, 0]]
** centroid: 2, normalized-entropy: 0.7043651199890951, [(1, 169), (2, 40)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [245, 8, 0]]
** centroid: 3, normalized-entropy: 0.2024548590594097, [(1, 245), (2, 8)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2745010072290004] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2745010072290004, 0.2369252669735291] ***
*** starting iteration: 2; err: [Inf, 0.2745010072290004, 0.2369252669735291] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2745010072290004, 0.2369252669735291, 0.23511040770355193] ***
*** starting iteration: 3; err: [Inf, 0.2745010072290004, 0.2369252669735291, 0.23511040770355193] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2745010072290004, 0.2369252669735291, 0.23511040770355193, 0.23470991803717142] ***
*** finished computation of 3 references, err: [Inf, 0.2745010072290004, 0.2369252669735291, 0.23511040770355193, 0.23470991803717142] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [148, 46, 0]]
** centroid: 1, normalized-entropy: 0.790206924188637, [(1, 148), (2, 46)]
*** center 2: selecting labels [1] (freq >= 2) [from [268, 1, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [8, 171, 25]]
** centroid: 3, normalized-entropy: 0.48441049867439484, [(1, 8), (2, 171), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2823580688192346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2823580688192346, 0.2291297251288814] ***
*** starting iteration: 2; err: [Inf, 0.2823580688192346, 0.2291297251288814] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2823580688192346, 0.2291297251288814, 0.22809867566518452] ***
*** starting iteration: 3; err: [Inf, 0.2823580688192346, 0.2291297251288814, 0.22809867566518452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2823580688192346, 0.2291297251288814, 0.22809867566518452, 0.228167823694557] ***
*** finished computation of 3 references, err: [Inf, 0.2823580688192346, 0.2291297251288814, 0.22809867566518452, 0.228167823694557] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [243, 2, 0]]
** centroid: 1, normalized-entropy: 0.06835451705887763, [(1, 243), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [1, 203, 16]]
** centroid: 2, normalized-entropy: 0.37723824138843, [(2, 203), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [168, 34, 0]]
** centroid: 3, normalized-entropy: 0.653839880626333, [(1, 168), (2, 34)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.30287853881364335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30287853881364335, 0.28833307499519073] ***
*** starting iteration: 2; err: [Inf, 0.30287853881364335, 0.28833307499519073] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30287853881364335, 0.28833307499519073, 0.28661806876393586] ***
*** starting iteration: 3; err: [Inf, 0.30287853881364335, 0.28833307499519073, 0.28661806876393586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30287853881364335, 0.28833307499519073, 0.28661806876393586, 0.2863952202439957] ***
*** finished computation of 3 references, err: [Inf, 0.30287853881364335, 0.28833307499519073, 0.28661806876393586, 0.2863952202439957] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [166, 42, 0]]
** centroid: 1, normalized-entropy: 0.7257576154473545, [(1, 166), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [248, 10, 0]]
** centroid: 2, normalized-entropy: 0.23657622470690265, [(1, 248), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 177, 23]]
** centroid: 3, normalized-entropy: 0.5148156530047155, [(2, 177), (3, 23)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.43345376239556155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43345376239556155, 0.2967396727993504] ***
*** starting iteration: 2; err: [Inf, 0.43345376239556155, 0.2967396727993504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43345376239556155, 0.2967396727993504, 0.2949482833888421] ***
*** starting iteration: 3; err: [Inf, 0.43345376239556155, 0.2967396727993504, 0.2949482833888421] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43345376239556155, 0.2967396727993504, 0.2949482833888421, 0.29482006680952016] ***
*** finished computation of 3 references, err: [Inf, 0.43345376239556155, 0.2967396727993504, 0.2949482833888421, 0.29482006680952016] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [160, 35, 0]]
** centroid: 1, normalized-entropy: 0.6789538995185759, [(1, 160), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [263, 10, 0]]
** centroid: 2, normalized-entropy: 0.22662170087315248, [(1, 263), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [1, 173, 25]]
** centroid: 3, normalized-entropy: 0.5470985992436426, [(2, 173), (3, 25)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.412343450337425] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.412343450337425, 0.332488049526812] ***
*** starting iteration: 2; err: [Inf, 0.412343450337425, 0.332488049526812] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.412343450337425, 0.332488049526812, 0.32243229069564117] ***
*** starting iteration: 3; err: [Inf, 0.412343450337425, 0.332488049526812, 0.32243229069564117] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.412343450337425, 0.332488049526812, 0.32243229069564117, 0.2927123231204531] ***
*** finished computation of 3 references, err: [Inf, 0.412343450337425, 0.332488049526812, 0.32243229069564117, 0.2927123231204531] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [244, 24, 0]]
** centroid: 1, normalized-entropy: 0.43497348007474274, [(1, 244), (2, 24)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 168, 16]]
** centroid: 2, normalized-entropy: 0.42622865699814483, [(2, 168), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [168, 47, 0]]
** centroid: 3, normalized-entropy: 0.7576114400281548, [(1, 168), (2, 47)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38978730041992377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38978730041992377, 0.29520448007237715] ***
*** starting iteration: 2; err: [Inf, 0.38978730041992377, 0.29520448007237715] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38978730041992377, 0.29520448007237715, 0.2883420630579104] ***
*** starting iteration: 3; err: [Inf, 0.38978730041992377, 0.29520448007237715, 0.2883420630579104] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38978730041992377, 0.29520448007237715, 0.2883420630579104, 0.2870352490310062] ***
*** starting iteration: 4; err: [Inf, 0.38978730041992377, 0.29520448007237715, 0.2883420630579104, 0.2870352490310062] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38978730041992377, 0.29520448007237715, 0.2883420630579104, 0.2870352490310062, 0.28669327919094545] ***
*** finished computation of 3 references, err: [Inf, 0.38978730041992377, 0.29520448007237715, 0.2883420630579104, 0.2870352490310062, 0.28669327919094545] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [254, 12, 0]]
** centroid: 1, normalized-entropy: 0.2652619074982421, [(1, 254), (2, 12)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 176, 23]]
** centroid: 2, normalized-entropy: 0.5165146211995502, [(2, 176), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [160, 41, 0]]
** centroid: 3, normalized-entropy: 0.7298172266450014, [(1, 160), (2, 41)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39424388276306965] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39424388276306965, 0.299038876752848] ***
*** starting iteration: 2; err: [Inf, 0.39424388276306965, 0.299038876752848] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39424388276306965, 0.299038876752848, 0.29569759195868756] ***
*** starting iteration: 3; err: [Inf, 0.39424388276306965, 0.299038876752848, 0.29569759195868756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39424388276306965, 0.299038876752848, 0.29569759195868756, 0.2947080368985948] ***
*** finished computation of 3 references, err: [Inf, 0.39424388276306965, 0.299038876752848, 0.29569759195868756, 0.2947080368985948] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [271, 6, 0]]
** centroid: 1, normalized-entropy: 0.15066575734440074, [(1, 271), (2, 6)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 175, 25]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 175), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [153, 37, 0]]
** centroid: 3, normalized-entropy: 0.711276058540175, [(1, 153), (2, 37)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.46509819577491357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46509819577491357, 0.2969506172591756] ***
*** starting iteration: 2; err: [Inf, 0.46509819577491357, 0.2969506172591756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46509819577491357, 0.2969506172591756, 0.29137098407191314] ***
*** starting iteration: 3; err: [Inf, 0.46509819577491357, 0.2969506172591756, 0.29137098407191314] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46509819577491357, 0.2969506172591756, 0.29137098407191314, 0.2900843904444437] ***
*** starting iteration: 4; err: [Inf, 0.46509819577491357, 0.2969506172591756, 0.29137098407191314, 0.2900843904444437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46509819577491357, 0.2969506172591756, 0.29137098407191314, 0.2900843904444437, 0.2896761102448294] ***
*** finished computation of 3 references, err: [Inf, 0.46509819577491357, 0.2969506172591756, 0.29137098407191314, 0.2900843904444437, 0.2896761102448294] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [243, 7, 0]]
** centroid: 1, normalized-entropy: 0.18426059333965505, [(1, 243), (2, 7)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 198, 16]]
** centroid: 2, normalized-entropy: 0.3834641323087979, [(2, 198), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [169, 34, 0]]
** centroid: 3, normalized-entropy: 0.6519252702186703, [(1, 169), (2, 34)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4077347746879623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4077347746879623, 0.30425902866889853] ***
*** starting iteration: 2; err: [Inf, 0.4077347746879623, 0.30425902866889853] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4077347746879623, 0.30425902866889853, 0.2994991822738771] ***
*** starting iteration: 3; err: [Inf, 0.4077347746879623, 0.30425902866889853, 0.2994991822738771] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4077347746879623, 0.30425902866889853, 0.2994991822738771, 0.29767249231772114] ***
*** finished computation of 3 references, err: [Inf, 0.4077347746879623, 0.30425902866889853, 0.2994991822738771, 0.29767249231772114] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [259, 22, 0]]
** centroid: 1, normalized-entropy: 0.3961315084029974, [(1, 259), (2, 22)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 173, 23]]
** centroid: 2, normalized-entropy: 0.5216863320210009, [(2, 173), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [155, 34, 0]]
** centroid: 3, normalized-entropy: 0.6798454960728273, [(1, 155), (2, 34)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.46149706337433394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46149706337433394, 0.3016209123374104] ***
*** starting iteration: 2; err: [Inf, 0.46149706337433394, 0.3016209123374104] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46149706337433394, 0.3016209123374104, 0.2957799363674699] ***
*** starting iteration: 3; err: [Inf, 0.46149706337433394, 0.3016209123374104, 0.2957799363674699] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46149706337433394, 0.3016209123374104, 0.2957799363674699, 0.2946342952825922] ***
*** finished computation of 3 references, err: [Inf, 0.46149706337433394, 0.3016209123374104, 0.2957799363674699, 0.2946342952825922] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [258, 11, 0]]
** centroid: 1, normalized-entropy: 0.24636801421383678, [(1, 258), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [166, 36, 0]]
** centroid: 2, normalized-entropy: 0.6761627418829197, [(1, 166), (2, 36)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 171, 25]]
** centroid: 3, normalized-entropy: 0.5506833911057354, [(2, 171), (3, 25)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38342390433121387] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38342390433121387, 0.30536249230687007] ***
*** starting iteration: 2; err: [Inf, 0.38342390433121387, 0.30536249230687007] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38342390433121387, 0.30536249230687007, 0.2963194221040343] ***
*** starting iteration: 3; err: [Inf, 0.38342390433121387, 0.30536249230687007, 0.2963194221040343] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38342390433121387, 0.30536249230687007, 0.2963194221040343, 0.2943244677098437] ***
*** finished computation of 3 references, err: [Inf, 0.38342390433121387, 0.30536249230687007, 0.2963194221040343, 0.2943244677098437] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [86, 183, 16]]
** centroid: 1, normalized-entropy: 0.7351799852885738, [(1, 86), (2, 183), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [125, 56, 0]]
** centroid: 2, normalized-entropy: 0.8924706869838313, [(1, 125), (2, 56)]
*** center 3: selecting labels [1] (freq >= 2) [from [201, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23232369836665936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23232369836665936, 0.197918789182977] ***
*** starting iteration: 2; err: [Inf, 0.23232369836665936, 0.197918789182977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23232369836665936, 0.197918789182977, 0.19345264428353928] ***
*** starting iteration: 3; err: [Inf, 0.23232369836665936, 0.197918789182977, 0.19345264428353928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23232369836665936, 0.197918789182977, 0.19345264428353928, 0.19184763659373508] ***
*** starting iteration: 4; err: [Inf, 0.23232369836665936, 0.197918789182977, 0.19345264428353928, 0.19184763659373508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23232369836665936, 0.197918789182977, 0.19345264428353928, 0.19184763659373508, 0.19103622572306353] ***
*** finished computation of 7 references, err: [Inf, 0.23232369836665936, 0.197918789182977, 0.19345264428353928, 0.19184763659373508, 0.19103622572306353] ***
*** center 1: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 60, 23]]
** centroid: 2, normalized-entropy: 0.8514808683852091, [(2, 60), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [87, 3, 0]]
** centroid: 3, normalized-entropy: 0.2108423003185322, [(1, 87), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [5, 86, 0]]
** centroid: 4, normalized-entropy: 0.30704288878312236, [(1, 5), (2, 86)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [88, 12, 0]]
** centroid: 5, normalized-entropy: 0.5293608652873645, [(1, 88), (2, 12)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [37, 68, 0]]
** centroid: 6, normalized-entropy: 0.9361764916347493, [(1, 37), (2, 68)]
*** center 7: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22982237804883524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22982237804883524, 0.19091078347765256] ***
*** starting iteration: 2; err: [Inf, 0.22982237804883524, 0.19091078347765256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22982237804883524, 0.19091078347765256, 0.18920387718072537] ***
*** starting iteration: 3; err: [Inf, 0.22982237804883524, 0.19091078347765256, 0.18920387718072537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22982237804883524, 0.19091078347765256, 0.18920387718072537, 0.1886881936447642] ***
*** finished computation of 7 references, err: [Inf, 0.22982237804883524, 0.19091078347765256, 0.18920387718072537, 0.1886881936447642] ***
*** center 1: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 73, 25]]
** centroid: 2, normalized-entropy: 0.8192649712314392, [(2, 73), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [67, 19, 0]]
** centroid: 3, normalized-entropy: 0.7618624463753669, [(1, 67), (2, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [35, 64, 0]]
** centroid: 4, normalized-entropy: 0.9371858565132074, [(1, 35), (2, 64)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [33, 61, 0]]
** centroid: 5, normalized-entropy: 0.9350145588035413, [(1, 33), (2, 61)]
*** center 6: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [85, 1, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2467919129478945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2467919129478945, 0.18949970023984417] ***
*** starting iteration: 2; err: [Inf, 0.2467919129478945, 0.18949970023984417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2467919129478945, 0.18949970023984417, 0.1820463588296518] ***
*** starting iteration: 3; err: [Inf, 0.2467919129478945, 0.18949970023984417, 0.1820463588296518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2467919129478945, 0.18949970023984417, 0.1820463588296518, 0.18102385771895077] ***
*** starting iteration: 4; err: [Inf, 0.2467919129478945, 0.18949970023984417, 0.1820463588296518, 0.18102385771895077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2467919129478945, 0.18949970023984417, 0.1820463588296518, 0.18102385771895077, 0.18055056055904417] ***
*** finished computation of 7 references, err: [Inf, 0.2467919129478945, 0.18949970023984417, 0.1820463588296518, 0.18102385771895077, 0.18055056055904417] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [6, 103, 0]]
** centroid: 1, normalized-entropy: 0.30745653299528936, [(1, 6), (2, 103)]
*** center 2: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [64, 37, 0]]
** centroid: 3, normalized-entropy: 0.9478176755411893, [(1, 64), (2, 37)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [68, 28, 0]]
** centroid: 4, normalized-entropy: 0.8708644692353648, [(1, 68), (2, 28)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 71, 16]]
** centroid: 5, normalized-entropy: 0.6885521684368613, [(2, 71), (3, 16)]
*** center 6: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 12)
[0.9569899240557923, 0.9350008691326058, 0.9260098421775069, 0.9220118321914729, 0.9200128271984559, 0.9149988311664958, 0.9139918361475248, 0.9120228012443582, 0.8959768151384918, 0.8579657501813189, 0.8289457121792451, 0.791998585411759]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 2) => 0.9569899240557923
finished with 13
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.5317887327921865] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5317887327921865, 0.33348781445312564] ***
*** starting iteration: 2; err: [Inf, 0.5317887327921865, 0.33348781445312564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5317887327921865, 0.33348781445312564, 0.32591288928893414] ***
*** starting iteration: 3; err: [Inf, 0.5317887327921865, 0.33348781445312564, 0.32591288928893414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5317887327921865, 0.33348781445312564, 0.32591288928893414, 0.3169876250687304] ***
*** starting iteration: 4; err: [Inf, 0.5317887327921865, 0.33348781445312564, 0.32591288928893414, 0.3169876250687304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5317887327921865, 0.33348781445312564, 0.32591288928893414, 0.3169876250687304, 0.3098920400564869] ***
*** starting iteration: 5; err: [Inf, 0.5317887327921865, 0.33348781445312564, 0.32591288928893414, 0.3169876250687304, 0.3098920400564869] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5317887327921865, 0.33348781445312564, 0.32591288928893414, 0.3169876250687304, 0.3098920400564869, 0.292073776057499] ***
*** starting iteration: 6; err: [Inf, 0.5317887327921865, 0.33348781445312564, 0.32591288928893414, 0.3169876250687304, 0.3098920400564869, 0.292073776057499] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5317887327921865, 0.33348781445312564, 0.32591288928893414, 0.3169876250687304, 0.3098920400564869, 0.292073776057499, 0.28686080282196047] ***
*** starting iteration: 7; err: [Inf, 0.5317887327921865, 0.33348781445312564, 0.32591288928893414, 0.3169876250687304, 0.3098920400564869, 0.292073776057499, 0.28686080282196047] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5317887327921865, 0.33348781445312564, 0.32591288928893414, 0.3169876250687304, 0.3098920400564869, 0.292073776057499, 0.28686080282196047, 0.28636348782269444] ***
*** finished computation of 3 references, err: [Inf, 0.5317887327921865, 0.33348781445312564, 0.32591288928893414, 0.3169876250687304, 0.3098920400564869, 0.292073776057499, 0.28686080282196047, 0.28636348782269444] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 177, 23]]
** centroid: 1, normalized-entropy: 0.5148156530047155, [(2, 177), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [247, 10, 0]]
** centroid: 2, normalized-entropy: 0.23727440464022428, [(1, 247), (2, 10)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [167, 42, 0]]
** centroid: 3, normalized-entropy: 0.7238378469140183, [(1, 167), (2, 42)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3792736725253367] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3792736725253367, 0.2974406790974057] ***
*** starting iteration: 2; err: [Inf, 0.3792736725253367, 0.2974406790974057] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3792736725253367, 0.2974406790974057, 0.2955356859636941] ***
*** starting iteration: 3; err: [Inf, 0.3792736725253367, 0.2974406790974057, 0.2955356859636941] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3792736725253367, 0.2974406790974057, 0.2955356859636941, 0.29510447849844884] ***
*** finished computation of 3 references, err: [Inf, 0.3792736725253367, 0.2974406790974057, 0.2955356859636941, 0.29510447849844884] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [166, 31, 0]]
** centroid: 1, normalized-entropy: 0.6279572447072259, [(1, 166), (2, 31)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [258, 12, 0]]
** centroid: 2, normalized-entropy: 0.2623112196143368, [(1, 258), (2, 12)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 175, 25]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 175), (3, 25)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34258600890027663] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34258600890027663, 0.29968391186131843] ***
*** starting iteration: 2; err: [Inf, 0.34258600890027663, 0.29968391186131843] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34258600890027663, 0.29968391186131843, 0.2962469780507653] ***
*** starting iteration: 3; err: [Inf, 0.34258600890027663, 0.29968391186131843, 0.2962469780507653] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34258600890027663, 0.29968391186131843, 0.2962469780507653, 0.2954383565928379] ***
*** finished computation of 3 references, err: [Inf, 0.34258600890027663, 0.29968391186131843, 0.2962469780507653, 0.2954383565928379] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [124, 91, 0]]
** centroid: 1, normalized-entropy: 0.9829386414682795, [(1, 124), (2, 91)]
*** center 2: selecting labels [1] (freq >= 2) [from [206, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [82, 148, 16]]
** centroid: 3, normalized-entropy: 0.7733767794754578, [(1, 82), (2, 148), (3, 16)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 13)
[0.9569899240557923, 0.9350008691326058, 0.9260098421775069, 0.9220118321914729, 0.9200128271984559, 0.9149988311664958, 0.9139918361475248, 0.9120228012443582, 0.9099908291525057, 0.8959768151384918, 0.8579657501813189, 0.8289457121792451, 0.791998585411759]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 2) => 0.9569899240557923
finished with 14
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.3279612101726346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3279612101726346, 0.25143331698597865] ***
*** starting iteration: 2; err: [Inf, 0.3279612101726346, 0.25143331698597865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3279612101726346, 0.25143331698597865, 0.21601060814190623] ***
*** starting iteration: 3; err: [Inf, 0.3279612101726346, 0.25143331698597865, 0.21601060814190623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3279612101726346, 0.25143331698597865, 0.21601060814190623, 0.2023794260337479] ***
*** finished computation of 7 references, err: [Inf, 0.3279612101726346, 0.25143331698597865, 0.21601060814190623, 0.2023794260337479] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 81, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 63, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [95, 19, 0]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(1, 95), (2, 19)]
*** center 5: selecting labels [1] (freq >= 2) [from [158, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 23, 23]]
** centroid: 6, normalized-entropy: 1.0, [(2, 23), (3, 23)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [68, 43, 0]]
** centroid: 7, normalized-entropy: 0.9630928243932294, [(1, 68), (2, 43)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25947893797412985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25947893797412985, 0.2049176457548874] ***
*** starting iteration: 2; err: [Inf, 0.25947893797412985, 0.2049176457548874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25947893797412985, 0.2049176457548874, 0.19174585013749493] ***
*** starting iteration: 3; err: [Inf, 0.25947893797412985, 0.2049176457548874, 0.19174585013749493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25947893797412985, 0.2049176457548874, 0.19174585013749493, 0.18794283529497807] ***
*** finished computation of 7 references, err: [Inf, 0.25947893797412985, 0.2049176457548874, 0.19174585013749493, 0.18794283529497807] ***
*** center 1: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 74, 25]]
** centroid: 2, normalized-entropy: 0.8152560766360704, [(2, 74), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [67, 5, 0]]
** centroid: 3, normalized-entropy: 0.3638469981769295, [(1, 67), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 54, 0]]
** centroid: 4, normalized-entropy: 0.9839393951635759, [(1, 40), (2, 54)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [96, 5, 0]]
** centroid: 5, normalized-entropy: 0.2842902892501332, [(1, 96), (2, 5)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 80, 0]]
** centroid: 6, normalized-entropy: 0.3650551896402848, [(1, 6), (2, 80)]
*** center 7: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2829643439925995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2829643439925995, 0.2103562889920165] ***
*** starting iteration: 2; err: [Inf, 0.2829643439925995, 0.2103562889920165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2829643439925995, 0.2103562889920165, 0.19706563536088909] ***
*** starting iteration: 3; err: [Inf, 0.2829643439925995, 0.2103562889920165, 0.19706563536088909] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2829643439925995, 0.2103562889920165, 0.19706563536088909, 0.18825359245960502] ***
*** finished computation of 7 references, err: [Inf, 0.2829643439925995, 0.2103562889920165, 0.19706563536088909, 0.18825359245960502] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [4, 62, 0]]
** centroid: 1, normalized-entropy: 0.32984607020714635, [(1, 4), (2, 62)]
*** center 2: selecting labels [1] (freq >= 2) [from [89, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [134, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [46, 2, 0]]
** centroid: 4, normalized-entropy: 0.24988229283318547, [(1, 46), (2, 2)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 70, 16]]
** centroid: 5, normalized-entropy: 0.6931274153282881, [(2, 70), (3, 16)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [27, 77, 0]]
** centroid: 6, normalized-entropy: 0.826165427834159, [(1, 27), (2, 77)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [112, 27, 0]]
** centroid: 7, normalized-entropy: 0.7102668725158433, [(1, 112), (2, 27)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 14)
[0.9569899240557923, 0.9350008691326058, 0.9299928671186156, 0.9260098421775069, 0.9220118321914729, 0.9200128271984559, 0.9149988311664958, 0.9139918361475248, 0.9120228012443582, 0.9099908291525057, 0.8959768151384918, 0.8579657501813189, 0.8289457121792451, 0.791998585411759]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 2) => 0.9569899240557923
finished with 15
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.24062833299737302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24062833299737302, 0.21008010372112565] ***
*** starting iteration: 2; err: [Inf, 0.24062833299737302, 0.21008010372112565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314] ***
*** starting iteration: 3; err: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314, 0.19527072634257087] ***
*** starting iteration: 4; err: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314, 0.19527072634257087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314, 0.19527072634257087, 0.19152062947305293] ***
*** starting iteration: 5; err: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314, 0.19527072634257087, 0.19152062947305293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314, 0.19527072634257087, 0.19152062947305293, 0.18850714003865807] ***
*** starting iteration: 6; err: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314, 0.19527072634257087, 0.19152062947305293, 0.18850714003865807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314, 0.19527072634257087, 0.19152062947305293, 0.18850714003865807, 0.18624272734044237] ***
*** starting iteration: 7; err: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314, 0.19527072634257087, 0.19152062947305293, 0.18850714003865807, 0.18624272734044237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314, 0.19527072634257087, 0.19152062947305293, 0.18850714003865807, 0.18624272734044237, 0.18417885849621515] ***
*** starting iteration: 8; err: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314, 0.19527072634257087, 0.19152062947305293, 0.18850714003865807, 0.18624272734044237, 0.18417885849621515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314, 0.19527072634257087, 0.19152062947305293, 0.18850714003865807, 0.18624272734044237, 0.18417885849621515, 0.18301039614418224] ***
*** starting iteration: 9; err: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314, 0.19527072634257087, 0.19152062947305293, 0.18850714003865807, 0.18624272734044237, 0.18417885849621515, 0.18301039614418224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314, 0.19527072634257087, 0.19152062947305293, 0.18850714003865807, 0.18624272734044237, 0.18417885849621515, 0.18301039614418224, 0.1828857512631406] ***
*** finished computation of 7 references, err: [Inf, 0.24062833299737302, 0.21008010372112565, 0.20080883025720314, 0.19527072634257087, 0.19152062947305293, 0.18850714003865807, 0.18624272734044237, 0.18417885849621515, 0.18301039614418224, 0.1828857512631406] ***
*** center 1: selecting labels [1] (freq >= 1) [from [116, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [44, 51, 0]]
** centroid: 2, normalized-entropy: 0.996079990851081, [(1, 44), (2, 51)]
*** center 3: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [8, 59, 0]]
** centroid: 4, normalized-entropy: 0.52764232609436, [(1, 8), (2, 59)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 73, 23]]
** centroid: 5, normalized-entropy: 0.7943466904341503, [(2, 73), (3, 23)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [37, 46, 0]]
** centroid: 6, normalized-entropy: 0.9915017866855546, [(1, 37), (2, 46)]
*** center 7: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2763843661023379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2763843661023379, 0.19848005867785198] ***
*** starting iteration: 2; err: [Inf, 0.2763843661023379, 0.19848005867785198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2763843661023379, 0.19848005867785198, 0.19235605193019986] ***
*** starting iteration: 3; err: [Inf, 0.2763843661023379, 0.19848005867785198, 0.19235605193019986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2763843661023379, 0.19848005867785198, 0.19235605193019986, 0.19150725310051192] ***
*** finished computation of 7 references, err: [Inf, 0.2763843661023379, 0.19848005867785198, 0.19235605193019986, 0.19150725310051192] ***
*** center 1: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 91, 25]]
** centroid: 2, normalized-entropy: 0.7518972278650765, [(2, 91), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [66, 6, 0]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(1, 66), (2, 6)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [105, 11, 0]]
** centroid: 4, normalized-entropy: 0.4523816230590106, [(1, 105), (2, 11)]
*** center 5: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [37, 80, 0]]
** centroid: 6, normalized-entropy: 0.9002448724102409, [(1, 37), (2, 80)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [48, 30, 0]]
** centroid: 7, normalized-entropy: 0.961236604722876, [(1, 48), (2, 30)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24250798008922694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24250798008922694, 0.20767193056106836] ***
*** starting iteration: 2; err: [Inf, 0.24250798008922694, 0.20767193056106836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24250798008922694, 0.20767193056106836, 0.20109802442711025] ***
*** starting iteration: 3; err: [Inf, 0.24250798008922694, 0.20767193056106836, 0.20109802442711025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24250798008922694, 0.20767193056106836, 0.20109802442711025, 0.19568922278936254] ***
*** starting iteration: 4; err: [Inf, 0.24250798008922694, 0.20767193056106836, 0.20109802442711025, 0.19568922278936254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24250798008922694, 0.20767193056106836, 0.20109802442711025, 0.19568922278936254, 0.1877455495792194] ***
*** starting iteration: 5; err: [Inf, 0.24250798008922694, 0.20767193056106836, 0.20109802442711025, 0.19568922278936254, 0.1877455495792194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24250798008922694, 0.20767193056106836, 0.20109802442711025, 0.19568922278936254, 0.1877455495792194, 0.18524286324490627] ***
*** starting iteration: 6; err: [Inf, 0.24250798008922694, 0.20767193056106836, 0.20109802442711025, 0.19568922278936254, 0.1877455495792194, 0.18524286324490627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24250798008922694, 0.20767193056106836, 0.20109802442711025, 0.19568922278936254, 0.1877455495792194, 0.18524286324490627, 0.18457907293413556] ***
*** finished computation of 7 references, err: [Inf, 0.24250798008922694, 0.20767193056106836, 0.20109802442711025, 0.19568922278936254, 0.1877455495792194, 0.18524286324490627, 0.18457907293413556] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 65, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [41, 47, 0]]
** centroid: 2, normalized-entropy: 0.99664402524877, [(1, 41), (2, 47)]
*** center 3: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [115, 8, 0]]
** centroid: 4, normalized-entropy: 0.3471376284400274, [(1, 115), (2, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [135, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 75, 16]]
** centroid: 6, normalized-entropy: 0.6708561590207726, [(2, 75), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [18, 44, 0]]
** centroid: 7, normalized-entropy: 0.8691375806126381, [(1, 18), (2, 44)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 15)
[0.9569899240557923, 0.9350008691326058, 0.9299928671186156, 0.9260098421775069, 0.9220118321914729, 0.9219698740656824, 0.9200128271984559, 0.9149988311664958, 0.9139918361475248, 0.9120228012443582, 0.9099908291525057, 0.8959768151384918, 0.8579657501813189, 0.8289457121792451, 0.791998585411759]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 2) => 0.9569899240557923
finished with 15
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9569899240557923, 0.9350008691326058, 0.9299928671186156, 0.9260098421775069, 0.9220118321914729, 0.9219698740656824, 0.9200128271984559, 0.9149988311664958, 0.9139918361475248, 0.9120228012443582, 0.9099908291525057, 0.8959768151384918, 0.8579657501813189, 0.8289457121792451, 0.791998585411759]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 2) => 0.9569899240557923
finished with 16
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.24878551143601918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24878551143601918, 0.2086662115534773] ***
*** starting iteration: 2; err: [Inf, 0.24878551143601918, 0.2086662115534773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24878551143601918, 0.2086662115534773, 0.19935818990082801] ***
*** starting iteration: 3; err: [Inf, 0.24878551143601918, 0.2086662115534773, 0.19935818990082801] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24878551143601918, 0.2086662115534773, 0.19935818990082801, 0.19380745530553586] ***
*** starting iteration: 4; err: [Inf, 0.24878551143601918, 0.2086662115534773, 0.19935818990082801, 0.19380745530553586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24878551143601918, 0.2086662115534773, 0.19935818990082801, 0.19380745530553586, 0.18989793785257605] ***
*** starting iteration: 5; err: [Inf, 0.24878551143601918, 0.2086662115534773, 0.19935818990082801, 0.19380745530553586, 0.18989793785257605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24878551143601918, 0.2086662115534773, 0.19935818990082801, 0.19380745530553586, 0.18989793785257605, 0.18729178492027382] ***
*** starting iteration: 6; err: [Inf, 0.24878551143601918, 0.2086662115534773, 0.19935818990082801, 0.19380745530553586, 0.18989793785257605, 0.18729178492027382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24878551143601918, 0.2086662115534773, 0.19935818990082801, 0.19380745530553586, 0.18989793785257605, 0.18729178492027382, 0.18556860507418355] ***
*** starting iteration: 7; err: [Inf, 0.24878551143601918, 0.2086662115534773, 0.19935818990082801, 0.19380745530553586, 0.18989793785257605, 0.18729178492027382, 0.18556860507418355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24878551143601918, 0.2086662115534773, 0.19935818990082801, 0.19380745530553586, 0.18989793785257605, 0.18729178492027382, 0.18556860507418355, 0.184839533248989] ***
*** finished computation of 7 references, err: [Inf, 0.24878551143601918, 0.2086662115534773, 0.19935818990082801, 0.19380745530553586, 0.18989793785257605, 0.18729178492027382, 0.18556860507418355, 0.184839533248989] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [45, 50, 0]]
** centroid: 1, normalized-entropy: 0.9980008838722993, [(1, 45), (2, 50)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [47, 42, 0]]
** centroid: 2, normalized-entropy: 0.9977221075331744, [(1, 47), (2, 42)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [15, 54, 0]]
** centroid: 3, normalized-entropy: 0.7553754125614286, [(1, 15), (2, 54)]
*** center 4: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 83, 23]]
** centroid: 7, normalized-entropy: 0.7546167018169155, [(2, 83), (3, 23)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40391189899474295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40391189899474295, 0.2611927780974796] ***
*** starting iteration: 2; err: [Inf, 0.40391189899474295, 0.2611927780974796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40391189899474295, 0.2611927780974796, 0.21409825548251066] ***
*** starting iteration: 3; err: [Inf, 0.40391189899474295, 0.2611927780974796, 0.21409825548251066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40391189899474295, 0.2611927780974796, 0.21409825548251066, 0.2035216252868255] ***
*** starting iteration: 4; err: [Inf, 0.40391189899474295, 0.2611927780974796, 0.21409825548251066, 0.2035216252868255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40391189899474295, 0.2611927780974796, 0.21409825548251066, 0.2035216252868255, 0.1988645854588972] ***
*** starting iteration: 5; err: [Inf, 0.40391189899474295, 0.2611927780974796, 0.21409825548251066, 0.2035216252868255, 0.1988645854588972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40391189899474295, 0.2611927780974796, 0.21409825548251066, 0.2035216252868255, 0.1988645854588972, 0.19618944161902482] ***
*** starting iteration: 6; err: [Inf, 0.40391189899474295, 0.2611927780974796, 0.21409825548251066, 0.2035216252868255, 0.1988645854588972, 0.19618944161902482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40391189899474295, 0.2611927780974796, 0.21409825548251066, 0.2035216252868255, 0.1988645854588972, 0.19618944161902482, 0.1939868675363341] ***
*** starting iteration: 7; err: [Inf, 0.40391189899474295, 0.2611927780974796, 0.21409825548251066, 0.2035216252868255, 0.1988645854588972, 0.19618944161902482, 0.1939868675363341] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40391189899474295, 0.2611927780974796, 0.21409825548251066, 0.2035216252868255, 0.1988645854588972, 0.19618944161902482, 0.1939868675363341, 0.19264060104785227] ***
*** starting iteration: 8; err: [Inf, 0.40391189899474295, 0.2611927780974796, 0.21409825548251066, 0.2035216252868255, 0.1988645854588972, 0.19618944161902482, 0.1939868675363341, 0.19264060104785227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40391189899474295, 0.2611927780974796, 0.21409825548251066, 0.2035216252868255, 0.1988645854588972, 0.19618944161902482, 0.1939868675363341, 0.19264060104785227, 0.1919455681794855] ***
*** finished computation of 7 references, err: [Inf, 0.40391189899474295, 0.2611927780974796, 0.21409825548251066, 0.2035216252868255, 0.1988645854588972, 0.19618944161902482, 0.1939868675363341, 0.19264060104785227, 0.1919455681794855] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [29, 53, 0]]
** centroid: 1, normalized-entropy: 0.9372930661967526, [(1, 29), (2, 53)]
*** center 2: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [35, 49, 0]]
** centroid: 3, normalized-entropy: 0.9798687566511527, [(1, 35), (2, 49)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 85, 25]]
** centroid: 4, normalized-entropy: 0.7732266742876346, [(2, 85), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [91, 31, 0]]
** centroid: 5, normalized-entropy: 0.8177094860868659, [(1, 91), (2, 31)]
*** center 6: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [116, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28850205139308677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28850205139308677, 0.21656659603777945] ***
*** starting iteration: 2; err: [Inf, 0.28850205139308677, 0.21656659603777945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28850205139308677, 0.21656659603777945, 0.1983330674606307] ***
*** starting iteration: 3; err: [Inf, 0.28850205139308677, 0.21656659603777945, 0.1983330674606307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28850205139308677, 0.21656659603777945, 0.1983330674606307, 0.1921522585169665] ***
*** starting iteration: 4; err: [Inf, 0.28850205139308677, 0.21656659603777945, 0.1983330674606307, 0.1921522585169665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28850205139308677, 0.21656659603777945, 0.1983330674606307, 0.1921522585169665, 0.18838992624681838] ***
*** starting iteration: 5; err: [Inf, 0.28850205139308677, 0.21656659603777945, 0.1983330674606307, 0.1921522585169665, 0.18838992624681838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28850205139308677, 0.21656659603777945, 0.1983330674606307, 0.1921522585169665, 0.18838992624681838, 0.18627341633112446] ***
*** starting iteration: 6; err: [Inf, 0.28850205139308677, 0.21656659603777945, 0.1983330674606307, 0.1921522585169665, 0.18838992624681838, 0.18627341633112446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28850205139308677, 0.21656659603777945, 0.1983330674606307, 0.1921522585169665, 0.18838992624681838, 0.18627341633112446, 0.18489593915387184] ***
*** starting iteration: 7; err: [Inf, 0.28850205139308677, 0.21656659603777945, 0.1983330674606307, 0.1921522585169665, 0.18838992624681838, 0.18627341633112446, 0.18489593915387184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28850205139308677, 0.21656659603777945, 0.1983330674606307, 0.1921522585169665, 0.18838992624681838, 0.18627341633112446, 0.18489593915387184, 0.18385868695755858] ***
*** starting iteration: 8; err: [Inf, 0.28850205139308677, 0.21656659603777945, 0.1983330674606307, 0.1921522585169665, 0.18838992624681838, 0.18627341633112446, 0.18489593915387184, 0.18385868695755858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28850205139308677, 0.21656659603777945, 0.1983330674606307, 0.1921522585169665, 0.18838992624681838, 0.18627341633112446, 0.18489593915387184, 0.18385868695755858, 0.1836206025731606] ***
*** finished computation of 7 references, err: [Inf, 0.28850205139308677, 0.21656659603777945, 0.1983330674606307, 0.1921522585169665, 0.18838992624681838, 0.18627341633112446, 0.18489593915387184, 0.18385868695755858, 0.1836206025731606] ***
*** center 1: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [65, 25, 0]]
** centroid: 3, normalized-entropy: 0.8524051786494784, [(1, 65), (2, 25)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [65, 33, 0]]
** centroid: 4, normalized-entropy: 0.9216597034450192, [(1, 65), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [112, 2, 0]]
** centroid: 5, normalized-entropy: 0.1274185117923586, [(1, 112), (2, 2)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 83, 16]]
** centroid: 6, normalized-entropy: 0.638161945314006, [(2, 83), (3, 16)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 96, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.9569899240557923, 0.9449869030707353, 0.9350008691326058, 0.9299928671186156, 0.9260098421775069, 0.9220118321914729, 0.9219698740656824, 0.9200128271984559, 0.9149988311664958, 0.9139918361475248, 0.9120228012443582, 0.9099908291525057, 0.8959768151384918, 0.8579657501813189, 0.8289457121792451, 0.791998585411759]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 2) => 0.9569899240557923
finished with 17
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9569899240557923, 0.9449869030707353, 0.9350008691326058, 0.9299928671186156, 0.9260098421775069, 0.9220118321914729, 0.9219698740656824, 0.9200128271984559, 0.9149988311664958, 0.9139918361475248, 0.9120228012443582, 0.9099908291525057, 0.8959768151384918, 0.8880047712383042, 0.8579657501813189, 0.8289457121792451, 0.791998585411759]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 2) => 0.9569899240557923
finished with 19
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.3334029227937082] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3334029227937082, 0.23205033793077767] ***
*** finished computation of 3 references, err: [Inf, 0.3334029227937082, 0.23205033793077767] ***
*** center 1: selecting labels [1] (freq >= 1) [from [223, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [164, 46, 0]]
** centroid: 2, normalized-entropy: 0.7584246665423688, [(1, 164), (2, 46)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [27, 183, 23]]
** centroid: 3, normalized-entropy: 0.6080711787560231, [(1, 27), (2, 183), (3, 23)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24592948426678218] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.24592948426678218, 0.23785121753432045] ***
*** finished computation of 3 references, err: [Inf, 0.24592948426678218, 0.23785121753432045] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [120, 74, 0]]
** centroid: 1, normalized-entropy: 0.9590550044058676, [(1, 120), (2, 74)]
*** center 2: selecting labels [1] (freq >= 1) [from [212, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [92, 144, 25]]
** centroid: 3, normalized-entropy: 0.8377348933802834, [(1, 92), (2, 144), (3, 25)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2927509382565407] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2927509382565407, 0.24331772256072895] ***
*** finished computation of 3 references, err: [Inf, 0.2927509382565407, 0.24331772256072895] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [164, 18, 0]]
** centroid: 1, normalized-entropy: 0.4655024490815131, [(1, 164), (2, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [200, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [48, 221, 16]]
** centroid: 3, normalized-entropy: 0.5997562791337504, [(1, 48), (2, 221), (3, 16)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.45480360782092755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45480360782092755, 0.34935616217301907] ***
*** finished computation of 3 references, err: [Inf, 0.45480360782092755, 0.34935616217301907] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [309, 13, 0]]
** centroid: 1, normalized-entropy: 0.24399826954851167, [(1, 309), (2, 13)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [21, 74, 22]]
** centroid: 2, normalized-entropy: 0.8303842373055019, [(1, 21), (2, 74), (3, 22)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [84, 142, 1]]
** centroid: 3, normalized-entropy: 0.623724791859649, [(1, 84), (2, 142), (3, 1)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38313196659384147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38313196659384147, 0.3134431901026232] ***
*** finished computation of 3 references, err: [Inf, 0.38313196659384147, 0.3134431901026232] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [175, 69, 0]]
** centroid: 1, normalized-entropy: 0.8592204027745617, [(1, 175), (2, 69)]
*** center 2: selecting labels [1] (freq >= 1) [from [174, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [75, 149, 25]]
** centroid: 3, normalized-entropy: 0.8187556788381535, [(1, 75), (2, 149), (3, 25)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.39525967943056234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39525967943056234, 0.33009947548205704] ***
*** finished computation of 3 references, err: [Inf, 0.39525967943056234, 0.33009947548205704] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [227, 2, 0]]
** centroid: 1, normalized-entropy: 0.07227581161206324, [(1, 227), (2, 2)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [80, 118, 16]]
** centroid: 2, normalized-entropy: 0.8100896503982562, [(1, 80), (2, 118), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [105, 119, 0]]
** centroid: 3, normalized-entropy: 0.9971803988942641, [(1, 105), (2, 119)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 19)
[0.9569899240557923, 0.9449869030707353, 0.9350008691326058, 0.9299928671186156, 0.9260098421775069, 0.9220118321914729, 0.9219698740656824, 0.9200128271984559, 0.9149988311664958, 0.9139918361475248, 0.9120228012443582, 0.9099908291525057, 0.8959768151384918, 0.8880047712383042, 0.8660007312701924, 0.8579657501813189, 0.8289457121792451, 0.791998585411759, 0.7839875803947661]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 2) => 0.9569899240557923
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.23290038110595196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23290038110595196, 0.194575760288164] ***
*** starting iteration: 2; err: [Inf, 0.23290038110595196, 0.194575760288164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23290038110595196, 0.194575760288164, 0.1739109313234221] ***
*** starting iteration: 3; err: [Inf, 0.23290038110595196, 0.194575760288164, 0.1739109313234221] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23290038110595196, 0.194575760288164, 0.1739109313234221, 0.15758212197804825] ***
*** starting iteration: 4; err: [Inf, 0.23290038110595196, 0.194575760288164, 0.1739109313234221, 0.15758212197804825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23290038110595196, 0.194575760288164, 0.1739109313234221, 0.15758212197804825, 0.14923397960280999] ***
*** starting iteration: 5; err: [Inf, 0.23290038110595196, 0.194575760288164, 0.1739109313234221, 0.15758212197804825, 0.14923397960280999] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23290038110595196, 0.194575760288164, 0.1739109313234221, 0.15758212197804825, 0.14923397960280999, 0.14662944347411394] ***
*** starting iteration: 6; err: [Inf, 0.23290038110595196, 0.194575760288164, 0.1739109313234221, 0.15758212197804825, 0.14923397960280999, 0.14662944347411394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23290038110595196, 0.194575760288164, 0.1739109313234221, 0.15758212197804825, 0.14923397960280999, 0.14662944347411394, 0.14552947080973536] ***
*** starting iteration: 7; err: [Inf, 0.23290038110595196, 0.194575760288164, 0.1739109313234221, 0.15758212197804825, 0.14923397960280999, 0.14662944347411394, 0.14552947080973536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23290038110595196, 0.194575760288164, 0.1739109313234221, 0.15758212197804825, 0.14923397960280999, 0.14662944347411394, 0.14552947080973536, 0.1452961242031306] ***
*** finished computation of 7 references, err: [Inf, 0.23290038110595196, 0.194575760288164, 0.1739109313234221, 0.15758212197804825, 0.14923397960280999, 0.14662944347411394, 0.14552947080973536, 0.1452961242031306] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 163, 32]]
** centroid: 1, normalized-entropy: 0.6440344720077356, [(2, 163), (3, 32)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 59, 0]]
** centroid: 2, normalized-entropy: 0.9928845281313805, [(1, 72), (2, 59)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [71, 71, 0]]
** centroid: 3, normalized-entropy: 1.0, [(1, 71), (2, 71)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [103, 50, 0]]
** centroid: 4, normalized-entropy: 0.9116207591069804, [(1, 103), (2, 50)]
*** center 5: selecting labels [1] (freq >= 2) [from [128, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [113, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [138, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2071875430494547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071875430494547, 0.1622131437752396] ***
*** starting iteration: 2; err: [Inf, 0.2071875430494547, 0.1622131437752396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071875430494547, 0.1622131437752396, 0.1559051309339702] ***
*** starting iteration: 3; err: [Inf, 0.2071875430494547, 0.1622131437752396, 0.1559051309339702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071875430494547, 0.1622131437752396, 0.1559051309339702, 0.1514665761096403] ***
*** starting iteration: 4; err: [Inf, 0.2071875430494547, 0.1622131437752396, 0.1559051309339702, 0.1514665761096403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071875430494547, 0.1622131437752396, 0.1559051309339702, 0.1514665761096403, 0.14934953863732517] ***
*** starting iteration: 5; err: [Inf, 0.2071875430494547, 0.1622131437752396, 0.1559051309339702, 0.1514665761096403, 0.14934953863732517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071875430494547, 0.1622131437752396, 0.1559051309339702, 0.1514665761096403, 0.14934953863732517, 0.1487611412052065] ***
*** finished computation of 7 references, err: [Inf, 0.2071875430494547, 0.1622131437752396, 0.1559051309339702, 0.1514665761096403, 0.14934953863732517, 0.1487611412052065] ***
*** center 1: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 7, 0]]
** centroid: 2, normalized-entropy: 0.4782501641071144, [(1, 61), (2, 7)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [94, 5, 0]]
** centroid: 3, normalized-entropy: 0.2885385136944103, [(1, 94), (2, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 21, 16]]
** centroid: 4, normalized-entropy: 0.9867867202680318, [(2, 21), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [38, 19, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 38), (2, 19)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [9, 73, 0]]
** centroid: 6, normalized-entropy: 0.49917983618854633, [(1, 9), (2, 73)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 50, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22755541299842297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22755541299842297, 0.15994511452689766] ***
*** starting iteration: 2; err: [Inf, 0.22755541299842297, 0.15994511452689766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22755541299842297, 0.15994511452689766, 0.15065795735735446] ***
*** starting iteration: 3; err: [Inf, 0.22755541299842297, 0.15994511452689766, 0.15065795735735446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22755541299842297, 0.15994511452689766, 0.15065795735735446, 0.14826137190219016] ***
*** starting iteration: 4; err: [Inf, 0.22755541299842297, 0.15994511452689766, 0.15065795735735446, 0.14826137190219016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22755541299842297, 0.15994511452689766, 0.15065795735735446, 0.14826137190219016, 0.14731772209424526] ***
*** finished computation of 7 references, err: [Inf, 0.22755541299842297, 0.15994511452689766, 0.15065795735735446, 0.14826137190219016, 0.14731772209424526] ***
*** center 1: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 45, 19]]
** centroid: 2, normalized-entropy: 0.877437311089633, [(2, 45), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [14, 45, 0]]
** centroid: 3, normalized-entropy: 0.7905013842153699, [(1, 14), (2, 45)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 53, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [90, 17, 0]]
** centroid: 6, normalized-entropy: 0.6316198184485629, [(1, 90), (2, 17)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [40, 6, 0]]
** centroid: 7, normalized-entropy: 0.5586293734521991, [(1, 40), (2, 6)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3250486045740545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3250486045740545, 0.18795741567201912] ***
*** starting iteration: 2; err: [Inf, 0.3250486045740545, 0.18795741567201912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286] ***
*** starting iteration: 3; err: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676] ***
*** starting iteration: 4; err: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676, 0.15663997858017684] ***
*** starting iteration: 5; err: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676, 0.15663997858017684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676, 0.15663997858017684, 0.15523660641163586] ***
*** starting iteration: 6; err: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676, 0.15663997858017684, 0.15523660641163586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676, 0.15663997858017684, 0.15523660641163586, 0.15400986574962736] ***
*** starting iteration: 7; err: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676, 0.15663997858017684, 0.15523660641163586, 0.15400986574962736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676, 0.15663997858017684, 0.15523660641163586, 0.15400986574962736, 0.1526665758509189] ***
*** starting iteration: 8; err: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676, 0.15663997858017684, 0.15523660641163586, 0.15400986574962736, 0.1526665758509189] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676, 0.15663997858017684, 0.15523660641163586, 0.15400986574962736, 0.1526665758509189, 0.15102806299645455] ***
*** starting iteration: 9; err: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676, 0.15663997858017684, 0.15523660641163586, 0.15400986574962736, 0.1526665758509189, 0.15102806299645455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676, 0.15663997858017684, 0.15523660641163586, 0.15400986574962736, 0.1526665758509189, 0.15102806299645455, 0.14934442870877684] ***
*** starting iteration: 10; err: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676, 0.15663997858017684, 0.15523660641163586, 0.15400986574962736, 0.1526665758509189, 0.15102806299645455, 0.14934442870877684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676, 0.15663997858017684, 0.15523660641163586, 0.15400986574962736, 0.1526665758509189, 0.15102806299645455, 0.14934442870877684, 0.14771335298940538] ***
*** finished computation of 7 references, err: [Inf, 0.3250486045740545, 0.18795741567201912, 0.16674917398486286, 0.15918799975700676, 0.15663997858017684, 0.15523660641163586, 0.15400986574962736, 0.1526665758509189, 0.15102806299645455, 0.14934442870877684, 0.14771335298940538] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [82, 9, 0]]
** centroid: 1, normalized-entropy: 0.4655024490815131, [(1, 82), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [32, 30, 0]]
** centroid: 2, normalized-entropy: 0.9992492479956566, [(1, 32), (2, 30)]
*** center 3: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 19, 18]]
** centroid: 4, normalized-entropy: 0.9994730201859837, [(2, 19), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [4, 63, 0]]
** centroid: 5, normalized-entropy: 0.32625881462949274, [(1, 4), (2, 63)]
*** center 6: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 49, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2190833315514028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2190833315514028, 0.16501572283636778] ***
*** starting iteration: 2; err: [Inf, 0.2190833315514028, 0.16501572283636778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2190833315514028, 0.16501572283636778, 0.15860106249339878] ***
*** starting iteration: 3; err: [Inf, 0.2190833315514028, 0.16501572283636778, 0.15860106249339878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2190833315514028, 0.16501572283636778, 0.15860106249339878, 0.153454817449674] ***
*** starting iteration: 4; err: [Inf, 0.2190833315514028, 0.16501572283636778, 0.15860106249339878, 0.153454817449674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2190833315514028, 0.16501572283636778, 0.15860106249339878, 0.153454817449674, 0.1505025845747441] ***
*** starting iteration: 5; err: [Inf, 0.2190833315514028, 0.16501572283636778, 0.15860106249339878, 0.153454817449674, 0.1505025845747441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2190833315514028, 0.16501572283636778, 0.15860106249339878, 0.153454817449674, 0.1505025845747441, 0.14948784267343582] ***
*** starting iteration: 6; err: [Inf, 0.2190833315514028, 0.16501572283636778, 0.15860106249339878, 0.153454817449674, 0.1505025845747441, 0.14948784267343582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2190833315514028, 0.16501572283636778, 0.15860106249339878, 0.153454817449674, 0.1505025845747441, 0.14948784267343582, 0.14881146405916662] ***
*** finished computation of 7 references, err: [Inf, 0.2190833315514028, 0.16501572283636778, 0.15860106249339878, 0.153454817449674, 0.1505025845747441, 0.14948784267343582, 0.14881146405916662] ***
*** center 1: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [32, 39, 0]]
** centroid: 2, normalized-entropy: 0.9929768866085175, [(1, 32), (2, 39)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 68, 16]]
** centroid: 3, normalized-entropy: 0.7024665512903904, [(2, 68), (3, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [86, 22, 0]]
** centroid: 5, normalized-entropy: 0.7292739418449411, [(1, 86), (2, 22)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [10, 39, 0]]
** centroid: 6, normalized-entropy: 0.7300166301457938, [(1, 10), (2, 39)]
*** center 7: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2018769033998251] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2018769033998251, 0.17151895133964717] ***
*** starting iteration: 2; err: [Inf, 0.2018769033998251, 0.17151895133964717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2018769033998251, 0.17151895133964717, 0.15869218803849072] ***
*** starting iteration: 3; err: [Inf, 0.2018769033998251, 0.17151895133964717, 0.15869218803849072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2018769033998251, 0.17151895133964717, 0.15869218803849072, 0.15355016970448196] ***
*** starting iteration: 4; err: [Inf, 0.2018769033998251, 0.17151895133964717, 0.15869218803849072, 0.15355016970448196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2018769033998251, 0.17151895133964717, 0.15869218803849072, 0.15355016970448196, 0.14967467240802942] ***
*** starting iteration: 5; err: [Inf, 0.2018769033998251, 0.17151895133964717, 0.15869218803849072, 0.15355016970448196, 0.14967467240802942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2018769033998251, 0.17151895133964717, 0.15869218803849072, 0.15355016970448196, 0.14967467240802942, 0.1480579257523641] ***
*** starting iteration: 6; err: [Inf, 0.2018769033998251, 0.17151895133964717, 0.15869218803849072, 0.15355016970448196, 0.14967467240802942, 0.1480579257523641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2018769033998251, 0.17151895133964717, 0.15869218803849072, 0.15355016970448196, 0.14967467240802942, 0.1480579257523641, 0.1472149148080498] ***
*** finished computation of 7 references, err: [Inf, 0.2018769033998251, 0.17151895133964717, 0.15869218803849072, 0.15355016970448196, 0.14967467240802942, 0.1480579257523641, 0.1472149148080498] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [77, 2, 0]]
** centroid: 1, normalized-entropy: 0.17033057560105982, [(1, 77), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 45, 13]]
** centroid: 2, normalized-entropy: 0.7676515870125797, [(2, 45), (3, 13)]
*** center 3: selecting labels [2] (freq >= 2) [from [1, 57, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [20, 51, 0]]
** centroid: 5, normalized-entropy: 0.8577435372751958, [(1, 20), (2, 51)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [57, 4, 0]]
** centroid: 6, normalized-entropy: 0.34918437350730797, [(1, 57), (2, 4)]
*** center 7: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2580790606029332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2580790606029332, 0.18329005893599243] ***
*** starting iteration: 2; err: [Inf, 0.2580790606029332, 0.18329005893599243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2580790606029332, 0.18329005893599243, 0.16301862683147192] ***
*** starting iteration: 3; err: [Inf, 0.2580790606029332, 0.18329005893599243, 0.16301862683147192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2580790606029332, 0.18329005893599243, 0.16301862683147192, 0.15464644550532103] ***
*** starting iteration: 4; err: [Inf, 0.2580790606029332, 0.18329005893599243, 0.16301862683147192, 0.15464644550532103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2580790606029332, 0.18329005893599243, 0.16301862683147192, 0.15464644550532103, 0.1509129535611719] ***
*** starting iteration: 5; err: [Inf, 0.2580790606029332, 0.18329005893599243, 0.16301862683147192, 0.15464644550532103, 0.1509129535611719] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2580790606029332, 0.18329005893599243, 0.16301862683147192, 0.15464644550532103, 0.1509129535611719, 0.1488767616096884] ***
*** starting iteration: 6; err: [Inf, 0.2580790606029332, 0.18329005893599243, 0.16301862683147192, 0.15464644550532103, 0.1509129535611719, 0.1488767616096884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2580790606029332, 0.18329005893599243, 0.16301862683147192, 0.15464644550532103, 0.1509129535611719, 0.1488767616096884, 0.14787860435992478] ***
*** finished computation of 7 references, err: [Inf, 0.2580790606029332, 0.18329005893599243, 0.16301862683147192, 0.15464644550532103, 0.1509129535611719, 0.1488767616096884, 0.14787860435992478] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 44, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [6, 58, 0]]
** centroid: 3, normalized-entropy: 0.44886448872302936, [(1, 6), (2, 58)]
*** center 4: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 61, 15]]
** centroid: 5, normalized-entropy: 0.7166336117927455, [(2, 61), (3, 15)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [70, 19, 0]]
** centroid: 6, normalized-entropy: 0.748088105780153, [(1, 70), (2, 19)]
*** center 7: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1871394077911973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1871394077911973, 0.15771918253041803] ***
*** starting iteration: 2; err: [Inf, 0.1871394077911973, 0.15771918253041803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1871394077911973, 0.15771918253041803, 0.1535486698150635] ***
*** starting iteration: 3; err: [Inf, 0.1871394077911973, 0.15771918253041803, 0.1535486698150635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1871394077911973, 0.15771918253041803, 0.1535486698150635, 0.15082936349697412] ***
*** starting iteration: 4; err: [Inf, 0.1871394077911973, 0.15771918253041803, 0.1535486698150635, 0.15082936349697412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1871394077911973, 0.15771918253041803, 0.1535486698150635, 0.15082936349697412, 0.14829700845945626] ***
*** starting iteration: 5; err: [Inf, 0.1871394077911973, 0.15771918253041803, 0.1535486698150635, 0.15082936349697412, 0.14829700845945626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1871394077911973, 0.15771918253041803, 0.1535486698150635, 0.15082936349697412, 0.14829700845945626, 0.14668936874670907] ***
*** starting iteration: 6; err: [Inf, 0.1871394077911973, 0.15771918253041803, 0.1535486698150635, 0.15082936349697412, 0.14829700845945626, 0.14668936874670907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1871394077911973, 0.15771918253041803, 0.1535486698150635, 0.15082936349697412, 0.14829700845945626, 0.14668936874670907, 0.14561605642177164] ***
*** starting iteration: 7; err: [Inf, 0.1871394077911973, 0.15771918253041803, 0.1535486698150635, 0.15082936349697412, 0.14829700845945626, 0.14668936874670907, 0.14561605642177164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1871394077911973, 0.15771918253041803, 0.1535486698150635, 0.15082936349697412, 0.14829700845945626, 0.14668936874670907, 0.14561605642177164, 0.1447290759771131] ***
*** finished computation of 7 references, err: [Inf, 0.1871394077911973, 0.15771918253041803, 0.1535486698150635, 0.15082936349697412, 0.14829700845945626, 0.14668936874670907, 0.14561605642177164, 0.1447290759771131] ***
*** center 1: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [32, 37, 0]]
** centroid: 2, normalized-entropy: 0.9962088839046743, [(1, 32), (2, 37)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [50, 25, 0]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(1, 50), (2, 25)]
*** center 4: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 53, 14]]
** centroid: 5, normalized-entropy: 0.7394809367166378, [(2, 53), (3, 14)]
*** center 6: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 60, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18557267146557568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18557267146557568, 0.1545242517068982] ***
*** starting iteration: 2; err: [Inf, 0.18557267146557568, 0.1545242517068982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18557267146557568, 0.1545242517068982, 0.15019714056141675] ***
*** starting iteration: 3; err: [Inf, 0.18557267146557568, 0.1545242517068982, 0.15019714056141675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18557267146557568, 0.1545242517068982, 0.15019714056141675, 0.1476745171044022] ***
*** starting iteration: 4; err: [Inf, 0.18557267146557568, 0.1545242517068982, 0.15019714056141675, 0.1476745171044022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18557267146557568, 0.1545242517068982, 0.15019714056141675, 0.1476745171044022, 0.145543988507241] ***
*** starting iteration: 5; err: [Inf, 0.18557267146557568, 0.1545242517068982, 0.15019714056141675, 0.1476745171044022, 0.145543988507241] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18557267146557568, 0.1545242517068982, 0.15019714056141675, 0.1476745171044022, 0.145543988507241, 0.14455416428856552] ***
*** finished computation of 7 references, err: [Inf, 0.18557267146557568, 0.1545242517068982, 0.15019714056141675, 0.1476745171044022, 0.145543988507241, 0.14455416428856552] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 84, 14]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 84), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [52, 29, 0]]
** centroid: 4, normalized-entropy: 0.9410313090323237, [(1, 52), (2, 29)]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [32, 25, 0]]
** centroid: 6, normalized-entropy: 0.9890934397021431, [(1, 32), (2, 25)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [26, 37, 0]]
** centroid: 7, normalized-entropy: 0.9778956822310348, [(1, 26), (2, 37)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19247007180191578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19247007180191578, 0.15435877396538852] ***
*** starting iteration: 2; err: [Inf, 0.19247007180191578, 0.15435877396538852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19247007180191578, 0.15435877396538852, 0.147394302662462] ***
*** starting iteration: 3; err: [Inf, 0.19247007180191578, 0.15435877396538852, 0.147394302662462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19247007180191578, 0.15435877396538852, 0.147394302662462, 0.14473225569445639] ***
*** starting iteration: 4; err: [Inf, 0.19247007180191578, 0.15435877396538852, 0.147394302662462, 0.14473225569445639] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19247007180191578, 0.15435877396538852, 0.147394302662462, 0.14473225569445639, 0.14358839158480988] ***
*** starting iteration: 5; err: [Inf, 0.19247007180191578, 0.15435877396538852, 0.147394302662462, 0.14473225569445639, 0.14358839158480988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19247007180191578, 0.15435877396538852, 0.147394302662462, 0.14473225569445639, 0.14358839158480988, 0.14279172951728106] ***
*** finished computation of 7 references, err: [Inf, 0.19247007180191578, 0.15435877396538852, 0.147394302662462, 0.14473225569445639, 0.14358839158480988, 0.14279172951728106] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 59, 12]]
** centroid: 1, normalized-entropy: 0.6554444445609846, [(2, 59), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [23, 59, 0]]
** centroid: 3, normalized-entropy: 0.8561146277685725, [(1, 23), (2, 59)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [59, 24, 0]]
** centroid: 4, normalized-entropy: 0.8676293117125105, [(1, 59), (2, 24)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [54, 21, 0]]
** centroid: 5, normalized-entropy: 0.8554508105601307, [(1, 54), (2, 21)]
*** center 6: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24277355298772454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24277355298772454, 0.18498557690158487] ***
*** starting iteration: 2; err: [Inf, 0.24277355298772454, 0.18498557690158487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24277355298772454, 0.18498557690158487, 0.16948792641144245] ***
*** starting iteration: 3; err: [Inf, 0.24277355298772454, 0.18498557690158487, 0.16948792641144245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24277355298772454, 0.18498557690158487, 0.16948792641144245, 0.1623187652900815] ***
*** starting iteration: 4; err: [Inf, 0.24277355298772454, 0.18498557690158487, 0.16948792641144245, 0.1623187652900815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24277355298772454, 0.18498557690158487, 0.16948792641144245, 0.1623187652900815, 0.15688648653402926] ***
*** starting iteration: 5; err: [Inf, 0.24277355298772454, 0.18498557690158487, 0.16948792641144245, 0.1623187652900815, 0.15688648653402926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24277355298772454, 0.18498557690158487, 0.16948792641144245, 0.1623187652900815, 0.15688648653402926, 0.15407454101275653] ***
*** starting iteration: 6; err: [Inf, 0.24277355298772454, 0.18498557690158487, 0.16948792641144245, 0.1623187652900815, 0.15688648653402926, 0.15407454101275653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24277355298772454, 0.18498557690158487, 0.16948792641144245, 0.1623187652900815, 0.15688648653402926, 0.15407454101275653, 0.151340123007074] ***
*** starting iteration: 7; err: [Inf, 0.24277355298772454, 0.18498557690158487, 0.16948792641144245, 0.1623187652900815, 0.15688648653402926, 0.15407454101275653, 0.151340123007074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24277355298772454, 0.18498557690158487, 0.16948792641144245, 0.1623187652900815, 0.15688648653402926, 0.15407454101275653, 0.151340123007074, 0.14988825087901206] ***
*** starting iteration: 8; err: [Inf, 0.24277355298772454, 0.18498557690158487, 0.16948792641144245, 0.1623187652900815, 0.15688648653402926, 0.15407454101275653, 0.151340123007074, 0.14988825087901206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24277355298772454, 0.18498557690158487, 0.16948792641144245, 0.1623187652900815, 0.15688648653402926, 0.15407454101275653, 0.151340123007074, 0.14988825087901206, 0.14935114461462945] ***
*** finished computation of 7 references, err: [Inf, 0.24277355298772454, 0.18498557690158487, 0.16948792641144245, 0.1623187652900815, 0.15688648653402926, 0.15407454101275653, 0.151340123007074, 0.14988825087901206, 0.14935114461462945] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [46, 24, 0]]
** centroid: 1, normalized-entropy: 0.927526588431676, [(1, 46), (2, 24)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 103, 18]]
** centroid: 2, normalized-entropy: 0.6067293172263869, [(2, 103), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [77, 8, 0]]
** centroid: 3, normalized-entropy: 0.4500666580964382, [(1, 77), (2, 8)]
*** center 4: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [52, 6, 0]]
** centroid: 5, normalized-entropy: 0.47983202361612853, [(1, 52), (2, 6)]
*** center 6: selecting labels [1] (freq >= 2) [from [41, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [40, 29, 0]]
** centroid: 7, normalized-entropy: 0.9815886212101388, [(1, 40), (2, 29)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19234909060643987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19234909060643987, 0.17223558687977492] ***
*** starting iteration: 2; err: [Inf, 0.19234909060643987, 0.17223558687977492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19234909060643987, 0.17223558687977492, 0.16068133026733994] ***
*** starting iteration: 3; err: [Inf, 0.19234909060643987, 0.17223558687977492, 0.16068133026733994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19234909060643987, 0.17223558687977492, 0.16068133026733994, 0.1544272106657736] ***
*** starting iteration: 4; err: [Inf, 0.19234909060643987, 0.17223558687977492, 0.16068133026733994, 0.1544272106657736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19234909060643987, 0.17223558687977492, 0.16068133026733994, 0.1544272106657736, 0.15135740218497812] ***
*** starting iteration: 5; err: [Inf, 0.19234909060643987, 0.17223558687977492, 0.16068133026733994, 0.1544272106657736, 0.15135740218497812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19234909060643987, 0.17223558687977492, 0.16068133026733994, 0.1544272106657736, 0.15135740218497812, 0.14873067278880625] ***
*** starting iteration: 6; err: [Inf, 0.19234909060643987, 0.17223558687977492, 0.16068133026733994, 0.1544272106657736, 0.15135740218497812, 0.14873067278880625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19234909060643987, 0.17223558687977492, 0.16068133026733994, 0.1544272106657736, 0.15135740218497812, 0.14873067278880625, 0.14695280646532774] ***
*** starting iteration: 7; err: [Inf, 0.19234909060643987, 0.17223558687977492, 0.16068133026733994, 0.1544272106657736, 0.15135740218497812, 0.14873067278880625, 0.14695280646532774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19234909060643987, 0.17223558687977492, 0.16068133026733994, 0.1544272106657736, 0.15135740218497812, 0.14873067278880625, 0.14695280646532774, 0.14640373137593268] ***
*** finished computation of 7 references, err: [Inf, 0.19234909060643987, 0.17223558687977492, 0.16068133026733994, 0.1544272106657736, 0.15135740218497812, 0.14873067278880625, 0.14695280646532774, 0.14640373137593268] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 47, 14]]
** centroid: 1, normalized-entropy: 0.7771529943226336, [(2, 47), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [64, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [58, 11, 0]]
** centroid: 5, normalized-entropy: 0.6329208984823799, [(1, 58), (2, 11)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [24, 59, 0]]
** centroid: 6, normalized-entropy: 0.8676293117125105, [(1, 24), (2, 59)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [52, 4, 0]]
** centroid: 7, normalized-entropy: 0.3712323266408756, [(1, 52), (2, 4)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25786056282743813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25786056282743813, 0.17678280871361493] ***
*** starting iteration: 2; err: [Inf, 0.25786056282743813, 0.17678280871361493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25786056282743813, 0.17678280871361493, 0.1623099844045937] ***
*** starting iteration: 3; err: [Inf, 0.25786056282743813, 0.17678280871361493, 0.1623099844045937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25786056282743813, 0.17678280871361493, 0.1623099844045937, 0.1567191335335374] ***
*** starting iteration: 4; err: [Inf, 0.25786056282743813, 0.17678280871361493, 0.1623099844045937, 0.1567191335335374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25786056282743813, 0.17678280871361493, 0.1623099844045937, 0.1567191335335374, 0.15474813042208552] ***
*** starting iteration: 5; err: [Inf, 0.25786056282743813, 0.17678280871361493, 0.1623099844045937, 0.1567191335335374, 0.15474813042208552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25786056282743813, 0.17678280871361493, 0.1623099844045937, 0.1567191335335374, 0.15474813042208552, 0.15347858285158872] ***
*** starting iteration: 6; err: [Inf, 0.25786056282743813, 0.17678280871361493, 0.1623099844045937, 0.1567191335335374, 0.15474813042208552, 0.15347858285158872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25786056282743813, 0.17678280871361493, 0.1623099844045937, 0.1567191335335374, 0.15474813042208552, 0.15347858285158872, 0.1525140668535605] ***
*** finished computation of 7 references, err: [Inf, 0.25786056282743813, 0.17678280871361493, 0.1623099844045937, 0.1567191335335374, 0.15474813042208552, 0.15347858285158872, 0.1525140668535605] ***
*** center 1: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [30, 26, 0]]
** centroid: 3, normalized-entropy: 0.9963165195589622, [(1, 30), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [3, 76, 0]]
** centroid: 4, normalized-entropy: 0.23292785546981223, [(1, 3), (2, 76)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 41, 19]]
** centroid: 5, normalized-entropy: 0.9007196798623592, [(2, 41), (3, 19)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [76, 31, 0]]
** centroid: 6, normalized-entropy: 0.8683587934693187, [(1, 76), (2, 31)]
*** center 7: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2679112499319017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2679112499319017, 0.18234695407748222] ***
*** starting iteration: 2; err: [Inf, 0.2679112499319017, 0.18234695407748222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2679112499319017, 0.18234695407748222, 0.15731587341986597] ***
*** starting iteration: 3; err: [Inf, 0.2679112499319017, 0.18234695407748222, 0.15731587341986597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2679112499319017, 0.18234695407748222, 0.15731587341986597, 0.14955428369762375] ***
*** starting iteration: 4; err: [Inf, 0.2679112499319017, 0.18234695407748222, 0.15731587341986597, 0.14955428369762375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2679112499319017, 0.18234695407748222, 0.15731587341986597, 0.14955428369762375, 0.146695452619344] ***
*** starting iteration: 5; err: [Inf, 0.2679112499319017, 0.18234695407748222, 0.15731587341986597, 0.14955428369762375, 0.146695452619344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2679112499319017, 0.18234695407748222, 0.15731587341986597, 0.14955428369762375, 0.146695452619344, 0.14475168759003282] ***
*** starting iteration: 6; err: [Inf, 0.2679112499319017, 0.18234695407748222, 0.15731587341986597, 0.14955428369762375, 0.146695452619344, 0.14475168759003282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2679112499319017, 0.18234695407748222, 0.15731587341986597, 0.14955428369762375, 0.146695452619344, 0.14475168759003282, 0.14417233143001795] ***
*** finished computation of 7 references, err: [Inf, 0.2679112499319017, 0.18234695407748222, 0.15731587341986597, 0.14955428369762375, 0.146695452619344, 0.14475168759003282, 0.14417233143001795] ***
*** center 1: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [16, 52, 0]]
** centroid: 2, normalized-entropy: 0.787126586201269, [(1, 16), (2, 52)]
*** center 3: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [7, 44, 0]]
** centroid: 5, normalized-entropy: 0.577004250315725, [(1, 7), (2, 44)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [42, 25, 0]]
** centroid: 6, normalized-entropy: 0.9530483471581301, [(1, 42), (2, 25)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 58, 19]]
** centroid: 7, normalized-entropy: 0.8060914696192223, [(2, 58), (3, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19912778927199543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19912778927199543, 0.15233880619425327] ***
*** starting iteration: 2; err: [Inf, 0.19912778927199543, 0.15233880619425327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19912778927199543, 0.15233880619425327, 0.14940434647724032] ***
*** starting iteration: 3; err: [Inf, 0.19912778927199543, 0.15233880619425327, 0.14940434647724032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19912778927199543, 0.15233880619425327, 0.14940434647724032, 0.14856688065640627] ***
*** finished computation of 7 references, err: [Inf, 0.19912778927199543, 0.15233880619425327, 0.14940434647724032, 0.14856688065640627] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [29, 38, 0]]
** centroid: 1, normalized-entropy: 0.9869444983748495, [(1, 29), (2, 38)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 81, 14]]
** centroid: 2, normalized-entropy: 0.6032154068313579, [(2, 81), (3, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [34, 38, 0]]
** centroid: 5, normalized-entropy: 0.9977724720899819, [(1, 34), (2, 38)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [31, 29, 0]]
** centroid: 6, normalized-entropy: 0.99919835426364, [(1, 31), (2, 29)]
*** center 7: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20257955801812932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20257955801812932, 0.1568830734724179] ***
*** starting iteration: 2; err: [Inf, 0.20257955801812932, 0.1568830734724179] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20257955801812932, 0.1568830734724179, 0.14795374485035426] ***
*** starting iteration: 3; err: [Inf, 0.20257955801812932, 0.1568830734724179, 0.14795374485035426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20257955801812932, 0.1568830734724179, 0.14795374485035426, 0.14734895451925695] ***
*** finished computation of 7 references, err: [Inf, 0.20257955801812932, 0.1568830734724179, 0.14795374485035426, 0.14734895451925695] ***
*** center 1: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [77, 25, 0]]
** centroid: 2, normalized-entropy: 0.8034158480707552, [(1, 77), (2, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [44, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 91, 12]]
** centroid: 4, normalized-entropy: 0.519230019739187, [(2, 91), (3, 12)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [40, 27, 0]]
** centroid: 5, normalized-entropy: 0.9726699911457106, [(1, 40), (2, 27)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [21, 33, 0]]
** centroid: 6, normalized-entropy: 0.9640787648082293, [(1, 21), (2, 33)]
*** center 7: selecting labels [1] (freq >= 2) [from [42, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17732512718625368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17732512718625368, 0.149839693444781] ***
*** starting iteration: 2; err: [Inf, 0.17732512718625368, 0.149839693444781] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17732512718625368, 0.149839693444781, 0.14669599107466638] ***
*** starting iteration: 3; err: [Inf, 0.17732512718625368, 0.149839693444781, 0.14669599107466638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17732512718625368, 0.149839693444781, 0.14669599107466638, 0.14611314216908067] ***
*** finished computation of 7 references, err: [Inf, 0.17732512718625368, 0.149839693444781, 0.14669599107466638, 0.14611314216908067] ***
*** center 1: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [15, 36, 0]]
** centroid: 3, normalized-entropy: 0.8739810481273581, [(1, 15), (2, 36)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 27, 0]]
** centroid: 4, normalized-entropy: 0.9726699911457106, [(1, 40), (2, 27)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [31, 21, 0]]
** centroid: 5, normalized-entropy: 0.9731560354421095, [(1, 31), (2, 21)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 83, 16]]
** centroid: 6, normalized-entropy: 0.638161945314006, [(2, 83), (3, 16)]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22297951662912965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22297951662912965, 0.16139266047533601] ***
*** starting iteration: 2; err: [Inf, 0.22297951662912965, 0.16139266047533601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22297951662912965, 0.16139266047533601, 0.1507777131535113] ***
*** starting iteration: 3; err: [Inf, 0.22297951662912965, 0.16139266047533601, 0.1507777131535113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22297951662912965, 0.16139266047533601, 0.1507777131535113, 0.14670937214232982] ***
*** starting iteration: 4; err: [Inf, 0.22297951662912965, 0.16139266047533601, 0.1507777131535113, 0.14670937214232982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22297951662912965, 0.16139266047533601, 0.1507777131535113, 0.14670937214232982, 0.14506291289255022] ***
*** starting iteration: 5; err: [Inf, 0.22297951662912965, 0.16139266047533601, 0.1507777131535113, 0.14670937214232982, 0.14506291289255022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22297951662912965, 0.16139266047533601, 0.1507777131535113, 0.14670937214232982, 0.14506291289255022, 0.14446994832530619] ***
*** finished computation of 7 references, err: [Inf, 0.22297951662912965, 0.16139266047533601, 0.1507777131535113, 0.14670937214232982, 0.14506291289255022, 0.14446994832530619] ***
*** center 1: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [3, 46, 0]]
** centroid: 3, normalized-entropy: 0.3322866302216152, [(1, 3), (2, 46)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [31, 40, 0]]
** centroid: 4, normalized-entropy: 0.9883779727795042, [(1, 31), (2, 40)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 61, 17]]
** centroid: 5, normalized-entropy: 0.7564041945982506, [(2, 61), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [53, 21, 0]]
** centroid: 6, normalized-entropy: 0.8605553930586318, [(1, 53), (2, 21)]
*** center 7: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23387696589669213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23387696589669213, 0.18416489311680198] ***
*** starting iteration: 2; err: [Inf, 0.23387696589669213, 0.18416489311680198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23387696589669213, 0.18416489311680198, 0.1674882448874414] ***
*** starting iteration: 3; err: [Inf, 0.23387696589669213, 0.18416489311680198, 0.1674882448874414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23387696589669213, 0.18416489311680198, 0.1674882448874414, 0.15829828850319608] ***
*** starting iteration: 4; err: [Inf, 0.23387696589669213, 0.18416489311680198, 0.1674882448874414, 0.15829828850319608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23387696589669213, 0.18416489311680198, 0.1674882448874414, 0.15829828850319608, 0.15416175899654627] ***
*** starting iteration: 5; err: [Inf, 0.23387696589669213, 0.18416489311680198, 0.1674882448874414, 0.15829828850319608, 0.15416175899654627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23387696589669213, 0.18416489311680198, 0.1674882448874414, 0.15829828850319608, 0.15416175899654627, 0.15199606073088945] ***
*** starting iteration: 6; err: [Inf, 0.23387696589669213, 0.18416489311680198, 0.1674882448874414, 0.15829828850319608, 0.15416175899654627, 0.15199606073088945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23387696589669213, 0.18416489311680198, 0.1674882448874414, 0.15829828850319608, 0.15416175899654627, 0.15199606073088945, 0.15059775329194963] ***
*** starting iteration: 7; err: [Inf, 0.23387696589669213, 0.18416489311680198, 0.1674882448874414, 0.15829828850319608, 0.15416175899654627, 0.15199606073088945, 0.15059775329194963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23387696589669213, 0.18416489311680198, 0.1674882448874414, 0.15829828850319608, 0.15416175899654627, 0.15199606073088945, 0.15059775329194963, 0.1498681644499302] ***
*** finished computation of 7 references, err: [Inf, 0.23387696589669213, 0.18416489311680198, 0.1674882448874414, 0.15829828850319608, 0.15416175899654627, 0.15199606073088945, 0.15059775329194963, 0.1498681644499302] ***
*** center 1: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 48, 17]]
** centroid: 2, normalized-entropy: 0.829059069399666, [(2, 48), (3, 17)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 60, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [81, 22, 0]]
** centroid: 5, normalized-entropy: 0.7482932859824888, [(1, 81), (2, 22)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [58, 8, 0]]
** centroid: 6, normalized-entropy: 0.5328350630342235, [(1, 58), (2, 8)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [22, 44, 0]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(1, 22), (2, 44)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2525661231447011] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2525661231447011, 0.19639322887919844] ***
*** starting iteration: 2; err: [Inf, 0.2525661231447011, 0.19639322887919844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443] ***
*** starting iteration: 3; err: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624] ***
*** starting iteration: 4; err: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624, 0.1578165894646663] ***
*** starting iteration: 5; err: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624, 0.1578165894646663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624, 0.1578165894646663, 0.1544591044522822] ***
*** starting iteration: 6; err: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624, 0.1578165894646663, 0.1544591044522822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624, 0.1578165894646663, 0.1544591044522822, 0.15300092732906342] ***
*** starting iteration: 7; err: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624, 0.1578165894646663, 0.1544591044522822, 0.15300092732906342] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624, 0.1578165894646663, 0.1544591044522822, 0.15300092732906342, 0.15157132617989555] ***
*** starting iteration: 8; err: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624, 0.1578165894646663, 0.1544591044522822, 0.15300092732906342, 0.15157132617989555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624, 0.1578165894646663, 0.1544591044522822, 0.15300092732906342, 0.15157132617989555, 0.14941424879897386] ***
*** starting iteration: 9; err: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624, 0.1578165894646663, 0.1544591044522822, 0.15300092732906342, 0.15157132617989555, 0.14941424879897386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624, 0.1578165894646663, 0.1544591044522822, 0.15300092732906342, 0.15157132617989555, 0.14941424879897386, 0.14736279668565838] ***
*** starting iteration: 10; err: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624, 0.1578165894646663, 0.1544591044522822, 0.15300092732906342, 0.15157132617989555, 0.14941424879897386, 0.14736279668565838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624, 0.1578165894646663, 0.1544591044522822, 0.15300092732906342, 0.15157132617989555, 0.14941424879897386, 0.14736279668565838, 0.1462622296642512] ***
*** finished computation of 7 references, err: [Inf, 0.2525661231447011, 0.19639322887919844, 0.1733727323622443, 0.1635790510326624, 0.1578165894646663, 0.1544591044522822, 0.15300092732906342, 0.15157132617989555, 0.14941424879897386, 0.14736279668565838, 0.1462622296642512] ***
*** center 1: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 89, 15]]
** centroid: 2, normalized-entropy: 0.5952124653513116, [(2, 89), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [65, 4, 0]]
** centroid: 3, normalized-entropy: 0.3193373865339728, [(1, 65), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 34, 0]]
** centroid: 4, normalized-entropy: 0.9409217747114994, [(1, 61), (2, 34)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [43, 21, 0]]
** centroid: 5, normalized-entropy: 0.912999213585247, [(1, 43), (2, 21)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [44, 28, 0]]
** centroid: 6, normalized-entropy: 0.9640787648082293, [(1, 44), (2, 28)]
*** center 7: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24783584604598582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24783584604598582, 0.18499509153002874] ***
*** starting iteration: 2; err: [Inf, 0.24783584604598582, 0.18499509153002874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24783584604598582, 0.18499509153002874, 0.169072870711796] ***
*** starting iteration: 3; err: [Inf, 0.24783584604598582, 0.18499509153002874, 0.169072870711796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24783584604598582, 0.18499509153002874, 0.169072870711796, 0.15667523593176155] ***
*** starting iteration: 4; err: [Inf, 0.24783584604598582, 0.18499509153002874, 0.169072870711796, 0.15667523593176155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24783584604598582, 0.18499509153002874, 0.169072870711796, 0.15667523593176155, 0.15082916893251241] ***
*** starting iteration: 5; err: [Inf, 0.24783584604598582, 0.18499509153002874, 0.169072870711796, 0.15667523593176155, 0.15082916893251241] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24783584604598582, 0.18499509153002874, 0.169072870711796, 0.15667523593176155, 0.15082916893251241, 0.14749172232113777] ***
*** starting iteration: 6; err: [Inf, 0.24783584604598582, 0.18499509153002874, 0.169072870711796, 0.15667523593176155, 0.15082916893251241, 0.14749172232113777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24783584604598582, 0.18499509153002874, 0.169072870711796, 0.15667523593176155, 0.15082916893251241, 0.14749172232113777, 0.14584124230779708] ***
*** starting iteration: 7; err: [Inf, 0.24783584604598582, 0.18499509153002874, 0.169072870711796, 0.15667523593176155, 0.15082916893251241, 0.14749172232113777, 0.14584124230779708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24783584604598582, 0.18499509153002874, 0.169072870711796, 0.15667523593176155, 0.15082916893251241, 0.14749172232113777, 0.14584124230779708, 0.1449153303653002] ***
*** finished computation of 7 references, err: [Inf, 0.24783584604598582, 0.18499509153002874, 0.169072870711796, 0.15667523593176155, 0.15082916893251241, 0.14749172232113777, 0.14584124230779708, 0.1449153303653002] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 57, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [43, 26, 0]]
** centroid: 3, normalized-entropy: 0.9557589912150007, [(1, 43), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [9, 45, 0]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(1, 9), (2, 45)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [91, 6, 0]]
** centroid: 5, normalized-entropy: 0.3347676126777638, [(1, 91), (2, 6)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 37, 14]]
** centroid: 6, normalized-entropy: 0.8478617451660525, [(2, 37), (3, 14)]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2081288406518288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2081288406518288, 0.1577159450510517] ***
*** starting iteration: 2; err: [Inf, 0.2081288406518288, 0.1577159450510517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2081288406518288, 0.1577159450510517, 0.1472251082835719] ***
*** starting iteration: 3; err: [Inf, 0.2081288406518288, 0.1577159450510517, 0.1472251082835719] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2081288406518288, 0.1577159450510517, 0.1472251082835719, 0.1454158775806427] ***
*** starting iteration: 4; err: [Inf, 0.2081288406518288, 0.1577159450510517, 0.1472251082835719, 0.1454158775806427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2081288406518288, 0.1577159450510517, 0.1472251082835719, 0.1454158775806427, 0.1445582403400913] ***
*** finished computation of 7 references, err: [Inf, 0.2081288406518288, 0.1577159450510517, 0.1472251082835719, 0.1454158775806427, 0.1445582403400913] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 76, 16]]
** centroid: 1, normalized-entropy: 0.6665783579949205, [(2, 76), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [32, 33, 0]]
** centroid: 4, normalized-entropy: 0.9998292601233937, [(1, 32), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [66, 25, 0]]
** centroid: 5, normalized-entropy: 0.8481636883083004, [(1, 66), (2, 25)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [31, 41, 0]]
** centroid: 6, normalized-entropy: 0.9860400318404435, [(1, 31), (2, 41)]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25049501850269734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25049501850269734, 0.19733083014562727] ***
*** starting iteration: 2; err: [Inf, 0.25049501850269734, 0.19733083014562727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615] ***
*** starting iteration: 3; err: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186] ***
*** starting iteration: 4; err: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186, 0.18119069302640856] ***
*** starting iteration: 5; err: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186, 0.18119069302640856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186, 0.18119069302640856, 0.17169104046560824] ***
*** starting iteration: 6; err: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186, 0.18119069302640856, 0.17169104046560824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186, 0.18119069302640856, 0.17169104046560824, 0.16618600523658097] ***
*** starting iteration: 7; err: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186, 0.18119069302640856, 0.17169104046560824, 0.16618600523658097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186, 0.18119069302640856, 0.17169104046560824, 0.16618600523658097, 0.16187326524592935] ***
*** starting iteration: 8; err: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186, 0.18119069302640856, 0.17169104046560824, 0.16618600523658097, 0.16187326524592935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186, 0.18119069302640856, 0.17169104046560824, 0.16618600523658097, 0.16187326524592935, 0.1588475485247327] ***
*** starting iteration: 9; err: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186, 0.18119069302640856, 0.17169104046560824, 0.16618600523658097, 0.16187326524592935, 0.1588475485247327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186, 0.18119069302640856, 0.17169104046560824, 0.16618600523658097, 0.16187326524592935, 0.1588475485247327, 0.15653490510955453] ***
*** starting iteration: 10; err: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186, 0.18119069302640856, 0.17169104046560824, 0.16618600523658097, 0.16187326524592935, 0.1588475485247327, 0.15653490510955453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186, 0.18119069302640856, 0.17169104046560824, 0.16618600523658097, 0.16187326524592935, 0.1588475485247327, 0.15653490510955453, 0.15498715822026132] ***
*** finished computation of 7 references, err: [Inf, 0.25049501850269734, 0.19733083014562727, 0.19145971738919615, 0.18694109387975186, 0.18119069302640856, 0.17169104046560824, 0.16618600523658097, 0.16187326524592935, 0.1588475485247327, 0.15653490510955453, 0.15498715822026132] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [68, 38, 0]]
** centroid: 1, normalized-entropy: 0.9414231081869789, [(1, 68), (2, 38)]
*** center 2: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 70, 16]]
** centroid: 3, normalized-entropy: 0.6931274153282881, [(2, 70), (3, 16)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [28, 50, 0]]
** centroid: 4, normalized-entropy: 0.9418285354475157, [(1, 28), (2, 50)]
*** center 5: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [36, 13, 0]]
** centroid: 6, normalized-entropy: 0.834648285181383, [(1, 36), (2, 13)]
*** center 7: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20134955473802985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20134955473802985, 0.1645641754567623] ***
*** starting iteration: 2; err: [Inf, 0.20134955473802985, 0.1645641754567623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20134955473802985, 0.1645641754567623, 0.16110408771969378] ***
*** starting iteration: 3; err: [Inf, 0.20134955473802985, 0.1645641754567623, 0.16110408771969378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20134955473802985, 0.1645641754567623, 0.16110408771969378, 0.15911006253492088] ***
*** starting iteration: 4; err: [Inf, 0.20134955473802985, 0.1645641754567623, 0.16110408771969378, 0.15911006253492088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20134955473802985, 0.1645641754567623, 0.16110408771969378, 0.15911006253492088, 0.1574607705809176] ***
*** starting iteration: 5; err: [Inf, 0.20134955473802985, 0.1645641754567623, 0.16110408771969378, 0.15911006253492088, 0.1574607705809176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20134955473802985, 0.1645641754567623, 0.16110408771969378, 0.15911006253492088, 0.1574607705809176, 0.15452728829719126] ***
*** starting iteration: 6; err: [Inf, 0.20134955473802985, 0.1645641754567623, 0.16110408771969378, 0.15911006253492088, 0.1574607705809176, 0.15452728829719126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20134955473802985, 0.1645641754567623, 0.16110408771969378, 0.15911006253492088, 0.1574607705809176, 0.15452728829719126, 0.15231359601207078] ***
*** starting iteration: 7; err: [Inf, 0.20134955473802985, 0.1645641754567623, 0.16110408771969378, 0.15911006253492088, 0.1574607705809176, 0.15452728829719126, 0.15231359601207078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20134955473802985, 0.1645641754567623, 0.16110408771969378, 0.15911006253492088, 0.1574607705809176, 0.15452728829719126, 0.15231359601207078, 0.15041320084035398] ***
*** starting iteration: 8; err: [Inf, 0.20134955473802985, 0.1645641754567623, 0.16110408771969378, 0.15911006253492088, 0.1574607705809176, 0.15452728829719126, 0.15231359601207078, 0.15041320084035398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20134955473802985, 0.1645641754567623, 0.16110408771969378, 0.15911006253492088, 0.1574607705809176, 0.15452728829719126, 0.15231359601207078, 0.15041320084035398, 0.14965120696648956] ***
*** finished computation of 7 references, err: [Inf, 0.20134955473802985, 0.1645641754567623, 0.16110408771969378, 0.15911006253492088, 0.1574607705809176, 0.15452728829719126, 0.15231359601207078, 0.15041320084035398, 0.14965120696648956] ***
*** center 1: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [42, 23, 0]]
** centroid: 2, normalized-entropy: 0.937456170782005, [(1, 42), (2, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [11, 39, 0]]
** centroid: 4, normalized-entropy: 0.7601675029619658, [(1, 11), (2, 39)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 79, 17]]
** centroid: 5, normalized-entropy: 0.673654715229001, [(2, 79), (3, 17)]
*** center 6: selecting labels [1] (freq >= 2) [from [42, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [86, 24, 0]]
** centroid: 7, normalized-entropy: 0.7568336324184036, [(1, 86), (2, 24)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1928094321070239] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1928094321070239, 0.16279352603293956] ***
*** starting iteration: 2; err: [Inf, 0.1928094321070239, 0.16279352603293956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1928094321070239, 0.16279352603293956, 0.14848851718194783] ***
*** starting iteration: 3; err: [Inf, 0.1928094321070239, 0.16279352603293956, 0.14848851718194783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1928094321070239, 0.16279352603293956, 0.14848851718194783, 0.14465830911137165] ***
*** starting iteration: 4; err: [Inf, 0.1928094321070239, 0.16279352603293956, 0.14848851718194783, 0.14465830911137165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1928094321070239, 0.16279352603293956, 0.14848851718194783, 0.14465830911137165, 0.14398676866013557] ***
*** finished computation of 7 references, err: [Inf, 0.1928094321070239, 0.16279352603293956, 0.14848851718194783, 0.14465830911137165, 0.14398676866013557] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 57, 18]]
** centroid: 1, normalized-entropy: 0.7950402793845225, [(2, 57), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [89, 17, 0]]
** centroid: 2, normalized-entropy: 0.6352115521361693, [(1, 89), (2, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [24, 42, 0]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(1, 24), (2, 42)]
*** center 4: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 47, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [44, 7, 0]]
** centroid: 7, normalized-entropy: 0.577004250315725, [(1, 44), (2, 7)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2316144221164286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2316144221164286, 0.1810684373099357] ***
*** starting iteration: 2; err: [Inf, 0.2316144221164286, 0.1810684373099357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2316144221164286, 0.1810684373099357, 0.1578108610007912] ***
*** starting iteration: 3; err: [Inf, 0.2316144221164286, 0.1810684373099357, 0.1578108610007912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2316144221164286, 0.1810684373099357, 0.1578108610007912, 0.153224443747662] ***
*** starting iteration: 4; err: [Inf, 0.2316144221164286, 0.1810684373099357, 0.1578108610007912, 0.153224443747662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2316144221164286, 0.1810684373099357, 0.1578108610007912, 0.153224443747662, 0.15212003172002733] ***
*** starting iteration: 5; err: [Inf, 0.2316144221164286, 0.1810684373099357, 0.1578108610007912, 0.153224443747662, 0.15212003172002733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2316144221164286, 0.1810684373099357, 0.1578108610007912, 0.153224443747662, 0.15212003172002733, 0.1511706302855164] ***
*** finished computation of 7 references, err: [Inf, 0.2316144221164286, 0.1810684373099357, 0.1578108610007912, 0.153224443747662, 0.15212003172002733, 0.1511706302855164] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [76, 4, 0]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(1, 76), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [45, 13, 0]]
** centroid: 2, normalized-entropy: 0.7676515870125797, [(1, 45), (2, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [34, 30, 0]]
** centroid: 5, normalized-entropy: 0.9971803988942641, [(1, 34), (2, 30)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 82, 0]]
** centroid: 6, normalized-entropy: 0.1623261801753929, [(1, 2), (2, 82)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 48, 15]]
** centroid: 7, normalized-entropy: 0.7918583525674836, [(2, 48), (3, 15)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2032376214968972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2032376214968972, 0.17043143896199764] ***
*** starting iteration: 2; err: [Inf, 0.2032376214968972, 0.17043143896199764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2032376214968972, 0.17043143896199764, 0.15982941142469645] ***
*** starting iteration: 3; err: [Inf, 0.2032376214968972, 0.17043143896199764, 0.15982941142469645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2032376214968972, 0.17043143896199764, 0.15982941142469645, 0.15450699198711665] ***
*** starting iteration: 4; err: [Inf, 0.2032376214968972, 0.17043143896199764, 0.15982941142469645, 0.15450699198711665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2032376214968972, 0.17043143896199764, 0.15982941142469645, 0.15450699198711665, 0.1518652880601585] ***
*** starting iteration: 5; err: [Inf, 0.2032376214968972, 0.17043143896199764, 0.15982941142469645, 0.15450699198711665, 0.1518652880601585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2032376214968972, 0.17043143896199764, 0.15982941142469645, 0.15450699198711665, 0.1518652880601585, 0.15024936454743146] ***
*** starting iteration: 6; err: [Inf, 0.2032376214968972, 0.17043143896199764, 0.15982941142469645, 0.15450699198711665, 0.1518652880601585, 0.15024936454743146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2032376214968972, 0.17043143896199764, 0.15982941142469645, 0.15450699198711665, 0.1518652880601585, 0.15024936454743146, 0.14905142372380942] ***
*** starting iteration: 7; err: [Inf, 0.2032376214968972, 0.17043143896199764, 0.15982941142469645, 0.15450699198711665, 0.1518652880601585, 0.15024936454743146, 0.14905142372380942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2032376214968972, 0.17043143896199764, 0.15982941142469645, 0.15450699198711665, 0.1518652880601585, 0.15024936454743146, 0.14905142372380942, 0.147968251993414] ***
*** starting iteration: 8; err: [Inf, 0.2032376214968972, 0.17043143896199764, 0.15982941142469645, 0.15450699198711665, 0.1518652880601585, 0.15024936454743146, 0.14905142372380942, 0.147968251993414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2032376214968972, 0.17043143896199764, 0.15982941142469645, 0.15450699198711665, 0.1518652880601585, 0.15024936454743146, 0.14905142372380942, 0.147968251993414, 0.14747691422328352] ***
*** finished computation of 7 references, err: [Inf, 0.2032376214968972, 0.17043143896199764, 0.15982941142469645, 0.15450699198711665, 0.1518652880601585, 0.15024936454743146, 0.14905142372380942, 0.147968251993414, 0.14747691422328352] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [52, 22, 0]]
** centroid: 1, normalized-entropy: 0.8779620013943914, [(1, 52), (2, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [66, 23, 0]]
** centroid: 2, normalized-entropy: 0.8243633538094403, [(1, 66), (2, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 76, 15]]
** centroid: 4, normalized-entropy: 0.6457523329916605, [(2, 76), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [48, 7, 0]]
** centroid: 5, normalized-entropy: 0.54991090463341, [(1, 48), (2, 7)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 44, 0]]
** centroid: 6, normalized-entropy: 0.5293608652873645, [(1, 6), (2, 44)]
*** center 7: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2704821948679164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704821948679164, 0.16488119562156497] ***
*** starting iteration: 2; err: [Inf, 0.2704821948679164, 0.16488119562156497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704821948679164, 0.16488119562156497, 0.14791161194816232] ***
*** starting iteration: 3; err: [Inf, 0.2704821948679164, 0.16488119562156497, 0.14791161194816232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704821948679164, 0.16488119562156497, 0.14791161194816232, 0.14499845447950066] ***
*** starting iteration: 4; err: [Inf, 0.2704821948679164, 0.16488119562156497, 0.14791161194816232, 0.14499845447950066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704821948679164, 0.16488119562156497, 0.14791161194816232, 0.14499845447950066, 0.14431589205376805] ***
*** finished computation of 7 references, err: [Inf, 0.2704821948679164, 0.16488119562156497, 0.14791161194816232, 0.14499845447950066, 0.14431589205376805] ***
*** center 1: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [8, 53, 0]]
** centroid: 2, normalized-entropy: 0.5605769426145328, [(1, 8), (2, 53)]
*** center 3: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [8, 70, 0]]
** centroid: 5, normalized-entropy: 0.4770713062193298, [(1, 8), (2, 70)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 39, 18]]
** centroid: 6, normalized-entropy: 0.8997437586982626, [(2, 39), (3, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1909432616326958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1909432616326958, 0.16243245433922857] ***
*** starting iteration: 2; err: [Inf, 0.1909432616326958, 0.16243245433922857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1909432616326958, 0.16243245433922857, 0.15474097329936923] ***
*** starting iteration: 3; err: [Inf, 0.1909432616326958, 0.16243245433922857, 0.15474097329936923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1909432616326958, 0.16243245433922857, 0.15474097329936923, 0.1518419585460797] ***
*** starting iteration: 4; err: [Inf, 0.1909432616326958, 0.16243245433922857, 0.15474097329936923, 0.1518419585460797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1909432616326958, 0.16243245433922857, 0.15474097329936923, 0.1518419585460797, 0.1510446778461337] ***
*** finished computation of 7 references, err: [Inf, 0.1909432616326958, 0.16243245433922857, 0.15474097329936923, 0.1518419585460797, 0.1510446778461337] ***
*** center 1: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [13, 69, 0]]
** centroid: 2, normalized-entropy: 0.6307970795750609, [(1, 13), (2, 69)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 39, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [71, 17, 0]]
** centroid: 5, normalized-entropy: 0.7080803256135676, [(1, 71), (2, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [67, 16, 0]]
** centroid: 6, normalized-entropy: 0.7072324944713736, [(1, 67), (2, 16)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 25, 17]]
** centroid: 7, normalized-entropy: 0.9736680645496202, [(2, 25), (3, 17)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22618006212078035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22618006212078035, 0.19110503670200704] ***
*** starting iteration: 2; err: [Inf, 0.22618006212078035, 0.19110503670200704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362] ***
*** starting iteration: 3; err: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362, 0.17068587238434701] ***
*** starting iteration: 4; err: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362, 0.17068587238434701] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362, 0.17068587238434701, 0.16358427028823644] ***
*** starting iteration: 5; err: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362, 0.17068587238434701, 0.16358427028823644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362, 0.17068587238434701, 0.16358427028823644, 0.15808092018868775] ***
*** starting iteration: 6; err: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362, 0.17068587238434701, 0.16358427028823644, 0.15808092018868775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362, 0.17068587238434701, 0.16358427028823644, 0.15808092018868775, 0.1553246779674664] ***
*** starting iteration: 7; err: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362, 0.17068587238434701, 0.16358427028823644, 0.15808092018868775, 0.1553246779674664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362, 0.17068587238434701, 0.16358427028823644, 0.15808092018868775, 0.1553246779674664, 0.15277314774785192] ***
*** starting iteration: 8; err: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362, 0.17068587238434701, 0.16358427028823644, 0.15808092018868775, 0.1553246779674664, 0.15277314774785192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362, 0.17068587238434701, 0.16358427028823644, 0.15808092018868775, 0.1553246779674664, 0.15277314774785192, 0.15103559011407197] ***
*** starting iteration: 9; err: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362, 0.17068587238434701, 0.16358427028823644, 0.15808092018868775, 0.1553246779674664, 0.15277314774785192, 0.15103559011407197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362, 0.17068587238434701, 0.16358427028823644, 0.15808092018868775, 0.1553246779674664, 0.15277314774785192, 0.15103559011407197, 0.15027058391831816] ***
*** finished computation of 7 references, err: [Inf, 0.22618006212078035, 0.19110503670200704, 0.17925963413715362, 0.17068587238434701, 0.16358427028823644, 0.15808092018868775, 0.1553246779674664, 0.15277314774785192, 0.15103559011407197, 0.15027058391831816] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [49, 32, 0]]
** centroid: 1, normalized-entropy: 0.9679884922470298, [(1, 49), (2, 32)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 99, 16]]
** centroid: 2, normalized-entropy: 0.5819569606149722, [(2, 99), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [85, 4, 0]]
** centroid: 3, normalized-entropy: 0.2645173683629748, [(1, 85), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [66, 6, 0]]
** centroid: 4, normalized-entropy: 0.4138168503036336, [(1, 66), (2, 6)]
*** center 5: selecting labels [1] (freq >= 2) [from [43, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [44, 23, 0]]
** centroid: 6, normalized-entropy: 0.9279262619599757, [(1, 44), (2, 23)]
*** center 7: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2899117568600923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2899117568600923, 0.20459578429628164] ***
*** starting iteration: 2; err: [Inf, 0.2899117568600923, 0.20459578429628164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2899117568600923, 0.20459578429628164, 0.18037417908688075] ***
*** starting iteration: 3; err: [Inf, 0.2899117568600923, 0.20459578429628164, 0.18037417908688075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2899117568600923, 0.20459578429628164, 0.18037417908688075, 0.16226225440949202] ***
*** starting iteration: 4; err: [Inf, 0.2899117568600923, 0.20459578429628164, 0.18037417908688075, 0.16226225440949202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2899117568600923, 0.20459578429628164, 0.18037417908688075, 0.16226225440949202, 0.1530217140968889] ***
*** starting iteration: 5; err: [Inf, 0.2899117568600923, 0.20459578429628164, 0.18037417908688075, 0.16226225440949202, 0.1530217140968889] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2899117568600923, 0.20459578429628164, 0.18037417908688075, 0.16226225440949202, 0.1530217140968889, 0.1501363931898959] ***
*** starting iteration: 6; err: [Inf, 0.2899117568600923, 0.20459578429628164, 0.18037417908688075, 0.16226225440949202, 0.1530217140968889, 0.1501363931898959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2899117568600923, 0.20459578429628164, 0.18037417908688075, 0.16226225440949202, 0.1530217140968889, 0.1501363931898959, 0.14906865031272173] ***
*** starting iteration: 7; err: [Inf, 0.2899117568600923, 0.20459578429628164, 0.18037417908688075, 0.16226225440949202, 0.1530217140968889, 0.1501363931898959, 0.14906865031272173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2899117568600923, 0.20459578429628164, 0.18037417908688075, 0.16226225440949202, 0.1530217140968889, 0.1501363931898959, 0.14906865031272173, 0.14876178676076232] ***
*** finished computation of 7 references, err: [Inf, 0.2899117568600923, 0.20459578429628164, 0.18037417908688075, 0.16226225440949202, 0.1530217140968889, 0.1501363931898959, 0.14906865031272173, 0.14876178676076232] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [18, 41, 0]]
** centroid: 1, normalized-entropy: 0.8874179270685693, [(1, 18), (2, 41)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 89, 13]]
** centroid: 2, normalized-entropy: 0.550405815580872, [(2, 89), (3, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [75, 19, 0]]
** centroid: 4, normalized-entropy: 0.7261630586710504, [(1, 75), (2, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [65, 16, 0]]
** centroid: 5, normalized-entropy: 0.7169622516889513, [(1, 65), (2, 16)]
*** center 6: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 343,3 => 32,1 => 625), Dict(2 => 354,3 => 38,1 => 608))
[ Info: ===== scores for single classifier: {"micro_f1":0.957,"precision":0.957,"recall":0.957,"macro_recall":0.9661977153335316,"macro_f1":0.9061943501377234,"accuracy":0.957,"class_f1":{"2":0.9384835479256081,"3":0.8,"1":0.9800995024875622},"class_precision":{"2":0.9507246376811594,"3":0.6666666666666666,"1":0.9882943143812709},"class_recall":{"2":0.9265536723163842,"3":1.0,"1":0.9720394736842105}}
[ Info: ===== scores for 1: {"micro_f1":0.972,"precision":0.972,"recall":0.972,"macro_recall":0.965841510556051,"macro_f1":0.9628981293011534,"accuracy":0.972,"class_f1":{"2":0.9613259668508287,"3":0.9473684210526315,"1":0.98},"class_precision":{"2":0.9405405405405406,"3":0.9473684210526315,"1":0.9932432432432432},"class_recall":{"2":0.9830508474576272,"3":0.9473684210526315,"1":0.9671052631578947}}
[ Info: ===== scores for 5: {"micro_f1":0.973,"precision":0.973,"recall":0.973,"macro_recall":0.9738266924373079,"macro_f1":0.9717950555958685,"accuracy":0.973,"class_f1":{"2":0.9624478442280945,"3":0.9736842105263158,"1":0.9792531120331952},"class_precision":{"2":0.947945205479452,"3":0.9736842105263158,"1":0.9882747068676717},"class_recall":{"2":0.9774011299435028,"3":0.9736842105263158,"1":0.9703947368421053}}
[ Info: ===== scores for 7: {"micro_f1":0.979,"precision":0.979,"recall":0.979,"macro_recall":0.9853398503320449,"macro_f1":0.9763968305342781,"accuracy":0.979,"class_f1":{"2":0.9705469845722301,"3":0.9743589743589743,"1":0.9842845326716295},"class_precision":{"2":0.9637883008356546,"3":0.95,"1":0.9900166389351082},"class_recall":{"2":0.9774011299435028,"3":1.0,"1":0.9786184210526315}}
[ Info: ===== scores for 9: {"micro_f1":0.976,"precision":0.976,"recall":0.976,"macro_recall":0.9825149915749827,"macro_f1":0.9665560858262522,"accuracy":0.976,"class_f1":{"2":0.9661971830985915,"3":0.9500000000000001,"1":0.9834710743801653},"class_precision":{"2":0.9634831460674157,"3":0.9047619047619048,"1":0.9883720930232558},"class_recall":{"2":0.9689265536723164,"3":1.0,"1":0.9786184210526315}}
[ Info: ===== scores for 11: {"micro_f1":0.974,"precision":0.974,"recall":0.974,"macro_recall":0.9810251263752603,"macro_f1":0.9650661545027742,"accuracy":0.974,"class_f1":{"2":0.9633802816901408,"3":0.9500000000000001,"1":0.9818181818181817},"class_precision":{"2":0.9606741573033708,"3":0.9047619047619048,"1":0.9867109634551495},"class_recall":{"2":0.9661016949152542,"3":1.0,"1":0.9769736842105263}}
(score = 0.972, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.972, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.972, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.972, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.97, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.979, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.979, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.979,"k":7,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.979,"precision":0.979,"recall":0.979,"macro_recall":0.9853398503320449,"macro_f1":0.9763968305342781,"accuracy":0.979,"class_f1":{"2":0.9705469845722301,"3":0.9743589743589743,"1":0.9842845326716295},"class_precision":{"2":0.9637883008356546,"3":0.95,"1":0.9900166389351082},"class_recall":{"2":0.9774011299435028,"3":1.0,"1":0.9786184210526315}}
Test Summary: | Pass  Total
AKNC          |    8      8
[228, 2, 2, 3, 3, 1, 5, 4, 3, 5, 1, 4, 5, 6, 1, 1, 1, 12, 11, 7, 18, 1, 21, 16, 4, 4, 1, 31, 8, 3, 4, 2, 5, 6, 65, 4, 12, 5, 30, 2, 8, 6, 21, 83, 9, 1, 34, 4, 15, 2, 11, 3, 1, 8, 1, 3, 36, 2, 29, 18, 21, 28, 11, 20, 4, 137, 4, 11, 4, 4, 7, 4, 6, 19, 68, 5, 17, 5, 3, 78, 1, 9, 6, 5, 24, 1, 12, 6, 62, 12, 77, 58, 8, 3, 18, 15, 39, 6, 15, 29, 23, 5, 3, 28, 36, 33, 22, 118, 2, 3, 9, 1, 19, 22, 4, 22, 9, 19, 5, 5, 3, 25, 29, 9, 107, 135, 18, 6, 123, 7, 3, 17, 20, 19, 23, 31, 34, 9, 9, 3, 10, 5, 2, 35, 4, 49, 17, 5, 171, 55, 8, 13, 81, 18, 108, 15, 3, 33, 15, 7, 57, 2, 18, 74, 32, 13, 15, 32, 4, 48, 27, 24, 5, 169, 10, 79, 12, 4, 107, 7, 28, 14, 280, 37, 45, 31, 13, 25, 188, 8, 5, 17, 89, 415, 16, 6, 5, 10, 77, 20, 8, 13, 16, 79, 7, 7, 2, 136, 34, 6, 2, 8, 4, 382, 14, 18, 7, 40, 4, 56, 45, 117, 42, 45, 3, 38, 46, 82, 130, 26, 40, 65, 24, 14, 21, 9, 6, 1, 1, 30, 18, 24, 160, 11, 7, 11, 18, 8, 46, 49, 35, 16, 42, 16, 12, 2, 14, 21, 26, 88, 16, 14, 6, 62, 68, 169, 37, 24, 3, 14, 15, 42, 24, 98, 39, 6, 31, 22, 7, 2, 47, 32, 93, 3, 59, 11, 85, 987, 35, 17, 28, 38, 13, 80, 1, 7, 5, 16, 8, 40]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6940000000000001, speedup = 0.23302148503244227, eval_ratio = 0.08469299999999999)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.40759548611111107,"recall":0.4027777777777778,"f1":null,"seconds":0.0002066921442747116,"exhaustive_search_seconds":0.0004143286496400833,"evaluations":529.4453125,"distances_sum":1723.2220616574152}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5781249999999998,"recall":0.5781249999999998,"f1":null,"seconds":0.0003368724137544632,"exhaustive_search_seconds":0.0004143286496400833,"evaluations":694.7890625,"distances_sum":1639.986260927281}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6892361111111108,"recall":0.6892361111111108,"f1":0.6892361111111108,"seconds":0.0003970898687839508,"exhaustive_search_seconds":0.0004143286496400833,"evaluations":848.8359375,"distances_sum":1589.4385915929236}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7526041666666664,"recall":0.7526041666666664,"f1":0.7526041666666664,"seconds":0.000502096489071846,"exhaustive_search_seconds":0.0004143286496400833,"evaluations":955.9296875,"distances_sum":1562.7374534018077}
KCenters.DeloneInvIndex> reached performance {"precision":0.801215277777777,"recall":0.801215277777777,"f1":0.801215277777777,"seconds":0.0007588081061840057,"exhaustive_search_seconds":0.0004143286496400833,"evaluations":1055.09375,"distances_sum":1547.0920394016057}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8130000000000002, speedup = 0.6566387963284748, eval_ratio = 0.10871800000000001)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
