Julia Version 1.5.0-DEV.627
Commit b46fc558d3 (2020-04-14 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_TbP4gp/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_TbP4gp/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.01003421450763196 0.055392787817802484; -0.01003421450763196 0.0 -0.07742299408692305; -0.055392787817802484 0.07742299408692305 0.0])
dAA = so3([0.0 -0.03712253788028947 0.04201438083337988; 0.03712253788028947 0.0 -0.01749680129621006; -0.04201438083337988 0.01749680129621006 0.0])
dAA = so3([0.0 0.0663049266143657 0.25227150030414264; -0.0663049266143657 0.0 0.101582633631579; -0.25227150030414264 -0.101582633631579 0.0])
dAA = Quaternion(0.9991228464426415, [0.031916980855221745, 0.0270723887040584, 0.001389179361239144])
dAA = SO3([0.9906202195883579 0.057746446854293504 0.12384235308818135; -0.06306708770156766 0.9972281408606775 0.039478823746403255; -0.12121931773259696 -0.04691889759213291 0.9915162601073079])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9901948502943914 -0.09018011909853445 0.10668507191656279; 0.09476635363913385 0.9947462587052247 -0.03871974961051203; -0.10263282451735728 0.04845025192227865 0.9935386637772368]), [0.7742299408692305, 0.5539278781780248, -0.1003421450763196])
xj = SE3(SO3([0.9908457515575854 -0.0004284031473952266 0.1349981966213892; 0.021959980834527083 0.9871873950400354 -0.15804684848429051; -0.13320081029044514 0.15956460617822607 0.978159844091525]), [-1.01582633631579, 2.5227150030414265, -0.6630492661436569])
Dx = SE3(SO3([0.9968822033261793 0.07675138097098759 0.0183056879299454; -0.0739635919221794 0.9897705466711005 -0.12199857381281254; -0.027481989766236906 0.12026425263326282 0.9923614511744453]), [-1.5281775092796066, 2.0926078131403365, -0.8262745083404672])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
