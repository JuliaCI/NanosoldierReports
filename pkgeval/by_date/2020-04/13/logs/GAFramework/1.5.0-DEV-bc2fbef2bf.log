Julia Version 1.5.0-DEV.616
Commit bc2fbef2bf (2020-04-12 16:10 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_rDxnUo/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_rDxnUo/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723106726335922
curgen: 20 fitness: 0.21723329990595938
curgen: 30 fitness: 0.21723329990595938
curgen: 40 fitness: 0.21723329990595938
curgen: 50 fitness: 0.21723329990595938
CoordinateCreature{Array{Float64,1}}([-0.2224620736531728], -0.21723329990595938) -0.2224620736531728 -0.21723329990595938
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2582800411110453
curgen: 100 fitness: 3.258316721818021
curgen: 150 fitness: 3.258389766676082
curgen: 200 fitness: 3.258390318837527
curgen: 250 fitness: 3.2584011263326733
curgen: 300 fitness: 3.258402624965564
curgen: 350 fitness: 3.258448125445529
curgen: 400 fitness: 3.2584603049550247
curgen: 450 fitness: 3.2584652079050933
curgen: 500 fitness: 3.258466860819671
CoordinateCreature{Array{Float64,1}}([0.22212800139841174, 0.22259521247987574, -0.22259187435877162, 0.22198944228697917, 0.22267298664997887, -0.2222757922810692, 0.22230062741361759, -0.22252073124514668, 0.2225041125375189, 0.22241848740661307, 0.22259173129008436, -0.22234072009259506, -0.2224329958422383, -0.22227361423301792, 0.22232585372319227], -3.258466860819671) [0.22212800139841174, 0.22259521247987574, -0.22259187435877162, 0.22198944228697917, 0.22267298664997887, -0.2222757922810692, 0.22230062741361759, -0.22252073124514668, 0.2225041125375189, 0.22241848740661307, 0.22259173129008436, -0.22234072009259506, -0.2224329958422383, -0.22227361423301792, 0.22232585372319227] -3.258466860819671
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.001579557661415265
curgen: 100 fitness: -0.0013807255034237187
curgen: 150 fitness: -0.0013749287585937964
curgen: 200 fitness: -0.0009499492742861548
curgen: 250 fitness: -0.0006973338037710164
curgen: 300 fitness: -0.0006973338037710164
curgen: 350 fitness: -0.0006828398935851965
curgen: 400 fitness: -0.0006168813612532631
curgen: 450 fitness: -0.000607404497202424
curgen: 500 fitness: -0.000607404497202424
CoordinateCreature{Array{Float64,1}}([0.0002830431863509786, -0.00018475165366837153, -0.0008859911139810371, 8.419093270068377e-5, -0.00011402689042554724, 0.00015399357750401233, 0.0008438745663814752, -7.682442115667726e-5, -0.0003149788712647144, 0.00038914289037633373, -0.0007123045037206469, -0.00017220071543486875, -0.0006661551613404079, 0.00023161651776562597, -0.0003398544631906171], 0.000607404497202424) [0.0002830431863509786, -0.00018475165366837153, -0.0008859911139810371, 8.419093270068377e-5, -0.00011402689042554724, 0.00015399357750401233, 0.0008438745663814752, -7.682442115667726e-5, -0.0003149788712647144, 0.00038914289037633373, -0.0007123045037206469, -0.00017220071543486875, -0.0006661551613404079, 0.00023161651776562597, -0.0003398544631906171] 0.000607404497202424
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
