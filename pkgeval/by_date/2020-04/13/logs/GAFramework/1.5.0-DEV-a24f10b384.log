Julia Version 1.5.0-DEV.621
Commit a24f10b384 (2020-04-13 14:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_vN9aEw/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_vN9aEw/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21720426633294512
curgen: 20 fitness: 0.21720426633294512
curgen: 30 fitness: 0.21722733224140756
curgen: 40 fitness: 0.21723308071603603
curgen: 50 fitness: 0.21723308071603603
CoordinateCreature{Array{Float64,1}}([-0.22265939163576084], -0.21723308071603603) -0.22265939163576084 -0.21723308071603603
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257969300903587
curgen: 100 fitness: 3.258329105513582
curgen: 150 fitness: 3.2583498211765627
curgen: 200 fitness: 3.258368604819055
curgen: 250 fitness: 3.2583831743931744
curgen: 300 fitness: 3.258424745725882
curgen: 350 fitness: 3.2584330925436733
curgen: 400 fitness: 3.2584330925436733
curgen: 450 fitness: 3.2584330925436733
curgen: 500 fitness: 3.2584330925436733
CoordinateCreature{Array{Float64,1}}([-0.22245260759396024, -0.2221451765551706, -0.22208109558630598, -0.2224917655819465, -0.22220626310238079, 0.22181536386926404, 0.2222685844524703, 0.22243940056351413, 0.2226437459072937, -0.22255175093452553, -0.2224821041360358, 0.22317431523091183, 0.22250731926707207, -0.2227613005588723, 0.2224092691720575], -3.2584330925436733) [-0.22245260759396024, -0.2221451765551706, -0.22208109558630598, -0.2224917655819465, -0.22220626310238079, 0.22181536386926404, 0.2222685844524703, 0.22243940056351413, 0.2226437459072937, -0.22255175093452553, -0.2224821041360358, 0.22317431523091183, 0.22250731926707207, -0.2227613005588723, 0.2224092691720575] -3.2584330925436733
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002821531035294811
curgen: 100 fitness: -0.0027632966873625264
curgen: 150 fitness: -0.0026340248527105814
curgen: 200 fitness: -0.002167222118657719
curgen: 250 fitness: -0.001136041233934293
curgen: 300 fitness: -0.001136041233934293
curgen: 350 fitness: -0.001136041233934293
curgen: 400 fitness: -0.001136041233934293
curgen: 450 fitness: -0.0009876069974552593
curgen: 500 fitness: -0.0009876069974552593
CoordinateCreature{Array{Float64,1}}([-0.0008224793627296359, -0.0005673365589411602, 0.0010027241783229358, 0.0005186709766745786, 0.0002050690603536535, 0.0008565349149173428, 0.00020137589668526266, -0.0003522769943212913, 0.0003613521633726021, -0.000254442636930044, 0.0002692556833193357, -3.0855997965491504e-5, -0.00013194485356406122, -1.2567267523272147e-5, -0.0012159609929036622], 0.0009876069974552593) [-0.0008224793627296359, -0.0005673365589411602, 0.0010027241783229358, 0.0005186709766745786, 0.0002050690603536535, 0.0008565349149173428, 0.00020137589668526266, -0.0003522769943212913, 0.0003613521633726021, -0.000254442636930044, 0.0002692556833193357, -3.0855997965491504e-5, -0.00013194485356406122, -1.2567267523272147e-5, -0.0012159609929036622] 0.0009876069974552593
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
