Julia Version 1.5.0-DEV.621
Commit a24f10b384 (2020-04-13 14:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed DataAPI ────────────────────── v1.1.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed Missings ───────────────────── v0.4.3
  Installed FillArrays ─────────────────── v0.8.7
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed ProgressMeter ──────────────── v1.2.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed DataStructures ─────────────── v0.17.12
  Installed Parameters ─────────────────── v0.12.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed Requires ───────────────────── v1.0.1
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed OrderedCollections ─────────── v1.1.0
  Installed LazyArrays ─────────────────── v0.15.1
  Installed StatsBase ──────────────────── v0.32.2
Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.12
  [1a297f60] + FillArrays v0.8.7
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.1
  [1914dd2f] + MacroTools v0.5.5
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.2
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing AdvancedHMC
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+0.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+1.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+2.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+3.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
Status `/tmp/jl_3DXsMo/Project.toml`
  [0bf59076] AdvancedHMC v0.2.21
  [dce04be8] ArgCheck v2.0.0
  [76274a88] Bijectors v0.6.7
  [31c24e10] Distributions v0.23.2
  [f6369f11] ForwardDiff v0.10.10
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.15.1
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [fce5fe82] Turing v0.10.1
  [b8865327] UnicodePlots v1.2.0
  [e88e6eb3] Zygote v0.4.15
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_3DXsMo/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.5.6
  [1520ce14] AbstractTrees v0.3.2
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [5b7e9947] AdvancedMH v0.4.1
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.8.4
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.6.7
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.7.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.12
  [2b5f629d] DiffEqBase v6.28.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.4.10
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.5.0
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.6.0
  [1a297f60] FillArrays v0.8.7
  [6a86dc24] FiniteDiff v2.3.0
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.3.0
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [2ee39098] LabelledArrays v1.1.0
  [5078a376] LazyArrays v0.15.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.3.4
  [093fc24a] LightGraphs v1.3.1
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [e6f89c97] LoggingExtras v0.4.0
  [c7f686f2] MCMCChains v3.0.11
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.9+2
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v1.0.1
  [f27b6e38] Polynomials v0.5.3
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.0
  [731186ca] RecursiveArrayTools v2.3.1
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [37e2e3b7] ReverseDiff v1.2.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.6.0
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [5d786b92] TerminalLoggers v0.1.1
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.10.1
  [3a884ed6] UnPack v0.1.0
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.15
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.142297135
│   t_steps = 0.007895657
└   t_step / t_steps = 18.0222032188075
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/T10lH/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/T10lH/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 6:10:04[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               1.7101630669125316e-5
  log_density:                   -10.524005707553897
  hamiltonian_energy:            17.479219959047306
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  10.976336738234647
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▎                           |  ETA: 0:00:25[K
  iterations:                    1266
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.4856195778590579
  log_density:                   -14.367776263324707
  hamiltonian_energy:            20.119254601674278
  hamiltonian_energy_error:      0.4894476167356565
  max_hamiltonian_energy_error:  1.428647881281286
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9035009992948667
  nom_step_size:                 0.9035009992948667
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9155352067403904, 1.0502 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:20[K
  iterations:                    1562
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.2638473059812982
  log_density:                   -17.189304321780043
  hamiltonian_energy:            20.71084565729953
  hamiltonian_energy_error:      1.3140065986714546
  max_hamiltonian_energy_error:  2.062947374626898
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.2946607033523332
  nom_step_size:                 1.2946607033523332
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9155352067403904, 1.0502 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:17[K
  iterations:                    1874
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9842081743652641
  log_density:                   -14.078647558763533
  hamiltonian_energy:            15.376680627368618
  hamiltonian_energy_error:      0.11714386684184319
  max_hamiltonian_energy_error:  -0.5065440341720588
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8730551286956236
  nom_step_size:                 0.8730551286956236
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9155352067403904, 1.0502 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|█████▉                         |  ETA: 0:00:14[K
  iterations:                    2292
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7622208046829966
  log_density:                   -13.003442151962282
  hamiltonian_energy:            21.428052481348708
  hamiltonian_energy_error:      -0.17646867144046396
  max_hamiltonian_energy_error:  0.655761417841326
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████▏                       |  ETA: 0:00:11[K
  iterations:                    2777
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.846180499421015
  log_density:                   -19.371364119418068
  hamiltonian_energy:            27.159701337330986
  hamiltonian_energy_error:      -0.04000441350602557
  max_hamiltonian_energy_error:  -0.8485660901953516
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▌                      |  ETA: 0:00:09[K
  iterations:                    3271
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9974570360838022
  log_density:                   -15.078536686716419
  hamiltonian_energy:            18.76799827617477
  hamiltonian_energy_error:      0.017961086335727572
  max_hamiltonian_energy_error:  -0.2258118771194475
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▊                     |  ETA: 0:00:08[K
  iterations:                    3773
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9918808988344582
  log_density:                   -10.915828386482438
  hamiltonian_energy:            15.015992071904368
  hamiltonian_energy_error:      -0.3410391144329701
  max_hamiltonian_energy_error:  -0.3807576321323509
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████                    |  ETA: 0:00:07[K
  iterations:                    4264
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9731204144922987
  log_density:                   -11.245170057013517
  hamiltonian_energy:            15.683766724795134
  hamiltonian_energy_error:      -0.2840012953858082
  max_hamiltonian_energy_error:  -0.2903293117258503
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▎                  |  ETA: 0:00:06[K
  iterations:                    4766
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8514423630257756
  log_density:                   -13.648531756990561
  hamiltonian_energy:            18.852933208225934
  hamiltonian_energy_error:      0.05895786733841035
  max_hamiltonian_energy_error:  0.31903801600748594
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 44%|█████████████▌                 |  ETA: 0:00:05[K
  iterations:                    5229
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8789610799838238
  log_density:                   -16.203634520881124
  hamiltonian_energy:            22.211844077702214
  hamiltonian_energy_error:      0.13507776562019203
  max_hamiltonian_energy_error:  0.280031086235045
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▊                |  ETA: 0:00:04[K
  iterations:                    5721
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9121072862653763
  log_density:                   -11.767731067250091
  hamiltonian_energy:            14.872277767197705
  hamiltonian_energy_error:      -0.00828561108206749
  max_hamiltonian_energy_error:  0.2777387482524887
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████               |  ETA: 0:00:04[K
  iterations:                    6200
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9669270614105362
  log_density:                   -14.252079419171197
  hamiltonian_energy:            20.150294656955523
  hamiltonian_energy_error:      -0.11865138995069202
  max_hamiltonian_energy_error:  -0.20206585065373517
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▎             |  ETA: 0:00:03[K
  iterations:                    6691
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.653777309084855
  hamiltonian_energy:            16.7992594982764
  hamiltonian_energy_error:      -0.12066912357371606
  max_hamiltonian_energy_error:  -0.3252237225476122
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▍            |  ETA: 0:00:03[K
  iterations:                    7132
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8554036870897309
  log_density:                   -13.457181975777441
  hamiltonian_energy:            18.17652444555612
  hamiltonian_energy_error:      0.07295690882318695
  max_hamiltonian_energy_error:  0.3508996833307201
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|███████████████████▊           |  ETA: 0:00:03[K
  iterations:                    7635
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8922981771209814
  log_density:                   -14.319422970505181
  hamiltonian_energy:            17.73004201949941
  hamiltonian_energy_error:      0.19667083412095465
  max_hamiltonian_energy_error:  0.21487698565164592
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████          |  ETA: 0:00:02[K
  iterations:                    8150
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9993668373057859
  log_density:                   -13.18327003922242
  hamiltonian_energy:            18.882456709901366
  hamiltonian_energy_error:      -0.3680389875134935
  max_hamiltonian_energy_error:  -0.4374075519390743
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████▏        |  ETA: 0:00:02[K
  iterations:                    8560
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7182060517112211
  log_density:                   -16.20957352387797
  hamiltonian_energy:            19.205769003123965
  hamiltonian_energy_error:      0.541957227046737
  max_hamiltonian_energy_error:  0.6577638139593169
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:01[K
  iterations:                    9118
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9126821168823488
  log_density:                   -13.116890916355725
  hamiltonian_energy:            16.842515578678444
  hamiltonian_energy_error:      0.05907626353731388
  max_hamiltonian_energy_error:  0.14611976290129292
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▉      |  ETA: 0:00:01[K
  iterations:                    9610
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9977679923559025
  log_density:                   -15.39292245820857
  hamiltonian_energy:            20.149363538835296
  hamiltonian_energy_error:      -0.10853895136315472
  max_hamiltonian_energy_error:  -0.3229871518462595
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▉     |  ETA: 0:00:01[K
  iterations:                    10017
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7980191052432675
  log_density:                   -15.10121395564914
  hamiltonian_energy:            19.4734938515231
  hamiltonian_energy_error:      0.3000947391790909
  max_hamiltonian_energy_error:  0.4214478268386834
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▏   |  ETA: 0:00:01[K
  iterations:                    10504
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9781101959327254
  log_density:                   -17.852958979960505
  hamiltonian_energy:            21.61699262202143
  hamiltonian_energy_error:      0.11023132192895346
  max_hamiltonian_energy_error:  -0.3991578284120578
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▌  |  ETA: 0:00:00[K
  iterations:                    11025
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9318564771739938
  log_density:                   -13.305019268448529
  hamiltonian_energy:            15.753060431308624
  hamiltonian_energy_error:      0.09228035100447052
  max_hamiltonian_energy_error:  0.18249354510427196
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|█████████████████████████████▉ |  ETA: 0:00:00[K
  iterations:                    11585
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.92224825179398
  log_density:                   -14.76239287780398
  hamiltonian_energy:            17.927782217702834
  hamiltonian_energy_error:      0.12550094282428148
  max_hamiltonian_energy_error:  -0.3512229182459343
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|██████████████████████████████▉|  ETA: 0:00:00[K
  iterations:                    11955
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8842728991574393
  log_density:                   -12.936743595184852
  hamiltonian_energy:            23.18197405643909
  hamiltonian_energy_error:      -0.5368872265145512
  max_hamiltonian_energy_error:  -0.5368872265145512
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8615906750961698
  log_density:                   -13.75036531829201
  hamiltonian_energy:            17.466389577006805
  hamiltonian_energy_error:      0.14842235266768355
  max_hamiltonian_energy_error:  0.2771908183178624
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6910668318585922
  nom_step_size:                 0.6910668318585922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.076130069825177, 0.92092 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.405669124 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.076130069825177, 0.92092 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.691), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.052968767025373
└   average_acceptance_rate = 0.8707542050721607
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.165628715 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢄⡀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⢰⢣⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢣⠀⢀⠇⠀⠱│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠈⢆⡜⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⢰⢆⠀⠀⠀⡠⠒⠉⠉⠣⡀⠀⠀⡎⠀⠀⠘⠃⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠱⠔⠉⠀⠀⠀⠀⠀⠈⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⡔⠃⠀⠀⠀⠀⠀⠀⣀⠤⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡀⠀⠀⢀⠎⠀⠀⠀⢀⠔⠒⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣑⡤⢤⡊⢀⡠⠤⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠃⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2874   2874
    Testing AdvancedHMC tests passed 
