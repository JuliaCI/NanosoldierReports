Julia Version 1.5.0-DEV.621
Commit a24f10b384 (2020-04-13 14:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_SifIQN/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_SifIQN/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.014376980474428508 0.1392304915715021; 0.014376980474428508 0.0 -0.07081146619277827; -0.1392304915715021 0.07081146619277827 0.0])
dAA = so3([0.0 -0.0415854394246534 0.0576570879353601; 0.0415854394246534 0.0 0.031108301931542744; -0.0576570879353601 -0.031108301931542744 0.0])
dAA = so3([0.0 -0.07038951643947496 -0.06703714406216477; 0.07038951643947496 0.0 0.07011238388740153; 0.06703714406216477 -0.07011238388740153 0.0])
dAA = Quaternion(0.992627988912447, [0.050231021326392664, 0.10073325161953967, 0.04493697967479999])
dAA = SO3([0.9846785654274678 0.14183010672906907 0.10145118832682802; -0.13987631223376565 0.9898234586898066 -0.026156029959295283; -0.10412847863858739 0.011564663962706789 0.9944966156221166])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.984256689730382 -0.10890022067954006 0.13921031088586067; 0.09772524504050482 0.9915980394294845 0.08475319864981894; -0.14727031337905067 -0.06981454100364667 0.9866293045828743]), [0.7081146619277826, 1.392304915715021, 0.14376980474428508])
xj = SE3(SO3([0.8517118910379611 -0.1715715166413862 0.49512631655155925; 0.3039197426652747 0.9314618028356912 -0.20002924755234433; -0.42687193007131957 0.32084595140886285 0.8454810647091561]), [-0.7011238388740153, -0.6703714406216477, 0.7038951643947495])
Dx = SE3(SO3([0.930869320715962 -0.12509416390386646 0.34326922073934346; 0.23841647594664755 0.9199201606894066 -0.3112948472981165; -0.2768391080519247 0.3716158609564029 0.8861499648133189]), [-1.6711178114493177, -1.9309843420820734, 0.18163714528334124])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
