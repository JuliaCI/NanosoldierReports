Julia Version 1.5.0-DEV.555
Commit c54f80c785 (2020-04-01 14:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed NaNMath ────────────────────── v0.3.3
  Installed ZipFile ────────────────────── v0.9.1
  Installed ProgressMeter ──────────────── v1.2.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed DiffEqFlux ─────────────────── v1.8.0
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed QuasiMonteCarlo ────────────── v0.1.2
  Installed Compat ─────────────────────── v3.8.0
  Installed FillArrays ─────────────────── v0.8.6
  Installed DataAPI ────────────────────── v1.1.0
  Installed NLSolversBase ──────────────── v7.6.1
  Installed LoggingExtras ──────────────── v0.4.0
  Installed MuladdMacro ────────────────── v0.2.2
  Installed CUDAdrv ────────────────────── v6.0.0
  Installed FixedPointNumbers ──────────── v0.7.1
  Installed ZygoteRules ────────────────── v0.2.0
  Installed CommonSubexpressions ───────── v0.2.0
  Installed ReverseDiff ────────────────── v1.1.0
  Installed Flux ───────────────────────── v0.10.3
  Installed Optim ──────────────────────── v0.20.6
  Installed BlackBoxOptim ──────────────── v0.5.0
  Installed OrdinaryDiffEq ─────────────── v5.32.1
  Installed RecipesBase ────────────────── v0.8.0
  Installed ArrayInterface ─────────────── v2.6.2
  Installed RecursiveArrayTools ────────── v2.1.0
  Installed Arpack ─────────────────────── v0.4.0
  Installed AbstractTrees ──────────────── v0.3.2
  Installed DiffEqSensitivity ──────────── v6.10.0
  Installed CuArrays ───────────────────── v1.7.3
  Installed Distances ──────────────────── v0.8.2
  Installed Tracker ────────────────────── v0.2.6
  Installed ExponentialUtilities ───────── v1.6.0
  Installed FFTW ───────────────────────── v1.2.0
  Installed Media ──────────────────────── v0.5.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed Zlib_jll ───────────────────── v1.2.11+9
  Installed TerminalLoggers ────────────── v0.1.1
  Installed Roots ──────────────────────── v1.0.1
  Installed NNlib ──────────────────────── v0.6.6
  Installed FFTW_jll ───────────────────── v3.3.9+5
  Installed Adapt ──────────────────────── v1.0.1
  Installed SpatialIndexing ────────────── v0.1.2
  Installed TranscodingStreams ─────────── v0.9.5
  Installed Parameters ─────────────────── v0.12.0
  Installed StaticArrays ───────────────── v0.12.1
  Installed Distributions ──────────────── v0.23.2
  Installed LightGraphs ────────────────── v1.3.1
  Installed DiffEqCallbacks ────────────── v2.12.1
  Installed Inflate ────────────────────── v0.1.2
  Installed Arpack_jll ─────────────────── v3.5.0+2
  Installed PositiveFactorizations ─────── v0.2.3
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed FiniteDiff ─────────────────── v2.3.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed ArnoldiMethod ──────────────── v0.0.4
  Installed MKL_jll ────────────────────── v2019.0.117+2
  Installed IntelOpenMP_jll ────────────── v2018.0.3+0
  Installed TimerOutputs ───────────────── v0.5.3
  Installed OrderedCollections ─────────── v1.1.0
  Installed QuadGK ─────────────────────── v2.3.1
  Installed SpecialFunctions ───────────── v0.10.0
  Installed DiffEqBase ─────────────────── v6.25.1
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed UnPack ─────────────────────── v0.1.0
  Installed NLsolve ────────────────────── v4.3.0
  Installed Colors ─────────────────────── v0.11.2
  Installed DocStringExtensions ────────── v0.8.1
  Installed LLVM ───────────────────────── v1.3.4
  Installed Reexport ───────────────────── v0.2.0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed CEnum ──────────────────────── v0.2.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed LatinHypercubeSampling ─────── v1.6.3
  Installed ColorTypes ─────────────────── v0.9.1
  Installed FunctionWrappers ───────────── v1.1.1
  Installed SparseDiffTools ────────────── v1.4.0
  Installed SimpleTraits ───────────────── v0.9.1
  Installed RecursiveFactorization ─────── v0.1.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed StatsBase ──────────────────── v0.32.2
  Installed Zygote ─────────────────────── v0.4.12
  Installed LineSearches ───────────────── v7.0.1
  Installed CUDAnative ─────────────────── v2.10.2
  Installed Missings ───────────────────── v0.4.3
  Installed CUDAapi ────────────────────── v3.1.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed CPUTime ────────────────────── v1.0.0
  Installed Juno ───────────────────────── v0.8.1
  Installed IterativeSolvers ───────────── v0.8.3
  Installed PDMats ─────────────────────── v0.9.12
  Installed ConsoleProgressMonitor ─────── v0.1.2
  Installed TableTraits ────────────────── v1.0.0
  Installed ChainRulesCore ─────────────── v0.7.1
  Installed ProgressLogging ────────────── v0.1.2
  Installed DiffResults ────────────────── v1.0.2
  Installed TreeViews ──────────────────── v0.3.0
  Installed LeftChildRightSiblingTrees ─── v0.1.2
  Installed GenericSVD ─────────────────── v0.3.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed VertexSafeGraphs ───────────── v0.1.1
  Installed Requires ───────────────────── v1.0.1
  Installed IRTools ────────────────────── v0.3.1
  Installed BinaryProvider ─────────────── v0.5.8
  Installed CodecZlib ──────────────────── v0.6.0
  Installed GPUArrays ──────────────────── v2.0.1
  Installed ForwardDiff ────────────────── v0.10.10
  Installed DataStructures ─────────────── v0.17.11
  Installed OpenBLAS_jll ───────────────── v0.3.9+0
  Installed Sobol ──────────────────────── v1.3.0
   Updating `~/.julia/environments/v1.5/Project.toml`
   aae7a2af + DiffEqFlux v1.8.0
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   621f4979 + AbstractFFTs v0.5.0
   1520ce14 + AbstractTrees v0.3.2
   79e6a3ab + Adapt v1.0.1
   ec485272 + ArnoldiMethod v0.0.4
   7d9fca2a + Arpack v0.4.0
   68821587 + Arpack_jll v3.5.0+2
   4fba245c + ArrayInterface v2.6.2
   4c555306 + ArrayLayouts v0.1.5
   b99e7846 + BinaryProvider v0.5.8
   a134a8b2 + BlackBoxOptim v0.5.0
   fa961155 + CEnum v0.2.0
   a9c8d775 + CPUTime v1.0.0
   3895d2a7 + CUDAapi v3.1.0
   c5f51814 + CUDAdrv v6.0.0
   be33ccc6 + CUDAnative v2.10.2
   d360d2e6 + ChainRulesCore v0.7.1
   944b1d66 + CodecZlib v0.6.0
   3da002f7 + ColorTypes v0.9.1
   5ae59095 + Colors v0.11.2
   bbf7d656 + CommonSubexpressions v0.2.0
   34da2185 + Compat v3.8.0
   e66e0078 + CompilerSupportLibraries_jll v0.3.3+0
   88cd18e8 + ConsoleProgressMonitor v0.1.2
   3a865a2d + CuArrays v1.7.3
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.11
   2b5f629d + DiffEqBase v6.25.1
   459566f4 + DiffEqCallbacks v2.12.1
   aae7a2af + DiffEqFlux v1.8.0
   41bf760c + DiffEqSensitivity v6.10.0
   163ba53b + DiffResults v1.0.2
   b552c78f + DiffRules v1.0.1
   b4f34e82 + Distances v0.8.2
   31c24e10 + Distributions v0.23.2
   ffbed154 + DocStringExtensions v0.8.1
   d4d017d3 + ExponentialUtilities v1.6.0
   7a1cc6ca + FFTW v1.2.0
   f5851436 + FFTW_jll v3.3.9+5
   1a297f60 + FillArrays v0.8.6
   6a86dc24 + FiniteDiff v2.3.0
   53c48c17 + FixedPointNumbers v0.7.1
   587475ba + Flux v0.10.3
   f6369f11 + ForwardDiff v0.10.10
   069b7b12 + FunctionWrappers v1.1.1
   0c68f7d7 + GPUArrays v2.0.1
   01680d73 + GenericSVD v0.3.0
   7869d1d1 + IRTools v0.3.1
   d25df0c9 + Inflate v0.1.2
   1d5cc7b8 + IntelOpenMP_jll v2018.0.3+0
   42fd0dbc + IterativeSolvers v0.8.3
   82899510 + IteratorInterfaceExtensions v1.0.0
   e5e0dc1b + Juno v0.8.1
   929cbde3 + LLVM v1.3.4
   a5e1c1ea + LatinHypercubeSampling v1.6.3
   1d6d02ad + LeftChildRightSiblingTrees v0.1.2
   093fc24a + LightGraphs v1.3.1
   d3d80556 + LineSearches v7.0.1
   e6f89c97 + LoggingExtras v0.4.0
   856f044c + MKL_jll v2019.0.117+2
   1914dd2f + MacroTools v0.5.5
   e89f7d12 + Media v0.5.0
   e1d29d7a + Missings v0.4.3
   46d2c3a1 + MuladdMacro v0.2.2
   d41bc354 + NLSolversBase v7.6.1
   2774e3e8 + NLsolve v4.3.0
   872c559c + NNlib v0.6.6
   77ba4419 + NaNMath v0.3.3
   4536629a + OpenBLAS_jll v0.3.9+0
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   429524aa + Optim v0.20.6
   bac558e1 + OrderedCollections v1.1.0
   1dea7af3 + OrdinaryDiffEq v5.32.1
   90014a1f + PDMats v0.9.12
   d96e819e + Parameters v0.12.0
   85a6dd25 + PositiveFactorizations v0.2.3
   33c8b6b6 + ProgressLogging v0.1.2
   92933f4c + ProgressMeter v1.2.0
   1fd47b50 + QuadGK v2.3.1
   8a4e6c94 + QuasiMonteCarlo v0.1.2
   3cdcf5f2 + RecipesBase v0.8.0
   731186ca + RecursiveArrayTools v2.1.0
   f2c3362d + RecursiveFactorization v0.1.0
   189a3867 + Reexport v0.2.0
   ae029012 + Requires v1.0.1
   37e2e3b7 + ReverseDiff v1.1.0
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   f2b01f46 + Roots v1.0.1
   699a6c99 + SimpleTraits v0.9.1
   ed01d8cd + Sobol v1.3.0
   a2af1166 + SortingAlgorithms v0.3.1
   47a9eef4 + SparseDiffTools v1.4.0
   d4ead438 + SpatialIndexing v0.1.2
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   3783bdb8 + TableTraits v1.0.0
   5d786b92 + TerminalLoggers v0.1.1
   a759f4b9 + TimerOutputs v0.5.3
   9f7883ad + Tracker v0.2.6
   3bb67fe8 + TranscodingStreams v0.9.5
   a2a6695c + TreeViews v0.3.0
   3a884ed6 + UnPack v0.1.0
   19fa3120 + VertexSafeGraphs v0.1.1
   a5390f91 + ZipFile v0.9.1
   83775a58 + Zlib_jll v1.2.11+9
   e88e6eb3 + Zygote v0.4.12
   700de1a5 + ZygoteRules v0.2.0
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8bb1440f + DelimitedFiles
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   a63ad114 + Mmap
   44cfe95a + Pkg
   de0858da + Printf
   9abbd945 + Profile
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   1a1011a3 + SharedArrays
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   4607b0f0 + SuiteSparse
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
   Building FFTW ─────→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
   Building NNlib ────→ `~/.julia/packages/NNlib/FAI3o/deps/build.log`
   Building CodecZlib → `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
    Testing DiffEqFlux
     Status `/tmp/jl_D0Ru1C/Project.toml`
   79e6a3ab Adapt v1.0.1
   a134a8b2 BlackBoxOptim v0.5.0
   bcd4f6db DelayDiffEq v5.23.0
   2b5f629d DiffEqBase v6.25.1
   aae7a2af DiffEqFlux v1.8.0
   41bf760c DiffEqSensitivity v6.10.0
   163ba53b DiffResults v1.0.2
   587475ba Flux v0.10.3
   f6369f11 ForwardDiff v0.10.10
   76087f3c NLopt v0.5.1
   429524aa Optim v0.20.6
   1dea7af3 OrdinaryDiffEq v5.32.1
   33c8b6b6 ProgressLogging v0.1.2
   731186ca RecursiveArrayTools v2.1.0
   ae029012 Requires v1.0.1
   37e2e3b7 ReverseDiff v1.1.0
   1bc83da4 SafeTestsets v0.0.1
   90137ffa StaticArrays v0.12.1
   789caeaf StochasticDiffEq v6.19.1
   9f7883ad Tracker v0.2.6
   e88e6eb3 Zygote v0.4.12
   700de1a5 ZygoteRules v0.2.0
   37e2e46d LinearAlgebra
   56ddb016 Logging
   de0858da Printf
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_D0Ru1C/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   1520ce14 AbstractTrees v0.3.2
   79e6a3ab Adapt v1.0.1
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.6.2
   4c555306 ArrayLayouts v0.1.5
   9e28174c BinDeps v1.0.0
   b99e7846 BinaryProvider v0.5.8
   a134a8b2 BlackBoxOptim v0.5.0
   fa961155 CEnum v0.2.0
   631607c0 CMake v1.2.0
   d5fb7624 CMakeWrapper v0.2.3
   a9c8d775 CPUTime v1.0.0
   3895d2a7 CUDAapi v3.1.0
   c5f51814 CUDAdrv v6.0.0
   be33ccc6 CUDAnative v2.10.2
   d360d2e6 ChainRulesCore v0.7.1
   944b1d66 CodecZlib v0.6.0
   3da002f7 ColorTypes v0.9.1
   5ae59095 Colors v0.11.2
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.3.3+0
   88cd18e8 ConsoleProgressMonitor v0.1.2
   3a865a2d CuArrays v1.7.3
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.11
   bcd4f6db DelayDiffEq v5.23.0
   2b5f629d DiffEqBase v6.25.1
   459566f4 DiffEqCallbacks v2.12.1
   aae7a2af DiffEqFlux v1.8.0
   77a26b50 DiffEqNoiseProcess v3.9.0
   41bf760c DiffEqSensitivity v6.10.0
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   31c24e10 Distributions v0.23.2
   ffbed154 DocStringExtensions v0.8.1
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+5
   1a297f60 FillArrays v0.8.6
   6a86dc24 FiniteDiff v2.3.0
   53c48c17 FixedPointNumbers v0.7.1
   587475ba Flux v0.10.3
   f6369f11 ForwardDiff v0.10.10
   069b7b12 FunctionWrappers v1.1.1
   0c68f7d7 GPUArrays v2.0.1
   01680d73 GenericSVD v0.3.0
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.2
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   42fd0dbc IterativeSolvers v0.8.3
   82899510 IteratorInterfaceExtensions v1.0.0
   e5e0dc1b Juno v0.8.1
   929cbde3 LLVM v1.3.4
   a5e1c1ea LatinHypercubeSampling v1.6.3
   1d6d02ad LeftChildRightSiblingTrees v0.1.2
   093fc24a LightGraphs v1.3.1
   d3d80556 LineSearches v7.0.1
   e6f89c97 LoggingExtras v0.4.0
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.5
   fdba3010 MathProgBase v0.7.8
   e89f7d12 Media v0.5.0
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   d41bc354 NLSolversBase v7.6.1
   76087f3c NLopt v0.5.1
   2774e3e8 NLsolve v4.3.0
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.9+0
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   429524aa Optim v0.20.6
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.32.1
   90014a1f PDMats v0.9.12
   d96e819e Parameters v0.12.0
   85a6dd25 PositiveFactorizations v0.2.3
   33c8b6b6 ProgressLogging v0.1.2
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   8a4e6c94 QuasiMonteCarlo v0.1.2
   e6cf234a RandomNumbers v1.4.0
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   ae5879a3 ResettableStacks v1.0.0
   37e2e3b7 ReverseDiff v1.1.0
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v1.0.1
   1bc83da4 SafeTestsets v0.0.1
   699a6c99 SimpleTraits v0.9.1
   ed01d8cd Sobol v1.3.0
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   d4ead438 SpatialIndexing v0.1.2
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   789caeaf StochasticDiffEq v6.19.1
   3783bdb8 TableTraits v1.0.0
   5d786b92 TerminalLoggers v0.1.1
   a759f4b9 TimerOutputs v0.5.3
   9f7883ad Tracker v0.2.6
   3bb67fe8 TranscodingStreams v0.9.5
   a2a6695c TreeViews v0.3.0
   30578b45 URIParser v0.4.0
   3a884ed6 UnPack v0.1.0
   19fa3120 VertexSafeGraphs v0.1.1
   a5390f91 ZipFile v0.9.1
   83775a58 Zlib_jll v1.2.11+9
   e88e6eb3 Zygote v0.4.12
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   9abbd945 Profile
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: could not import Compiler.just_construct_ssa into Wrap
┌ Warning: CuArrays.jl found cuda, but did not find libcudnn. Some functionality will not be available.
└ @ Flux ~/.julia/packages/Flux/NpkMm/src/Flux.jl:48
┌ Warning: Incompatibility detected between CUDA and LLVM 8.0+; disabling debug info emission for CUDA kernels
└ @ CUDAnative ~/.julia/packages/CUDAnative/hfulr/src/CUDAnative.jl:114
┌ Warning: CuArrays.jl found cuda, but did not find libcudnn. Some functionality will not be available.
└ @ Flux ~/.julia/packages/Flux/NpkMm/src/Flux.jl:48
416.7086995514811301.86465432569827213.21697213391016149.3929796071194115.2247517913104296.3438136311290279.3936123278511765.5625775751988754.73408970504229446.2626159904189439.55562467607837434.29338639796445430.54262397471921328.93102825992030330.78230280655101637.5616921386252547.3899178101139352.31771747076819448.8559023431533241.1409918445188933.4998573173513127.7136171838481823.8213532431337521.2574969683678819.43364473086034417.9080234863235616.40169427585258414.75827680393393112.9155083938401710.8813206837866058.7182734287630626.5317427624672214.45717155975515762.6440088213855261.23592071815229730.34657206429314730.032376452495214510.26367482940779230.905567097641851.72975726545156162.4738072183786732.93352765725007243.03618679634409672.84498125290393672.49864919108605132.1348949032518721.84171784634708581.64735382952383951.53548374223780541.46787860302471571.40348733006078131.31057624087927451.1723646987133380.98792068128521930.77000396330597080.54099857867771020.327773302321376360.156017818275280080.0445653704883056740.00091322139101779030.0190239786206280320.080410475436539270.159197271761418070.229589835455646730.27324885152407110.28364198270243850.26573545746272670.231707259387955280.195075966066423880.16585180213779310.148215404734272720.140797690163480650.13867239213660060.135911948945067140.127791420961522520.112133203758811030.089657382441687130.063454110359997350.037871264121909730.017167018654110830.0042911560636956050.000132331621225468740.0034254726393664930.0112719546828020260.020185633126746330.027176635651557520.0305475552150724330.0301433293399415230.027042574606087690.0228944748810245740.0192068480124802340.0168492892211720180.0158974341901012840.0157962049318957630.0157121461393411320.0149121397453862370.013034469259305310.0101844853779321530.0068527418229991870.00371107376408517140.4165147233362722.05749907210333312.0370229088210226.5135197460485113.4493268314854941.75595334745193780.84094112859804390.37442848437232390.168534450628907680.113993987252263160.146123478717827850.226085226249190860.330333604729165340.444534373326884170.55998839915566550.67148736086149520.77600647672168410.87189532854251120.95837015434837681.03519180224068191.10245973190405681.1604782310606711.20967136813183121.2505271011940631.28356141199421251.30929540278075081.32824101618583621.34089244428137851.34772122926775031.34917388070383741.34567112361001651.33760820437140931.32535586876996651.30926175199351081.2896520048541721.26683303750284851.2410933007046591.21270505766819881.18192610099156161.14900136156496921.11416445784295411.077639125372521.03964052899088681.00037646561251430.96004837917381170.9188522812487860.87697958751648160.83461759464484320.79194990569877520.74915676965992480.70641524364564860.6638991331799460.6217785606913130.58021964301761350.53938387483431670.499427333461248070.460499739708821740.42274337822788430.386291899150562330.35126903336119110.317787254515817130.28594642748894370.2558324889077440.22751621015976570.201052096409242430.17647747594999640.153811832936124440.13305643256661220.114194281298790780.097190454764755960.081992813256698670.068533108927257250.0567284800940232450.046483294056760050.037691293225716780.0302379803044163580.0240031626280547870.018863561059381280.0146954113248494580.0113769316606047150.0087905797423000960.0068250187158452330.0053767511287227460.0043513374548950640.0036642088220860870.0032410697523287770.0030179127204255330.00294069263292744520.002964718794096250.0030538328905185820.00317944571738445650.00331950398506860.00345745205301092220.00358124310142483430.00368244138331800960.00375544316037069530.0037968299933879190.003804855491655320.0037790561592185770.0037199694116348114416.70869955148316301.87186997430365213.22801705361297149.40648614478837115.2240412249364696.3454391345538679.3977976779125865.5678714713974554.73969630607274446.2681431647925939.5608383606454234.2980229596167530.54633410011867428.9332381463373130.78208250143966437.5587566610162847.3870414634704752.3184906512701248.8589544323429841.14383255919601433.5012140860317727.71329342894746323.81952936942857221.2543767187669819.4294856183711817.90303100693667616.39608500849614714.75230897079328312.90945584534311610.8754625577971288.712882525457966.5270686024001344.4534149599774862.6412962392444671.2342795663056390.3459158046638280.032506748634095760.264310414146053160.90639787468961761.7305156642179892.4743407762289472.9338239544033673.0363286740031682.84506488225275162.49872238818174442.13494430274363721.8416920826943291.6471951659831451.53515198186780831.46736343542057451.40280885504569251.30977827422533061.1715059590677530.98706641658549010.76921762520158130.54033333964074280.32726603243509670.155685347538229820.044402053227207340.00089265358725995560.0191039242369983630.080534769824929170.159307303717266780.229641600525029880.273224851436197740.283552996888048250.26561206968046450.23158584804701470.194985613398158870.165806707487119760.14821387238102470.140826097601411540.13871147379454670.135943057155115480.12780127946737040.112116466759106760.089616889144780110.063399129505176940.037814459743258160.017120978004210560.00426522788223897450.00013060182132885350.00344585479851722280.011306698777051870.0202248123961467770.02721155913652230.0305730930624841660.030158440940405340.027049241017987240.022895782224433470.0192051454721658860.016845112348903880.0158894783750984330.015782221974403340.015690315650227170.0148822708785586060.0129985681020147110.0101464819170533940.0068175358724189420.003683289147449469Test Summary: | Pass  Total
Layers Tests  |    6      6
Test Summary: | Pass  Total
Fast Layers   |    9      9
Training   0%|                                          |  ETA: N/A
494.2089032199091loss: 494   1%|▍                                        |  ETA: 0:07:43
416.7086995514831loss: 417   2%|▉                                        |  ETA: 0:03:57
301.87186997430365loss: 302   3%|█▎                                       |  ETA: 0:02:38
213.22801705361297loss: 213   4%|█▋                                       |  ETA: 0:01:59
149.40648614478843loss: 149   5%|██                                       |  ETA: 0:01:35
115.22404122493646loss: 115   6%|██▌                                      |  ETA: 0:01:20
96.34543913455384loss: 96.3   7%|██▊                                     |  ETA: 0:01:08
79.39779767791259loss: 79.4   8%|███▎                                    |  ETA: 0:00:59
65.56787147139745loss: 65.6   9%|███▋                                    |  ETA: 0:00:53
54.739696306072744loss: 54.7  10%|████                                    |  ETA: 0:00:47
46.26814316479258loss: 46.3  11%|████▍                                   |  ETA: 0:00:43
39.560838360645405loss: 39.6  12%|████▊                                   |  ETA: 0:00:39
34.298022959616745loss: 34.3  13%|█████▎                                  |  ETA: 0:00:36
30.54633410011867loss: 30.5  14%|█████▋                                  |  ETA: 0:00:34
28.933238146337313loss: 28.9  15%|██████                                  |  ETA: 0:00:31
30.78208250143967loss: 30.8  16%|██████▍                                 |  ETA: 0:00:29
37.55875666101628loss: 37.6  17%|██████▊                                 |  ETA: 0:00:27
47.38704146347047loss: 47.4  18%|███████▎                                |  ETA: 0:00:26
52.318490651270146loss: 52.3  19%|███████▋                                |  ETA: 0:00:24
48.85895443234298loss: 48.9  20%|████████                                |  ETA: 0:00:23
41.143832559196loss: 41.1  21%|████████▍                               |  ETA: 0:00:22
33.50121408603177loss: 33.5  22%|████████▊                               |  ETA: 0:00:21
27.713293428947466loss: 27.7  23%|█████████▎                              |  ETA: 0:00:20
23.819529369428558loss: 23.8  24%|█████████▋                              |  ETA: 0:00:19
21.254376718766984loss: 21.3  25%|██████████                              |  ETA: 0:00:18
19.42948561837119loss: 19.4  26%|██████████▍                             |  ETA: 0:00:17
17.90303100693668loss: 17.9  27%|██████████▊                             |  ETA: 0:00:16
16.396085008496147loss: 16.4  28%|███████████▎                            |  ETA: 0:00:16
14.752308970793283loss: 14.8  29%|███████████▋                            |  ETA: 0:00:15
12.909455845343116loss: 12.9  30%|████████████                            |  ETA: 0:00:15
10.875462557797128loss: 10.9  31%|████████████▍                           |  ETA: 0:00:14
8.71288252545796loss: 8.71  32%|████████████▊                           |  ETA: 0:00:13
6.527068602400136loss: 6.53  33%|█████████████▎                          |  ETA: 0:00:13
4.4534149599774855loss: 4.45  34%|█████████████▋                          |  ETA: 0:00:12
2.6412962392444665loss: 2.64  35%|██████████████                          |  ETA: 0:00:12
1.2342795663056394loss: 1.23  36%|██████████████▍                         |  ETA: 0:00:12
0.34591580466382804loss: 0.346  37%|██████████████▍                        |  ETA: 0:00:11
0.03250674863409575loss: 0.0325  38%|██████████████▌                       |  ETA: 0:00:11
0.2643104141460533loss: 0.264  39%|███████████████▎                       |  ETA: 0:00:10
0.9063978746896175loss: 0.906  40%|███████████████▋                       |  ETA: 0:00:10
1.7305156642179889loss: 1.73  41%|████████████████▍                       |  ETA: 0:00:10
2.474340776228947loss: 2.47  42%|████████████████▊                       |  ETA: 0:00:09
2.933823954403367loss: 2.93  43%|█████████████████▎                      |  ETA: 0:00:09
3.036328674003168loss: 3.04  44%|█████████████████▋                      |  ETA: 0:00:09
2.845064882252751loss: 2.85  45%|██████████████████                      |  ETA: 0:00:09
2.498722388181745loss: 2.5  46%|██████████████████▉                      |  ETA: 0:00:08
2.1349443027436377loss: 2.13  47%|██████████████████▊                     |  ETA: 0:00:08
1.8416920826943293loss: 1.84  48%|███████████████████▎                    |  ETA: 0:00:08
1.647195165983145loss: 1.65  49%|███████████████████▋                    |  ETA: 0:00:07
1.5351519818678083loss: 1.54  50%|████████████████████                    |  ETA: 0:00:07
1.467363435420574loss: 1.47  51%|████████████████████▍                   |  ETA: 0:00:07
1.402808855045693loss: 1.4  52%|█████████████████████▍                   |  ETA: 0:00:07
1.3097782742253306loss: 1.31  53%|█████████████████████▎                  |  ETA: 0:00:07
1.171505959067753loss: 1.17  54%|█████████████████████▋                  |  ETA: 0:00:06
0.9870664165854897loss: 0.987  55%|█████████████████████▌                 |  ETA: 0:00:06
0.7692176252015813loss: 0.769  56%|█████████████████████▉                 |  ETA: 0:00:06
0.5403333396407428loss: 0.54  57%|██████████████████████▊                 |  ETA: 0:00:06
0.3272660324350968loss: 0.327  58%|██████████████████████▋                |  ETA: 0:00:05
0.1556853475382298loss: 0.156  59%|███████████████████████                |  ETA: 0:00:05
0.04440205322720733loss: 0.0444  60%|██████████████████████▊               |  ETA: 0:00:05
0.0008926535872599556loss: 0.000893  61%|██████████████████████              |  ETA: 0:00:05
0.019103924236998377loss: 0.0191  62%|███████████████████████▌              |  ETA: 0:00:05
0.08053476982492919loss: 0.0805  63%|████████████████████████              |  ETA: 0:00:05
0.15930730371726676loss: 0.159  64%|█████████████████████████              |  ETA: 0:00:04
0.22964160052502988loss: 0.23  65%|██████████████████████████              |  ETA: 0:00:04
0.2732248514361978loss: 0.273  66%|█████████████████████████▊             |  ETA: 0:00:04
0.2835529968880482loss: 0.284  67%|██████████████████████████▏            |  ETA: 0:00:04
0.2656120696804645loss: 0.266  68%|██████████████████████████▌            |  ETA: 0:00:04
0.23158584804701468loss: 0.232  69%|██████████████████████████▉            |  ETA: 0:00:04
0.19498561339815892loss: 0.195  70%|███████████████████████████▎           |  ETA: 0:00:03
0.1658067074871198loss: 0.166  71%|███████████████████████████▊           |  ETA: 0:00:03
0.14821387238102476loss: 0.148  72%|████████████████████████████▏          |  ETA: 0:00:03
0.14082609760141152loss: 0.141  73%|████████████████████████████▌          |  ETA: 0:00:03
0.13871147379454676loss: 0.139  74%|████████████████████████████▉          |  ETA: 0:00:03
0.13594305715511545loss: 0.136  75%|█████████████████████████████▎         |  ETA: 0:00:03
0.1278012794673704loss: 0.128  76%|█████████████████████████████▋         |  ETA: 0:00:03
0.11211646675910676loss: 0.112  77%|██████████████████████████████         |  ETA: 0:00:03
0.0896168891447801loss: 0.0896  78%|█████████████████████████████▋        |  ETA: 0:00:02
0.06339912950517693loss: 0.0634  79%|██████████████████████████████        |  ETA: 0:00:02
0.03781445974325816loss: 0.0378  80%|██████████████████████████████▍       |  ETA: 0:00:02
0.017120978004210557loss: 0.0171  81%|██████████████████████████████▊       |  ETA: 0:00:02
0.004265227882238975loss: 0.00427  82%|██████████████████████████████▍      |  ETA: 0:00:02
0.00013060182132885353loss: 0.000131  83%|█████████████████████████████▉      |  ETA: 0:00:02
0.0034458547985172228loss: 0.00345  84%|███████████████████████████████▏     |  ETA: 0:00:02
0.01130669877705187loss: 0.0113  85%|████████████████████████████████▎     |  ETA: 0:00:02
0.020224812396146763loss: 0.0202  86%|████████████████████████████████▋     |  ETA: 0:00:01
0.0272115591365223loss: 0.0272  87%|█████████████████████████████████     |  ETA: 0:00:01
0.030573093062484166loss: 0.0306  88%|█████████████████████████████████▌    |  ETA: 0:00:01
0.03015844094040534loss: 0.0302  89%|█████████████████████████████████▉    |  ETA: 0:00:01
0.027049241017987252loss: 0.027  90%|███████████████████████████████████▏   |  ETA: 0:00:01
0.02289578222443347loss: 0.0229  91%|██████████████████████████████████▋   |  ETA: 0:00:01
0.019205145472165897loss: 0.0192  92%|███████████████████████████████████   |  ETA: 0:00:01
0.01684511234890388loss: 0.0168  93%|███████████████████████████████████▍  |  ETA: 0:00:01
0.01588947837509843loss: 0.0159  94%|███████████████████████████████████▊  |  ETA: 0:00:01
0.015782221974403335loss: 0.0158  95%|████████████████████████████████████▏ |  ETA: 0:00:00
0.01569031565022717loss: 0.0157  96%|████████████████████████████████████▌ |  ETA: 0:00:00
0.014882270878558595loss: 0.0149  97%|████████████████████████████████████▉ |  ETA: 0:00:00
0.01299856810201471loss: 0.013  98%|██████████████████████████████████████▎|  ETA: 0:00:00
0.010146481917053394loss: 0.0101  99%|█████████████████████████████████████▋|  ETA: 0:00:00
0.0068175358724189405loss: 0.00682 100%|█████████████████████████████████████| Time: 0:00:09
0.00013060182132885353Training 100%|██████████████████████████████████████████| Time: 0:00:10
494.2089032199091473.8759825703607567.1074818633421318.3855315564830028.9648899689183876.117368644930780.16955330167694750.00127452976279778434.4571905150957083e-72.8044413366351072e-82.7293451721924503e-82.729347900600587e-8494.2089032199091473.8237904460742767.225842645127621.36751439899320811.4350691360731788.0109706995672490.32915359623862510.0036303407653235878.934029714091469e-56.246060306129264e-50.00031047251577495510.0058696171661135780.000109832425486265727.733918863503838e-64.2537266437804656e-78.726103760581099e-74.2537266437804656e-72.72458808565546e-72.766701471525958e-72.72458808565546e-72.6483736867625894e-72.648412606822959e-72.6483736867625894e-72.5881397656192965e-72.588142311285918e-72.5881397656192965e-72.508740247077843e-72.508742514801445e-72.508740247077843e-72.508742104639958e-7Starting optimization with optimizer BlackBoxOptim.DiffEvoOpt{BlackBoxOptim.FitPopulation{Float64},BlackBoxOptim.SimpleSelector,BlackBoxOptim.AdaptiveDiffEvoRandBin{3},BlackBoxOptim.RandomBound{BlackBoxOptim.ContinuousRectSearchSpace}}
0.00 secs, 0 evals, 0 steps

Optimization stopped after 101 steps and 0.30 seconds
Termination reason: Max number of steps (100) reached
Steps per second = 335.56
Function evals per second = 554.83
Improvements/step = 0.43000
Total function evaluations = 167


Best candidate found: [3.44176, 3.41233, 4.04457, 4.1238]

Fitness: 0.095531500

Training   0%|                                          |  ETA: N/A
74.23333058147179loss: 74.2   1%|▍                                       |  ETA: 0:00:30
40.41651472333627loss: 40.4   2%|▊                                       |  ETA: 0:00:15
22.057499072103333loss: 22.1   3%|█▎                                      |  ETA: 0:00:10
12.037022908821022loss: 12   4%|█▋                                        |  ETA: 0:00:07
6.513519746048511loss: 6.51   5%|██                                      |  ETA: 0:00:06
3.449326831485494loss: 3.45   6%|██▍                                     |  ETA: 0:00:05
1.7559533474519378loss: 1.76   7%|██▊                                     |  ETA: 0:00:04
0.8409411285980439loss: 0.841   8%|███▏                                   |  ETA: 0:00:04
0.3744284843723239loss: 0.374   9%|███▌                                   |  ETA: 0:00:03
0.16853445062890768loss: 0.169  10%|███▉                                   |  ETA: 0:00:03
0.11399398725226316loss: 0.114  11%|████▎                                  |  ETA: 0:00:03
0.14612347871782785loss: 0.146  12%|████▋                                  |  ETA: 0:00:02
0.22608522624919086loss: 0.226  13%|█████▏                                 |  ETA: 0:00:02
0.33033360472916534loss: 0.33  14%|█████▋                                  |  ETA: 0:00:02
0.44453437332688417loss: 0.445  15%|█████▉                                 |  ETA: 0:00:02
0.5599883991556655loss: 0.56  16%|██████▍                                 |  ETA: 0:00:02
0.6714873608614952loss: 0.671  17%|██████▋                                |  ETA: 0:00:02
0.7760064767216841loss: 0.776  18%|███████                                |  ETA: 0:00:01
0.8718953285425112loss: 0.872  19%|███████▍                               |  ETA: 0:00:01
0.9583701543483768loss: 0.958  20%|███████▊                               |  ETA: 0:00:01
1.0351918022406819loss: 1.04  21%|████████▍                               |  ETA: 0:00:01
1.1024597319040568loss: 1.1  22%|█████████                                |  ETA: 0:00:01
1.160478231060671loss: 1.16  23%|█████████▎                              |  ETA: 0:00:01
1.2096713681318312loss: 1.21  24%|█████████▋                              |  ETA: 0:00:01
1.250527101194063loss: 1.25  25%|██████████                              |  ETA: 0:00:01
1.2835614119942125loss: 1.28  26%|██████████▍                             |  ETA: 0:00:01
1.3092954027807508loss: 1.31  27%|██████████▊                             |  ETA: 0:00:01
1.3282410161858362loss: 1.33  28%|███████████▎                            |  ETA: 0:00:01
1.3408924442813785loss: 1.34  29%|███████████▋                            |  ETA: 0:00:01
1.3477212292677503loss: 1.35  30%|████████████                            |  ETA: 0:00:01
1.3491738807038374loss: 1.35  31%|████████████▍                           |  ETA: 0:00:01
1.3456711236100165loss: 1.35  32%|████████████▊                           |  ETA: 0:00:01
1.3376082043714093loss: 1.34  33%|█████████████▎                          |  ETA: 0:00:01
1.3253558687699665loss: 1.33  34%|█████████████▋                          |  ETA: 0:00:01
1.3092617519935108loss: 1.31  35%|██████████████                          |  ETA: 0:00:01
1.289652004854172loss: 1.29  36%|██████████████▍                         |  ETA: 0:00:01
1.2668330375028485loss: 1.27  37%|██████████████▊                         |  ETA: 0:00:01
1.241093300704659loss: 1.24  38%|███████████████▎                        |  ETA: 0:00:01
1.2127050576681988loss: 1.21  39%|███████████████▋                        |  ETA: 0:00:01
1.1819261009915616loss: 1.18  40%|████████████████                        |  ETA: 0:00:01
1.1490013615649692loss: 1.15  41%|████████████████▍                       |  ETA: 0:00:01
1.1141644578429541loss: 1.11  42%|████████████████▊                       |  ETA: 0:00:00
1.07763912537252loss: 1.08  43%|█████████████████▎                      |  ETA: 0:00:00
1.0396405289908868loss: 1.04  44%|█████████████████▋                      |  ETA: 0:00:00
1.0003764656125143loss: 1  45%|███████████████████▍                       |  ETA: 0:00:00
0.9600483791738117loss: 0.96  46%|██████████████████▍                     |  ETA: 0:00:00
0.918852281248786loss: 0.919  47%|██████████████████▍                    |  ETA: 0:00:00
0.8769795875164816loss: 0.877  48%|██████████████████▊                    |  ETA: 0:00:00
0.8346175946448432loss: 0.835  49%|███████████████████▏                   |  ETA: 0:00:00
0.7919499056987752loss: 0.792  50%|███████████████████▌                   |  ETA: 0:00:00
0.7491567696599248loss: 0.749  51%|███████████████████▉                   |  ETA: 0:00:00
0.7064152436456486loss: 0.706  52%|████████████████████▎                  |  ETA: 0:00:00
0.663899133179946loss: 0.664  53%|████████████████████▋                  |  ETA: 0:00:00
0.621778560691313loss: 0.622  54%|█████████████████████                  |  ETA: 0:00:00
0.5802196430176135loss: 0.58  55%|██████████████████████                  |  ETA: 0:00:00
0.5393838748343167loss: 0.539  56%|█████████████████████▉                 |  ETA: 0:00:00
0.49942733346124807loss: 0.499  57%|██████████████████████▎                |  ETA: 0:00:00
0.46049973970882174loss: 0.46  58%|███████████████████████▎                |  ETA: 0:00:00
0.4227433782278843loss: 0.423  59%|███████████████████████                |  ETA: 0:00:00
0.38629189915056233loss: 0.386  60%|███████████████████████▍               |  ETA: 0:00:00
0.3512690333611911loss: 0.351  61%|███████████████████████▊               |  ETA: 0:00:00
0.31778725451581713loss: 0.318  62%|████████████████████████▏              |  ETA: 0:00:00
0.2859464274889437loss: 0.286  63%|████████████████████████▋              |  ETA: 0:00:00
0.255832488907744loss: 0.256  64%|█████████████████████████              |  ETA: 0:00:00
0.2275162101597657loss: 0.228  65%|█████████████████████████▍             |  ETA: 0:00:00
0.20105209640924243loss: 0.201  66%|█████████████████████████▊             |  ETA: 0:00:00
0.1764774759499964loss: 0.176  67%|██████████████████████████▏            |  ETA: 0:00:00
0.15381183293612444loss: 0.154  68%|██████████████████████████▌            |  ETA: 0:00:00
0.1330564325666122loss: 0.133  69%|██████████████████████████▉            |  ETA: 0:00:00
0.11419428129879078loss: 0.114  70%|███████████████████████████▎           |  ETA: 0:00:00
0.09719045476475596loss: 0.0972  71%|███████████████████████████           |  ETA: 0:00:00
0.08199281325669867loss: 0.082  72%|████████████████████████████▏          |  ETA: 0:00:00
0.06853310892725725loss: 0.0685  73%|███████████████████████████▊          |  ETA: 0:00:00
0.056728480094023245loss: 0.0567  74%|████████████████████████████▏         |  ETA: 0:00:00
0.04648329405676005loss: 0.0465  75%|████████████████████████████▌         |  ETA: 0:00:00
0.03769129322571678loss: 0.0377  76%|████████████████████████████▉         |  ETA: 0:00:00
0.030237980304416358loss: 0.0302  77%|█████████████████████████████▎        |  ETA: 0:00:00
0.024003162628054787loss: 0.024  78%|██████████████████████████████▍        |  ETA: 0:00:00
0.01886356105938128loss: 0.0189  79%|██████████████████████████████        |  ETA: 0:00:00
0.014695411324849458loss: 0.0147  80%|██████████████████████████████▍       |  ETA: 0:00:00
0.011376931660604715loss: 0.0114  81%|██████████████████████████████▊       |  ETA: 0:00:00
0.008790579742300096loss: 0.00879  82%|██████████████████████████████▍      |  ETA: 0:00:00
0.006825018715845233loss: 0.00683  83%|██████████████████████████████▊      |  ETA: 0:00:00
0.005376751128722746loss: 0.00538  84%|███████████████████████████████▏     |  ETA: 0:00:00
0.004351337454895064loss: 0.00435  85%|███████████████████████████████▌     |  ETA: 0:00:00
0.003664208822086087loss: 0.00366  86%|███████████████████████████████▉     |  ETA: 0:00:00
0.003241069752328777loss: 0.00324  87%|████████████████████████████████▎    |  ETA: 0:00:00
0.003017912720425533loss: 0.00302  88%|████████████████████████████████▌    |  ETA: 0:00:00
0.0029406926329274452loss: 0.00294  89%|████████████████████████████████▉    |  ETA: 0:00:00
0.00296471879409625loss: 0.00296  90%|█████████████████████████████████▎   |  ETA: 0:00:00
0.003053832890518582loss: 0.00305  91%|█████████████████████████████████▋   |  ETA: 0:00:00
0.0031794457173844565loss: 0.00318  92%|██████████████████████████████████   |  ETA: 0:00:00
0.0033195039850686loss: 0.00332  93%|██████████████████████████████████▍  |  ETA: 0:00:00
0.0034574520530109222loss: 0.00346  94%|██████████████████████████████████▊  |  ETA: 0:00:00
0.0035812431014248343loss: 0.00358  95%|███████████████████████████████████▏ |  ETA: 0:00:00
0.0036824413833180096loss: 0.00368  96%|███████████████████████████████████▌ |  ETA: 0:00:00
0.0037554431603706953loss: 0.00376  97%|███████████████████████████████████▉ |  ETA: 0:00:00
0.003796829993387919loss: 0.0038  98%|█████████████████████████████████████▎|  ETA: 0:00:00
0.00380485549165532loss: 0.0038  99%|█████████████████████████████████████▋|  ETA: 0:00:00
0.003779056159218577loss: 0.00378 100%|█████████████████████████████████████| Time: 0:00:00
0.0029406926329274452Training 100%|██████████████████████████████████████████| Time: 0:00:00
74.233330581471791.56135771993787721.51943291733128061.51473100623542180.68242629663728870.191372695910355050.00019358396316548111.7955751251456144e-61.0477433167206356e-107.924036678678786e-177.924038666328425e-17Training   0%|                                          |  ETA: N/A
494.2089032199091loss: 494   1%|▍                                        |  ETA: 0:00:33
416.7086995514831loss: 417   2%|▉                                        |  ETA: 0:00:19
301.87186997430365loss: 302   3%|█▎                                       |  ETA: 0:00:14
213.22801705361297loss: 213   4%|█▋                                       |  ETA: 0:00:12
149.40648614478843loss: 149   5%|██                                       |  ETA: 0:00:10
115.22404122493646loss: 115   6%|██▌                                      |  ETA: 0:00:09
96.34543913455384loss: 96.3   7%|██▊                                     |  ETA: 0:00:09
79.39779767791259loss: 79.4   8%|███▎                                    |  ETA: 0:00:08
65.56787147139745loss: 65.6   9%|███▋                                    |  ETA: 0:00:08
54.739696306072744loss: 54.7  10%|████                                    |  ETA: 0:00:08
46.26814316479258loss: 46.3  11%|████▍                                   |  ETA: 0:00:07
39.560838360645405loss: 39.6  12%|████▊                                   |  ETA: 0:00:07
34.298022959616745loss: 34.3  13%|█████▎                                  |  ETA: 0:00:07
30.54633410011867loss: 30.5  14%|█████▋                                  |  ETA: 0:00:06
28.933238146337313loss: 28.9  15%|██████                                  |  ETA: 0:00:06
30.78208250143967loss: 30.8  16%|██████▍                                 |  ETA: 0:00:06
37.55875666101628loss: 37.6  17%|██████▊                                 |  ETA: 0:00:06
47.38704146347047loss: 47.4  18%|███████▎                                |  ETA: 0:00:05
52.318490651270146loss: 52.3  19%|███████▋                                |  ETA: 0:00:06
48.85895443234298loss: 48.9  20%|████████                                |  ETA: 0:00:05
41.143832559196loss: 41.1  21%|████████▍                               |  ETA: 0:00:05
33.50121408603177loss: 33.5  22%|████████▊                               |  ETA: 0:00:05
27.713293428947466loss: 27.7  23%|█████████▎                              |  ETA: 0:00:05
23.819529369428558loss: 23.8  24%|█████████▋                              |  ETA: 0:00:05
21.254376718766984loss: 21.3  25%|██████████                              |  ETA: 0:00:05
19.42948561837119loss: 19.4  26%|██████████▍                             |  ETA: 0:00:05
17.90303100693668loss: 17.9  27%|██████████▊                             |  ETA: 0:00:05
16.396085008496147loss: 16.4  28%|███████████▎                            |  ETA: 0:00:05
14.752308970793283loss: 14.8  29%|███████████▋                            |  ETA: 0:00:05
12.909455845343116loss: 12.9  30%|████████████                            |  ETA: 0:00:04
10.875462557797128loss: 10.9  31%|████████████▍                           |  ETA: 0:00:04
8.71288252545796loss: 8.71  32%|████████████▊                           |  ETA: 0:00:04
6.527068602400136loss: 6.53  33%|█████████████▎                          |  ETA: 0:00:04
4.4534149599774855loss: 4.45  34%|█████████████▋                          |  ETA: 0:00:04
2.6412962392444665loss: 2.64  35%|██████████████                          |  ETA: 0:00:04
1.2342795663056394loss: 1.23  36%|██████████████▍                         |  ETA: 0:00:04
0.34591580466382804loss: 0.346  37%|██████████████▍                        |  ETA: 0:00:04
0.03250674863409575loss: 0.0325  38%|██████████████▌                       |  ETA: 0:00:04
0.2643104141460533loss: 0.264  39%|███████████████▎                       |  ETA: 0:00:04
0.9063978746896175loss: 0.906  40%|███████████████▋                       |  ETA: 0:00:04
1.7305156642179889loss: 1.73  41%|████████████████▍                       |  ETA: 0:00:04
2.474340776228947loss: 2.47  42%|████████████████▊                       |  ETA: 0:00:03
2.933823954403367loss: 2.93  43%|█████████████████▎                      |  ETA: 0:00:03
3.036328674003168loss: 3.04  44%|█████████████████▋                      |  ETA: 0:00:03
2.845064882252751loss: 2.85  45%|██████████████████                      |  ETA: 0:00:03
2.498722388181745loss: 2.5  46%|██████████████████▉                      |  ETA: 0:00:03
2.1349443027436377loss: 2.13  47%|██████████████████▊                     |  ETA: 0:00:03
1.8416920826943293loss: 1.84  48%|███████████████████▎                    |  ETA: 0:00:03
1.647195165983145loss: 1.65  49%|███████████████████▋                    |  ETA: 0:00:03
1.5351519818678083loss: 1.54  50%|████████████████████                    |  ETA: 0:00:03
1.467363435420574loss: 1.47  51%|████████████████████▍                   |  ETA: 0:00:03
1.402808855045693loss: 1.4  52%|█████████████████████▍                   |  ETA: 0:00:03
1.3097782742253306loss: 1.31  53%|█████████████████████▎                  |  ETA: 0:00:03
1.171505959067753loss: 1.17  54%|█████████████████████▋                  |  ETA: 0:00:03
0.9870664165854897loss: 0.987  55%|█████████████████████▌                 |  ETA: 0:00:03
0.7692176252015813loss: 0.769  56%|█████████████████████▉                 |  ETA: 0:00:03
0.5403333396407428loss: 0.54  57%|██████████████████████▊                 |  ETA: 0:00:02
0.3272660324350968loss: 0.327  58%|██████████████████████▋                |  ETA: 0:00:02
0.1556853475382298loss: 0.156  59%|███████████████████████                |  ETA: 0:00:02
0.04440205322720733loss: 0.0444  60%|██████████████████████▊               |  ETA: 0:00:02
0.0008926535872599556loss: 0.000893  61%|██████████████████████              |  ETA: 0:00:02
0.019103924236998377loss: 0.0191  62%|███████████████████████▌              |  ETA: 0:00:02
0.08053476982492919loss: 0.0805  63%|████████████████████████              |  ETA: 0:00:02
0.15930730371726676loss: 0.159  64%|█████████████████████████              |  ETA: 0:00:02
0.22964160052502988loss: 0.23  65%|██████████████████████████              |  ETA: 0:00:02
0.2732248514361978loss: 0.273  66%|█████████████████████████▊             |  ETA: 0:00:02
0.2835529968880482loss: 0.284  67%|██████████████████████████▏            |  ETA: 0:00:02
0.2656120696804645loss: 0.266  68%|██████████████████████████▌            |  ETA: 0:00:02
0.23158584804701468loss: 0.232  69%|██████████████████████████▉            |  ETA: 0:00:02
0.19498561339815892loss: 0.195  70%|███████████████████████████▎           |  ETA: 0:00:02
0.1658067074871198loss: 0.166  71%|███████████████████████████▊           |  ETA: 0:00:02
0.14821387238102476loss: 0.148  72%|████████████████████████████▏          |  ETA: 0:00:02
0.14082609760141152loss: 0.141  73%|████████████████████████████▌          |  ETA: 0:00:02
0.13871147379454676loss: 0.139  74%|████████████████████████████▉          |  ETA: 0:00:01
0.13594305715511545loss: 0.136  75%|█████████████████████████████▎         |  ETA: 0:00:01
0.1278012794673704loss: 0.128  76%|█████████████████████████████▋         |  ETA: 0:00:01
0.11211646675910676loss: 0.112  77%|██████████████████████████████         |  ETA: 0:00:01
0.0896168891447801loss: 0.0896  78%|█████████████████████████████▋        |  ETA: 0:00:01
0.06339912950517693loss: 0.0634  79%|██████████████████████████████        |  ETA: 0:00:01
0.03781445974325816loss: 0.0378  80%|██████████████████████████████▍       |  ETA: 0:00:01
0.017120978004210557loss: 0.0171  81%|██████████████████████████████▊       |  ETA: 0:00:01
0.004265227882238975loss: 0.00427  82%|██████████████████████████████▍      |  ETA: 0:00:01
0.00013060182132885353loss: 0.000131  83%|█████████████████████████████▉      |  ETA: 0:00:01
0.0034458547985172228loss: 0.00345  84%|███████████████████████████████▏     |  ETA: 0:00:01
0.01130669877705187loss: 0.0113  85%|████████████████████████████████▎     |  ETA: 0:00:01
0.020224812396146763loss: 0.0202  86%|████████████████████████████████▋     |  ETA: 0:00:01
0.0272115591365223loss: 0.0272  87%|█████████████████████████████████     |  ETA: 0:00:01
0.030573093062484166loss: 0.0306  88%|█████████████████████████████████▌    |  ETA: 0:00:01
0.03015844094040534loss: 0.0302  89%|█████████████████████████████████▉    |  ETA: 0:00:01
0.027049241017987252loss: 0.027  90%|███████████████████████████████████▏   |  ETA: 0:00:01
0.02289578222443347loss: 0.0229  91%|██████████████████████████████████▋   |  ETA: 0:00:00
0.019205145472165897loss: 0.0192  92%|███████████████████████████████████   |  ETA: 0:00:00
0.01684511234890388loss: 0.0168  93%|███████████████████████████████████▍  |  ETA: 0:00:00
0.01588947837509843loss: 0.0159  94%|███████████████████████████████████▊  |  ETA: 0:00:00
0.015782221974403335loss: 0.0158  95%|████████████████████████████████████▏ |  ETA: 0:00:00
0.01569031565022717loss: 0.0157  96%|████████████████████████████████████▌ |  ETA: 0:00:00
0.014882270878558595loss: 0.0149  97%|████████████████████████████████████▉ |  ETA: 0:00:00
0.01299856810201471loss: 0.013  98%|██████████████████████████████████████▎|  ETA: 0:00:00
0.010146481917053394loss: 0.0101  99%|█████████████████████████████████████▋|  ETA: 0:00:00
0.0068175358724189405loss: 0.00682 100%|█████████████████████████████████████| Time: 0:00:05
0.00013060182132885353Training 100%|██████████████████████████████████████████| Time: 0:00:05
494.2089032199091473.8759825703607567.1074818633421318.3855315564830028.9648899689183876.117368644930780.16955330167694750.00127452976279778434.4571905150957083e-72.8044413366351072e-82.7293451721924503e-82.729347900600587e-8494.2089032199091473.8237904460742767.225842645127621.36751439899320811.4350691360731788.0109706995672490.32915359623862510.0036303407653235878.934029714091469e-56.246060306129264e-50.00031047251577495510.0058696171661135780.000109832425486265727.733918863503838e-64.2537266437804656e-78.726103760581099e-74.2537266437804656e-72.72458808565546e-72.766701471525958e-72.72458808565546e-72.6483736867625894e-72.648412606822959e-72.6483736867625894e-72.5881397656192965e-72.588142311285918e-72.5881397656192965e-72.508740247077843e-72.508742514801445e-72.508740247077843e-72.508742104639958e-7fval:4.94e+02  norm:3.16e+00
fval:7.43e+05  norm:2.61e+00
fval:8.79e+05  norm:2.73e+00
fval:1.51e+05  norm:2.92e+00
fval:2.24e+03  norm:3.07e+00
fval:4.87e+02  norm:3.14e+00
fval:3.70e+02  norm:3.14e+00
fval:1.96e+02  norm:3.16e+00
fval:1.41e+02  norm:3.16e+00
fval:5.00e+01  norm:3.11e+00
fval:2.77e+01  norm:3.09e+00
fval:1.16e+02  norm:3.14e+00
fval:6.74e+00  norm:3.06e+00
fval:6.17e+02  norm:3.00e+00
fval:3.01e-01  norm:3.01e+00
fval:2.34e-01  norm:3.03e+00
fval:1.19e-02  norm:3.02e+00
fval:1.28e+00  norm:3.00e+00
fval:1.76e-03  norm:3.02e+00
fval:6.35e-04  norm:3.02e+00
fval:4.33e-03  norm:3.02e+00
fval:7.05e-06  norm:3.02e+00
fval:1.18e-03  norm:3.02e+00
fval:1.40e-06  norm:3.02e+00
fval:4.46e-08  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:5.45e-09  norm:3.02e+00
fval:1.42e-09  norm:3.02e+00
fval:1.04e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
fval:1.02e-09  norm:3.02e+00
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/k3AhB/src/integrator_interface.jl:343
┌ Warning: Instability detected. Aborting
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/k3AhB/src/integrator_interface.jl:349
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/k3AhB/src/integrator_interface.jl:329
┌ Warning: Instability detected. Aborting
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/k3AhB/src/integrator_interface.jl:349
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/k3AhB/src/integrator_interface.jl:329
┌ Warning: Instability detected. Aborting
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/k3AhB/src/integrator_interface.jl:349
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/k3AhB/src/integrator_interface.jl:329
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/k3AhB/src/integrator_interface.jl:343
Test Summary:      | Pass  Total
Layers SciML Tests |   16     16
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

Test Summary: | Pass  Total
Layers SDE    |    3      3
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

Test Summary: | Pass  Total
Layers DDE    |    3      3
4921.8252741349712317.17607567990261208.7459484255783668.1116929665505373.591041917807200.3314261180958104.4529358283813157.3138215258823534.32119428773293623.00067562422833218.12036039950615417.12597192218196818.38676708518351820.73091139694933523.31418352305031825.83594425345194528.2714424609499930.54643652796871632.53970044402460434.18718539872835.47480087834690536.3845017897876336.97114129712160537.25134235223478637.2627632524933437.0375236734635336.6005797078884635.9731756137308235.174505664654734.2262258270057533.1564351256670531.98065986407443330.7158346130359329.3810401288643227.9970894386508726.5988538685920725.17795742013946723.76978885961625222.38315600243469621.05025855873586219.78072978313227318.58395487536728317.46929326363028416.4490617863162415.51075932428809914.65835904580749213.8865830261551313.18807642074406212.55328355145845611.97154036216499411.43216286935378410.92508995804154510.4412884568655559.973053407198959.5141930211534569.060086309073828.6076180969602828.1550545807119897.7018622570740217.2485936813957846.79678428158544456.3487040397705015.9069742122563875.4744959273566785.0552931819356054.65230431179507154.2671100272408283.9016429007326623.55721847718319633.23468157075657642.9345580479832892.6568455035211892.401832105399052.1693524505581841.95806300172912361.76607235753308721.59174649731689581.43381002324094561.29095139258983771.16175831254542181.04481083303797880.93892941264289680.84284247911402380.75528214936003710.67519208736800940.60173194629611610.53426967609171950.47233112982576810.41555162110782830.363554278364917160.31609840944450740.272919696136243450.23376622741716190.198448158162193330.166820206931371670.138755340611349980.114099500151986740.092704690960577580.07435278640620720.05878273363362060.045756485807158014Test Summary:                  | Pass  Total
Size Handling in Adjoint Tests |    1      1
Test Summary: |
odenet        | No tests
Loss: 10.983616846195044
Loss: 0.1104974563629995
Loss: 1.8404894083080738
Loss: 3.8463365944590904
Loss: 5.085074559547107
Loss: 5.641142106796103
Loss: 5.657265508613336
Loss: 5.234644450665927
Loss: 4.446698715966959
Loss: 3.369216589960995
Loss: 2.122409468002599
Loss: 0.9303970483974908
Loss: 0.17828783662470876
Loss: 0.3348187730337835
Loss: 1.4199709981556328
Loss: 2.3084622740357568
Loss: 1.9225116793245183
Loss: 0.8788739566116349
Loss: 0.20576315524552055
Loss: 0.14965705804487123
Loss: 0.45156571716137583
Loss: 0.8141045950082181
Loss: 1.0574652438934171
Loss: 1.1101261559054576
Loss: 0.9735019858716638
Loss: 0.7007391827358027
Loss: 0.3875735171567738
Loss: 0.15863770637370475
Loss: 0.12402466809746608
Loss: 0.29357773292516004
Loss: 0.5139097404074865
Loss: 0.5722535376204974
Loss: 0.42277472152419765
Loss: 0.21838903124545583
Loss: 0.11434648102859839
Loss: 0.14037143771359598
Loss: 0.2335133806408928
Loss: 0.3155990300566306
Loss: 0.3382593314733722
Loss: 0.29407066689104355
Loss: 0.2106328543551854
Loss: 0.13530093264482687
Loss: 0.11062202820035127
Loss: 0.14521949875670245
Loss: 0.2014561923338484
Loss: 0.22450780421562497
Loss: 0.1947650192995242
Loss: 0.1430200070355609
Loss: 0.11214077871563172
Loss: 0.11748694271695315
Loss: 0.14370868997647035
Loss: 0.16533092425048412
Loss: 0.16622002547642442
Loss: 0.14730522509591676
Loss: 0.12304764361202801
Loss: 0.11043284115241643
Loss: 0.11630005508955416
Loss: 0.131812197931884
Loss: 0.14061376994470592
Loss: 0.13455774358698627
Loss: 0.1204185711301915
Loss: 0.11094381553158168
Loss: 0.11214788800083696
Loss: 0.11989525089318667
Loss: 0.12580634518039727
Loss: 0.12476430254009965
Loss: 0.11816197469074544
Loss: 0.11175051191739421
Loss: 0.110421521516606
Loss: 0.11407436205165165
Loss: 0.11813481161618704
Loss: 0.11831943545870763
Loss: 0.11472742916688676
Loss: 0.11103842741563942
Loss: 0.11033346565056318
Loss: 0.11236839074283374
Loss: 0.11451842795611303
Loss: 0.11459732238304755
Loss: 0.11268558488233227
Loss: 0.11066940029228554
Loss: 0.11026232222043054
Loss: 0.1114222689563192
Loss: 0.11261203050040829
Loss: 0.11251845047961795
Loss: 0.1113346958150986
Loss: 0.11031229645768446
Loss: 0.11031818568371517
Loss: 0.11105742717952626
Loss: 0.11158949677076593
Loss: 0.11135777920752406
Loss: 0.11065552375611272
Loss: 0.11019695696101481
Loss: 0.11034317840295005
Loss: 0.11078870504156532
Loss: 0.11097465521286669
Loss: 0.11071059423108076
Loss: 0.11031281960903101
Loss: 0.11018299740528537
Loss: 0.11037322441788652
Loss: 0.11059764750055308
Loss: 0.11059052647501023
Loss: 0.11059052647501023
Loss: 10.983616846195027
Loss: 0.1104974563629996
Loss: 1.8404894101499076
Loss: 3.8463366111318638
Loss: 5.085074683032128
Loss: 5.641142392988326
Loss: 5.657265994722879
Loss: 5.234645165711661
Loss: 4.44669967657572
Loss: 3.369217777686793
Loss: 2.122410773309322
Loss: 0.930398162889526
Loss: 0.1782882371953363
Loss: 0.3348179835732101
Loss: 1.4199695218490973
Loss: 2.308461719046682
Loss: 1.9225124101517403
Loss: 0.8788748258897118
Loss: 0.2057634638002814
Loss: 0.14965689575818386
Loss: 0.4515653798097273
Loss: 0.8141043102772356
Loss: 1.0574651264313493
Loss: 1.1101262350302978
Loss: 0.9735022325215642
Loss: 0.7007395216686174
Loss: 0.3875738328183265
Loss: 0.15863786395676555
Loss: 0.12402458096501147
Loss: 0.29357747202374096
Loss: 0.5139095443452492
Loss: 0.5722535751267336
Loss: 0.42277490986689714
Loss: 0.21838918780268343
Loss: 0.11434651234394706
Loss: 0.14037136765644276
Loss: 0.23351328577039732
Loss: 0.3155989779734896
Loss: 0.3382593527970312
Loss: 0.29407075107035
Loss: 0.21063295795185452
Loss: 0.13530099873610155
Loss: 0.11062201892709149
Loss: 0.14521942909833452
Loss: 0.20145612839154722
Loss: 0.22450780449245944
Loss: 0.19476507684491884
Loss: 0.14302006572671558
Loss: 0.11214079458361864
Loss: 0.11748691613788696
Loss: 0.14370865212726822
Loss: 0.16533090730085773
Loss: 0.16622004184209532
Loss: 0.14730526284456433
Loss: 0.12304767616272509
Loss: 0.11043284628150946
Loss: 0.11630003277679493
Loss: 0.13181217139691365
Loss: 0.14061376412141816
Loss: 0.13455776115709642
Loss: 0.12041859296849178
Loss: 0.11094382254684179
Loss: 0.11214787800404101
Loss: 0.11989523648115823
Loss: 0.1258063403250738
Loss: 0.12476431134717451
Loss: 0.11816198953856559
Loss: 0.11175052067251759
Loss: 0.11042151803914305
Loss: 0.11407435141016543
Loss: 0.11813480474583568
Loss: 0.11831943816399822
Loss: 0.114727437193363
Loss: 0.11103843229708026
Loss: 0.11033346361146702
Loss: 0.11236838527931968
Loss: 0.11451842522224774
Loss: 0.11459732515824389
Loss: 0.11268559051462061
Loss: 0.11066940369439988
Loss: 0.11026232080269274
Loss: 0.11142226486317693
Loss: 0.11261202804961798
Loss: 0.11251845163614692
Loss: 0.11133469862348247
Loss: 0.11031229773612306
Loss: 0.11031818447439858
Loss: 0.1110574252970685
Loss: 0.11158949649875792
Loss: 0.11135778092875448
Loss: 0.11065552578601032
Loss: 0.11019695743615127
Loss: 0.11034317715558446
Loss: 0.11078870356940063
Loss: 0.1109746549370719
Loss: 0.1107105950702043
Loss: 0.1103128203632835
Loss: 0.11018299725515929
Loss: 0.1103732237351035
Loss: 0.11059764723864729
Loss: 0.11059052703631903
Loss: 0.11059052703631903
Test Summary:        | Pass  Total
GDP Regression Tests |    2      2
┌ Warning: Assignment to `grads` in soft scope is ambiguous because a global variable by the same name exists: `grads` will be treated as a new local. Disambiguate by using `local grads` to suppress this warning or `global grads` to assign to the existing global variable.
└ @ ~/.julia/packages/DiffEqFlux/YKKwl/test/neural_de.jl:71
┌ Warning: Assignment to `grads` in soft scope is ambiguous because a global variable by the same name exists: `grads` will be treated as a new local. Disambiguate by using `local grads` to suppress this warning or `global grads` to assign to the existing global variable.
└ @ ~/.julia/packages/DiffEqFlux/YKKwl/test/neural_de.jl:211
┌ Warning: Assignment to `grads` in soft scope is ambiguous because a global variable by the same name exists: `grads` will be treated as a new local. Disambiguate by using `local grads` to suppress this warning or `global grads` to assign to the existing global variable.
└ @ ~/.julia/packages/DiffEqFlux/YKKwl/test/neural_de.jl:227
┌ Warning: Assignment to `grads` in soft scope is ambiguous because a global variable by the same name exists: `grads` will be treated as a new local. Disambiguate by using `local grads` to suppress this warning or `global grads` to assign to the existing global variable.
└ @ ~/.julia/packages/DiffEqFlux/YKKwl/test/neural_de.jl:239
┌ Warning: Assignment to `grads` in soft scope is ambiguous because a global variable by the same name exists: `grads` will be treated as a new local. Disambiguate by using `local grads` to suppress this warning or `global grads` to assign to the existing global variable.
└ @ ~/.julia/packages/DiffEqFlux/YKKwl/test/neural_de.jl:252
┌ Warning: Assignment to `grads` in soft scope is ambiguous because a global variable by the same name exists: `grads` will be treated as a new local. Disambiguate by using `local grads` to suppress this warning or `global grads` to assign to the existing global variable.
└ @ ~/.julia/packages/DiffEqFlux/YKKwl/test/neural_de.jl:264
Test Summary:   | Pass  Broken  Total
Neural DE Tests |   77      12     89
Test Summary:           |
Newton Neural ODE Tests | No tests
Neural ODE MM Tests: Error During Test at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:25
  Got exception outside of a @test
  LoadError: MethodError: no method matching (::DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}})(::Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}, ::Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}, ::Array{Float32,1}, ::Float64)
  Closest candidates are:
    f(::Any, ::Any, ::Any) at /home/pkgeval/.julia/packages/DiffEqFlux/YKKwl/src/neural_de.jl:292
  Stacktrace:
   [1] (::DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing})(::Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfunction.jl:248
   [2] (::DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}})(::Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}, ::Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}) at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/function_wrappers.jl:15
   [3] vector_mode_dual_eval(::DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}}, ::Array{Float64,1}, ::Array{Float64,1}, ::ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}}) at /home/pkgeval/.julia/packages/ForwardDiff/cXTw0/src/apiutils.jl:44
   [4] vector_mode_jacobian!(::Array{Float64,2}, ::DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}}, ::Array{Float64,1}, ::Array{Float64,1}, ::ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}}) at /home/pkgeval/.julia/packages/ForwardDiff/cXTw0/src/jacobian.jl:164
   [5] jacobian!(::Array{Float64,2}, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}}, ::Val{true}) at /home/pkgeval/.julia/packages/ForwardDiff/cXTw0/src/jacobian.jl:74
   [6] jacobian! at /home/pkgeval/.julia/packages/ForwardDiff/cXTw0/src/jacobian.jl:72 [inlined]
   [7] jacobian!(::Array{Float64,2}, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}}, ::ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}}) at /home/pkgeval/.julia/packages/DiffEqSensitivity/w8V9I/src/local_sensitivity/derivative_wrappers.jl:26
   [8] (::DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}})(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},true,Array{Float64,1},Nothing,Float64,Array{Float32,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float32,1},DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Symbol,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}},Tuple{Symbol},NamedTuple{(:callback,),Tuple{DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}}}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},Array{Float64,2},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},DiffEqBase.TimeGradientWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},DiffEqBase.DefaultLinSolve,FiniteDiff.JacobianCache{Array{Float64,1},Array{Float64,1},Array{Float64,1},UnitRange{Int64},Nothing,Val{:forward},Float64},FiniteDiff.GradientCache{Nothing,Array{Float64,1},Array{Float64,1},Val{:forward},Float64,Val{true}}}},DiffEqBase.DEStats},DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},OrdinaryDiffEq.Rosenbrock5Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},Array{Float64,2},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},DiffEqBase.TimeGradientWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},DiffEqBase.DefaultLinSolve,FiniteDiff.JacobianCache{Array{Float64,1},Array{Float64,1},Array{Float64,1},UnitRange{Int64},Nothing,Val{:forward},Float64},FiniteDiff.GradientCache{Nothing,Array{Float64,1},Array{Float64,1},Val{:forward},Float64,Val{true}}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,typeof(DiffEqBase.ODE_DEFAULT_NORM),typeof(LinearAlgebra.opnorm),DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK),DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Nothing,Nothing,Int64,Array{Float64,1},Array{Float64,1},Array{Float64,1}},Array{Float64,1},Float64,Nothing,OrdinaryDiffEq.DefaultInit}) at /home/pkgeval/.julia/packages/DiffEqSensitivity/w8V9I/src/local_sensitivity/adjoint_common.jl:134
   [9] (::DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}})(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},true,Array{Float64,1},Nothing,Float64,Array{Float32,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float32,1},DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Symbol,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}},Tuple{Symbol},NamedTuple{(:callback,),Tuple{DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}}}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},Array{Float64,2},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},DiffEqBase.TimeGradientWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},DiffEqBase.DefaultLinSolve,FiniteDiff.JacobianCache{Array{Float64,1},Array{Float64,1},Array{Float64,1},UnitRange{Int64},Nothing,Val{:forward},Float64},FiniteDiff.GradientCache{Nothing,Array{Float64,1},Array{Float64,1},Val{:forward},Float64,Val{true}}}},DiffEqBase.DEStats},DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},OrdinaryDiffEq.Rosenbrock5Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},Array{Float64,2},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},DiffEqBase.TimeGradientWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},DiffEqBase.DefaultLinSolve,FiniteDiff.JacobianCache{Array{Float64,1},Array{Float64,1},Array{Float64,1},UnitRange{Int64},Nothing,Val{:forward},Float64},FiniteDiff.GradientCache{Nothing,Array{Float64,1},Array{Float64,1},Val{:forward},Float64,Val{true}}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,typeof(DiffEqBase.ODE_DEFAULT_NORM),typeof(LinearAlgebra.opnorm),DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK),DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Nothing,Nothing,Int64,Array{Float64,1},Array{Float64,1},Array{Float64,1}},Array{Float64,1},Float64,Nothing,OrdinaryDiffEq.DefaultInit}) at /home/pkgeval/.julia/packages/DiffEqCallbacks/zxE4g/src/iterative_and_periodic.jl:12
   [10] (::DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}})(::DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}, ::Array{Float64,1}, ::Float64, ::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},true,Array{Float64,1},Nothing,Float64,Array{Float32,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float32,1},DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Symbol,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}},Tuple{Symbol},NamedTuple{(:callback,),Tuple{DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}}}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},Array{Float64,2},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},DiffEqBase.TimeGradientWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},DiffEqBase.DefaultLinSolve,FiniteDiff.JacobianCache{Array{Float64,1},Array{Float64,1},Array{Float64,1},UnitRange{Int64},Nothing,Val{:forward},Float64},FiniteDiff.GradientCache{Nothing,Array{Float64,1},Array{Float64,1},Val{:forward},Float64,Val{true}}}},DiffEqBase.DEStats},DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},OrdinaryDiffEq.Rosenbrock5Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},Array{Float64,2},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},DiffEqBase.TimeGradientWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},DiffEqBase.DefaultLinSolve,FiniteDiff.JacobianCache{Array{Float64,1},Array{Float64,1},Array{Float64,1},UnitRange{Int64},Nothing,Val{:forward},Float64},FiniteDiff.GradientCache{Nothing,Array{Float64,1},Array{Float64,1},Val{:forward},Float64,Val{true}}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,typeof(DiffEqBase.ODE_DEFAULT_NORM),typeof(LinearAlgebra.opnorm),DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK),DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Nothing,Nothing,Int64,Array{Float64,1},Array{Float64,1},Array{Float64,1}},Array{Float64,1},Float64,Nothing,OrdinaryDiffEq.DefaultInit}) at /home/pkgeval/.julia/packages/DiffEqCallbacks/zxE4g/src/iterative_and_periodic.jl:42
   [11] initialize! at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/callbacks.jl:315 [inlined]
   [12] initialize! at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/callbacks.jl:305 [inlined]
   [13] initialize_callbacks!(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},true,Array{Float64,1},Nothing,Float64,Array{Float32,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float32,1},DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Symbol,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}},Tuple{Symbol},NamedTuple{(:callback,),Tuple{DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}}}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},Array{Float64,2},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},DiffEqBase.TimeGradientWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},DiffEqBase.DefaultLinSolve,FiniteDiff.JacobianCache{Array{Float64,1},Array{Float64,1},Array{Float64,1},UnitRange{Int64},Nothing,Val{:forward},Float64},FiniteDiff.GradientCache{Nothing,Array{Float64,1},Array{Float64,1},Val{:forward},Float64,Val{true}}}},DiffEqBase.DEStats},DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},OrdinaryDiffEq.Rosenbrock5Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},Array{Float64,2},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},DiffEqBase.TimeGradientWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},DiffEqBase.DefaultLinSolve,FiniteDiff.JacobianCache{Array{Float64,1},Array{Float64,1},Array{Float64,1},UnitRange{Int64},Nothing,Val{:forward},Float64},FiniteDiff.GradientCache{Nothing,Array{Float64,1},Array{Float64,1},Val{:forward},Float64,Val{true}}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,typeof(DiffEqBase.ODE_DEFAULT_NORM),typeof(LinearAlgebra.opnorm),DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK),DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Nothing,Nothing,Int64,Array{Float64,1},Array{Float64,1},Array{Float64,1}},Array{Float64,1},Float64,Nothing,OrdinaryDiffEq.DefaultInit}, ::Bool) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/kFkXd/src/solve.jl:519
   [14] __init(::DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float32,1},DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Symbol,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}},Tuple{Symbol},NamedTuple{(:callback,),Tuple{DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}}}}},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType}, ::Array{Array{Float64,1},1}, ::Array{Float64,1}, ::Array{Any,1}, ::Type{Val{true}}; saveat::Array{Float64,1}, tstops::Array{Float64,1}, d_discontinuities::Array{Float64,1}, save_idxs::Nothing, save_everystep::Bool, save_on::Bool, save_start::Bool, save_end::Bool, callback::DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}}, dense::Bool, calck::Bool, dt::Float64, dtmin::Nothing, dtmax::Float64, force_dtmin::Bool, adaptive::Bool, gamma::Rational{Int64}, abstol::Float64, reltol::Float64, qmin::Rational{Int64}, qmax::Int64, qsteady_min::Int64, qsteady_max::Rational{Int64}, qoldinit::Rational{Int64}, fullnormalize::Bool, failfactor::Int64, beta1::Nothing, beta2::Nothing, maxiters::Int64, internalnorm::typeof(DiffEqBase.ODE_DEFAULT_NORM), internalopnorm::typeof(LinearAlgebra.opnorm), isoutofdomain::typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), unstable_check::typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), verbose::Bool, timeseries_errors::Bool, dense_errors::Bool, advance_to_tstop::Bool, stop_at_next_tstop::Bool, initialize_save::Bool, progress::Bool, progress_steps::Int64, progress_name::String, progress_message::typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), userdata::Nothing, allow_extrapolation::Bool, initialize_integrator::Bool, alias_u0::Bool, alias_du0::Bool, initializealg::OrdinaryDiffEq.DefaultInit, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/kFkXd/src/solve.jl:401
   [15] __solve(::DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float32,1},DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Symbol,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}},Tuple{Symbol},NamedTuple{(:callback,),Tuple{DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}}}}},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType}; kwargs::Base.Iterators.Pairs{Symbol,Any,NTuple{7,Symbol},NamedTuple{(:callback, :save_everystep, :save_start, :saveat, :tstops, :abstol, :reltol),Tuple{DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}},Bool,Bool,Array{Float64,1},Array{Float64,1},Float64,Float64}}}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/kFkXd/src/solve.jl:4
   [16] (::DiffEqBase.var"#461#462"{DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float32,1},DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Symbol,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}},Tuple{Symbol},NamedTuple{(:callback,),Tuple{DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}}}}},DiffEqBase.StandardODEProblem},Tuple{OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType}}})() at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/solve.jl:49
   [17] maybe_with_logger at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/utils.jl:259 [inlined]
   [18] solve_call(::DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float32,1},DiffEqBase.ODEFunction{true,DiffEqSensitivity.ODEInterpolatingAdjointSensitivityFunction{DiffEqSensitivity.AdjointDiffCache{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Nothing,Nothing,Array{Float64,2},Nothing,Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Nothing,ReverseDiff.CompiledTape{ReverseDiff.GradientTape{DiffEqSensitivity.var"#48#51"{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Tuple{Float64,Float64}},Tuple{ReverseDiff.TrackedArray{Float64,Float64,1,Array{Float64,1},Array{Float64,1}},ReverseDiff.TrackedArray{Float32,Float64,1,Array{Float32,1},Array{Float64,1}}},Array{ReverseDiff.TrackedReal{Float64,Float64,Nothing},1}}},Array{Float64,1},Nothing,Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats},Nothing,Nothing},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Symbol,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}},Tuple{Symbol},NamedTuple{(:callback,),Tuple{DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.var"#33#36"{Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}},DiffEqCallbacks.var"#35#38"{typeof(DiffEqBase.INITIALIZE_DEFAULT),Bool,DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Base.RefValue{Union{Nothing, Float64}},DiffEqCallbacks.var"#34#37"{DiffEqSensitivity.var"#52#54"{Base.RefValue{Int64},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},DiffEqSensitivity.var"#53#55"{DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Int64,1},Array{Int64,1},LinearAlgebra.LU{Float64,Array{Float64,2}},Bool,Array{Float64,2},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Array{Float64,1},ForwardDiff.JacobianConfig{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},Float64},Float64,3},1}}},Bool,Array{Float64,1},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1},Base.RefValue{Int64},Int64,LinearAlgebra.LU{Float64,Array{Float64,2}}},Base.RefValue{Union{Nothing, Float64}}}}}}}}}},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType}; merge_callbacks::Bool, kwargs::Base.Iterators.Pairs{Symbol,Any,NTuple{6,Symbol},NamedTuple{(:save_everystep, :save_start, :saveat, :tstops, :abstol, :reltol),Tuple{Bool,Bool,Array{Float64,1},Array{Float64,1},Float64,Float64}}}) at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/solve.jl:48
   [19] #solve#463 at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/solve.jl:66 [inlined]
   [20] _adjoint_sensitivities(::DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats}, ::DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}}, ::OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType}, ::DiffEqSensitivity.var"#df#72"{Array{Float64,2},Array{Float64,1}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Nothing; abstol::Float64, reltol::Float64, checkpoints::Array{Float64,1}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DiffEqSensitivity/w8V9I/src/local_sensitivity/sensitivity_interface.jl:16
   [21] _adjoint_sensitivities(::DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats}, ::DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}}, ::OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType}, ::Function, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Nothing) at /home/pkgeval/.julia/packages/DiffEqSensitivity/w8V9I/src/local_sensitivity/sensitivity_interface.jl:13 (repeats 2 times)
   [22] adjoint_sensitivities(::DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Nothing,Nothing,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Tuple{Float64,Float64},false,Array{Float32,1},DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock5ConstantCache{DiffEqBase.TimeDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Float64,1},Array{Float32,1}},DiffEqBase.UDerivativeWrapper{DiffEqBase.ODEFunction{false,DiffEqFlux.var"#f#136"{NeuralODEMM{FastChain{Tuple{FastDense{typeof(tanh),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}},FastDense{typeof(identity),DiffEqFlux.var"#initial_params#75"{typeof(Flux.glorot_uniform),typeof(Flux.zeros),Int64,Int64}}}},Main.##381.var"#1#2",Array{Float32,1},Nothing,Tuple{Float64,Float64},OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},Array{Float64,2},Tuple{},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}}}},Array{Float64,2},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,Array{Float32,1}},OrdinaryDiffEq.Rodas5Tableau{Float64,Float64},Array{Float64,2},LinearAlgebra.LU{Float64,Array{Float64,2}},DiffEqBase.DefaultLinSolve}},DiffEqBase.DEStats}, ::OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType}, ::Vararg{Any,N} where N; sensealg::DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DiffEqSensitivity/w8V9I/src/local_sensitivity/sensitivity_interface.jl:6
   [23] (::DiffEqSensitivity.var"#adjoint_sensitivity_backpass#71"{OrdinaryDiffEq.Rodas5{0,false,DiffEqBase.DefaultLinSolve,DataType},DiffEqSensitivity.InterpolatingAdjoint{0,true,Val{:central},DiffEqSensitivity.ReverseDiffVJP{true}},Array{Float64,1},Array{Float32,1},Tuple{}})(::Array{Float64,2}) at /home/pkgeval/.julia/packages/DiffEqSensitivity/w8V9I/src/local_sensitivity/concrete_solve.jl:68
   [24] #563#back at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:55 [inlined]
   [25] #175 at /home/pkgeval/.julia/packages/Zygote/KNUTW/src/lib/lib.jl:170 [inlined]
   [26] #344#back at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49 [inlined]
   [27] NeuralODEMM at /home/pkgeval/.julia/packages/DiffEqFlux/YKKwl/src/neural_de.jl:298 [inlined]
   [28] (::typeof(∂(λ)))(::Array{Float64,2}) at /home/pkgeval/.julia/packages/Zygote/KNUTW/src/compiler/interface2.jl:0
   [29] predict_n_dae at /home/pkgeval/.julia/packages/DiffEqFlux/YKKwl/test/neural_ode_mm.jl:26 [inlined]
   [30] (::typeof(∂(predict_n_dae)))(::Array{Float64,2}) at /home/pkgeval/.julia/packages/Zygote/KNUTW/src/compiler/interface2.jl:0
   [31] loss at /home/pkgeval/.julia/packages/DiffEqFlux/YKKwl/test/neural_ode_mm.jl:29 [inlined]
   [32] (::typeof(∂(loss)))(::Tuple{Int64,Nothing}) at /home/pkgeval/.julia/packages/Zygote/KNUTW/src/compiler/interface2.jl:0
   [33] #175 at /home/pkgeval/.julia/packages/Zygote/KNUTW/src/lib/lib.jl:170 [inlined]
   [34] (::Zygote.var"#344#back#177"{Zygote.var"#175#176"{typeof(∂(loss)),Tuple{Tuple{Nothing},Int64}}})(::Tuple{Int64,Nothing}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [35] #34 at /home/pkgeval/.julia/packages/DiffEqFlux/YKKwl/src/train.jl:175 [inlined]
   [36] (::typeof(∂(λ)))(::Int64) at /home/pkgeval/.julia/packages/Zygote/KNUTW/src/compiler/interface2.jl:0
   [37] #36 at /home/pkgeval/.julia/packages/Zygote/KNUTW/src/compiler/interface.jl:36 [inlined]
   [38] (::DiffEqFlux.var"#37#50"{DiffEqFlux.var"#34#47"{typeof(Main.##381.loss)}})(::Array{Float32,1}, ::Array{Float32,1}) at /home/pkgeval/.julia/packages/DiffEqFlux/YKKwl/src/train.jl:198
   [39] value_gradient!!(::NLSolversBase.TwiceDifferentiable{Float32,Array{Float32,1},Array{Float32,2},Array{Float32,1}}, ::Array{Float32,1}) at /home/pkgeval/.julia/packages/NLSolversBase/mGaJg/src/interface.jl:82
   [40] initial_state(::Optim.BFGS{LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Nothing,Float64,Optim.Flat}, ::Optim.Options{Float64,DiffEqFlux.var"#_cb#46"{Main.##381.var"#3#4",Base.Iterators.Cycle{Tuple{DiffEqFlux.NullData}}}}, ::NLSolversBase.TwiceDifferentiable{Float32,Array{Float32,1},Array{Float32,2},Array{Float32,1}}, ::Array{Float32,1}) at /home/pkgeval/.julia/packages/Optim/UkDyx/src/multivariate/solvers/first_order/bfgs.jl:66
   [41] optimize(::NLSolversBase.TwiceDifferentiable{Float32,Array{Float32,1},Array{Float32,2},Array{Float32,1}}, ::Array{Float32,1}, ::Optim.BFGS{LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Nothing,Float64,Optim.Flat}, ::Optim.Options{Float64,DiffEqFlux.var"#_cb#46"{Main.##381.var"#3#4",Base.Iterators.Cycle{Tuple{DiffEqFlux.NullData}}}}) at /home/pkgeval/.julia/packages/Optim/UkDyx/src/multivariate/optimize/optimize.jl:33
   [42] sciml_train(::Function, ::Array{Float32,1}, ::Optim.BFGS{LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Nothing,Float64,Optim.Flat}, ::Base.Iterators.Cycle{Tuple{DiffEqFlux.NullData}}; cb::Function, maxiters::Int64, diffmode::DiffEqFlux.ZygoteDiffMode) at /home/pkgeval/.julia/packages/DiffEqFlux/YKKwl/src/train.jl:268
   [43] top-level scope at /home/pkgeval/.julia/packages/DiffEqFlux/YKKwl/test/neural_ode_mm.jl:40
   [44] include(::Function, ::Module, ::String) at ./Base.jl:380
   [45] include at ./Base.jl:368 [inlined]
   [46] include(::String) at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [47] top-level scope at /home/pkgeval/.julia/packages/DiffEqFlux/YKKwl/test/runtests.jl:19
   [48] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [49] top-level scope at /home/pkgeval/.julia/packages/DiffEqFlux/YKKwl/test/runtests.jl:19
   [50] eval(::Module, ::Any) at ./boot.jl:331
   [51] top-level scope at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [52] top-level scope at /home/pkgeval/.julia/packages/DiffEqFlux/YKKwl/test/runtests.jl:19
   [53] top-level scope at util.jl:175
   [54] include(::String) at ./client.jl:441
   [55] top-level scope at none:6
   [56] eval(::Module, ::Any) at ./boot.jl:331
   [57] exec_options(::Base.JLOptions) at ./client.jl:264
  in expression starting at /home/pkgeval/.julia/packages/DiffEqFlux/YKKwl/test/neural_ode_mm.jl:40
  
Test Summary:       | Error  Total
Neural ODE MM Tests |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DiffEqFlux/YKKwl/test/runtests.jl:7
ERROR: Package DiffEqFlux errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1523
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:16
