Julia Version 1.5.0-DEV.555
Commit c54f80c785 (2020-04-01 14:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_QL06la/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_QL06la/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.14236844596470705 -0.01582722966582353; 0.14236844596470705 0.0 -0.030597093880821574; 0.01582722966582353 0.030597093880821574 0.0])
dAA = so3([0.0 -0.048207151465627464 0.07085975492524028; 0.048207151465627464 0.0 0.06389650700200432; -0.07085975492524028 -0.06389650700200432 0.0])
dAA = so3([0.0 0.09989078884106664 0.1578129378742518; -0.09989078884106664 0.0 -0.04209964774956685; -0.1578129378742518 0.04209964774956685 0.0])
dAA = Quaternion(0.9996553508217964, [-0.008505500200961786, 0.012982169866422703, 0.02117307972975027])
dAA = SO3([0.9936445478383253 0.025602294742231045 -0.10961311534256185; -0.009459037894296557 0.9893375948228573 0.14533289397874838; 0.11216523148143592 -0.14337240311181154 0.9832920801433622])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9771830600414789 -0.13315337311653616 0.1654794440275282; 0.10502333444367905 0.980097964898122 0.16845794259960192; -0.18461680960926197 -0.14723504484411362 0.9717193397166948]), [0.30597093880821574, -0.1582722966582353, 1.4236844596470704])
xj = SE3(SO3([0.9922976805375102 -0.10639610876923991 0.06344431604676169; 0.10369214122690283 0.9936135418526342 0.044497969558662566; -0.06777354238681457 -0.037576555002124555 0.9969928532675222]), [0.4209964774956685, 1.578129378742518, -0.9989078884106664])
Dx = SE3(SO3([0.9930587135383322 0.007321395870725068 -0.11739160373764758; -0.020520686154301228 0.993538196794905 -0.11162774274025858; 0.11581577140160755 0.1132618588582794 0.9867920036272171]), [0.7420149720439325, 2.043218202840474, -2.042534820901902])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
