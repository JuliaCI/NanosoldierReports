Julia Version 1.5.0-DEV.565
Commit e7886ad9e1 (2020-04-02 17:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.4
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_V7KQ9O/Project.toml`
   5789e2e9 FileIO v1.2.4
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_V7KQ9O/Manifest.toml`
   5789e2e9 FileIO v1.2.4
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723354887001095
curgen: 20 fitness: 0.21723354887001095
curgen: 30 fitness: 0.21723354887001095
curgen: 40 fitness: 0.21723354887001095
curgen: 50 fitness: 0.21723354887001095
CoordinateCreature{Array{Float64,1}}([-0.22250583375086116], -0.21723354887001095) -0.22250583375086116 -0.21723354887001095
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579902631399618
curgen: 100 fitness: 3.2581318718894132
curgen: 150 fitness: 3.2581991624211364
curgen: 200 fitness: 3.258331149138138
curgen: 250 fitness: 3.258350208750083
curgen: 300 fitness: 3.2583925388668367
curgen: 350 fitness: 3.258397218047821
curgen: 400 fitness: 3.258409408783839
curgen: 450 fitness: 3.2584290771578686
curgen: 500 fitness: 3.2584302365449482
CoordinateCreature{Array{Float64,1}}([0.22253627785242142, -0.22248607753427493, 0.2225652828379975, -0.2225175097096667, -0.2230692670166028, -0.22240174098540172, 0.2224083086697497, -0.22194787617702075, -0.22212868187744586, -0.22269481157738244, -0.2222494318557479, 0.22265277544928455, 0.22278767579397926, -0.22234127328641554, -0.22177634211393948], -3.2584302365449482) [0.22253627785242142, -0.22248607753427493, 0.2225652828379975, -0.2225175097096667, -0.2230692670166028, -0.22240174098540172, 0.2224083086697497, -0.22194787617702075, -0.22212868187744586, -0.22269481157738244, -0.2222494318557479, 0.22265277544928455, 0.22278767579397926, -0.22234127328641554, -0.22177634211393948] -3.2584302365449482
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0014273471537080695
curgen: 100 fitness: -0.001333616638703461
curgen: 150 fitness: -0.0012067287317734099
curgen: 200 fitness: -0.0009431932562620204
curgen: 250 fitness: -0.0006974455870363272
curgen: 300 fitness: -0.0006929461716254082
curgen: 350 fitness: -0.0006929461716254082
curgen: 400 fitness: -0.0006929461716254082
curgen: 450 fitness: -0.0006783853195599931
curgen: 500 fitness: -0.0006783853195599931
CoordinateCreature{Array{Float64,1}}([0.0005198354428000464, -0.0011878232220931357, 2.0841010119243757e-5, -3.4570174877233614e-5, -0.00022168316345480478, 0.0004447228767816134, -0.0006051797050252853, 0.0005763500618703795, 0.0001907873373924486, 0.00023595582706096001, 0.00030446203452371107, -0.0006468147991214453, -0.00015162517999190025, -0.0004064066680448923, -1.2183917791922413e-6], 0.0006783853195599931) [0.0005198354428000464, -0.0011878232220931357, 2.0841010119243757e-5, -3.4570174877233614e-5, -0.00022168316345480478, 0.0004447228767816134, -0.0006051797050252853, 0.0005763500618703795, 0.0001907873373924486, 0.00023595582706096001, 0.00030446203452371107, -0.0006468147991214453, -0.00015162517999190025, -0.0004064066680448923, -1.2183917791922413e-6] 0.0006783853195599931
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
