Julia Version 1.5.0-DEV.555
Commit c54f80c785 (2020-04-01 14:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.4
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_S3VgQx/Project.toml`
   5789e2e9 FileIO v1.2.4
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_S3VgQx/Manifest.toml`
   5789e2e9 FileIO v1.2.4
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723160226191154
curgen: 20 fitness: 0.21723160226191154
curgen: 30 fitness: 0.21723160226191154
curgen: 40 fitness: 0.21723160226191154
curgen: 50 fitness: 0.21723160226191154
CoordinateCreature{Array{Float64,1}}([-0.22233439381612116], -0.21723160226191154) -0.22233439381612116 -0.21723160226191154
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578632104920806
curgen: 100 fitness: 3.2581282522817157
curgen: 150 fitness: 3.258154399602241
curgen: 200 fitness: 3.2581958153730923
curgen: 250 fitness: 3.2582320738632946
curgen: 300 fitness: 3.258239711257025
curgen: 350 fitness: 3.2583899686684763
curgen: 400 fitness: 3.258416402033523
curgen: 450 fitness: 3.258425869025829
curgen: 500 fitness: 3.258427175661105
CoordinateCreature{Array{Float64,1}}([0.22266571126185086, 0.22191504004199256, -0.22250336686896466, -0.2227259506083606, -0.22255336840517106, 0.22191652404094472, 0.22274257938092068, -0.22306979193514764, -0.22261304372422167, -0.22262973697307678, 0.2225303486431068, 0.2224163080209717, 0.22252935871769913, -0.22253878160223747, -0.22329567338067796], -3.258427175661105) [0.22266571126185086, 0.22191504004199256, -0.22250336686896466, -0.2227259506083606, -0.22255336840517106, 0.22191652404094472, 0.22274257938092068, -0.22306979193514764, -0.22261304372422167, -0.22262973697307678, 0.2225303486431068, 0.2224163080209717, 0.22252935871769913, -0.22253878160223747, -0.22329567338067796] -3.258427175661105
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.00356577847543349
curgen: 100 fitness: -0.0018460918026903528
curgen: 150 fitness: -0.001224321741744916
curgen: 200 fitness: -0.0010520909697220304
curgen: 250 fitness: -0.0009952648060789215
curgen: 300 fitness: -0.0009952648060789215
curgen: 350 fitness: -0.0009204138031577713
curgen: 400 fitness: -0.0007190847126423705
curgen: 450 fitness: -0.0007190847126423705
curgen: 500 fitness: -0.0007190847126423705
CoordinateCreature{Array{Float64,1}}([-0.0005513388048820366, 0.00015650204970479864, 8.773439276679729e-5, 0.00047941754652202826, -0.000356925692158452, -0.0006407859592666397, 0.0006637714283281962, -0.00017392770399938823, 0.0004191718647710398, 0.000326226852786873, 0.00024118995502654444, 0.0005982793213532458, -0.00048462382744249375, 0.00034920184502792604, -0.0009973341730465319], 0.0007190847126423705) [-0.0005513388048820366, 0.00015650204970479864, 8.773439276679729e-5, 0.00047941754652202826, -0.000356925692158452, -0.0006407859592666397, 0.0006637714283281962, -0.00017392770399938823, 0.0004191718647710398, 0.000326226852786873, 0.00024118995502654444, 0.0005982793213532458, -0.00048462382744249375, 0.00034920184502792604, -0.0009973341730465319] 0.0007190847126423705
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
