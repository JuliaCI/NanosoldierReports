Julia Version 1.5.0-DEV.684
Commit 1a9925d0c2 (2020-04-25 09:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_08XfIq/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_08XfIq/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723351643219618
curgen: 20 fitness: 0.21723351643219618
curgen: 30 fitness: 0.21723351643219618
curgen: 40 fitness: 0.21723351643219618
curgen: 50 fitness: 0.21723351643219618
CoordinateCreature{Array{Float64,1}}([-0.22249792253336764], -0.21723351643219618) -0.22249792253336764 -0.21723351643219618
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2581650802382125
curgen: 100 fitness: 3.25823153108787
curgen: 150 fitness: 3.2583731422730855
curgen: 200 fitness: 3.258392253445479
curgen: 250 fitness: 3.2584262749490307
curgen: 300 fitness: 3.258444046549651
curgen: 350 fitness: 3.2584452839755635
curgen: 400 fitness: 3.2584594275837406
curgen: 450 fitness: 3.2584595439825232
curgen: 500 fitness: 3.258460223412403
CoordinateCreature{Array{Float64,1}}([0.22253247923184125, -0.22200567166564483, -0.2228559114489385, 0.2221334215133335, -0.22281370083114188, 0.22264658095871484, -0.22209478545645106, 0.22249483966680098, -0.22235549160168244, -0.22272273465036796, -0.22277353271020434, -0.2225375059515273, -0.22238238972678664, 0.22257553037040917, 0.22254620136890738], -3.258460223412403) [0.22253247923184125, -0.22200567166564483, -0.2228559114489385, 0.2221334215133335, -0.22281370083114188, 0.22264658095871484, -0.22209478545645106, 0.22249483966680098, -0.22235549160168244, -0.22272273465036796, -0.22277353271020434, -0.2225375059515273, -0.22238238972678664, 0.22257553037040917, 0.22254620136890738] -3.258460223412403
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0015407470479544827
curgen: 100 fitness: -0.0011962834357746033
curgen: 150 fitness: -0.0011962834357746033
curgen: 200 fitness: -0.0011962834357746033
curgen: 250 fitness: -0.0011962834357746033
curgen: 300 fitness: -0.0008752359339894156
curgen: 350 fitness: -0.0008664843268775257
curgen: 400 fitness: -0.0008527471657373553
curgen: 450 fitness: -0.0008527471657373553
curgen: 500 fitness: -0.0008527471657373553
CoordinateCreature{Array{Float64,1}}([-0.0005073000880006466, 0.0007761376830927964, 0.00014752360139633886, 0.0005521870543114585, -0.0006117247188357419, -8.36083664353645e-5, 0.00013552141725992932, 1.7874724906324826e-5, -0.0009274616570412908, -0.00046371853651887144, 0.0011390264179039233, -0.00017029423210866256, 0.0003984459203109626, 0.00015911731580344458, -0.0003554207724991681], 0.0008527471657373553) [-0.0005073000880006466, 0.0007761376830927964, 0.00014752360139633886, 0.0005521870543114585, -0.0006117247188357419, -8.36083664353645e-5, 0.00013552141725992932, 1.7874724906324826e-5, -0.0009274616570412908, -0.00046371853651887144, 0.0011390264179039233, -0.00017029423210866256, 0.0003984459203109626, 0.00015911731580344458, -0.0003554207724991681] 0.0008527471657373553
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
