Julia Version 1.5.0-DEV.689
Commit 86ee57cdd7 (2020-04-25 20:17 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_V87C46/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_V87C46/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172330971412554
curgen: 20 fitness: 0.2172330971412554
curgen: 30 fitness: 0.2172330971412554
curgen: 40 fitness: 0.2172330971412554
curgen: 50 fitness: 0.2172330971412554
CoordinateCreature{Array{Float64,1}}([-0.2226577098430615], -0.2172330971412554) -0.2226577098430615 -0.2172330971412554
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578164828829896
curgen: 100 fitness: 3.258329163950916
curgen: 150 fitness: 3.258447142012736
curgen: 200 fitness: 3.258447142012736
curgen: 250 fitness: 3.258448397619317
curgen: 300 fitness: 3.25845599436131
curgen: 350 fitness: 3.25845621844096
curgen: 400 fitness: 3.25845621844096
curgen: 450 fitness: 3.258470459080589
curgen: 500 fitness: 3.258471174757878
CoordinateCreature{Array{Float64,1}}([-0.2219333608235497, -0.22265159608166407, 0.2225022472151475, -0.22284047458320183, 0.22243242635274016, -0.22277645160993423, -0.22233544987988926, -0.22261721688084257, -0.2223133242781085, -0.22234436940937732, 0.22252657584005794, 0.2223913910937641, 0.2224194078035652, -0.22249882434931031, -0.22241783846297683], -3.258471174757878) [-0.2219333608235497, -0.22265159608166407, 0.2225022472151475, -0.22284047458320183, 0.22243242635274016, -0.22277645160993423, -0.22233544987988926, -0.22261721688084257, -0.2223133242781085, -0.22234436940937732, 0.22252657584005794, 0.2223913910937641, 0.2224194078035652, -0.22249882434931031, -0.22241783846297683] -3.258471174757878
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.001017201904517151
curgen: 100 fitness: -0.000936224345679193
curgen: 150 fitness: -0.000936224345679193
curgen: 200 fitness: -0.0009033942980636311
curgen: 250 fitness: -0.0007893445892932505
curgen: 300 fitness: -0.0006497181933582397
curgen: 350 fitness: -0.0005205885200041394
curgen: 400 fitness: -0.0005205885200041394
curgen: 450 fitness: -0.000517329605543182
curgen: 500 fitness: -0.000517329605543182
CoordinateCreature{Array{Float64,1}}([0.00012545948941667596, -0.0001382426205452747, 0.0004302663554766784, -6.421022046348632e-6, 3.420110497168345e-6, -0.00037333599636763676, -0.0005265552347844702, 9.357706830004538e-5, -4.6715933926249625e-5, -0.00016048781507128646, 0.00033613051408142795, -0.0001366507923646974, -0.0009972797287166341, 0.0008727744877921862, 0.0002151502716010549], 0.000517329605543182) [0.00012545948941667596, -0.0001382426205452747, 0.0004302663554766784, -6.421022046348632e-6, 3.420110497168345e-6, -0.00037333599636763676, -0.0005265552347844702, 9.357706830004538e-5, -4.6715933926249625e-5, -0.00016048781507128646, 0.00033613051408142795, -0.0001366507923646974, -0.0009972797287166341, 0.0008727744877921862, 0.0002151502716010549] 0.000517329605543182
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
