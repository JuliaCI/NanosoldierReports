Julia Version 1.5.0-DEV.689
Commit 86ee57cdd7 (2020-04-25 20:17 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed ArrayInterface ─────────────── v2.8.5
  Installed DiffResults ────────────────── v1.0.2
  Installed Parameters ─────────────────── v0.12.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed LineSearches ───────────────── v7.0.1
  Installed DiffRules ──────────────────── v1.0.1
  Installed StaticArrays ───────────────── v0.12.2
  Installed OrderedCollections ─────────── v1.1.0
  Installed NaNMath ────────────────────── v0.3.3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Requires ───────────────────── v1.0.1
  Installed CommonSubexpressions ───────── v0.2.0
  Installed FiniteDiff ─────────────────── v2.3.0
  Installed ForwardDiff ────────────────── v0.10.10
  Installed NLSolversBase ──────────────── v7.6.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [d3d80556] + LineSearches v7.0.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [4fba245c] + ArrayInterface v2.8.5
  [bbf7d656] + CommonSubexpressions v0.2.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [6a86dc24] + FiniteDiff v2.3.0
  [f6369f11] + ForwardDiff v0.10.10
  [d3d80556] + LineSearches v7.0.1
  [d41bc354] + NLSolversBase v7.6.1
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [ae029012] + Requires v1.0.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
┌ Warning: using test/REQUIRE files is deprecated and current support is lacking in some areas
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1425
    Testing LineSearches
Status `/tmp/jl_dqPGNl/Project.toml`
  [497a8b3b] DoubleFloats v1.1.8
  [d3d80556] LineSearches v7.0.1
  [d41bc354] NLSolversBase v7.6.1
  [77ba4419] NaNMath v0.3.3
  [429524aa] Optim v0.20.6
  [cec144fc] OptimTestProblems v2.0.2
  [d96e819e] Parameters v0.12.0
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [8dfed614] Test
Status `/tmp/jl_dqPGNl/Manifest.toml`
  [4fba245c] ArrayInterface v2.8.5
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] DataAPI v1.2.0
  [864edb3b] DataStructures v0.17.13
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [497a8b3b] DoubleFloats v1.1.8
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [1a297f60] FillArrays v0.8.7
  [6a86dc24] FiniteDiff v2.3.0
  [f6369f11] ForwardDiff v0.10.10
  [01680d73] GenericSVD v0.3.0
  [c145ed77] GenericSchur v0.4.0
  [d8418881] Intervals v1.1.0
  [94ce4f54] Libiconv_jll v1.16.0+2
  [d3d80556] LineSearches v7.0.1
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [d41bc354] NLSolversBase v7.6.1
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [429524aa] Optim v0.20.6
  [cec144fc] OptimTestProblems v2.0.2
  [bac558e1] OrderedCollections v1.1.0
  [d96e819e] Parameters v0.12.0
  [f27b6e38] Polynomials v0.8.0
  [85a6dd25] PositiveFactorizations v0.2.3
  [be4d8f0f] Quadmath v0.5.4
  [3cdcf5f2] RecipesBase v1.0.1
  [ae029012] Requires v1.0.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.2
  [2913bbd2] StatsBase v0.33.0
  [f269a46b] TimeZones v1.1.1
  [02c8fc9c] XML2_jll v2.9.9+4
  [83775a58] Zlib_jll v1.2.11+9
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Polynomials.PolyCompat.Poly(::Array{Double64,1}) at Poly.jl:26
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26

 * initial.jl
Test Summary:      | Pass  Total
Initial step guess |   30     30
  5.507967 seconds (8.22 M allocations: 407.764 MiB, 4.29% gc time)

 * alphacalc.jl
Test Summary:      | Pass  Total
alpha-calculations |   24     24
  2.309305 seconds (2.24 M allocations: 111.088 MiB, 1.39% gc time)

 * arbitrary_precision.jl
Test Summary:                                     | Pass  Total
Arbitrary precision - initial step guess: Float32 |   41     41
Test Summary:                                     | Pass  Total
Arbitrary precision - initial step guess: Float64 |   41     41
Test Summary:                                      | Pass  Total
Arbitrary precision - initial step guess: BigFloat |   41     41
Test Summary:                                      | Pass  Total
Arbitrary precision - initial step guess: Double64 |   41     41
Test Summary:                                      | Pass  Total
Arbitrary precision - initial step guess: Double32 |   41     41
Test Summary:                                                               | Pass  Total
Arbitrary precision - initial step guess: DoubleFloats.DoubleFloat{Float16} |   41     41
 20.951163 seconds (34.73 M allocations: 1.652 GiB, 5.38% gc time)

 * examples.jl
Test Summary:     | Pass  Total
Literate examples |   11     11
 50.268128 seconds (12.76 M allocations: 608.299 MiB, 1.39% gc time)
    Testing LineSearches tests passed 
