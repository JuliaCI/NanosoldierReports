Julia Version 1.5.0-DEV.689
Commit 86ee57cdd7 (2020-04-25 20:17 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed DataValueInterfaces ───────── v1.0.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed Missings ──────────────────── v0.4.3
  Installed LearnBase ─────────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.2
  Installed KCenters ──────────────────── v0.2.2
  Installed JSON ──────────────────────── v0.21.0
  Installed DataAPI ───────────────────── v1.2.0
  Installed Tables ────────────────────── v1.0.4
  Installed TableTraits ───────────────── v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed OrderedCollections ────────── v1.1.0
  Installed DataStructures ────────────── v0.17.13
  Installed CategoricalArrays ─────────── v0.7.7
  Installed Compat ────────────────────── v3.8.0
  Installed StatsBase ─────────────────── v0.32.2
  Installed MLDataPattern ─────────────── v0.5.2
  Installed SimilaritySearch ──────────── v0.3.19
  Installed Reexport ──────────────────── v0.2.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed MappedArrays ──────────────── v0.2.2
  Installed MLDataUtils ───────────────── v0.5.1
  Installed DataFrames ────────────────── v0.20.2
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.8.0
  [9a962f9c] + DataAPI v1.2.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.13
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.2
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.2
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_dISMLJ/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_dISMLJ/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.8.0
  [9a962f9c] DataAPI v1.2.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.13
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.2
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9370718047022819
[ Info: 0.8321307849884033
[ Info: 0.5539093809823196
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32082008394102257
mean(cdnet.distances) = 0.3383292576422294
mean(crand.distances) = 0.3346609089523554
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.533203125,"f1":0.6781621156621163,"seconds":4.9639493227005005e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":7.1796875,"distances_sum":1431.5865256747354}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8715066183816191,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.4765625,"distances_sum":2276.9512512178458}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":3.941357135772705e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":6.2734375,"distances_sum":1067.2569290239219}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8715066183816191,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.4765625,"distances_sum":2276.9512512178458}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":7}, perf: {"precision":null,"recall":0.9052734375,"f1":null,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.78125,"distances_sum":2719.7296419678387}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9008356227106235,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.7421875,"distances_sum":2378.307090901377}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":5,"bsize":7},"perf":{"precision":null,"recall":0.9052734375,"f1":null,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.78125,"distances_sum":2719.7296419678387}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570741758241764,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.84375,"distances_sum":2818.3120753091102}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9486549908424916,"seconds":6.817281246185303e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.828125,"distances_sum":2728.828819197385}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.967095924908425,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9140625,"distances_sum":2878.339147474756}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.971262591575092,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9296875,"distances_sum":2924.6955561458244}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9555116758241762,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8984375,"distances_sum":2786.6142848141917}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.971262591575092,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9296875,"distances_sum":2924.6955561458244}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.971262591575092,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9296875,"distances_sum":2924.6955561458244}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7728296009546017,"seconds":4.753470420837402e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.3515625,"distances_sum":1563.3125188280585}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2197265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2197265625,"f1":null,"seconds":3.388151526451111e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":5.8203125,"distances_sum":523.5271420268848}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6513671875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6513671875,"f1":0.7728296009546017,"seconds":4.753470420837402e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.3515625,"distances_sum":1563.3125188280585}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8666302447552454,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.140625,"distances_sum":1914.3738089944086}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9352907509157516,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.515625,"distances_sum":2333.933355808534}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9352907509157516,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.515625,"distances_sum":2333.933355808534}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.943941995504496,"seconds":3.78098338842392e-5,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.6796875,"distances_sum":2475.7974959823528}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9715602106227111,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8984375,"distances_sum":2623.484606951708}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9544871794871801,"seconds":6.241723895072937e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.796875,"distances_sum":2502.005345357401}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9715602106227111,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8984375,"distances_sum":2623.484606951708}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9715602106227111,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8984375,"distances_sum":2623.484606951708}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6357421875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6357421875,"f1":0.7644475316350324,"seconds":4.608184099197388e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.09375,"distances_sum":1705.006002889956}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6357421875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6357421875,"f1":0.7644475316350324,"seconds":4.608184099197388e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.09375,"distances_sum":1705.006002889956}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7099609375,"f1":0.8194524225774233,"seconds":4.759058356285095e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.46875,"distances_sum":1929.9545841404163}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7099609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7099609375,"f1":0.8194524225774233,"seconds":4.759058356285095e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.46875,"distances_sum":1929.9545841404163}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.915050574425575,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.4296875,"distances_sum":2410.5726451219502}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9452094780219785,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.6484375,"distances_sum":2534.0026967175336}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9534829753579758,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.703125,"distances_sum":2616.2920159711543}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.913971445221446,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.4765625,"distances_sum":2344.7771856635513}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8833031551781562,"seconds":1.1041760444641113e-5,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.109375,"distances_sum":2184.685225312256}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9534829753579758,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.703125,"distances_sum":2616.2920159711543}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9534829753579758,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.703125,"distances_sum":2616.2920159711543}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.853281961094462,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.6953125,"distances_sum":1639.1132950162166}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8482985764235772,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.6171875,"distances_sum":1644.5443368463013}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2470703125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2470703125,"f1":null,"seconds":3.380700945854187e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":5.96875,"distances_sum":453.0172927492242}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8429180194805203,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.65625,"distances_sum":1594.1852451123043}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.853281961094462,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.6953125,"distances_sum":1639.1132950162166}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9676911630036634,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9609375,"distances_sum":2242.207556625297}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9346096611721618,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.90625,"distances_sum":2010.4903356804707}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9676911630036634,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9609375,"distances_sum":2242.207556625297}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9717662545787549,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9765625,"distances_sum":2248.0346567498714}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9768429487179489,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":9.0,"distances_sum":2280.5973507112635}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9761160714285717,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9765625,"distances_sum":2267.8815990469143}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9768429487179489,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":9.0,"distances_sum":2280.5973507112635}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9768429487179489,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":9.0,"distances_sum":2280.5973507112635}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1865234375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1865234375,"f1":null,"seconds":2.9318034648895264e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":4.3046875,"distances_sum":348.79080184867655}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1865234375,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.1865234375,"f1":null,"seconds":2.9318034648895264e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":4.3046875,"distances_sum":348.79080184867655}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8078973110223119,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.4296875,"distances_sum":1455.1082473978786}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7762340090465097,"seconds":4.462897777557373e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.7734375,"distances_sum":1333.7756345172872}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.8078973110223119,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.4296875,"distances_sum":1455.1082473978786}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.91896488927739,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.5390625,"distances_sum":2065.9882885737443}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9544330669330672,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7734375,"distances_sum":2293.603387419526}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.889973568098569,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3359375,"distances_sum":1899.132896200521}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9352048992673998,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6640625,"distances_sum":2157.730994804871}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9544330669330672,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7734375,"distances_sum":2293.603387419526}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9544330669330672,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7734375,"distances_sum":2293.603387419526}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7757570554445562,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.6328125,"distances_sum":1373.0983693083592}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8803456959706968,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.7578125,"distances_sum":1755.8035228917884}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":3.7457793951034546e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.046875,"distances_sum":795.4407144470784}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.796875,"f1":0.8803456959706968,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.7578125,"distances_sum":1755.8035228917884}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9375114468864476,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8359375,"distances_sum":2107.5170466923482}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9644803113553118,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9140625,"distances_sum":2316.9110420389}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9345753205128213,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8046875,"distances_sum":2109.182988294633}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9157826548451555,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6875,"distances_sum":2018.2117631566434}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9644803113553118,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9140625,"distances_sum":2316.9110420389}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9714858058608064,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9296875,"distances_sum":2358.462638229754}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.970703125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.970703125,"f1":0.9840773809523812,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.984375,"distances_sum":2437.9715190861543}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9716517857142861,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.921875,"distances_sum":2346.620627675083}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9776785714285718,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.984375,"distances_sum":2395.358769422045}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9708161630036635,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9296875,"distances_sum":2344.053873295991}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.970703125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9840773809523812,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.984375,"distances_sum":2437.9715190861543}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.970703125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9840773809523812,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.984375,"distances_sum":2437.9715190861543}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5498046875,"f1":0.6919835372960377,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.015625,"distances_sum":907.0864797210074}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8411550255300262,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.09375,"distances_sum":1298.4983309579686}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8773871961371968,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.2890625,"distances_sum":1381.9349340576182}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8773871961371968,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.2890625,"distances_sum":1381.9349340576182}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9566449175824181,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8046875,"distances_sum":1767.1797426353962}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9301828379953385,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.4609375,"distances_sum":1618.8208564948059}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8992304570429578,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.359375,"distances_sum":1489.769409446418}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9566449175824181,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8046875,"distances_sum":1767.1797426353962}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9658539377289379,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.78125,"distances_sum":1840.83162570213}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9634157509157512,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.796875,"distances_sum":1816.8895424544605}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9658539377289379,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.78125,"distances_sum":1840.83162570213}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9658539377289379,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.78125,"distances_sum":1840.83162570213}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.197265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.197265625,"f1":null,"seconds":3.2726675271987915e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":4.8984375,"distances_sum":384.3104208769635}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3505859375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3505859375,"f1":null,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":5.8515625,"distances_sum":698.2228372824209}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7716727716727724,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.9296875,"distances_sum":1230.2466964914913}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.650390625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.650390625,"f1":0.7716727716727724,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.9296875,"distances_sum":1230.2466964914913}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9331616300366307,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8671875,"distances_sum":1817.503253762435}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8479863886113895,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.453125,"distances_sum":1480.8430902101875}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8169965451215458,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.3203125,"distances_sum":1379.3566541064672}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9331616300366307,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8671875,"distances_sum":1817.503253762435}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9520375457875462,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8515625,"distances_sum":1966.266025992372}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9690304487179491,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8984375,"distances_sum":2060.0020551895486}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.944949321511822,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.78125,"distances_sum":1948.3890999840146}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9388481310356317,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.703125,"distances_sum":1915.3996438868871}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9690304487179491,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8984375,"distances_sum":2060.0020551895486}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9690304487179491,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8984375,"distances_sum":2060.0020551895486}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8026102369852378,"seconds":4.641711711883545e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.5234375,"distances_sum":1225.6461690746432}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8854088619713629,"seconds":4.9173831939697266e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.0625,"distances_sum":1485.6922773253252}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8679688367188374,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.9609375,"distances_sum":1419.9293897140328}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.806640625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.806640625,"f1":0.8854088619713629,"seconds":4.9173831939697266e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.0625,"distances_sum":1485.6922773253252}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9613495879120881,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.796875,"distances_sum":1918.5906541961374}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9170386904761912,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2265625,"distances_sum":1647.9713177708645}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9514537545787551,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7578125,"distances_sum":1853.6449433892458}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.93477303946054,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4609375,"distances_sum":1759.495193396652}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9074607683982694,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2890625,"distances_sum":1633.7396110602654}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9483516483516486,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6640625,"distances_sum":1855.5339913446016}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9613495879120881,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.796875,"distances_sum":1918.5906541961374}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9615556318681324,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.78125,"distances_sum":1926.568315608251}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9734203296703299,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.859375,"distances_sum":1975.3339864225443}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417585,"seconds":6.198883056640625e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9375,"distances_sum":2021.9572441413154}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9636561355311359,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8046875,"distances_sum":1926.4520445776961}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9680491383616386,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.859375,"distances_sum":1949.324670543763}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9759672619047622,"seconds":2.7231872081756592e-5,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9140625,"distances_sum":1989.6784257288632}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417585,"seconds":6.198883056640625e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9375,"distances_sum":2021.9572441413154}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417585,"seconds":6.198883056640625e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9375,"distances_sum":2021.9572441413154}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7067153332778338,"seconds":4.26173210144043e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.390625,"distances_sum":1033.5430695804764}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4365234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4365234375,"f1":null,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.5,"distances_sum":728.9193740546218}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5693359375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5693359375,"f1":0.7067153332778338,"seconds":4.26173210144043e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.390625,"distances_sum":1033.5430695804764}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9044387903762913,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.296875,"distances_sum":1633.3268717380847}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8756498709623719,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.171875,"distances_sum":1499.992031312333}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7827498889998898,"seconds":4.800036549568176e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.765625,"distances_sum":1195.5486164984377}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8369140625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8369140625,"f1":0.9044387903762913,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.296875,"distances_sum":1633.3268717380847}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714289,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.890625,"distances_sum":2051.053408157008}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.976934523809524,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8671875,"distances_sum":2089.156007356036}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9526327838827843,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.765625,"distances_sum":1911.1246181803103}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.976934523809524,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8671875,"distances_sum":2089.156007356036}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.976934523809524,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8671875,"distances_sum":2089.156007356036}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7818613677988686,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.484375,"distances_sum":1237.5661370947373}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.44140625,"f1":null,"seconds":3.6079436540603638e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.3984375,"distances_sum":780.9760962982048}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6572265625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6572265625,"f1":0.7818613677988686,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.484375,"distances_sum":1237.5661370947373}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.887563478188479,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.2578125,"distances_sum":1529.7150471145355}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9591606310356313,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8046875,"distances_sum":1926.1216024661187}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9103427822177828,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.359375,"distances_sum":1655.265223549441}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9304658882783888,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.453125,"distances_sum":1720.231652689675}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8978058399933406,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.2890625,"distances_sum":1574.5016273700628}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8623574342324352,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.0,"distances_sum":1486.7369439420124}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9591606310356313,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8046875,"distances_sum":1926.1216024661187}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684008699633705,"seconds":6.709247827529907e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8671875,"distances_sum":1962.911399637397}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9733459249084254,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.90625,"distances_sum":2010.6373450981346}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9627861721611725,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.84375,"distances_sum":1918.6160727371448}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9688472985347991,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8203125,"distances_sum":1985.7543887334757}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9674507783882791,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.796875,"distances_sum":1984.1712579860578}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9733459249084254,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.90625,"distances_sum":2010.6373450981346}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9733459249084254,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.90625,"distances_sum":2010.6373450981346}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.525390625,"f1":null,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.765625,"distances_sum":962.0941011777733}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.544921875,"f1":0.690683448495949,"seconds":4.176050424575806e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.9375,"distances_sum":1022.2416091392934}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8721590909090916,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.0390625,"distances_sum":1537.8184331230896}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8721590909090916,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.0390625,"distances_sum":1537.8184331230896}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9153762903762912,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.4140625,"distances_sum":1738.3266762306796}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.925429258241759,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.375,"distances_sum":1819.160881441271}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9524038461538465,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.75,"distances_sum":1960.8409914540941}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9023669039294046,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.1796875,"distances_sum":1681.6627083038081}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8981117840492847,"seconds":5.112960934638977e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.15625,"distances_sum":1628.6537232693806}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9524038461538465,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.75,"distances_sum":1960.8409914540941}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358978,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.84375,"distances_sum":2091.3423664570214}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9640453296703302,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8046875,"distances_sum":2045.6629097015089}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.968807234432235,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8125,"distances_sum":2066.876768537715}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358978,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.84375,"distances_sum":2091.3423664570214}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358978,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.84375,"distances_sum":2091.3423664570214}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5234375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5234375,"f1":0.6712459415584423,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.8984375,"distances_sum":1004.077773419018}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5234375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5234375,"f1":0.6712459415584423,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.8984375,"distances_sum":1004.077773419018}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9281796328671336,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.421875,"distances_sum":1902.4724243093558}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7773710664335673,"seconds":4.490837454795837e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.4296875,"distances_sum":1299.1312427958703}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.533203125,"f1":0.6786796536796543,"seconds":4.170462489128113e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.984375,"distances_sum":986.0333031638322}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8585685148185158,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.0234375,"distances_sum":1561.221861330102}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9281796328671336,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.421875,"distances_sum":1902.4724243093558}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":12,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9580445596070601,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7421875,"distances_sum":2081.2544135182934}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9325091575091581,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4609375,"distances_sum":1918.5319427734562}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":12,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9580445596070601,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7421875,"distances_sum":2081.2544135182934}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":12,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9580445596070601,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7421875,"distances_sum":2081.2544135182934}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4033203125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4033203125,"f1":null,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.1875,"distances_sum":758.3353086246742}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5439453125,"f1":0.6891981282606288,"seconds":4.064291715621948e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.234375,"distances_sum":1022.5027105756845}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5439453125,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5439453125,"f1":0.6891981282606288,"seconds":4.064291715621948e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.234375,"distances_sum":1022.5027105756845}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8776130119880126,"seconds":5.133450031280518e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.1796875,"distances_sum":1636.16620426786}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.775558816183817,"seconds":4.507601261138916e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.75,"distances_sum":1253.654124181752}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9229140651015662,"seconds":6.256625056266785e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.453125,"distances_sum":1817.7683941162582}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":6,"bsize":3}, perf: {"precision":null,"recall":0.56640625,"f1":null,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.5859375,"distances_sum":1088.7558217821472}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8059731934731943,"seconds":4.652887582778931e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.9140625,"distances_sum":1381.6237332012624}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.9229140651015662,"seconds":6.256625056266785e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.453125,"distances_sum":1817.7683941162582}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964383012820513,"seconds":6.5658241510391235e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8359375,"distances_sum":2116.7048091425545}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9339087995337999,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.484375,"distances_sum":1937.9424319551779}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.964383012820513,"seconds":6.5658241510391235e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8359375,"distances_sum":2116.7048091425545}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.964383012820513,"seconds":6.5658241510391235e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8359375,"distances_sum":2116.7048091425545}}, n: 9
mean(cfft.distances) = 0.33861428571339675
mean(cdnet.distances) = 0.46570440983942385
mean(crand.distances) = 0.34205606301340347
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8644444444444445
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8933333333333332
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8666666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8933333333333332
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8822222222222221
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9244444444444445
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8422222222222221
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8755555555555556
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8822222222222224
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8266666666666667
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9133333333333334
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8933333333333332
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9155555555555556
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 2, 3, 3, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 2, 3, 3, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 2, 3, 3, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 2, 3, 3, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 2, 3, 3, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 2, 3, 3, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 8, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 2, 3, 3, 3, 1]
acc = 0.9466666666666667
*** finished computation of 12 references, err: [Inf, 0.6234646276632945] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 2]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 7, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 1, 6]]
** centroid: 8, normalized-entropy: 0.5916727785823274, [(2, 1), (3, 6)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 13, 2]]
** centroid: 10, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 15 centroids; started with 12
acc = 0.9466666666666667
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.4935335357863646] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4935335357863646, 0.3358790507266024] ***
*** starting iteration: 2; err: [Inf, 0.4935335357863646, 0.3358790507266024] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4935335357863646, 0.3358790507266024, 0.309720725458753] ***
*** starting iteration: 3; err: [Inf, 0.4935335357863646, 0.3358790507266024, 0.309720725458753] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4935335357863646, 0.3358790507266024, 0.309720725458753, 0.30198521560404795] ***
*** starting iteration: 4; err: [Inf, 0.4935335357863646, 0.3358790507266024, 0.309720725458753, 0.30198521560404795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4935335357863646, 0.3358790507266024, 0.309720725458753, 0.30198521560404795, 0.3002884080339861] ***
*** starting iteration: 5; err: [Inf, 0.4935335357863646, 0.3358790507266024, 0.309720725458753, 0.30198521560404795, 0.3002884080339861] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4935335357863646, 0.3358790507266024, 0.309720725458753, 0.30198521560404795, 0.3002884080339861, 0.3002273298586039] ***
*** finished computation of 3 references, err: [Inf, 0.4935335357863646, 0.3358790507266024, 0.309720725458753, 0.30198521560404795, 0.3002884080339861, 0.3002273298586039] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [250, 21, 0]]
** centroid: 1, normalized-entropy: 0.39327547292628595, [(1, 250), (2, 21)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 160, 25]]
** centroid: 2, normalized-entropy: 0.5713549744279549, [(2, 160), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [146, 64, 0]]
** centroid: 3, normalized-entropy: 0.8870341576828725, [(1, 146), (2, 64)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.34318483464822575] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34318483464822575, 0.23149881214071233] ***
*** starting iteration: 2; err: [Inf, 0.34318483464822575, 0.23149881214071233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34318483464822575, 0.23149881214071233, 0.22738090241132108] ***
*** starting iteration: 3; err: [Inf, 0.34318483464822575, 0.23149881214071233, 0.22738090241132108] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34318483464822575, 0.23149881214071233, 0.22738090241132108, 0.22697277183367595] ***
*** finished computation of 3 references, err: [Inf, 0.34318483464822575, 0.23149881214071233, 0.22738090241132108, 0.22697277183367595] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [64, 176, 25]]
** centroid: 1, normalized-entropy: 0.7624809784866973, [(1, 64), (2, 176), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [209, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [123, 69, 0]]
** centroid: 3, normalized-entropy: 0.9421631690835511, [(1, 123), (2, 69)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.320312333297448] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.320312333297448, 0.2421697846612428] ***
*** starting iteration: 2; err: [Inf, 0.320312333297448, 0.2421697846612428] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.320312333297448, 0.2421697846612428, 0.23806051514251086] ***
*** starting iteration: 3; err: [Inf, 0.320312333297448, 0.2421697846612428, 0.23806051514251086] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.320312333297448, 0.2421697846612428, 0.23806051514251086, 0.236689827540356] ***
*** starting iteration: 4; err: [Inf, 0.320312333297448, 0.2421697846612428, 0.23806051514251086, 0.236689827540356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.320312333297448, 0.2421697846612428, 0.23806051514251086, 0.236689827540356, 0.2365219411852098] ***
*** finished computation of 3 references, err: [Inf, 0.320312333297448, 0.2421697846612428, 0.23806051514251086, 0.236689827540356, 0.2365219411852098] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [266, 18, 0]]
** centroid: 1, normalized-entropy: 0.340719732641027, [(1, 266), (2, 18)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 161, 28]]
** centroid: 2, normalized-entropy: 0.6051865766334207, [(2, 161), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [144, 50, 0]]
** centroid: 3, normalized-entropy: 0.8233045447828534, [(1, 144), (2, 50)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31715806198447405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31715806198447405, 0.24079306409561607] ***
*** starting iteration: 2; err: [Inf, 0.31715806198447405, 0.24079306409561607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31715806198447405, 0.24079306409561607, 0.23572867693494018] ***
*** starting iteration: 3; err: [Inf, 0.31715806198447405, 0.24079306409561607, 0.23572867693494018] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31715806198447405, 0.24079306409561607, 0.23572867693494018, 0.23521985050019945] ***
*** finished computation of 3 references, err: [Inf, 0.31715806198447405, 0.24079306409561607, 0.23572867693494018, 0.23521985050019945] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [91, 158, 29]]
** centroid: 1, normalized-entropy: 0.8396755834554842, [(1, 91), (2, 158), (3, 29)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [90, 86, 0]]
** centroid: 2, normalized-entropy: 0.9996273710574612, [(1, 90), (2, 86)]
*** center 3: selecting labels [1] (freq >= 1) [from [213, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41063136205836753] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41063136205836753, 0.2949205899437976] ***
*** starting iteration: 2; err: [Inf, 0.41063136205836753, 0.2949205899437976] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41063136205836753, 0.2949205899437976, 0.29108195883854443] ***
*** starting iteration: 3; err: [Inf, 0.41063136205836753, 0.2949205899437976, 0.29108195883854443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41063136205836753, 0.2949205899437976, 0.29108195883854443, 0.29114049812709014] ***
*** finished computation of 3 references, err: [Inf, 0.41063136205836753, 0.2949205899437976, 0.29108195883854443, 0.29114049812709014] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [131, 65, 0]]
** centroid: 1, normalized-entropy: 0.9165857571343126, [(1, 131), (2, 65)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [74, 164, 28]]
** centroid: 2, normalized-entropy: 0.8111031588677055, [(1, 74), (2, 164), (3, 28)]
*** center 3: selecting labels [1] (freq >= 1) [from [205, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33144503308535517] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33144503308535517, 0.2926168385921032] ***
*** starting iteration: 2; err: [Inf, 0.33144503308535517, 0.2926168385921032] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33144503308535517, 0.2926168385921032, 0.29071032583456613] ***
*** starting iteration: 3; err: [Inf, 0.33144503308535517, 0.2926168385921032, 0.29071032583456613] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33144503308535517, 0.2926168385921032, 0.29071032583456613, 0.29008592464688837] ***
*** finished computation of 3 references, err: [Inf, 0.33144503308535517, 0.2926168385921032, 0.29071032583456613, 0.29008592464688837] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [237, 7, 0]]
** centroid: 1, normalized-entropy: 0.18777162263136743, [(1, 237), (2, 7)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 189, 29]]
** centroid: 2, normalized-entropy: 0.5656830998389341, [(2, 189), (3, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [157, 48, 0]]
** centroid: 3, normalized-entropy: 0.7851695745756854, [(1, 157), (2, 48)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24380300967889773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24380300967889773, 0.2070404784012776] ***
*** starting iteration: 2; err: [Inf, 0.24380300967889773, 0.2070404784012776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24380300967889773, 0.2070404784012776, 0.20270993635645723] ***
*** starting iteration: 3; err: [Inf, 0.24380300967889773, 0.2070404784012776, 0.20270993635645723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24380300967889773, 0.2070404784012776, 0.20270993635645723, 0.19980571571004777] ***
*** finished computation of 7 references, err: [Inf, 0.24380300967889773, 0.2070404784012776, 0.20270993635645723, 0.19980571571004777] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [1, 77, 1]]
** centroid: 1, normalized-entropy: 0.12343953324336897, [(1, 1), (2, 77), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 76, 24]]
** centroid: 2, normalized-entropy: 0.7950402793845225, [(2, 76), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [78, 52, 0]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(1, 78), (2, 52)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [67, 18, 0]]
** centroid: 4, normalized-entropy: 0.7448423974714387, [(1, 67), (2, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [37, 22, 0]]
** centroid: 5, normalized-entropy: 0.9528588097297789, [(1, 37), (2, 22)]
*** center 6: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [121, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2414573066940495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2414573066940495, 0.22224632051389043] ***
*** starting iteration: 2; err: [Inf, 0.2414573066940495, 0.22224632051389043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2414573066940495, 0.22224632051389043, 0.21410345133377248] ***
*** starting iteration: 3; err: [Inf, 0.2414573066940495, 0.22224632051389043, 0.21410345133377248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2414573066940495, 0.22224632051389043, 0.21410345133377248, 0.20703047779814593] ***
*** finished computation of 7 references, err: [Inf, 0.2414573066940495, 0.22224632051389043, 0.21410345133377248, 0.20703047779814593] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [104, 16, 0]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(1, 104), (2, 16)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [44, 95, 7]]
** centroid: 2, normalized-entropy: 0.7161123018454351, [(1, 44), (2, 95), (3, 7)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [18, 62, 0]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(1, 18), (2, 62)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 56, 21]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 56), (3, 21)]
*** center 5: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26976419554819453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26976419554819453, 0.20872935567472153] ***
*** starting iteration: 2; err: [Inf, 0.26976419554819453, 0.20872935567472153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26976419554819453, 0.20872935567472153, 0.19392607741147236] ***
*** starting iteration: 3; err: [Inf, 0.26976419554819453, 0.20872935567472153, 0.19392607741147236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26976419554819453, 0.20872935567472153, 0.19392607741147236, 0.19126598962835376] ***
*** finished computation of 7 references, err: [Inf, 0.26976419554819453, 0.20872935567472153, 0.19392607741147236, 0.19126598962835376] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 78, 12]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 78), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 42, 17]]
** centroid: 3, normalized-entropy: 0.8663006754980497, [(2, 42), (3, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [75, 59, 0]]
** centroid: 4, normalized-entropy: 0.9896911180731478, [(1, 75), (2, 59)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [41, 51, 0]]
** centroid: 5, normalized-entropy: 0.9914606013843205, [(1, 41), (2, 51)]
*** center 6: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [88, 14, 0]]
** centroid: 7, normalized-entropy: 0.577004250315725, [(1, 88), (2, 14)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38550600771688753] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38550600771688753, 0.3443570064475855] ***
*** finished computation of 3 references, err: [Inf, 0.38550600771688753, 0.3443570064475855] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [143, 89, 0]]
** centroid: 1, normalized-entropy: 0.9605591135960244, [(1, 143), (2, 89)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [180, 29, 0]]
** centroid: 2, normalized-entropy: 0.5809715426165717, [(1, 180), (2, 29)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [73, 127, 25]]
** centroid: 3, normalized-entropy: 0.8484861527526035, [(1, 73), (2, 127), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3563029140155802] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3563029140155802, 0.30763940658626976] ***
*** finished computation of 3 references, err: [Inf, 0.3563029140155802, 0.30763940658626976] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 151, 28]]
** centroid: 1, normalized-entropy: 0.6256869870089502, [(2, 151), (3, 28)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [301, 35, 0]]
** centroid: 2, normalized-entropy: 0.4820661480830933, [(1, 301), (2, 35)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [109, 43, 0]]
** centroid: 3, normalized-entropy: 0.8593651723062489, [(1, 109), (2, 43)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3671808653417556] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3671808653417556, 0.30572269349659176] ***
*** finished computation of 3 references, err: [Inf, 0.3671808653417556, 0.30572269349659176] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [258, 35, 0]]
** centroid: 1, normalized-entropy: 0.5277891496704616, [(1, 258), (2, 35)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 139, 29]]
** centroid: 2, normalized-entropy: 0.6636611253545512, [(2, 139), (3, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [136, 70, 0]]
** centroid: 3, normalized-entropy: 0.9246327718618892, [(1, 136), (2, 70)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39567259870687715] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39567259870687715, 0.2975007013946369] ***
*** starting iteration: 2; err: [Inf, 0.39567259870687715, 0.2975007013946369] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39567259870687715, 0.2975007013946369, 0.2939426753258853] ***
*** starting iteration: 3; err: [Inf, 0.39567259870687715, 0.2975007013946369, 0.2939426753258853] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39567259870687715, 0.2975007013946369, 0.2939426753258853, 0.2933692217129073] ***
*** finished computation of 3 references, err: [Inf, 0.39567259870687715, 0.2975007013946369, 0.2939426753258853, 0.2933692217129073] ***
*** center 1: selecting labels [1] (freq >= 2) [from [224, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [85, 122, 0]]
** centroid: 2, normalized-entropy: 0.9768290601351861, [(1, 85), (2, 122)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [87, 123, 25]]
** centroid: 3, normalized-entropy: 0.8602652267786062, [(1, 87), (2, 123), (3, 25)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3751438145219967] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3751438145219967, 0.3021461200667196] ***
*** starting iteration: 2; err: [Inf, 0.3751438145219967, 0.3021461200667196] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3751438145219967, 0.3021461200667196, 0.2991613275127142] ***
*** starting iteration: 3; err: [Inf, 0.3751438145219967, 0.3021461200667196, 0.2991613275127142] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3751438145219967, 0.3021461200667196, 0.2991613275127142, 0.29839944480771735] ***
*** finished computation of 3 references, err: [Inf, 0.3751438145219967, 0.3021461200667196, 0.2991613275127142, 0.29839944480771735] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [262, 14, 0]]
** centroid: 1, normalized-entropy: 0.2894672273882472, [(1, 262), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [148, 51, 0]]
** centroid: 2, normalized-entropy: 0.8210829594701269, [(1, 148), (2, 51)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 164, 28]]
** centroid: 3, normalized-entropy: 0.5993142373098089, [(2, 164), (3, 28)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35113396708025546] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35113396708025546, 0.3013912372198933] ***
*** starting iteration: 2; err: [Inf, 0.35113396708025546, 0.3013912372198933] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35113396708025546, 0.3013912372198933, 0.29548962178152766] ***
*** starting iteration: 3; err: [Inf, 0.35113396708025546, 0.3013912372198933, 0.29548962178152766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35113396708025546, 0.3013912372198933, 0.29548962178152766, 0.29457369914510173] ***
*** finished computation of 3 references, err: [Inf, 0.35113396708025546, 0.3013912372198933, 0.29548962178152766, 0.29457369914510173] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [1, 171, 29]]
** centroid: 1, normalized-entropy: 0.597185045253784, [(2, 171), (3, 29)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [272, 10, 0]]
** centroid: 2, normalized-entropy: 0.22107910499111305, [(1, 272), (2, 10)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [121, 63, 0]]
** centroid: 3, normalized-entropy: 0.9270886577378789, [(1, 121), (2, 63)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22655479282674915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22655479282674915, 0.20060431795731723] ***
*** starting iteration: 2; err: [Inf, 0.22655479282674915, 0.20060431795731723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22655479282674915, 0.20060431795731723, 0.1921958057391639] ***
*** starting iteration: 3; err: [Inf, 0.22655479282674915, 0.20060431795731723, 0.1921958057391639] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22655479282674915, 0.20060431795731723, 0.1921958057391639, 0.19005217833106067] ***
*** starting iteration: 4; err: [Inf, 0.22655479282674915, 0.20060431795731723, 0.1921958057391639, 0.19005217833106067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22655479282674915, 0.20060431795731723, 0.1921958057391639, 0.19005217833106067, 0.1886622605918048] ***
*** starting iteration: 5; err: [Inf, 0.22655479282674915, 0.20060431795731723, 0.1921958057391639, 0.19005217833106067, 0.1886622605918048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22655479282674915, 0.20060431795731723, 0.1921958057391639, 0.19005217833106067, 0.1886622605918048, 0.18792808280274337] ***
*** finished computation of 7 references, err: [Inf, 0.22655479282674915, 0.20060431795731723, 0.1921958057391639, 0.19005217833106067, 0.1886622605918048, 0.18792808280274337] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [62, 51, 0]]
** centroid: 1, normalized-entropy: 0.9931536200741918, [(1, 62), (2, 51)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 89, 25]]
** centroid: 2, normalized-entropy: 0.7588840483719564, [(2, 89), (3, 25)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 73, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [61, 28, 0]]
** centroid: 4, normalized-entropy: 0.898419774686072, [(1, 61), (2, 28)]
*** center 5: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [104, 4, 0]]
** centroid: 6, normalized-entropy: 0.22853814395352806, [(1, 104), (2, 4)]
*** center 7: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.26254743711277284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26254743711277284, 0.21317760180681944] ***
*** starting iteration: 2; err: [Inf, 0.26254743711277284, 0.21317760180681944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26254743711277284, 0.21317760180681944, 0.20310212720347487] ***
*** starting iteration: 3; err: [Inf, 0.26254743711277284, 0.21317760180681944, 0.20310212720347487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26254743711277284, 0.21317760180681944, 0.20310212720347487, 0.19454844872644547] ***
*** starting iteration: 4; err: [Inf, 0.26254743711277284, 0.21317760180681944, 0.20310212720347487, 0.19454844872644547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26254743711277284, 0.21317760180681944, 0.20310212720347487, 0.19454844872644547, 0.19015481611057514] ***
*** starting iteration: 5; err: [Inf, 0.26254743711277284, 0.21317760180681944, 0.20310212720347487, 0.19454844872644547, 0.19015481611057514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26254743711277284, 0.21317760180681944, 0.20310212720347487, 0.19454844872644547, 0.19015481611057514, 0.18762151460753923] ***
*** starting iteration: 6; err: [Inf, 0.26254743711277284, 0.21317760180681944, 0.20310212720347487, 0.19454844872644547, 0.19015481611057514, 0.18762151460753923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26254743711277284, 0.21317760180681944, 0.20310212720347487, 0.19454844872644547, 0.19015481611057514, 0.18762151460753923, 0.18653204079544258] ***
*** starting iteration: 7; err: [Inf, 0.26254743711277284, 0.21317760180681944, 0.20310212720347487, 0.19454844872644547, 0.19015481611057514, 0.18762151460753923, 0.18653204079544258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26254743711277284, 0.21317760180681944, 0.20310212720347487, 0.19454844872644547, 0.19015481611057514, 0.18762151460753923, 0.18653204079544258, 0.1862147258653276] ***
*** finished computation of 7 references, err: [Inf, 0.26254743711277284, 0.21317760180681944, 0.20310212720347487, 0.19454844872644547, 0.19015481611057514, 0.18762151460753923, 0.18653204079544258, 0.1862147258653276] ***
*** center 1: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [63, 50, 0]]
** centroid: 2, normalized-entropy: 0.9904316644573915, [(1, 63), (2, 50)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 100, 28]]
** centroid: 3, normalized-entropy: 0.7578784625383954, [(2, 100), (3, 28)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [82, 4, 0]]
** centroid: 4, normalized-entropy: 0.2713895875081112, [(1, 82), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [30, 65, 0]]
** centroid: 5, normalized-entropy: 0.8997437586982626, [(1, 30), (2, 65)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [82, 10, 0]]
** centroid: 6, normalized-entropy: 0.49596907206183377, [(1, 82), (2, 10)]
*** center 7: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.28721463391096563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28721463391096563, 0.20261010155221376] ***
*** starting iteration: 2; err: [Inf, 0.28721463391096563, 0.20261010155221376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28721463391096563, 0.20261010155221376, 0.19512126619915018] ***
*** starting iteration: 3; err: [Inf, 0.28721463391096563, 0.20261010155221376, 0.19512126619915018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28721463391096563, 0.20261010155221376, 0.19512126619915018, 0.19277109780294382] ***
*** starting iteration: 4; err: [Inf, 0.28721463391096563, 0.20261010155221376, 0.19512126619915018, 0.19277109780294382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28721463391096563, 0.20261010155221376, 0.19512126619915018, 0.19277109780294382, 0.1911559597179964] ***
*** starting iteration: 5; err: [Inf, 0.28721463391096563, 0.20261010155221376, 0.19512126619915018, 0.19277109780294382, 0.1911559597179964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28721463391096563, 0.20261010155221376, 0.19512126619915018, 0.19277109780294382, 0.1911559597179964, 0.19014968936550786] ***
*** starting iteration: 6; err: [Inf, 0.28721463391096563, 0.20261010155221376, 0.19512126619915018, 0.19277109780294382, 0.1911559597179964, 0.19014968936550786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28721463391096563, 0.20261010155221376, 0.19512126619915018, 0.19277109780294382, 0.1911559597179964, 0.19014968936550786, 0.18879286121197233] ***
*** starting iteration: 7; err: [Inf, 0.28721463391096563, 0.20261010155221376, 0.19512126619915018, 0.19277109780294382, 0.1911559597179964, 0.19014968936550786, 0.18879286121197233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28721463391096563, 0.20261010155221376, 0.19512126619915018, 0.19277109780294382, 0.1911559597179964, 0.19014968936550786, 0.18879286121197233, 0.18803426133038692] ***
*** finished computation of 7 references, err: [Inf, 0.28721463391096563, 0.20261010155221376, 0.19512126619915018, 0.19277109780294382, 0.1911559597179964, 0.19014968936550786, 0.18879286121197233, 0.18803426133038692] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 96, 29]]
** centroid: 1, normalized-entropy: 0.7814814932386424, [(2, 96), (3, 29)]
*** center 2: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [86, 1, 0]]
** centroid: 3, normalized-entropy: 0.09054385326964301, [(1, 86), (2, 1)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [73, 59, 0]]
** centroid: 4, normalized-entropy: 0.9918703867024693, [(1, 73), (2, 59)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [75, 2, 0]]
** centroid: 5, normalized-entropy: 0.17378132267943294, [(1, 75), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [63, 3, 0]]
** centroid: 6, normalized-entropy: 0.2667649878030262, [(1, 63), (2, 3)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 83, 0]]
** centroid: 7, normalized-entropy: 0.2690553027246505, [(1, 4), (2, 83)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2180726542543094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2180726542543094, 0.15601594947409947] ***
*** finished computation of 7 references, err: [Inf, 0.2180726542543094, 0.15601594947409947] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [89, 52, 0]]
** centroid: 1, normalized-entropy: 0.9497418438927923, [(1, 89), (2, 52)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [103, 1, 0]]
** centroid: 2, normalized-entropy: 0.07823246525771242, [(1, 103), (2, 1)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [39, 61, 0]]
** centroid: 3, normalized-entropy: 0.9647995485050873, [(1, 39), (2, 61)]
*** center 4: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 102, 25]]
** centroid: 5, normalized-entropy: 0.7155839810598772, [(2, 102), (3, 25)]
*** center 6: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [39, 29, 0]]
** centroid: 7, normalized-entropy: 0.9843432030984676, [(1, 39), (2, 29)]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18562891011543828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18562891011543828, 0.1579124091257309] ***
*** finished computation of 7 references, err: [Inf, 0.18562891011543828, 0.1579124091257309] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [16, 74, 0]]
** centroid: 1, normalized-entropy: 0.6751914401458716, [(1, 16), (2, 74)]
*** center 2: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [117, 17, 0]]
** centroid: 3, normalized-entropy: 0.5487791867822941, [(1, 117), (2, 17)]
*** center 4: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 63, 28]]
** centroid: 5, normalized-entropy: 0.8904916402194913, [(2, 63), (3, 28)]
*** center 6: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [51, 75, 0]]
** centroid: 7, normalized-entropy: 0.9736680645496202, [(1, 51), (2, 75)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.27846267473684255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27846267473684255, 0.18048548126925548] ***
*** finished computation of 7 references, err: [Inf, 0.27846267473684255, 0.18048548126925548] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [84, 2, 0]]
** centroid: 2, normalized-entropy: 0.15935006268563429, [(1, 84), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [167, 38, 0]]
** centroid: 3, normalized-entropy: 0.691675892900456, [(1, 167), (2, 38)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 145, 29]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 145), (3, 29)]
*** center 5: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [6, 57, 0]]
** centroid: 6, normalized-entropy: 0.45371633918694493, [(1, 6), (2, 57)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [16, 2, 0]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(1, 16), (2, 2)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3057838333994374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3057838333994374, 0.24698542330872725] ***
*** finished computation of 3 references, err: [Inf, 0.3057838333994374, 0.24698542330872725] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 122, 25]]
** centroid: 1, normalized-entropy: 0.6578603725435735, [(2, 122), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [87, 81, 0]]
** centroid: 2, normalized-entropy: 0.9990797181805819, [(1, 87), (2, 81)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [309, 42, 0]]
** centroid: 3, normalized-entropy: 0.5283773417314562, [(1, 309), (2, 42)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32328915557470816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32328915557470816, 0.24001735877846067] ***
*** finished computation of 3 references, err: [Inf, 0.32328915557470816, 0.24001735877846067] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [280, 6, 0]]
** centroid: 1, normalized-entropy: 0.14690273625769862, [(1, 280), (2, 6)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [17, 152, 28]]
** centroid: 2, normalized-entropy: 0.62697898121271, [(1, 17), (2, 152), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [113, 71, 0]]
** centroid: 3, normalized-entropy: 0.9620822373735962, [(1, 113), (2, 71)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.26772498749922596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26772498749922596, 0.2364449198476445] ***
*** finished computation of 3 references, err: [Inf, 0.26772498749922596, 0.2364449198476445] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [172, 63, 0]]
** centroid: 1, normalized-entropy: 0.8387034444830611, [(1, 172), (2, 63)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 148, 29]]
** centroid: 2, normalized-entropy: 0.6434216688864769, [(2, 148), (3, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [222, 33, 0]]
** centroid: 3, normalized-entropy: 0.5558227377664954, [(1, 222), (2, 33)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.1988697462801209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1988697462801209, 0.15022006853450057] ***
*** finished computation of 7 references, err: [Inf, 0.1988697462801209, 0.15022006853450057] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [90, 14, 0]]
** centroid: 1, normalized-entropy: 0.5699613760403499, [(1, 90), (2, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [57, 59, 0]]
** centroid: 3, normalized-entropy: 0.9997855578884436, [(1, 57), (2, 59)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 90, 25]]
** centroid: 4, normalized-entropy: 0.7553754125614286, [(2, 90), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [25, 82, 0]]
** centroid: 5, normalized-entropy: 0.7843112002044088, [(1, 25), (2, 82)]
*** center 6: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20550654840975374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20550654840975374, 0.16028718902719677] ***
*** finished computation of 7 references, err: [Inf, 0.20550654840975374, 0.16028718902719677] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 86, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [91, 10, 0]]
** centroid: 2, normalized-entropy: 0.46584917377204255, [(1, 91), (2, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [143, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [99, 8, 0]]
** centroid: 4, normalized-entropy: 0.3834641323087979, [(1, 99), (2, 8)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [8, 75, 0]]
** centroid: 5, normalized-entropy: 0.4574321808988397, [(1, 8), (2, 75)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 47, 28]]
** centroid: 6, normalized-entropy: 0.9531971725430559, [(2, 47), (3, 28)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [69, 3, 0]]
** centroid: 7, normalized-entropy: 0.24988229283318547, [(1, 69), (2, 3)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.201099981683009] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.201099981683009, 0.15734147107734092] ***
*** finished computation of 7 references, err: [Inf, 0.201099981683009, 0.15734147107734092] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [105, 28, 0]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(1, 105), (2, 28)]
*** center 2: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [45, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 111, 29]]
** centroid: 5, normalized-entropy: 0.7359858024909569, [(2, 111), (3, 29)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [3, 94, 0]]
** centroid: 6, normalized-entropy: 0.19902377455969078, [(1, 3), (2, 94)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [87, 11, 0]]
** centroid: 7, normalized-entropy: 0.5066503344840895, [(1, 87), (2, 11)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30322751487596883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30322751487596883, 0.2407171422204523] ***
*** starting iteration: 2; err: [Inf, 0.30322751487596883, 0.2407171422204523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30322751487596883, 0.2407171422204523, 0.23643131165376477] ***
*** starting iteration: 3; err: [Inf, 0.30322751487596883, 0.2407171422204523, 0.23643131165376477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30322751487596883, 0.2407171422204523, 0.23643131165376477, 0.23524067117399103] ***
*** starting iteration: 4; err: [Inf, 0.30322751487596883, 0.2407171422204523, 0.23643131165376477, 0.23524067117399103] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30322751487596883, 0.2407171422204523, 0.23643131165376477, 0.23524067117399103, 0.23455463526155185] ***
*** finished computation of 3 references, err: [Inf, 0.30322751487596883, 0.2407171422204523, 0.23643131165376477, 0.23524067117399103, 0.23455463526155185] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [233, 11, 0]]
** centroid: 1, normalized-entropy: 0.26512619203232257, [(1, 233), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [163, 54, 0]]
** centroid: 2, normalized-entropy: 0.8094470192809174, [(1, 163), (2, 54)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 180, 25]]
** centroid: 3, normalized-entropy: 0.5349436990971067, [(2, 180), (3, 25)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.34737302439156054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34737302439156054, 0.238054224604118] ***
*** starting iteration: 2; err: [Inf, 0.34737302439156054, 0.238054224604118] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34737302439156054, 0.238054224604118, 0.23640144768839833] ***
*** starting iteration: 3; err: [Inf, 0.34737302439156054, 0.238054224604118, 0.23640144768839833] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34737302439156054, 0.238054224604118, 0.23640144768839833, 0.23623420694086147] ***
*** finished computation of 3 references, err: [Inf, 0.34737302439156054, 0.238054224604118, 0.23640144768839833, 0.23623420694086147] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [249, 26, 0]]
** centroid: 1, normalized-entropy: 0.45146266747885627, [(1, 249), (2, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [161, 47, 0]]
** centroid: 2, normalized-entropy: 0.7709046536925236, [(1, 161), (2, 47)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 156, 28]]
** centroid: 3, normalized-entropy: 0.6152538910563409, [(2, 156), (3, 28)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.313382461125302] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.313382461125302, 0.23523340062440737] ***
*** starting iteration: 2; err: [Inf, 0.313382461125302, 0.23523340062440737] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.313382461125302, 0.23523340062440737, 0.23004062029126768] ***
*** starting iteration: 3; err: [Inf, 0.313382461125302, 0.23523340062440737, 0.23004062029126768] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.313382461125302, 0.23523340062440737, 0.23004062029126768, 0.22895124954251067] ***
*** starting iteration: 4; err: [Inf, 0.313382461125302, 0.23523340062440737, 0.23004062029126768, 0.22895124954251067] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.313382461125302, 0.23523340062440737, 0.23004062029126768, 0.22895124954251067, 0.22869729930660623] ***
*** finished computation of 3 references, err: [Inf, 0.313382461125302, 0.23523340062440737, 0.23004062029126768, 0.22895124954251067, 0.22869729930660623] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [239, 2, 0]]
** centroid: 1, normalized-entropy: 0.0692911324648208, [(1, 239), (2, 2)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [7, 187, 29]]
** centroid: 2, normalized-entropy: 0.4747491204914602, [(1, 7), (2, 187), (3, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [148, 55, 0]]
** centroid: 3, normalized-entropy: 0.8428044770032017, [(1, 148), (2, 55)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 12)
[0.9290098481715248, 0.9199828571086055, 0.9089988191784598, 0.9089658520796245, 0.897001792211373, 0.8959768151384918, 0.8919788051524579, 0.8709967452482422, 0.8620207033380686, 0.8610047172921425, 0.855055654456852, 0.8089916263568958]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9290098481715248
finished with 13
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.2412037263196465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2412037263196465, 0.2053936619113001] ***
*** starting iteration: 2; err: [Inf, 0.2412037263196465, 0.2053936619113001] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2412037263196465, 0.2053936619113001, 0.193742156436376] ***
*** starting iteration: 3; err: [Inf, 0.2412037263196465, 0.2053936619113001, 0.193742156436376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2412037263196465, 0.2053936619113001, 0.193742156436376, 0.17092362910162312] ***
*** finished computation of 7 references, err: [Inf, 0.2412037263196465, 0.2053936619113001, 0.193742156436376, 0.17092362910162312] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [71, 118, 0]]
** centroid: 1, normalized-entropy: 0.9549200680859948, [(1, 71), (2, 118)]
*** center 2: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [57, 25, 0]]
** centroid: 3, normalized-entropy: 0.8871723027673716, [(1, 57), (2, 25)]
*** center 4: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [65, 6, 0]]
** centroid: 6, normalized-entropy: 0.4178642624458583, [(1, 65), (2, 6)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 96, 25]]
** centroid: 7, normalized-entropy: 0.7349557594762549, [(2, 96), (3, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19256759318558017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19256759318558017, 0.15473809318387996] ***
*** starting iteration: 2; err: [Inf, 0.19256759318558017, 0.15473809318387996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19256759318558017, 0.15473809318387996, 0.14804969835088125] ***
*** starting iteration: 3; err: [Inf, 0.19256759318558017, 0.15473809318387996, 0.14804969835088125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19256759318558017, 0.15473809318387996, 0.14804969835088125, 0.14618911064471463] ***
*** finished computation of 7 references, err: [Inf, 0.19256759318558017, 0.15473809318387996, 0.14804969835088125, 0.14618911064471463] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [80, 3, 0]]
** centroid: 1, normalized-entropy: 0.2243269603450881, [(1, 80), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [67, 48, 0]]
** centroid: 2, normalized-entropy: 0.980218957072321, [(1, 67), (2, 48)]
*** center 3: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 88, 28]]
** centroid: 4, normalized-entropy: 0.7973265101474423, [(2, 88), (3, 28)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [4, 79, 0]]
** centroid: 5, normalized-entropy: 0.27866980356389914, [(1, 4), (2, 79)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [90, 11, 0]]
** centroid: 6, normalized-entropy: 0.4966221117153493, [(1, 90), (2, 11)]
*** center 7: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20714663867482627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20714663867482627, 0.1764459410288568] ***
*** starting iteration: 2; err: [Inf, 0.20714663867482627, 0.1764459410288568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20714663867482627, 0.1764459410288568, 0.15945077071041763] ***
*** starting iteration: 3; err: [Inf, 0.20714663867482627, 0.1764459410288568, 0.15945077071041763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20714663867482627, 0.1764459410288568, 0.15945077071041763, 0.15125917400913438] ***
*** finished computation of 7 references, err: [Inf, 0.20714663867482627, 0.1764459410288568, 0.15945077071041763, 0.15125917400913438] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [66, 41, 0]]
** centroid: 1, normalized-entropy: 0.9602553596067602, [(1, 66), (2, 41)]
*** center 2: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [19, 68, 0]]
** centroid: 3, normalized-entropy: 0.7572182549240017, [(1, 19), (2, 68)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 101, 29]]
** centroid: 4, normalized-entropy: 0.7657462082851403, [(2, 101), (3, 29)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [47, 9, 0]]
** centroid: 5, normalized-entropy: 0.6360156177392153, [(1, 47), (2, 9)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [75, 25, 0]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(1, 75), (2, 25)]
*** center 7: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
finished with 12 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 13)
[0.9290098481715248, 0.9199828571086055, 0.9170068271864679, 0.9089988191784598, 0.9089658520796245, 0.897001792211373, 0.8959768151384918, 0.8919788051524579, 0.8709967452482422, 0.8620207033380686, 0.8610047172921425, 0.855055654456852, 0.8089916263568958]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9290098481715248
finished with 13
iteration 3 finished
generating 4 configurations using top 12 configurations, starting with 13)
[0.9290098481715248, 0.9199828571086055, 0.9170068271864679, 0.9089988191784598, 0.9089658520796245, 0.897001792211373, 0.8959768151384918, 0.8919788051524579, 0.8709967452482422, 0.8620207033380686, 0.8610047172921425, 0.855055654456852, 0.8089916263568958]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9290098481715248
finished with 15
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.17031507465747875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17031507465747875, 0.15357621484254305] ***
*** starting iteration: 2; err: [Inf, 0.17031507465747875, 0.15357621484254305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17031507465747875, 0.15357621484254305, 0.15135140026613297] ***
*** starting iteration: 3; err: [Inf, 0.17031507465747875, 0.15357621484254305, 0.15135140026613297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17031507465747875, 0.15357621484254305, 0.15135140026613297, 0.15022404167232] ***
*** starting iteration: 4; err: [Inf, 0.17031507465747875, 0.15357621484254305, 0.15135140026613297, 0.15022404167232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17031507465747875, 0.15357621484254305, 0.15135140026613297, 0.15022404167232, 0.14899681410409632] ***
*** starting iteration: 5; err: [Inf, 0.17031507465747875, 0.15357621484254305, 0.15135140026613297, 0.15022404167232, 0.14899681410409632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17031507465747875, 0.15357621484254305, 0.15135140026613297, 0.15022404167232, 0.14899681410409632, 0.1481099717473533] ***
*** finished computation of 7 references, err: [Inf, 0.17031507465747875, 0.15357621484254305, 0.15135140026613297, 0.15022404167232, 0.14899681410409632, 0.1481099717473533] ***
*** center 1: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [65, 44, 0]]
** centroid: 2, normalized-entropy: 0.973056810401783, [(1, 65), (2, 44)]
*** center 3: selecting labels [1] (freq >= 1) [from [131, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [34, 50, 0]]
** centroid: 4, normalized-entropy: 0.9736680645496202, [(1, 34), (2, 50)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 77, 25]]
** centroid: 5, normalized-entropy: 0.8034158480707552, [(2, 77), (3, 25)]
*** center 6: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [16, 74, 0]]
** centroid: 7, normalized-entropy: 0.6751914401458716, [(1, 16), (2, 74)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.177661066793179] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.177661066793179, 0.150309890676206] ***
*** starting iteration: 2; err: [Inf, 0.177661066793179, 0.150309890676206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.177661066793179, 0.150309890676206, 0.14608632480429634] ***
*** starting iteration: 3; err: [Inf, 0.177661066793179, 0.150309890676206, 0.14608632480429634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.177661066793179, 0.150309890676206, 0.14608632480429634, 0.14414255080725077] ***
*** starting iteration: 4; err: [Inf, 0.177661066793179, 0.150309890676206, 0.14608632480429634, 0.14414255080725077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.177661066793179, 0.150309890676206, 0.14608632480429634, 0.14414255080725077, 0.14359683812926824] ***
*** finished computation of 7 references, err: [Inf, 0.177661066793179, 0.150309890676206, 0.14608632480429634, 0.14414255080725077, 0.14359683812926824] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [102, 20, 0]]
** centroid: 1, normalized-entropy: 0.6436394131461666, [(1, 102), (2, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [31, 61, 0]]
** centroid: 3, normalized-entropy: 0.9218764863469129, [(1, 31), (2, 61)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [66, 13, 0]]
** centroid: 4, normalized-entropy: 0.6451006442088483, [(1, 66), (2, 13)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 52, 28]]
** centroid: 5, normalized-entropy: 0.9340680553754911, [(2, 52), (3, 28)]
*** center 6: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 83, 0]]
** centroid: 7, normalized-entropy: 0.16082302082246946, [(1, 2), (2, 83)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19146243267451069] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19146243267451069, 0.1561928464873307] ***
*** starting iteration: 2; err: [Inf, 0.19146243267451069, 0.1561928464873307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19146243267451069, 0.1561928464873307, 0.15074925357056992] ***
*** starting iteration: 3; err: [Inf, 0.19146243267451069, 0.1561928464873307, 0.15074925357056992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19146243267451069, 0.1561928464873307, 0.15074925357056992, 0.14863134040797446] ***
*** starting iteration: 4; err: [Inf, 0.19146243267451069, 0.1561928464873307, 0.15074925357056992, 0.14863134040797446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19146243267451069, 0.1561928464873307, 0.15074925357056992, 0.14863134040797446, 0.14808069869339735] ***
*** finished computation of 7 references, err: [Inf, 0.19146243267451069, 0.1561928464873307, 0.15074925357056992, 0.14863134040797446, 0.14808069869339735] ***
*** center 1: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [80, 14, 0]]
** centroid: 2, normalized-entropy: 0.607171654871303, [(1, 80), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 96, 15]]
** centroid: 3, normalized-entropy: 0.5713549744279549, [(2, 96), (3, 15)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [66, 21, 0]]
** centroid: 4, normalized-entropy: 0.7973265101474423, [(1, 66), (2, 21)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 91, 14]]
** centroid: 5, normalized-entropy: 0.5665095065529052, [(2, 91), (3, 14)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [82, 22, 0]]
** centroid: 6, normalized-entropy: 0.7444131797881749, [(1, 82), (2, 22)]
*** center 7: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.21311712159576626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21311712159576626, 0.19202339518241943] ***
*** starting iteration: 2; err: [Inf, 0.21311712159576626, 0.19202339518241943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21311712159576626, 0.19202339518241943, 0.1896357377284897] ***
*** starting iteration: 3; err: [Inf, 0.21311712159576626, 0.19202339518241943, 0.1896357377284897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21311712159576626, 0.19202339518241943, 0.1896357377284897, 0.18856550319198598] ***
*** starting iteration: 4; err: [Inf, 0.21311712159576626, 0.19202339518241943, 0.1896357377284897, 0.18856550319198598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21311712159576626, 0.19202339518241943, 0.1896357377284897, 0.18856550319198598, 0.18728060259234844] ***
*** starting iteration: 5; err: [Inf, 0.21311712159576626, 0.19202339518241943, 0.1896357377284897, 0.18856550319198598, 0.18728060259234844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21311712159576626, 0.19202339518241943, 0.1896357377284897, 0.18856550319198598, 0.18728060259234844, 0.18610844498097495] ***
*** starting iteration: 6; err: [Inf, 0.21311712159576626, 0.19202339518241943, 0.1896357377284897, 0.18856550319198598, 0.18728060259234844, 0.18610844498097495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21311712159576626, 0.19202339518241943, 0.1896357377284897, 0.18856550319198598, 0.18728060259234844, 0.18610844498097495, 0.1854936439878176] ***
*** finished computation of 7 references, err: [Inf, 0.21311712159576626, 0.19202339518241943, 0.1896357377284897, 0.18856550319198598, 0.18728060259234844, 0.18610844498097495, 0.1854936439878176] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [15, 75, 0]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(1, 15), (2, 75)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [60, 28, 0]]
** centroid: 2, normalized-entropy: 0.9023932827949788, [(1, 60), (2, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [32, 50, 0]]
** centroid: 3, normalized-entropy: 0.9649567669505686, [(1, 32), (2, 50)]
*** center 4: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [97, 2, 0]]
** centroid: 5, normalized-entropy: 0.14257333025989857, [(1, 97), (2, 2)]
*** center 6: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 90, 25]]
** centroid: 7, normalized-entropy: 0.7553754125614286, [(2, 90), (3, 25)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33419318507373824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33419318507373824, 0.2152909286895479] ***
*** starting iteration: 2; err: [Inf, 0.33419318507373824, 0.2152909286895479] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33419318507373824, 0.2152909286895479, 0.19313093272737344] ***
*** starting iteration: 3; err: [Inf, 0.33419318507373824, 0.2152909286895479, 0.19313093272737344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33419318507373824, 0.2152909286895479, 0.19313093272737344, 0.1872475328101222] ***
*** starting iteration: 4; err: [Inf, 0.33419318507373824, 0.2152909286895479, 0.19313093272737344, 0.1872475328101222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33419318507373824, 0.2152909286895479, 0.19313093272737344, 0.1872475328101222, 0.18646366191494546] ***
*** finished computation of 7 references, err: [Inf, 0.33419318507373824, 0.2152909286895479, 0.19313093272737344, 0.1872475328101222, 0.18646366191494546] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 91, 28]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(2, 91), (3, 28)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [78, 23, 0]]
** centroid: 2, normalized-entropy: 0.7740204128451942, [(1, 78), (2, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [63, 50, 0]]
** centroid: 3, normalized-entropy: 0.9904316644573915, [(1, 63), (2, 50)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [27, 64, 0]]
** centroid: 4, normalized-entropy: 0.8772236230732716, [(1, 27), (2, 64)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [86, 1, 0]]
** centroid: 5, normalized-entropy: 0.09054385326964301, [(1, 86), (2, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.228424155069557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.228424155069557, 0.2018420371929298] ***
*** starting iteration: 2; err: [Inf, 0.228424155069557, 0.2018420371929298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.228424155069557, 0.2018420371929298, 0.19672206600477313] ***
*** starting iteration: 3; err: [Inf, 0.228424155069557, 0.2018420371929298, 0.19672206600477313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.228424155069557, 0.2018420371929298, 0.19672206600477313, 0.1943245205506012] ***
*** starting iteration: 4; err: [Inf, 0.228424155069557, 0.2018420371929298, 0.19672206600477313, 0.1943245205506012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.228424155069557, 0.2018420371929298, 0.19672206600477313, 0.1943245205506012, 0.19277129108623797] ***
*** starting iteration: 5; err: [Inf, 0.228424155069557, 0.2018420371929298, 0.19672206600477313, 0.1943245205506012, 0.19277129108623797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.228424155069557, 0.2018420371929298, 0.19672206600477313, 0.1943245205506012, 0.19277129108623797, 0.1920372300684966] ***
*** finished computation of 7 references, err: [Inf, 0.228424155069557, 0.2018420371929298, 0.19672206600477313, 0.1943245205506012, 0.19277129108623797, 0.1920372300684966] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 90, 6]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 90), (3, 6)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [102, 25, 0]]
** centroid: 2, normalized-entropy: 0.7155839810598772, [(1, 102), (2, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 55, 23]]
** centroid: 3, normalized-entropy: 0.8749315876677922, [(2, 55), (3, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [55, 26, 0]]
** centroid: 5, normalized-entropy: 0.9054522631867892, [(1, 55), (2, 26)]
*** center 6: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [68, 48, 0]]
** centroid: 7, normalized-entropy: 0.9784493292686188, [(1, 68), (2, 48)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 15)
[0.9290098481715248, 0.9199828571086055, 0.9170068271864679, 0.9089988191784598, 0.9089658520796245, 0.897001792211373, 0.896998795202388, 0.8959798121474768, 0.8959768151384918, 0.8919788051524579, 0.8709967452482422, 0.8620207033380686, 0.8610047172921425, 0.855055654456852, 0.8089916263568958]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9290098481715248
finished with 16
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.30993481621974045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30993481621974045, 0.24628899571298435] ***
*** finished computation of 3 references, err: [Inf, 0.30993481621974045, 0.24628899571298435] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [12, 133, 25]]
** centroid: 1, normalized-entropy: 0.6017137736881363, [(1, 12), (2, 133), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [105, 107, 0]]
** centroid: 2, normalized-entropy: 0.9999357993751539, [(1, 105), (2, 107)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [279, 5, 0]]
** centroid: 3, normalized-entropy: 0.1277770967061605, [(1, 279), (2, 5)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3394317367404554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3394317367404554, 0.24918808356329597] ***
*** finished computation of 3 references, err: [Inf, 0.3394317367404554, 0.24918808356329597] ***
*** center 1: selecting labels [1] (freq >= 1) [from [145, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [151, 139, 27]]
** centroid: 2, normalized-entropy: 0.8415639306749254, [(1, 151), (2, 139), (3, 27)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [114, 90, 1]]
** centroid: 3, normalized-entropy: 0.6496335279706749, [(1, 114), (2, 90), (3, 1)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3179951810837909] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3179951810837909, 0.2409383861021302] ***
*** finished computation of 3 references, err: [Inf, 0.3179951810837909, 0.2409383861021302] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [193, 5, 0]]
** centroid: 1, normalized-entropy: 0.1699937480231636, [(1, 193), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [201, 42, 0]]
** centroid: 2, normalized-entropy: 0.6641593279528072, [(1, 201), (2, 42)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 197, 29]]
** centroid: 3, normalized-entropy: 0.552808797408083, [(2, 197), (3, 29)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 16)
[0.9290098481715248, 0.9199828571086055, 0.9170068271864679, 0.9089988191784598, 0.9089658520796245, 0.8979638320955686, 0.897001792211373, 0.896998795202388, 0.8959798121474768, 0.8959768151384918, 0.8919788051524579, 0.8709967452482422, 0.8620207033380686, 0.8610047172921425, 0.855055654456852, 0.8089916263568958]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9290098481715248
finished with 16
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9290098481715248, 0.9199828571086055, 0.9170068271864679, 0.9089988191784598, 0.9089658520796245, 0.8979638320955686, 0.897001792211373, 0.896998795202388, 0.8959798121474768, 0.8959768151384918, 0.8919788051524579, 0.8709967452482422, 0.8620207033380686, 0.8610047172921425, 0.855055654456852, 0.8089916263568958]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9290098481715248
finished with 16
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9290098481715248, 0.9199828571086055, 0.9170068271864679, 0.9089988191784598, 0.9089658520796245, 0.8979638320955686, 0.897001792211373, 0.896998795202388, 0.8959798121474768, 0.8959768151384918, 0.8919788051524579, 0.8709967452482422, 0.8620207033380686, 0.8610047172921425, 0.855055654456852, 0.8089916263568958]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9290098481715248
finished with 16
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9290098481715248, 0.9199828571086055, 0.9170068271864679, 0.9089988191784598, 0.9089658520796245, 0.8979638320955686, 0.897001792211373, 0.896998795202388, 0.8959798121474768, 0.8959768151384918, 0.8919788051524579, 0.8709967452482422, 0.8620207033380686, 0.8610047172921425, 0.855055654456852, 0.8089916263568958]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9290098481715248
finished with 16
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.2768532708338462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2768532708338462, 0.2147374630882405] ***
*** starting iteration: 2; err: [Inf, 0.2768532708338462, 0.2147374630882405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2768532708338462, 0.2147374630882405, 0.20150739498855547] ***
*** starting iteration: 3; err: [Inf, 0.2768532708338462, 0.2147374630882405, 0.20150739498855547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2768532708338462, 0.2147374630882405, 0.20150739498855547, 0.19455979775032028] ***
*** starting iteration: 4; err: [Inf, 0.2768532708338462, 0.2147374630882405, 0.20150739498855547, 0.19455979775032028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2768532708338462, 0.2147374630882405, 0.20150739498855547, 0.19455979775032028, 0.19093518504314125] ***
*** starting iteration: 5; err: [Inf, 0.2768532708338462, 0.2147374630882405, 0.20150739498855547, 0.19455979775032028, 0.19093518504314125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2768532708338462, 0.2147374630882405, 0.20150739498855547, 0.19455979775032028, 0.19093518504314125, 0.1890518686324358] ***
*** starting iteration: 6; err: [Inf, 0.2768532708338462, 0.2147374630882405, 0.20150739498855547, 0.19455979775032028, 0.19093518504314125, 0.1890518686324358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2768532708338462, 0.2147374630882405, 0.20150739498855547, 0.19455979775032028, 0.19093518504314125, 0.1890518686324358, 0.18763941576890647] ***
*** starting iteration: 7; err: [Inf, 0.2768532708338462, 0.2147374630882405, 0.20150739498855547, 0.19455979775032028, 0.19093518504314125, 0.1890518686324358, 0.18763941576890647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2768532708338462, 0.2147374630882405, 0.20150739498855547, 0.19455979775032028, 0.19093518504314125, 0.1890518686324358, 0.18763941576890647, 0.18693462850805373] ***
*** finished computation of 7 references, err: [Inf, 0.2768532708338462, 0.2147374630882405, 0.20150739498855547, 0.19455979775032028, 0.19093518504314125, 0.1890518686324358, 0.18763941576890647, 0.18693462850805373] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [121, 49, 0]]
** centroid: 1, normalized-entropy: 0.8664307357149303, [(1, 121), (2, 49)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [82, 90, 0]]
** centroid: 2, normalized-entropy: 0.9984389230256238, [(1, 82), (2, 90)]
*** center 3: selecting labels [1] (freq >= 1) [from [129, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [116, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 140, 41]]
** centroid: 5, normalized-entropy: 0.7718942044222292, [(2, 140), (3, 41)]
*** center 6: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [57, 80, 0]]
** centroid: 7, normalized-entropy: 0.9795723866219918, [(1, 57), (2, 80)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2548363091573119] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2548363091573119, 0.19686417195014655] ***
*** starting iteration: 2; err: [Inf, 0.2548363091573119, 0.19686417195014655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2548363091573119, 0.19686417195014655, 0.19243871888890862] ***
*** starting iteration: 3; err: [Inf, 0.2548363091573119, 0.19686417195014655, 0.19243871888890862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2548363091573119, 0.19686417195014655, 0.19243871888890862, 0.1898110296148807] ***
*** starting iteration: 4; err: [Inf, 0.2548363091573119, 0.19686417195014655, 0.19243871888890862, 0.1898110296148807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2548363091573119, 0.19686417195014655, 0.19243871888890862, 0.1898110296148807, 0.1875793125424534] ***
*** starting iteration: 5; err: [Inf, 0.2548363091573119, 0.19686417195014655, 0.19243871888890862, 0.1898110296148807, 0.1875793125424534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2548363091573119, 0.19686417195014655, 0.19243871888890862, 0.1898110296148807, 0.1875793125424534, 0.18638800854142756] ***
*** starting iteration: 6; err: [Inf, 0.2548363091573119, 0.19686417195014655, 0.19243871888890862, 0.1898110296148807, 0.1875793125424534, 0.18638800854142756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2548363091573119, 0.19686417195014655, 0.19243871888890862, 0.1898110296148807, 0.1875793125424534, 0.18638800854142756, 0.18570683502638713] ***
*** finished computation of 7 references, err: [Inf, 0.2548363091573119, 0.19686417195014655, 0.19243871888890862, 0.1898110296148807, 0.1875793125424534, 0.18638800854142756, 0.18570683502638713] ***
*** center 1: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [59, 3, 0]]
** centroid: 2, normalized-entropy: 0.2795055456366802, [(1, 59), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [2, 59, 0]]
** centroid: 3, normalized-entropy: 0.20818094555717087, [(1, 2), (2, 59)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 84, 26]]
** centroid: 4, normalized-entropy: 0.7889406572966208, [(2, 84), (3, 26)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [56, 25, 0]]
** centroid: 5, normalized-entropy: 0.8915996278279094, [(1, 56), (2, 25)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [47, 19, 0]]
** centroid: 6, normalized-entropy: 0.8659653498997099, [(1, 47), (2, 19)]
*** center 7: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3217204553661868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3217204553661868, 0.22122601714730264] ***
*** starting iteration: 2; err: [Inf, 0.3217204553661868, 0.22122601714730264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3217204553661868, 0.22122601714730264, 0.2009490284100175] ***
*** starting iteration: 3; err: [Inf, 0.3217204553661868, 0.22122601714730264, 0.2009490284100175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3217204553661868, 0.22122601714730264, 0.2009490284100175, 0.19231615463085472] ***
*** starting iteration: 4; err: [Inf, 0.3217204553661868, 0.22122601714730264, 0.2009490284100175, 0.19231615463085472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3217204553661868, 0.22122601714730264, 0.2009490284100175, 0.19231615463085472, 0.19057144359312952] ***
*** starting iteration: 5; err: [Inf, 0.3217204553661868, 0.22122601714730264, 0.2009490284100175, 0.19231615463085472, 0.19057144359312952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3217204553661868, 0.22122601714730264, 0.2009490284100175, 0.19231615463085472, 0.19057144359312952, 0.18990000716317446] ***
*** finished computation of 7 references, err: [Inf, 0.3217204553661868, 0.22122601714730264, 0.2009490284100175, 0.19231615463085472, 0.19057144359312952, 0.18990000716317446] ***
*** center 1: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 16]]
** centroid: 2, normalized-entropy: 0.9321115676166747, [(2, 30), (3, 16)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 70, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [25, 51, 0]]
** centroid: 5, normalized-entropy: 0.9138472873262908, [(1, 25), (2, 51)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [74, 4, 0]]
** centroid: 6, normalized-entropy: 0.29181825659888555, [(1, 74), (2, 4)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [48, 29, 0]]
** centroid: 7, normalized-entropy: 0.9556222693531471, [(1, 48), (2, 29)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2266038509150967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2266038509150967, 0.19897665318101646] ***
*** starting iteration: 2; err: [Inf, 0.2266038509150967, 0.19897665318101646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2266038509150967, 0.19897665318101646, 0.19026436736248434] ***
*** starting iteration: 3; err: [Inf, 0.2266038509150967, 0.19897665318101646, 0.19026436736248434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2266038509150967, 0.19897665318101646, 0.19026436736248434, 0.18830807483009995] ***
*** starting iteration: 4; err: [Inf, 0.2266038509150967, 0.19897665318101646, 0.19026436736248434, 0.18830807483009995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2266038509150967, 0.19897665318101646, 0.19026436736248434, 0.18830807483009995, 0.18690254664979875] ***
*** starting iteration: 5; err: [Inf, 0.2266038509150967, 0.19897665318101646, 0.19026436736248434, 0.18830807483009995, 0.18690254664979875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2266038509150967, 0.19897665318101646, 0.19026436736248434, 0.18830807483009995, 0.18690254664979875, 0.185603365406394] ***
*** starting iteration: 6; err: [Inf, 0.2266038509150967, 0.19897665318101646, 0.19026436736248434, 0.18830807483009995, 0.18690254664979875, 0.185603365406394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2266038509150967, 0.19897665318101646, 0.19026436736248434, 0.18830807483009995, 0.18690254664979875, 0.185603365406394, 0.185079852970317] ***
*** finished computation of 7 references, err: [Inf, 0.2266038509150967, 0.19897665318101646, 0.19026436736248434, 0.18830807483009995, 0.18690254664979875, 0.185603365406394, 0.185079852970317] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 66, 17]]
** centroid: 1, normalized-entropy: 0.7314625617214586, [(2, 66), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [40, 37, 0]]
** centroid: 2, normalized-entropy: 0.9989047442823606, [(1, 40), (2, 37)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [51, 4, 0]]
** centroid: 3, normalized-entropy: 0.37601985096927276, [(1, 51), (2, 4)]
*** center 4: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [25, 39, 0]]
** centroid: 5, normalized-entropy: 0.9652016987500656, [(1, 25), (2, 39)]
*** center 6: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [29, 46, 0]]
** centroid: 7, normalized-entropy: 0.9626147059982517, [(1, 29), (2, 46)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23318446166068316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23318446166068316, 0.1922674505915493] ***
*** starting iteration: 2; err: [Inf, 0.23318446166068316, 0.1922674505915493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23318446166068316, 0.1922674505915493, 0.18867604539636523] ***
*** starting iteration: 3; err: [Inf, 0.23318446166068316, 0.1922674505915493, 0.18867604539636523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23318446166068316, 0.1922674505915493, 0.18867604539636523, 0.1885964777506888] ***
*** finished computation of 7 references, err: [Inf, 0.23318446166068316, 0.1922674505915493, 0.18867604539636523, 0.1885964777506888] ***
*** center 1: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 74, 20]]
** centroid: 2, normalized-entropy: 0.7467366074830678, [(2, 74), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [21, 38, 0]]
** centroid: 3, normalized-entropy: 0.9392547207311595, [(1, 21), (2, 38)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [57, 12, 0]]
** centroid: 4, normalized-entropy: 0.6665783579949205, [(1, 57), (2, 12)]
*** center 5: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [27, 57, 0]]
** centroid: 7, normalized-entropy: 0.9059282160429994, [(1, 27), (2, 57)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2862114135362208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2862114135362208, 0.21827403954416513] ***
*** starting iteration: 2; err: [Inf, 0.2862114135362208, 0.21827403954416513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2862114135362208, 0.21827403954416513, 0.19762663302198052] ***
*** starting iteration: 3; err: [Inf, 0.2862114135362208, 0.21827403954416513, 0.19762663302198052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2862114135362208, 0.21827403954416513, 0.19762663302198052, 0.189549051056616] ***
*** starting iteration: 4; err: [Inf, 0.2862114135362208, 0.21827403954416513, 0.19762663302198052, 0.189549051056616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2862114135362208, 0.21827403954416513, 0.19762663302198052, 0.189549051056616, 0.1874452156238258] ***
*** starting iteration: 5; err: [Inf, 0.2862114135362208, 0.21827403954416513, 0.19762663302198052, 0.189549051056616, 0.1874452156238258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2862114135362208, 0.21827403954416513, 0.19762663302198052, 0.189549051056616, 0.1874452156238258, 0.18644589812308549] ***
*** finished computation of 7 references, err: [Inf, 0.2862114135362208, 0.21827403954416513, 0.19762663302198052, 0.189549051056616, 0.1874452156238258, 0.18644589812308549] ***
*** center 1: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [43, 32, 0]]
** centroid: 2, normalized-entropy: 0.9844268978000115, [(1, 43), (2, 32)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [13, 45, 0]]
** centroid: 3, normalized-entropy: 0.7676515870125797, [(1, 13), (2, 45)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 67, 23]]
** centroid: 4, normalized-entropy: 0.8199653102187632, [(2, 67), (3, 23)]
*** center 5: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [47, 29, 0]]
** centroid: 7, normalized-entropy: 0.9591495543968941, [(1, 47), (2, 29)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2278227307200432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2278227307200432, 0.18986371299624444] ***
*** starting iteration: 2; err: [Inf, 0.2278227307200432, 0.18986371299624444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2278227307200432, 0.18986371299624444, 0.18462413241527975] ***
*** starting iteration: 3; err: [Inf, 0.2278227307200432, 0.18986371299624444, 0.18462413241527975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2278227307200432, 0.18986371299624444, 0.18462413241527975, 0.1837077322229743] ***
*** finished computation of 7 references, err: [Inf, 0.2278227307200432, 0.18986371299624444, 0.18462413241527975, 0.1837077322229743] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [44, 37, 0]]
** centroid: 1, normalized-entropy: 0.994605981300523, [(1, 44), (2, 37)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [60, 4, 0]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(1, 60), (2, 4)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [4, 51, 0]]
** centroid: 3, normalized-entropy: 0.37601985096927276, [(1, 4), (2, 51)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 69, 23]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 69), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [60, 12, 0]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(1, 60), (2, 12)]
*** center 6: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24736382590793074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24736382590793074, 0.21026661514490844] ***
*** starting iteration: 2; err: [Inf, 0.24736382590793074, 0.21026661514490844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24736382590793074, 0.21026661514490844, 0.19367288596276194] ***
*** starting iteration: 3; err: [Inf, 0.24736382590793074, 0.21026661514490844, 0.19367288596276194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24736382590793074, 0.21026661514490844, 0.19367288596276194, 0.1876534326635301] ***
*** starting iteration: 4; err: [Inf, 0.24736382590793074, 0.21026661514490844, 0.19367288596276194, 0.1876534326635301] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24736382590793074, 0.21026661514490844, 0.19367288596276194, 0.1876534326635301, 0.1848893114849925] ***
*** starting iteration: 5; err: [Inf, 0.24736382590793074, 0.21026661514490844, 0.19367288596276194, 0.1876534326635301, 0.1848893114849925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24736382590793074, 0.21026661514490844, 0.19367288596276194, 0.1876534326635301, 0.1848893114849925, 0.18353639226406812] ***
*** starting iteration: 6; err: [Inf, 0.24736382590793074, 0.21026661514490844, 0.19367288596276194, 0.1876534326635301, 0.1848893114849925, 0.18353639226406812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24736382590793074, 0.21026661514490844, 0.19367288596276194, 0.1876534326635301, 0.1848893114849925, 0.18353639226406812, 0.18159205660782754] ***
*** starting iteration: 7; err: [Inf, 0.24736382590793074, 0.21026661514490844, 0.19367288596276194, 0.1876534326635301, 0.1848893114849925, 0.18353639226406812, 0.18159205660782754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24736382590793074, 0.21026661514490844, 0.19367288596276194, 0.1876534326635301, 0.1848893114849925, 0.18353639226406812, 0.18159205660782754, 0.18145818457752466] ***
*** finished computation of 7 references, err: [Inf, 0.24736382590793074, 0.21026661514490844, 0.19367288596276194, 0.1876534326635301, 0.1848893114849925, 0.18353639226406812, 0.18159205660782754, 0.18145818457752466] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 49, 18]]
** centroid: 1, normalized-entropy: 0.8395304981054318, [(2, 49), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [26, 52, 0]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(1, 26), (2, 52)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [59, 7, 0]]
** centroid: 4, normalized-entropy: 0.48791799258948565, [(1, 59), (2, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [7, 65, 0]]
** centroid: 6, normalized-entropy: 0.460127886147135, [(1, 7), (2, 65)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [56, 5, 0]]
** centroid: 7, normalized-entropy: 0.4090731390438265, [(1, 56), (2, 5)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29757148672267797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29757148672267797, 0.20441979161649942] ***
*** starting iteration: 2; err: [Inf, 0.29757148672267797, 0.20441979161649942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29757148672267797, 0.20441979161649942, 0.18908456543646754] ***
*** starting iteration: 3; err: [Inf, 0.29757148672267797, 0.20441979161649942, 0.18908456543646754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29757148672267797, 0.20441979161649942, 0.18908456543646754, 0.1836776071731001] ***
*** starting iteration: 4; err: [Inf, 0.29757148672267797, 0.20441979161649942, 0.18908456543646754, 0.1836776071731001] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29757148672267797, 0.20441979161649942, 0.18908456543646754, 0.1836776071731001, 0.18174678105674685] ***
*** starting iteration: 5; err: [Inf, 0.29757148672267797, 0.20441979161649942, 0.18908456543646754, 0.1836776071731001, 0.18174678105674685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29757148672267797, 0.20441979161649942, 0.18908456543646754, 0.1836776071731001, 0.18174678105674685, 0.17995147614460438] ***
*** starting iteration: 6; err: [Inf, 0.29757148672267797, 0.20441979161649942, 0.18908456543646754, 0.1836776071731001, 0.18174678105674685, 0.17995147614460438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29757148672267797, 0.20441979161649942, 0.18908456543646754, 0.1836776071731001, 0.18174678105674685, 0.17995147614460438, 0.1791683036433533] ***
*** finished computation of 7 references, err: [Inf, 0.29757148672267797, 0.20441979161649942, 0.18908456543646754, 0.1836776071731001, 0.18174678105674685, 0.17995147614460438, 0.1791683036433533] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [62, 4, 0]]
** centroid: 1, normalized-entropy: 0.32984607020714635, [(1, 62), (2, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [44, 21, 0]]
** centroid: 4, normalized-entropy: 0.9076961653608385, [(1, 44), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [3, 67, 0]]
** centroid: 5, normalized-entropy: 0.25524211319019174, [(1, 3), (2, 67)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 54, 22]]
** centroid: 6, normalized-entropy: 0.8680403986166402, [(2, 54), (3, 22)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [20, 51, 0]]
** centroid: 7, normalized-entropy: 0.8577435372751958, [(1, 20), (2, 51)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.253190824162215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.253190824162215, 0.2027362309843302] ***
*** starting iteration: 2; err: [Inf, 0.253190824162215, 0.2027362309843302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.253190824162215, 0.2027362309843302, 0.20152351282536984] ***
*** starting iteration: 3; err: [Inf, 0.253190824162215, 0.2027362309843302, 0.20152351282536984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.253190824162215, 0.2027362309843302, 0.20152351282536984, 0.20037363974936306] ***
*** starting iteration: 4; err: [Inf, 0.253190824162215, 0.2027362309843302, 0.20152351282536984, 0.20037363974936306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.253190824162215, 0.2027362309843302, 0.20152351282536984, 0.20037363974936306, 0.19931510351412] ***
*** starting iteration: 5; err: [Inf, 0.253190824162215, 0.2027362309843302, 0.20152351282536984, 0.20037363974936306, 0.19931510351412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.253190824162215, 0.2027362309843302, 0.20152351282536984, 0.20037363974936306, 0.19931510351412, 0.19875245589762927] ***
*** finished computation of 7 references, err: [Inf, 0.253190824162215, 0.2027362309843302, 0.20152351282536984, 0.20037363974936306, 0.19931510351412, 0.19875245589762927] ***
*** center 1: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 47, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 30, 23]]
** centroid: 4, normalized-entropy: 0.987380023288353, [(2, 30), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [23, 55, 0]]
** centroid: 5, normalized-entropy: 0.8749315876677922, [(1, 23), (2, 55)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [76, 13, 0]]
** centroid: 6, normalized-entropy: 0.5999108763872215, [(1, 76), (2, 13)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [29, 36, 0]]
** centroid: 7, normalized-entropy: 0.9916178297881032, [(1, 29), (2, 36)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29324924123007806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29324924123007806, 0.23200769321992992] ***
*** starting iteration: 2; err: [Inf, 0.29324924123007806, 0.23200769321992992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942] ***
*** starting iteration: 3; err: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942, 0.20044117425661534] ***
*** starting iteration: 4; err: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942, 0.20044117425661534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942, 0.20044117425661534, 0.1924132381044328] ***
*** starting iteration: 5; err: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942, 0.20044117425661534, 0.1924132381044328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942, 0.20044117425661534, 0.1924132381044328, 0.1891192656988278] ***
*** starting iteration: 6; err: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942, 0.20044117425661534, 0.1924132381044328, 0.1891192656988278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942, 0.20044117425661534, 0.1924132381044328, 0.1891192656988278, 0.18668645042553544] ***
*** starting iteration: 7; err: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942, 0.20044117425661534, 0.1924132381044328, 0.1891192656988278, 0.18668645042553544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942, 0.20044117425661534, 0.1924132381044328, 0.1891192656988278, 0.18668645042553544, 0.1842132770754397] ***
*** starting iteration: 8; err: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942, 0.20044117425661534, 0.1924132381044328, 0.1891192656988278, 0.18668645042553544, 0.1842132770754397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942, 0.20044117425661534, 0.1924132381044328, 0.1891192656988278, 0.18668645042553544, 0.1842132770754397, 0.18247119729034603] ***
*** starting iteration: 9; err: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942, 0.20044117425661534, 0.1924132381044328, 0.1891192656988278, 0.18668645042553544, 0.1842132770754397, 0.18247119729034603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942, 0.20044117425661534, 0.1924132381044328, 0.1891192656988278, 0.18668645042553544, 0.1842132770754397, 0.18247119729034603, 0.18173102433234453] ***
*** finished computation of 7 references, err: [Inf, 0.29324924123007806, 0.23200769321992992, 0.21868925373069942, 0.20044117425661534, 0.1924132381044328, 0.1891192656988278, 0.18668645042553544, 0.1842132770754397, 0.18247119729034603, 0.18173102433234453] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [79, 8, 0]]
** centroid: 1, normalized-entropy: 0.4429586785384856, [(1, 79), (2, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [87, 4, 0]]
** centroid: 3, normalized-entropy: 0.26014536394771426, [(1, 87), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [1, 57, 0]]
** centroid: 4, normalized-entropy: 0.12565805017256745, [(1, 1), (2, 57)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [58, 5, 0]]
** centroid: 5, normalized-entropy: 0.39993804743902767, [(1, 58), (2, 5)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 38, 20]]
** centroid: 6, normalized-entropy: 0.9293636260137188, [(2, 38), (3, 20)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 71, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2533843743270263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2533843743270263, 0.2186610314231366] ***
*** starting iteration: 2; err: [Inf, 0.2533843743270263, 0.2186610314231366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184] ***
*** starting iteration: 3; err: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245] ***
*** starting iteration: 4; err: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245, 0.1975325852520764] ***
*** starting iteration: 5; err: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245, 0.1975325852520764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245, 0.1975325852520764, 0.19467740128189326] ***
*** starting iteration: 6; err: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245, 0.1975325852520764, 0.19467740128189326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245, 0.1975325852520764, 0.19467740128189326, 0.19270557501539587] ***
*** starting iteration: 7; err: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245, 0.1975325852520764, 0.19467740128189326, 0.19270557501539587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245, 0.1975325852520764, 0.19467740128189326, 0.19270557501539587, 0.19075329508446157] ***
*** starting iteration: 8; err: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245, 0.1975325852520764, 0.19467740128189326, 0.19270557501539587, 0.19075329508446157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245, 0.1975325852520764, 0.19467740128189326, 0.19270557501539587, 0.19075329508446157, 0.18873420137725772] ***
*** starting iteration: 9; err: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245, 0.1975325852520764, 0.19467740128189326, 0.19270557501539587, 0.19075329508446157, 0.18873420137725772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245, 0.1975325852520764, 0.19467740128189326, 0.19270557501539587, 0.19075329508446157, 0.18873420137725772, 0.1869772365130484] ***
*** starting iteration: 10; err: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245, 0.1975325852520764, 0.19467740128189326, 0.19270557501539587, 0.19075329508446157, 0.18873420137725772, 0.1869772365130484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245, 0.1975325852520764, 0.19467740128189326, 0.19270557501539587, 0.19075329508446157, 0.18873420137725772, 0.1869772365130484, 0.18584552945569158] ***
*** finished computation of 7 references, err: [Inf, 0.2533843743270263, 0.2186610314231366, 0.20495002023503184, 0.20089329997543245, 0.1975325852520764, 0.19467740128189326, 0.19270557501539587, 0.19075329508446157, 0.18873420137725772, 0.1869772365130484, 0.18584552945569158] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [37, 20, 0]]
** centroid: 1, normalized-entropy: 0.9348490242345946, [(1, 37), (2, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 10, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 50), (2, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [2, 65, 0]]
** centroid: 4, normalized-entropy: 0.19364280468389852, [(1, 2), (2, 65)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [62, 26, 0]]
** centroid: 5, normalized-entropy: 0.8756633923230399, [(1, 62), (2, 26)]
*** center 6: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 48, 25]]
** centroid: 7, normalized-entropy: 0.9271587399898307, [(2, 48), (3, 25)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22786197413038461] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22786197413038461, 0.1976397560229525] ***
*** starting iteration: 2; err: [Inf, 0.22786197413038461, 0.1976397560229525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22786197413038461, 0.1976397560229525, 0.19266700249910354] ***
*** starting iteration: 3; err: [Inf, 0.22786197413038461, 0.1976397560229525, 0.19266700249910354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22786197413038461, 0.1976397560229525, 0.19266700249910354, 0.19234612219966948] ***
*** finished computation of 7 references, err: [Inf, 0.22786197413038461, 0.1976397560229525, 0.19266700249910354, 0.19234612219966948] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [20, 35, 0]]
** centroid: 1, normalized-entropy: 0.9456603046006401, [(1, 20), (2, 35)]
*** center 2: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [37, 50, 0]]
** centroid: 3, normalized-entropy: 0.9838333347337009, [(1, 37), (2, 50)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [38, 41, 0]]
** centroid: 4, normalized-entropy: 0.9989595114657399, [(1, 38), (2, 41)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 60, 20]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 60), (3, 20)]
*** center 6: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28822701660729944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28822701660729944, 0.2050733134727925] ***
*** starting iteration: 2; err: [Inf, 0.28822701660729944, 0.2050733134727925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28822701660729944, 0.2050733134727925, 0.1950750777707435] ***
*** starting iteration: 3; err: [Inf, 0.28822701660729944, 0.2050733134727925, 0.1950750777707435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28822701660729944, 0.2050733134727925, 0.1950750777707435, 0.19138272691518068] ***
*** starting iteration: 4; err: [Inf, 0.28822701660729944, 0.2050733134727925, 0.1950750777707435, 0.19138272691518068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28822701660729944, 0.2050733134727925, 0.1950750777707435, 0.19138272691518068, 0.1898533504139632] ***
*** starting iteration: 5; err: [Inf, 0.28822701660729944, 0.2050733134727925, 0.1950750777707435, 0.19138272691518068, 0.1898533504139632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28822701660729944, 0.2050733134727925, 0.1950750777707435, 0.19138272691518068, 0.1898533504139632, 0.1885565059063956] ***
*** starting iteration: 6; err: [Inf, 0.28822701660729944, 0.2050733134727925, 0.1950750777707435, 0.19138272691518068, 0.1898533504139632, 0.1885565059063956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28822701660729944, 0.2050733134727925, 0.1950750777707435, 0.19138272691518068, 0.1898533504139632, 0.1885565059063956, 0.1876951618231833] ***
*** finished computation of 7 references, err: [Inf, 0.28822701660729944, 0.2050733134727925, 0.1950750777707435, 0.19138272691518068, 0.1898533504139632, 0.1885565059063956, 0.1876951618231833] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [37, 11, 0]]
** centroid: 1, normalized-entropy: 0.7765557854444601, [(1, 37), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [24, 51, 0]]
** centroid: 2, normalized-entropy: 0.9043814577244941, [(1, 24), (2, 51)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [79, 1, 0]]
** centroid: 3, normalized-entropy: 0.09694460606247329, [(1, 79), (2, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 63, 19]]
** centroid: 6, normalized-entropy: 0.7809756883263416, [(2, 63), (3, 19)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [5, 66, 0]]
** centroid: 7, normalized-entropy: 0.3674984948272913, [(1, 5), (2, 66)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2814065958466381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2814065958466381, 0.2087124935183674] ***
*** starting iteration: 2; err: [Inf, 0.2814065958466381, 0.2087124935183674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2814065958466381, 0.2087124935183674, 0.19654397086799144] ***
*** starting iteration: 3; err: [Inf, 0.2814065958466381, 0.2087124935183674, 0.19654397086799144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2814065958466381, 0.2087124935183674, 0.19654397086799144, 0.19287458740454166] ***
*** starting iteration: 4; err: [Inf, 0.2814065958466381, 0.2087124935183674, 0.19654397086799144, 0.19287458740454166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2814065958466381, 0.2087124935183674, 0.19654397086799144, 0.19287458740454166, 0.19079673853423446] ***
*** starting iteration: 5; err: [Inf, 0.2814065958466381, 0.2087124935183674, 0.19654397086799144, 0.19287458740454166, 0.19079673853423446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2814065958466381, 0.2087124935183674, 0.19654397086799144, 0.19287458740454166, 0.19079673853423446, 0.19010603127465583] ***
*** finished computation of 7 references, err: [Inf, 0.2814065958466381, 0.2087124935183674, 0.19654397086799144, 0.19287458740454166, 0.19079673853423446, 0.19010603127465583] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [16, 45, 0]]
** centroid: 1, normalized-entropy: 0.8301899714180444, [(1, 16), (2, 45)]
*** center 2: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [52, 13, 0]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(1, 52), (2, 13)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 61, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [52, 22, 0]]
** centroid: 5, normalized-entropy: 0.8779620013943914, [(1, 52), (2, 22)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 48, 15]]
** centroid: 6, normalized-entropy: 0.7918583525674836, [(2, 48), (3, 15)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [72, 6, 0]]
** centroid: 7, normalized-entropy: 0.3912435636292556, [(1, 72), (2, 6)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3385533897187561] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3385533897187561, 0.2159340511225164] ***
*** starting iteration: 2; err: [Inf, 0.3385533897187561, 0.2159340511225164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3385533897187561, 0.2159340511225164, 0.19355109603516757] ***
*** starting iteration: 3; err: [Inf, 0.3385533897187561, 0.2159340511225164, 0.19355109603516757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3385533897187561, 0.2159340511225164, 0.19355109603516757, 0.19021785354055465] ***
*** starting iteration: 4; err: [Inf, 0.3385533897187561, 0.2159340511225164, 0.19355109603516757, 0.19021785354055465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3385533897187561, 0.2159340511225164, 0.19355109603516757, 0.19021785354055465, 0.18865923941973597] ***
*** starting iteration: 5; err: [Inf, 0.3385533897187561, 0.2159340511225164, 0.19355109603516757, 0.19021785354055465, 0.18865923941973597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3385533897187561, 0.2159340511225164, 0.19355109603516757, 0.19021785354055465, 0.18865923941973597, 0.18746398096717895] ***
*** starting iteration: 6; err: [Inf, 0.3385533897187561, 0.2159340511225164, 0.19355109603516757, 0.19021785354055465, 0.18865923941973597, 0.18746398096717895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3385533897187561, 0.2159340511225164, 0.19355109603516757, 0.19021785354055465, 0.18865923941973597, 0.18746398096717895, 0.18620806108787655] ***
*** starting iteration: 7; err: [Inf, 0.3385533897187561, 0.2159340511225164, 0.19355109603516757, 0.19021785354055465, 0.18865923941973597, 0.18746398096717895, 0.18620806108787655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3385533897187561, 0.2159340511225164, 0.19355109603516757, 0.19021785354055465, 0.18865923941973597, 0.18746398096717895, 0.18620806108787655, 0.18552337567694485] ***
*** finished computation of 7 references, err: [Inf, 0.3385533897187561, 0.2159340511225164, 0.19355109603516757, 0.19021785354055465, 0.18865923941973597, 0.18746398096717895, 0.18620806108787655, 0.18552337567694485] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [85, 1, 0]]
** centroid: 1, normalized-entropy: 0.09140162014739266, [(1, 85), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [26, 45, 0]]
** centroid: 2, normalized-entropy: 0.9477073729342067, [(1, 26), (2, 45)]
*** center 3: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [42, 38, 0]]
** centroid: 4, normalized-entropy: 0.99819587904281, [(1, 42), (2, 38)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [2, 42, 0]]
** centroid: 5, normalized-entropy: 0.2667649878030262, [(1, 2), (2, 42)]
*** center 6: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 52, 23]]
** centroid: 7, normalized-entropy: 0.8892881527272397, [(2, 52), (3, 23)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2508150708135217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2508150708135217, 0.19367177131585778] ***
*** starting iteration: 2; err: [Inf, 0.2508150708135217, 0.19367177131585778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2508150708135217, 0.19367177131585778, 0.1850545235509053] ***
*** starting iteration: 3; err: [Inf, 0.2508150708135217, 0.19367177131585778, 0.1850545235509053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2508150708135217, 0.19367177131585778, 0.1850545235509053, 0.18397155851032584] ***
*** starting iteration: 4; err: [Inf, 0.2508150708135217, 0.19367177131585778, 0.1850545235509053, 0.18397155851032584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2508150708135217, 0.19367177131585778, 0.1850545235509053, 0.18397155851032584, 0.18439650506339966] ***
*** finished computation of 7 references, err: [Inf, 0.2508150708135217, 0.19367177131585778, 0.1850545235509053, 0.18397155851032584, 0.18439650506339966] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [54, 28, 0]]
** centroid: 1, normalized-entropy: 0.9262122127346664, [(1, 54), (2, 28)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 15]]
** centroid: 2, normalized-entropy: 0.9108783787500366, [(2, 31), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [62, 30, 0]]
** centroid: 3, normalized-entropy: 0.9108783787500366, [(1, 62), (2, 30)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [57, 17, 0]]
** centroid: 4, normalized-entropy: 0.77753986416076, [(1, 57), (2, 17)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 68, 3]]
** centroid: 5, normalized-entropy: 0.25253077151613923, [(2, 68), (3, 3)]
*** center 6: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22883997269114478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22883997269114478, 0.19486401045601814] ***
*** starting iteration: 2; err: [Inf, 0.22883997269114478, 0.19486401045601814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22883997269114478, 0.19486401045601814, 0.18802245518937707] ***
*** starting iteration: 3; err: [Inf, 0.22883997269114478, 0.19486401045601814, 0.18802245518937707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22883997269114478, 0.19486401045601814, 0.18802245518937707, 0.1866897853128612] ***
*** starting iteration: 4; err: [Inf, 0.22883997269114478, 0.19486401045601814, 0.18802245518937707, 0.1866897853128612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22883997269114478, 0.19486401045601814, 0.18802245518937707, 0.1866897853128612, 0.18598518061265348] ***
*** finished computation of 7 references, err: [Inf, 0.22883997269114478, 0.19486401045601814, 0.18802245518937707, 0.1866897853128612, 0.18598518061265348] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [47, 15, 0]]
** centroid: 1, normalized-entropy: 0.7982441335646697, [(1, 47), (2, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [5, 70, 0]]
** centroid: 5, normalized-entropy: 0.3533593350214213, [(1, 5), (2, 70)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 51, 23]]
** centroid: 6, normalized-entropy: 0.8941071841443881, [(2, 51), (3, 23)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [69, 43, 0]]
** centroid: 7, normalized-entropy: 0.960769458040784, [(1, 69), (2, 43)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2733696817792952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2733696817792952, 0.2116022217385471] ***
*** starting iteration: 2; err: [Inf, 0.2733696817792952, 0.2116022217385471] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2733696817792952, 0.2116022217385471, 0.2019659741818905] ***
*** starting iteration: 3; err: [Inf, 0.2733696817792952, 0.2116022217385471, 0.2019659741818905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2733696817792952, 0.2116022217385471, 0.2019659741818905, 0.19520796623826026] ***
*** starting iteration: 4; err: [Inf, 0.2733696817792952, 0.2116022217385471, 0.2019659741818905, 0.19520796623826026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2733696817792952, 0.2116022217385471, 0.2019659741818905, 0.19520796623826026, 0.19087350959703325] ***
*** starting iteration: 5; err: [Inf, 0.2733696817792952, 0.2116022217385471, 0.2019659741818905, 0.19520796623826026, 0.19087350959703325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2733696817792952, 0.2116022217385471, 0.2019659741818905, 0.19520796623826026, 0.19087350959703325, 0.18453671922534703] ***
*** starting iteration: 6; err: [Inf, 0.2733696817792952, 0.2116022217385471, 0.2019659741818905, 0.19520796623826026, 0.19087350959703325, 0.18453671922534703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2733696817792952, 0.2116022217385471, 0.2019659741818905, 0.19520796623826026, 0.19087350959703325, 0.18453671922534703, 0.18142047955375165] ***
*** starting iteration: 7; err: [Inf, 0.2733696817792952, 0.2116022217385471, 0.2019659741818905, 0.19520796623826026, 0.19087350959703325, 0.18453671922534703, 0.18142047955375165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2733696817792952, 0.2116022217385471, 0.2019659741818905, 0.19520796623826026, 0.19087350959703325, 0.18453671922534703, 0.18142047955375165, 0.18036189753562212] ***
*** starting iteration: 8; err: [Inf, 0.2733696817792952, 0.2116022217385471, 0.2019659741818905, 0.19520796623826026, 0.19087350959703325, 0.18453671922534703, 0.18142047955375165, 0.18036189753562212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2733696817792952, 0.2116022217385471, 0.2019659741818905, 0.19520796623826026, 0.19087350959703325, 0.18453671922534703, 0.18142047955375165, 0.18036189753562212, 0.18010066688759252] ***
*** finished computation of 7 references, err: [Inf, 0.2733696817792952, 0.2116022217385471, 0.2019659741818905, 0.19520796623826026, 0.19087350959703325, 0.18453671922534703, 0.18142047955375165, 0.18036189753562212, 0.18010066688759252] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [1, 57, 0]]
** centroid: 1, normalized-entropy: 0.12565805017256745, [(1, 1), (2, 57)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [63, 11, 0]]
** centroid: 2, normalized-entropy: 0.6064481901491525, [(1, 63), (2, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 68, 17]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 68), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [71, 21, 0]]
** centroid: 5, normalized-entropy: 0.7749672673267259, [(1, 71), (2, 21)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [43, 4, 0]]
** centroid: 6, normalized-entropy: 0.4199210973757179, [(1, 43), (2, 4)]
*** center 7: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23836034720949828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23836034720949828, 0.20301930980198085] ***
*** starting iteration: 2; err: [Inf, 0.23836034720949828, 0.20301930980198085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23836034720949828, 0.20301930980198085, 0.1973564708363265] ***
*** starting iteration: 3; err: [Inf, 0.23836034720949828, 0.20301930980198085, 0.1973564708363265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23836034720949828, 0.20301930980198085, 0.1973564708363265, 0.19440052989451215] ***
*** starting iteration: 4; err: [Inf, 0.23836034720949828, 0.20301930980198085, 0.1973564708363265, 0.19440052989451215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23836034720949828, 0.20301930980198085, 0.1973564708363265, 0.19440052989451215, 0.1935535334115848] ***
*** finished computation of 7 references, err: [Inf, 0.23836034720949828, 0.20301930980198085, 0.1973564708363265, 0.19440052989451215, 0.1935535334115848] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [64, 12, 0]]
** centroid: 1, normalized-entropy: 0.6292492238560344, [(1, 64), (2, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [42, 41, 0]]
** centroid: 4, normalized-entropy: 0.9998952874186191, [(1, 42), (2, 41)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [50, 28, 0]]
** centroid: 5, normalized-entropy: 0.9418285354475157, [(1, 50), (2, 28)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 87, 21]]
** centroid: 6, normalized-entropy: 0.710676853856123, [(2, 87), (3, 21)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [58, 6, 0]]
** centroid: 7, normalized-entropy: 0.44886448872302936, [(1, 58), (2, 6)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28563922267034647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28563922267034647, 0.21900297262333335] ***
*** starting iteration: 2; err: [Inf, 0.28563922267034647, 0.21900297262333335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28563922267034647, 0.21900297262333335, 0.19589883386157453] ***
*** starting iteration: 3; err: [Inf, 0.28563922267034647, 0.21900297262333335, 0.19589883386157453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28563922267034647, 0.21900297262333335, 0.19589883386157453, 0.18958088506013154] ***
*** starting iteration: 4; err: [Inf, 0.28563922267034647, 0.21900297262333335, 0.19589883386157453, 0.18958088506013154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28563922267034647, 0.21900297262333335, 0.19589883386157453, 0.18958088506013154, 0.18694688523933292] ***
*** starting iteration: 5; err: [Inf, 0.28563922267034647, 0.21900297262333335, 0.19589883386157453, 0.18958088506013154, 0.18694688523933292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28563922267034647, 0.21900297262333335, 0.19589883386157453, 0.18958088506013154, 0.18694688523933292, 0.18558255107328295] ***
*** starting iteration: 6; err: [Inf, 0.28563922267034647, 0.21900297262333335, 0.19589883386157453, 0.18958088506013154, 0.18694688523933292, 0.18558255107328295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28563922267034647, 0.21900297262333335, 0.19589883386157453, 0.18958088506013154, 0.18694688523933292, 0.18558255107328295, 0.18502132479660213] ***
*** finished computation of 7 references, err: [Inf, 0.28563922267034647, 0.21900297262333335, 0.19589883386157453, 0.18958088506013154, 0.18694688523933292, 0.18558255107328295, 0.18502132479660213] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [34, 40, 0]]
** centroid: 1, normalized-entropy: 0.9952525494396791, [(1, 34), (2, 40)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [36, 18, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 36), (2, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [62, 34, 0]]
** centroid: 3, normalized-entropy: 0.9377342939868042, [(1, 62), (2, 34)]
*** center 4: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 92, 19]]
** centroid: 5, normalized-entropy: 0.6603769229926888, [(2, 92), (3, 19)]
*** center 6: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3517937989383936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3517937989383936, 0.21498844335786998] ***
*** starting iteration: 2; err: [Inf, 0.3517937989383936, 0.21498844335786998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3517937989383936, 0.21498844335786998, 0.1964620291311294] ***
*** starting iteration: 3; err: [Inf, 0.3517937989383936, 0.21498844335786998, 0.1964620291311294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3517937989383936, 0.21498844335786998, 0.1964620291311294, 0.19236456236615776] ***
*** starting iteration: 4; err: [Inf, 0.3517937989383936, 0.21498844335786998, 0.1964620291311294, 0.19236456236615776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3517937989383936, 0.21498844335786998, 0.1964620291311294, 0.19236456236615776, 0.19054020793060772] ***
*** starting iteration: 5; err: [Inf, 0.3517937989383936, 0.21498844335786998, 0.1964620291311294, 0.19236456236615776, 0.19054020793060772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3517937989383936, 0.21498844335786998, 0.1964620291311294, 0.19236456236615776, 0.19054020793060772, 0.18970077792741358] ***
*** finished computation of 7 references, err: [Inf, 0.3517937989383936, 0.21498844335786998, 0.1964620291311294, 0.19236456236615776, 0.19054020793060772, 0.18970077792741358] ***
*** center 1: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [53, 33, 0]]
** centroid: 2, normalized-entropy: 0.9606276613221153, [(1, 53), (2, 33)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 77, 19]]
** centroid: 3, normalized-entropy: 0.7177418091697444, [(2, 77), (3, 19)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [53, 15, 0]]
** centroid: 4, normalized-entropy: 0.7612401496918493, [(1, 53), (2, 15)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [3, 64, 0]]
** centroid: 5, normalized-entropy: 0.26377743669413856, [(1, 3), (2, 64)]
*** center 6: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [65, 6, 0]]
** centroid: 7, normalized-entropy: 0.4178642624458583, [(1, 65), (2, 6)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2523656415110454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2523656415110454, 0.20416798035241662] ***
*** starting iteration: 2; err: [Inf, 0.2523656415110454, 0.20416798035241662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2523656415110454, 0.20416798035241662, 0.19252547763194888] ***
*** starting iteration: 3; err: [Inf, 0.2523656415110454, 0.20416798035241662, 0.19252547763194888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2523656415110454, 0.20416798035241662, 0.19252547763194888, 0.19086626316606997] ***
*** starting iteration: 4; err: [Inf, 0.2523656415110454, 0.20416798035241662, 0.19252547763194888, 0.19086626316606997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2523656415110454, 0.20416798035241662, 0.19252547763194888, 0.19086626316606997, 0.18951052652299405] ***
*** starting iteration: 5; err: [Inf, 0.2523656415110454, 0.20416798035241662, 0.19252547763194888, 0.19086626316606997, 0.18951052652299405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2523656415110454, 0.20416798035241662, 0.19252547763194888, 0.19086626316606997, 0.18951052652299405, 0.18899394492059945] ***
*** finished computation of 7 references, err: [Inf, 0.2523656415110454, 0.20416798035241662, 0.19252547763194888, 0.19086626316606997, 0.18951052652299405, 0.18899394492059945] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [27, 36, 0]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(1, 27), (2, 36)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 74, 15]]
** centroid: 2, normalized-entropy: 0.6543524423071835, [(2, 74), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [42, 34, 0]]
** centroid: 3, normalized-entropy: 0.9919924034538556, [(1, 42), (2, 34)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [43, 34, 0]]
** centroid: 4, normalized-entropy: 0.9901226308935799, [(1, 43), (2, 34)]
*** center 5: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38764783541858194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38764783541858194, 0.275773154085502] ***
*** starting iteration: 2; err: [Inf, 0.38764783541858194, 0.275773154085502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915] ***
*** starting iteration: 3; err: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752] ***
*** starting iteration: 4; err: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752, 0.21055056931264698] ***
*** starting iteration: 5; err: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752, 0.21055056931264698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752, 0.21055056931264698, 0.19960588852898217] ***
*** starting iteration: 6; err: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752, 0.21055056931264698, 0.19960588852898217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752, 0.21055056931264698, 0.19960588852898217, 0.19417796542495488] ***
*** starting iteration: 7; err: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752, 0.21055056931264698, 0.19960588852898217, 0.19417796542495488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752, 0.21055056931264698, 0.19960588852898217, 0.19417796542495488, 0.19086371605470775] ***
*** starting iteration: 8; err: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752, 0.21055056931264698, 0.19960588852898217, 0.19417796542495488, 0.19086371605470775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752, 0.21055056931264698, 0.19960588852898217, 0.19417796542495488, 0.19086371605470775, 0.18661176120210438] ***
*** starting iteration: 9; err: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752, 0.21055056931264698, 0.19960588852898217, 0.19417796542495488, 0.19086371605470775, 0.18661176120210438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752, 0.21055056931264698, 0.19960588852898217, 0.19417796542495488, 0.19086371605470775, 0.18661176120210438, 0.18463549583777786] ***
*** starting iteration: 10; err: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752, 0.21055056931264698, 0.19960588852898217, 0.19417796542495488, 0.19086371605470775, 0.18661176120210438, 0.18463549583777786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752, 0.21055056931264698, 0.19960588852898217, 0.19417796542495488, 0.19086371605470775, 0.18661176120210438, 0.18463549583777786, 0.18326844305358828] ***
*** finished computation of 7 references, err: [Inf, 0.38764783541858194, 0.275773154085502, 0.25468655756115915, 0.22531230117473752, 0.21055056931264698, 0.19960588852898217, 0.19417796542495488, 0.19086371605470775, 0.18661176120210438, 0.18463549583777786, 0.18326844305358828] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [41, 16, 0]]
** centroid: 1, normalized-entropy: 0.8564052389131375, [(1, 41), (2, 16)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 70, 17]]
** centroid: 2, normalized-entropy: 0.7126368350739763, [(2, 70), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [1, 79, 0]]
** centroid: 3, normalized-entropy: 0.09694460606247329, [(1, 1), (2, 79)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [80, 12, 0]]
** centroid: 4, normalized-entropy: 0.5586293734521991, [(1, 80), (2, 12)]
*** center 5: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [44, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [39, 9, 0]]
** centroid: 7, normalized-entropy: 0.6962122601251459, [(1, 39), (2, 9)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33653868417814375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33653868417814375, 0.2598058301266283] ***
*** starting iteration: 2; err: [Inf, 0.33653868417814375, 0.2598058301266283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987] ***
*** starting iteration: 3; err: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856] ***
*** starting iteration: 4; err: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856, 0.21879805186204612] ***
*** starting iteration: 5; err: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856, 0.21879805186204612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856, 0.21879805186204612, 0.20797860935190693] ***
*** starting iteration: 6; err: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856, 0.21879805186204612, 0.20797860935190693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856, 0.21879805186204612, 0.20797860935190693, 0.19928606223687528] ***
*** starting iteration: 7; err: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856, 0.21879805186204612, 0.20797860935190693, 0.19928606223687528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856, 0.21879805186204612, 0.20797860935190693, 0.19928606223687528, 0.19391538756713272] ***
*** starting iteration: 8; err: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856, 0.21879805186204612, 0.20797860935190693, 0.19928606223687528, 0.19391538756713272] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856, 0.21879805186204612, 0.20797860935190693, 0.19928606223687528, 0.19391538756713272, 0.19087091490626334] ***
*** starting iteration: 9; err: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856, 0.21879805186204612, 0.20797860935190693, 0.19928606223687528, 0.19391538756713272, 0.19087091490626334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856, 0.21879805186204612, 0.20797860935190693, 0.19928606223687528, 0.19391538756713272, 0.19087091490626334, 0.1886943008825183] ***
*** starting iteration: 10; err: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856, 0.21879805186204612, 0.20797860935190693, 0.19928606223687528, 0.19391538756713272, 0.19087091490626334, 0.1886943008825183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856, 0.21879805186204612, 0.20797860935190693, 0.19928606223687528, 0.19391538756713272, 0.19087091490626334, 0.1886943008825183, 0.1870724420098122] ***
*** finished computation of 7 references, err: [Inf, 0.33653868417814375, 0.2598058301266283, 0.24250063700973987, 0.2325755249261856, 0.21879805186204612, 0.20797860935190693, 0.19928606223687528, 0.19391538756713272, 0.19087091490626334, 0.1886943008825183, 0.1870724420098122] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [57, 20, 0]]
** centroid: 1, normalized-entropy: 0.8263541679009075, [(1, 57), (2, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [60, 2, 0]]
** centroid: 2, normalized-entropy: 0.2055925081850832, [(1, 60), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 68, 27]]
** centroid: 3, normalized-entropy: 0.8611247055579295, [(2, 68), (3, 27)]
*** center 4: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [36, 28, 0]]
** centroid: 5, normalized-entropy: 0.9886994082884974, [(1, 36), (2, 28)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [46, 54, 0]]
** centroid: 6, normalized-entropy: 0.9953784388202258, [(1, 46), (2, 54)]
*** center 7: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3032205318771303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3032205318771303, 0.22617945817299187] ***
*** starting iteration: 2; err: [Inf, 0.3032205318771303, 0.22617945817299187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3032205318771303, 0.22617945817299187, 0.2014090919252485] ***
*** starting iteration: 3; err: [Inf, 0.3032205318771303, 0.22617945817299187, 0.2014090919252485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3032205318771303, 0.22617945817299187, 0.2014090919252485, 0.1895393608417362] ***
*** starting iteration: 4; err: [Inf, 0.3032205318771303, 0.22617945817299187, 0.2014090919252485, 0.1895393608417362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3032205318771303, 0.22617945817299187, 0.2014090919252485, 0.1895393608417362, 0.18713152516260742] ***
*** starting iteration: 5; err: [Inf, 0.3032205318771303, 0.22617945817299187, 0.2014090919252485, 0.1895393608417362, 0.18713152516260742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3032205318771303, 0.22617945817299187, 0.2014090919252485, 0.1895393608417362, 0.18713152516260742, 0.1862315613850951] ***
*** finished computation of 7 references, err: [Inf, 0.3032205318771303, 0.22617945817299187, 0.2014090919252485, 0.1895393608417362, 0.18713152516260742, 0.1862315613850951] ***
*** center 1: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [54, 13, 0]]
** centroid: 3, normalized-entropy: 0.709825885194168, [(1, 54), (2, 13)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 56, 22]]
** centroid: 4, normalized-entropy: 0.8582307926411409, [(2, 56), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 61, 0]]
** centroid: 5, normalized-entropy: 0.11911602665564841, [(1, 1), (2, 61)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [68, 7, 0]]
** centroid: 6, normalized-entropy: 0.44749925503686355, [(1, 68), (2, 7)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [31, 40, 0]]
** centroid: 7, normalized-entropy: 0.9883779727795042, [(1, 31), (2, 40)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28894133609347045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28894133609347045, 0.21200874219089746] ***
*** starting iteration: 2; err: [Inf, 0.28894133609347045, 0.21200874219089746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28894133609347045, 0.21200874219089746, 0.19954440119024366] ***
*** starting iteration: 3; err: [Inf, 0.28894133609347045, 0.21200874219089746, 0.19954440119024366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28894133609347045, 0.21200874219089746, 0.19954440119024366, 0.19414691016450525] ***
*** starting iteration: 4; err: [Inf, 0.28894133609347045, 0.21200874219089746, 0.19954440119024366, 0.19414691016450525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28894133609347045, 0.21200874219089746, 0.19954440119024366, 0.19414691016450525, 0.19268439794704317] ***
*** starting iteration: 5; err: [Inf, 0.28894133609347045, 0.21200874219089746, 0.19954440119024366, 0.19414691016450525, 0.19268439794704317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28894133609347045, 0.21200874219089746, 0.19954440119024366, 0.19414691016450525, 0.19268439794704317, 0.19170547486655415] ***
*** finished computation of 7 references, err: [Inf, 0.28894133609347045, 0.21200874219089746, 0.19954440119024366, 0.19414691016450525, 0.19268439794704317, 0.19170547486655415] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [23, 35, 0]]
** centroid: 1, normalized-entropy: 0.9688977092243805, [(1, 23), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [56, 41, 0]]
** centroid: 2, normalized-entropy: 0.9826808027585991, [(1, 56), (2, 41)]
*** center 3: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 78, 17]]
** centroid: 5, normalized-entropy: 0.6777688570413568, [(2, 78), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [56, 23, 0]]
** centroid: 6, normalized-entropy: 0.8701883352082787, [(1, 56), (2, 23)]
*** center 7: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28530198945477603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28530198945477603, 0.23145019708387554] ***
*** starting iteration: 2; err: [Inf, 0.28530198945477603, 0.23145019708387554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28530198945477603, 0.23145019708387554, 0.21472936227731407] ***
*** starting iteration: 3; err: [Inf, 0.28530198945477603, 0.23145019708387554, 0.21472936227731407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28530198945477603, 0.23145019708387554, 0.21472936227731407, 0.20331162142008544] ***
*** starting iteration: 4; err: [Inf, 0.28530198945477603, 0.23145019708387554, 0.21472936227731407, 0.20331162142008544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28530198945477603, 0.23145019708387554, 0.21472936227731407, 0.20331162142008544, 0.18932661903183906] ***
*** starting iteration: 5; err: [Inf, 0.28530198945477603, 0.23145019708387554, 0.21472936227731407, 0.20331162142008544, 0.18932661903183906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28530198945477603, 0.23145019708387554, 0.21472936227731407, 0.20331162142008544, 0.18932661903183906, 0.18811662497092038] ***
*** starting iteration: 6; err: [Inf, 0.28530198945477603, 0.23145019708387554, 0.21472936227731407, 0.20331162142008544, 0.18932661903183906, 0.18811662497092038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28530198945477603, 0.23145019708387554, 0.21472936227731407, 0.20331162142008544, 0.18932661903183906, 0.18811662497092038, 0.1874873413424939] ***
*** finished computation of 7 references, err: [Inf, 0.28530198945477603, 0.23145019708387554, 0.21472936227731407, 0.20331162142008544, 0.18932661903183906, 0.18811662497092038, 0.1874873413424939] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [38, 57, 0]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(1, 38), (2, 57)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [45, 22, 0]]
** centroid: 2, normalized-entropy: 0.9132401614300725, [(1, 45), (2, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [57, 3, 0]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(1, 57), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [48, 7, 0]]
** centroid: 4, normalized-entropy: 0.54991090463341, [(1, 48), (2, 7)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 80, 18]]
** centroid: 5, normalized-entropy: 0.6880476235340797, [(2, 80), (3, 18)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [65, 9, 0]]
** centroid: 6, normalized-entropy: 0.5340042729285396, [(1, 65), (2, 9)]
*** center 7: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22207866001687943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22207866001687943, 0.19154473167750985] ***
*** starting iteration: 2; err: [Inf, 0.22207866001687943, 0.19154473167750985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22207866001687943, 0.19154473167750985, 0.1904032482439652] ***
*** starting iteration: 3; err: [Inf, 0.22207866001687943, 0.19154473167750985, 0.1904032482439652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22207866001687943, 0.19154473167750985, 0.1904032482439652, 0.1897085020393133] ***
*** finished computation of 7 references, err: [Inf, 0.22207866001687943, 0.19154473167750985, 0.1904032482439652, 0.1897085020393133] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 63, 13]]
** centroid: 1, normalized-entropy: 0.6601070987550468, [(2, 63), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [23, 49, 0]]
** centroid: 3, normalized-entropy: 0.9037762882345833, [(1, 23), (2, 49)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [20, 72, 0]]
** centroid: 4, normalized-entropy: 0.7553754125614286, [(1, 20), (2, 72)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [53, 6, 0]]
** centroid: 5, normalized-entropy: 0.4743454375622396, [(1, 53), (2, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2511241095867008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2511241095867008, 0.21157498278748244] ***
*** starting iteration: 2; err: [Inf, 0.2511241095867008, 0.21157498278748244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2511241095867008, 0.21157498278748244, 0.19376288264803587] ***
*** starting iteration: 3; err: [Inf, 0.2511241095867008, 0.21157498278748244, 0.19376288264803587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2511241095867008, 0.21157498278748244, 0.19376288264803587, 0.18855756862182171] ***
*** starting iteration: 4; err: [Inf, 0.2511241095867008, 0.21157498278748244, 0.19376288264803587, 0.18855756862182171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2511241095867008, 0.21157498278748244, 0.19376288264803587, 0.18855756862182171, 0.18646860819403083] ***
*** starting iteration: 5; err: [Inf, 0.2511241095867008, 0.21157498278748244, 0.19376288264803587, 0.18855756862182171, 0.18646860819403083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2511241095867008, 0.21157498278748244, 0.19376288264803587, 0.18855756862182171, 0.18646860819403083, 0.18547203332930803] ***
*** finished computation of 7 references, err: [Inf, 0.2511241095867008, 0.21157498278748244, 0.19376288264803587, 0.18855756862182171, 0.18646860819403083, 0.18547203332930803] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 21]]
** centroid: 1, normalized-entropy: 0.9731560354421095, [(2, 31), (3, 21)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 71, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [63, 13, 0]]
** centroid: 3, normalized-entropy: 0.6601070987550468, [(1, 63), (2, 13)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [2, 60, 0]]
** centroid: 4, normalized-entropy: 0.2055925081850832, [(1, 2), (2, 60)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [70, 2, 0]]
** centroid: 5, normalized-entropy: 0.18312206830137262, [(1, 70), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [85, 1, 0]]
** centroid: 6, normalized-entropy: 0.09140162014739266, [(1, 85), (2, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38538044050708414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38538044050708414, 0.24981198278255762] ***
*** starting iteration: 2; err: [Inf, 0.38538044050708414, 0.24981198278255762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38538044050708414, 0.24981198278255762, 0.2188143437039107] ***
*** starting iteration: 3; err: [Inf, 0.38538044050708414, 0.24981198278255762, 0.2188143437039107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38538044050708414, 0.24981198278255762, 0.2188143437039107, 0.2012036629859358] ***
*** starting iteration: 4; err: [Inf, 0.38538044050708414, 0.24981198278255762, 0.2188143437039107, 0.2012036629859358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38538044050708414, 0.24981198278255762, 0.2188143437039107, 0.2012036629859358, 0.19674476941954344] ***
*** starting iteration: 5; err: [Inf, 0.38538044050708414, 0.24981198278255762, 0.2188143437039107, 0.2012036629859358, 0.19674476941954344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38538044050708414, 0.24981198278255762, 0.2188143437039107, 0.2012036629859358, 0.19674476941954344, 0.19562232164666057] ***
*** starting iteration: 6; err: [Inf, 0.38538044050708414, 0.24981198278255762, 0.2188143437039107, 0.2012036629859358, 0.19674476941954344, 0.19562232164666057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38538044050708414, 0.24981198278255762, 0.2188143437039107, 0.2012036629859358, 0.19674476941954344, 0.19562232164666057, 0.19553988618962467] ***
*** finished computation of 7 references, err: [Inf, 0.38538044050708414, 0.24981198278255762, 0.2188143437039107, 0.2012036629859358, 0.19674476941954344, 0.19562232164666057, 0.19553988618962467] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [62, 10, 0]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(1, 62), (2, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [79, 35, 0]]
** centroid: 3, normalized-entropy: 0.8897006746992595, [(1, 79), (2, 35)]
*** center 4: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [4, 65, 0]]
** centroid: 5, normalized-entropy: 0.3193373865339728, [(1, 4), (2, 65)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 40, 8]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 40), (3, 8)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 27, 14]]
** centroid: 7, normalized-entropy: 0.9262122127346664, [(2, 27), (3, 14)]
finished with 8 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 359,3 => 41,1 => 600), Dict(2 => 354,3 => 34,1 => 612))
[ Info: ===== scores for single classifier: {"micro_f1":0.881,"precision":0.881,"recall":0.881,"macro_recall":0.5905985746464311,"macro_f1":0.5860939762616603,"accuracy":0.881,"class_f1":{"2":0.8242245199409158,"3":0.0,"1":0.9340574088440651},"class_precision":{"2":0.8637770897832817,"3":0.0,"1":0.8892171344165436},"class_recall":{"2":0.788135593220339,"3":0.0,"1":0.9836601307189542}}
[ Info: ===== scores for 1: {"micro_f1":0.976,"precision":0.976,"recall":0.976,"macro_recall":0.9520050958236402,"macro_f1":0.9674714142276971,"accuracy":0.976,"class_f1":{"2":0.9655172413793103,"3":0.9538461538461539,"1":0.983050847457627},"class_precision":{"2":0.9824561403508771,"3":1.0,"1":0.9712918660287081},"class_recall":{"2":0.9491525423728814,"3":0.9117647058823529,"1":0.9950980392156863}}
[ Info: ===== scores for 5: {"micro_f1":0.974,"precision":0.974,"recall":0.974,"macro_recall":0.9243288652560836,"macro_f1":0.9500288442800991,"accuracy":0.974,"class_f1":{"2":0.9630681818181818,"3":0.9032258064516129,"1":0.9837925445705025},"class_precision":{"2":0.9685714285714285,"3":1.0,"1":0.9758842443729904},"class_recall":{"2":0.9576271186440678,"3":0.8235294117647058,"1":0.9918300653594772}}
[ Info: ===== scores for 7: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9345297441010302,"macro_f1":0.9563133871644509,"accuracy":0.975,"class_f1":{"2":0.9645390070921985,"3":0.9206349206349206,"1":0.9837662337662337},"class_precision":{"2":0.9686609686609686,"3":1.0,"1":0.9774193548387097},"class_recall":{"2":0.96045197740113,"3":0.8529411764705882,"1":0.9901960784313726}}
[ Info: ===== scores for 9: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9345297441010302,"macro_f1":0.9563133871644509,"accuracy":0.975,"class_f1":{"2":0.9645390070921985,"3":0.9206349206349206,"1":0.9837662337662337},"class_precision":{"2":0.9686609686609686,"3":1.0,"1":0.9774193548387097},"class_recall":{"2":0.96045197740113,"3":0.8529411764705882,"1":0.9901960784313726}}
[ Info: ===== scores for 11: {"micro_f1":0.979,"precision":0.979,"recall":0.979,"macro_recall":0.9290369631845206,"macro_f1":0.9538005265844595,"accuracy":0.979,"class_f1":{"2":0.9703808180535967,"3":0.9032258064516129,"1":0.9877949552481693},"class_precision":{"2":0.9690140845070423,"3":1.0,"1":0.9837925445705025},"class_recall":{"2":0.9717514124293786,"3":0.8235294117647058,"1":0.9918300653594772}}
(score = 0.976, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.976, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.979, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.979, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.981, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.981, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.981,"k":7,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.9810000000000001,"precision":0.981,"recall":0.981,"macro_recall":0.9844909715298549,"macro_f1":0.9858204190138028,"accuracy":0.981,"class_f1":{"2":0.9728958630527816,"3":1.0,"1":0.9845653939886271},"class_precision":{"2":0.9827089337175793,"3":1.0,"1":0.9789983844911146},"class_recall":{"2":0.963276836158192,"3":1.0,"1":0.9901960784313726}}
Test Summary: | Pass  Total
AKNC          |    8      8
[83, 3, 3, 2, 4, 1, 14, 2, 8, 4, 8, 3, 19, 3, 1, 13, 8, 6, 10, 3, 6, 5, 5, 2, 12, 18, 1, 9, 11, 3, 4, 9, 3, 3, 47, 32, 2, 6, 9, 30, 6, 21, 8, 24, 9, 91, 4, 4, 23, 2, 4, 12, 18, 11, 1, 14, 18, 21, 8, 3, 12, 8, 4, 3, 27, 37, 6, 12, 22, 13, 41, 11, 7, 4, 18, 21, 11, 8, 75, 6, 2, 29, 15, 9, 5, 20, 4, 14, 6, 40, 8, 24, 24, 10, 7, 61, 4, 99, 3, 9, 3, 66, 21, 16, 12, 49, 28, 11, 37, 14, 12, 27, 28, 35, 101, 19, 10, 8, 28, 127, 18, 11, 32, 12, 173, 5, 31, 3, 8, 3, 37, 64, 2, 5, 19, 4, 8, 1383, 34, 33, 4, 4, 13, 27, 5, 141, 16, 5, 100, 46, 10, 22, 16, 34, 133, 17, 39, 1, 29, 7, 41, 88, 8, 13, 9, 6, 20, 12, 24, 123, 5, 5, 12, 7, 17, 19, 8, 96, 137, 18, 7, 19, 14, 5, 4, 12, 8, 70, 161, 4, 31, 40, 10, 31, 4, 25, 37, 8, 37, 11, 28, 8, 108, 199, 27, 1, 18, 20, 37, 10, 34, 19, 41, 8, 55, 22, 23, 39, 13, 86, 43, 12, 6, 38, 42, 36, 17, 83, 2, 8, 12, 98, 28, 8, 1, 46, 14, 32, 7, 116, 7, 66, 97, 71, 22, 13, 16, 3, 12, 111, 11, 2, 15, 40, 184, 9, 26, 66, 108, 43, 16, 29, 69, 9, 42, 26, 17, 77, 19, 9, 61, 9, 23, 53, 79, 34, 14, 20, 2, 3, 5, 26, 136, 45, 19, 43, 384, 22, 33, 3, 92, 45, 18, 124, 48, 4, 13, 6, 7, 81]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.689, speedup = 0.19799009843081802, eval_ratio = 0.090674)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3812779017857143,"recall":0.3793402777777778,"f1":null,"seconds":0.00019297003746032715,"exhaustive_search_seconds":0.0003645922988653183,"evaluations":548.6953125,"distances_sum":1768.0928057725014}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5494791666666666,"recall":0.5494791666666666,"f1":null,"seconds":0.0003051050007343292,"exhaustive_search_seconds":0.0003645922988653183,"evaluations":723.96875,"distances_sum":1644.061903857074}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6536458333333333,"recall":0.6536458333333333,"f1":null,"seconds":0.0004108753055334091,"exhaustive_search_seconds":0.0003645922988653183,"evaluations":886.9375,"distances_sum":1596.2631502868285}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7204861111111108,"recall":0.7204861111111108,"f1":0.7204861111111108,"seconds":0.0005103964358568192,"exhaustive_search_seconds":0.0003645922988653183,"evaluations":1024.09375,"distances_sum":1567.9495209195597}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7734374999999996,"recall":0.7734374999999996,"f1":0.7734374999999996,"seconds":0.0007216483354568481,"exhaustive_search_seconds":0.0003645922988653183,"evaluations":1120.6015625,"distances_sum":1550.7818308196659}
KCenters.DeloneInvIndex> reached performance {"precision":0.8185763888888884,"recall":0.8185763888888884,"f1":0.8185763888888884,"seconds":0.000646296888589859,"exhaustive_search_seconds":0.0003645922988653183,"evaluations":1249.03125,"distances_sum":1539.8234736953436}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8369999999999997, speedup = 0.4341688828533168, eval_ratio = 0.11998199999999999)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
