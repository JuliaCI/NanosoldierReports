Julia Version 1.5.0-DEV.689
Commit 86ee57cdd7 (2020-04-25 20:17 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_l3fVPF/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_l3fVPF/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.14858743103625258 0.022193127780064142; -0.14858743103625258 0.0 -0.048563221460344155; -0.022193127780064142 0.048563221460344155 0.0])
dAA = so3([0.0 0.021804460877585804 0.15235459129903628; -0.021804460877585804 0.0 -0.10403245315647297; -0.15235459129903628 0.10403245315647297 0.0])
dAA = so3([0.0 -0.03339852391375484 -0.14660484920263273; 0.03339852391375484 0.0 0.07204259567281524; 0.14660484920263273 -0.07204259567281524 0.0])
dAA = Quaternion(0.9999028602301515, [-0.004330766570532028, -0.012981229265756067, 0.002646176718151611])
dAA = SO3([0.997852408120158 0.029398603465819205 -0.05853455153207706; -0.03657883620967326 0.9914008944731622 -0.1256433650431242; 0.05433746727947263 0.1275146601457001 0.9903471366634927])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9272979737726389 0.1012194123879106 0.3603791037130264; -0.003925804270365059 0.9653232297453884 -0.2610280639601092; -0.37430342757980317 0.24063601698369713 0.8955396425799546]), [0.4856322146034415, 0.2219312778006414, -1.4858743103625256])
xj = SE3(SO3([0.9978068084190057 -0.012796764301637802 -0.06494471415046647; 0.014211933511912415 0.9996705033249745 0.02137535328000381; 0.06464977972530496 -0.022251462994605935 0.9976599011567364]), [-0.7204259567281524, -1.4660484920263273, 0.3339852391375484])
Dx = SE3(SO3([0.9010098042507558 -0.007462125471119869 -0.433734537854052; 0.13027359387544502 0.9583553745607019 0.25413336417989696; 0.4137754504351249 -0.28548080974746765 0.86445970633867]), [-1.7929282874307588, -1.313598829100625, 1.6357282990165265])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
