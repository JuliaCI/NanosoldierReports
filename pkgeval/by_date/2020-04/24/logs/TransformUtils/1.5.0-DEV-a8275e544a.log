Julia Version 1.5.0-DEV.667
Commit a8275e544a (2020-04-23 15:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_DQQVU2/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_DQQVU2/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.08627414986511191 -0.03471061501694324; -0.08627414986511191 0.0 -0.06718341469861959; 0.03471061501694324 0.06718341469861959 0.0])
dAA = so3([0.0 0.1059624763859379 -0.050135890649211694; -0.1059624763859379 0.0 -0.17693243697619604; 0.050135890649211694 0.17693243697619604 0.0])
dAA = so3([0.0 -0.005985367786169524 0.07834227006912092; 0.005985367786169524 0.0 0.0656600353578259; -0.07834227006912092 -0.0656600353578259 0.0])
dAA = Quaternion(0.998122671796993, [-0.04986064802296747, -0.021527124991795148, 0.028313083780293243])
dAA = SO3([0.9838949725995381 0.13132823073189734 0.12125831396726613; -0.11621071568053244 0.9854146748701014 -0.12431004831336548; -0.13581514074054116 0.10821651613077526 0.9848062922129128])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.95805543779702 0.22557311023545 -0.17676693708458577; -0.27972615102614956 0.8701732936207234 -0.40564974978589363; 0.06231419212070509 0.43808128356272863 0.8967729536802367]), [0.6718341469861959, -0.34710615016943236, -0.862741498651119])
xj = SE3(SO3([0.9842998627231752 -0.1319687509754221 -0.11720933840409474; 0.1571208270755224 0.9576709456931433 0.2412040743318909; 0.08041657753375456 -0.25583316544417695 0.9633704196811163]), [-0.656600353578259, 0.7834227006912091, 0.05985367786169523])
Dx = SE3(SO3([0.9040741257630452 -0.41026102410193616 -0.11973248192790581; 0.39398292653722156 0.691495357911561 0.6054846187839363; -0.16561228433589142 -0.5945755310215791 0.7867989000929367]), [-1.5314616080193524, 1.0882685907857712, 0.6035829537974529])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
