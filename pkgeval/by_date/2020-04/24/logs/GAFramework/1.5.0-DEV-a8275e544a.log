Julia Version 1.5.0-DEV.667
Commit a8275e544a (2020-04-23 15:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_19GtPg/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_19GtPg/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721545516082633
curgen: 20 fitness: 0.21721545516082633
curgen: 30 fitness: 0.21721545516082633
curgen: 40 fitness: 0.21723331880186653
curgen: 50 fitness: 0.21723354405409376
CoordinateCreature{Array{Float64,1}}([0.222591759969182], -0.21723354405409376) 0.222591759969182 -0.21723354405409376
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2576378342174124
curgen: 100 fitness: 3.258272485666909
curgen: 150 fitness: 3.258381851554408
curgen: 200 fitness: 3.2583975824516784
curgen: 250 fitness: 3.2584223422962606
curgen: 300 fitness: 3.25843389125496
curgen: 350 fitness: 3.2584392978652073
curgen: 400 fitness: 3.258440897221023
curgen: 450 fitness: 3.2584439991286995
curgen: 500 fitness: 3.2584439991286995
CoordinateCreature{Array{Float64,1}}([0.22241148889881346, -0.22206489470455693, -0.22229932413195008, 0.22322444293085983, -0.22221696382375544, 0.2223785693029198, 0.22227474763487912, 0.22254205214781458, -0.22266238903435132, -0.2225298461561219, -0.22238668628922562, 0.22251773369716665, -0.2224769740433096, 0.22252865376696226, -0.22312771420906616], -3.2584439991286995) [0.22241148889881346, -0.22206489470455693, -0.22229932413195008, 0.22322444293085983, -0.22221696382375544, 0.2223785693029198, 0.22227474763487912, 0.22254205214781458, -0.22266238903435132, -0.2225298461561219, -0.22238668628922562, 0.22251773369716665, -0.2224769740433096, 0.22252865376696226, -0.22312771420906616] -3.2584439991286995
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0036192042984737327
curgen: 100 fitness: -0.0020584613970697774
curgen: 150 fitness: -0.0020584613970697774
curgen: 200 fitness: -0.0017357279545535675
curgen: 250 fitness: -0.0017357279545535675
curgen: 300 fitness: -0.001485351677899871
curgen: 350 fitness: -0.001484337129255664
curgen: 400 fitness: -0.001484337129255664
curgen: 450 fitness: -0.001252332615223395
curgen: 500 fitness: -0.00116744736834562
CoordinateCreature{Array{Float64,1}}([-0.0009193039805674309, -0.00015746187610813262, 0.0012896570422006254, -0.00025535047716597736, 0.0002948190956662644, -0.0015300565055087947, 0.00043747558946693896, 0.00014255651808566634, -0.0004679867827473711, -0.00022514482365519378, 0.00022656055778191001, -0.0004748234397301894, -8.919291458778754e-5, -0.00021099189784131106, -0.00021813395521562702], 0.00116744736834562) [-0.0009193039805674309, -0.00015746187610813262, 0.0012896570422006254, -0.00025535047716597736, 0.0002948190956662644, -0.0015300565055087947, 0.00043747558946693896, 0.00014255651808566634, -0.0004679867827473711, -0.00022514482365519378, 0.00022656055778191001, -0.0004748234397301894, -8.919291458778754e-5, -0.00021099189784131106, -0.00021813395521562702] 0.00116744736834562
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
