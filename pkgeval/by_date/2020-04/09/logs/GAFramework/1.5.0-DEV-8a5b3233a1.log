Julia Version 1.5.0-DEV.607
Commit 8a5b3233a1 (2020-04-09 12:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_69ovUG/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_69ovUG/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172317255780317
curgen: 20 fitness: 0.2172317255780317
curgen: 30 fitness: 0.2172317255780317
curgen: 40 fitness: 0.2172317255780317
curgen: 50 fitness: 0.2172317255780317
CoordinateCreature{Array{Float64,1}}([0.2227555767264489], -0.2172317255780317) 0.2227555767264489 -0.2172317255780317
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2581070647703996
curgen: 100 fitness: 3.258155261525448
curgen: 150 fitness: 3.2582676289713906
curgen: 200 fitness: 3.258319802386579
curgen: 250 fitness: 3.258367028179175
curgen: 300 fitness: 3.2584149152532556
curgen: 350 fitness: 3.25843712494163
curgen: 400 fitness: 3.2584474108525314
curgen: 450 fitness: 3.2584521783707534
curgen: 500 fitness: 3.258470147994481
CoordinateCreature{Array{Float64,1}}([0.22267001078371998, 0.22292742227364995, -0.22210236067499034, 0.22242973592434337, 0.22262723474905183, -0.2227629191690817, 0.22217121472138693, 0.22263293905204984, 0.22274478794459956, 0.22220598721669155, -0.22262224049606869, -0.2225385672764009, -0.2223609853556136, 0.2225966845382134, -0.22258775351383595], -3.258470147994481) [0.22267001078371998, 0.22292742227364995, -0.22210236067499034, 0.22242973592434337, 0.22262723474905183, -0.2227629191690817, 0.22217121472138693, 0.22263293905204984, 0.22274478794459956, 0.22220598721669155, -0.22262224049606869, -0.2225385672764009, -0.2223609853556136, 0.2225966845382134, -0.22258775351383595] -3.258470147994481
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004685840196884783
curgen: 100 fitness: -0.003309349106416448
curgen: 150 fitness: -0.003309349106416448
curgen: 200 fitness: -0.003309349106416448
curgen: 250 fitness: -0.003309349106416448
curgen: 300 fitness: -0.003309349106416448
curgen: 350 fitness: -0.0021299606826516992
curgen: 400 fitness: -0.001475117443419549
curgen: 450 fitness: -0.0011583608530543188
curgen: 500 fitness: -0.001144029837121252
CoordinateCreature{Array{Float64,1}}([0.00021986086061269948, 0.0008400729902514137, 0.00029406219209469637, -0.0008692684218241462, -0.0005549672607169577, -0.0004400340043006368, 7.88857026975642e-5, 0.0014201699058812335, 0.00025908572469703593, 0.0006033220506750684, -0.00041307590412146026, -0.0002468976240466114, 0.0008747651015334073, 0.0003836376053795894, -0.00026559120577469554], 0.001144029837121252) [0.00021986086061269948, 0.0008400729902514137, 0.00029406219209469637, -0.0008692684218241462, -0.0005549672607169577, -0.0004400340043006368, 7.88857026975642e-5, 0.0014201699058812335, 0.00025908572469703593, 0.0006033220506750684, -0.00041307590412146026, -0.0002468976240466114, 0.0008747651015334073, 0.0003836376053795894, -0.00026559120577469554] 0.001144029837121252
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
