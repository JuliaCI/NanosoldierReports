Julia Version 1.5.0-DEV.607
Commit 8a5b3233a1 (2020-04-09 12:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_ur4CV9/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_ur4CV9/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.060007558027967534 0.0905119625460416; -0.060007558027967534 0.0 -0.04374070605680428; -0.0905119625460416 0.04374070605680428 0.0])
dAA = so3([0.0 -0.1453803869485673 -0.19654834447488861; 0.1453803869485673 0.0 0.038469958166663876; 0.19654834447488861 -0.038469958166663876 0.0])
dAA = so3([0.0 0.04925745070093164 0.03765605188289052; -0.04925745070093164 0.0 -0.012199427994341705; -0.03765605188289052 0.012199427994341705 0.0])
dAA = Quaternion(0.997586175519975, [0.055047265750507085, -0.04052422759718459, 0.012223253350655248])
dAA = SO3([0.9983743508372592 0.019228706150591073 -0.0536554978548807; -0.010874620893578943 0.9883436140049092 0.15185072695293786; 0.055949961668457136 -0.15102038774777718 0.9869460189259637])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8191113944300588 -0.3178185051919864 -0.47754363284664986; 0.36358766825603867 0.9315527442279449 0.003673174855882676; 0.4436896787248734 -0.17663771533541878 0.8786003565410738]), [0.4374070605680428, 0.905119625460416, -0.6000755802796753])
xj = SE3(SO3([0.977811120648818 -0.07685704871511076 -0.194880492605868; 0.021135965122179304 0.9617158327447607 -0.2732323700193766; 0.2084194888052859 0.26305066263146837 0.9420008840629018]), [0.12199427994341704, 0.3765605188289052, -0.4925745070093164])
Dx = SE3(SO3([0.9010945828270056 0.40342639679909 0.15898331725539006; -0.32789194474717775 0.8738509474322586 -0.35898662125719627; -0.2837524015224162 0.27135155064500216 0.9197026207382548]), [-0.4028386590122407, -0.41112541179127005, 0.24313235638930603])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
