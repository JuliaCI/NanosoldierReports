Julia Version 1.5.0-DEV.567
Commit f47e0927a3 (2020-04-03 02:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed DataAPI ────────────────────── v1.1.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Parameters ─────────────────── v0.12.0
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed LazyArrays ─────────────────── v0.15.1
  Installed StatsBase ──────────────────── v0.32.2
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Rmath ──────────────────────── v0.6.1
  Installed SpecialFunctions ───────────── v0.10.0
  Installed ProgressMeter ──────────────── v1.2.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed OrderedCollections ─────────── v1.1.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed FillArrays ─────────────────── v0.8.6
  Installed Requires ───────────────────── v1.0.1
  Installed Missings ───────────────────── v0.4.3
  Installed ArgCheck ───────────────────── v2.0.0
  Installed DataStructures ─────────────── v0.17.11
  Installed StatsFuns ──────────────────── v0.9.4
  Installed StaticArrays ───────────────── v0.12.1
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.3.3+0
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.11
   1a297f60 + FillArrays v0.8.6
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.1
   1914dd2f + MacroTools v0.5.5
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
     Status `/tmp/jl_Hzg33V/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.6.6
   31c24e10 Distributions v0.23.2
   f6369f11 ForwardDiff v0.10.10
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.1
   1dea7af3 OrdinaryDiffEq v5.32.2
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.10.1
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.12
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_Hzg33V/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.5.6
   1520ce14 AbstractTrees v0.3.2
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+3
   4fba245c ArrayInterface v2.6.2
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.6.6
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v1.0.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.3.3+0
   88cd18e8 ConsoleProgressMonitor v0.1.2
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.11
   2b5f629d DiffEqBase v6.25.2
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   31c24e10 Distributions v0.23.2
   ced4e74d DistributionsAD v0.4.10
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.5.0
   da5c29d0 EllipsisNotation v0.4.0
   cad2338a EllipticalSliceSampling v0.2.2
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+5
   1a297f60 FillArrays v0.8.6
   6a86dc24 FiniteDiff v2.3.0
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.10
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.3.0
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.2
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.3
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.1
   1d6d02ad LeftChildRightSiblingTrees v0.1.2
   6f1fad26 Libtask v0.3.4
   093fc24a LightGraphs v1.3.1
   d3d80556 LineSearches v7.0.1
   6fdf6af0 LogDensityProblems v0.10.3
   e6f89c97 LoggingExtras v0.4.0
   c7f686f2 MCMCChains v3.0.10
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.5
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.9+1
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.32.2
   90014a1f PDMats v0.9.12
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v1.0.1
   f27b6e38 Polynomials v0.6.1
   33c8b6b6 ProgressLogging v0.1.2
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.2
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   37e2e3b7 ReverseDiff v1.1.0
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v1.0.1
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   5d786b92 TerminalLoggers v0.1.1
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.10.1
   3a884ed6 UnPack v0.1.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.12
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.145777217
│   t_steps = 0.007612788
└   t_step / t_steps = 19.148992064405313
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/z2sTg/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/z2sTg/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 5:32:10[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.0029617384913460127
  log_density:                   -10.589087664879116
  hamiltonian_energy:            14.309475012685697
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  5.8219788548984095
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:22[K
  iterations:                    1358
  n_steps:                       35
  is_accept:                     true
  acceptance_rate:               0.9039327706813498
  log_density:                   -13.028151640766842
  hamiltonian_energy:            19.656468613028593
  hamiltonian_energy_error:      -0.3917050706924421
  max_hamiltonian_energy_error:  0.47602180093653956
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8537214501953223
  nom_step_size:                 0.8537214501953223
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0692559914206319, 0.8781 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:17[K
  iterations:                    1707
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9725501355056809
  log_density:                   -14.110694715833118
  hamiltonian_energy:            20.23516991971669
  hamiltonian_energy_error:      -0.4415326570700806
  max_hamiltonian_energy_error:  -0.6380411936721018
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.86078027572071
  nom_step_size:                 0.86078027572071
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0692559914206319, 0.8781 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▎                         |  ETA: 0:00:14[K
  iterations:                    2056
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6626405297643293
  log_density:                   -17.87991393789501
  hamiltonian_energy:            21.53863388390254
  hamiltonian_energy_error:      0.5949270668251891
  max_hamiltonian_energy_error:  0.8609554888748328
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▌                        |  ETA: 0:00:12[K
  iterations:                    2513
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7883536925128626
  log_density:                   -11.634699415760364
  hamiltonian_energy:            15.852903064836585
  hamiltonian_energy_error:      0.07578127815495606
  max_hamiltonian_energy_error:  0.3660235613906728
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▋                       |  ETA: 0:00:10[K
  iterations:                    2959
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.523925139317658
  hamiltonian_energy:            17.962565702463404
  hamiltonian_energy_error:      -0.014998628157979255
  max_hamiltonian_energy_error:  -0.4035300696449369
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|████████▉                      |  ETA: 0:00:08[K
  iterations:                    3451
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8755924292415702
  log_density:                   -17.42729136776934
  hamiltonian_energy:            20.42226706435067
  hamiltonian_energy_error:      0.2519496415156972
  max_hamiltonian_energy_error:  -0.32016385446113205
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 33%|██████████▎                    |  ETA: 0:00:07[K
  iterations:                    3947
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8921592920776273
  log_density:                   -11.777841958039877
  hamiltonian_energy:            17.019166743750826
  hamiltonian_energy_error:      -0.06120010131987996
  max_hamiltonian_energy_error:  0.3671067426971497
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▍                   |  ETA: 0:00:06[K
  iterations:                    4420
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8860759969064389
  log_density:                   -12.585225850637112
  hamiltonian_energy:            16.355403852275643
  hamiltonian_energy_error:      0.04839183406348013
  max_hamiltonian_energy_error:  0.21116855164508053
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▋                  |  ETA: 0:00:05[K
  iterations:                    4898
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9963441868107277
  log_density:                   -11.644928257857636
  hamiltonian_energy:            14.62149410660395
  hamiltonian_energy_error:      -0.12433126553321827
  max_hamiltonian_energy_error:  -0.180646700795716
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▉                 |  ETA: 0:00:05[K
  iterations:                    5373
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.864408146170745
  log_density:                   -15.330879962561912
  hamiltonian_energy:            17.78864536444511
  hamiltonian_energy_error:      0.2936112945212166
  max_hamiltonian_energy_error:  0.2936112945212166
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▏               |  ETA: 0:00:04[K
  iterations:                    5847
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9702509956115302
  log_density:                   -15.72783227919034
  hamiltonian_energy:            23.382215690986897
  hamiltonian_energy_error:      -0.14361267021833868
  max_hamiltonian_energy_error:  -0.16316981944181919
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▍              |  ETA: 0:00:04[K
  iterations:                    6319
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.914926636782653
  log_density:                   -12.797159315176671
  hamiltonian_energy:            20.688650398204206
  hamiltonian_energy_error:      -0.26753437078719955
  max_hamiltonian_energy_error:  -0.26753437078719955
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▋             |  ETA: 0:00:03[K
  iterations:                    6816
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8193834224917208
  log_density:                   -18.036013781401827
  hamiltonian_energy:            22.661477680267847
  hamiltonian_energy_error:      0.2922432710531524
  max_hamiltonian_energy_error:  0.42888322922506106
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|███████████████████            |  ETA: 0:00:03[K
  iterations:                    7348
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9631715421231288
  log_density:                   -13.875286763873977
  hamiltonian_energy:            21.555017515799204
  hamiltonian_energy_error:      -0.2427716371137585
  max_hamiltonian_energy_error:  -0.2498430643859635
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████▎          |  ETA: 0:00:02[K
  iterations:                    7835
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8947435168188483
  log_density:                   -12.700345377977872
  hamiltonian_energy:            16.479633881416795
  hamiltonian_energy_error:      0.011623127048277837
  max_hamiltonian_energy_error:  0.22642375742722365
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▌         |  ETA: 0:00:02[K
  iterations:                    8319
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.867947117068594
  log_density:                   -18.038713378295903
  hamiltonian_energy:            28.099182006691343
  hamiltonian_energy_error:      0.04431910243219406
  max_hamiltonian_energy_error:  0.4126878260324567
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▊        |  ETA: 0:00:02[K
  iterations:                    8789
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9195602836573126
  log_density:                   -11.763960926915559
  hamiltonian_energy:            12.732170801736313
  hamiltonian_energy_error:      0.1589667009432585
  max_hamiltonian_energy_error:  0.1739232248627598
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|███████████████████████▉       |  ETA: 0:00:01[K
  iterations:                    9258
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9340796179849831
  log_density:                   -14.336302636061045
  hamiltonian_energy:            25.820700386069056
  hamiltonian_energy_error:      -0.4984218795456883
  max_hamiltonian_energy_error:  -0.5300625416383227
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 81%|█████████████████████████▏     |  ETA: 0:00:01[K
  iterations:                    9732
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8701996608207134
  log_density:                   -15.525311127240222
  hamiltonian_energy:            19.441889542603565
  hamiltonian_energy_error:      0.2157861823295839
  max_hamiltonian_energy_error:  0.2157861823295839
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▍    |  ETA: 0:00:01[K
  iterations:                    10204
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9861242340409119
  log_density:                   -13.532704299662779
  hamiltonian_energy:            15.49766956580131
  hamiltonian_energy_error:      0.04331936442398643
  max_hamiltonian_energy_error:  -0.17469081282370702
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▋   |  ETA: 0:00:01[K
  iterations:                    10678
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7810043408382197
  log_density:                   -20.538212869116684
  hamiltonian_energy:            23.338197837986392
  hamiltonian_energy_error:      0.47575221086576747
  max_hamiltonian_energy_error:  0.47575221086576747
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|████████████████████████████▉  |  ETA: 0:00:00[K
  iterations:                    11188
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9348779336830523
  log_density:                   -14.239154709937363
  hamiltonian_energy:            20.807442483816324
  hamiltonian_energy_error:      -0.07956317778329591
  max_hamiltonian_energy_error:  0.1772014326994089
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████▏|  ETA: 0:00:00[K
  iterations:                    11651
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9528482948634046
  log_density:                   -15.133484956731994
  hamiltonian_energy:            17.97371316918361
  hamiltonian_energy_error:      0.06722260861552343
  max_hamiltonian_energy_error:  -0.37363013743219753
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9370330460426926
  log_density:                   -15.559579496323654
  hamiltonian_energy:            23.012702889588855
  hamiltonian_energy_error:      -0.07969329061667452
  max_hamiltonian_energy_error:  0.18061321938417407
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6324849327268752
  nom_step_size:                 0.6324849327268752
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.024315397300462, 1.03452 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.119316472 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.024315397300462, 1.03452 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.632), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.069601636290057
└   average_acceptance_rate = 0.8867312856753815
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.047293986 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠑⠤⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⠀⠀⢀⡠⠔⠊⢇⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠘⡄⠀⠀⠀⡰⠁⠀⠀⠀⠈⢆│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⢀⠤⣀⣀⡠⠎⠀⠀⠘⢆⠀⢠⠃⠀⠀⠀⠀⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠇⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⢀⡀⠀⠀⡰⠃⠀⠀⠀⠀⠀⢀⡠⠔⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢠⠊⠑⣄⡜⠀⠀⠀⢀⣀⠤⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠣⡀⡠⠋⠑⠒⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
