Julia Version 1.5.0-DEV.570
Commit c9805191e3 (2020-04-04 00:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.5
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.5
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_HkIqjV/Project.toml`
   9b8138ad TransformUtils v0.2.5
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_HkIqjV/Manifest.toml`
   9b8138ad TransformUtils v0.2.5
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.06261845147368916 0.09021885688111875; -0.06261845147368916 0.0 0.15550371806245694; -0.09021885688111875 -0.15550371806245694 0.0])
dAA = so3([0.0 -0.06044232598188967 -0.06494152343098289; 0.06044232598188967 0.0 -0.0458670856440338; 0.06494152343098289 0.0458670856440338 0.0])
dAA = so3([0.0 -0.08008390666863731 -0.017790037449444525; 0.08008390666863731 0.0 0.03601180699986272; 0.017790037449444525 -0.03601180699986272 0.0])
dAA = Quaternion(0.998094974137788, [-0.033350340391166876, -0.049940350329087925, 0.014147042294755371])
dAA = SO3([0.9858237459246302 0.15503787737053734 0.06414669556234628; -0.15389046624587385 0.9878319881404856 -0.022487498861440733; -0.06685257190084512 0.012297145475839766 0.9976870821271508])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9755316478901914 -0.1588008147747194 -0.15205362603875286; 0.14028058852006248 0.9821024429699511 -0.1256827275202083; 0.16929075712841665 0.10127730614179696 0.9803486863415222]), [-1.5550371806245693, 0.9021885688111874, -0.6261845147368916])
xj = SE3(SO3([0.9665529335722358 -0.05709349143713078 -0.25003151769011717; 0.09902112016316034 0.9823867020815799 0.15846509184962557; 0.2365803127154457 -0.17792330035381984 0.9551822102754356]), [-0.3601180699986272, -0.17790037449444523, 0.8008390666863731])
Dx = SE3(SO3([0.9968445773345014 0.05199250670913373 -0.05998056255905132; -0.03228029259830141 0.9558512804543701 0.2920724436907888; 0.07251807601258917 -0.2892146415723824 0.9545134989886686]), [1.2557477990027301, -1.10598701407521, 1.3530374341920672])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
