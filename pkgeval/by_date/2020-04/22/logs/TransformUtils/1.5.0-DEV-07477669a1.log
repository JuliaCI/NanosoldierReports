Julia Version 1.5.0-DEV.658
Commit 07477669a1 (2020-04-21 14:52 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_qJi1tk/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_qJi1tk/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.15714584115734098 0.009607144512351787; 0.15714584115734098 0.0 0.0509374502923355; -0.009607144512351787 -0.0509374502923355 0.0])
dAA = so3([0.0 0.07323016806064685 0.05290580806149541; -0.07323016806064685 0.0 0.17694612924184858; -0.05290580806149541 -0.17694612924184858 0.0])
dAA = so3([0.0 0.09163993625668874 0.11258569154728532; -0.09163993625668874 0.0 0.29449262109048396; -0.11258569154728532 -0.29449262109048396 0.0])
dAA = Quaternion(0.999048079257265, [-0.008293932385242573, 0.03738914472981265, 0.020885350711248432])
dAA = SO3([0.9962339554455979 -0.007900226818384988 -0.08634519345879553; 0.013555815959814137 0.9977859424623985 0.06511108106986972; 0.0856396279235402 -0.06603634938911727 0.9941353301681197])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9750147912250079 0.14698222622106796 0.16656044568730297; -0.20429847056272324 0.8877348667737893 0.41253962384218873; -0.087225522745274 -0.43626027952269647 0.8955828698074748]), [-0.509374502923355, 0.09607144512351787, 1.5714584115734096])
xj = SE3(SO3([0.9771394978527043 -0.10580567231395153 0.18440054620948831; 0.09876556631693761 0.9940011070374222 0.04698044400038994; -0.18826514453360593 -0.027694023083905398 0.9817276997412107]), [-2.9449262109048395, 1.125856915472853, -0.9163993625668874])
Dx = SE3(SO3([0.9489693350004101 -0.3038193757665948 0.08456351540514183; 0.3134323801577432 0.8789396893170363 -0.35947901971036317; 0.03489046141183816 0.3676395101890823 0.9293136425612187]), [-2.3680778418100807, 1.6415471831696673, -2.2089220724372054])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
