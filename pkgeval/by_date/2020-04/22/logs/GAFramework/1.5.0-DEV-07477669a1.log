Julia Version 1.5.0-DEV.658
Commit 07477669a1 (2020-04-21 14:52 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_DnKMYn/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_DnKMYn/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722111769761415
curgen: 20 fitness: 0.21723117418606178
curgen: 30 fitness: 0.21723117418606178
curgen: 40 fitness: 0.21723117418606178
curgen: 50 fitness: 0.21723117418606178
CoordinateCreature{Array{Float64,1}}([-0.2227837423926248], -0.21723117418606178) -0.2227837423926248 -0.21723117418606178
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.25764366889794
curgen: 100 fitness: 3.2582191169638928
curgen: 150 fitness: 3.258367878762003
curgen: 200 fitness: 3.2583826604408417
curgen: 250 fitness: 3.2583957845007596
curgen: 300 fitness: 3.258410881395311
curgen: 350 fitness: 3.258451879044087
curgen: 400 fitness: 3.2584707838335705
curgen: 450 fitness: 3.2584707838335705
curgen: 500 fitness: 3.2584760050061785
CoordinateCreature{Array{Float64,1}}([-0.2223909119420453, -0.22271951180740943, 0.22225847461420126, 0.22236237606665818, 0.22281500071466162, 0.22262003715508913, 0.2225984566288289, 0.22280861933868693, -0.22267788383248505, 0.2226808021770897, 0.22247641940570045, 0.2223742019277062, -0.2223509520213713, -0.22208833861265187, -0.2225058918526739], -3.2584760050061785) [-0.2223909119420453, -0.22271951180740943, 0.22225847461420126, 0.22236237606665818, 0.22281500071466162, 0.22262003715508913, 0.2225984566288289, 0.22280861933868693, -0.22267788383248505, 0.2226808021770897, 0.22247641940570045, 0.2223742019277062, -0.2223509520213713, -0.22208833861265187, -0.2225058918526739] -3.2584760050061785
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002013592449969792
curgen: 100 fitness: -0.00176954179448785
curgen: 150 fitness: -0.001749158239448434
curgen: 200 fitness: -0.0016964856993411104
curgen: 250 fitness: -0.0016524719493702378
curgen: 300 fitness: -0.0012658532092473251
curgen: 350 fitness: -0.0012658532092473251
curgen: 400 fitness: -0.0005950217190502372
curgen: 450 fitness: -0.0005950217190502372
curgen: 500 fitness: -0.0005846317363875642
CoordinateCreature{Array{Float64,1}}([0.00018851962790578797, -4.508530647264982e-5, -0.0004218006775856143, -2.9475887535277448e-5, -0.0003614730251242223, -7.87028446041524e-5, 0.0006379814831866113, 0.000902171600640054, -0.00014751608686286468, -0.00023873387903827412, -0.0008925903850014894, 0.0002327488048420315, 0.0002581385850802865, -0.00046953900274623384, -0.00039491846002158784], 0.0005846317363875642) [0.00018851962790578797, -4.508530647264982e-5, -0.0004218006775856143, -2.9475887535277448e-5, -0.0003614730251242223, -7.87028446041524e-5, 0.0006379814831866113, 0.000902171600640054, -0.00014751608686286468, -0.00023873387903827412, -0.0008925903850014894, 0.0002327488048420315, 0.0002581385850802865, -0.00046953900274623384, -0.00039491846002158784] 0.0005846317363875642
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
