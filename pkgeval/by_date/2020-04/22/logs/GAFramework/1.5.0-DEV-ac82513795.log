Julia Version 1.5.0-DEV.662
Commit ac82513795 (2020-04-22 15:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_xMQzCa/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_xMQzCa/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21719993542816016
curgen: 20 fitness: 0.21723322633816047
curgen: 30 fitness: 0.21723322633816047
curgen: 40 fitness: 0.21723322633816047
curgen: 50 fitness: 0.21723322633816047
CoordinateCreature{Array{Float64,1}}([0.22245291829841052], -0.21723322633816047) 0.22245291829841052 -0.21723322633816047
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.25803275204885
curgen: 100 fitness: 3.258215814747851
curgen: 150 fitness: 3.2582532621258062
curgen: 200 fitness: 3.2582651902687996
curgen: 250 fitness: 3.2583641506899697
curgen: 300 fitness: 3.258374048218896
curgen: 350 fitness: 3.258374683187288
curgen: 400 fitness: 3.258401177230944
curgen: 450 fitness: 3.258401177230944
curgen: 500 fitness: 3.258426314139242
CoordinateCreature{Array{Float64,1}}([0.22215437739333455, -0.22250878199411464, 0.22256817716606794, 0.22212809544212492, -0.22277014931921935, -0.22255699428322362, 0.2226485615379109, 0.22220629649244386, 0.22237789499721533, 0.22226750806618645, 0.22257705587508575, -0.22208497691898624, -0.2224048382503469, 0.22307216646818775, 0.22334699659813287], -3.258426314139242) [0.22215437739333455, -0.22250878199411464, 0.22256817716606794, 0.22212809544212492, -0.22277014931921935, -0.22255699428322362, 0.2226485615379109, 0.22220629649244386, 0.22237789499721533, 0.22226750806618645, 0.22257705587508575, -0.22208497691898624, -0.2224048382503469, 0.22307216646818775, 0.22334699659813287] -3.258426314139242
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.005760254722446234
curgen: 100 fitness: -0.005760254722446234
curgen: 150 fitness: -0.00224956898202322
curgen: 200 fitness: -0.002027529289790664
curgen: 250 fitness: -0.001739223125667877
curgen: 300 fitness: -0.0017344741793010598
curgen: 350 fitness: -0.0017279762150224087
curgen: 400 fitness: -0.001568835723759321
curgen: 450 fitness: -0.0009298145616583042
curgen: 500 fitness: -0.0009298145616583042
CoordinateCreature{Array{Float64,1}}([-0.00047365946720936774, 0.00027372889559812175, 0.0005449010190619823, 0.00025062587669039593, 0.0008077197101518805, 0.0005568205751501883, -0.0004216931855944919, -3.3814924434421494e-5, 7.367823731379967e-6, 1.3853018565553369e-6, 0.0012270554774574624, 0.0003922547369428854, 0.00014469597729970625, 0.0010980141461035937, 1.3020910960670484e-5], 0.0009298145616583042) [-0.00047365946720936774, 0.00027372889559812175, 0.0005449010190619823, 0.00025062587669039593, 0.0008077197101518805, 0.0005568205751501883, -0.0004216931855944919, -3.3814924434421494e-5, 7.367823731379967e-6, 1.3853018565553369e-6, 0.0012270554774574624, 0.0003922547369428854, 0.00014469597729970625, 0.0010980141461035937, 1.3020910960670484e-5] 0.0009298145616583042
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
