Julia Version 1.5.0-DEV.667
Commit a8275e544a (2020-04-23 15:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed InvertedIndices ───────────── v1.0.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed DataAPI ───────────────────── v1.2.0
  Installed OrderedCollections ────────── v1.1.0
  Installed KCenters ──────────────────── v0.2.2
  Installed DataStructures ────────────── v0.17.13
  Installed JSON ──────────────────────── v0.21.0
  Installed DataFrames ────────────────── v0.20.2
  Installed PooledArrays ──────────────── v0.5.3
  Installed LearnBase ─────────────────── v0.2.2
  Installed MappedArrays ──────────────── v0.2.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed StatsBase ─────────────────── v0.32.2
  Installed MLDataUtils ───────────────── v0.5.1
  Installed TableTraits ───────────────── v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed CategoricalArrays ─────────── v0.7.7
  Installed SimilaritySearch ──────────── v0.3.19
  Installed MLDataPattern ─────────────── v0.5.1
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed Compat ────────────────────── v3.8.0
  Installed Parsers ───────────────────── v1.0.2
  Installed Missings ──────────────────── v0.4.3
  Installed Tables ────────────────────── v1.0.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.8.0
  [9a962f9c] + DataAPI v1.2.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.13
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.1
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.2
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_jo1rhW/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_jo1rhW/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.8.0
  [9a962f9c] DataAPI v1.2.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.13
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.1
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.2
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9360659371813138
[ Info: 0.8326150393486023
[ Info: 0.5571489485601584
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32312113923331104
mean(cdnet.distances) = 0.4048400852580865
mean(crand.distances) = 0.3365861615041892
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3369140625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3369140625,"f1":null,"seconds":2.4568289518356323e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.1015625,"distances_sum":984.9248737006641}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1552734375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1552734375,"f1":null,"seconds":8.009374141693115e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":4.9921875,"distances_sum":472.01411163477957}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3369140625,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.3369140625,"f1":null,"seconds":2.4568289518356323e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.1015625,"distances_sum":984.9248737006641}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8939024517149526,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8671875,"distances_sum":2524.723694169157}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.8939024517149526,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8671875,"distances_sum":2524.723694169157}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9591746794871799,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8671875,"distances_sum":3037.2911229110982}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9641769688644695,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.859375,"distances_sum":3066.5622682764724}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9641769688644695,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.859375,"distances_sum":3066.5622682764724}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9641769688644695,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.859375,"distances_sum":3066.5622682764724}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7842728452103459,"seconds":3.3210963010787964e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":7.984375,"distances_sum":1785.682724175433}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3203125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3203125,"f1":null,"seconds":2.0973384380340576e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":4.90625,"distances_sum":859.8943300850293}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.498046875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.498046875,"f1":0.6500575813075817,"seconds":2.5797635316848755e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":6.546875,"distances_sum":1385.438402651728}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6591796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6591796875,"f1":0.7842728452103459,"seconds":3.3210963010787964e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":7.984375,"distances_sum":1785.682724175433}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9388335622710626,"seconds":3.7942081689834595e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.7578125,"distances_sum":2694.926199096601}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9360405219780223,"seconds":3.5446137189865112e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.6875,"distances_sum":2685.4034409330025}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7255859375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7255859375,"f1":0.8300813769563778,"seconds":3.2838433980941772e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.296875,"distances_sum":1979.858616946442}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8700710747585757,"seconds":4.98257577419281e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.5078125,"distances_sum":2186.1686078845833}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9388335622710626,"seconds":3.7942081689834595e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.7578125,"distances_sum":2694.926199096601}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9537431318681328,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.796875,"distances_sum":2788.2787950364377}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9775125915750917,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.90625,"distances_sum":2968.595722740006}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9510473901098909,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.765625,"distances_sum":2755.5387891142664}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9416037087912092,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.75,"distances_sum":2685.112229791652}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9775125915750917,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.90625,"distances_sum":2968.595722740006}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9775125915750917,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.90625,"distances_sum":2968.595722740006}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7894584582084592,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.5234375,"distances_sum":1824.7843960965272}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6919691419691426,"seconds":3.1087547540664673e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.0625,"distances_sum":1416.4986537280627}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6669921875,"f1":0.7894584582084592,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.5234375,"distances_sum":1824.7843960965272}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8389199342324352,"seconds":3.0528753995895386e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.8125,"distances_sum":2089.2397855927384}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7945273476523484,"seconds":2.8405338525772095e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.625,"distances_sum":1877.6992625411403}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9218723984348993,"seconds":3.4514814615249634e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.53125,"distances_sum":2544.3078154934447}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9233261530136535,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.4921875,"distances_sum":2530.202172076173}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9218723984348993,"seconds":3.4514814615249634e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.53125,"distances_sum":2544.3078154934447}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9767857142857148,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.890625,"distances_sum":2946.6335254117753}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9623168498168504,"seconds":3.4794211387634277e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8203125,"distances_sum":2828.9791474394633}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564789377289382,"seconds":3.4533441066741943e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.796875,"distances_sum":2771.050702500685}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9422161172161179,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.75,"distances_sum":2674.282252710859}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9606456043956051,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.78125,"distances_sum":2820.094549033844}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9414694680319684,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6171875,"distances_sum":2718.293348082063}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9767857142857148,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.890625,"distances_sum":2946.6335254117753}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9767857142857148,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.890625,"distances_sum":2946.6335254117753}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.863367882117883,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.1875,"distances_sum":2261.873116007234}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.38671875,"f1":null,"seconds":2.4121254682540894e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.3046875,"distances_sum":1024.8800320334592}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.863367882117883,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.1875,"distances_sum":2261.873116007234}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9211423992673999,"seconds":3.516674041748047e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4609375,"distances_sum":2677.9849994756955}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.896094010156511,"seconds":3.3657997846603394e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4609375,"distances_sum":2465.148419028165}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.865234375,"f1":0.9211423992673999,"seconds":3.516674041748047e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4609375,"distances_sum":2677.9849994756955}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9206647519147528,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.484375,"distances_sum":2662.8253689470685}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9434065934065939,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.796875,"distances_sum":2781.0203459973895}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9628751456876462,"seconds":6.2230974435806274e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8828125,"distances_sum":2910.4599680483952}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9628751456876462,"seconds":6.2230974435806274e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8828125,"distances_sum":2910.4599680483952}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9628751456876462,"seconds":6.2230974435806274e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8828125,"distances_sum":2910.4599680483952}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7109619547119552,"seconds":2.9262155294418335e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":7.3125,"distances_sum":1443.6556171105456}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8458224067599076,"seconds":3.432855010032654e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.578125,"distances_sum":2066.3867129301602}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8458224067599076,"seconds":3.432855010032654e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.578125,"distances_sum":2066.3867129301602}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8593521062271071,"seconds":3.417953848838806e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.6328125,"distances_sum":2158.1870731914155}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9018434690309699,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.7421875,"distances_sum":2419.4149585976693}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.833984375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.9018434690309699,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.7421875,"distances_sum":2419.4149585976693}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9546188186813194,"seconds":6.515532732009888e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.828125,"distances_sum":2879.5531224888746}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9328582875457883,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.7421875,"distances_sum":2670.8699840010104}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9343635531135537,"seconds":6.154179573059082e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.703125,"distances_sum":2675.1251804383064}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.952369505494506,"seconds":6.584450602531433e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.859375,"distances_sum":2862.8731627337875}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9478479853479856,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.875,"distances_sum":2791.672769371764}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9071803196803205,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.625,"distances_sum":2463.253409036994}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9546188186813194,"seconds":6.515532732009888e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.828125,"distances_sum":2879.5531224888746}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9546188186813194,"seconds":6.515532732009888e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.828125,"distances_sum":2879.5531224888746}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8561568639693649,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.421875,"distances_sum":2122.858181258227}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8561568639693649,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.421875,"distances_sum":2122.858181258227}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8783065892440902,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.3984375,"distances_sum":2317.075208213006}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9410771520146528,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7421875,"distances_sum":2688.092548820866}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9410771520146528,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7421875,"distances_sum":2688.092548820866}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9562900641025648,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.84375,"distances_sum":2844.650264002947}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9648122710622715,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8671875,"distances_sum":2891.7867666893103}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9504349816849823,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8203125,"distances_sum":2802.121103642792}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9648122710622715,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8671875,"distances_sum":2891.7867666893103}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9648122710622715,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8671875,"distances_sum":2891.7867666893103}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.166015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.166015625,"f1":null,"seconds":1.9408762454986572e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":4.6015625,"distances_sum":311.99490157774073}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.166015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.166015625,"f1":null,"seconds":1.9408762454986572e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":4.6015625,"distances_sum":311.99490157774073}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.789135864135865,"seconds":3.1776726245880127e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":7.15625,"distances_sum":1396.7226128024447}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":2.4959444999694824e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":6.0,"distances_sum":809.7299923870934}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.38671875,"f1":null,"seconds":2.505257725715637e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":5.7421875,"distances_sum":766.7699613192809}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6708984375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6708984375,"f1":0.789135864135865,"seconds":3.1776726245880127e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":7.15625,"distances_sum":1396.7226128024447}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.8403762903762912,"seconds":3.4868717193603516e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.1875,"distances_sum":1559.0304393078147}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7333984375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7333984375,"f1":0.8396525349650358,"seconds":3.458932042121887e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.1796875,"distances_sum":1598.7457129849984}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8771697052947062,"seconds":3.7178397178649902e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.4609375,"distances_sum":1803.489670974452}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8897924991674999,"seconds":3.902241587638855e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.6328125,"distances_sum":1861.1357179056665}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.810546875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.810546875,"f1":0.8897924991674999,"seconds":3.902241587638855e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.6328125,"distances_sum":1861.1357179056665}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8915553196803204,"seconds":3.634020686149597e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.5234375,"distances_sum":1875.873828514465}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9167155760905769,"seconds":3.958120942115784e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.6015625,"distances_sum":2028.0863651167317}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8564453125,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.8564453125,"f1":0.9167155760905769,"seconds":3.958120942115784e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.6015625,"distances_sum":2028.0863651167317}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8564453125,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.8564453125,"f1":0.9167155760905769,"seconds":3.958120942115784e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.6015625,"distances_sum":2028.0863651167317}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.248046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.248046875,"f1":null,"seconds":2.0172446966171265e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":6.515625,"distances_sum":497.78115393295127}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.248046875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.248046875,"f1":null,"seconds":2.0172446966171265e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":6.515625,"distances_sum":497.78115393295127}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5654296875,"f1":null,"seconds":2.7082860469818115e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.0703125,"distances_sum":1138.8016913550573}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2705078125, conf: {"ssize":6,"bsize":1}, perf: {"precision":null,"recall":0.2705078125,"f1":null,"seconds":2.080574631690979e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":6.90625,"distances_sum":528.568798918018}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5654296875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5654296875,"f1":null,"seconds":2.7082860469818115e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.0703125,"distances_sum":1138.8016913550573}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7975814116439125,"seconds":2.993270754814148e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.28125,"distances_sum":1381.6824066808288}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.677734375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.677734375,"f1":0.7975814116439125,"seconds":2.993270754814148e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.28125,"distances_sum":1381.6824066808288}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.677734375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.677734375,"f1":0.7975814116439125,"seconds":2.993270754814148e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.28125,"distances_sum":1381.6824066808288}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.375,"f1":null,"seconds":2.1532177925109863e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":5.7734375,"distances_sum":815.5276371067285}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.375,"f1":null,"seconds":2.1532177925109863e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":5.7734375,"distances_sum":815.5276371067285}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.62109375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.62109375,"f1":0.753394522144523,"seconds":2.9224902391433716e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.2265625,"distances_sum":1392.9259110120768}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.62109375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.62109375,"f1":0.753394522144523,"seconds":2.9224902391433716e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.2265625,"distances_sum":1392.9259110120768}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8851258116883124,"seconds":3.4533441066741943e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.4609375,"distances_sum":1989.3770069385964}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.62890625, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.62890625,"f1":0.7595085470085476,"seconds":2.93925404548645e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.1875,"distances_sum":1417.4306637608138}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8076171875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8076171875,"f1":0.8851258116883124,"seconds":3.4533441066741943e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.4609375,"distances_sum":1989.3770069385964}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8076171875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8076171875,"f1":0.8851258116883124,"seconds":3.4533441066741943e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.4609375,"distances_sum":1989.3770069385964}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1865234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1865234375,"f1":null,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":5.1640625,"distances_sum":482.15052073017284}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1865234375,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.1865234375,"f1":null,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":5.1640625,"distances_sum":482.15052073017284}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3525390625, conf: {"ssize":6,"bsize":2}, perf: {"precision":null,"recall":0.3525390625,"f1":null,"seconds":3.8780272006988525e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":6.2109375,"distances_sum":825.7886123704111}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.525390625,"f1":0.6759441946941953,"seconds":4.5318156480789185e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":7.015625,"distances_sum":1229.430714642549}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.525390625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.525390625,"f1":0.6759441946941953,"seconds":4.5318156480789185e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":7.015625,"distances_sum":1229.430714642549}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8578709484959496,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.5078125,"distances_sum":1927.7625703124827}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9189165001665007,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.7578125,"distances_sum":2284.1515036284436}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8432983682983689,"seconds":4.980713129043579e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.3671875,"distances_sum":1862.388382969098}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8719899891774898,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.5703125,"distances_sum":1977.1119140364017}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":10,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8595555486180495,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.46875,"distances_sum":1920.6222180843104}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8623046875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9189165001665007,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.7578125,"distances_sum":2284.1515036284436}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8623046875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9189165001665007,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.7578125,"distances_sum":2284.1515036284436}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7774995837495846,"seconds":4.498288035392761e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.3828125,"distances_sum":1510.6688487645117}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2001953125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2001953125,"f1":null,"seconds":2.8274953365325928e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":4.59375,"distances_sum":538.5065558592996}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6513671875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6513671875,"f1":0.7774995837495846,"seconds":4.498288035392761e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.3828125,"distances_sum":1510.6688487645117}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9375660797535802,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7421875,"distances_sum":2342.8057369102003}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8442770770895779,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.2265625,"distances_sum":1809.1113559167952}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9375660797535802,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7421875,"distances_sum":2342.8057369102003}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9559008699633704,"seconds":4.706904292106628e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7734375,"distances_sum":2450.3048100787614}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9446517024642029,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6640625,"distances_sum":2426.34786648443}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9559008699633704,"seconds":4.706904292106628e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7734375,"distances_sum":2450.3048100787614}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9559008699633704,"seconds":4.706904292106628e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7734375,"distances_sum":2450.3048100787614}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5078125,"f1":null,"seconds":2.5276094675064087e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":6.359375,"distances_sum":1347.4685127978673}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5078125,"f1":null,"seconds":2.5276094675064087e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":6.359375,"distances_sum":1347.4685127978673}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8340992340992348,"seconds":3.0584633350372314e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.8359375,"distances_sum":2081.989927133192}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7314453125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7314453125,"f1":0.8340992340992348,"seconds":3.0584633350372314e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.8359375,"distances_sum":2081.989927133192}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9211829836829846,"seconds":4.708766937255859e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.625,"distances_sum":2628.1000940557515}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.8997861513486521,"seconds":5.057081580162048e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.5234375,"distances_sum":2474.4461828428384}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8642578125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8642578125,"f1":0.9211829836829846,"seconds":4.708766937255859e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.625,"distances_sum":2628.1000940557515}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8642578125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8642578125,"f1":0.9211829836829846,"seconds":4.708766937255859e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.625,"distances_sum":2628.1000940557515}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3818359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3818359375,"f1":null,"seconds":2.6579946279525757e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.03125,"distances_sum":1020.9414673461364}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1787109375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1787109375,"f1":null,"seconds":1.7900019884109497e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.1328125,"distances_sum":508.41785039876083}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3818359375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3818359375,"f1":null,"seconds":2.6579946279525757e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.03125,"distances_sum":1020.9414673461364}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7841864732489737,"seconds":3.6247074604034424e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.7734375,"distances_sum":1768.0044157514874}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7161220723720729,"seconds":2.825632691383362e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.1953125,"distances_sum":1472.7047592170566}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6630859375,"f1":0.7841864732489737,"seconds":3.6247074604034424e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.7734375,"distances_sum":1768.0044157514874}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9420704295704302,"seconds":6.1355531215667725e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8515625,"distances_sum":2817.186929708047}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.789924485236986,"seconds":4.623085260391235e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.71875,"distances_sum":1828.9856752787562}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8475774225774235,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.296875,"distances_sum":2130.985905823242}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9202183233433241,"seconds":6.418675184249878e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.828125,"distances_sum":2593.6393854192715}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8528794122544131,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.2109375,"distances_sum":2171.696943914195}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9420704295704302,"seconds":6.1355531215667725e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8515625,"distances_sum":2817.186929708047}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8994140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9420704295704302,"seconds":6.1355531215667725e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8515625,"distances_sum":2817.186929708047}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.787968108280609,"seconds":4.641711711883545e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8125,"distances_sum":1844.6364873981197}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.671875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.671875,"f1":0.787968108280609,"seconds":4.641711711883545e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8125,"distances_sum":1844.6364873981197}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.954550137362638,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2905.6369175108803}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.954550137362638,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2905.6369175108803}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9756524725274729,"seconds":4.978850483894348e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":3081.8873106782244}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9706501831501836,"seconds":4.295259714126587e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.90625,"distances_sum":3052.900914409647}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9756524725274729,"seconds":4.978850483894348e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":3081.8873106782244}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9756524725274729,"seconds":4.978850483894348e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":3081.8873106782244}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8368033008658017,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.1875,"distances_sum":2126.7757902451267}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73828125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.73828125,"f1":0.8368033008658017,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.1875,"distances_sum":2126.7757902451267}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8563790376290384,"seconds":6.9607049226760864e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.34375,"distances_sum":2239.6789730716005}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8965232683982691,"seconds":8.633360266685486e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.84375,"distances_sum":2441.3772740439817}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9406681859806866,"seconds":8.942559361457825e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9296875,"distances_sum":2777.1796340805713}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9406681859806866,"seconds":8.942559361457825e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9296875,"distances_sum":2777.1796340805713}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9743875915750918,"seconds":8.530914783477783e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9609375,"distances_sum":3101.148777146588}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9629693223443229,"seconds":1.0149553418159485e-5,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.890625,"distances_sum":3021.6676070987987}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9529475732600738,"seconds":1.1403113603591919e-5,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.921875,"distances_sum":2896.9909487889763}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9743875915750918,"seconds":8.530914783477783e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9609375,"distances_sum":3101.148777146588}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9743875915750918,"seconds":8.530914783477783e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9609375,"distances_sum":3101.148777146588}}, n: 9
mean(cfft.distances) = 0.32312113883507093
mean(cdnet.distances) = 0.38419878071102453
mean(crand.distances) = 0.34247718088789886
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8688888888888889
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8733333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8666666666666667
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8577777777777778
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9266666666666666
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8533333333333334
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9444444444444443
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9488888888888889
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9177777777777778
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8666666666666666
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8755555555555555
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9044444444444445
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8466666666666667
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9111111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9066666666666667
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8266666666666667
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9133333333333332
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9155555555555556
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9066666666666667
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 10, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 12, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 3, 2, 3, 3, 2, 3, 2, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 10, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 12, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 3, 2, 3, 3, 2, 3, 2, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 10, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 12, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 3, 2, 3, 3, 2, 3, 2, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 10, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 12, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 3, 2, 3, 3, 2, 3, 2, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 10, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 12, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 3, 2, 3, 3, 2, 3, 2, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 10, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 12, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 3, 2, 3, 3, 2, 3, 2, 3]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 10, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 12, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 3, 2, 3, 3, 2, 3, 2, 3]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.6522001897295316] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.264939191443538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.264939191443538, 0.23753884018121943] ***
*** starting iteration: 2; err: [Inf, 0.264939191443538, 0.23753884018121943] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.264939191443538, 0.23753884018121943, 0.23639366805676493] ***
*** starting iteration: 3; err: [Inf, 0.264939191443538, 0.23753884018121943, 0.23639366805676493] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.264939191443538, 0.23753884018121943, 0.23639366805676493, 0.23598853627348448] ***
*** finished computation of 3 references, err: [Inf, 0.264939191443538, 0.23753884018121943, 0.23639366805676493, 0.23598853627348448] ***
*** center 1: selecting labels [1] (freq >= 2) [from [218, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [107, 109, 9]]
** centroid: 2, normalized-entropy: 0.7585244556390072, [(1, 107), (2, 109), (3, 9)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [85, 130, 8]]
** centroid: 3, normalized-entropy: 0.7296564882428183, [(1, 85), (2, 130), (3, 8)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4160277890418468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4160277890418468, 0.25754141689849264] ***
*** starting iteration: 2; err: [Inf, 0.4160277890418468, 0.25754141689849264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4160277890418468, 0.25754141689849264, 0.24242777998295278] ***
*** starting iteration: 3; err: [Inf, 0.4160277890418468, 0.25754141689849264, 0.24242777998295278] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4160277890418468, 0.25754141689849264, 0.24242777998295278, 0.2373906688909905] ***
*** finished computation of 3 references, err: [Inf, 0.4160277890418468, 0.25754141689849264, 0.24242777998295278, 0.2373906688909905] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [202, 30, 0]]
** centroid: 1, normalized-entropy: 0.5555437650236148, [(1, 202), (2, 30)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 171, 22]]
** centroid: 2, normalized-entropy: 0.5118338473431631, [(2, 171), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [203, 39, 0]]
** centroid: 3, normalized-entropy: 0.6370703541166671, [(1, 203), (2, 39)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.32750822128546514] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32750822128546514, 0.29229166512161137] ***
*** starting iteration: 2; err: [Inf, 0.32750822128546514, 0.29229166512161137] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32750822128546514, 0.29229166512161137, 0.24972263037616657] ***
*** starting iteration: 3; err: [Inf, 0.32750822128546514, 0.29229166512161137, 0.24972263037616657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32750822128546514, 0.29229166512161137, 0.24972263037616657, 0.2379907064916178] ***
*** finished computation of 3 references, err: [Inf, 0.32750822128546514, 0.29229166512161137, 0.24972263037616657, 0.2379907064916178] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [238, 28, 0]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(1, 238), (2, 28)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 176, 19]]
** centroid: 2, normalized-entropy: 0.4608144797209315, [(2, 176), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [171, 35, 0]]
** centroid: 3, normalized-entropy: 0.6574826357338867, [(1, 171), (2, 35)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2215388648340607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2215388648340607, 0.19661538820299837] ***
*** finished computation of 7 references, err: [Inf, 0.2215388648340607, 0.19661538820299837] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 35, 0]]
** centroid: 1, normalized-entropy: 0.9973487979180449, [(1, 31), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [62, 26, 0]]
** centroid: 2, normalized-entropy: 0.8756633923230399, [(1, 62), (2, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [90, 1, 0]]
** centroid: 3, normalized-entropy: 0.08728058888363333, [(1, 90), (2, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 102, 17]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 102), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [23, 69, 0]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(1, 23), (2, 69)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [116, 6, 0]]
** centroid: 6, normalized-entropy: 0.28290479297989196, [(1, 116), (2, 6)]
*** center 7: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2969767430600343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2969767430600343, 0.21291285366758236] ***
*** finished computation of 7 references, err: [Inf, 0.2969767430600343, 0.21291285366758236] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [76, 15, 0]]
** centroid: 1, normalized-entropy: 0.6457523329916605, [(1, 76), (2, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [135, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [47, 6, 0]]
** centroid: 3, normalized-entropy: 0.5095157180881823, [(1, 47), (2, 6)]
*** center 4: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 110, 22]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 110), (3, 22)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [30, 109, 0]]
** centroid: 7, normalized-entropy: 0.7524748189901224, [(1, 30), (2, 109)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23622847745415645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23622847745415645, 0.20750102822004218] ***
*** finished computation of 7 references, err: [Inf, 0.23622847745415645, 0.20750102822004218] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [30, 86, 0]]
** centroid: 1, normalized-entropy: 0.8246578332945033, [(1, 30), (2, 86)]
*** center 2: selecting labels [1] (freq >= 1) [from [139, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [67, 4, 0]]
** centroid: 3, normalized-entropy: 0.3127333763966432, [(1, 67), (2, 4)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 22, 13]]
** centroid: 4, normalized-entropy: 0.9517626756348312, [(2, 22), (3, 13)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 58, 6]]
** centroid: 5, normalized-entropy: 0.44886448872302936, [(2, 58), (3, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [133, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [40, 69, 0]]
** centroid: 7, normalized-entropy: 0.9483190833715304, [(1, 40), (2, 69)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34009690853199354] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34009690853199354, 0.30675050636401047] ***
*** finished computation of 3 references, err: [Inf, 0.34009690853199354, 0.30675050636401047] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [394, 51, 0]]
** centroid: 1, normalized-entropy: 0.5136567858394714, [(1, 394), (2, 51)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [16, 174, 0]]
** centroid: 2, normalized-entropy: 0.4168441963431652, [(1, 16), (2, 174)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 17]]
** centroid: 3, normalized-entropy: 0.9932338197397066, [(2, 14), (3, 17)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2645081076051934] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2645081076051934, 0.2338367103594823] ***
*** finished computation of 3 references, err: [Inf, 0.2645081076051934, 0.2338367103594823] ***
*** center 1: selecting labels [1] (freq >= 2) [from [177, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [126, 63, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 126), (2, 63)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [102, 177, 22]]
** centroid: 3, normalized-entropy: 0.7920337041771957, [(1, 102), (2, 177), (3, 22)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.28557065441768836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28557065441768836, 0.2447492303361633] ***
*** finished computation of 3 references, err: [Inf, 0.28557065441768836, 0.2447492303361633] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [152, 86, 0]]
** centroid: 1, normalized-entropy: 0.9437935996617022, [(1, 152), (2, 86)]
*** center 2: selecting labels [1] (freq >= 2) [from [232, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [25, 153, 19]]
** centroid: 3, normalized-entropy: 0.6224645370445305, [(1, 25), (2, 153), (3, 19)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.26915276238789876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26915276238789876, 0.23551548140084333] ***
*** starting iteration: 2; err: [Inf, 0.26915276238789876, 0.23551548140084333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26915276238789876, 0.23551548140084333, 0.20333528416315177] ***
*** starting iteration: 3; err: [Inf, 0.26915276238789876, 0.23551548140084333, 0.20333528416315177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26915276238789876, 0.23551548140084333, 0.20333528416315177, 0.1962610751868704] ***
*** finished computation of 7 references, err: [Inf, 0.26915276238789876, 0.23551548140084333, 0.20333528416315177, 0.1962610751868704] ***
*** center 1: selecting labels [1] (freq >= 1) [from [121, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 70, 17]]
** centroid: 2, normalized-entropy: 0.7126368350739763, [(2, 70), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [98, 39, 0]]
** centroid: 3, normalized-entropy: 0.8617382781509058, [(1, 98), (2, 39)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [12, 66, 0]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(1, 12), (2, 66)]
*** center 5: selecting labels [1] (freq >= 1) [from [120, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 56, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [59, 8, 0]]
** centroid: 7, normalized-entropy: 0.52764232609436, [(1, 59), (2, 8)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24903601523198332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24903601523198332, 0.19548614773301706] ***
*** starting iteration: 2; err: [Inf, 0.24903601523198332, 0.19548614773301706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24903601523198332, 0.19548614773301706, 0.19213922763371777] ***
*** starting iteration: 3; err: [Inf, 0.24903601523198332, 0.19548614773301706, 0.19213922763371777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24903601523198332, 0.19548614773301706, 0.19213922763371777, 0.1901322074480232] ***
*** finished computation of 7 references, err: [Inf, 0.24903601523198332, 0.19548614773301706, 0.19213922763371777, 0.1901322074480232] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [32, 48, 0]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(1, 32), (2, 48)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 66, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 33), (2, 66)]
*** center 3: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [124, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [2, 60, 0]]
** centroid: 5, normalized-entropy: 0.2055925081850832, [(1, 2), (2, 60)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [116, 2, 0]]
** centroid: 6, normalized-entropy: 0.12394986771100755, [(1, 116), (2, 2)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 64, 22]]
** centroid: 7, normalized-entropy: 0.8203636429576731, [(2, 64), (3, 22)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28695336524592613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28695336524592613, 0.2340971750362233] ***
*** starting iteration: 2; err: [Inf, 0.28695336524592613, 0.2340971750362233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28695336524592613, 0.2340971750362233, 0.22031259492446] ***
*** starting iteration: 3; err: [Inf, 0.28695336524592613, 0.2340971750362233, 0.22031259492446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28695336524592613, 0.2340971750362233, 0.22031259492446, 0.2067423566011363] ***
*** finished computation of 7 references, err: [Inf, 0.28695336524592613, 0.2340971750362233, 0.22031259492446, 0.2067423566011363] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [76, 63, 0]]
** centroid: 1, normalized-entropy: 0.9936811719882037, [(1, 76), (2, 63)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [8, 84, 0]]
** centroid: 2, normalized-entropy: 0.42622865699814483, [(1, 8), (2, 84)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 61, 19]]
** centroid: 3, normalized-entropy: 0.79085809055281, [(2, 61), (3, 19)]
*** center 4: selecting labels [1] (freq >= 1) [from [142, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [65, 1, 0]]
** centroid: 6, normalized-entropy: 0.11327430349709665, [(1, 65), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [49, 30, 0]]
** centroid: 7, normalized-entropy: 0.9578630237479795, [(1, 49), (2, 30)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46475726409952295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46475726409952295, 0.34091687676365356] ***
*** finished computation of 3 references, err: [Inf, 0.46475726409952295, 0.34091687676365356] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [296, 25, 0]]
** centroid: 1, normalized-entropy: 0.3946706055941497, [(1, 296), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [112, 61, 0]]
** centroid: 2, normalized-entropy: 0.9363696793026917, [(1, 112), (2, 61)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [2, 153, 17]]
** centroid: 3, normalized-entropy: 0.35013054021746004, [(1, 2), (2, 153), (3, 17)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.46808589788955235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46808589788955235, 0.33215327948789813] ***
*** finished computation of 3 references, err: [Inf, 0.46808589788955235, 0.33215327948789813] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [236, 3, 0]]
** centroid: 1, normalized-entropy: 0.09727414207464807, [(1, 236), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [74, 153, 0]]
** centroid: 2, normalized-entropy: 0.9107780512181485, [(1, 74), (2, 153)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [95, 84, 22]]
** centroid: 3, normalized-entropy: 0.8747101747202123, [(1, 95), (2, 84), (3, 22)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40771400966825355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40771400966825355, 0.3048825558090675] ***
*** finished computation of 3 references, err: [Inf, 0.40771400966825355, 0.3048825558090675] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [79, 148, 19]]
** centroid: 1, normalized-entropy: 0.7903297145247818, [(1, 79), (2, 148), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [203, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [127, 91, 0]]
** centroid: 3, normalized-entropy: 0.9802381436845116, [(1, 127), (2, 91)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31288872309051474] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31288872309051474, 0.23991829225256503] ***
*** starting iteration: 2; err: [Inf, 0.31288872309051474, 0.23991829225256503] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31288872309051474, 0.23991829225256503, 0.2396160336658806] ***
*** finished computation of 3 references, err: [Inf, 0.31288872309051474, 0.23991829225256503, 0.2396160336658806] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [134, 85, 0]]
** centroid: 1, normalized-entropy: 0.963580753240232, [(1, 134), (2, 85)]
*** center 2: selecting labels [1] (freq >= 2) [from [211, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [65, 154, 17]]
** centroid: 3, normalized-entropy: 0.749303554090793, [(1, 65), (2, 154), (3, 17)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2545016052137161] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2545016052137161, 0.23031664906401952] ***
*** starting iteration: 2; err: [Inf, 0.2545016052137161, 0.23031664906401952] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2545016052137161, 0.23031664906401952, 0.2297763825970879] ***
*** finished computation of 3 references, err: [Inf, 0.2545016052137161, 0.23031664906401952, 0.2297763825970879] ***
*** center 1: selecting labels [1] (freq >= 2) [from [243, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [153, 51, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 153), (2, 51)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [9, 189, 22]]
** centroid: 3, normalized-entropy: 0.447382245503835, [(1, 9), (2, 189), (3, 22)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3042764721195335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3042764721195335, 0.2899568525451547] ***
*** starting iteration: 2; err: [Inf, 0.3042764721195335, 0.2899568525451547] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847] ***
*** starting iteration: 3; err: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895] ***
*** starting iteration: 4; err: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895, 0.24435625975669503] ***
*** starting iteration: 5; err: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895, 0.24435625975669503] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895, 0.24435625975669503, 0.24242452210697835] ***
*** starting iteration: 6; err: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895, 0.24435625975669503, 0.24242452210697835] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895, 0.24435625975669503, 0.24242452210697835, 0.24099790384278058] ***
*** starting iteration: 7; err: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895, 0.24435625975669503, 0.24242452210697835, 0.24099790384278058] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895, 0.24435625975669503, 0.24242452210697835, 0.24099790384278058, 0.23926104440785262] ***
*** starting iteration: 8; err: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895, 0.24435625975669503, 0.24242452210697835, 0.24099790384278058, 0.23926104440785262] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895, 0.24435625975669503, 0.24242452210697835, 0.24099790384278058, 0.23926104440785262, 0.23774864766579204] ***
*** starting iteration: 9; err: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895, 0.24435625975669503, 0.24242452210697835, 0.24099790384278058, 0.23926104440785262, 0.23774864766579204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895, 0.24435625975669503, 0.24242452210697835, 0.24099790384278058, 0.23926104440785262, 0.23774864766579204, 0.23657784733580595] ***
*** starting iteration: 10; err: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895, 0.24435625975669503, 0.24242452210697835, 0.24099790384278058, 0.23926104440785262, 0.23774864766579204, 0.23657784733580595] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895, 0.24435625975669503, 0.24242452210697835, 0.24099790384278058, 0.23926104440785262, 0.23774864766579204, 0.23657784733580595, 0.2356769329891994] ***
*** finished computation of 3 references, err: [Inf, 0.3042764721195335, 0.2899568525451547, 0.27462691107535847, 0.25040907338903895, 0.24435625975669503, 0.24242452210697835, 0.24099790384278058, 0.23926104440785262, 0.23774864766579204, 0.23657784733580595, 0.2356769329891994] ***
*** center 1: selecting labels [1] (freq >= 2) [from [206, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [107, 115, 1]]
** centroid: 2, normalized-entropy: 0.9990630582261156, [(1, 107), (2, 115)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [96, 124, 18]]
** centroid: 3, normalized-entropy: 0.820291482768651, [(1, 96), (2, 124), (3, 18)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.18985577996585284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18985577996585284, 0.17167036875092365] ***
*** finished computation of 7 references, err: [Inf, 0.18985577996585284, 0.17167036875092365] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [45, 79, 0]]
** centroid: 1, normalized-entropy: 0.9450667261866617, [(1, 45), (2, 79)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 70, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [161, 4, 0]]
** centroid: 3, normalized-entropy: 0.1646396846915532, [(1, 161), (2, 4)]
*** center 4: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 38, 17]]
** centroid: 5, normalized-entropy: 0.8921212805771683, [(2, 38), (3, 17)]
*** center 6: selecting labels [1] (freq >= 2) [from [143, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [10, 48, 0]]
** centroid: 7, normalized-entropy: 0.6631968402398286, [(1, 10), (2, 48)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.29949249196280986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29949249196280986, 0.18579419646649503] ***
*** finished computation of 7 references, err: [Inf, 0.29949249196280986, 0.18579419646649503] ***
*** center 1: selecting labels [1] (freq >= 2) [from [203, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [4, 59, 0]]
** centroid: 2, normalized-entropy: 0.3411538931451763, [(1, 4), (2, 59)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [14, 87, 0]]
** centroid: 3, normalized-entropy: 0.5805970961414402, [(1, 14), (2, 87)]
*** center 4: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [85, 52, 0]]
** centroid: 5, normalized-entropy: 0.9577321200770127, [(1, 85), (2, 52)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 7, 12]]
** centroid: 6, normalized-entropy: 0.9494520153879484, [(2, 7), (3, 12)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 35, 10]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23509566342902147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23509566342902147, 0.180764258042609] ***
*** finished computation of 7 references, err: [Inf, 0.23509566342902147, 0.180764258042609] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [37, 111, 11]]
** centroid: 1, normalized-entropy: 0.7053902037588099, [(1, 37), (2, 111), (3, 11)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [78, 15, 0]]
** centroid: 2, normalized-entropy: 0.6373874992221911, [(1, 78), (2, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 6: selecting labels [1, 2, 3] (freq >= 2) [from [20, 107, 8]]
** centroid: 6, normalized-entropy: 0.5776258924362063, [(1, 20), (2, 107), (3, 8)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [84, 6, 0]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(1, 84), (2, 6)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3457587717587615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3457587717587615, 0.23563271083564194] ***
*** starting iteration: 2; err: [Inf, 0.3457587717587615, 0.23563271083564194] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3457587717587615, 0.23563271083564194, 0.23329492452115314] ***
*** starting iteration: 3; err: [Inf, 0.3457587717587615, 0.23563271083564194, 0.23329492452115314] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3457587717587615, 0.23563271083564194, 0.23329492452115314, 0.23272148435222204] ***
*** finished computation of 3 references, err: [Inf, 0.3457587717587615, 0.23563271083564194, 0.23329492452115314, 0.23272148435222204] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [221, 25, 0]]
** centroid: 1, normalized-entropy: 0.474128853429181, [(1, 221), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [189, 31, 0]]
** centroid: 2, normalized-entropy: 0.586614696252951, [(1, 189), (2, 31)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 183, 17]]
** centroid: 3, normalized-entropy: 0.4195564962385472, [(2, 183), (3, 17)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3098800101036812] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3098800101036812, 0.24332353415182684] ***
*** starting iteration: 2; err: [Inf, 0.3098800101036812, 0.24332353415182684] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3098800101036812, 0.24332353415182684, 0.23283209045580971] ***
*** starting iteration: 3; err: [Inf, 0.3098800101036812, 0.24332353415182684, 0.23283209045580971] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3098800101036812, 0.24332353415182684, 0.23283209045580971, 0.23034734086718583] ***
*** starting iteration: 4; err: [Inf, 0.3098800101036812, 0.24332353415182684, 0.23283209045580971, 0.23034734086718583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3098800101036812, 0.24332353415182684, 0.23283209045580971, 0.23034734086718583, 0.22987036044657722] ***
*** finished computation of 3 references, err: [Inf, 0.3098800101036812, 0.24332353415182684, 0.23283209045580971, 0.23034734086718583, 0.22987036044657722] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [240, 5, 0]]
** centroid: 1, normalized-entropy: 0.14372616993938164, [(1, 240), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [164, 35, 0]]
** centroid: 2, normalized-entropy: 0.6709792217977215, [(1, 164), (2, 35)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [1, 200, 22]]
** centroid: 3, normalized-entropy: 0.4661332827241355, [(2, 200), (3, 22)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3455507315917295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3455507315917295, 0.23705642561622334] ***
*** starting iteration: 2; err: [Inf, 0.3455507315917295, 0.23705642561622334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3455507315917295, 0.23705642561622334, 0.2350530311091059] ***
*** starting iteration: 3; err: [Inf, 0.3455507315917295, 0.23705642561622334, 0.2350530311091059] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3455507315917295, 0.23705642561622334, 0.2350530311091059, 0.23453571363680367] ***
*** finished computation of 3 references, err: [Inf, 0.3455507315917295, 0.23705642561622334, 0.2350530311091059, 0.23453571363680367] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [239, 6, 0]]
** centroid: 1, normalized-entropy: 0.1659565426281793, [(1, 239), (2, 6)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 188, 19]]
** centroid: 2, normalized-entropy: 0.4424080837272288, [(2, 188), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [170, 45, 0]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(1, 170), (2, 45)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2353076047093437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353076047093437, 0.1947930002495557] ***
*** finished computation of 7 references, err: [Inf, 0.2353076047093437, 0.1947930002495557] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 115, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [60, 35, 0]]
** centroid: 3, normalized-entropy: 0.9494520153879484, [(1, 60), (2, 35)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [50, 29, 0]]
** centroid: 4, normalized-entropy: 0.9484103893488014, [(1, 50), (2, 29)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [130, 3, 0]]
** centroid: 5, normalized-entropy: 0.15556286259996727, [(1, 130), (2, 3)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [94, 6, 0]]
** centroid: 6, normalized-entropy: 0.3274449191544762, [(1, 94), (2, 6)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 51, 17]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 51), (3, 17)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.25377137544725475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25377137544725475, 0.19216830778665941] ***
*** finished computation of 7 references, err: [Inf, 0.25377137544725475, 0.19216830778665941] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 114, 22]]
** centroid: 1, normalized-entropy: 0.6385146263620961, [(2, 114), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [67, 2, 0]]
** centroid: 3, normalized-entropy: 0.18927843126120178, [(1, 67), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [74, 21, 0]]
** centroid: 4, normalized-entropy: 0.762084924805724, [(1, 74), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [78, 36, 0]]
** centroid: 5, normalized-entropy: 0.8997437586982626, [(1, 78), (2, 36)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [8, 67, 0]]
** centroid: 6, normalized-entropy: 0.48977901368693744, [(1, 8), (2, 67)]
*** center 7: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24718800658078074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24718800658078074, 0.1919056629745298] ***
*** finished computation of 7 references, err: [Inf, 0.24718800658078074, 0.1919056629745298] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [69, 44, 0]]
** centroid: 1, normalized-entropy: 0.9643986196033757, [(1, 69), (2, 44)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [52, 5, 0]]
** centroid: 2, normalized-entropy: 0.4288109647301171, [(1, 52), (2, 5)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 73, 19]]
** centroid: 3, normalized-entropy: 0.7347813522127804, [(2, 73), (3, 19)]
*** center 4: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [69, 19, 0]]
** centroid: 5, normalized-entropy: 0.7526269564427315, [(1, 69), (2, 19)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [15, 98, 0]]
** centroid: 6, normalized-entropy: 0.5649141512875933, [(1, 15), (2, 98)]
*** center 7: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23961963552936866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23961963552936866, 0.1897355912913297] ***
*** starting iteration: 2; err: [Inf, 0.23961963552936866, 0.1897355912913297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23961963552936866, 0.1897355912913297, 0.188056952169014] ***
*** starting iteration: 3; err: [Inf, 0.23961963552936866, 0.1897355912913297, 0.188056952169014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23961963552936866, 0.1897355912913297, 0.188056952169014, 0.18676446115684783] ***
*** finished computation of 7 references, err: [Inf, 0.23961963552936866, 0.1897355912913297, 0.188056952169014, 0.18676446115684783] ***
*** center 1: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 85, 17]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 85), (3, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 37, 0]]
** centroid: 4, normalized-entropy: 0.9562940061600327, [(1, 61), (2, 37)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [38, 58, 0]]
** centroid: 5, normalized-entropy: 0.968461008760162, [(1, 38), (2, 58)]
*** center 6: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [19, 59, 0]]
** centroid: 7, normalized-entropy: 0.8009591077369054, [(1, 19), (2, 59)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23191814621312842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23191814621312842, 0.19235350611456287] ***
*** starting iteration: 2; err: [Inf, 0.23191814621312842, 0.19235350611456287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23191814621312842, 0.19235350611456287, 0.18956145688031298] ***
*** starting iteration: 3; err: [Inf, 0.23191814621312842, 0.19235350611456287, 0.18956145688031298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23191814621312842, 0.19235350611456287, 0.18956145688031298, 0.18901339835435643] ***
*** finished computation of 7 references, err: [Inf, 0.23191814621312842, 0.19235350611456287, 0.18956145688031298, 0.18901339835435643] ***
*** center 1: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [90, 9, 0]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(1, 90), (2, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 74, 22]]
** centroid: 3, normalized-entropy: 0.7765557854444601, [(2, 74), (3, 22)]
*** center 4: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [5, 83, 0]]
** centroid: 5, normalized-entropy: 0.314682604134666, [(1, 5), (2, 83)]
*** center 6: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [23, 74, 0]]
** centroid: 7, normalized-entropy: 0.790206924188637, [(1, 23), (2, 74)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23300558706742713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23300558706742713, 0.1886316898259344] ***
*** starting iteration: 2; err: [Inf, 0.23300558706742713, 0.1886316898259344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23300558706742713, 0.1886316898259344, 0.18598029154284426] ***
*** starting iteration: 3; err: [Inf, 0.23300558706742713, 0.1886316898259344, 0.18598029154284426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23300558706742713, 0.1886316898259344, 0.18598029154284426, 0.1860953482647037] ***
*** finished computation of 7 references, err: [Inf, 0.23300558706742713, 0.1886316898259344, 0.18598029154284426, 0.1860953482647037] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 81, 19]]
** centroid: 1, normalized-entropy: 0.7014714598838974, [(2, 81), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [115, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [52, 9, 0]]
** centroid: 3, normalized-entropy: 0.603652249754401, [(1, 52), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [68, 25, 0]]
** centroid: 4, normalized-entropy: 0.8397622740178036, [(1, 68), (2, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [96, 18, 0]]
** centroid: 5, normalized-entropy: 0.6292492238560344, [(1, 96), (2, 18)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [78, 11, 0]]
** centroid: 6, normalized-entropy: 0.5396084773004918, [(1, 78), (2, 11)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 95, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18773394250157135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18773394250157135, 0.1510100780703776] ***
*** starting iteration: 2; err: [Inf, 0.18773394250157135, 0.1510100780703776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18773394250157135, 0.1510100780703776, 0.14708018328507874] ***
*** starting iteration: 3; err: [Inf, 0.18773394250157135, 0.1510100780703776, 0.14708018328507874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18773394250157135, 0.1510100780703776, 0.14708018328507874, 0.14584351580327115] ***
*** finished computation of 7 references, err: [Inf, 0.18773394250157135, 0.1510100780703776, 0.14708018328507874, 0.14584351580327115] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 89, 14]]
** centroid: 1, normalized-entropy: 0.5734593207286953, [(2, 89), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [65, 14, 0]]
** centroid: 3, normalized-entropy: 0.6739468651941155, [(1, 65), (2, 14)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [92, 6, 0]]
** centroid: 4, normalized-entropy: 0.3322866302216152, [(1, 92), (2, 6)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [107, 16, 0]]
** centroid: 5, normalized-entropy: 0.5576611106650714, [(1, 107), (2, 16)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 90, 3]]
** centroid: 6, normalized-entropy: 0.2055925081850832, [(2, 90), (3, 3)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [56, 24, 0]]
** centroid: 7, normalized-entropy: 0.8812908992306927, [(1, 56), (2, 24)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19774270908295483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19774270908295483, 0.15184741752009945] ***
*** starting iteration: 2; err: [Inf, 0.19774270908295483, 0.15184741752009945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19774270908295483, 0.15184741752009945, 0.1475913112433669] ***
*** starting iteration: 3; err: [Inf, 0.19774270908295483, 0.15184741752009945, 0.1475913112433669] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19774270908295483, 0.15184741752009945, 0.1475913112433669, 0.14643823529553154] ***
*** finished computation of 7 references, err: [Inf, 0.19774270908295483, 0.15184741752009945, 0.1475913112433669, 0.14643823529553154] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 68, 9]]
** centroid: 1, normalized-entropy: 0.5203346157857599, [(2, 68), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [66, 25, 0]]
** centroid: 3, normalized-entropy: 0.8481636883083004, [(1, 66), (2, 25)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [115, 14, 0]]
** centroid: 4, normalized-entropy: 0.4954572959859703, [(1, 115), (2, 14)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [50, 36, 0]]
** centroid: 5, normalized-entropy: 0.9807983646944296, [(1, 50), (2, 36)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 97, 13]]
** centroid: 6, normalized-entropy: 0.5241118769066088, [(2, 97), (3, 13)]
*** center 7: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1982391757675554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1982391757675554, 0.1556192277735197] ***
*** starting iteration: 2; err: [Inf, 0.1982391757675554, 0.1556192277735197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1982391757675554, 0.1556192277735197, 0.15129304513603314] ***
*** starting iteration: 3; err: [Inf, 0.1982391757675554, 0.1556192277735197, 0.15129304513603314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1982391757675554, 0.1556192277735197, 0.15129304513603314, 0.1496451193274095] ***
*** finished computation of 7 references, err: [Inf, 0.1982391757675554, 0.1556192277735197, 0.15129304513603314, 0.1496451193274095] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 68, 19]]
** centroid: 1, normalized-entropy: 0.7572182549240017, [(2, 68), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [68, 7, 0]]
** centroid: 3, normalized-entropy: 0.44749925503686355, [(1, 68), (2, 7)]
*** center 4: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [89, 12, 0]]
** centroid: 5, normalized-entropy: 0.5259359840917625, [(1, 89), (2, 12)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 98, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [52, 54, 0]]
** centroid: 7, normalized-entropy: 0.9997431860710851, [(1, 52), (2, 54)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 13)
[0.9379918840996685, 0.9330018641395886, 0.9109708510906115, 0.9109648570726415, 0.9099458740177303, 0.9059718401035766, 0.9009998021974069, 0.8990277702852554, 0.8960217702732672, 0.8869708031384679, 0.8860237482991974, 0.8809707911504319, 0.7910095724466982]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 3, 10, 1.0, :rand, 0.6, 2) => 0.9379918840996685
finished with 14
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.3897654280911113] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3897654280911113, 0.294070532229413] ***
*** starting iteration: 2; err: [Inf, 0.3897654280911113, 0.294070532229413] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3897654280911113, 0.294070532229413, 0.29242539619215885] ***
*** starting iteration: 3; err: [Inf, 0.3897654280911113, 0.294070532229413, 0.29242539619215885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3897654280911113, 0.294070532229413, 0.29242539619215885, 0.29233325773139707] ***
*** finished computation of 3 references, err: [Inf, 0.3897654280911113, 0.294070532229413, 0.29242539619215885, 0.29233325773139707] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [137, 72, 0]]
** centroid: 1, normalized-entropy: 0.9290577183515111, [(1, 137), (2, 72)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [58, 167, 17]]
** centroid: 2, normalized-entropy: 0.714453695808414, [(1, 58), (2, 167), (3, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [215, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36989573398227993] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36989573398227993, 0.29568954007462717] ***
*** starting iteration: 2; err: [Inf, 0.36989573398227993, 0.29568954007462717] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36989573398227993, 0.29568954007462717, 0.29111613363105765] ***
*** starting iteration: 3; err: [Inf, 0.36989573398227993, 0.29568954007462717, 0.29111613363105765] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36989573398227993, 0.29568954007462717, 0.29111613363105765, 0.2903481238232604] ***
*** finished computation of 3 references, err: [Inf, 0.36989573398227993, 0.29568954007462717, 0.29111613363105765, 0.2903481238232604] ***
*** center 1: selecting labels [1] (freq >= 2) [from [198, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [77, 181, 22]]
** centroid: 2, normalized-entropy: 0.761796031193117, [(1, 77), (2, 181), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [130, 59, 0]]
** centroid: 3, normalized-entropy: 0.8956617067287564, [(1, 130), (2, 59)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.45667934572433067] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45667934572433067, 0.3338555312677771] ***
*** starting iteration: 2; err: [Inf, 0.45667934572433067, 0.3338555312677771] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45667934572433067, 0.3338555312677771, 0.302459556408327] ***
*** starting iteration: 3; err: [Inf, 0.45667934572433067, 0.3338555312677771, 0.302459556408327] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45667934572433067, 0.3338555312677771, 0.302459556408327, 0.2953968532173999] ***
*** starting iteration: 4; err: [Inf, 0.45667934572433067, 0.3338555312677771, 0.302459556408327, 0.2953968532173999] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45667934572433067, 0.3338555312677771, 0.302459556408327, 0.2953968532173999, 0.2934448333300728] ***
*** starting iteration: 5; err: [Inf, 0.45667934572433067, 0.3338555312677771, 0.302459556408327, 0.2953968532173999, 0.2934448333300728] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45667934572433067, 0.3338555312677771, 0.302459556408327, 0.2953968532173999, 0.2934448333300728, 0.2931939006100284] ***
*** finished computation of 3 references, err: [Inf, 0.45667934572433067, 0.3338555312677771, 0.302459556408327, 0.2953968532173999, 0.2934448333300728, 0.2931939006100284] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [144, 74, 0]]
** centroid: 1, normalized-entropy: 0.9242909795281408, [(1, 144), (2, 74)]
*** center 2: selecting labels [1] (freq >= 2) [from [188, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [77, 165, 19]]
** centroid: 3, normalized-entropy: 0.7653035609939958, [(1, 77), (2, 165), (3, 19)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 14)
[0.9379918840996685, 0.9330018641395886, 0.9109708510906115, 0.9109648570726415, 0.9099458740177303, 0.9059718401035766, 0.9009998021974069, 0.8990277702852554, 0.8979848111584637, 0.8960217702732672, 0.8869708031384679, 0.8860237482991974, 0.8809707911504319, 0.7910095724466982]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 3, 10, 1.0, :rand, 0.6, 2) => 0.9379918840996685
finished with 15
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.2989222511632351] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2989222511632351, 0.23767223089581002] ***
*** finished computation of 3 references, err: [Inf, 0.2989222511632351, 0.23767223089581002] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [27, 150, 17]]
** centroid: 1, normalized-entropy: 0.6250479823307287, [(1, 27), (2, 150), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [130, 71, 0]]
** centroid: 2, normalized-entropy: 0.9369230285991699, [(1, 130), (2, 71)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [253, 18, 0]]
** centroid: 3, normalized-entropy: 0.3524220139604322, [(1, 253), (2, 18)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.28148615523904696] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28148615523904696, 0.24388835481591412] ***
*** finished computation of 3 references, err: [Inf, 0.28148615523904696, 0.24388835481591412] ***
*** center 1: selecting labels [1] (freq >= 1) [from [210, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [90, 124, 2]]
** centroid: 2, normalized-entropy: 0.6615081709978036, [(1, 90), (2, 124), (3, 2)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [105, 116, 20]]
** centroid: 3, normalized-entropy: 0.8378699829791294, [(1, 105), (2, 116), (3, 20)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3823170508893355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3823170508893355, 0.23923847475682555] ***
*** finished computation of 3 references, err: [Inf, 0.3823170508893355, 0.23923847475682555] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [205, 27, 0]]
** centroid: 1, normalized-entropy: 0.5188629651403733, [(1, 205), (2, 27)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 173, 19]]
** centroid: 2, normalized-entropy: 0.4656848645931274, [(2, 173), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [204, 39, 0]]
** centroid: 3, normalized-entropy: 0.635489638182683, [(1, 204), (2, 39)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 15)
[0.9379918840996685, 0.9330018641395886, 0.9109708510906115, 0.9109648570726415, 0.9099458740177303, 0.9059718401035766, 0.9009998021974069, 0.9009878141614669, 0.8990277702852554, 0.8979848111584637, 0.8960217702732672, 0.8869708031384679, 0.8860237482991974, 0.8809707911504319, 0.7910095724466982]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 3, 10, 1.0, :rand, 0.6, 2) => 0.9379918840996685
finished with 15
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9379918840996685, 0.9330018641395886, 0.9109708510906115, 0.9109648570726415, 0.9099458740177303, 0.9059718401035766, 0.9009998021974069, 0.9009878141614669, 0.8990277702852554, 0.8979848111584637, 0.8960217702732672, 0.8869708031384679, 0.8860237482991974, 0.8809707911504319, 0.7910095724466982]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 3, 10, 1.0, :rand, 0.6, 2) => 0.9379918840996685
finished with 17
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.34894326561013117] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34894326561013117, 0.2404474556297847] ***
*** finished computation of 3 references, err: [Inf, 0.34894326561013117, 0.2404474556297847] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [129, 140, 15]]
** centroid: 1, normalized-entropy: 0.7850563055320003, [(1, 129), (2, 140), (3, 15)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [122, 99, 2]]
** centroid: 2, normalized-entropy: 0.6669872959377382, [(1, 122), (2, 99), (3, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [159, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32752902249524973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32752902249524973, 0.24913953817861414] ***
*** finished computation of 3 references, err: [Inf, 0.32752902249524973, 0.24913953817861414] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [279, 39, 0]]
** centroid: 1, normalized-entropy: 0.5369064378756415, [(1, 279), (2, 39)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 160, 22]]
** centroid: 2, normalized-entropy: 0.5318826028800231, [(2, 160), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [126, 41, 0]]
** centroid: 3, normalized-entropy: 0.8040821215139868, [(1, 126), (2, 41)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3346897605890366] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3346897605890366, 0.2521935840768424] ***
*** finished computation of 3 references, err: [Inf, 0.3346897605890366, 0.2521935840768424] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [306, 34, 0]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(1, 306), (2, 34)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 154, 19]]
** centroid: 2, normalized-entropy: 0.4993926783740487, [(2, 154), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [103, 51, 0]]
** centroid: 3, normalized-entropy: 0.9161161073155651, [(1, 103), (2, 51)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4272974229812085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4272974229812085, 0.30791640581770074] ***
*** finished computation of 3 references, err: [Inf, 0.4272974229812085, 0.30791640581770074] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [139, 160, 17]]
** centroid: 1, normalized-entropy: 0.7856004732235438, [(1, 139), (2, 160), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [109, 79, 0]]
** centroid: 2, normalized-entropy: 0.9815528383442538, [(1, 109), (2, 79)]
*** center 3: selecting labels [1] (freq >= 2) [from [162, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38799108335583554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38799108335583554, 0.3244506500890364] ***
*** finished computation of 3 references, err: [Inf, 0.38799108335583554, 0.3244506500890364] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [141, 185, 22]]
** centroid: 1, normalized-entropy: 0.7978261385337989, [(1, 141), (2, 185), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [106, 55, 0]]
** centroid: 2, normalized-entropy: 0.9263556829124097, [(1, 106), (2, 55)]
*** center 3: selecting labels [1] (freq >= 2) [from [158, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38491482468185084] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38491482468185084, 0.3099969760368186] ***
*** finished computation of 3 references, err: [Inf, 0.38491482468185084, 0.3099969760368186] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [117, 165, 19]]
** centroid: 1, normalized-entropy: 0.7930285243609667, [(1, 117), (2, 165), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [188, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [104, 74, 0]]
** centroid: 3, normalized-entropy: 0.9794116346561961, [(1, 104), (2, 74)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 17)
[0.9379918840996685, 0.9330018641395886, 0.9109708510906115, 0.9109648570726415, 0.9099458740177303, 0.9079738421055786, 0.9059718401035766, 0.9039668410925895, 0.9009998021974069, 0.9009878141614669, 0.8990277702852554, 0.8979848111584637, 0.8960217702732672, 0.8869708031384679, 0.8860237482991974, 0.8809707911504319, 0.7910095724466982]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 3, 10, 1.0, :rand, 0.6, 2) => 0.9379918840996685
finished with 17
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9379918840996685, 0.9330018641395886, 0.9109708510906115, 0.9109648570726415, 0.9099458740177303, 0.9079738421055786, 0.9059718401035766, 0.9039668410925895, 0.9009998021974069, 0.9009878141614669, 0.8990277702852554, 0.8979848111584637, 0.8960217702732672, 0.8869708031384679, 0.8860237482991974, 0.8809707911504319, 0.7910095724466982]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 3, 10, 1.0, :rand, 0.6, 2) => 0.9379918840996685
finished with 18
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.18753838353138697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18753838353138697, 0.15092612717366377] ***
*** starting iteration: 2; err: [Inf, 0.18753838353138697, 0.15092612717366377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18753838353138697, 0.15092612717366377, 0.14638704882288636] ***
*** starting iteration: 3; err: [Inf, 0.18753838353138697, 0.15092612717366377, 0.14638704882288636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18753838353138697, 0.15092612717366377, 0.14638704882288636, 0.1450863344645178] ***
*** finished computation of 7 references, err: [Inf, 0.18753838353138697, 0.15092612717366377, 0.14638704882288636, 0.1450863344645178] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [58, 41, 0]]
** centroid: 1, normalized-entropy: 0.9786239947589973, [(1, 58), (2, 41)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 13, 0]]
** centroid: 2, normalized-entropy: 0.6705250693158382, [(1, 61), (2, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 77, 17]]
** centroid: 4, normalized-entropy: 0.6819353204567525, [(2, 77), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [78, 18, 0]]
** centroid: 5, normalized-entropy: 0.6962122601251459, [(1, 78), (2, 18)]
*** center 6: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 90, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1883302953211532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1883302953211532, 0.1544753333617901] ***
*** starting iteration: 2; err: [Inf, 0.1883302953211532, 0.1544753333617901] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1883302953211532, 0.1544753333617901, 0.14962607947306644] ***
*** starting iteration: 3; err: [Inf, 0.1883302953211532, 0.1544753333617901, 0.14962607947306644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1883302953211532, 0.1544753333617901, 0.14962607947306644, 0.14798955387412116] ***
*** finished computation of 7 references, err: [Inf, 0.1883302953211532, 0.1544753333617901, 0.14962607947306644, 0.14798955387412116] ***
*** center 1: selecting labels [1] (freq >= 2) [from [121, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 46, 22]]
** centroid: 2, normalized-entropy: 0.9081783472997053, [(2, 46), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [78, 4, 0]]
** centroid: 3, normalized-entropy: 0.2811937964320427, [(1, 78), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [99, 9, 0]]
** centroid: 4, normalized-entropy: 0.4138168503036336, [(1, 99), (2, 9)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [11, 115, 0]]
** centroid: 5, normalized-entropy: 0.4273981483918733, [(1, 11), (2, 115)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 66, 0]]
** centroid: 6, normalized-entropy: 0.4138168503036336, [(1, 6), (2, 66)]
*** center 7: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2008102733203429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2008102733203429, 0.15214545164024107] ***
*** starting iteration: 2; err: [Inf, 0.2008102733203429, 0.15214545164024107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2008102733203429, 0.15214545164024107, 0.14780348873762847] ***
*** starting iteration: 3; err: [Inf, 0.2008102733203429, 0.15214545164024107, 0.14780348873762847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2008102733203429, 0.15214545164024107, 0.14780348873762847, 0.14688072267450628] ***
*** finished computation of 7 references, err: [Inf, 0.2008102733203429, 0.15214545164024107, 0.14780348873762847, 0.14688072267450628] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 95, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [74, 27, 0]]
** centroid: 3, normalized-entropy: 0.837602456861142, [(1, 74), (2, 27)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [97, 4, 0]]
** centroid: 4, normalized-entropy: 0.24047340659188013, [(1, 97), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [46, 40, 0]]
** centroid: 5, normalized-entropy: 0.996485989886783, [(1, 46), (2, 40)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 73, 19]]
** centroid: 6, normalized-entropy: 0.7347813522127804, [(2, 73), (3, 19)]
*** center 7: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 18)
[0.9379918840996685, 0.9330018641395886, 0.9249758740776706, 0.9109708510906115, 0.9109648570726415, 0.9099458740177303, 0.9079738421055786, 0.9059718401035766, 0.9039668410925895, 0.9009998021974069, 0.9009878141614669, 0.8990277702852554, 0.8979848111584637, 0.8960217702732672, 0.8869708031384679, 0.8860237482991974, 0.8809707911504319, 0.7910095724466982]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 3, 10, 1.0, :rand, 0.6, 2) => 0.9379918840996685
finished with 20
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.39580579079385547] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39580579079385547, 0.33718071719379844] ***
*** starting iteration: 2; err: [Inf, 0.39580579079385547, 0.33718071719379844] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775] ***
*** starting iteration: 3; err: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837] ***
*** starting iteration: 4; err: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837, 0.32398407940694074] ***
*** starting iteration: 5; err: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837, 0.32398407940694074] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837, 0.32398407940694074, 0.31912053884608343] ***
*** starting iteration: 6; err: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837, 0.32398407940694074, 0.31912053884608343] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837, 0.32398407940694074, 0.31912053884608343, 0.3157736345980171] ***
*** starting iteration: 7; err: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837, 0.32398407940694074, 0.31912053884608343, 0.3157736345980171] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837, 0.32398407940694074, 0.31912053884608343, 0.3157736345980171, 0.31177628655846623] ***
*** starting iteration: 8; err: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837, 0.32398407940694074, 0.31912053884608343, 0.3157736345980171, 0.31177628655846623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837, 0.32398407940694074, 0.31912053884608343, 0.3157736345980171, 0.31177628655846623, 0.3061614593479771] ***
*** starting iteration: 9; err: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837, 0.32398407940694074, 0.31912053884608343, 0.3157736345980171, 0.31177628655846623, 0.3061614593479771] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837, 0.32398407940694074, 0.31912053884608343, 0.3157736345980171, 0.31177628655846623, 0.3061614593479771, 0.29219005167604545] ***
*** starting iteration: 10; err: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837, 0.32398407940694074, 0.31912053884608343, 0.3157736345980171, 0.31177628655846623, 0.3061614593479771, 0.29219005167604545] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837, 0.32398407940694074, 0.31912053884608343, 0.3157736345980171, 0.31177628655846623, 0.3061614593479771, 0.29219005167604545, 0.29166003188339285] ***
*** finished computation of 3 references, err: [Inf, 0.39580579079385547, 0.33718071719379844, 0.33358669259470775, 0.32914039517917837, 0.32398407940694074, 0.31912053884608343, 0.3157736345980171, 0.31177628655846623, 0.3061614593479771, 0.29219005167604545, 0.29166003188339285] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [217, 35, 0]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(1, 217), (2, 35)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 179, 17]]
** centroid: 2, normalized-entropy: 0.42547569905624044, [(2, 179), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [193, 25, 0]]
** centroid: 3, normalized-entropy: 0.5138695865333134, [(1, 193), (2, 25)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33357181034652683] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33357181034652683, 0.3036525512318025] ***
*** starting iteration: 2; err: [Inf, 0.33357181034652683, 0.3036525512318025] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33357181034652683, 0.3036525512318025, 0.30025272603346403] ***
*** starting iteration: 3; err: [Inf, 0.33357181034652683, 0.3036525512318025, 0.30025272603346403] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33357181034652683, 0.3036525512318025, 0.30025272603346403, 0.30009721924384675] ***
*** finished computation of 3 references, err: [Inf, 0.33357181034652683, 0.3036525512318025, 0.30025272603346403, 0.30009721924384675] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [235, 20, 0]]
** centroid: 1, normalized-entropy: 0.3966277727783787, [(1, 235), (2, 20)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 196, 22]]
** centroid: 2, normalized-entropy: 0.47189705387508535, [(2, 196), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [170, 24, 0]]
** centroid: 3, normalized-entropy: 0.5399357331112666, [(1, 170), (2, 24)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3692694905715278] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3692694905715278, 0.3035862684791637] ***
*** starting iteration: 2; err: [Inf, 0.3692694905715278, 0.3035862684791637] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3692694905715278, 0.3035862684791637, 0.294841557755128] ***
*** starting iteration: 3; err: [Inf, 0.3692694905715278, 0.3035862684791637, 0.294841557755128] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3692694905715278, 0.3035862684791637, 0.294841557755128, 0.29352052698143644] ***
*** starting iteration: 4; err: [Inf, 0.3692694905715278, 0.3035862684791637, 0.294841557755128, 0.29352052698143644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3692694905715278, 0.3035862684791637, 0.294841557755128, 0.29352052698143644, 0.2931948626006226] ***
*** finished computation of 3 references, err: [Inf, 0.3692694905715278, 0.3035862684791637, 0.294841557755128, 0.29352052698143644, 0.2931948626006226] ***
*** center 1: selecting labels [1] (freq >= 1) [from [207, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [123, 93, 0]]
** centroid: 2, normalized-entropy: 0.9860400318404435, [(1, 123), (2, 93)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [79, 146, 19]]
** centroid: 3, normalized-entropy: 0.7929965317426968, [(1, 79), (2, 146), (3, 19)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2392988266037391] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2392988266037391, 0.23424195598002645] ***
*** starting iteration: 2; err: [Inf, 0.2392988266037391, 0.23424195598002645] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2392988266037391, 0.23424195598002645, 0.23338844034053083] ***
*** finished computation of 3 references, err: [Inf, 0.2392988266037391, 0.23424195598002645, 0.23338844034053083] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [75, 152, 17]]
** centroid: 1, normalized-entropy: 0.767372600604384, [(1, 75), (2, 152), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [129, 87, 0]]
** centroid: 2, normalized-entropy: 0.9725523165688429, [(1, 129), (2, 87)]
*** center 3: selecting labels [1] (freq >= 1) [from [206, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.28696833719880593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28696833719880593, 0.2513144610734514] ***
*** starting iteration: 2; err: [Inf, 0.28696833719880593, 0.2513144610734514] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28696833719880593, 0.2513144610734514, 0.24040476364716107] ***
*** starting iteration: 3; err: [Inf, 0.28696833719880593, 0.2513144610734514, 0.24040476364716107] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28696833719880593, 0.2513144610734514, 0.24040476364716107, 0.2360503608416738] ***
*** starting iteration: 4; err: [Inf, 0.28696833719880593, 0.2513144610734514, 0.24040476364716107, 0.2360503608416738] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28696833719880593, 0.2513144610734514, 0.24040476364716107, 0.2360503608416738, 0.2342788347502475] ***
*** starting iteration: 5; err: [Inf, 0.28696833719880593, 0.2513144610734514, 0.24040476364716107, 0.2360503608416738, 0.2342788347502475] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28696833719880593, 0.2513144610734514, 0.24040476364716107, 0.2360503608416738, 0.2342788347502475, 0.232934281782902] ***
*** starting iteration: 6; err: [Inf, 0.28696833719880593, 0.2513144610734514, 0.24040476364716107, 0.2360503608416738, 0.2342788347502475, 0.232934281782902] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28696833719880593, 0.2513144610734514, 0.24040476364716107, 0.2360503608416738, 0.2342788347502475, 0.232934281782902, 0.2320037091365908] ***
*** finished computation of 3 references, err: [Inf, 0.28696833719880593, 0.2513144610734514, 0.24040476364716107, 0.2360503608416738, 0.2342788347502475, 0.232934281782902, 0.2320037091365908] ***
*** center 1: selecting labels [1] (freq >= 1) [from [195, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [129, 72, 0]]
** centroid: 2, normalized-entropy: 0.9411864371816836, [(1, 129), (2, 72)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [81, 168, 22]]
** centroid: 3, normalized-entropy: 0.7839307248051426, [(1, 81), (2, 168), (3, 22)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.398739203601249] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.398739203601249, 0.3121886240217885] ***
*** starting iteration: 2; err: [Inf, 0.398739203601249, 0.3121886240217885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.398739203601249, 0.3121886240217885, 0.286805407680303] ***
*** starting iteration: 3; err: [Inf, 0.398739203601249, 0.3121886240217885, 0.286805407680303] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.398739203601249, 0.3121886240217885, 0.286805407680303, 0.260061949795193] ***
*** starting iteration: 4; err: [Inf, 0.398739203601249, 0.3121886240217885, 0.286805407680303, 0.260061949795193] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.398739203601249, 0.3121886240217885, 0.286805407680303, 0.260061949795193, 0.24246549722354585] ***
*** starting iteration: 5; err: [Inf, 0.398739203601249, 0.3121886240217885, 0.286805407680303, 0.260061949795193, 0.24246549722354585] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.398739203601249, 0.3121886240217885, 0.286805407680303, 0.260061949795193, 0.24246549722354585, 0.23760312763803723] ***
*** starting iteration: 6; err: [Inf, 0.398739203601249, 0.3121886240217885, 0.286805407680303, 0.260061949795193, 0.24246549722354585, 0.23760312763803723] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.398739203601249, 0.3121886240217885, 0.286805407680303, 0.260061949795193, 0.24246549722354585, 0.23760312763803723, 0.23599640719838316] ***
*** starting iteration: 7; err: [Inf, 0.398739203601249, 0.3121886240217885, 0.286805407680303, 0.260061949795193, 0.24246549722354585, 0.23760312763803723, 0.23599640719838316] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.398739203601249, 0.3121886240217885, 0.286805407680303, 0.260061949795193, 0.24246549722354585, 0.23760312763803723, 0.23599640719838316, 0.23512663602594402] ***
*** finished computation of 3 references, err: [Inf, 0.398739203601249, 0.3121886240217885, 0.286805407680303, 0.260061949795193, 0.24246549722354585, 0.23760312763803723, 0.23599640719838316, 0.23512663602594402] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 185, 19]]
** centroid: 1, normalized-entropy: 0.44685576868254534, [(2, 185), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [236, 12, 0]]
** centroid: 2, normalized-entropy: 0.2795055456366802, [(1, 236), (2, 12)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [173, 42, 0]]
** centroid: 3, normalized-entropy: 0.7125276629017333, [(1, 173), (2, 42)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 20)
[0.9379918840996685, 0.9330018641395886, 0.9249758740776706, 0.9109708510906115, 0.9109648570726415, 0.9099458740177303, 0.9079738421055786, 0.9059718401035766, 0.9039668410925895, 0.9009998021974069, 0.9009878141614669, 0.8990277702852554, 0.8979848111584637, 0.8960217702732672, 0.8869708031384679, 0.8860237482991974, 0.8809707911504319, 0.8690127253001504, 0.8669957382532233, 0.7910095724466982]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 3, 10, 1.0, :rand, 0.6, 2) => 0.9379918840996685
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.3946750142583624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3946750142583624, 0.2546056201020256] ***
*** starting iteration: 2; err: [Inf, 0.3946750142583624, 0.2546056201020256] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3946750142583624, 0.2546056201020256, 0.23832010030280798] ***
*** starting iteration: 3; err: [Inf, 0.3946750142583624, 0.2546056201020256, 0.23832010030280798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3946750142583624, 0.2546056201020256, 0.23832010030280798, 0.23355412047100255] ***
*** starting iteration: 4; err: [Inf, 0.3946750142583624, 0.2546056201020256, 0.23832010030280798, 0.23355412047100255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3946750142583624, 0.2546056201020256, 0.23832010030280798, 0.23355412047100255, 0.23239673314755782] ***
*** starting iteration: 5; err: [Inf, 0.3946750142583624, 0.2546056201020256, 0.23832010030280798, 0.23355412047100255, 0.23239673314755782] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3946750142583624, 0.2546056201020256, 0.23832010030280798, 0.23355412047100255, 0.23239673314755782, 0.23208821489056572] ***
*** finished computation of 3 references, err: [Inf, 0.3946750142583624, 0.2546056201020256, 0.23832010030280798, 0.23355412047100255, 0.23239673314755782, 0.23208821489056572] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [113, 236, 29]]
** centroid: 1, normalized-entropy: 0.7755799221012636, [(1, 113), (2, 236), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [313, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [186, 123, 0]]
** centroid: 3, normalized-entropy: 0.969803406471299, [(1, 186), (2, 123)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3536145954169333] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3536145954169333, 0.26099852392449974] ***
*** starting iteration: 2; err: [Inf, 0.3536145954169333, 0.26099852392449974] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3536145954169333, 0.26099852392449974, 0.24843403888260945] ***
*** starting iteration: 3; err: [Inf, 0.3536145954169333, 0.26099852392449974, 0.24843403888260945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3536145954169333, 0.26099852392449974, 0.24843403888260945, 0.24484625267609955] ***
*** starting iteration: 4; err: [Inf, 0.3536145954169333, 0.26099852392449974, 0.24843403888260945, 0.24484625267609955] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3536145954169333, 0.26099852392449974, 0.24843403888260945, 0.24484625267609955, 0.24320429763570428] ***
*** starting iteration: 5; err: [Inf, 0.3536145954169333, 0.26099852392449974, 0.24843403888260945, 0.24484625267609955, 0.24320429763570428] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3536145954169333, 0.26099852392449974, 0.24843403888260945, 0.24484625267609955, 0.24320429763570428, 0.2425397550854832] ***
*** finished computation of 3 references, err: [Inf, 0.3536145954169333, 0.26099852392449974, 0.24843403888260945, 0.24484625267609955, 0.24320429763570428, 0.2425397550854832] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 136, 13]]
** centroid: 1, normalized-entropy: 0.42721776377840087, [(2, 136), (3, 13)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [175, 18, 0]]
** centroid: 2, normalized-entropy: 0.44727260930632295, [(1, 175), (2, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [137, 21, 0]]
** centroid: 3, normalized-entropy: 0.5653689681521273, [(1, 137), (2, 21)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.28165744675602766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28165744675602766, 0.2487483747974038] ***
*** starting iteration: 2; err: [Inf, 0.28165744675602766, 0.2487483747974038] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28165744675602766, 0.2487483747974038, 0.24330169174075128] ***
*** starting iteration: 3; err: [Inf, 0.28165744675602766, 0.2487483747974038, 0.24330169174075128] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28165744675602766, 0.2487483747974038, 0.24330169174075128, 0.24232468159124254] ***
*** finished computation of 3 references, err: [Inf, 0.28165744675602766, 0.2487483747974038, 0.24330169174075128, 0.24232468159124254] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [110, 31, 0]]
** centroid: 1, normalized-entropy: 0.7599084154505263, [(1, 110), (2, 31)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [187, 11, 0]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(1, 187), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 145, 16]]
** centroid: 3, normalized-entropy: 0.467023598287502, [(2, 145), (3, 16)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.363885850135237] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.363885850135237, 0.2501289335638285] ***
*** starting iteration: 2; err: [Inf, 0.363885850135237, 0.2501289335638285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337] ***
*** starting iteration: 3; err: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365] ***
*** starting iteration: 4; err: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365, 0.23620007040165364] ***
*** starting iteration: 5; err: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365, 0.23620007040165364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365, 0.23620007040165364, 0.23419323510490359] ***
*** starting iteration: 6; err: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365, 0.23620007040165364, 0.23419323510490359] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365, 0.23620007040165364, 0.23419323510490359, 0.23288782066479324] ***
*** starting iteration: 7; err: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365, 0.23620007040165364, 0.23419323510490359, 0.23288782066479324] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365, 0.23620007040165364, 0.23419323510490359, 0.23288782066479324, 0.23164735122025013] ***
*** starting iteration: 8; err: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365, 0.23620007040165364, 0.23419323510490359, 0.23288782066479324, 0.23164735122025013] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365, 0.23620007040165364, 0.23419323510490359, 0.23288782066479324, 0.23164735122025013, 0.22951211764663457] ***
*** starting iteration: 9; err: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365, 0.23620007040165364, 0.23419323510490359, 0.23288782066479324, 0.23164735122025013, 0.22951211764663457] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365, 0.23620007040165364, 0.23419323510490359, 0.23288782066479324, 0.23164735122025013, 0.22951211764663457, 0.22776991957239806] ***
*** starting iteration: 10; err: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365, 0.23620007040165364, 0.23419323510490359, 0.23288782066479324, 0.23164735122025013, 0.22951211764663457, 0.22776991957239806] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365, 0.23620007040165364, 0.23419323510490359, 0.23288782066479324, 0.23164735122025013, 0.22951211764663457, 0.22776991957239806, 0.22646454131416976] ***
*** finished computation of 3 references, err: [Inf, 0.363885850135237, 0.2501289335638285, 0.24059378485195337, 0.23846606849413365, 0.23620007040165364, 0.23419323510490359, 0.23288782066479324, 0.23164735122025013, 0.22951211764663457, 0.22776991957239806, 0.22646454131416976] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [136, 26, 0]]
** centroid: 1, normalized-entropy: 0.635489638182683, [(1, 136), (2, 26)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 122, 13]]
** centroid: 2, normalized-entropy: 0.45714395617300635, [(2, 122), (3, 13)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [194, 9, 0]]
** centroid: 3, normalized-entropy: 0.261826476804469, [(1, 194), (2, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2983404530361295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2983404530361295, 0.24636901101469993] ***
*** starting iteration: 2; err: [Inf, 0.2983404530361295, 0.24636901101469993] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2983404530361295, 0.24636901101469993, 0.23031172582414] ***
*** starting iteration: 3; err: [Inf, 0.2983404530361295, 0.24636901101469993, 0.23031172582414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2983404530361295, 0.24636901101469993, 0.23031172582414, 0.2295500872451812] ***
*** finished computation of 3 references, err: [Inf, 0.2983404530361295, 0.24636901101469993, 0.23031172582414, 0.2295500872451812] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [18, 143, 11]]
** centroid: 1, normalized-entropy: 0.5148076416400545, [(1, 18), (2, 143), (3, 11)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [120, 31, 0]]
** centroid: 2, normalized-entropy: 0.7323984009474936, [(1, 120), (2, 31)]
*** center 3: selecting labels [1] (freq >= 2) [from [177, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.282213397199288] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.282213397199288, 0.2656559469308704] ***
*** starting iteration: 2; err: [Inf, 0.282213397199288, 0.2656559469308704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.282213397199288, 0.2656559469308704, 0.2482456068880856] ***
*** starting iteration: 3; err: [Inf, 0.282213397199288, 0.2656559469308704, 0.2482456068880856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.282213397199288, 0.2656559469308704, 0.2482456068880856, 0.23214998450502752] ***
*** starting iteration: 4; err: [Inf, 0.282213397199288, 0.2656559469308704, 0.2482456068880856, 0.23214998450502752] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.282213397199288, 0.2656559469308704, 0.2482456068880856, 0.23214998450502752, 0.2295826684497297] ***
*** starting iteration: 5; err: [Inf, 0.282213397199288, 0.2656559469308704, 0.2482456068880856, 0.23214998450502752, 0.2295826684497297] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.282213397199288, 0.2656559469308704, 0.2482456068880856, 0.23214998450502752, 0.2295826684497297, 0.22912669582664966] ***
*** finished computation of 3 references, err: [Inf, 0.282213397199288, 0.2656559469308704, 0.2482456068880856, 0.23214998450502752, 0.2295826684497297, 0.22912669582664966] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [116, 51, 0]]
** centroid: 1, normalized-entropy: 0.8877792153761802, [(1, 116), (2, 51)]
*** center 2: selecting labels [1] (freq >= 2) [from [170, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [14, 136, 13]]
** centroid: 3, normalized-entropy: 0.513023526856386, [(1, 14), (2, 136), (3, 13)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3053533611595631] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3053533611595631, 0.2752174204979092] ***
*** starting iteration: 2; err: [Inf, 0.3053533611595631, 0.2752174204979092] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3053533611595631, 0.2752174204979092, 0.2579767570607364] ***
*** starting iteration: 3; err: [Inf, 0.3053533611595631, 0.2752174204979092, 0.2579767570607364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3053533611595631, 0.2752174204979092, 0.2579767570607364, 0.24228526233136655] ***
*** starting iteration: 4; err: [Inf, 0.3053533611595631, 0.2752174204979092, 0.2579767570607364, 0.24228526233136655] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3053533611595631, 0.2752174204979092, 0.2579767570607364, 0.24228526233136655, 0.24067057053744792] ***
*** starting iteration: 5; err: [Inf, 0.3053533611595631, 0.2752174204979092, 0.2579767570607364, 0.24228526233136655, 0.24067057053744792] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3053533611595631, 0.2752174204979092, 0.2579767570607364, 0.24228526233136655, 0.24067057053744792, 0.24037069235742092] ***
*** finished computation of 3 references, err: [Inf, 0.3053533611595631, 0.2752174204979092, 0.2579767570607364, 0.24228526233136655, 0.24067057053744792, 0.24037069235742092] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [52, 99, 14]]
** centroid: 1, normalized-entropy: 0.8007493748284483, [(1, 52), (2, 99), (3, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [107, 72, 0]]
** centroid: 2, normalized-entropy: 0.9722427736398475, [(1, 107), (2, 72)]
*** center 3: selecting labels [1] (freq >= 2) [from [156, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.282491802982986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.282491802982986, 0.22829887772910296] ***
*** starting iteration: 2; err: [Inf, 0.282491802982986, 0.22829887772910296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.282491802982986, 0.22829887772910296, 0.22365215222164989] ***
*** starting iteration: 3; err: [Inf, 0.282491802982986, 0.22829887772910296, 0.22365215222164989] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.282491802982986, 0.22829887772910296, 0.22365215222164989, 0.2227313194014132] ***
*** finished computation of 3 references, err: [Inf, 0.282491802982986, 0.22829887772910296, 0.22365215222164989, 0.2227313194014132] ***
*** center 1: selecting labels [1] (freq >= 2) [from [168, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [59, 111, 11]]
** centroid: 2, normalized-entropy: 0.7604699383735036, [(1, 59), (2, 111), (3, 11)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [78, 72, 1]]
** centroid: 3, normalized-entropy: 0.998845535995202, [(1, 78), (2, 72)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.25471534235030413] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.25471534235030413, 0.22454314943961798] ***
*** starting iteration: 2; err: [Inf, 0.25471534235030413, 0.22454314943961798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.25471534235030413, 0.22454314943961798, 0.22145289923250674] ***
*** starting iteration: 3; err: [Inf, 0.25471534235030413, 0.22454314943961798, 0.22145289923250674] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.25471534235030413, 0.22454314943961798, 0.22145289923250674, 0.2208083616681397] ***
*** finished computation of 3 references, err: [Inf, 0.25471534235030413, 0.22454314943961798, 0.22145289923250674, 0.2208083616681397] ***
*** center 1: selecting labels [1] (freq >= 2) [from [171, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [118, 40, 0]]
** centroid: 2, normalized-entropy: 0.8162554088088008, [(1, 118), (2, 40)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [8, 150, 13]]
** centroid: 3, normalized-entropy: 0.4133300517027609, [(1, 8), (2, 150), (3, 13)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35167691396735606] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167691396735606, 0.25967552004382016] ***
*** starting iteration: 2; err: [Inf, 0.35167691396735606, 0.25967552004382016] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447] ***
*** starting iteration: 3; err: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765] ***
*** starting iteration: 4; err: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765, 0.2401820411477238] ***
*** starting iteration: 5; err: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765, 0.2401820411477238] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765, 0.2401820411477238, 0.23674414510652422] ***
*** starting iteration: 6; err: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765, 0.2401820411477238, 0.23674414510652422] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765, 0.2401820411477238, 0.23674414510652422, 0.23284276858717204] ***
*** starting iteration: 7; err: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765, 0.2401820411477238, 0.23674414510652422, 0.23284276858717204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765, 0.2401820411477238, 0.23674414510652422, 0.23284276858717204, 0.2299437840990722] ***
*** starting iteration: 8; err: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765, 0.2401820411477238, 0.23674414510652422, 0.23284276858717204, 0.2299437840990722] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765, 0.2401820411477238, 0.23674414510652422, 0.23284276858717204, 0.2299437840990722, 0.2276077836640179] ***
*** starting iteration: 9; err: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765, 0.2401820411477238, 0.23674414510652422, 0.23284276858717204, 0.2299437840990722, 0.2276077836640179] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765, 0.2401820411477238, 0.23674414510652422, 0.23284276858717204, 0.2299437840990722, 0.2276077836640179, 0.22593728266470134] ***
*** starting iteration: 10; err: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765, 0.2401820411477238, 0.23674414510652422, 0.23284276858717204, 0.2299437840990722, 0.2276077836640179, 0.22593728266470134] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765, 0.2401820411477238, 0.23674414510652422, 0.23284276858717204, 0.2299437840990722, 0.2276077836640179, 0.22593728266470134, 0.22490102006495] ***
*** finished computation of 3 references, err: [Inf, 0.35167691396735606, 0.25967552004382016, 0.24673065488040447, 0.24369020332209765, 0.2401820411477238, 0.23674414510652422, 0.23284276858717204, 0.2299437840990722, 0.2276077836640179, 0.22593728266470134, 0.22490102006495] ***
*** center 1: selecting labels [1] (freq >= 2) [from [144, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [97, 65, 1]]
** centroid: 2, normalized-entropy: 0.9716681909154833, [(1, 97), (2, 65)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [72, 113, 8]]
** centroid: 3, normalized-entropy: 0.7402126232713182, [(1, 72), (2, 113), (3, 8)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3784617932606488] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3784617932606488, 0.28417868151981385] ***
*** starting iteration: 2; err: [Inf, 0.3784617932606488, 0.28417868151981385] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149] ***
*** starting iteration: 3; err: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754] ***
*** starting iteration: 4; err: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754, 0.24737505908310414] ***
*** starting iteration: 5; err: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754, 0.24737505908310414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754, 0.24737505908310414, 0.24391078842803837] ***
*** starting iteration: 6; err: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754, 0.24737505908310414, 0.24391078842803837] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754, 0.24737505908310414, 0.24391078842803837, 0.24211704706028103] ***
*** starting iteration: 7; err: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754, 0.24737505908310414, 0.24391078842803837, 0.24211704706028103] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754, 0.24737505908310414, 0.24391078842803837, 0.24211704706028103, 0.24052635133173317] ***
*** starting iteration: 8; err: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754, 0.24737505908310414, 0.24391078842803837, 0.24211704706028103, 0.24052635133173317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754, 0.24737505908310414, 0.24391078842803837, 0.24211704706028103, 0.24052635133173317, 0.23941241739317776] ***
*** starting iteration: 9; err: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754, 0.24737505908310414, 0.24391078842803837, 0.24211704706028103, 0.24052635133173317, 0.23941241739317776] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754, 0.24737505908310414, 0.24391078842803837, 0.24211704706028103, 0.24052635133173317, 0.23941241739317776, 0.23815465402789415] ***
*** starting iteration: 10; err: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754, 0.24737505908310414, 0.24391078842803837, 0.24211704706028103, 0.24052635133173317, 0.23941241739317776, 0.23815465402789415] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754, 0.24737505908310414, 0.24391078842803837, 0.24211704706028103, 0.24052635133173317, 0.23941241739317776, 0.23815465402789415, 0.23729955931939184] ***
*** finished computation of 3 references, err: [Inf, 0.3784617932606488, 0.28417868151981385, 0.2793647547867149, 0.26236145674064754, 0.24737505908310414, 0.24391078842803837, 0.24211704706028103, 0.24052635133173317, 0.23941241739317776, 0.23815465402789415, 0.23729955931939184] ***
*** center 1: selecting labels [1] (freq >= 2) [from [154, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [104, 59, 0]]
** centroid: 2, normalized-entropy: 0.9443007272432112, [(1, 104), (2, 59)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [56, 113, 14]]
** centroid: 3, normalized-entropy: 0.7797947090976254, [(1, 56), (2, 113), (3, 14)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.30347247229330243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30347247229330243, 0.23943878678325564] ***
*** starting iteration: 2; err: [Inf, 0.30347247229330243, 0.23943878678325564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30347247229330243, 0.23943878678325564, 0.23941305155307055] ***
*** finished computation of 3 references, err: [Inf, 0.30347247229330243, 0.23943878678325564, 0.23941305155307055] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 134, 13]]
** centroid: 1, normalized-entropy: 0.43122562471952286, [(2, 134), (3, 13)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [195, 7, 0]]
** centroid: 2, normalized-entropy: 0.21721694990240226, [(1, 195), (2, 7)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [115, 36, 0]]
** centroid: 3, normalized-entropy: 0.7923871505136458, [(1, 115), (2, 36)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2973803475499153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2973803475499153, 0.24715309034567326] ***
*** starting iteration: 2; err: [Inf, 0.2973803475499153, 0.24715309034567326] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2973803475499153, 0.24715309034567326, 0.24327072010748088] ***
*** starting iteration: 3; err: [Inf, 0.2973803475499153, 0.24715309034567326, 0.24327072010748088] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2973803475499153, 0.24715309034567326, 0.24327072010748088, 0.24204014817625283] ***
*** starting iteration: 4; err: [Inf, 0.2973803475499153, 0.24715309034567326, 0.24327072010748088, 0.24204014817625283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2973803475499153, 0.24715309034567326, 0.24327072010748088, 0.24204014817625283, 0.2418058302216232] ***
*** finished computation of 3 references, err: [Inf, 0.2973803475499153, 0.24715309034567326, 0.24327072010748088, 0.24204014817625283, 0.2418058302216232] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [68, 86, 19]]
** centroid: 1, normalized-entropy: 0.8711710950935022, [(1, 68), (2, 86), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [91, 85, 0]]
** centroid: 2, normalized-entropy: 0.9991614946044223, [(1, 91), (2, 85)]
*** center 3: selecting labels [1] (freq >= 2) [from [151, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.272021924816072] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.272021924816072, 0.2398520298227668] ***
*** starting iteration: 2; err: [Inf, 0.272021924816072, 0.2398520298227668] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.272021924816072, 0.2398520298227668, 0.23901355542847888] ***
*** finished computation of 3 references, err: [Inf, 0.272021924816072, 0.2398520298227668, 0.23901355542847888] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [85, 62, 0]]
** centroid: 1, normalized-entropy: 0.9822682576547938, [(1, 85), (2, 62)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [70, 121, 18]]
** centroid: 2, normalized-entropy: 0.8137096373272401, [(1, 70), (2, 121), (3, 18)]
*** center 3: selecting labels [1] (freq >= 2) [from [144, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2778630457408726] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2778630457408726, 0.23298234732449055] ***
*** starting iteration: 2; err: [Inf, 0.2778630457408726, 0.23298234732449055] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2778630457408726, 0.23298234732449055, 0.23174306815117598] ***
*** starting iteration: 3; err: [Inf, 0.2778630457408726, 0.23298234732449055, 0.23174306815117598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2778630457408726, 0.23298234732449055, 0.23174306815117598, 0.23161364741623403] ***
*** finished computation of 3 references, err: [Inf, 0.2778630457408726, 0.23298234732449055, 0.23174306815117598, 0.23161364741623403] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [102, 66, 0]]
** centroid: 1, normalized-entropy: 0.9666186325481027, [(1, 102), (2, 66)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [62, 115, 11]]
** centroid: 2, normalized-entropy: 0.7578453987351854, [(1, 62), (2, 115), (3, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [144, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3283900885358453] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3283900885358453, 0.24050057864934207] ***
*** starting iteration: 2; err: [Inf, 0.3283900885358453, 0.24050057864934207] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3283900885358453, 0.24050057864934207, 0.23243275528401136] ***
*** starting iteration: 3; err: [Inf, 0.3283900885358453, 0.24050057864934207, 0.23243275528401136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3283900885358453, 0.24050057864934207, 0.23243275528401136, 0.2309765191655606] ***
*** starting iteration: 4; err: [Inf, 0.3283900885358453, 0.24050057864934207, 0.23243275528401136, 0.2309765191655606] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3283900885358453, 0.24050057864934207, 0.23243275528401136, 0.2309765191655606, 0.2307517463900149] ***
*** finished computation of 3 references, err: [Inf, 0.3283900885358453, 0.24050057864934207, 0.23243275528401136, 0.2309765191655606, 0.2307517463900149] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [79, 84, 8]]
** centroid: 1, normalized-entropy: 0.7729791136175238, [(1, 79), (2, 84), (3, 8)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [90, 85, 5]]
** centroid: 2, normalized-entropy: 0.7285798333081966, [(1, 90), (2, 85), (3, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [149, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.29483409662917254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29483409662917254, 0.25141681236959995] ***
*** starting iteration: 2; err: [Inf, 0.29483409662917254, 0.25141681236959995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29483409662917254, 0.25141681236959995, 0.2419075985159725] ***
*** starting iteration: 3; err: [Inf, 0.29483409662917254, 0.25141681236959995, 0.2419075985159725] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29483409662917254, 0.25141681236959995, 0.2419075985159725, 0.2406977636553347] ***
*** starting iteration: 4; err: [Inf, 0.29483409662917254, 0.25141681236959995, 0.2419075985159725, 0.2406977636553347] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29483409662917254, 0.25141681236959995, 0.2419075985159725, 0.2406977636553347, 0.24037818615511058] ***
*** finished computation of 3 references, err: [Inf, 0.29483409662917254, 0.25141681236959995, 0.2419075985159725, 0.2406977636553347, 0.24037818615511058] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [120, 38, 0]]
** centroid: 1, normalized-entropy: 0.7958812735955936, [(1, 120), (2, 38)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [198, 8, 0]]
** centroid: 2, normalized-entropy: 0.23692474671835093, [(1, 198), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 120, 16]]
** centroid: 3, normalized-entropy: 0.5225593745369407, [(2, 120), (3, 16)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2651815624646843] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2651815624646843, 0.23946982362493874] ***
*** starting iteration: 2; err: [Inf, 0.2651815624646843, 0.23946982362493874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2651815624646843, 0.23946982362493874, 0.2353896847702563] ***
*** starting iteration: 3; err: [Inf, 0.2651815624646843, 0.23946982362493874, 0.2353896847702563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2651815624646843, 0.23946982362493874, 0.2353896847702563, 0.23452944025956093] ***
*** finished computation of 3 references, err: [Inf, 0.2651815624646843, 0.23946982362493874, 0.2353896847702563, 0.23452944025956093] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [89, 61, 0]]
** centroid: 1, normalized-entropy: 0.9747170041802444, [(1, 89), (2, 61)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [60, 118, 18]]
** centroid: 2, normalized-entropy: 0.807523012423265, [(1, 60), (2, 118), (3, 18)]
*** center 3: selecting labels [1] (freq >= 2) [from [154, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2750371318683028] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2750371318683028, 0.23026386321987957] ***
*** starting iteration: 2; err: [Inf, 0.2750371318683028, 0.23026386321987957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2750371318683028, 0.23026386321987957, 0.22693746454548092] ***
*** starting iteration: 3; err: [Inf, 0.2750371318683028, 0.23026386321987957, 0.22693746454548092] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2750371318683028, 0.23026386321987957, 0.22693746454548092, 0.22658447325602174] ***
*** finished computation of 3 references, err: [Inf, 0.2750371318683028, 0.23026386321987957, 0.22693746454548092, 0.22658447325602174] ***
*** center 1: selecting labels [1] (freq >= 2) [from [193, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [5, 140, 9]]
** centroid: 2, normalized-entropy: 0.33122394276203965, [(1, 5), (2, 140), (3, 9)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [119, 34, 0]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(1, 119), (2, 34)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.29501014373265205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29501014373265205, 0.2557297406941652] ***
*** starting iteration: 2; err: [Inf, 0.29501014373265205, 0.2557297406941652] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29501014373265205, 0.2557297406941652, 0.24553041890263558] ***
*** starting iteration: 3; err: [Inf, 0.29501014373265205, 0.2557297406941652, 0.24553041890263558] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29501014373265205, 0.2557297406941652, 0.24553041890263558, 0.24406927371025086] ***
*** starting iteration: 4; err: [Inf, 0.29501014373265205, 0.2557297406941652, 0.24553041890263558, 0.24406927371025086] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29501014373265205, 0.2557297406941652, 0.24553041890263558, 0.24406927371025086, 0.24395958318188787] ***
*** finished computation of 3 references, err: [Inf, 0.29501014373265205, 0.2557297406941652, 0.24553041890263558, 0.24406927371025086, 0.24395958318188787] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [53, 125, 20]]
** centroid: 1, normalized-entropy: 0.7962181467974823, [(1, 53), (2, 125), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [162, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [93, 47, 0]]
** centroid: 3, normalized-entropy: 0.9206584065028529, [(1, 93), (2, 47)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.30860190108418467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30860190108418467, 0.23796438944432885] ***
*** starting iteration: 2; err: [Inf, 0.30860190108418467, 0.23796438944432885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30860190108418467, 0.23796438944432885, 0.2363540523480624] ***
*** starting iteration: 3; err: [Inf, 0.30860190108418467, 0.23796438944432885, 0.2363540523480624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30860190108418467, 0.23796438944432885, 0.2363540523480624, 0.23593999705277383] ***
*** finished computation of 3 references, err: [Inf, 0.30860190108418467, 0.23796438944432885, 0.2363540523480624, 0.23593999705277383] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [134, 32, 0]]
** centroid: 1, normalized-entropy: 0.7072324944713736, [(1, 134), (2, 32)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [162, 17, 0]]
** centroid: 2, normalized-entropy: 0.45285170593149116, [(1, 162), (2, 17)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 135, 20]]
** centroid: 3, normalized-entropy: 0.5547781633412736, [(2, 135), (3, 20)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3315459507256746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3315459507256746, 0.2595397477857769] ***
*** starting iteration: 2; err: [Inf, 0.3315459507256746, 0.2595397477857769] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3315459507256746, 0.2595397477857769, 0.23782682804670185] ***
*** starting iteration: 3; err: [Inf, 0.3315459507256746, 0.2595397477857769, 0.23782682804670185] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3315459507256746, 0.2595397477857769, 0.23782682804670185, 0.23424130663461984] ***
*** starting iteration: 4; err: [Inf, 0.3315459507256746, 0.2595397477857769, 0.23782682804670185, 0.23424130663461984] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3315459507256746, 0.2595397477857769, 0.23782682804670185, 0.23424130663461984, 0.2333052667696029] ***
*** finished computation of 3 references, err: [Inf, 0.3315459507256746, 0.2595397477857769, 0.23782682804670185, 0.23424130663461984, 0.2333052667696029] ***
*** center 1: selecting labels [1] (freq >= 2) [from [146, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [112, 44, 0]]
** centroid: 2, normalized-entropy: 0.8582307926411409, [(1, 112), (2, 44)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [46, 137, 15]]
** centroid: 3, normalized-entropy: 0.7185429741465227, [(1, 46), (2, 137), (3, 15)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.45626296403817834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45626296403817834, 0.26436645471304654] ***
*** starting iteration: 2; err: [Inf, 0.45626296403817834, 0.26436645471304654] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45626296403817834, 0.26436645471304654, 0.23727098103147] ***
*** starting iteration: 3; err: [Inf, 0.45626296403817834, 0.26436645471304654, 0.23727098103147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45626296403817834, 0.26436645471304654, 0.23727098103147, 0.23018151777144522] ***
*** starting iteration: 4; err: [Inf, 0.45626296403817834, 0.26436645471304654, 0.23727098103147, 0.23018151777144522] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45626296403817834, 0.26436645471304654, 0.23727098103147, 0.23018151777144522, 0.22830685338005424] ***
*** starting iteration: 5; err: [Inf, 0.45626296403817834, 0.26436645471304654, 0.23727098103147, 0.23018151777144522, 0.22830685338005424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45626296403817834, 0.26436645471304654, 0.23727098103147, 0.23018151777144522, 0.22830685338005424, 0.2279903299007565] ***
*** finished computation of 3 references, err: [Inf, 0.45626296403817834, 0.26436645471304654, 0.23727098103147, 0.23018151777144522, 0.22830685338005424, 0.2279903299007565] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [37, 132, 16]]
** centroid: 1, normalized-entropy: 0.7049216888467927, [(1, 37), (2, 132), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [149, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [112, 54, 0]]
** centroid: 3, normalized-entropy: 0.9100534290139191, [(1, 112), (2, 54)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31080922644585374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31080922644585374, 0.24352828237228097] ***
*** starting iteration: 2; err: [Inf, 0.31080922644585374, 0.24352828237228097] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31080922644585374, 0.24352828237228097, 0.2386549469344318] ***
*** starting iteration: 3; err: [Inf, 0.31080922644585374, 0.24352828237228097, 0.2386549469344318] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31080922644585374, 0.24352828237228097, 0.2386549469344318, 0.23780942522734402] ***
*** finished computation of 3 references, err: [Inf, 0.31080922644585374, 0.24352828237228097, 0.2386549469344318, 0.23780942522734402] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [3, 156, 13]]
** centroid: 1, normalized-entropy: 0.32255985730805564, [(1, 3), (2, 156), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [170, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [128, 30, 0]]
** centroid: 3, normalized-entropy: 0.7012065844539666, [(1, 128), (2, 30)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31696161717548965] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31696161717548965, 0.2430851295348257] ***
*** starting iteration: 2; err: [Inf, 0.31696161717548965, 0.2430851295348257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31696161717548965, 0.2430851295348257, 0.23202547144703567] ***
*** starting iteration: 3; err: [Inf, 0.31696161717548965, 0.2430851295348257, 0.23202547144703567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31696161717548965, 0.2430851295348257, 0.23202547144703567, 0.2302041993420571] ***
*** starting iteration: 4; err: [Inf, 0.31696161717548965, 0.2430851295348257, 0.23202547144703567, 0.2302041993420571] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31696161717548965, 0.2430851295348257, 0.23202547144703567, 0.2302041993420571, 0.2298964937571436] ***
*** finished computation of 3 references, err: [Inf, 0.31696161717548965, 0.2430851295348257, 0.23202547144703567, 0.2302041993420571, 0.2298964937571436] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [105, 38, 0]]
** centroid: 1, normalized-entropy: 0.8352767572972767, [(1, 105), (2, 38)]
*** center 2: selecting labels [1] (freq >= 2) [from [160, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [48, 137, 12]]
** centroid: 3, normalized-entropy: 0.6982376696364455, [(1, 48), (2, 137), (3, 12)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.27494658653996884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27494658653996884, 0.23802024684287607] ***
*** starting iteration: 2; err: [Inf, 0.27494658653996884, 0.23802024684287607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27494658653996884, 0.23802024684287607, 0.23374833412095905] ***
*** starting iteration: 3; err: [Inf, 0.27494658653996884, 0.23802024684287607, 0.23374833412095905] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27494658653996884, 0.23802024684287607, 0.23374833412095905, 0.23251580619998277] ***
*** starting iteration: 4; err: [Inf, 0.27494658653996884, 0.23802024684287607, 0.23374833412095905, 0.23251580619998277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27494658653996884, 0.23802024684287607, 0.23374833412095905, 0.23251580619998277, 0.23172974836826324] ***
*** finished computation of 3 references, err: [Inf, 0.27494658653996884, 0.23802024684287607, 0.23374833412095905, 0.23251580619998277, 0.23172974836826324] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [85, 107, 6]]
** centroid: 1, normalized-entropy: 0.7296085648096807, [(1, 85), (2, 107), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [142, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [76, 75, 9]]
** centroid: 3, normalized-entropy: 0.7925080138672447, [(1, 76), (2, 75), (3, 9)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2968877479750663] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2968877479750663, 0.24374745108559728] ***
*** starting iteration: 2; err: [Inf, 0.2968877479750663, 0.24374745108559728] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2968877479750663, 0.24374745108559728, 0.23762256423197686] ***
*** starting iteration: 3; err: [Inf, 0.2968877479750663, 0.24374745108559728, 0.23762256423197686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2968877479750663, 0.24374745108559728, 0.23762256423197686, 0.2370404856838286] ***
*** finished computation of 3 references, err: [Inf, 0.2968877479750663, 0.24374745108559728, 0.23762256423197686, 0.2370404856838286] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [178, 9, 0]]
** centroid: 1, normalized-entropy: 0.27839245066303986, [(1, 178), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [117, 33, 0]]
** centroid: 2, normalized-entropy: 0.7601675029619658, [(1, 117), (2, 33)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 143, 20]]
** centroid: 3, normalized-entropy: 0.5370707121632435, [(2, 143), (3, 20)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.398106442919001] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.398106442919001, 0.2634740394540131] ***
*** starting iteration: 2; err: [Inf, 0.398106442919001, 0.2634740394540131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.398106442919001, 0.2634740394540131, 0.24055917720682918] ***
*** starting iteration: 3; err: [Inf, 0.398106442919001, 0.2634740394540131, 0.24055917720682918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.398106442919001, 0.2634740394540131, 0.24055917720682918, 0.23071596502885222] ***
*** starting iteration: 4; err: [Inf, 0.398106442919001, 0.2634740394540131, 0.24055917720682918, 0.23071596502885222] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.398106442919001, 0.2634740394540131, 0.24055917720682918, 0.23071596502885222, 0.22877058399282396] ***
*** starting iteration: 5; err: [Inf, 0.398106442919001, 0.2634740394540131, 0.24055917720682918, 0.23071596502885222, 0.22877058399282396] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.398106442919001, 0.2634740394540131, 0.24055917720682918, 0.23071596502885222, 0.22877058399282396, 0.22794927034340798] ***
*** finished computation of 3 references, err: [Inf, 0.398106442919001, 0.2634740394540131, 0.24055917720682918, 0.23071596502885222, 0.22877058399282396, 0.22794927034340798] ***
*** center 1: selecting labels [1] (freq >= 2) [from [154, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [105, 65, 0]]
** centroid: 2, normalized-entropy: 0.9596868937742168, [(1, 105), (2, 65)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [52, 110, 14]]
** centroid: 3, normalized-entropy: 0.7785693310835781, [(1, 52), (2, 110), (3, 14)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31579838155582546] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31579838155582546, 0.23937103467807175] ***
*** starting iteration: 2; err: [Inf, 0.31579838155582546, 0.23937103467807175] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31579838155582546, 0.23937103467807175, 0.23837793336436153] ***
*** finished computation of 3 references, err: [Inf, 0.31579838155582546, 0.23937103467807175, 0.23837793336436153] ***
*** center 1: selecting labels [1] (freq >= 2) [from [164, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [42, 114, 14]]
** centroid: 2, normalized-entropy: 0.7454869150150434, [(1, 42), (2, 114), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [98, 68, 0]]
** centroid: 3, normalized-entropy: 0.9763102872004581, [(1, 98), (2, 68)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2622361816875637] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2622361816875637, 0.2316277084555477] ***
*** starting iteration: 2; err: [Inf, 0.2622361816875637, 0.2316277084555477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2622361816875637, 0.2316277084555477, 0.2305694993752986] ***
*** starting iteration: 3; err: [Inf, 0.2622361816875637, 0.2316277084555477, 0.2305694993752986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2622361816875637, 0.2316277084555477, 0.2305694993752986, 0.23025942642614244] ***
*** finished computation of 3 references, err: [Inf, 0.2622361816875637, 0.2316277084555477, 0.2305694993752986, 0.23025942642614244] ***
*** center 1: selecting labels [1] (freq >= 2) [from [181, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [18, 136, 16]]
** centroid: 2, normalized-entropy: 0.5813567221571087, [(1, 18), (2, 136), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [111, 38, 0]]
** centroid: 3, normalized-entropy: 0.8191590796855307, [(1, 111), (2, 38)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.30992845343053343] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30992845343053343, 0.2779681013561785] ***
*** starting iteration: 2; err: [Inf, 0.30992845343053343, 0.2779681013561785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858] ***
*** starting iteration: 3; err: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858, 0.24175503984093666] ***
*** starting iteration: 4; err: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858, 0.24175503984093666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858, 0.24175503984093666, 0.2337336144708097] ***
*** starting iteration: 5; err: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858, 0.24175503984093666, 0.2337336144708097] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858, 0.24175503984093666, 0.2337336144708097, 0.22857698668539525] ***
*** starting iteration: 6; err: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858, 0.24175503984093666, 0.2337336144708097, 0.22857698668539525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858, 0.24175503984093666, 0.2337336144708097, 0.22857698668539525, 0.22430192372947932] ***
*** starting iteration: 7; err: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858, 0.24175503984093666, 0.2337336144708097, 0.22857698668539525, 0.22430192372947932] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858, 0.24175503984093666, 0.2337336144708097, 0.22857698668539525, 0.22430192372947932, 0.222836967330426] ***
*** starting iteration: 8; err: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858, 0.24175503984093666, 0.2337336144708097, 0.22857698668539525, 0.22430192372947932, 0.222836967330426] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858, 0.24175503984093666, 0.2337336144708097, 0.22857698668539525, 0.22430192372947932, 0.222836967330426, 0.2214264184758067] ***
*** starting iteration: 9; err: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858, 0.24175503984093666, 0.2337336144708097, 0.22857698668539525, 0.22430192372947932, 0.222836967330426, 0.2214264184758067] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858, 0.24175503984093666, 0.2337336144708097, 0.22857698668539525, 0.22430192372947932, 0.222836967330426, 0.2214264184758067, 0.22076633552089334] ***
*** finished computation of 3 references, err: [Inf, 0.30992845343053343, 0.2779681013561785, 0.2653217223025858, 0.24175503984093666, 0.2337336144708097, 0.22857698668539525, 0.22430192372947932, 0.222836967330426, 0.2214264184758067, 0.22076633552089334] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [106, 32, 0]]
** centroid: 1, normalized-entropy: 0.7812812090702043, [(1, 106), (2, 32)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [10, 165, 11]]
** centroid: 2, normalized-entropy: 0.39201546425470807, [(1, 10), (2, 165), (3, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [176, 0, 0]]
finished with 4 centroids; started with 3
[ Info: ("class distribution: ", Dict(2 => 359,3 => 29,1 => 612), Dict(2 => 380,3 => 36,1 => 584))
[ Info: ===== scores for single classifier: {"micro_f1":0.906,"precision":0.906,"recall":0.906,"macro_recall":0.9203016101898581,"macro_f1":0.8108919376591187,"accuracy":0.906,"class_f1":{"2":0.8625730994152048,"3":0.6101694915254238,"1":0.9599332220367278},"class_precision":{"2":0.9703947368421053,"3":0.43902439024390244,"1":0.9364820846905537},"class_recall":{"2":0.7763157894736842,"3":1.0,"1":0.9845890410958904}}
[ Info: ===== scores for 1: {"micro_f1":0.939,"precision":0.939,"recall":0.939,"macro_recall":0.9517003124248978,"macro_f1":0.8504822706150174,"accuracy":0.939,"class_f1":{"2":0.9167803547066848,"3":0.6545454545454547,"1":0.9801210025929128},"class_precision":{"2":0.9518413597733711,"3":0.4864864864864865,"1":0.9895287958115183},"class_recall":{"2":0.8842105263157894,"3":1.0,"1":0.9708904109589042}}
[ Info: ===== scores for 5: {"micro_f1":0.946,"precision":0.946,"recall":0.946,"macro_recall":0.9566149963950973,"macro_f1":0.8591263111613592,"accuracy":0.946,"class_f1":{"2":0.9262295081967212,"3":0.6666666666666666,"1":0.9844827586206896},"class_precision":{"2":0.9630681818181818,"3":0.5,"1":0.9913194444444444},"class_recall":{"2":0.8921052631578947,"3":1.0,"1":0.9777397260273972}}
[ Info: ===== scores for 7: {"micro_f1":0.954,"precision":0.954,"recall":0.954,"macro_recall":0.9630197068012497,"macro_f1":0.8687941962394499,"accuracy":0.954,"class_f1":{"2":0.9375,"3":0.6792452830188679,"1":0.9896373056994818},"class_precision":{"2":0.9691011235955056,"3":0.5142857142857142,"1":0.9982578397212544},"class_recall":{"2":0.9078947368421053,"3":1.0,"1":0.9811643835616438}}
[ Info: ===== scores for 9: {"micro_f1":0.954,"precision":0.954,"recall":0.954,"macro_recall":0.9624068733477529,"macro_f1":0.8686922435296692,"accuracy":0.954,"class_f1":{"2":0.9371584699453553,"3":0.6792452830188679,"1":0.9896729776247848},"class_precision":{"2":0.9744318181818182,"3":0.5142857142857142,"1":0.9948096885813149},"class_recall":{"2":0.9026315789473685,"3":1.0,"1":0.9845890410958904}}
[ Info: ===== scores for 11: {"micro_f1":0.956,"precision":0.956,"recall":0.956,"macro_recall":0.96324200913242,"macro_f1":0.870076464416087,"accuracy":0.956,"class_f1":{"2":0.9395604395604396,"3":0.6792452830188679,"1":0.9914236706689536},"class_precision":{"2":0.9827586206896551,"3":0.5142857142857142,"1":0.993127147766323},"class_recall":{"2":0.9,"3":1.0,"1":0.9897260273972602}}
(score = 0.942, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.942, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.939, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.939, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.946, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.946, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.948, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.948, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.951, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.951, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.946, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.946, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.952, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.952, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.954, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.954, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.954,"k":7,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.954,"precision":0.954,"recall":0.954,"macro_recall":0.9630197068012497,"macro_f1":0.8687941962394499,"accuracy":0.954,"class_f1":{"2":0.9375,"3":0.6792452830188679,"1":0.9896373056994818},"class_precision":{"2":0.9691011235955056,"3":0.5142857142857142,"1":0.9982578397212544},"class_recall":{"2":0.9078947368421053,"3":1.0,"1":0.9811643835616438}}
Test Summary: | Pass  Total
AKNC          |    8      8
[339, 1, 1, 2, 1, 1, 3, 2, 4, 8, 18, 3, 3, 3, 2, 3, 5, 4, 2, 10, 2, 18, 6, 2, 6, 1, 23, 7, 2, 3, 1, 14, 16, 15, 4, 2, 34, 14, 11, 3, 14, 31, 5, 1, 5, 20, 6, 40, 8, 78, 6, 1, 2, 9, 8, 138, 10, 7, 7, 9, 17, 7, 48, 4, 13, 10, 1, 3, 13, 70, 5, 10, 5, 22, 10, 5, 1, 19, 16, 5, 27, 47, 9, 18, 16, 4, 3, 1, 16, 182, 9, 4, 3, 35, 3, 37, 30, 16, 47, 44, 22, 2, 9, 16, 12, 25, 52, 18, 198, 38, 13, 9, 25, 28, 36, 36, 50, 7, 38, 4, 5, 2, 6, 33, 6, 21, 29, 340, 70, 53, 7, 16, 12, 89, 11, 7, 11, 10, 42, 12, 25, 79, 12, 19, 102, 57, 3, 28, 4, 9, 25, 93, 74, 17, 5, 2, 12, 18, 7, 21, 26, 29, 7, 21, 33, 15, 10, 20, 4, 5, 75, 17, 56, 8, 293, 12, 97, 21, 11, 4, 86, 46, 186, 10, 17, 10, 75, 15, 3, 28, 17, 26, 20, 26, 10, 28, 9, 3, 8, 43, 20, 67, 2, 78, 21, 9, 2, 83, 7, 30, 7, 6, 66, 376, 87, 10, 101, 16, 62, 32, 60, 46, 2, 7, 178, 6, 167, 41, 4, 23, 5, 4, 47, 46, 15, 8, 16, 16, 1, 2, 1125, 32, 9, 14, 19, 3, 16, 38, 30, 16, 15, 50, 8, 3, 12, 5, 5, 50, 26, 19, 12, 23, 24, 15, 30, 34, 47, 19, 82, 28, 13, 76, 33, 52, 218, 17, 9, 20, 110, 12, 19, 26, 5, 16, 23, 116, 23, 13, 38, 13, 71, 26, 14, 21, 6, 26, 24, 4, 25, 45]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6199999999999997, speedup = 0.29980750011985147, eval_ratio = 0.089244)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3874131944444445,"recall":0.3836805555555556,"f1":null,"seconds":0.00017372332513332367,"exhaustive_search_seconds":0.0003796890377998352,"evaluations":496.953125,"distances_sum":1701.4244258450697}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5624999999999996,"recall":0.5624999999999996,"f1":null,"seconds":0.00029587186872959137,"exhaustive_search_seconds":0.0003796890377998352,"evaluations":674.8671875,"distances_sum":1607.4644011612509}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6657986111111108,"recall":0.6657986111111108,"f1":0.6657986111111108,"seconds":0.0005418341606855392,"exhaustive_search_seconds":0.0003796890377998352,"evaluations":810.328125,"distances_sum":1554.2489311813401}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7343749999999994,"recall":0.7343749999999994,"f1":0.7343749999999994,"seconds":0.0004724618047475815,"exhaustive_search_seconds":0.0003796890377998352,"evaluations":962.609375,"distances_sum":1525.3791175607403}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7968749999999993,"recall":0.7968749999999993,"f1":0.7968749999999993,"seconds":0.0005602296441793442,"exhaustive_search_seconds":0.0003796890377998352,"evaluations":1086.015625,"distances_sum":1504.970690161477}
KCenters.DeloneInvIndex> reached performance {"precision":0.8402777777777772,"recall":0.8402777777777772,"f1":0.8402777777777772,"seconds":0.0006386134773492813,"exhaustive_search_seconds":0.0003796890377998352,"evaluations":1194.109375,"distances_sum":1492.6954468927888}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8030000000000003, speedup = 0.5139278275244089, eval_ratio = 0.130618)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
