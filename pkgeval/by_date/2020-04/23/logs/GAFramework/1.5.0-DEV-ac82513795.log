Julia Version 1.5.0-DEV.662
Commit ac82513795 (2020-04-22 15:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_07Xx0o/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_07Xx0o/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21717197117973247
curgen: 20 fitness: 0.21723262874286942
curgen: 30 fitness: 0.21723262874286942
curgen: 40 fitness: 0.21723262874286942
curgen: 50 fitness: 0.21723262874286942
CoordinateCreature{Array{Float64,1}}([0.2226984655951096], -0.21723262874286942) 0.2226984655951096 -0.21723262874286942
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2576661706978234
curgen: 100 fitness: 3.257833391803311
curgen: 150 fitness: 3.2580040405306994
curgen: 200 fitness: 3.2581246496118084
curgen: 250 fitness: 3.2582180430289993
curgen: 300 fitness: 3.2583390055961052
curgen: 350 fitness: 3.258367918418325
curgen: 400 fitness: 3.258372918732778
curgen: 450 fitness: 3.2584269094092626
curgen: 500 fitness: 3.258427878244487
CoordinateCreature{Array{Float64,1}}([-0.22235910379906046, -0.22251668643793726, 0.22247978961629936, -0.22298337739353707, 0.22253899904947516, 0.22257190527750426, -0.22254722863334467, 0.22168930326846148, 0.22271442998359595, -0.22236459725379615, 0.22259035535702745, -0.22211819926803367, -0.2229325649730866, 0.2223091224065883, 0.22199850252548595], -3.258427878244487) [-0.22235910379906046, -0.22251668643793726, 0.22247978961629936, -0.22298337739353707, 0.22253899904947516, 0.22257190527750426, -0.22254722863334467, 0.22168930326846148, 0.22271442998359595, -0.22236459725379615, 0.22259035535702745, -0.22211819926803367, -0.2229325649730866, 0.2223091224065883, 0.22199850252548595] -3.258427878244487
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.001201198521528113
curgen: 100 fitness: -0.0011700660776625682
curgen: 150 fitness: -0.0009847920956644884
curgen: 200 fitness: -0.0009798777216474264
curgen: 250 fitness: -0.0006808669781435128
curgen: 300 fitness: -0.0006808669781435128
curgen: 350 fitness: -0.0005405798831361608
curgen: 400 fitness: -0.0005405798831361608
curgen: 450 fitness: -0.00044008979608634036
curgen: 500 fitness: -0.0003626057504675373
CoordinateCreature{Array{Float64,1}}([7.250959430507575e-5, 0.0002268272447593471, -0.00013189746322186816, -0.0005473027599260338, 1.0940192712499686e-5, -0.00048379324384050074, -2.8923347266876558e-5, 0.00032592327014007924, -3.64163247756899e-5, 0.00036227107720788825, -0.0003368103667628855, 0.0004060215437325654, 3.849317673361441e-5, -0.00017812316897442313, 0.000817783960559324], 0.0003626057504675373) [7.250959430507575e-5, 0.0002268272447593471, -0.00013189746322186816, -0.0005473027599260338, 1.0940192712499686e-5, -0.00048379324384050074, -2.8923347266876558e-5, 0.00032592327014007924, -3.64163247756899e-5, 0.00036227107720788825, -0.0003368103667628855, 0.0004060215437325654, 3.849317673361441e-5, -0.00017812316897442313, 0.000817783960559324] 0.0003626057504675373
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
