Julia Version 1.5.0-DEV.667
Commit a8275e544a (2020-04-23 15:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_iBDnjk/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_iBDnjk/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.018729767384803232 -0.045408368862262044; -0.018729767384803232 0.0 0.048967337622602206; 0.045408368862262044 -0.048967337622602206 0.0])
dAA = so3([0.0 0.20200786395309553 -0.06959485144487955; -0.20200786395309553 0.0 -0.1559799913390307; 0.06959485144487955 0.1559799913390307 0.0])
dAA = so3([0.0 0.06997742725052825 -0.04580527968588786; -0.06997742725052825 0.0 -0.03817424124193913; 0.04580527968588786 0.03817424124193913 0.0])
dAA = Quaternion(0.9960917235920829, [-0.0786221793354996, -0.04000097142960943, 0.004444478887088779])
dAA = SO3([0.9933444676409782 -0.11487325520887423 -0.008420442077387695; 0.11403747356250546 0.9911248543583655 -0.068315281574403; 0.016193308202546428 0.06690036106648417 0.9976282466222735])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8624662156232317 0.43629778965525406 -0.25650782765927627; -0.5017069702200774 0.8037588742998567 -0.3197839708566043; 0.06664940315660489 0.40449463621433457 0.9121085167526403]), [-0.48967337622602203, -0.4540836886226204, -0.1872976738480323])
xj = SE3(SO3([0.9800697854850725 0.0016921684690669543 -0.19864629909745682; 0.07518586349852513 0.9224172600701478 0.3788053382077165; 0.18387577738578056 -0.3861910600862657 0.9039060590571464]), [0.3817424124193913, -0.45805279685887856, -0.6997742725052825])
Dx = SE3(SO3([0.8198110179724766 -0.48706313435195214 -0.30113020101973165; 0.5624103518061626 0.585927135592696 0.5834243635274471; -0.10772414303302685 -0.6476564636683484 0.7542788702306392]), [0.7194017473027994, 0.16971254114651074, -0.6896899840125823])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
