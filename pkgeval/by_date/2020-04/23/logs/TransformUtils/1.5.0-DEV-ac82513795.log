Julia Version 1.5.0-DEV.662
Commit ac82513795 (2020-04-22 15:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Ei9pq1/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Ei9pq1/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.03871364193206947 0.027328783718425672; 0.03871364193206947 0.0 -0.013191024551032172; -0.027328783718425672 0.013191024551032172 0.0])
dAA = so3([0.0 -0.11795809699347802 -0.012459916009285772; 0.11795809699347802 0.0 0.06418288214833985; 0.012459916009285772 -0.06418288214833985 0.0])
dAA = so3([0.0 0.2222639980918909 0.033281794434816846; -0.2222639980918909 0.0 0.004684181639646398; -0.033281794434816846 -0.004684181639646398 0.0])
dAA = Quaternion(0.995855836060388, [-0.04967588847894149, 0.03912670067927516, -0.06536483138697786])
dAA = SO3([0.9937503812420874 0.09400269724276704 0.06019694919421766; -0.08962544380936709 0.9933913289109426 -0.07170040074173926; -0.06653915841953914 0.06585712228481215 0.9956080452874934])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.956448180013747 -0.2868641127336206 -0.05399870159498053; 0.29181515034410155 0.9441769901983664 0.15288469252872708; 0.007127199873762774 -0.16198392514538787 0.9867676580717737]), [0.1319102455103217, 0.2732878371842567, 0.38713641932069465])
xj = SE3(SO3([0.9285067187018265 0.30224478711082975 0.21569274904339344; -0.348119524790007 0.9106685036212024 0.22247623012874834; -0.1291823122008072 -0.28165753172363295 0.950779135781704]), [-0.04684181639646398, 0.3328179443481684, -2.222639980918909])
Dx = SE3(SO3([0.785561301609375 0.5528209133241097 0.27799726474424474; -0.5741162431834758 0.8187530566699626 -0.005828508084027878; -0.2308332314175685 -0.15502409485331814 0.9605641828052056]), [-0.17219569514274913, 0.5302263341090153, -2.556489325175068])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
