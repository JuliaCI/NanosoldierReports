Julia Version 1.5.0-DEV.565
Commit e7886ad9e1 (2020-04-02 17:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.5
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.5
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_pepSOJ/Project.toml`
   9b8138ad TransformUtils v0.2.5
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_pepSOJ/Manifest.toml`
   9b8138ad TransformUtils v0.2.5
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.15123074727453312 -0.14731326868092118; 0.15123074727453312 0.0 -0.028977079736437678; 0.14731326868092118 0.028977079736437678 0.0])
dAA = so3([0.0 0.07748921567744549 -0.02645662778686991; -0.07748921567744549 0.0 0.01500027187616057; 0.02645662778686991 -0.01500027187616057 0.0])
dAA = so3([0.0 0.07696094603035064 -0.11492604232457711; -0.07696094603035064 0.0 0.13588069492266816; 0.11492604232457711 -0.13588069492266816 0.0])
dAA = Quaternion(0.9970761757914796, [-0.03825728420389637, -0.03576460081409685, 0.05564506449802216])
dAA = SO3([0.9917969681889207 -0.12624111376522493 0.020048817585602174; 0.12493890013783539 0.9905504005416463 0.0565700912066816; -0.02700083560953647 -0.05360116773074829 0.9981973100015282])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9791238467382632 0.1935634262247759 -0.06204589250378897; -0.19109201143306156 0.9806027008927376 0.043614059296685145; 0.06928445651755284 -0.030847091110732503 0.9971199130771953]), [0.2897707973643768, -1.4731326868092118, 1.5123074727453312])
xj = SE3(SO3([0.945848246553541 -0.26173943603414157 -0.19199885967401298; 0.2951012542379969 0.9397302584601611 0.17269131733112647; 0.1352270100192744 -0.21999888399473352 0.9660818530550705]), [-1.3588069492266814, -1.149260423245771, -0.7696094603035063])
Dx = SE3(SO3([0.8790802112430653 -0.45109277185855856 -0.15405613709881877; 0.46828735433551766 0.8776251731586004 0.10237680014426048; 0.08902210944641178 -0.16213995995836122 0.982743963306014]), [-1.8341525617055408, 0.06887615890734988, -2.158931952174302])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
