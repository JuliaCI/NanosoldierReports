Julia Version 1.5.0-DEV.567
Commit f47e0927a3 (2020-04-03 02:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed DataAPI ────────────────────── v1.1.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Parameters ─────────────────── v0.12.0
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed LazyArrays ─────────────────── v0.15.1
  Installed StatsBase ──────────────────── v0.32.2
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed InplaceOps ─────────────────── v0.3.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed ProgressMeter ──────────────── v1.2.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed SpecialFunctions ───────────── v0.10.0
  Installed OrderedCollections ─────────── v1.1.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed Requires ───────────────────── v1.0.1
  Installed DataStructures ─────────────── v0.17.11
  Installed ArgCheck ───────────────────── v2.0.0
  Installed FillArrays ─────────────────── v0.8.6
  Installed Missings ───────────────────── v0.4.3
  Installed StaticArrays ───────────────── v0.12.1
  Installed StatsFuns ──────────────────── v0.9.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.3.3+0
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.11
   1a297f60 + FillArrays v0.8.6
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.1
   1914dd2f + MacroTools v0.5.5
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
     Status `/tmp/jl_Bh6N0H/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.6.6
   31c24e10 Distributions v0.23.2
   f6369f11 ForwardDiff v0.10.10
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.1
   1dea7af3 OrdinaryDiffEq v5.32.1
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.10.1
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.12
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_Bh6N0H/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.5.6
   1520ce14 AbstractTrees v0.3.2
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+3
   4fba245c ArrayInterface v2.6.2
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.6.6
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v1.0.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.3.3+0
   88cd18e8 ConsoleProgressMonitor v0.1.2
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.11
   2b5f629d DiffEqBase v6.25.1
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   31c24e10 Distributions v0.23.2
   ced4e74d DistributionsAD v0.4.9
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.5.0
   da5c29d0 EllipsisNotation v0.4.0
   cad2338a EllipticalSliceSampling v0.2.1
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+5
   1a297f60 FillArrays v0.8.6
   6a86dc24 FiniteDiff v2.3.0
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.10
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.3.0
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.2
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.3
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.1
   1d6d02ad LeftChildRightSiblingTrees v0.1.2
   6f1fad26 Libtask v0.3.4
   093fc24a LightGraphs v1.3.1
   d3d80556 LineSearches v7.0.1
   6fdf6af0 LogDensityProblems v0.10.3
   e6f89c97 LoggingExtras v0.4.0
   c7f686f2 MCMCChains v3.0.9
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.5
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.9+0
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.32.1
   90014a1f PDMats v0.9.12
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v1.0.1
   f27b6e38 Polynomials v0.6.1
   33c8b6b6 ProgressLogging v0.1.2
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.2
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   37e2e3b7 ReverseDiff v1.1.0
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v1.0.1
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   5d786b92 TerminalLoggers v0.1.1
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.10.1
   3a884ed6 UnPack v0.1.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.12
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.142468967
│   t_steps = 0.007812049
└   t_step / t_steps = 18.237080566186926
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/k3AhB/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 5:58:10[K
  iterations:                    1
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6949177327096058
  log_density:                   -11.059470375721347
  hamiltonian_energy:            16.30880369386179
  hamiltonian_energy_error:      -0.004408703328529384
  max_hamiltonian_energy_error:  0.8678348239331868
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8500000000000001
  nom_step_size:                 0.8500000000000001
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▊                           |  ETA: 0:00:21[K
  iterations:                    1431
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7391972244614462
  log_density:                   -13.44654297183644
  hamiltonian_energy:            15.778958785538489
  hamiltonian_energy_error:      0.3865042518621813
  max_hamiltonian_energy_error:  0.6195922357202477
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8747236979123731
  nom_step_size:                 0.8747236979123731
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0905310961409214, 0.9400 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:18[K
  iterations:                    1715
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9729502600772798
  log_density:                   -11.908046055311933
  hamiltonian_energy:            17.04989327140931
  hamiltonian_energy_error:      -0.4578843783638682
  max_hamiltonian_energy_error:  -0.5381870639223187
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7522968397637106
  nom_step_size:                 0.7522968397637106
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0905310961409214, 0.9400 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▎                         |  ETA: 0:00:15[K
  iterations:                    2020
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9672805708081122
  log_density:                   -13.10318278567764
  hamiltonian_energy:            17.68023867433278
  hamiltonian_energy_error:      -0.08328585234892572
  max_hamiltonian_energy_error:  -0.12020043555073201
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▋                        |  ETA: 0:00:12[K
  iterations:                    2547
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9364646183631652
  log_density:                   -12.889052573072004
  hamiltonian_energy:            17.932515397041
  hamiltonian_energy_error:      -0.0940612159284413
  max_hamiltonian_energy_error:  0.2206090986223188
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▉                       |  ETA: 0:00:10[K
  iterations:                    3044
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9961318433100538
  log_density:                   -13.95582631676989
  hamiltonian_energy:            18.394747597524482
  hamiltonian_energy_error:      -0.16610993420799147
  max_hamiltonian_energy_error:  -0.29166260071916383
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▏                     |  ETA: 0:00:08[K
  iterations:                    3540
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7306926976722193
  log_density:                   -17.915590088848475
  hamiltonian_energy:            21.34885247327232
  hamiltonian_energy_error:      0.6255226921752275
  max_hamiltonian_energy_error:  0.6255226921752275
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▍                    |  ETA: 0:00:07[K
  iterations:                    4026
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8269750969161348
  log_density:                   -14.603327284768636
  hamiltonian_energy:            18.48690789824146
  hamiltonian_energy_error:      0.2632362374105206
  max_hamiltonian_energy_error:  0.320122088328997
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▋                   |  ETA: 0:00:06[K
  iterations:                    4514
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.675944118029932
  hamiltonian_energy:            19.04823249638939
  hamiltonian_energy_error:      -0.5009845669031954
  max_hamiltonian_energy_error:  -0.5439394873630086
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|████████████▉                  |  ETA: 0:00:05[K
  iterations:                    5006
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7270309609741703
  log_density:                   -16.63212711748392
  hamiltonian_energy:            21.48357882688633
  hamiltonian_energy_error:      0.4215559574612371
  max_hamiltonian_energy_error:  0.6349170598098652
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 46%|██████████████▎                |  ETA: 0:00:04[K
  iterations:                    5501
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.931532635635467
  log_density:                   -12.465027063374638
  hamiltonian_energy:            15.985722035262146
  hamiltonian_energy_error:      0.05997400652368867
  max_hamiltonian_energy_error:  0.1406766289662187
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▌               |  ETA: 0:00:04[K
  iterations:                    5995
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.4540513877849111
  log_density:                   -17.74188199930405
  hamiltonian_energy:            25.524886506844016
  hamiltonian_energy_error:      0.5413654563684283
  max_hamiltonian_energy_error:  1.1786541832759134
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▉              |  ETA: 0:00:03[K
  iterations:                    6533
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9974996441829129
  log_density:                   -14.440561930497989
  hamiltonian_energy:            20.6591669501303
  hamiltonian_energy_error:      -0.33025640820897095
  max_hamiltonian_energy_error:  -0.4254887242060086
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|██████████████████▏            |  ETA: 0:00:03[K
  iterations:                    7014
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9224847062806856
  log_density:                   -16.14825766280689
  hamiltonian_energy:            23.594771334789208
  hamiltonian_energy_error:      0.014910236235223806
  max_hamiltonian_energy_error:  0.14687845412893097
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▌           |  ETA: 0:00:02[K
  iterations:                    7538
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9949925310560924
  log_density:                   -11.063895905681518
  hamiltonian_energy:            14.898788560437897
  hamiltonian_energy_error:      -0.29277627650609084
  max_hamiltonian_energy_error:  -0.29277627650609084
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████          |  ETA: 0:00:02[K
  iterations:                    8123
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9744686776259055
  log_density:                   -12.823150601400428
  hamiltonian_energy:            16.54998710105648
  hamiltonian_energy_error:      -0.041812672503269255
  max_hamiltonian_energy_error:  0.07261354671504705
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▍        |  ETA: 0:00:02[K
  iterations:                    8647
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.966111870409182
  log_density:                   -14.164283754672281
  hamiltonian_energy:            18.05073897743344
  hamiltonian_energy_error:      0.037788907918802295
  max_hamiltonian_energy_error:  0.11908384857332521
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:01[K
  iterations:                    9095
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.997214302558673
  log_density:                   -13.309173850087394
  hamiltonian_energy:            17.439484703297317
  hamiltonian_energy_error:      -0.3614903185986762
  max_hamiltonian_energy_error:  -0.6515367828676517
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▊      |  ETA: 0:00:01[K
  iterations:                    9565
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9663863843320415
  log_density:                   -12.21288794100483
  hamiltonian_energy:            14.339965624590278
  hamiltonian_energy_error:      0.05763788813309034
  max_hamiltonian_energy_error:  0.08759774124684228
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|█████████████████████████▉     |  ETA: 0:00:01[K
  iterations:                    10028
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9994430127168775
  log_density:                   -11.356125643631145
  hamiltonian_energy:            15.059213546915725
  hamiltonian_energy_error:      -0.2541286746295164
  max_hamiltonian_energy_error:  -0.2813063934851847
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:01[K
  iterations:                    10560
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7901784576160965
  log_density:                   -12.978629979781388
  hamiltonian_energy:            19.0366885593506
  hamiltonian_energy_error:      0.041997786110300694
  max_hamiltonian_energy_error:  0.45542733786633605
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▋  |  ETA: 0:00:00[K
  iterations:                    11066
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8455859654549566
  log_density:                   -17.956562072116192
  hamiltonian_energy:            29.021798638661842
  hamiltonian_energy_error:      -0.14314648761626358
  max_hamiltonian_energy_error:  0.41415188992273855
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▉ |  ETA: 0:00:00[K
  iterations:                    11560
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9682995037130111
  log_density:                   -11.774965162387632
  hamiltonian_energy:            14.693194947883484
  hamiltonian_energy_error:      -0.021135744813234325
  max_hamiltonian_energy_error:  0.07673370959578207
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|██████████████████████████████▉|  ETA: 0:00:00[K
  iterations:                    11964
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.751063033308481
  log_density:                   -13.097730125474078
  hamiltonian_energy:            15.619559479809835
  hamiltonian_energy_error:      0.25483101133033337
  max_hamiltonian_energy_error:  0.4004832709655517
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9927959903754141
  log_density:                   -19.180010533916054
  hamiltonian_energy:            24.174474058286904
  hamiltonian_energy_error:      0.00823418167264478
  max_hamiltonian_energy_error:  -0.5088179473768797
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7163149627859171
  nom_step_size:                 0.7163149627859171
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9674067053298058, 0.8573 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.103626174 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9674067053298058, 0.8573 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.716), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0996497010860038
└   average_acceptance_rate = 0.864817178074622
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.034878607 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡄⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢱⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢇⠀⠀⠀⡀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⢇⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡄⠀⢀⠇⠘⡄⢀⠎⠈⢢│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠘⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠉⠀⠘⡄⡜⠀⠀⠸⠎⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⢠⠃⠀⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠈⢆⢀⣀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⢀⣀⡠⠒⠁⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⡠⠎⠀⠀⠀⠀⠀⣀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⢀⣀⠔⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣆⣀⢀⣜⠤⠒⠊⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠑⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
