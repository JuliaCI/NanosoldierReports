Julia Version 1.5.0-DEV.627
Commit b46fc558d3 (2020-04-14 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_0PtYcn/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_0PtYcn/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721881869989632
curgen: 20 fitness: 0.21721881869989632
curgen: 30 fitness: 0.21721965169637455
curgen: 40 fitness: 0.21721965169637455
curgen: 50 fitness: 0.21721965169637455
CoordinateCreature{Array{Float64,1}}([-0.22198727775377156], -0.21721965169637455) -0.22198727775377156 -0.21721965169637455
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257275318976155
curgen: 100 fitness: 3.25795555457417
curgen: 150 fitness: 3.258252970850792
curgen: 200 fitness: 3.2583645929791163
curgen: 250 fitness: 3.258394224478762
curgen: 300 fitness: 3.2584077549001997
curgen: 350 fitness: 3.2584260881635116
curgen: 400 fitness: 3.258453856089608
curgen: 450 fitness: 3.258455936689239
curgen: 500 fitness: 3.258478457567436
CoordinateCreature{Array{Float64,1}}([0.2226029837799377, 0.22272122206683587, 0.22276578109796324, 0.22270582171580597, 0.2221330655351116, -0.22247762930285683, 0.22242363097095086, 0.22255212384309625, -0.2226431340660966, 0.22241846641469798, 0.22286482725151546, -0.22252674243966059, 0.2224284487731828, 0.22246022893582462, 0.222174899296841], -3.258478457567436) [0.2226029837799377, 0.22272122206683587, 0.22276578109796324, 0.22270582171580597, 0.2221330655351116, -0.22247762930285683, 0.22242363097095086, 0.22255212384309625, -0.2226431340660966, 0.22241846641469798, 0.22286482725151546, -0.22252674243966059, 0.2224284487731828, 0.22246022893582462, 0.222174899296841] -3.258478457567436
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.00396228602193105
curgen: 100 fitness: -0.0035438329730084206
curgen: 150 fitness: -0.002902942189678015
curgen: 200 fitness: -0.0011405447597212515
curgen: 250 fitness: -0.0011405447597212515
curgen: 300 fitness: -0.0007190439110331681
curgen: 350 fitness: -0.0007190439110331681
curgen: 400 fitness: -0.0007190439110331681
curgen: 450 fitness: -0.0007190439110331681
curgen: 500 fitness: -0.0007160276626336781
CoordinateCreature{Array{Float64,1}}([0.00033489057495564414, 0.00040055826557429766, -0.00036912174765559567, -1.137512112247413e-5, -0.0002960940075593932, -7.779228721667463e-5, 4.955975592150575e-5, 0.0005781957592936916, 0.00034928097749853317, 0.00015067425113610253, -0.0014918357235395243, -0.00020337786905259576, 3.58303699055149e-5, -0.00035471486051236276, -0.0004805829270603593], 0.0007160276626336781) [0.00033489057495564414, 0.00040055826557429766, -0.00036912174765559567, -1.137512112247413e-5, -0.0002960940075593932, -7.779228721667463e-5, 4.955975592150575e-5, 0.0005781957592936916, 0.00034928097749853317, 0.00015067425113610253, -0.0014918357235395243, -0.00020337786905259576, 3.58303699055149e-5, -0.00035471486051236276, -0.0004805829270603593] 0.0007160276626336781
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
