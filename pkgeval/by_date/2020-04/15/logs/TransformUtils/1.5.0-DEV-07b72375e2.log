Julia Version 1.5.0-DEV.633
Commit 07b72375e2 (2020-04-15 15:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_qQU6FN/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_qQU6FN/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.08765872802540893 0.03814613190875207; 0.08765872802540893 0.0 0.10160442997349504; -0.03814613190875207 -0.10160442997349504 0.0])
dAA = so3([0.0 0.01835437380377107 -0.1060885528063934; -0.01835437380377107 0.0 0.12100135221958482; 0.1060885528063934 -0.12100135221958482 0.0])
dAA = so3([0.0 0.13014129411776673 0.04177556955603138; -0.13014129411776673 0.0 0.15302285288647563; -0.04177556955603138 -0.15302285288647563 0.0])
dAA = Quaternion(0.9943923564075109, [-0.09688114209560873, -0.042373356698855294, -0.0015441718298155203])
dAA = SO3([0.9982155298729336 -0.04359154573781113 0.04081094290367684; 0.045602147931302725 0.9977223274929861 -0.04970514385886995; -0.03855126488911139 0.05147751317000166 0.9979297899217572])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9642682812095438 0.08421236763655841 -0.25118709956969776; -0.00507221837369246 0.953829131506787 0.3003069437921438; 0.26487913178270894 -0.28830238470406966 0.9201743207240598]), [-1.0160442997349504, 0.3814613190875207, 0.8765872802540893])
xj = SE3(SO3([0.9780349996956575 0.03796067440891157 -0.20495493789790908; 0.06255758141001809 0.8844918400337477 0.462342658557313; 0.19883180927216887 -0.46500878713432475 0.8626892485185034]), [-1.5302285288647561, 0.4177556955603138, -1.3014129411776674])
Dx = SE3(SO3([0.9954372194162641 -0.09105318530403445 0.028531730525957005; 0.08470820173308369 0.9809139841124576 0.17502078828462786; -0.043923373731577925 -0.17180533524490577 0.984151240420608]), [-1.0729024435266508, 0.6192406199779922, -1.8640839758578354])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
