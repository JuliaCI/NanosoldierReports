Julia Version 1.5.0-DEV.719
Commit 5a71af311a (2020-04-29 17:39 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_6hsFUd/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_6hsFUd/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21720636533780902
curgen: 20 fitness: 0.21720636533780902
curgen: 30 fitness: 0.2172282682111207
curgen: 40 fitness: 0.2172282682111207
curgen: 50 fitness: 0.2172282682111207
CoordinateCreature{Array{Float64,1}}([-0.22220059812229337], -0.2172282682111207) -0.22220059812229337 -0.2172282682111207
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2577733265701325
curgen: 100 fitness: 3.2582073093545945
curgen: 150 fitness: 3.2583102993209145
curgen: 200 fitness: 3.258317227674513
curgen: 250 fitness: 3.258321536679826
curgen: 300 fitness: 3.2584053134801465
curgen: 350 fitness: 3.2584376528821446
curgen: 400 fitness: 3.2584410472134544
curgen: 450 fitness: 3.258442365665118
curgen: 500 fitness: 3.258442365665118
CoordinateCreature{Array{Float64,1}}([0.22262428667993653, 0.222434612427959, 0.2225927412461959, 0.22284097502942857, -0.223128196306779, -0.22266138489144482, 0.22223513083893878, 0.2225506355567018, 0.2226500460374027, 0.22198651282127047, 0.2224596217210486, -0.2224711534532677, 0.22317543235082066, 0.22243007753690883, 0.2222285247111282], -3.258442365665118) [0.22262428667993653, 0.222434612427959, 0.2225927412461959, 0.22284097502942857, -0.223128196306779, -0.22266138489144482, 0.22223513083893878, 0.2225506355567018, 0.2226500460374027, 0.22198651282127047, 0.2224596217210486, -0.2224711534532677, 0.22317543235082066, 0.22243007753690883, 0.2222285247111282] -3.258442365665118
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003282566021226785
curgen: 100 fitness: -0.003022893116394698
curgen: 150 fitness: -0.003004352078477268
curgen: 200 fitness: -0.0023474028126599933
curgen: 250 fitness: -0.0023474028126599933
curgen: 300 fitness: -0.0019824841304227903
curgen: 350 fitness: -0.0019688094893126618
curgen: 400 fitness: -0.0019688094893126618
curgen: 450 fitness: -0.0013693012529927273
curgen: 500 fitness: -0.0013693012529927273
CoordinateCreature{Array{Float64,1}}([1.1152641351106288e-5, 6.933690565477901e-5, 0.0005754268707043908, -0.00013738473917415347, -1.4950118272133417e-5, 0.00014736633029284165, 0.000303458572167915, -0.0006852906545510869, -0.0019067561037256365, -0.00013445321491030015, -1.4466556925988542e-5, 7.836993294510041e-5, -0.00014372029784878292, 0.0014673355484381312, -0.00036000658983823377], 0.0013693012529927273) [1.1152641351106288e-5, 6.933690565477901e-5, 0.0005754268707043908, -0.00013738473917415347, -1.4950118272133417e-5, 0.00014736633029284165, 0.000303458572167915, -0.0006852906545510869, -0.0019067561037256365, -0.00013445321491030015, -1.4466556925988542e-5, 7.836993294510041e-5, -0.00014372029784878292, 0.0014673355484381312, -0.00036000658983823377] 0.0013693012529927273
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
