Julia Version 1.5.0-DEV.740
Commit 3637c9e6f6 (2020-04-30 17:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_j9frAf/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_j9frAf/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722540315267494
curgen: 20 fitness: 0.21722540315267494
curgen: 30 fitness: 0.21722922156065314
curgen: 40 fitness: 0.21722922156065314
curgen: 50 fitness: 0.21723338767309336
CoordinateCreature{Array{Float64,1}}([0.22247447064424278], -0.21723338767309336) 0.22247447064424278 -0.21723338767309336
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580193963933337
curgen: 100 fitness: 3.258062403725841
curgen: 150 fitness: 3.258062403725841
curgen: 200 fitness: 3.258175334989703
curgen: 250 fitness: 3.258190576320302
curgen: 300 fitness: 3.2583955739671446
curgen: 350 fitness: 3.2583960420020612
curgen: 400 fitness: 3.2584714157665235
curgen: 450 fitness: 3.2584742655191627
curgen: 500 fitness: 3.2584744384518585
CoordinateCreature{Array{Float64,1}}([-0.22230105861613886, 0.22268163549724068, 0.22240723249617061, -0.2228994869655204, 0.22258302949184902, -0.2221342469737591, 0.22224378665201985, -0.2226145970799375, -0.22245676649283277, 0.22262544049112667, 0.22249846602089188, 0.22231268587625008, -0.22258453359481073, -0.22264098281323477, -0.22286898034914004], -3.2584744384518585) [-0.22230105861613886, 0.22268163549724068, 0.22240723249617061, -0.2228994869655204, 0.22258302949184902, -0.2221342469737591, 0.22224378665201985, -0.2226145970799375, -0.22245676649283277, 0.22262544049112667, 0.22249846602089188, 0.22231268587625008, -0.22258453359481073, -0.22264098281323477, -0.22286898034914004] -3.2584744384518585
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0013868151850715549
curgen: 100 fitness: -0.0013868151850715549
curgen: 150 fitness: -0.0013868151850715549
curgen: 200 fitness: -0.0013868151850715549
curgen: 250 fitness: -0.0008839419401169835
curgen: 300 fitness: -0.0008839419401169835
curgen: 350 fitness: -0.0005849023349639992
curgen: 400 fitness: -0.0005849023349639992
curgen: 450 fitness: -0.0005849023349639992
curgen: 500 fitness: -0.00036941411238444744
CoordinateCreature{Array{Float64,1}}([8.56202668030669e-6, 2.4867595952904414e-5, -0.0009061297640250376, 0.00011023932159544483, -0.00016836438726253178, -0.0002778290128447496, -4.1162429746409e-5, -0.0003084005572832124, 0.00018308278192957165, 3.0401905111317813e-5, -0.00010582320356924128, -0.0007639823881638317, -0.0002113895162067871, -1.781958812263791e-5, 0.0003891958152020328], 0.00036941411238444744) [8.56202668030669e-6, 2.4867595952904414e-5, -0.0009061297640250376, 0.00011023932159544483, -0.00016836438726253178, -0.0002778290128447496, -4.1162429746409e-5, -0.0003084005572832124, 0.00018308278192957165, 3.0401905111317813e-5, -0.00010582320356924128, -0.0007639823881638317, -0.0002113895162067871, -1.781958812263791e-5, 0.0003891958152020328] 0.00036941411238444744
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
