Julia Version 1.5.0-DEV.719
Commit 5a71af311a (2020-04-29 17:39 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_eBQX38/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_eBQX38/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.13872152046727357 0.016621497786948554; -0.13872152046727357 0.0 0.000647472274689024; -0.016621497786948554 -0.000647472274689024 0.0])
dAA = so3([0.0 0.021917514776694333 -0.017943128318667286; -0.021917514776694333 0.0 -0.10907218382007722; 0.017943128318667286 0.10907218382007722 0.0])
dAA = so3([0.0 0.14194092536505354 -0.08735111836280116; -0.14194092536505354 0.0 -0.011224464415755968; 0.08735111836280116 0.011224464415755968 0.0])
dAA = Quaternion(0.9970388833526592, [0.03544897094327066, 0.01479974468096009, -0.06661683795651156])
dAA = SO3([0.9891262747843387 0.054000077141869426 0.13679621412864107; -0.05228654454645491 0.9985024739376972 -0.0160912025557432; -0.13746028441207464 0.008763629896938928 0.990468509847931])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9975092480818475 0.04799625351353987 -0.05168809959604965; -0.06014741573571696 0.9615766515803968 -0.26786681674994184; 0.03684546609152834 0.2703085325773053 0.9620684533048581]), [-0.006474722746890239, 0.16621497786948553, -1.3872152046727357])
xj = SE3(SO3([0.9423848742313296 0.32990497311382794 0.055438772846858796; -0.315357397770843 0.9313872566700003 -0.1818446858831277; -0.11162643276215281 0.15388465429501264 0.9817632365704579]), [0.11224464415755966, -0.8735111836280115, -1.4194092536505354])
Dx = SE3(SO3([0.9548926318640006 0.2787326769431907 0.10241170058115974; -0.28818294450543896 0.9530307774069902 0.09318222905255671; -0.07162857047308184 -0.11849232936823803 0.9903680708569271]), [0.17977430336054143, -1.0027806422393002, 0.2413988798057407])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
