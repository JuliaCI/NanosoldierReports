Julia Version 1.5.0-DEV.740
Commit 3637c9e6f6 (2020-04-30 17:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed LoweredCodeUtils ─── v0.4.3
  Installed CodeTracking ─────── v0.5.9
  Installed OrderedCollections ─ v1.1.0
  Installed JuliaInterpreter ─── v0.7.13
  Installed Revise ───────────── v2.6.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [295af30f] + Revise v2.6.4
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [da1fd8a2] + CodeTracking v0.5.9
  [aa1ae85d] + JuliaInterpreter v0.7.13
  [6f1432cf] + LoweredCodeUtils v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [295af30f] + Revise v2.6.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [7b1f6079] + FileWatching
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Revise
Status `/tmp/jl_ZgInBR/Project.toml`
  [aafaddc9] CatIndices v0.2.1
  [da1fd8a2] CodeTracking v0.5.9
  [340492b5] EndpointRanges v0.2.0
  [97e2ac4a] EponymTuples v0.2.2
  [7876af07] Example v0.5.3
  [aa1ae85d] JuliaInterpreter v0.7.13
  [6f1432cf] LoweredCodeUtils v0.4.3
  [dbb5928d] MappedArrays v0.2.2
  [bac558e1] OrderedCollections v1.1.0
  [ae029012] Requires v1.0.1
  [295af30f] Revise v2.6.4
  [8ba89e20] Distributed
  [7b1f6079] FileWatching
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [44cfe95a] Pkg
  [3fa0cd96] REPL
  [9a3f8284] Random
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Status `/tmp/jl_ZgInBR/Manifest.toml`
  [aafaddc9] CatIndices v0.2.1
  [da1fd8a2] CodeTracking v0.5.9
  [dc8bdbbb] CustomUnitRanges v1.0.0
  [340492b5] EndpointRanges v0.2.0
  [97e2ac4a] EponymTuples v0.2.2
  [7876af07] Example v0.5.3
  [aa1ae85d] JuliaInterpreter v0.7.13
  [6f1432cf] LoweredCodeUtils v0.4.3
  [dbb5928d] MappedArrays v0.2.2
  [6fe1bfb0] OffsetArrays v1.0.4
  [bac558e1] OrderedCollections v1.1.0
  [ae029012] Requires v1.0.1
  [295af30f] Revise v2.6.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [7b1f6079] FileWatching
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Skipping Base.active_repl
Skipping Base.active_repl_backend

Revise is currently tracking the following files in ReviseFileNow [top-level]: ["src/ReviseFileNow.jl"]
[ Info: tracking Base
┌ Error: evaluation error starting at /workspace/srcdir/base/irrationals.jl:56
│   mod = Base
│   ex =
│    quote
│        #= /workspace/srcdir/base/irrationals.jl:56 =#
│        #= /workspace/srcdir/base/irrationals.jl:56 =# @pure function (t::Type{T})(x::AbstractIrrational, r::RoundingMode) where T <: Union{Float32, Float64}
│                #= /workspace/srcdir/base/irrationals.jl:56 =#
│                #= /workspace/srcdir/base/irrationals.jl:57 =#
│                setprecision(BigFloat, 256) do 
│                    #= /workspace/srcdir/base/irrationals.jl:58 =#
│                    T(BigFloat(x), r)
│                end
│            end
│    end
│   exception =
│    UndefVarError: #808#809 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /home/pkgeval/.julia/packages/Revise/WkyNB/test/irrationals.jl:171
│   mod = Base.MathConstants
│   ex =
│    quote
│        #= /workspace/srcdir/base/mathconstants.jl:14 =#
│        #= /workspace/srcdir/base/mathconstants.jl:14 =# Base.@irrational ℯ 2.718281828459045 exp(big(1))
│    end
│   exception =
│    UndefVarError: #12#13 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /home/pkgeval/.julia/packages/Revise/WkyNB/test/irrationals.jl:171
│   mod = Base.MathConstants
│   ex =
│    quote
│        #= /workspace/srcdir/base/mathconstants.jl:16 =#
│        #= /workspace/srcdir/base/mathconstants.jl:16 =# Base.@irrational φ 1.618033988749895 (1 + sqrt(big(5))) / 2
│    end
│   exception =
│    UndefVarError: #16#17 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Warning: skipping git tests because Revise is not under development
└ @ Main ~/.julia/packages/Revise/WkyNB/test/runtests.jl:2378
extra
┌ Error: evaluation error starting at /workspace/srcdir/base/show.jl:1852
│   mod = Base.IRShow
│   ex =
│    quote
│        #= /workspace/srcdir/base/show.jl:1852 =#
│        const __debuginfo = Dict{Symbol, Any}(:source => (src->begin
│                                #= /workspace/srcdir/base/show.jl:1854 =#
│                                Base.IRShow.DILineInfoPrinter(src.linetable)
│                            end), :none => (src->begin
│                                #= /workspace/srcdir/base/show.jl:1856 =#
│                                Base.IRShow.lineinfo_disabled
│                            end))
│    end
│   exception =
│    UndefVarError: #37#39 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /workspace/srcdir/base/stream.jl:1256
│   mod = Base
│   ex =
│    quote
│        #= /workspace/srcdir/base/stream.jl:1256 =#
│        function readuntil(s::BufferStream, c::UInt8; keep::Bool = false)
│            #= /workspace/srcdir/base/stream.jl:1256 =#
│            #= /workspace/srcdir/base/stream.jl:1257 =#
│            bytes = lock(s.cond) do 
│                    #= /workspace/srcdir/base/stream.jl:1258 =#
│                    while isopen(s) && !(occursin(c, s.buffer))
│                        #= /workspace/srcdir/base/stream.jl:1259 =#
│                        wait(s.cond)
│                    end
│                    #= /workspace/srcdir/base/stream.jl:1261 =#
│                    readuntil(s.buffer, c, keep = keep)
│                end
│            #= /workspace/srcdir/base/stream.jl:1263 =#
│            return bytes
│        end
│    end
│   exception =
│    UndefVarError: #851#852 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
[ Info: tracking Pkg
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/API.jl:58
│   mod = Pkg.API
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:58 =#
│        develop(pkgs::Vector{<:AbstractString}; kwargs...) = begin
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:58 =#
│                develop([check_package_name(pkg, :develop) for pkg = pkgs]; kwargs...)
│            end
│    end
│   exception =
│    UndefVarError: #135#136 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/API.jl:61
│   mod = Pkg.API
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:61 =#
│        function develop(ctx::Context, pkgs::Vector{PackageSpec}; shared::Bool = true, preserve::PreserveLevel = PRESERVE_TIERED, platform::Platform = platform_key_abi(), kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:61 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:63 =#
│            pkgs = deepcopy(pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:64 =#
│            Context!(ctx; kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 =#
│            for pkg = pkgs
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 =#
│                if pkg.name == "julia"
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:68 =#
│                    pkgerror("`julia` is not a valid package name")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:70 =#
│                pkg.name === nothing || check_package_name(pkg.name, "develop")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:71 =#
│                if pkg.name === nothing && (pkg.uuid === nothing && pkg.repo.source === nothing)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:72 =#
│                    pkgerror("name, UUID, URL, or filesystem path specification required when calling `develop`")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:74 =#
│                if pkg.repo.rev !== nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:75 =#
│                    pkgerror("git revision specification invalid when calling `develop`:", " `$(pkg.repo.rev)` specified for package $(err_rep(pkg))")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:78 =#
│                if pkg.version != VersionSpec()
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:79 =#
│                    pkgerror("version specification invalid when calling `develop`:", " `$(pkg.version)` specified for package $(err_rep(pkg))")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:83 =#
│                if pkg.name !== nothing && length(findall((x->begin
│                                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:83 =#
│                                            x.name == pkg.name
│                                        end), pkgs)) > 1
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:84 =#
│                    pkgerror("it is invalid to specify multiple packages with the same name: $(err_rep(pkg))")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:86 =#
│                if pkg.uuid !== nothing && length(findall((x->begin
│                                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:86 =#
│                                            x.uuid == pkg.uuid
│                                        end), pkgs)) > 1
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:87 =#
│                    pkgerror("it is invalid to specify multiple packages with the same UUID: $(err_rep(pkg))")
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:91 =#
│            new_git = handle_repos_develop!(ctx, pkgs, shared)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:93 =#
│            for pkg = pkgs
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:94 =#
│                if Types.collides_with_project(ctx, pkg)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:95 =#
│                    pkgerror("package $(err_rep(pkg)) has the same name or UUID as the active project")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:97 =#
│                if length(findall((x->begin
│                                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:97 =#
│                                        x.uuid == pkg.uuid
│                                    end), pkgs)) > 1
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:98 =#
│                    pkgerror("it is invalid to specify multiple packages with the same UUID: $(err_rep(pkg))")
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:102 =#
│            Operations.develop(ctx, pkgs, new_git; preserve = preserve, platform = platform)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:103 =#
│            return
│        end
│    end
│   exception =
│    UndefVarError: #139#142 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/API.jl:107
│   mod = Pkg.API
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:107 =#
│        add(pkgs::Vector{<:AbstractString}; kwargs...) = begin
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:107 =#
│                add([check_package_name(pkg, :add) for pkg = pkgs]; kwargs...)
│            end
│    end
│   exception =
│    UndefVarError: #147#148 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/API.jl:110
│   mod = Pkg.API
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:110 =#
│        function add(ctx::Context, pkgs::Vector{PackageSpec}; preserve::PreserveLevel = PRESERVE_TIERED, platform::Platform = platform_key_abi(), kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:110 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:112 =#
│            pkgs = deepcopy(pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:113 =#
│            Context!(ctx; kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:115 =#
│            for pkg = pkgs
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:116 =#
│                if pkg.name == "julia"
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:117 =#
│                    pkgerror("`julia` is not a valid package name")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:119 =#
│                if pkg.name === nothing && (pkg.uuid === nothing && pkg.repo.source === nothing)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:120 =#
│                    pkgerror("name, UUID, URL, or filesystem path specification required when calling `add`")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:122 =#
│                pkg.name === nothing || check_package_name(pkg.name, "add")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:123 =#
│                if pkg.repo.source !== nothing || pkg.repo.rev !== nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:124 =#
│                    if pkg.version != VersionSpec()
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:125 =#
│                        pkgerror("version specification invalid when tracking a repository:", " `$(pkg.version)` specified for package $(err_rep(pkg))")
│                    end
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:130 =#
│                if pkg.name !== nothing && length(findall((x->begin
│                                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:130 =#
│                                            x.name == pkg.name
│                                        end), pkgs)) > 1
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:131 =#
│                    pkgerror("it is invalid to specify multiple packages with the same name: $(err_rep(pkg))")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:133 =#
│                if pkg.uuid !== nothing && length(findall((x->begin
│                                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:133 =#
│                                            x.uuid == pkg.uuid
│                                        end), pkgs)) > 1
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:134 =#
│                    pkgerror("it is invalid to specify multiple packages with the same UUID: $(err_rep(pkg))")
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:138 =#
│            repo_pkgs = [pkg for pkg = pkgs if pkg.repo.source !== nothing || pkg.repo.rev !== nothing]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:139 =#
│            new_git = handle_repos_add!(ctx, repo_pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:143 =#
│            Types.update_registries(ctx)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:145 =#
│            project_deps_resolve!(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:146 =#
│            registry_resolve!(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:147 =#
│            stdlib_resolve!(pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:148 =#
│            ensure_resolved(ctx, pkgs, registry = true)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:150 =#
│            for pkg = pkgs
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:151 =#
│                if Types.collides_with_project(ctx, pkg)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:152 =#
│                    pkgerror("package $(err_rep(pkg)) has same name or UUID as the active project")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:154 =#
│                if length(findall((x->begin
│                                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:154 =#
│                                        x.uuid == pkg.uuid
│                                    end), pkgs)) > 1
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:155 =#
│                    pkgerror("it is invalid to specify multiple packages with the same UUID: $(err_rep(pkg))")
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:159 =#
│            Operations.add(ctx, pkgs, new_git; preserve = preserve, platform = platform)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:160 =#
│            return
│        end
│    end
│   exception =
│    UndefVarError: #151#155 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/API.jl:167
│   mod = Pkg.API
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:167 =#
│        function rm(ctx::Context, pkgs::Vector{PackageSpec}; mode = PKGMODE_PROJECT, kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:167 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:168 =#
│            pkgs = deepcopy(pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:169 =#
│            foreach((pkg->begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:169 =#
│                        pkg.mode = mode
│                    end), pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:171 =#
│            for pkg = pkgs
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:172 =#
│                if pkg.name === nothing && pkg.uuid === nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:173 =#
│                    pkgerror("name or UUID specification required when calling `rm`")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:175 =#
│                if !(pkg.version == VersionSpec() && (pkg.pinned == false && (pkg.tree_hash === nothing && (pkg.repo.source === nothing && (pkg.repo.rev === nothing && pkg.path === nothing)))))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:178 =#
│                    pkgerror("packages may only be specified by name or UUID when calling `rm`")
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:182 =#
│            Context!(ctx; kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:184 =#
│            project_deps_resolve!(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:185 =#
│            manifest_resolve!(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:186 =#
│            ensure_resolved(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:188 =#
│            Operations.rm(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:189 =#
│            return
│        end
│    end
│   exception =
│    UndefVarError: #163#164 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/API.jl:198
│   mod = Pkg.API
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:198 =#
│        function up(ctx::Context, pkgs::Vector{PackageSpec}; level::UpgradeLevel = UPLEVEL_MAJOR, mode::PackageMode = PKGMODE_PROJECT, update_registry::Bool = true, kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:198 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:201 =#
│            pkgs = deepcopy(pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:202 =#
│            foreach((pkg->begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:202 =#
│                        pkg.mode = mode
│                    end), pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:204 =#
│            Context!(ctx; kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:205 =#
│            if update_registry
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:206 =#
│                Types.clone_default_registries(ctx)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:207 =#
│                Types.update_registries(ctx; force = true)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:209 =#
│            if isempty(pkgs)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:210 =#
│                if mode == PKGMODE_PROJECT
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:211 =#
│                    for (name::String, uuid::UUID) = ctx.env.project.deps
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:212 =#
│                        push!(pkgs, PackageSpec(name = name, uuid = uuid))
│                    end
│                elseif #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:214 =# mode == PKGMODE_MANIFEST
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:215 =#
│                    for (uuid, entry) = ctx.env.manifest
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:216 =#
│                        push!(pkgs, PackageSpec(name = entry.name, uuid = uuid))
│                    end
│                end
│            else
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:220 =#
│                project_deps_resolve!(ctx, pkgs)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:221 =#
│                manifest_resolve!(ctx, pkgs)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:222 =#
│                ensure_resolved(ctx, pkgs)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:224 =#
│            Operations.up(ctx, pkgs, level)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:225 =#
│            return
│        end
│    end
│   exception =
│    UndefVarError: #171#172 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/API.jl:237
│   mod = Pkg.API
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:237 =#
│        function pin(ctx::Context, pkgs::Vector{PackageSpec}; kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:237 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:238 =#
│            pkgs = deepcopy(pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:239 =#
│            Context!(ctx; kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:241 =#
│            for pkg = pkgs
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:242 =#
│                if pkg.name === nothing && pkg.uuid === nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:243 =#
│                    pkgerror("name or UUID specification required when calling `pin`")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:245 =#
│                if pkg.repo.source !== nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:246 =#
│                    pkgerror("repository specification invalid when calling `pin`:", " `$(pkg.repo.source)` specified for package $(err_rep(pkg))")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:249 =#
│                if pkg.repo.rev !== nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:250 =#
│                    pkgerror("git revision specification invalid when calling `pin`:", " `$(pkg.repo.rev)` specified for package $(err_rep(pkg))")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:253 =#
│                if (pkg.version.ranges[1]).lower != (pkg.version.ranges[1]).upper
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:254 =#
│                    pkgerror("pinning a package requires a single version, not a versionrange")
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:258 =#
│            foreach((pkg->begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:258 =#
│                        pkg.mode = PKGMODE_PROJECT
│                    end), pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:259 =#
│            project_deps_resolve!(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:260 =#
│            ensure_resolved(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:261 =#
│            Operations.pin(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:262 =#
│            return
│        end
│    end
│   exception =
│    UndefVarError: #179#180 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/API.jl:270
│   mod = Pkg.API
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:270 =#
│        function free(ctx::Context, pkgs::Vector{PackageSpec}; kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:270 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:271 =#
│            pkgs = deepcopy(pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:272 =#
│            Context!(ctx; kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:274 =#
│            for pkg = pkgs
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:275 =#
│                if pkg.name === nothing && pkg.uuid === nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:276 =#
│                    pkgerror("name or UUID specification required when calling `free`")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:278 =#
│                if !(pkg.version == VersionSpec() && (pkg.pinned == false && (pkg.tree_hash === nothing && (pkg.repo.source === nothing && (pkg.repo.rev === nothing && pkg.path === nothing)))))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:281 =#
│                    pkgerror("packages may only be specified by name or UUID when calling `free`")
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:285 =#
│            foreach((pkg->begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:285 =#
│                        pkg.mode = PKGMODE_MANIFEST
│                    end), pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:286 =#
│            manifest_resolve!(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:287 =#
│            ensure_resolved(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:289 =#
│            find_registered!(ctx, UUID[pkg.uuid for pkg = pkgs])
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:290 =#
│            Operations.free(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:291 =#
│            return
│        end
│    end
│   exception =
│    UndefVarError: #185#186 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/API.jl:320
│   mod = Pkg.API
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:320 =#
│        function gc(ctx::Context = Context(); collect_delay::Period = Day(7), kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:329 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:330 =#
│            Context!(ctx; kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:331 =#
│            env = ctx.env
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:341 =#
│            manifest_usage_by_depot = Dict{String, Dict{String, DateTime}}()
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:342 =#
│            artifact_usage_by_depot = Dict{String, Dict{String, DateTime}}()
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:345 =#
│            for depot = depots()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:348 =#
│                function collect_usage!(usage_data::Dict, usage_filepath)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:348 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:349 =#
│                    if !(isfile(usage_filepath))
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:350 =#
│                        return usage_data
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:353 =#
│                    for (filename, infos) = TOML.parse(String(read(usage_filepath)))
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:356 =#
│                        for info = infos
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:357 =#
│                            usage_data[filename] = max(get(usage_data, filename, DateTime(0)), DateTime(info["time"]))
│                        end
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:363 =#
│                    return usage_data
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:370 =#
│                manifest_usage_by_depot[depot] = Dict{String, DateTime}()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:371 =#
│                artifact_usage_by_depot[depot] = Dict{String, DateTime}()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:372 =#
│                collect_usage!(manifest_usage_by_depot[depot], joinpath(logdir(depot), "manifest_usage.toml"))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:376 =#
│                collect_usage!(artifact_usage_by_depot[depot], joinpath(logdir(depot), "artifact_usage.toml"))
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:383 =#
│            all_index_files = vcat(unique((f for (_, files) = manifest_usage_by_depot for f = keys(files))), unique((f for (_, files) = artifact_usage_by_depot for f = keys(files))))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:387 =#
│            all_index_files = Set(filter(isfile, all_index_files))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:390 =#
│            function write_condensed_usage(usage_by_depot, fname)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:390 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:391 =#
│                for (depot, usage) = usage_by_depot
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:393 =#
│                    usage = filter((p->begin
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:393 =#
│                                    p[1] in all_index_files
│                                end), usage)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:396 =#
│                    usage = Dict((k => [Dict("time" => v)] for (k, v) = usage))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:399 =#
│                    usage_path = joinpath(logdir(depot), fname)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:400 =#
│                    if !(isempty(usage)) || isfile(usage_path)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:401 =#
│                        open(usage_path, "w") do io
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:402 =#
│                            TOML.print(io, usage, sorted = true)
│                        end
│                    end
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:407 =#
│            write_condensed_usage(manifest_usage_by_depot, "manifest_usage.toml")
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:408 =#
│            write_condensed_usage(artifact_usage_by_depot, "artifact_usage.toml")
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:412 =#
│            all_manifest_files = filter((f->begin
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:412 =#
│                            endswith(f, "Manifest.toml")
│                        end), all_index_files)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:413 =#
│            all_artifacts_files = filter((f->begin
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:413 =#
│                            !(endswith(f, "Manifest.toml"))
│                        end), all_index_files)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:415 =#
│            function process_manifest(path)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:415 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:417 =#
│                manifest = try
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:418 =#
│                        read_manifest(path)
│                    catch e
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:420 =#
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:420 =# @warn "Reading manifest file at $(path) failed with error" exception = e
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:421 =#
│                        return nothing
│                    end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:425 =#
│                pkg_dir(uuid, entry) = begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:425 =#
│                        Operations.find_installed(entry.name, uuid, entry.tree_hash)
│                    end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:426 =#
│                return [pkg_dir(u, e) for (u, e) = manifest if e.tree_hash !== nothing]
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:429 =#
│            function process_artifacts_toml(path)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:429 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:435 =#
│                if any((startswith(path, package_dir) for package_dir = packages_to_delete))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:436 =#
│                    return nothing
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:439 =#
│                artifact_dict = try
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:440 =#
│                        parse_toml(path)
│                    catch e
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:442 =#
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:442 =# @warn "Reading artifacts file at $(path) failed with error" exception = e
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:443 =#
│                        return nothing
│                    end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:446 =#
│                artifact_path_list = String[]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:447 =#
│                for name = keys(artifact_dict)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:448 =#
│                    getpaths(meta) = begin
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:448 =#
│                            artifact_paths(SHA1(hex2bytes(meta["git-tree-sha1"])))
│                        end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:449 =#
│                    if artifact_dict[name] isa Array
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:450 =#
│                        for platform_meta = artifact_dict[name]
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:451 =#
│                            append!(artifact_path_list, getpaths(platform_meta))
│                        end
│                    else
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:454 =#
│                        append!(artifact_path_list, getpaths(artifact_dict[name]))
│                    end
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:457 =#
│                return artifact_path_list
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:461 =#
│            function mark(process_func::Function, index_files)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:461 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:462 =#
│                marked_paths = String[]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:463 =#
│                for index_file = index_files
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:465 =#
│                    paths = process_func(index_file)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:466 =#
│                    if paths !== nothing
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:468 =#
│                        println("        $(Types.pathrepr(index_file))")
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:469 =#
│                        append!(marked_paths, paths)
│                    end
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:474 =#
│                return Set(marked_paths)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:477 =#
│            gc_time = now()
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:478 =#
│            function merge_orphanages!(new_orphanage, paths, deletion_list, old_orphanage = Dict())
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:478 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:479 =#
│                for path = paths
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:480 =#
│                    free_time = something(get(old_orphanage, path, nothing), gc_time)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:490 =#
│                    new_orphanage[path] = free_time
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:497 =#
│                    if gc_time - free_time >= collect_delay
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:498 =#
│                        push!(deletion_list, path)
│                    end
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:505 =#
│            printpkgstyle(ctx, :Active, "manifests:")
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:506 =#
│            packages_to_keep = mark(process_manifest, all_manifest_files)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:509 =#
│            packages_to_delete = String[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:510 =#
│            for depot = depots()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:511 =#
│                depot_orphaned_packages = String[]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:513 =#
│                packagedir = abspath(depot, "packages")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:514 =#
│                if isdir(packagedir)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:515 =#
│                    for name = readdir(packagedir)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:516 =#
│                        !(isdir(joinpath(packagedir, name))) && continue
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:518 =#
│                        for slug = readdir(joinpath(packagedir, name))
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:519 =#
│                            pkg_dir = joinpath(packagedir, name, slug)
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:520 =#
│                            !(isdir(pkg_dir)) && continue
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:522 =#
│                            if !(pkg_dir in packages_to_keep)
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:523 =#
│                                push!(depot_orphaned_packages, pkg_dir)
│                            end
│                        end
│                    end
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:529 =#
│                merge_orphanages!(Dict(), depot_orphaned_packages, packages_to_delete)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:535 =#
│            printpkgstyle(ctx, :Active, "artifacts:")
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:536 =#
│            artifacts_to_keep = mark(process_artifacts_toml, all_artifacts_files)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:541 =#
│            packages_to_delete = String[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:542 =#
│            artifacts_to_delete = String[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:543 =#
│            for depot = depots()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:547 =#
│                depot_orphaned_packages = String[]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:548 =#
│                depot_orphaned_artifacts = String[]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:550 =#
│                packagedir = abspath(depot, "packages")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:551 =#
│                if isdir(packagedir)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:552 =#
│                    for name = readdir(packagedir)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:553 =#
│                        !(isdir(joinpath(packagedir, name))) && continue
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:555 =#
│                        for slug = readdir(joinpath(packagedir, name))
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:556 =#
│                            pkg_dir = joinpath(packagedir, name, slug)
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:557 =#
│                            !(isdir(pkg_dir)) && continue
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:559 =#
│                            if !(pkg_dir in packages_to_keep)
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:560 =#
│                                push!(depot_orphaned_packages, pkg_dir)
│                            end
│                        end
│                    end
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:566 =#
│                artifactsdir = abspath(depot, "artifacts")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:567 =#
│                if isdir(artifactsdir)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:568 =#
│                    for hash = readdir(artifactsdir)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:569 =#
│                        artifact_path = joinpath(artifactsdir, hash)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:570 =#
│                        !(isdir(artifact_path)) && continue
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:572 =#
│                        if !(artifact_path in artifacts_to_keep)
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:573 =#
│                            push!(depot_orphaned_artifacts, artifact_path)
│                        end
│                    end
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:579 =#
│                orphanage_file = joinpath(logdir(depot), "orphaned.toml")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:580 =#
│                new_orphanage = Dict{String, DateTime}()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:581 =#
│                old_orphanage = try
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:582 =#
│                        TOML.parse(String(read(orphanage_file)))
│                    catch
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:584 =#
│                        Dict{String, DateTime}()
│                    end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:589 =#
│                merge_orphanages!(new_orphanage, depot_orphaned_packages, packages_to_delete, old_orphanage)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:590 =#
│                merge_orphanages!(new_orphanage, depot_orphaned_artifacts, artifacts_to_delete, old_orphanage)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:593 =#
│                if !(isempty(new_orphanage)) || isfile(orphanage_file)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:594 =#
│                    mkpath(dirname(orphanage_file))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:595 =#
│                    open(orphanage_file, "w") do io
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:596 =#
│                        TOML.print(io, new_orphanage, sorted = true)
│                    end
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:602 =#
│            pretty_byte_str = (size->begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:602 =#
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:603 =#
│                        (bytes, mb) = Base.prettyprint_getunits(size, length(Base._mem_units), Int64(1024))
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:604 =#
│                        return #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:604 =# @sprintf("%.3f %s", bytes, Base._mem_units[mb])
│                    end)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:607 =#
│            function recursive_dir_size(path)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:607 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:608 =#
│                size = 0
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:609 =#
│                for (root, dirs, files) = walkdir(path)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:610 =#
│                    for file = files
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:611 =#
│                        path = joinpath(root, file)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:612 =#
│                        try
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:613 =#
│                            size += (lstat(path)).size
│                        catch
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:615 =#
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:615 =# @warn "Failed to calculate size of $(path)"
│                        end
│                    end
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:619 =#
│                return size
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:623 =#
│            function delete_path(path)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:623 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:624 =#
│                path_size = recursive_dir_size(path)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:625 =#
│                try
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:626 =#
│                    Base.rm(path; recursive = true)
│                catch
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:628 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:628 =# @warn "Failed to delete $(path)"
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:630 =#
│                printpkgstyle(ctx, :Deleted, Types.pathrepr(path) * " (" * pretty_byte_str(path_size) * ")")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:631 =#
│                return path_size
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:634 =#
│            package_space_freed = 0
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:635 =#
│            artifact_space_freed = 0
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:636 =#
│            for path = packages_to_delete
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:637 =#
│                package_space_freed += delete_path(path)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:639 =#
│            for path = artifacts_to_delete
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:640 =#
│                artifact_space_freed += delete_path(path)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:644 =#
│            for depot = depots()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:645 =#
│                packagedir = abspath(depot, "packages")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:646 =#
│                !(isdir(packagedir)) && continue
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:648 =#
│                for name = readdir(packagedir)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:649 =#
│                    name_path = joinpath(packagedir, name)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:650 =#
│                    !(isdir(name_path)) && continue
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:651 =#
│                    !(isempty(readdir(name_path))) && continue
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:653 =#
│                    Base.rm(name_path)
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:657 =#
│            ndel_pkg = length(packages_to_delete)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:658 =#
│            ndel_art = length(artifacts_to_delete)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:660 =#
│            if ndel_pkg > 0
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:661 =#
│                s = if ndel_pkg == 1
│                        ""
│                    else
│                        "s"
│                    end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:662 =#
│                bytes_saved_string = pretty_byte_str(package_space_freed)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:663 =#
│                printpkgstyle(ctx, :Deleted, "$(ndel_pkg) package installation$(s) ($(bytes_saved_string))")
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:665 =#
│            if ndel_art > 0
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:666 =#
│                s = if ndel_art == 1
│                        ""
│                    else
│                        "s"
│                    end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:667 =#
│                bytes_saved_string = pretty_byte_str(artifact_space_freed)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:668 =#
│                printpkgstyle(ctx, :Deleted, "$(ndel_art) artifact installation$(s) ($(bytes_saved_string))")
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:670 =#
│            if ndel_pkg == 0 && ndel_art == 0
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:671 =#
│                printpkgstyle(ctx, :Deleted, "no artifacts or packages")
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:674 =#
│            return
│        end
│    end
│   exception =
│    UndefVarError: #collect_usage!#205 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/API.jl:681
│   mod = Pkg.API
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:681 =#
│        function build(ctx::Context, pkgs::Vector{PackageSpec}; verbose = false, kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:681 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:682 =#
│            pkgs = deepcopy(pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:683 =#
│            Context!(ctx; kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:685 =#
│            if isempty(pkgs)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:686 =#
│                if ctx.env.pkg !== nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:687 =#
│                    push!(pkgs, ctx.env.pkg)
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:689 =#
│                    for (uuid, entry) = ctx.env.manifest
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:690 =#
│                        push!(pkgs, PackageSpec(entry.name, uuid))
│                    end
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:694 =#
│            project_resolve!(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:695 =#
│            foreach((pkg->begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:695 =#
│                        pkg.mode = PKGMODE_MANIFEST
│                    end), pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:696 =#
│            manifest_resolve!(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:697 =#
│            ensure_resolved(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:698 =#
│            Operations.build(ctx, pkgs, verbose)
│        end
│    end
│   exception =
│    UndefVarError: #232#233 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/API.jl:745
│   mod = Pkg.API
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:745 =#
│        function instantiate(ctx::Context; manifest::Union{Bool, Nothing} = nothing, update_registry::Bool = true, verbose::Bool = false, platform::Platform = platform_key_abi(), kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:745 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:748 =#
│            Context!(ctx; kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:749 =#
│            if !(isfile(ctx.env.project_file)) && isfile(ctx.env.manifest_file)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:750 =#
│                _manifest = Pkg.Types.read_manifest(ctx.env.manifest_file)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:751 =#
│                deps = Dict()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:752 =#
│                for (uuid, pkg) = _manifest
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:753 =#
│                    if pkg.name in keys(deps)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:755 =#
│                        pkgerror("cannot instantiate a manifest without project file when the manifest has multiple packages with the same name ($(pkg.name))")
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:757 =#
│                    deps[pkg.name] = string(uuid)
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:759 =#
│                Types.write_project(Dict("deps" => deps), ctx.env.project_file)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:760 =#
│                return instantiate(Context(); manifest = manifest, update_registry = update_registry, verbose = verbose, kwargs...)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:762 =#
│            if !(isfile(ctx.env.manifest_file)) && manifest === nothing || manifest == false
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:763 =#
│                up(ctx; update_registry = update_registry)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:764 =#
│                return
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:766 =#
│            if !(isfile(ctx.env.manifest_file)) && manifest == true
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:767 =#
│                pkgerror("expected manifest file at `$(ctx.env.manifest_file)` but it does not exist")
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:769 =#
│            Operations.prune_manifest(ctx)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:770 =#
│            for (name, uuid) = ctx.env.project.deps
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:771 =#
│                get(ctx.env.manifest, uuid, nothing) === nothing || continue
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:772 =#
│                pkgerror("`$(name)` is a direct dependency, but does not appear in the manifest.", " If you intend `$(name)` to be a direct dependency, run `Pkg.resolve()` to populate the manifest.", " Otherwise, remove `$(name)` with `Pkg.rm(\"$(name)\")`.", " Finally, run `Pkg.instantiate()` again.")
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:778 =#
│            Operations.download_artifacts(ctx, [dirname(ctx.env.manifest_file)]; platform = platform, verbose = verbose)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:779 =#
│            Operations.is_instantiated(ctx) && return
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:781 =#
│            Types.update_registries(ctx)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:782 =#
│            pkgs = Operations.load_all_deps(ctx)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:783 =#
│            Operations.check_registered(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:784 =#
│            new_git = UUID[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:786 =#
│            for pkg = pkgs
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:787 =#
│                pkg.repo.source !== nothing || continue
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:788 =#
│                sourcepath = Operations.source_path(ctx, pkg)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:789 =#
│                isdir(sourcepath) && continue
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:792 =#
│                if isurl(pkg.repo.source)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:793 =#
│                    repo_source = pkg.repo.source
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:795 =#
│                    repo_source = normpath(joinpath(dirname(ctx.env.project_file), pkg.repo.source))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:797 =#
│                if !(isurl(repo_source)) && !(isdir(repo_source))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:798 =#
│                    pkgerror("Did not find path `$(repo_source)` for $(err_rep(pkg))")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:800 =#
│                repo_path = Types.add_repo_cache_path(repo_source)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:801 =#
│                LibGit2.with(GitTools.ensure_clone(ctx, repo_path, pkg.repo.source; isbare = true)) do repo
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:803 =#
│                    tree_hash_object = tree_hash(repo, string(pkg.tree_hash))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:804 =#
│                    if tree_hash_object === nothing
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:805 =#
│                        GitTools.fetch(ctx, repo, pkg.repo.source; refspecs = Types.refspecs)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:806 =#
│                        tree_hash_object = tree_hash(repo, string(pkg.tree_hash))
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:808 =#
│                    if tree_hash_object === nothing
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:809 =#
│                        pkgerror("Did not find tree_hash $(pkg.tree_hash) for $(err_rep(pkg))")
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:811 =#
│                    mkpath(sourcepath)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:812 =#
│                    GitTools.checkout_tree_to_path(repo, tree_hash_object, sourcepath)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:813 =#
│                    push!(new_git, pkg.uuid)
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:818 =#
│            new_apply = Operations.download_source(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:820 =#
│            Operations.download_artifacts(ctx, pkgs; platform = platform, verbose = verbose)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:822 =#
│            Operations.build_versions(ctx, union(UUID[pkg.uuid for pkg = new_apply], new_git); verbose = verbose)
│        end
│    end
│   exception =
│    UndefVarError: #240#241 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:162
│   mod = Pkg.GitTools
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:162 =#
│        function fetch(ctx, repo::LibGit2.GitRepo, remoteurl = nothing; header = nothing, credentials = nothing, kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:162 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:163 =#
│            if remoteurl === nothing
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:164 =#
│                remoteurl = LibGit2.with(LibGit2.get(LibGit2.GitRemote, repo, "origin")) do remote
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:165 =#
│                        LibGit2.url(remote)
│                    end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:168 =#
│            remoteurl = normalize_url(remoteurl)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:169 =#
│            Pkg.Types.printpkgstyle(ctx, :Updating, if header === nothing
│                    "git-repo `$(remoteurl)`"
│                else
│                    header
│                end)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:170 =#
│            transfer_payload = MiniProgressBar(header = "Fetching:", color = Base.info_color())
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:171 =#
│            callbacks = LibGit2.Callbacks(:transfer_progress => (#= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:173 =# @cfunction(transfer_progress, Cint, (Ptr{LibGit2.TransferProgress}, Any)), transfer_payload))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:177 =#
│            print(stdout, "\e[?25l")
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:178 =#
│            if credentials === nothing
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:179 =#
│                credentials = LibGit2.CachedCredentials()
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:181 =#
│            try
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:182 =#
│                return LibGit2.fetch(repo; remoteurl = remoteurl, callbacks = callbacks, kwargs...)
│            catch err
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:184 =#
│                err isa LibGit2.GitError || rethrow()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:185 =#
│                if err.class == LibGit2.Error.Repository && err.code == LibGit2.Error.ERROR
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:186 =#
│                    Pkg.Types.pkgerror("Git repository not found at '$(remoteurl)'")
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:188 =#
│                    Pkg.Types.pkgerror("failed to fetch from $(remoteurl), error: $(err)")
│                end
│            finally
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:191 =#
│                Base.shred!(credentials)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:192 =#
│                print(stdout, "\e[2K")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:193 =#
│                print(stdout, "\e[?25h")
│            end
│        end
│    end
│   exception =
│    UndefVarError: #19#20 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:275
│   mod = Pkg.GitTools
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:275 =#
│        function tree_hash(root::AbstractString; HashType = SHA.SHA1_CTX)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:280 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:281 =#
│            entries = Tuple{String, Vector{UInt8}, GitMode}[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:282 =#
│            for f = readdir(root)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:284 =#
│                if f == ".git"
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:285 =#
│                    continue
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:288 =#
│                filepath = abspath(root, f)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:289 =#
│                mode = gitmode(filepath)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:290 =#
│                if mode == mode_dir
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:292 =#
│                    contains_files(filepath) || continue
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:295 =#
│                    hash = tree_hash(filepath)
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:297 =#
│                    hash = blob_hash(filepath)
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:299 =#
│                push!(entries, (f, hash, mode))
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:303 =#
│            sort!(entries, by = (((name, hash, mode),)->begin
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:303 =#
│                            if mode == mode_dir
│                                name * "/"
│                            else
│                                name
│                            end
│                        end))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:305 =#
│            content_size = 0
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:306 =#
│            for (n, h, m) = entries
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:307 =#
│                content_size += ndigits(UInt32(m); base = 8) + 1 + sizeof(n) + 1 + 20
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:311 =#
│            ctx = HashType()
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:312 =#
│            SHA.update!(ctx, Vector{UInt8}("tree $(content_size)\0"))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:313 =#
│            for (name, hash, mode) = entries
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:314 =#
│                SHA.update!(ctx, Vector{UInt8}("$(mode) $(name)\0"))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:315 =#
│                SHA.update!(ctx, hash)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/GitTools.jl:317 =#
│            return SHA.digest!(ctx)
│        end
│    end
│   exception =
│    UndefVarError: #24#25 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:17
│   mod = Pkg.PlatformEngines
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:17 =#
│        gen_download_cmd = ((url::AbstractString, out_path::AbstractString, hdrs::AbstractString...)->begin
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:26 =#
│                    error("Call `probe_platform_engines!()` before `gen_download_cmd()`")
│                end)
│    end
│   exception =
│    UndefVarError: #113#114 not defined
│    Stacktrace:
│     [1] step_expr!(::Any, ::Frame, ::Any, ::Bool) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:535
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:29
│   mod = Pkg.PlatformEngines
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:29 =#
│        gen_unpack_cmd = ((tarball_path::AbstractString, out_path::AbstractString, excludelist::Union{AbstractString, Nothing} = nothing)->begin
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:42 =#
│                    error("Call `probe_platform_engines!()` before `gen_unpack_cmd()`")
│                end)
│    end
│   exception =
│    UndefVarError: #115#116 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:45
│   mod = Pkg.PlatformEngines
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:45 =#
│        gen_package_cmd = ((in_path::AbstractString, tarball_path::AbstractString)->begin
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:54 =#
│                    error("Call `probe_platform_engines!()` before `gen_package_cmd()`")
│                end)
│    end
│   exception =
│    UndefVarError: #117#118 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:57
│   mod = Pkg.PlatformEngines
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:57 =#
│        gen_list_tarball_cmd = (tarball_path::AbstractString->begin
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:66 =#
│                    error("Call `probe_platform_engines!()` before `gen_list_tarball_cmd()`")
│                end)
│    end
│   exception =
│    UndefVarError: #119#120 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:69
│   mod = Pkg.PlatformEngines
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:69 =#
│        parse_tarball_listing = (output::AbstractString->begin
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:76 =#
│                    error("Call `probe_platform_engines!()` before `parse_tarball_listing()`")
│                end)
│    end
│   exception =
│    UndefVarError: #121#122 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:87
│   mod = Pkg.PlatformEngines
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:79 =#
│        "    parse_symlinks(output::AbstractString)\n\nReturns a regex to parse symlinks from tarball listings.\n\nThis method is initialized by `probe_platform_engines!()`.\n"
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:87 =#
│        parse_symlinks = (()->begin
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:87 =#
│                    error("Call `probe_platform_engines!()` before `parse_symlinks()`")
│                end)
│    end
│   exception =
│    UndefVarError: #123#124 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:145
│   mod = Pkg.PlatformEngines
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:145 =#
│        function probe_platform_engines!(; verbose::Bool = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:175 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:176 =#
│            global already_probed
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:177 =#
│            global gen_download_cmd, gen_list_tarball_cmd, gen_package_cmd
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:178 =#
│            global gen_unpack_cmd, parse_tarball_listing, parse_symlinks
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:181 =#
│            if already_probed
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:182 =#
│                return
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:188 =#
│            download_engines = [(`curl --help`, ((url, path, hdrs...)->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:189 =#
│                                `curl -H$hdrs -C - -\# -f -o $path -L $url`
│                            end)), (`wget --help`, ((url, path, hdrs...)->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:191 =#
│                                `wget --tries=5 --header=$hdrs -c -O $path $url`
│                            end)), (`fetch --help`, ((url, path, hdrs...)->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:193 =#
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:194 =#
│                                isempty(hdrs) || error("`fetch` does not support passing headers")
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:195 =#
│                                `fetch -f $path $url`
│                            end)), (`busybox wget --help`, ((url, path, hdrs...)->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:197 =#
│                                `busybox wget --header=$hdrs -c -O $path $url`
│                            end))]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:200 =#
│            Sys.isapple() && pushfirst!(download_engines, (`/usr/bin/curl --help`, ((url, path, hdrs...)->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:201 =#
│                                `/usr/bin/curl -H$hdrs -C - -\# -f -o $path -L $url`
│                            end)))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:208 =#
│            unpack_7z = (exe7z->begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:208 =#
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:209 =#
│                        return ((tarball_path, out_path, excludelist = nothing)->begin
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:209 =#
│                                    pipeline(pipeline(`$exe7z x $(tarball_path) -y -so`, `$exe7z x -si -y -ttar -o$(out_path) $(excludelist === nothing ? [] : "-x@$(excludelist)")`); stdout = devnull, stderr = devnull)
│                                end)
│                    end)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:214 =#
│            package_7z = (exe7z->begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:214 =#
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:215 =#
│                        return ((in_path, tarball_path)->begin
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:215 =#
│                                    pipeline(pipeline(`$exe7z a -ttar -so a.tar "$(joinpath(".",in_path,"*"))"`, `$exe7z a -si $(tarball_path)`); stdout = devnull, stderr = devnull)
│                                end)
│                    end)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:219 =#
│            list_7z = (exe7z->begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:219 =#
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:220 =#
│                        return (begin
│                                    path
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:220 =#
│                                    verbose = false
│                                end->begin
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:220 =#
│                                    pipeline(`$exe7z x $path -so`, `$exe7z l -ttar -y -si $(verbose ? ["-slt"] : [])`)
│                                end)
│                    end)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:272 =#
│            gen_7z = (p->begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:272 =#
│                        (unpack_7z(p), package_7z(p), list_7z(p), parse_7z_list, r"Path = ([^\r\n]+)\r?\n(?:[^\r\n]+\r?\n)+Symbolic Link = ([^\r\n]+)"s)
│                    end)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:273 =#
│            compression_engines = Tuple[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:275 =#
│            (tmpfile, io) = mktemp()
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:276 =#
│            write(io, "Demo file for tar listing (Pkg.jl)")
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:277 =#
│            close(io)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:279 =#
│            for tar_cmd = [`tar`, `busybox tar`]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:281 =#
│                local symlink_parser
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:282 =#
│                try
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:288 =#
│                    cd(tempdir()) do 
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:289 =#
│                        tarListing = read(pipeline(`$tar_cmd -cf - $(basename(tmpfile))`, `$tar_cmd -tvf -`), String)
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:292 =#
│                    m = (match(Regex("((?:\\S+\\s+)+?)$(tmpfile)"), tarListing))[1]
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:294 =#
│                    nargs = length(split(m, " "; keepempty = false))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:317 =#
│                    symlink_parser = Regex("^l(?:\\S+\\s+){$(nargs)}(.+?)(?: -> (.+?))?\\r?\$", "m")
│                catch
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:323 =#
│                    symlink_parser = r"^l.+? (\S+?)(?: -> (.+?))?\r?$"m
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:326 =#
│                unpack_tar = ((tarball_path, out_path, excludelist = nothing)->begin
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:326 =#
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:327 =#
│                            Jjz = "z"
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:328 =#
│                            if endswith(tarball_path, ".xz")
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:329 =#
│                                Jjz = "J"
│                            elseif #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:330 =# endswith(tarball_path, ".bz2")
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:331 =#
│                                Jjz = "j"
│                            end
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:333 =#
│                            return `$tar_cmd --no-same-owner -mx$(Jjz)f $(tarball_path) -C$(out_path) $(excludelist === nothing ? [] : "-X$(excludelist)")`
│                        end)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:335 =#
│                package_tar = ((in_path, tarball_path)->begin
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:335 =#
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:336 =#
│                            Jjz = "z"
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:337 =#
│                            if endswith(tarball_path, ".xz")
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:338 =#
│                                Jjz = "J"
│                            elseif #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:339 =# endswith(tarball_path, ".bz2")
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:340 =#
│                                Jjz = "j"
│                            end
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:342 =#
│                            return `$tar_cmd -c$(Jjz)f $tarball_path -C$(in_path) .`
│                        end)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:344 =#
│                list_tar = (begin
│                            in_path
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:344 =#
│                            verbose = false
│                        end->begin
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:344 =#
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:345 =#
│                            Jjz = "z"
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:346 =#
│                            if endswith(in_path, ".xz")
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:347 =#
│                                Jjz = "J"
│                            elseif #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:348 =# endswith(in_path, ".bz2")
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:349 =#
│                                Jjz = "j"
│                            end
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:351 =#
│                            return `$tar_cmd $(verbose ? "-t$(Jjz)vf" : "-t$(Jjz)f") $in_path`
│                        end)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:353 =#
│                push!(compression_engines, (`$tar_cmd --help`, unpack_tar, package_tar, list_tar, parse_tar_list, symlink_parser))
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:362 =#
│            rm(tmpfile, force = true)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:365 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:365 =# @static if Sys.iswindows()
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:369 =#
│                    psh_download = (psh_path->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:369 =#
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:370 =#
│                                return ((url, path, hdrs...)->begin
│                                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:370 =#
│                                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:371 =#
│                                            webclient_code = "[System.Net.ServicePointManager]::SecurityProtocol =\n    [System.Net.SecurityProtocolType]::Tls12;\n\$webclient = (New-Object System.Net.Webclient);\n\$webclient.UseDefaultCredentials = \$true;\n\$webclient.Proxy.Credentials = \$webclient.Credentials;\n\$webclient.Headers.Add(\"user-agent\", \"Pkg.jl (https://github.com/JuliaLang/Pkg.jl)\");\n"
│                                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:379 =#
│                                            for hdr = hdrs
│                                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:380 =#
│                                                (key, val) = split(hdr, r":\s*", limit = 2)
│                                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:381 =#
│                                                webclient_code *= "\$webclient.Headers.Add($(repr(key)), $(repr(val)));\n"
│                                            end
│                                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:385 =#
│                                            webclient_code *= "\$webclient.DownloadFile(\"$(url)\", \"$(path)\")\n"
│                                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:388 =#
│                                            replace(webclient_code, "\n" => " ")
│                                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:389 =#
│                                            return `$psh_path -NoProfile -Command "$webclient_code"`
│                                        end)
│                            end)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:394 =#
│                    psh_path = joinpath(get(ENV, "SYSTEMROOT", "C:\\Windows"), "System32\\WindowsPowerShell\\v1.0\\powershell.exe")
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:395 =#
│                    prepend!(download_engines, [(`$psh_path -Command ""`, psh_download(psh_path))])
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:398 =#
│                    prepend!(download_engines, [(`powershell -Command ""`, psh_download(`powershell`))])
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:403 =#
│                    prepend!(compression_engines, [(`7z --help`, gen_7z("7z")...)])
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:406 =#
│                    exe7z = joinpath(Sys.BINDIR, "7z.exe")
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:407 =#
│                    prepend!(compression_engines, [(`$exe7z --help`, gen_7z(exe7z)...)])
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:410 =#
│                    exe7z = joinpath(Sys.BINDIR, "..", "libexec", "7z.exe")
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:411 =#
│                    prepend!(compression_engines, [(`$exe7z --help`, gen_7z(exe7z)...)])
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:415 =#
│            if haskey(ENV, "BINARYPROVIDER_DOWNLOAD_ENGINE")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:416 =#
│                engine = ENV["BINARYPROVIDER_DOWNLOAD_ENGINE"]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:417 =#
│                es = split(engine)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:418 =#
│                dl_ngs = filter((e->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:418 =#
│                                (e[1]).exec[1:length(es)] == es
│                            end), download_engines)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:419 =#
│                if isempty(dl_ngs)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:420 =#
│                    all_ngs = join([(d[1]).exec[1] for d = download_engines], ", ")
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:421 =#
│                    warn_msg = "Ignoring BINARYPROVIDER_DOWNLOAD_ENGINE as its value "
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:422 =#
│                    warn_msg *= "of `$(engine)` doesn't match any known valid engines."
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:423 =#
│                    warn_msg *= " Try one of `$(all_ngs)`."
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:424 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:424 =# @warn warn_msg
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:428 =#
│                    download_engines = dl_ngs
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:432 =#
│            if haskey(ENV, "BINARYPROVIDER_COMPRESSION_ENGINE")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:433 =#
│                engine = ENV["BINARYPROVIDER_COMPRESSION_ENGINE"]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:434 =#
│                es = split(engine)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:435 =#
│                comp_ngs = filter((e->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:435 =#
│                                (e[1]).exec[1:length(es)] == es
│                            end), compression_engines)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:436 =#
│                if isempty(comp_ngs)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:437 =#
│                    all_ngs = join([(c[1]).exec[1] for c = compression_engines], ", ")
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:438 =#
│                    warn_msg = "Ignoring BINARYPROVIDER_COMPRESSION_ENGINE as its "
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:439 =#
│                    warn_msg *= "value of `$(engine)` doesn't match any known valid "
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:440 =#
│                    warn_msg *= "engines. Try one of `$(all_ngs)`."
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:441 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:441 =# @warn warn_msg
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:445 =#
│                    compression_engines = comp_ngs
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:449 =#
│            download_found = false
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:450 =#
│            compression_found = false
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:452 =#
│            if verbose
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:453 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:453 =# @info "Probing for download engine..."
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:457 =#
│            for (test, dl_func) = download_engines
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:458 =#
│                if probe_cmd(`$test`; verbose = verbose)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:460 =#
│                    gen_download_cmd = ((url, out_path, hdrs...)->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:460 =#
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:461 =#
│                                isdefined(Base, :download_url) && (url = Base.download_url(url))
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:462 =#
│                                dl_func(url, out_path, hdrs...)
│                            end)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:464 =#
│                    download_found = true
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:466 =#
│                    if verbose
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:467 =#
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:467 =# @info "Found download engine $(test.exec[1])"
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:469 =#
│                    break
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:473 =#
│            if verbose
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:474 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:474 =# @info "Probing for compression engine..."
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:478 =#
│            for (test, unpack, package, list, parse, symlink) = compression_engines
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:479 =#
│                if probe_cmd(`$test`; verbose = verbose)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:481 =#
│                    gen_unpack_cmd = unpack
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:482 =#
│                    gen_package_cmd = package
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:483 =#
│                    gen_list_tarball_cmd = list
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:484 =#
│                    parse_tarball_listing = parse
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:485 =#
│                    parse_symlinks = (()->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:485 =#
│                                symlink
│                            end)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:487 =#
│                    if verbose
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:488 =#
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:488 =# @info "Found compression engine $(test.exec[1])"
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:491 =#
│                    compression_found = true
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:492 =#
│                    break
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:497 =#
│            errmsg = ""
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:498 =#
│            if !download_found
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:499 =#
│                errmsg *= "No download engines found. We looked for: "
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:500 =#
│                errmsg *= join([(d[1]).exec[1] for d = download_engines], ", ")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:501 =#
│                errmsg *= ". Install one and ensure it  is available on the path.\n"
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:504 =#
│            if !compression_found
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:505 =#
│                errmsg *= "No compression engines found. We looked for: "
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:506 =#
│                errmsg *= join([(c[1]).exec[1] for c = compression_engines], ", ")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:507 =#
│                errmsg *= ". Install one and ensure it is available on the path.\n"
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:511 =#
│            if !download_found || !compression_found
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:512 =#
│                error(errmsg)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:514 =#
│            already_probed = true
│        end
│    end
│   exception =
│    UndefVarError: #127#153 not defined
│    Stacktrace:
│     [1] step_expr!(::Any, ::Frame, ::Any, ::Bool) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:535
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:653
│   mod = Pkg.PlatformEngines
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:653 =#
│        function get_auth_header(url::AbstractString; verbose::Bool = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:653 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:654 =#
│            server_dir = get_server_dir(url)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:655 =#
│            server_dir === nothing && return
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:656 =#
│            auth_file = joinpath(server_dir, "auth.toml")
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:657 =#
│            isfile(auth_file) || return handle_auth_error(url, "no-auth-file"; verbose = verbose)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:659 =#
│            if !(is_secure_url(url))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:660 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:660 =# @warn "refusing to send auth info over insecure connection" url = url
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:661 =#
│                return handle_auth_error(url, "insecure-connection"; verbose = verbose)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:664 =#
│            auth_info = try
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:665 =#
│                    TOML.parsefile(auth_file)
│                catch err
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:667 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:667 =# @error "malformed auth file" file = auth_file err = err
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:668 =#
│                    return handle_auth_error(url, "malformed-file"; verbose = verbose)
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:671 =#
│            if !(haskey(auth_info, "access_token"))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:672 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:672 =# @warn "auth file without access_token field" file = auth_file
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:673 =#
│                return handle_auth_error(url, "no-access-token"; verbose = verbose)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:675 =#
│            auth_header = "Authorization: Bearer $(auth_info["access_token"])"
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:677 =#
│            expires_at = Inf
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:678 =#
│            if haskey(auth_info, "expires_at")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:679 =#
│                expires_at = min(expires_at, auth_info["expires_at"]::Integer)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:681 =#
│            if haskey(auth_info, "expires_in")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:682 =#
│                expires_at = min(expires_at, mtime(auth_file) + auth_info["expires_in"]::Integer)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:685 =#
│            time_now = time()
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:686 =#
│            if expires_at ≥ time_now + 10 * 60
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:687 =#
│                return auth_header
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:689 =#
│            if !(haskey(auth_info, "refresh_url")) || !(haskey(auth_info, "refresh_token"))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:690 =#
│                if expires_at ≤ time_now
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:691 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:691 =# @warn "expired auth without refresh keys" file = auth_file
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:694 =#
│                return something(handle_auth_error(url, "no-refresh-key"; verbose = verbose), auth_header)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:696 =#
│            refresh_url = auth_info["refresh_url"]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:697 =#
│            if !(is_secure_url(refresh_url))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:698 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:698 =# @warn "ignoring insecure auth refresh URL" url = refresh_url
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:699 =#
│                return something(handle_auth_error(url, "insecure-refresh-url"; verbose = verbose), auth_header)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:701 =#
│            verbose && #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:701 =# @info("Refreshing expired auth token...", file = auth_file)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:702 =#
│            tmp = tempname()
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:703 =#
│            refresh_auth = "Authorization: Bearer $(auth_info["refresh_token"])"
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:704 =#
│            try
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:704 =#
│                download(refresh_url, tmp, auth_header = refresh_auth, verbose = verbose)
│            catch err
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:706 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:706 =# @warn "token refresh failure" file = auth_file url = refresh_url err = err
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:707 =#
│                rm(tmp, force = true)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:708 =#
│                return handle_auth_error(url, "token-refresh-failed"; verbose = verbose)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:710 =#
│            auth_info = try
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:710 =#
│                    TOML.parsefile(tmp)
│                catch err
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:712 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:712 =# @warn "discarding malformed auth file" url = refresh_url err = err
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:713 =#
│                    rm(tmp, force = true)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:714 =#
│                    return something(handle_auth_error(url, "malformed-file"; verbose = verbose), auth_header)
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:716 =#
│            if !(haskey(auth_info, "access_token"))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:717 =#
│                if haskey(auth_info, "refresh_token")
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:718 =#
│                    auth_info["refresh_token"] = "*" ^ 64
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:720 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:720 =# @warn "discarding auth file without access token" auth = auth_info
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:721 =#
│                rm(tmp, force = true)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:722 =#
│                return something(handle_auth_error(url, "no-access-token"; verbose = verbose), auth_header)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:724 =#
│            if haskey(auth_info, "expires_in")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:725 =#
│                expires_in = auth_info["expires_in"]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:726 =#
│                if expires_in isa Number
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:727 =#
│                    expires_at = floor(Int64, time_now + expires_in)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:729 =#
│                    auth_info["expires_at"] = expires_at
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:732 =#
│            open(tmp, write = true) do io
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:733 =#
│                TOML.print(io, auth_info, sorted = true)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:735 =#
│            mv(tmp, auth_file, force = true)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:736 =#
│            return "Authorization: Bearer $(auth_info["access_token"])"
│        end
│    end
│   exception =
│    UndefVarError: #195#196 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:985
│   mod = Pkg.PlatformEngines
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:985 =#
│        function get_tarball_contents(path::AbstractString; verbose_tar::Bool = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:985 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:986 =#
│            if !(isfile(path))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:987 =#
│                error("Tarball path $(path) does not exist")
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:991 =#
│            cmd = gen_list_tarball_cmd(path; verbose = verbose_tar)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:992 =#
│            output = try
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:993 =#
│                    out_pipe = Pipe()
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:994 =#
│                    P = run(pipeline(cmd; stdout = out_pipe); wait = false)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:995 =#
│                    close(out_pipe.in)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:996 =#
│                    output = #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:996 =# @async(String(read(out_pipe)))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:997 =#
│                    wait(P)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:998 =#
│                    fetch(output)
│                catch
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1000 =#
│                    error("Could not list contents of tarball $(path)")
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1003 =#
│            return output
│        end
│    end
│   exception =
│    UndefVarError: #207#208 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1028
│   mod = Pkg.PlatformEngines
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1028 =#
│        function unpack(tarball_path::AbstractString, dest::AbstractString; verbose::Bool = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1034 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1037 =#
│            mkpath(dest)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1041 =#
│            copyderef = get(ENV, "BINARYPROVIDER_COPYDEREF", "") == "true" || !(probe_symlink_creation(dest))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1047 =#
│            excludelist = nothing
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1049 =#
│            if copyderef
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1050 =#
│                symlinks = list_tarball_symlinks(tarball_path)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1051 =#
│                if length(symlinks) > 0
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1052 =#
│                    (excludelist, io) = mktemp()
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1053 =#
│                    write(io, join([s[1] for s = symlinks], "\n"))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1054 =#
│                    close(io)
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1058 =#
│            cmd = gen_unpack_cmd(tarball_path, dest, excludelist)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1059 =#
│            try
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1060 =#
│                run(cmd)
│            catch e
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1062 =#
│                if e isa InterruptException
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1063 =#
│                    rethrow()
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1065 =#
│                error("Could not unpack $(tarball_path) into $(dest)")
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1068 =#
│            if copyderef && length(symlinks) > 0
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1069 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1069 =# @info "Replacing symlinks in tarball by their source files ...\n" * join(string.(symlinks), "\n")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1070 =#
│                for s = symlinks
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1071 =#
│                    sourcefile = normpath(joinpath(dest, s[2]))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1072 =#
│                    destfile = normpath(joinpath(dest, s[1]))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1074 =#
│                    if isfile(sourcefile)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1075 =#
│                        cp(sourcefile, destfile, force = true)
│                    else
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1077 =#
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1077 =# @warn "Symlink source '$(sourcefile)' does not exist!"
│                    end
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1080 =#
│                rm(excludelist; force = true)
│            end
│        end
│    end
│   exception =
│    UndefVarError: #214#215 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1106
│   mod = Pkg.PlatformEngines
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1106 =#
│        function download_verify_unpack(url::AbstractString, hash::Union{AbstractString, Nothing}, dest::AbstractString; tarball_path = nothing, ignore_existence::Bool = false, force::Bool = false, verbose::Bool = false, quiet_download::Bool = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1141 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1152 =#
│            remove_tarball = false
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1153 =#
│            if tarball_path === nothing
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1154 =#
│                remove_tarball = true
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1156 =#
│                function url_ext(url)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1156 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1157 =#
│                    url = basename(url)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1160 =#
│                    qidx = findfirst(isequal('?'), url)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1161 =#
│                    if qidx !== nothing
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1162 =#
│                        url = url[1:qidx]
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1166 =#
│                    dot_idx = findlast(isequal('.'), url)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1167 =#
│                    if dot_idx === nothing
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1168 =#
│                        return nothing
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1171 =#
│                    return url[dot_idx + 1:end]
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1175 =#
│                ext = url_ext(url)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1176 =#
│                if !(ext in ["tar", "gz", "tgz", "bz2", "xz"])
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1177 =#
│                    ext = "gz"
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1181 =#
│                tarball_path = "$(tempname())-download.$(ext)"
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1182 =#
│                tries = 0
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1183 =#
│                while isfile(tarball_path) && tries < 100
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1184 =#
│                    tarball_path = "$(tempname())-download.$(ext)"
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1185 =#
│                    tries += 1
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1187 =#
│                if tries >= 100
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1188 =#
│                    error("Unable to generate unused tempname! Clean up your temporary folder $(dirname(tempname())) and try again.")
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1194 =#
│            should_delete = !(download_verify(url, hash, tarball_path; force = force, verbose = verbose, quiet_download = quiet_download))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1196 =#
│            if should_delete
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1197 =#
│                if verbose
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1198 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1198 =# @info "Removing dest directory $(dest) as source tarball changed"
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1200 =#
│                Base.rm(dest; recursive = true, force = true)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1204 =#
│            if !ignore_existence && isdir(dest)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1205 =#
│                if verbose
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1206 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1206 =# @info "Destination directory $(dest) already exists, returning"
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1210 =#
│                return false
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1213 =#
│            try
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1214 =#
│                if verbose
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1215 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1215 =# @info "Unpacking $(tarball_path) into $(dest)..."
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1217 =#
│                unpack(tarball_path, dest; verbose = verbose)
│            finally
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1219 =#
│                if remove_tarball
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1220 =#
│                    Base.rm(tarball_path)
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1225 =#
│            return true
│        end
│    end
│   exception =
│    UndefVarError: #url_ext#219 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1229
│   mod = Pkg.PlatformEngines
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1229 =#
│        function verify(path::AbstractString, hash::AbstractString; verbose::Bool = false, report_cache_status::Bool = false, hash_path::AbstractString = "$(path).sha256")
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1248 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1252 =#
│            if !(occursin(r"^[0-9a-f]{64}$"i, hash))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1253 =#
│                msg = "Hash value must be 64 hexadecimal characters (256 bits), "
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1254 =#
│                if !(isascii(hash))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1255 =#
│                    msg *= "given hash value is non-ASCII"
│                elseif #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1256 =# occursin(r"^[0-9a-f]*$"i, hash)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1257 =#
│                    msg *= "given hash value has the wrong length ($(length(hash)))"
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1259 =#
│                    msg *= "given hash value contains non-hexadecimal characters"
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1261 =#
│                msg *= ": $(repr(hash))"
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1262 =#
│                error(msg)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1264 =#
│            hash = lowercase(hash)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1267 =#
│            status = :hash_consistent
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1270 =#
│            if isfile(hash_path)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1272 =#
│                if read(hash_path, String) == hash
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1274 =#
│                    if (stat(hash_path)).mtime >= (stat(path)).mtime
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1276 =#
│                        if verbose
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1277 =#
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1277 =# @info "Hash cache is consistent, returning true"
│                        end
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1279 =#
│                        status = :hash_cache_consistent
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1282 =#
│                        if report_cache_status
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1283 =#
│                            return (true, status)
│                        else
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1285 =#
│                            return true
│                        end
│                    else
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1288 =#
│                        if verbose
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1289 =#
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1289 =# @info "File has been modified, hash cache invalidated"
│                        end
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1291 =#
│                        status = :file_modified
│                    end
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1294 =#
│                    if verbose
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1295 =#
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1295 =# @info "Verification hash mismatch, hash cache invalidated"
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1297 =#
│                    status = :hash_cache_mismatch
│                end
│            else
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1300 =#
│                if verbose
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1301 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1301 =# @info "No hash cache found"
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1303 =#
│                status = :hash_cache_missing
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1306 =#
│            calc_hash = open(path) do file
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1307 =#
│                    bytes2hex(sha256(file))
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1309 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1309 =# @assert occursin(r"^[0-9a-f]{64}$", calc_hash)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1311 =#
│            if verbose
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1312 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1312 =# @info "Calculated hash $(calc_hash) for file $(path)"
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1315 =#
│            if calc_hash != hash
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1316 =#
│                msg = "Hash Mismatch!\n"
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1317 =#
│                msg *= "  Expected sha256:   $(hash)\n"
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1318 =#
│                msg *= "  Calculated sha256: $(calc_hash)"
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1319 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1319 =# @error msg
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1320 =#
│                if report_cache_status
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1321 =#
│                    return (false, :hash_mismatch)
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1323 =#
│                    return false
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1328 =#
│            try
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1329 =#
│                open(hash_path, "w") do file
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1330 =#
│                    write(file, hash)
│                end
│            catch e
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1333 =#
│                if e isa InterruptException
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1334 =#
│                    rethrow(e)
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1337 =#
│                if verbose
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1338 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1338 =# @warn "Unable to create hash cache file $(hash_path)"
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1342 =#
│            if report_cache_status
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1343 =#
│                return (true, status)
│            else
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/PlatformEngines.jl:1345 =#
│                return true
│            end
│        end
│    end
│   exception =
│    UndefVarError: #221#223 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:13
│   mod = Pkg.BinaryPlatforms
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:13 =#
│        struct UnknownPlatform <: Platform
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:20 =#
│            UnknownPlatform(args...; kwargs...) = begin
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:20 =#
│                    new()
│                end
│        end
│    end
│   exception =
│    UndefVarError: #UnknownPlatform#36#37 not defined
│    Stacktrace:
│     [1] step_expr!(::Any, ::Frame, ::Any, ::Bool) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:535
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:24
│   mod = Pkg.BinaryPlatforms
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:24 =#
│        struct CompilerABI
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:26 =#
│            libgfortran_version::Union{Nothing, VersionNumber}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:29 =#
│            libstdcxx_version::Union{Nothing, VersionNumber}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:35 =#
│            cxxstring_abi::Union{Nothing, Symbol}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:37 =#
│            function CompilerABI(; libgfortran_version::Union{Nothing, VersionNumber} = nothing, libstdcxx_version::Union{Nothing, VersionNumber} = nothing, cxxstring_abi::Union{Nothing, Symbol} = nothing)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:37 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:40 =#
│                if libgfortran_version !== nothing && (libgfortran_version < v"3" || libgfortran_version >= v"6")
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:42 =#
│                    throw(ArgumentError("Unsupported libgfortran '$(libgfortran_version)'"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:45 =#
│                if libstdcxx_version !== nothing && (libstdcxx_version < v"3.4.0" || libstdcxx_version >= v"3.5")
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:47 =#
│                    throw(ArgumentError("Unsupported libstdc++ '$(libstdcxx_version)'"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:50 =#
│                if cxxstring_abi !== nothing && !(cxxstring_abi in [:cxx03, :cxx11])
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:51 =#
│                    throw(ArgumentError("Unsupported string ABI '$(cxxstring_abi)'"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:54 =#
│                return new(libgfortran_version, libstdcxx_version, cxxstring_abi)
│            end
│        end
│    end
│   exception =
│    UndefVarError: #CompilerABI#38#39 not defined
│    Stacktrace:
│     [1] step_expr!(::Any, ::Frame, ::Any, ::Bool) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:535
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:86
│   mod = Pkg.BinaryPlatforms
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:86 =#
│        struct Linux <: Platform
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:87 =#
│            arch::Symbol
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:88 =#
│            libc::Union{Nothing, Symbol}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:89 =#
│            call_abi::Union{Nothing, Symbol}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:90 =#
│            compiler_abi::CompilerABI
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:92 =#
│            function Linux(arch::Symbol; libc::Union{Nothing, Symbol} = nothing, call_abi::Union{Nothing, Symbol} = nothing, compiler_abi::CompilerABI = CompilerABI())
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:92 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:96 =#
│                if !(arch in [:i686, :x86_64, :aarch64, :powerpc64le, :armv6l, :armv7l])
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:97 =#
│                    throw(ArgumentError("Unsupported architecture '$(arch)' for Linux"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:101 =#
│                if libc === nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:102 =#
│                    libc = :glibc
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:105 =#
│                if !(libc in [:glibc, :musl])
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:106 =#
│                    throw(ArgumentError("Unsupported libc '$(libc)' for Linux"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:110 =#
│                if call_abi === nothing && arch in (:armv6l, :armv7l)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:111 =#
│                    call_abi = :eabihf
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:114 =#
│                if !(call_abi in [:eabihf, nothing])
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:115 =#
│                    throw(ArgumentError("Unsupported calling abi '$(call_abi)' for Linux"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:119 =#
│                if arch in (:armv6l, :armv7l) && call_abi !== :eabihf
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:120 =#
│                    throw(ArgumentError("armv6l/armv7l Linux must use eabihf, not '$(call_abi)'"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:123 =#
│                if !(arch in (:armv6l, :armv7l)) && call_abi === :eabihf
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:124 =#
│                    throw(ArgumentError("eabihf Linux is only supported on armv6l/armv7l, not '$(arch)'!"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:127 =#
│                return new(arch, libc, call_abi, compiler_abi)
│            end
│        end
│    end
│   exception =
│    UndefVarError: #Linux#41#42 not defined
│    Stacktrace:
│     [1] step_expr!(::Any, ::Frame, ::Any, ::Bool) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:535
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:131
│   mod = Pkg.BinaryPlatforms
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:131 =#
│        struct MacOS <: Platform
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:132 =#
│            arch::Symbol
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:133 =#
│            libc::Nothing
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:134 =#
│            call_abi::Nothing
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:135 =#
│            compiler_abi::CompilerABI
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:139 =#
│            function MacOS(arch::Symbol = :x86_64; libc::Union{Nothing, Symbol} = nothing, call_abi::Union{Nothing, Symbol} = nothing, compiler_abi::CompilerABI = CompilerABI())
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:139 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:143 =#
│                if arch !== :x86_64
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:144 =#
│                    throw(ArgumentError("Unsupported architecture '$(arch)' for macOS"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:146 =#
│                if libc !== nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:147 =#
│                    throw(ArgumentError("Unsupported libc '$(libc)' for macOS"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:149 =#
│                if call_abi !== nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:150 =#
│                    throw(ArgumentError("Unsupported abi '$(call_abi)' for macOS"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:153 =#
│                return new(arch, libc, call_abi, compiler_abi)
│            end
│        end
│    end
│   exception =
│    UndefVarError: #MacOS#43#44 not defined
│    Stacktrace:
│     [1] step_expr!(::Any, ::Frame, ::Any, ::Bool) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:535
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:157
│   mod = Pkg.BinaryPlatforms
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:157 =#
│        struct Windows <: Platform
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:158 =#
│            arch::Symbol
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:159 =#
│            libc::Nothing
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:160 =#
│            call_abi::Nothing
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:161 =#
│            compiler_abi::CompilerABI
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:163 =#
│            function Windows(arch::Symbol; libc::Union{Nothing, Symbol} = nothing, call_abi::Union{Nothing, Symbol} = nothing, compiler_abi::CompilerABI = CompilerABI())
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:163 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:167 =#
│                if !(arch in [:i686, :x86_64])
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:168 =#
│                    throw(ArgumentError("Unsupported architecture '$(arch)' for Windows"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:172 =#
│                if libc !== nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:173 =#
│                    throw(ArgumentError("Unsupported libc '$(libc)' for Windows"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:175 =#
│                if call_abi !== nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:176 =#
│                    throw(ArgumentError("Unsupported abi '$(call_abi)' for Windows"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:179 =#
│                return new(arch, libc, call_abi, compiler_abi)
│            end
│        end
│    end
│   exception =
│    UndefVarError: #Windows#45#46 not defined
│    Stacktrace:
│     [1] step_expr!(::Any, ::Frame, ::Any, ::Bool) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:535
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:183
│   mod = Pkg.BinaryPlatforms
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:183 =#
│        struct FreeBSD <: Platform
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:184 =#
│            arch::Symbol
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:185 =#
│            libc::Nothing
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:186 =#
│            call_abi::Union{Nothing, Symbol}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:187 =#
│            compiler_abi::CompilerABI
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:189 =#
│            function FreeBSD(arch::Symbol = :x86_64; libc::Union{Nothing, Symbol} = nothing, call_abi::Union{Nothing, Symbol} = nothing, compiler_abi::CompilerABI = CompilerABI())
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:189 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:196 =#
│                if arch === :amd64
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:197 =#
│                    arch = :x86_64
│                elseif #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:198 =# arch === :i386
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:199 =#
│                    arch = :i686
│                elseif #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:200 =# !(arch in [:i686, :x86_64, :aarch64, :powerpc64le, :armv6l, :armv7l])
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:201 =#
│                    throw(ArgumentError("Unsupported architecture '$(arch)' for FreeBSD"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:206 =#
│                if libc !== nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:207 =#
│                    throw(ArgumentError("Unsupported libc '$(libc)' for FreeBSD"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:211 =#
│                if call_abi === nothing && arch in (:armv6l, :armv7l)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:212 =#
│                    call_abi = :eabihf
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:215 =#
│                if !(call_abi in [:eabihf, nothing])
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:216 =#
│                    throw(ArgumentError("Unsupported calling abi '$(call_abi)' for FreeBSD"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:220 =#
│                if arch in (:armv6l, :armv7l) && call_abi !== :eabihf
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:221 =#
│                    throw(ArgumentError("armv6l/armv7l FreeBSD must use eabihf, not '$(call_abi)'"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:224 =#
│                if !(arch in (:armv6l, :armv7l)) && call_abi === :eabihf
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:225 =#
│                    throw(ArgumentError("eabihf FreeBSD is supported only on armv6l/armv7l, not '$(arch)'!"))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:228 =#
│                return new(arch, libc, call_abi, compiler_abi)
│            end
│        end
│    end
│   exception =
│    UndefVarError: #FreeBSD#47#48 not defined
│    Stacktrace:
│     [1] step_expr!(::Any, ::Frame, ::Any, ::Bool) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:535
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:624
│   mod = Pkg.BinaryPlatforms
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:624 =#
│        function detect_libgfortran_version(; platform::Platform = default_platkey)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:630 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:631 =#
│            libgfortran_paths = filter((x->begin
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:631 =#
│                            occursin("libgfortran", x)
│                        end), Libdl.dllist())
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:632 =#
│            if isempty(libgfortran_paths)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:634 =#
│                return nothing
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/BinaryPlatforms.jl:636 =#
│            return detect_libgfortran_version(first(libgfortran_paths), platform)
│        end
│    end
│   exception =
│    UndefVarError: #56#57 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Types.jl:165
│   mod = Pkg.Types
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:165 =#
│        function manifestfile_path(env_path::String; strict = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:165 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:166 =#
│            for name = Base.manifest_names
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:167 =#
│                maybe_file = joinpath(env_path, name)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:168 =#
│                isfile(maybe_file) && return maybe_file
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:170 =#
│            if strict
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:171 =#
│                return nothing
│            else
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:173 =#
│                project = basename(projectfile_path(env_path))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:174 =#
│                idx = findfirst((x->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:174 =#
│                                x == project
│                            end), Base.project_names)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:175 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:175 =# @assert idx !== nothing
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:176 =#
│                return joinpath(env_path, Base.manifest_names[idx])
│            end
│        end
│    end
│   exception =
│    UndefVarError: #125#126 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Types.jl:216
│   mod = Pkg.Types
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:216 =#
│        Base.:(==)(t1::Project, t2::Project) = begin
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:216 =#
│                all([getfield(t1, x) == getfield(t2, x) for x = fieldnames(Project)])
│            end
│    end
│   exception =
│    UndefVarError: #128#129 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Types.jl:217
│   mod = Pkg.Types
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:217 =#
│        Base.hash(x::Project, h::UInt) = begin
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:217 =#
│                foldr(hash, [getfield(t, x) for x = fieldnames(Project)], init = h)
│            end
│    end
│   exception =
│    UndefVarError: #130#131 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Types.jl:230
│   mod = Pkg.Types
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:230 =#
│        Base.:(==)(t1::PackageEntry, t2::PackageEntry) = begin
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:230 =#
│                all([getfield(t1, x) == getfield(t2, x) for x = filter!((!=)(:other), collect(fieldnames(PackageEntry)))])
│            end
│    end
│   exception =
│    UndefVarError: #133#134 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Types.jl:231
│   mod = Pkg.Types
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:231 =#
│        Base.hash(x::PackageEntry, h::UInt) = begin
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:231 =#
│                foldr(hash, [getfield(t, x) for x = filter!((!=)(:other), collect(fieldnames(PackageEntry)))], init = h)
│            end
│    end
│   exception =
│    UndefVarError: #135#136 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Types.jl:786
│   mod = Pkg.Types
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:786 =#
│        function ensure_resolved(ctx::Context, pkgs::AbstractVector{PackageSpec}; registry::Bool = false)::Nothing
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:786 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:789 =#
│            unresolved_uuids = Dict{String, Vector{UUID}}()
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:790 =#
│            for name = [pkg.name for pkg = pkgs if !(has_uuid(pkg))]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:791 =#
│                uuids = [uuid for (uuid, entry) = ctx.env.manifest if entry.name == name]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:792 =#
│                sort!(uuids, by = (uuid->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:792 =#
│                                uuid.value
│                            end))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:793 =#
│                unresolved_uuids[name] = uuids
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:795 =#
│            unresolved_names = UUID[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:796 =#
│            for uuid = [pkg.uuid for pkg = pkgs if !(has_name(pkg))]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:797 =#
│                push!(unresolved_names, uuid)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:799 =#
│            isempty(unresolved_uuids) && (isempty(unresolved_names) && return)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:800 =#
│            msg = sprint() do io
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:801 =#
│                    if !(isempty(unresolved_uuids))
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:802 =#
│                        println(io, "The following package names could not be resolved:")
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:803 =#
│                        for (name, uuids) = sort!(collect(unresolved_uuids), by = lowercase ∘ first)
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:804 =#
│                            print(io, " * $(name) (")
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:805 =#
│                            if length(uuids) == 0
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:806 =#
│                                what = ["project", "manifest"]
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:807 =#
│                                registry && push!(what, "registry")
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:808 =#
│                                print(io, "not found in ")
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:809 =#
│                                join(io, what, ", ", " or ")
│                            else
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:811 =#
│                                join(io, uuids, ", ", " or ")
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:812 =#
│                                print(io, " in manifest but not in project")
│                            end
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:814 =#
│                            println(io, ")")
│                        end
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:817 =#
│                    if !(isempty(unresolved_names))
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:818 =#
│                        println(io, "The following package uuids could not be resolved:")
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:819 =#
│                        for uuid = unresolved_names
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:820 =#
│                            println(io, " * $(uuid)")
│                        end
│                    end
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:824 =#
│            pkgerror(msg)
│        end
│    end
│   exception =
│    UndefVarError: #155#163 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Types.jl:831
│   mod = Pkg.Types
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:831 =#
│        mutable struct RegistrySpec
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:832 =#
│            name::Union{String, Nothing}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:833 =#
│            uuid::Union{UUID, Nothing}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:834 =#
│            url::Union{String, Nothing}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:837 =#
│            path::Union{String, Nothing}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:838 =#
│            RegistrySpec(name::String) = begin
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:838 =#
│                    RegistrySpec(name = name)
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:839 =#
│            RegistrySpec(; name = nothing, uuid = nothing, url = nothing, path = nothing) = begin
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:839 =#
│                    new(name, if uuid isa String
│                            UUID(uuid)
│                        else
│                            uuid
│                        end, url, path)
│                end
│        end
│    end
│   exception =
│    UndefVarError: #RegistrySpec#171#172 not defined
│    Stacktrace:
│     [1] step_expr!(::Any, ::Frame, ::Any, ::Bool) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:535
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1065
│   mod = Pkg.Types
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1065 =#
│        function update_registries(ctx::Context, regs::Vector{RegistrySpec} = collect_registries(depots1()); force::Bool = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1065 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1067 =#
│            !force && (UPDATED_REGISTRY_THIS_SESSION[] && return)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1068 =#
│            errors = Tuple{String, String}[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1069 =#
│            for reg = unique((r->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1069 =#
│                                r.uuid
│                            end), find_installed_registries(ctx, regs))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1070 =#
│                regpath = pathrepr(reg.path)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1071 =#
│                if isfile(joinpath(reg.path, ".tree_info.toml"))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1072 =#
│                    printpkgstyle(ctx, :Updating, "registry at " * regpath)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1073 =#
│                    tree_info = TOML.parsefile(joinpath(reg.path, ".tree_info.toml"))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1074 =#
│                    old_hash = tree_info["git-tree-sha1"]
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1075 =#
│                    url = pkg_server_registry_url(reg.uuid)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1076 =#
│                    if url !== nothing && (new_hash = pkg_server_url_hash(url)) != old_hash
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1078 =#
│                        mktempdir() do tmp
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1079 =#
│                            try
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1080 =#
│                                download_verify_unpack(url, nothing, tmp, ignore_existence = true)
│                            catch err
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1082 =#
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1082 =# @warn "could not download $(url)"
│                            end
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1084 =#
│                            tree_info_file = joinpath(tmp, ".tree_info.toml")
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1085 =#
│                            ispath(tree_info_file) && error("tree info file $(tree_info_file) already exists")
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1087 =#
│                            open(tree_info_file, write = true) do io
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1088 =#
│                                println(io, "git-tree-sha1 = ", repr(new_hash))
│                            end
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1090 =#
│                            registry_file = joinpath(tmp, "Registry.toml")
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1091 =#
│                            registry = read_registry(registry_file; cache = false)
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1092 =#
│                            verify_registry(registry)
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1093 =#
│                            cp(tmp, reg.path, force = true)
│                        end
│                    end
│                elseif #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1096 =# isdir(joinpath(reg.path, ".git"))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1097 =#
│                    printpkgstyle(ctx, :Updating, "registry at " * regpath)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1101 =#
│                    repo = nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1102 =#
│                    try
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1103 =#
│                        repo = LibGit2.GitRepo(reg.path)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1104 =#
│                        if LibGit2.isdirty(repo)
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1105 =#
│                            push!(errors, (regpath, "registry dirty"))
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1106 =#
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1106 =# @goto done
│                        end
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1108 =#
│                        if !(LibGit2.isattached(repo))
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1109 =#
│                            push!(errors, (regpath, "registry detached"))
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1110 =#
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1110 =# @goto done
│                        end
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1112 =#
│                        if !("origin" in LibGit2.remotes(repo))
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1113 =#
│                            push!(errors, (regpath, "origin not in the list of remotes"))
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1114 =#
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1114 =# @goto done
│                        end
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1116 =#
│                        branch = LibGit2.headname(repo)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1117 =#
│                        try
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1118 =#
│                            GitTools.fetch(ctx, repo; refspecs = ["+refs/heads/$(branch):refs/remotes/origin/$(branch)"])
│                        catch e
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1120 =#
│                            e isa PkgError || rethrow()
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1121 =#
│                            push!(errors, (reg.path, "failed to fetch from repo"))
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1122 =#
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1122 =# @goto done
│                        end
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1124 =#
│                        ff_succeeded = try
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1125 =#
│                                LibGit2.merge!(repo; branch = "refs/remotes/origin/$(branch)", fastforward = true)
│                            catch e
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1127 =#
│                                e isa LibGit2.GitError && e.code == LibGit2.Error.ENOTFOUND || rethrow()
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1128 =#
│                                push!(errors, (reg.path, "branch origin/$(branch) not found"))
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1129 =#
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1129 =# @goto done
│                            end
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1132 =#
│                        if !ff_succeeded
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1133 =#
│                            try
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1133 =#
│                                LibGit2.rebase!(repo, "origin/$(branch)")
│                            catch e
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1135 =#
│                                e isa LibGit2.GitError || rethrow()
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1136 =#
│                                push!(errors, (reg.path, "registry failed to rebase on origin/$(branch)"))
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1137 =#
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1137 =# @goto done
│                            end
│                        end
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1140 =#
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1140 =# @label done
│                    finally
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1142 =#
│                        if repo isa LibGit2.GitRepo
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1143 =#
│                            close(repo)
│                        end
│                    end
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1148 =#
│            if !(isempty(errors))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1149 =#
│                warn_str = "Some registries failed to update:"
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1150 =#
│                for (reg, err) = errors
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1151 =#
│                    warn_str *= "\n    — $(reg) — $(err)"
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1153 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1153 =# @warn warn_str
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1155 =#
│            UPDATED_REGISTRY_THIS_SESSION[] = true
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:1156 =#
│            return
│        end
│    end
│   exception =
│    UndefVarError: #193#196 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/versions.jl:152
│   mod = Pkg.Types
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:152 =#
│        function Base.union!(ranges::Vector{<:VersionRange})
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:152 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:153 =#
│            l = length(ranges)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:154 =#
│            l == 0 && return ranges
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:156 =#
│            sort!(ranges, lt = ((a, b)->begin
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:156 =#
│                            isless_ll(a.lower, b.lower) || a.lower == b.lower && isless_uu(a.upper, b.upper)
│                        end))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:158 =#
│            k0 = 1
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:159 =#
│            ks = findfirst(!isempty, ranges)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:160 =#
│            ks === nothing && return empty!(ranges)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:162 =#
│            (lo, up, k0) = ((ranges[ks]).lower, (ranges[ks]).upper, 1)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:163 =#
│            for k = ks + 1:l
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:164 =#
│                isempty(ranges[k]) && continue
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:165 =#
│                (lo1, up1) = ((ranges[k]).lower, (ranges[k]).upper)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:166 =#
│                if isjoinable(up, lo1)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:167 =#
│                    isless_uu(up, up1) && (up = up1)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:168 =#
│                    continue
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:170 =#
│                vr = VersionRange(lo, up)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:171 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:171 =# @assert !(isempty(vr))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:172 =#
│                ranges[k0] = vr
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:173 =#
│                k0 += 1
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:174 =#
│                (lo, up) = (lo1, up1)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:176 =#
│            vr = VersionRange(lo, up)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:177 =#
│            if !(isempty(vr))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:178 =#
│                ranges[k0] = vr
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:179 =#
│                k0 += 1
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:181 =#
│            resize!(ranges, k0 - 1)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/versions.jl:182 =#
│            return ranges
│        end
│    end
│   exception =
│    UndefVarError: #209#210 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/project.jl:127
│   mod = Pkg.Types
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:127 =#
│        function read_project(io::IO; path = nothing)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:127 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:128 =#
│            raw = nothing
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:129 =#
│            try
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:130 =#
│                raw = TOML.parse(io)
│            catch err
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:132 =#
│                if err isa TOML.ParserError
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:133 =#
│                    pkgerror("Could not parse project $(something(path, "")): $(err.msg)")
│                elseif #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:134 =# err isa CompositeException && all((x->begin
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:134 =#
│                                    x isa TOML.ParserError
│                                end), err)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:135 =#
│                    pkgerror("Could not parse project $(something(path, "")): $(err)")
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:137 =#
│                    rethrow()
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/project.jl:140 =#
│            return Project(raw)
│        end
│    end
│   exception =
│    UndefVarError: #216#217 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:74
│   mod = Pkg.Resolve
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:74 =#
│        mutable struct GraphData
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:76 =#
│            pkgs::Vector{UUID}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:79 =#
│            np::Int
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:82 =#
│            spp::Vector{Int}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:85 =#
│            pdict::Dict{UUID, Int}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:91 =#
│            pvers::Vector{Vector{VersionNumber}}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:96 =#
│            vdict::Vector{Dict{VersionNumber, Int}}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:99 =#
│            uuid_to_name::Dict{UUID, String}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:106 =#
│            pruned::Dict{UUID, VersionNumber}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:110 =#
│            eq_classes::Dict{UUID, Dict{InstState, Set{InstState}}}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:113 =#
│            rlog::ResolveLog
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:115 =#
│            function GraphData(versions::Dict{UUID, Set{VersionNumber}}, uuid_to_name::Dict{UUID, String}, verbose::Bool = false)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:115 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:121 =#
│                pkgs = sort!(collect(keys(versions)))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:122 =#
│                np = length(pkgs)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:125 =#
│                pdict = Dict{UUID, Int}((pkgs[p0] => p0 for p0 = 1:np))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:128 =#
│                pvers = [sort!(collect(versions[pkgs[p0]])) for p0 = 1:np]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:129 =#
│                spp = length.(pvers) .+ 1
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:132 =#
│                vdict = [Dict{VersionNumber, Int}((vn => i for (i, vn) = enumerate(pvers[p0]))) for p0 = 1:np]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:135 =#
│                pruned = Dict{UUID, VersionNumber}()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:138 =#
│                eq_vn(v0, p0) = begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:138 =#
│                        if v0 == spp[p0]
│                            nothing
│                        else
│                            (pvers[p0])[v0]
│                        end
│                    end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:141 =#
│                eq_classes = Dict{UUID, Dict{InstState, Set{InstState}}}()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:142 =#
│                for p0 = 1:np
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:143 =#
│                    d = Dict{InstState, Set{InstState}}()
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:144 =#
│                    for v0 = 1:spp[p0]
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:145 =#
│                        let p0 = p0
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:146 =#
│                            d[eq_vn(v0, p0)] = Set([eq_vn(v0, p0)])
│                        end
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:149 =#
│                    eq_classes[pkgs[p0]] = d
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:153 =#
│                rlog = ResolveLog(uuid_to_name, verbose)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:155 =#
│                data = new(pkgs, np, spp, pdict, pvers, vdict, uuid_to_name, pruned, eq_classes, rlog)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:157 =#
│                init_log!(data)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:159 =#
│                return data
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:162 =#
│            function Base.copy(data::GraphData)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:162 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:163 =#
│                pkgs = copy(data.pkgs)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:164 =#
│                np = data.np
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:165 =#
│                spp = copy(data.spp)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:166 =#
│                pdict = copy(data.pdict)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:167 =#
│                pvers = [copy(data.pvers[p0]) for p0 = 1:np]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:168 =#
│                vdict = [copy(data.vdict[p0]) for p0 = 1:np]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:169 =#
│                pruned = copy(data.pruned)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:170 =#
│                eq_classes = Dict((p => copy(eq) for (p, eq) = data.eq_classes))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:171 =#
│                rlog = deepcopy(data.rlog)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:172 =#
│                uuid_to_name = rlog.uuid_to_name
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:174 =#
│                return new(pkgs, np, spp, pdict, pvers, vdict, uuid_to_name, pruned, eq_classes, rlog)
│            end
│        end
│    end
│   exception =
│    UndefVarError: #185#193 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:178
│   mod = Pkg.Resolve
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:178 =#
│        mutable struct Graph
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:184 =#
│            data::GraphData
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:189 =#
│            gadj::Vector{Vector{Int}}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:198 =#
│            gmsk::Vector{Vector{BitMatrix}}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:203 =#
│            gconstr::Vector{BitVector}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:209 =#
│            adjdict::Vector{Dict{Int, Int}}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:213 =#
│            req_inds::Set{Int}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:217 =#
│            fix_inds::Set{Int}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:219 =#
│            ignored::BitVector
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:224 =#
│            solve_stack::Vector{Tuple{Vector{BitVector}, BitVector}}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:227 =#
│            spp::Vector{Int}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:230 =#
│            np::Int
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:232 =#
│            function Graph(versions::Dict{UUID, Set{VersionNumber}}, deps::Dict{UUID, Dict{VersionNumber, Dict{String, UUID}}}, compat::Dict{UUID, Dict{VersionNumber, Dict{String, VersionSpec}}}, uuid_to_name::Dict{UUID, String}, reqs::Requires, fixed::Dict{UUID, Fixed}, verbose::Bool = false)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:232 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:242 =#
│                for (uuid, vnmap) = deps, vn = versions[uuid]
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:243 =#
│                    (get!(Dict, vnmap, vn))["julia"] = uuid_julia
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:247 =#
│                fixed[uuid_julia] = Fixed(VERSION)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:248 =#
│                uuid_to_name[uuid_julia] = "julia"
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:249 =#
│                versions[uuid_julia] = Set([VERSION])
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:250 =#
│                deps[uuid_julia] = Dict(VERSION => Dict())
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:251 =#
│                compat[uuid_julia] = Dict(VERSION => Dict())
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:253 =#
│                extra_uuids = union(keys(reqs), keys(fixed), map((fx->begin
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:253 =#
│                                    keys(fx.requires)
│                                end), values(fixed))...)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:254 =#
│                extra_uuids ⊆ keys(versions) || error("unknown UUID found in reqs/fixed")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:257 =#
│                data = GraphData(versions, uuid_to_name, verbose)::GraphData
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:258 =#
│                (pkgs, np, spp, pdict, pvers, vdict, rlog) = (data.pkgs, data.np, data.spp, data.pdict, data.pvers, data.vdict, data.rlog)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:260 =#
│                local extended_deps
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:261 =#
│                let spp = spp
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:263 =#
│                    extended_deps = [Vector{Dict{Int, BitVector}}(undef, spp[p0] - 1) for p0 = 1:np]::Vector{Vector{Dict{Int, BitVector}}}
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:265 =#
│                for p0 = 1:np, v0 = 1:spp[p0] - 1
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:266 =#
│                    n2u = Dict{String, UUID}()
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:267 =#
│                    vn = (pvers[p0])[v0]
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:268 =#
│                    vnmap = get(Dict, deps[pkgs[p0]], vn)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:269 =#
│                    for (name, uuid) = vnmap
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:271 =#
│                        n2u[name] = uuid
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:273 =#
│                    req = Dict{Int, VersionSpec}()
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:274 =#
│                    uuid = pkgs[p0]
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:275 =#
│                    vnmap = get(Dict, compat[pkgs[p0]], vn)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:276 =#
│                    for (name, vs) = vnmap
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:277 =#
│                        haskey(n2u, name) || error("Unknown package $(name) found in the compatibility requirements of $(pkgID(pkgs[p0], uuid_to_name))")
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:278 =#
│                        uuid = n2u[name]
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:279 =#
│                        p1 = pdict[uuid]
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:280 =#
│                        p1 == p0 && error("Package $(pkgID(pkgs[p0], uuid_to_name)) version $(vn) has a dependency with itself")
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:283 =#
│                        req_p1 = get!(VersionSpec, req, p1)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:284 =#
│                        req[p1] = req_p1 ∩ vs
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:287 =#
│                    for uuid = values(n2u)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:288 =#
│                        p1 = pdict[uuid]
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:289 =#
│                        p1 == p0 && continue
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:290 =#
│                        get!(VersionSpec, req, p1)
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:294 =#
│                    req_msk = Dict{Int, BitVector}()
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:295 =#
│                    for (p1, vs) = req
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:296 =#
│                        pv = pvers[p1]
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:297 =#
│                        req_msk_p1 = BitArray(undef, spp[p1] - 1)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:298 =#
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:298 =# @inbounds for i = 1:spp[p1] - 1
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:299 =#
│                                req_msk_p1[i] = pv[i] ∈ vs
│                            end
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:301 =#
│                        req_msk[p1] = req_msk_p1
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:303 =#
│                    (extended_deps[p0])[v0] = req_msk
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:306 =#
│                gadj = [Int[] for p0 = 1:np]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:307 =#
│                gmsk = [BitMatrix[] for p0 = 1:np]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:308 =#
│                local gconstr
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:309 =#
│                let spp = spp
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:310 =#
│                    gconstr = [trues(spp[p0]) for p0 = 1:np]
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:312 =#
│                adjdict = [Dict{Int, Int}() for p0 = 1:np]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:314 =#
│                for p0 = 1:np, v0 = 1:spp[p0] - 1, (p1, rmsk1) = (extended_deps[p0])[v0]
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:315 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:315 =# @assert p0 ≠ p1
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:316 =#
│                    j0 = get(adjdict[p1], p0, length(gadj[p0]) + 1)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:317 =#
│                    j1 = get(adjdict[p0], p1, length(gadj[p1]) + 1)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:319 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:319 =# @assert j0 > length(gadj[p0]) && j1 > length(gadj[p1]) || j0 ≤ length(gadj[p0]) && j1 ≤ length(gadj[p1])
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:322 =#
│                    if j0 > length(gadj[p0])
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:323 =#
│                        push!(gadj[p0], p1)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:324 =#
│                        push!(gadj[p1], p0)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:325 =#
│                        j0 = length(gadj[p0])
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:326 =#
│                        j1 = length(gadj[p1])
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:328 =#
│                        (adjdict[p1])[p0] = j0
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:329 =#
│                        (adjdict[p0])[p1] = j1
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:331 =#
│                        bm = trues(spp[p1], spp[p0])
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:332 =#
│                        bmt = trues(spp[p0], spp[p1])
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:334 =#
│                        push!(gmsk[p0], bm)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:335 =#
│                        push!(gmsk[p1], bmt)
│                    else
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:337 =#
│                        bm = (gmsk[p0])[j0]
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:338 =#
│                        bmt = (gmsk[p1])[j1]
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:341 =#
│                    for v1 = 1:spp[p1] - 1
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:342 =#
│                        rmsk1[v1] && continue
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:343 =#
│                        bm[v1, v0] = false
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:344 =#
│                        bmt[v0, v1] = false
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:346 =#
│                    bm[end, v0] = false
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:347 =#
│                    bmt[v0, end] = false
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:350 =#
│                req_inds = Set{Int}()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:351 =#
│                fix_inds = Set{Int}()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:353 =#
│                ignored = falses(np)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:354 =#
│                solve_stack = Tuple{Vector{BitVector}, BitVector}[]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:356 =#
│                graph = new(data, gadj, gmsk, gconstr, adjdict, req_inds, fix_inds, ignored, solve_stack, spp, np)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:358 =#
│                _add_fixed!(graph, fixed)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:359 =#
│                _add_reqs!(graph, reqs, :explicit_requirement)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:361 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:361 =# @assert check_consistency(graph)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:362 =#
│                check_constraints(graph)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:364 =#
│                return graph
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:367 =#
│            function Base.copy(graph::Graph)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:367 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:368 =#
│                data = copy(graph.data)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:369 =#
│                np = graph.np
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:370 =#
│                spp = data.spp
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:371 =#
│                gadj = [copy(graph.gadj[p0]) for p0 = 1:np]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:372 =#
│                gmsk = [[copy((graph.gmsk[p0])[j0]) for j0 = 1:length(gadj[p0])] for p0 = 1:np]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:373 =#
│                gconstr = [copy(graph.gconstr[p0]) for p0 = 1:np]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:374 =#
│                adjdict = [copy(graph.adjdict[p0]) for p0 = 1:np]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:375 =#
│                req_inds = copy(graph.req_inds)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:376 =#
│                fix_inds = copy(graph.fix_inds)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:377 =#
│                ignored = copy(graph.ignored)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:378 =#
│                solve_stack = [([copy(gc0) for gc0 = sav_gconstr], copy(sav_ignored)) for (sav_gconstr, sav_ignored) = graph.solve_stack]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:380 =#
│                return new(data, gadj, gmsk, gconstr, adjdict, req_inds, fix_inds, ignored, solve_stack, spp, np)
│            end
│        end
│    end
│   exception =
│    UndefVarError: #202#214 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:831
│   mod = Pkg.Resolve
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:831 =#
│        function showlog(io::IO, rlog::ResolveLog; view::Symbol = :plain)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:839 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:840 =#
│            view ∈ [:plain, :tree, :chronological] || throw(ArgumentError("the view argument should be `:plain`, `:tree` or `:chronological`"))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:841 =#
│            println(io, "Resolve log:")
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:842 =#
│            view === :chronological && return showlogjournal(io, rlog)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:843 =#
│            seen = IdDict()
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:844 =#
│            recursive = view === :tree
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:845 =#
│            _show(io, rlog, rlog.globals, _logindent, seen, false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:846 =#
│            initentries = [event[1] for event = rlog.init.events]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:847 =#
│            for entry = sort!(initentries, by = (entry->begin
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:847 =#
│                                    pkgID(entry.pkg, rlog)
│                                end))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:848 =#
│                seen[entry] = true
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:849 =#
│                _show(io, rlog, entry, _logindent, seen, recursive)
│            end
│        end
│    end
│   exception =
│    UndefVarError: #227#229 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:862
│   mod = Pkg.Resolve
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:862 =#
│        function showlog(io::IO, rlog::ResolveLog, p::UUID; view::Symbol = :tree)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:867 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:868 =#
│            view ∈ [:plain, :tree] || throw(ArgumentError("the view argument should be `:plain` or `:tree`"))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:869 =#
│            entry = rlog.pool[p]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:870 =#
│            if view === :tree
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:871 =#
│                _show(io, rlog, entry, _logindent, IdDict(entry => true), true)
│            else
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:873 =#
│                entries = ResolveLogEntry[entry]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:874 =#
│                function getentries(entry)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:874 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:875 =#
│                    for (other_entry, _) = entry.events
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:876 =#
│                        (other_entry ≡ nothing || other_entry ∈ entries) && continue
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:877 =#
│                        push!(entries, other_entry)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:878 =#
│                        getentries(other_entry)
│                    end
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:881 =#
│                getentries(entry)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:882 =#
│                for entry = entries
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:883 =#
│                    _show(io, rlog, entry, _logindent, IdDict(), false)
│                end
│            end
│        end
│    end
│   exception =
│    UndefVarError: #getentries#235 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:940
│   mod = Pkg.Resolve
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:940 =#
│        function propagate_constraints!(graph::Graph, sources::Set{Int} = Set{Int}(); log_events::Bool = true)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:945 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:946 =#
│            np = graph.np
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:947 =#
│            spp = graph.spp
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:948 =#
│            gadj = graph.gadj
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:949 =#
│            gmsk = graph.gmsk
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:950 =#
│            gconstr = graph.gconstr
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:951 =#
│            adjdict = graph.adjdict
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:952 =#
│            ignored = graph.ignored
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:953 =#
│            pkgs = graph.data.pkgs
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:954 =#
│            pvers = graph.data.pvers
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:955 =#
│            rlog = graph.data.rlog
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:956 =#
│            exact = rlog.exact
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:958 =#
│            id(p0::Int) = begin
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:958 =#
│                    pkgID(pkgs[p0], graph)
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:960 =#
│            log_events && log_event_global!(graph, "propagating constraints")
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:964 =#
│            staged = if isempty(sources)
│                    Set{Int}((p0 for p0 = 1:np if !((gconstr[p0])[end])))
│                else
│                    sources
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:968 =#
│            while !(isempty(staged))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:969 =#
│                staged_next = Set{Int}()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:970 =#
│                for p0 = staged
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:971 =#
│                    gconstr0 = gconstr[p0]
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:972 =#
│                    for (j1, p1) = enumerate(gadj[p0])
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:975 =#
│                        ignored[p1] && continue
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:978 =#
│                        pkgs[p1] == uuid_julia && continue
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:980 =#
│                        msk = (gmsk[p0])[j1]
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:982 =#
│                        sub_msk = msk[:, gconstr0]
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:986 =#
│                        added_constr1 = any!(BitVector(undef, spp[p1]), sub_msk)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:989 =#
│                        gconstr1 = gconstr[p1]
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:990 =#
│                        old_gconstr1 = copy(gconstr1)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:991 =#
│                        gconstr1 .&= added_constr1
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:994 =#
│                        if gconstr1 ≠ old_gconstr1
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:995 =#
│                            push!(staged_next, p1)
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:996 =#
│                            log_events && log_event_implicit_req!(graph, p1, added_constr1, p0)
│                        end
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:998 =#
│                        if !(any(gconstr1))
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:999 =#
│                            if exact
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1000 =#
│                                err_msg = "Unsatisfiable requirements detected for package $(id(p1)):\n"
│                            else
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1002 =#
│                                err_msg = "Resolve failed to satisfy requirements for package $(id(p1)):\n"
│                            end
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1004 =#
│                            err_msg *= sprint(showlog, rlog, pkgs[p1])
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1005 =#
│                            throw(ResolverError(chomp(err_msg)))
│                        end
│                    end
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1009 =#
│                staged = staged_next
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1011 =#
│            return graph
│        end
│    end
│   exception =
│    UndefVarError: #id#239 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1207
│   mod = Pkg.Resolve
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1207 =#
│        function compute_eq_classes_soft!(graph::Graph; log_events::Bool = true)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1207 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1208 =#
│            log_events && log_event_global!(graph, "computing version equivalence classes")
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1210 =#
│            np = graph.np
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1212 =#
│            np == 0 && return graph
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1214 =#
│            ignored = graph.ignored
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1215 =#
│            gconstr = graph.gconstr
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1216 =#
│            sumspp = sum((count(gconstr[p0]) for p0 = 1:np))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1217 =#
│            for p0 = 1:np
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1218 =#
│                ignored[p0] && continue
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1219 =#
│                build_eq_classes_soft1!(graph, p0)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1221 =#
│            sumspp_new = sum((count(gconstr[p0]) for p0 = 1:np))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1223 =#
│            log_events && log_event_global!(graph, "computed version equivalence classes, stats (total n. of states): before = $(sumspp) after = $(sumspp_new) diff = $(sumspp_new - sumspp)")
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1225 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1225 =# @assert check_consistency(graph)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Resolve/graphtype.jl:1227 =#
│            return graph
│        end
│    end
│   exception =
│    UndefVarError: #259#261 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:76
│   mod = Pkg.Artifacts
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:76 =#
│        function load_overrides(; force::Bool = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:76 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:77 =#
│            if ARTIFACT_OVERRIDES[] !== nothing && !force
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:78 =#
│                return ARTIFACT_OVERRIDES[]
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:88 =#
│            overrides = Dict(:UUID => Dict{Base.UUID, Dict{String, Union{String, SHA1}}}(), :hash => Dict{SHA1, Union{String, SHA1}}())
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:96 =#
│            for override_file = reverse(artifacts_dirs("Overrides.toml"))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:97 =#
│                !(isfile(override_file)) && continue
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:100 =#
│                depot_override_dict = parse_toml(override_file)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:102 =#
│                function parse_mapping(mapping::String, name::String)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:102 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:103 =#
│                    if !(isabspath(mapping)) && !(isempty(mapping))
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:104 =#
│                        try
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:105 =#
│                            mapping = Base.SHA1(mapping)
│                        catch e
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:107 =#
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:107 =# @error "Invalid override in '$(override_file)': entry '$(name)' must map to an absolute path or SHA1 hash!"
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:108 =#
│                            rethrow()
│                        end
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:111 =#
│                    return mapping
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:113 =#
│                function parse_mapping(mapping::Dict, name::String)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:113 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:114 =#
│                    return Dict((k => parse_mapping(v, name) for (k, v) = mapping))
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:117 =#
│                for (k, mapping) = depot_override_dict
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:119 =#
│                    try
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:120 =#
│                        mapping = parse_mapping(mapping, k)
│                    catch
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:122 =#
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:122 =# @error "Invalid override in '$(override_file)': failed to parse entry `$(k)`"
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:123 =#
│                        continue
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:127 =#
│                    if mapping isa String || mapping isa SHA1
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:129 =#
│                        hash = try
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:130 =#
│                                Base.SHA1(hex2bytes(k))
│                            catch
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:132 =#
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:132 =# @error "Invalid override in '$(override_file)': Invalid SHA1 hash '$(k)'"
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:133 =#
│                                continue
│                            end
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:137 =#
│                        if mapping == ""
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:138 =#
│                            delete!(overrides[:hash], hash)
│                        else
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:140 =#
│                            (overrides[:hash])[hash] = mapping
│                        end
│                    elseif #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:142 =# mapping isa Dict
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:144 =#
│                        uuid = try
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:145 =#
│                                Base.UUID(k)
│                            catch
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:147 =#
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:147 =# @error "Invalid override in '$(override_file)': Invalid UUID '$(k)'"
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:148 =#
│                                continue
│                            end
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:152 =#
│                        if !(haskey(overrides[:UUID], uuid))
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:153 =#
│                            (overrides[:UUID])[uuid] = Dict{String, Union{String, SHA1}}()
│                        end
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:157 =#
│                        for name = keys(mapping)
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:159 =#
│                            if mapping[name] == ""
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:160 =#
│                                delete!((overrides[:UUID])[uuid], name)
│                            else
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:163 =#
│                                ((overrides[:UUID])[uuid])[name] = mapping[name]
│                            end
│                        end
│                    end
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:170 =#
│            ARTIFACT_OVERRIDES[] = overrides
│        end
│    end
│   exception =
│    UndefVarError: #parse_mapping#53 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:354
│   mod = Pkg.Artifacts
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:354 =#
│        function archive_artifact(hash::SHA1, tarball_path::String; honor_overrides::Bool = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:364 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:365 =#
│            if !honor_overrides
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:366 =#
│                if query_override(hash) !== nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:367 =#
│                    error("Will not archive an overridden artifact unless `honor_overrides` is set!")
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:371 =#
│            if !(artifact_exists(hash))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:372 =#
│                error("Unable to archive artifact $(bytes2hex(hash.bytes)): does not exist!")
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:375 =#
│            probe_platform_engines!()
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:378 =#
│            package(artifact_path(hash), tarball_path)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:381 =#
│            return open(tarball_path, "r") do io
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:382 =#
│                    return bytes2hex(sha256(io))
│                end
│        end
│    end
│   exception =
│    UndefVarError: #62#63 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:543
│   mod = Pkg.Artifacts
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:543 =#
│        function artifact_meta(name::String, artifact_dict::Dict, artifacts_toml::String; platform::Platform = platform_key_abi())
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:543 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:545 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:545 =# @nospecialize platform
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:546 =#
│            if !(haskey(artifact_dict, name))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:547 =#
│                return nothing
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:549 =#
│            meta = artifact_dict[name]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:552 =#
│            if meta isa Array
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:553 =#
│                dl_dict = Dict{Platform, Dict{String, Any}}((unpack_platform(x, name, artifacts_toml) => x for x = meta))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:554 =#
│                meta = select_platform(dl_dict, platform)
│            elseif #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:556 =# !(meta isa Dict)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:557 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:557 =# @error "Invalid artifacts file at $(artifacts_toml): artifact '$(name)' malformed, must be array or dict!"
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:558 =#
│                return nothing
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:562 =#
│            if meta !== nothing && !(haskey(meta, "git-tree-sha1"))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:563 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:563 =# @error "Invalid artifacts file at $(artifacts_toml): artifact '$(name)' contains no `git-tree-sha1`!"
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:564 =#
│                return nothing
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:568 =#
│            return meta
│        end
│    end
│   exception =
│    UndefVarError: #69#70 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:592
│   mod = Pkg.Artifacts
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:592 =#
│        function bind_artifact!(artifacts_toml::String, name::String, hash::SHA1; platform::Union{Platform, Nothing} = nothing, download_info::Union{Vector{<:Tuple}, Nothing} = nothing, lazy::Bool = false, force::Bool = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:614 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:620 =#
│            if isfile(artifacts_toml)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:621 =#
│                artifact_dict = parse_toml(artifacts_toml)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:623 =#
│                if !force && haskey(artifact_dict, name)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:624 =#
│                    meta = artifact_dict[name]
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:625 =#
│                    if !(meta isa Array)
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:626 =#
│                        error("Mapping for '$(name)' within $(artifacts_toml) already exists!")
│                    elseif #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:627 =# any((unpack_platform(x, name, artifacts_toml) for x = meta) .== Ref(platform))
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:628 =#
│                        error("Mapping for '$(name)'/$(triplet(platform)) within $(artifacts_toml) already exists!")
│                    end
│                end
│            else
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:632 =#
│                artifact_dict = Dict()
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:636 =#
│            meta = Dict{String, Any}("git-tree-sha1" => bytes2hex(hash.bytes))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:641 =#
│            if lazy
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:642 =#
│                meta["lazy"] = true
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:648 =#
│            if download_info !== nothing
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:649 =#
│                meta["download"] = [Dict("url" => dl[1], "sha256" => dl[2]) for dl = download_info]
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:656 =#
│            if platform === nothing
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:657 =#
│                artifact_dict[name] = meta
│            else
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:660 =#
│                pack_platform!(meta, platform)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:663 =#
│                if !(haskey(artifact_dict, name))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:664 =#
│                    artifact_dict[name] = [meta]
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:667 =#
│                    artifact_dict[name] = filter((x->begin
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:668 =#
│                                    unpack_platform(x, name, artifacts_toml) != platform
│                                end), artifact_dict[name])
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:671 =#
│                    push!(artifact_dict[name], meta)
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:676 =#
│            open(artifacts_toml, "w") do io
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:677 =#
│                TOML.print(io, artifact_dict, sorted = true)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:681 =#
│            write_env_usage(artifacts_toml, "artifact_usage.toml")
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:682 =#
│            return
│        end
│    end
│   exception =
│    UndefVarError: #73#77 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:686
│   mod = Pkg.Artifacts
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:686 =#
│        function unbind_artifact!(artifacts_toml::String, name::String; platform::Union{Platform, Nothing} = nothing)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:695 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:697 =#
│            artifact_dict = parse_toml(artifacts_toml)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:698 =#
│            if !(haskey(artifact_dict, name))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:699 =#
│                return
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:702 =#
│            if platform === nothing
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:703 =#
│                delete!(artifact_dict, name)
│            else
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:705 =#
│                artifact_dict[name] = filter((x->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:706 =#
│                                unpack_platform(x, name, artifacts_toml) != platform
│                            end), artifact_dict[name])
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:711 =#
│            open(artifacts_toml, "w") do io
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:712 =#
│                TOML.print(io, artifact_dict, sorted = true)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:714 =#
│            return
│        end
│    end
│   exception =
│    UndefVarError: #82#84 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:717
│   mod = Pkg.Artifacts
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:717 =#
│        function download_artifact(tree_hash::SHA1, tarball_url::String, tarball_hash::Union{String, Nothing} = nothing; verbose::Bool = false, quiet_download::Bool = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:726 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:733 =#
│            if artifact_exists(tree_hash)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:734 =#
│                return true
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:738 =#
│            probe_platform_engines!()
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:740 =#
│            if Sys.iswindows()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:742 =#
│                dest_dir = artifact_path(tree_hash; honor_overrides = false)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:749 =#
│                try
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:750 =#
│                    download_verify_unpack(tarball_url, tarball_hash, dest_dir, ignore_existence = true, verbose = verbose, quiet_download = quiet_download)
│                catch e
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:754 =#
│                    rm(dest_dir; force = true, recursive = true)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:756 =#
│                    if e isa InterruptException
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:757 =#
│                        rethrow(e)
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:759 =#
│                    return false
│                end
│            else
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:769 =#
│                calc_hash = try
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:770 =#
│                        create_artifact() do dir
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:771 =#
│                            download_verify_unpack(tarball_url, tarball_hash, dir, ignore_existence = true, verbose = verbose)
│                        end
│                    catch e
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:774 =#
│                        if e isa InterruptException
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:775 =#
│                            rethrow(e)
│                        end
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:778 =#
│                        return false
│                    end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:782 =#
│                if calc_hash.bytes != tree_hash.bytes
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:783 =#
│                    msg = "Tree Hash Mismatch!\n"
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:784 =#
│                    msg *= "  Expected git-tree-sha1:   $(bytes2hex(tree_hash.bytes))\n"
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:785 =#
│                    msg *= "  Calculated git-tree-sha1: $(bytes2hex(calc_hash.bytes))"
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:786 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:786 =# @error msg
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:787 =#
│                    return false
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:791 =#
│            return true
│        end
│    end
│   exception =
│    UndefVarError: #87#88 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:861
│   mod = Pkg.Artifacts
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:861 =#
│        function ensure_artifact_installed(name::String, meta::Dict, artifacts_toml::String; platform::Platform = platform_key_abi(), verbose::Bool = false, quiet_download::Bool = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:861 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:865 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:865 =# @nospecialize platform
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:866 =#
│            hash = SHA1(meta["git-tree-sha1"])
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:868 =#
│            if !(artifact_exists(hash))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:871 =#
│                if (server = pkg_server()) !== nothing
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:872 =#
│                    url = "$(server)/artifact/$(hash)"
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:873 =#
│                    download_success = with_show_download_info(name, quiet_download) do 
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:874 =#
│                            download_artifact(hash, url; verbose = verbose, quiet_download = quiet_download)
│                        end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:876 =#
│                    download_success && return artifact_path(hash)
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:881 =#
│                if !(haskey(meta, "download"))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:882 =#
│                    error("Cannot automatically install '$(name)'; no download section in '$(artifacts_toml)'")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:886 =#
│                for entry = meta["download"]
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:887 =#
│                    url = entry["url"]
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:888 =#
│                    tarball_hash = entry["sha256"]
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:889 =#
│                    download_success = with_show_download_info(name, quiet_download) do 
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:890 =#
│                            download_artifact(hash, url, tarball_hash; verbose = verbose, quiet_download = quiet_download)
│                        end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:892 =#
│                    download_success && return artifact_path(hash)
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:894 =#
│                error("Unable to automatically install '$(name)' from '$(artifacts_toml)'")
│            else
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Artifacts.jl:896 =#
│                return artifact_path(hash)
│            end
│        end
│    end
│   exception =
│    UndefVarError: #91#93 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:64
│   mod = Pkg.Operations
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:64 =#
│        function load_direct_deps(ctx::Context, pkgs::Vector{PackageSpec} = PackageSpec[]; preserve::PreserveLevel = PRESERVE_DIRECT)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:64 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:66 =#
│            pkgs = copy(pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:67 =#
│            for (name::String, uuid::UUID) = ctx.env.project.deps
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:68 =#
│                findfirst((pkg->begin
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:68 =#
│                                    pkg.uuid == uuid
│                                end), pkgs) === nothing || continue
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:69 =#
│                entry = manifest_info(ctx, uuid)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:70 =#
│                push!(pkgs, if entry === nothing
│                        PackageSpec(; uuid = uuid, name = name)
│                    else
│                        PackageSpec(; uuid = uuid, name = name, path = entry.path, repo = entry.repo, pinned = entry.pinned, tree_hash = entry.tree_hash, version = load_version(entry.version, isfixed(entry), preserve))
│                    end)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:82 =#
│            return pkgs
│        end
│    end
│   exception =
│    UndefVarError: #142#143 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:85
│   mod = Pkg.Operations
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:85 =#
│        function load_manifest_deps(ctx::Context, pkgs::Vector{PackageSpec} = PackageSpec[]; preserve::PreserveLevel = PRESERVE_ALL)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:85 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:87 =#
│            pkgs = copy(pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:88 =#
│            for (uuid, entry) = ctx.env.manifest
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:89 =#
│                findfirst((pkg->begin
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:89 =#
│                                    pkg.uuid == uuid
│                                end), pkgs) === nothing || continue
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:90 =#
│                push!(pkgs, PackageSpec(uuid = uuid, name = entry.name, path = entry.path, pinned = entry.pinned, repo = entry.repo, tree_hash = entry.tree_hash, version = load_version(entry.version, isfixed(entry), preserve)))
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:100 =#
│            return pkgs
│        end
│    end
│   exception =
│    UndefVarError: #145#146 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:140
│   mod = Pkg.Operations
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:140 =#
│        function load_versions(path::String; include_yanked = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:140 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:141 =#
│            toml = parse_toml(path, "Versions.toml"; fakeit = true)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:142 =#
│            return Dict{VersionNumber, SHA1}((VersionNumber(ver) => SHA1(info["git-tree-sha1"]) for (ver, info) = toml if !(get(info, "yanked", false)) || include_yanked))
│        end
│    end
│   exception =
│    UndefVarError: #149#151 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:595
│   mod = Pkg.Operations
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:595 =#
│        function download_artifacts(ctx::Context, pkgs::Vector{PackageSpec}; platform::Platform = platform_key_abi(), verbose::Bool = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:595 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:598 =#
│            pkg_roots = String[p for p = source_path.((ctx,), pkgs) if p !== nothing]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:599 =#
│            return download_artifacts(ctx, pkg_roots; platform = platform, verbose = verbose)
│        end
│    end
│   exception =
│    UndefVarError: #174#175 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:647
│   mod = Pkg.Operations
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:647 =#
│        function download_source(ctx::Context, pkgs::Vector{PackageSpec}, urls::Dict{UUID, Vector{String}}; readonly = true)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:647 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:649 =#
│            probe_platform_engines!()
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:650 =#
│            new_pkgs = PackageSpec[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:652 =#
│            pkgs_to_install = Tuple{PackageSpec, String}[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:653 =#
│            for pkg = pkgs
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:654 =#
│                path = source_path(ctx, pkg)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:655 =#
│                ispath(path) && continue
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:656 =#
│                push!(pkgs_to_install, (pkg, path))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:657 =#
│                push!(new_pkgs, pkg)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:660 =#
│            widths = [textwidth(pkg.name) for (pkg, _) = pkgs_to_install]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:661 =#
│            max_name = if length(widths) == 0
│                    0
│                else
│                    maximum(widths)
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:666 =#
│            jobs = Channel(ctx.num_concurrent_downloads)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:667 =#
│            results = Channel(ctx.num_concurrent_downloads)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:668 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:668 =# @async begin
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:669 =#
│                    for pkg = pkgs_to_install
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:670 =#
│                        put!(jobs, pkg)
│                    end
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:674 =#
│            for i = 1:ctx.num_concurrent_downloads
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:675 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:675 =# @async begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:676 =#
│                        for (pkg, path) = jobs
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:677 =#
│                            if ctx.use_libgit2_for_all_downloads
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:678 =#
│                                put!(results, (pkg, false, path))
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:679 =#
│                                continue
│                            end
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:681 =#
│                            try
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:682 =#
│                                archive_urls = Pair{String, Bool}[]
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:683 =#
│                                if (server = pkg_server()) !== nothing
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:684 =#
│                                    url = "$(server)/package/$(pkg.uuid)/$(pkg.tree_hash)"
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:685 =#
│                                    push!(archive_urls, url => true)
│                                end
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:687 =#
│                                for repo_url = urls[pkg.uuid]
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:688 =#
│                                    url = get_archive_url_for_version(repo_url, pkg.tree_hash)
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:689 =#
│                                    url !== nothing && push!(archive_urls, url => false)
│                                end
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:691 =#
│                                success = install_archive(archive_urls, pkg.tree_hash, path)
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:692 =#
│                                if success && readonly
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:693 =#
│                                    set_readonly(path)
│                                end
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:695 =#
│                                if ctx.use_only_tarballs_for_downloads && !success
│                                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:696 =#
│                                    pkgerror("failed to get tarball from $(urls[pkg.uuid])")
│                                end
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:698 =#
│                                put!(results, (pkg, success, path))
│                            catch err
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:700 =#
│                                put!(results, (pkg, err, catch_backtrace()))
│                            end
│                        end
│                    end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:706 =#
│            missed_packages = Tuple{PackageSpec, String}[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:707 =#
│            for i = 1:length(pkgs_to_install)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:708 =#
│                (pkg, exc_or_success, bt_or_path) = take!(results)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:709 =#
│                exc_or_success isa Exception && pkgerror("Error when installing package $(pkg.name):\n", sprint(Base.showerror, exc_or_success, bt_or_path))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:711 =#
│                (success, path) = (exc_or_success, bt_or_path)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:712 =#
│                if success
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:713 =#
│                    vstr = if pkg.version !== nothing
│                            "v$(pkg.version)"
│                        else
│                            "[$(h)]"
│                        end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:714 =#
│                    printpkgstyle(ctx, :Installed, string(rpad(pkg.name * " ", max_name + 2, "─"), " ", vstr))
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:716 =#
│                    push!(missed_packages, (pkg, path))
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:723 =#
│            for (pkg, path) = missed_packages
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:724 =#
│                uuid = pkg.uuid
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:725 =#
│                install_git(ctx, pkg.uuid, pkg.name, pkg.tree_hash, urls[uuid], pkg.version::VersionNumber, path)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:726 =#
│                readonly && set_readonly(path)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:727 =#
│                vstr = if pkg.version !== nothing
│                        "v$(pkg.version)"
│                    else
│                        "[$(h)]"
│                    end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:728 =#
│                printpkgstyle(ctx, :Installed, string(rpad(pkg.name * " ", max_name + 2, "─"), " ", vstr))
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:731 =#
│            return new_pkgs
│        end
│    end
│   exception =
│    UndefVarError: #180#183 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:843
│   mod = Pkg.Operations
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:843 =#
│        function build_versions(ctx::Context, uuids::Vector{UUID}; might_need_to_resolve = false, verbose = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:843 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:845 =#
│            builds = Tuple{UUID, String, String, VersionNumber}[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:846 =#
│            for uuid = uuids
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:847 =#
│                is_stdlib(uuid) && continue
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:848 =#
│                if Types.is_project_uuid(ctx, uuid)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:849 =#
│                    path = dirname(ctx.env.project_file)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:850 =#
│                    name = ctx.env.pkg.name
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:851 =#
│                    version = ctx.env.pkg.version
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:853 =#
│                    entry = manifest_info(ctx, uuid)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:854 =#
│                    name = entry.name
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:855 =#
│                    if entry.tree_hash !== nothing
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:856 =#
│                        path = find_installed(name, uuid, entry.tree_hash)
│                    elseif #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:857 =# entry.path !== nothing
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:858 =#
│                        path = project_rel_path(ctx, entry.path)
│                    else
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:860 =#
│                        pkgerror("Could not find either `git-tree-sha1` or `path` for package $(name)")
│                    end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:862 =#
│                    version = something(entry.version, v"0.0")
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:864 =#
│                ispath(path) || error("Build path for $(name) does not exist: $(path)")
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:865 =#
│                ispath(buildfile(path)) && push!(builds, (uuid, name, path, version))
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:868 =#
│            order = dependency_order_uuids(ctx, map(first, builds))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:869 =#
│            sort!(builds, by = (build->begin
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:869 =#
│                            order[first(build)]
│                        end))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:870 =#
│            max_name = if isempty(builds)
│                    0
│                else
│                    maximum(textwidth.([build[2] for build = builds]))
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:872 =#
│            for (uuid, name, source_path, version) = builds
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:873 =#
│                pkg = PackageSpec(; uuid = uuid, name = name, version = version)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:874 =#
│                build_file = buildfile(source_path)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:876 =#
│                build_project_override = if isfile(projectfile_path(builddir(source_path)))
│                        nothing
│                    else
│                        gen_target_project(ctx, pkg, source_path, "build")
│                    end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:880 =#
│                log_file = (splitext(build_file))[1] * ".log"
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:881 =#
│                printpkgstyle(ctx, :Building, rpad(name * " ", max_name + 1, "─") * "→ " * Types.pathrepr(log_file))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:884 =#
│                sandbox(ctx, pkg, source_path, builddir(source_path), build_project_override) do 
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:885 =#
│                    flush(stdout)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:886 =#
│                    ok = open(log_file, "w") do log
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:887 =#
│                            std = if verbose
│                                    ctx.io
│                                else
│                                    log
│                                end
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:888 =#
│                            success(pipeline(gen_build_code(buildfile(source_path)), stdout = std, stderr = std))
│                        end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:891 =#
│                    ok && return
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:892 =#
│                    n_lines = if isinteractive()
│                            100
│                        else
│                            5000
│                        end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:894 =#
│                    log_lines = readlines(log_file)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:895 =#
│                    log_show = join(log_lines[max(1, length(log_lines) - n_lines):end], '\n')
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:896 =#
│                    (full_log_at, last_lines) = if length(log_lines) > n_lines
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:898 =#
│                            ("\n\nFull log at $(log_file)", ", showing the last $(n_lines) of log")
│                        else
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:901 =#
│                            ("", "")
│                        end
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:903 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:903 =# @error "Error building `$(pkg.name)`$(last_lines): \n$(log_show)$(full_log_at)"
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:906 =#
│            return
│        end
│    end
│   exception =
│    UndefVarError: #196#200 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1079
│   mod = Pkg.Operations
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1079 =#
│        function add(ctx::Context, pkgs::Vector{PackageSpec}, new_git = UUID[]; preserve::PreserveLevel = PRESERVE_TIERED, platform::Platform = platform_key_abi())
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1079 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1081 =#
│            assert_can_add(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1083 =#
│            for (i, pkg) = pairs(pkgs)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1084 =#
│                entry = manifest_info(ctx, pkg.uuid)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1085 =#
│                pkgs[i] = update_package_add(ctx, pkg, entry, is_dep(ctx, pkg))
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1087 =#
│            foreach((pkg->begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1087 =#
│                        ctx.env.project.deps[pkg.name] = pkg.uuid
│                    end), pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1089 =#
│            pkgs = _resolve(ctx, pkgs, preserve)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1090 =#
│            update_manifest!(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1091 =#
│            new_apply = download_source(ctx, pkgs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1095 =#
│            download_artifacts(ctx, pkgs; platform = platform)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1097 =#
│            write_env(ctx.env)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1098 =#
│            show_update(ctx)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1099 =#
│            build_versions(ctx, union(UUID[pkg.uuid for pkg = new_apply], new_git))
│        end
│    end
│   exception =
│    UndefVarError: #211#212 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1462
│   mod = Pkg.Operations
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1462 =#
│        function test(ctx::Context, pkgs::Vector{PackageSpec}; coverage = false, julia_args::Cmd = ``, test_args::Cmd = ``, test_fn = nothing)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1462 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1465 =#
│            Pkg.instantiate(ctx)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1468 =#
│            for pkg = pkgs
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1469 =#
│                if Types.is_project_uuid(ctx, pkg.uuid)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1470 =#
│                    pkg.path = dirname(ctx.env.project_file)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471 =#
│                    pkg.version = ctx.env.pkg.version
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1473 =#
│                    update_package_test!(pkg, manifest_info(ctx, pkg.uuid))
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1478 =#
│            missing_runtests = String[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1479 =#
│            source_paths = String[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1480 =#
│            for pkg = pkgs
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1481 =#
│                sourcepath = project_rel_path(ctx, source_path(ctx, pkg))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1482 =#
│                !(isfile(testfile(sourcepath))) && push!(missing_runtests, pkg.name)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1483 =#
│                push!(source_paths, sourcepath)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1485 =#
│            if !(isempty(missing_runtests))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1486 =#
│                pkgerror(if length(missing_runtests) == 1
│                        "Package "
│                    else
│                        "Packages "
│                    end, join(missing_runtests, ", "), " did not provide a `test/runtests.jl` file")
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1492 =#
│            pkgs_errored = String[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1493 =#
│            for (pkg, source_path) = zip(pkgs, source_paths)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1495 =#
│                test_project_override = if isfile(projectfile_path(testdir(source_path)))
│                        nothing
│                    else
│                        gen_target_project(ctx, pkg, source_path, "test")
│                    end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1499 =#
│                printpkgstyle(ctx, :Testing, pkg.name)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1500 =#
│                sandbox(ctx, pkg, source_path, testdir(source_path), test_project_override) do 
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1501 =#
│                    test_fn !== nothing && test_fn()
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1502 =#
│                    status(Context(); mode = PKGMODE_COMBINED)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1503 =#
│                    flush(stdout)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1504 =#
│                    try
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1505 =#
│                        run(gen_test_code(testfile(source_path); coverage = coverage, julia_args = julia_args, test_args = test_args))
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1506 =#
│                        printpkgstyle(ctx, :Testing, pkg.name * " tests passed ")
│                    catch err
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1508 =#
│                        push!(pkgs_errored, pkg.name)
│                    end
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1514 =#
│            if !(isempty(pkgs_errored))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1515 =#
│                pkgerror(if length(pkgs_errored) == 1
│                        "Package "
│                    else
│                        "Packages "
│                    end, join(pkgs_errored, ", "), " errored during testing")
│            end
│        end
│    end
│   exception =
│    UndefVarError: #234#235 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1587
│   mod = Pkg.Operations
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1587 =#
│        function diff_array(old_ctx::Union{Context, Nothing}, new_ctx::Context; manifest = true)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1587 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1588 =#
│            function index_pkgs(pkgs, uuid)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1588 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1589 =#
│                idx = findfirst((pkg->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1589 =#
│                                pkg.uuid == uuid
│                            end), pkgs)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1590 =#
│                return if idx === nothing
│                        nothing
│                    else
│                        pkgs[idx]
│                    end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1593 =#
│            new = if manifest
│                    load_manifest_deps(new_ctx)
│                else
│                    load_direct_deps(new_ctx)
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1594 =#
│            if old_ctx === nothing
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1595 =#
│                return [(pkg.uuid, nothing, pkg) for pkg = new]
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1597 =#
│            old = if manifest
│                    load_manifest_deps(old_ctx)
│                else
│                    load_direct_deps(old_ctx)
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1599 =#
│            all_uuids = union([pkg.uuid for pkg = old], [pkg.uuid for pkg = new])
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1600 =#
│            return [(uuid, index_pkgs(old, uuid), index_pkgs(new, uuid)) for uuid = all_uuids]
│        end
│    end
│   exception =
│    UndefVarError: #238#244 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1605
│   mod = Pkg.Operations
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1605 =#
│        function print_status(ctx::Context, old_ctx::Union{Nothing, Context}, header::Symbol, uuids::Vector, names::Vector; manifest = true, diff = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1605 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1607 =#
│            not_installed_indicator = sprint(((io, args)->begin
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1607 =#
│                            printstyled(io, args...; color = :red)
│                        end), "→", context = ctx.io)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1608 =#
│            ctx.io = something(ctx.status_io, ctx.io)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1609 =#
│            filter = !(isempty(uuids)) || !(isempty(names))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1611 =#
│            xs = diff_array(old_ctx, ctx; manifest = manifest)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1613 =#
│            if isempty(xs) && !diff
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1614 =#
│                printpkgstyle(ctx, header, "$(pathrepr(if manifest
│            ctx.env.manifest_file
│        else
│            ctx.env.project_file
│        end)) (empty " * if manifest
│                            "manifest"
│                        else
│                            "project"
│                        end * ")", true)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1616 =#
│                return nothing
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1618 =#
│            xs = if !diff
│                    xs
│                else
│                    [(id, old, new) for (id, old, new) = xs if old != new]
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1619 =#
│            if isempty(xs)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1620 =#
│                printpkgstyle(ctx, Symbol("No Changes"), "to $(pathrepr(if manifest
│            ctx.env.manifest_file
│        else
│            ctx.env.project_file
│        end))", true)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1621 =#
│                return nothing
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1623 =#
│            xs = if !filter
│                    xs
│                else
│                    [(id, old, new) for (id, old, new) = xs if id in uuids || (something(new, old)).name in names]
│                end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1624 =#
│            if isempty(xs)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1625 =#
│                printpkgstyle(ctx, Symbol("No Matches"), "in $(if diff
│        "diff for "
│    else
│        ""
│    end)$(pathrepr(if manifest
│            ctx.env.manifest_file
│        else
│            ctx.env.project_file
│        end))", true)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1627 =#
│                return nothing
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1630 =#
│            printpkgstyle(ctx, header, pathrepr(if manifest
│                        ctx.env.manifest_file
│                    else
│                        ctx.env.project_file
│                    end), true)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1631 =#
│            xs = sort!(xs, by = (x->begin
│                                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1631 =#
│                                (is_stdlib(x[1]), (something(x[3], x[2])).name, x[1])
│                            end))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1632 =#
│            all_packages_downloaded = true
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1633 =#
│            for (uuid, old, new) = xs
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1634 =#
│                pkg_downloaded = !(is_instantiated(new)) || is_package_downloaded(ctx, new)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1635 =#
│                all_packages_downloaded &= pkg_downloaded
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1636 =#
│                print(ctx.io, if pkg_downloaded
│                        " "
│                    else
│                        not_installed_indicator
│                    end)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1637 =#
│                printstyled(ctx.io, " [", (string(uuid))[1:8], "] "; color = :light_black)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1638 =#
│                if diff
│                    print_diff(ctx, old, new)
│                else
│                    print_single(ctx, new)
│                end
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1639 =#
│                println(ctx.io)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1641 =#
│            if !all_packages_downloaded
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1642 =#
│                printpkgstyle(ctx, :Info, "packages marked with $(not_installed_indicator) not downloaded, use `instantiate` to download", true)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1644 =#
│            return nothing
│        end
│    end
│   exception =
│    UndefVarError: #250#256 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1672
│   mod = Pkg.Operations
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1672 =#
│        function status(ctx::Context, pkgs::Vector{PackageSpec} = PackageSpec[]; header = nothing, mode::PackageMode = PKGMODE_PROJECT, git_diff::Bool = false, env_diff = nothing)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1672 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1674 =#
│            ctx.io == Base.devnull && return
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1676 =#
│            if header === nothing && ctx.env.pkg !== nothing
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1677 =#
│                printstyled(ctx.io, "Project "; color = Base.info_color(), bold = true)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1678 =#
│                println(ctx.io, ctx.env.pkg.name, " v", ctx.env.pkg.version)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1681 =#
│            old_ctx = nothing
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1682 =#
│            if git_diff
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1683 =#
│                project_dir = dirname(ctx.env.project_file)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1684 =#
│                if !(ispath(joinpath(project_dir, ".git")))
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1685 =#
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1685 =# @warn "diff option only available for environments in git repositories, ignoring."
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1687 =#
│                    old_ctx = git_head_context(ctx, project_dir)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1688 =#
│                    if old_ctx === nothing
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1689 =#
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1689 =# @warn "could not read project from HEAD, displaying absolute status instead."
│                    end
│                end
│            elseif #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1692 =# env_diff !== nothing
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1693 =#
│                old_ctx = Context(; env = env_diff)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1696 =#
│            filter_uuids = [pkg.uuid for pkg = pkgs if pkg.uuid !== nothing]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1697 =#
│            filter_names = [pkg.name for pkg = pkgs if pkg.name !== nothing]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1698 =#
│            diff = old_ctx !== nothing
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1699 =#
│            header = something(header, if diff
│                        :Diff
│                    else
│                        :Status
│                    end)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1700 =#
│            if mode == PKGMODE_PROJECT || mode == PKGMODE_COMBINED
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1701 =#
│                print_status(ctx, old_ctx, header, filter_uuids, filter_names; manifest = false, diff = diff)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1703 =#
│            if mode == PKGMODE_MANIFEST || mode == PKGMODE_COMBINED
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1704 =#
│                print_status(ctx, old_ctx, header, filter_uuids, filter_names; diff = diff)
│            end
│        end
│    end
│   exception =
│    UndefVarError: #265#269 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:25
│   mod = Pkg.Registry
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:25 =#
│        add(regs::Vector{String}; kwargs...) = begin
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:25 =#
│                add([RegistrySpec(name = name) for name = regs]; kwargs...)
│            end
│    end
│   exception =
│    UndefVarError: #25#26 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:48
│   mod = Pkg.Registry
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:48 =#
│        rm(regs::Vector{String}; kwargs...) = begin
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:48 =#
│                rm([RegistrySpec(name = name) for name = regs]; kwargs...)
│            end
│    end
│   exception =
│    UndefVarError: #31#32 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:74
│   mod = Pkg.Registry
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:74 =#
│        update(regs::Vector{String}; kwargs...) = begin
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:74 =#
│                update([RegistrySpec(name = name) for name = regs]; kwargs...)
│            end
│    end
│   exception =
│    UndefVarError: #37#38 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:98
│   mod = Pkg.Registry
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:98 =#
│        function status(ctx::Context; io::IO = stdout, as_api = false, kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:98 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:99 =#
│            Context!(ctx; io = io, kwargs...)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:100 =#
│            regs = Types.collect_registries()
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:101 =#
│            regs = unique((r->begin
│                            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:101 =#
│                            r.uuid
│                        end), regs)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:102 =#
│            as_api && return regs
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:103 =#
│            Types.printpkgstyle(ctx, Symbol("Registry Status"), "")
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:104 =#
│            if isempty(regs)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:105 =#
│                println(ctx.io, "  (no registries found)")
│            else
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:107 =#
│                for reg = regs
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:108 =#
│                    printstyled(ctx.io, " [$((string(reg.uuid))[1:8])]"; color = :light_black)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:109 =#
│                    print(ctx.io, " $(reg.name)")
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:110 =#
│                    reg.url === nothing || print(ctx.io, " ($(reg.url))")
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Registry.jl:111 =#
│                    println(ctx.io)
│                end
│            end
│        end
│    end
│   exception =
│    UndefVarError: #43#44 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:237
│   mod = Pkg.REPLMode
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:237 =#
│        function core_parse(words::Vector{QString}; only_cmd = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:237 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:238 =#
│            statement = Statement()
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:239 =#
│            word = nothing
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:240 =#
│            function next_word!()
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:240 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:241 =#
│                isempty(words) && return false
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:242 =#
│                word = popfirst!(words)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:243 =#
│                return true
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:247 =#
│            next_word!() || return (statement, if word === nothing
│                            nothing
│                        else
│                            word.raw
│                        end)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:250 =#
│            if word.raw[1] == '?' && !(word.isquoted)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:251 =#
│                length(word.raw) > 1 && pushfirst!(words, QString(word.raw[2:end], false))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:252 =#
│                word = QString("?", false)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:255 =#
│            super = get(SPECS[], word.raw, nothing)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:256 =#
│            if super !== nothing
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:257 =#
│                statement.super = word.raw
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:258 =#
│                next_word!() || return (statement, word.raw)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:259 =#
│                command = get(super, word.raw, nothing)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:260 =#
│                command !== nothing || return (statement, word.raw)
│            else
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:262 =#
│                super = (SPECS[])["package"]
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:263 =#
│                command = get(super, word.raw, nothing)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:264 =#
│                command !== nothing || return (statement, word.raw)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:266 =#
│            statement.spec = command
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:268 =#
│            only_cmd && return (statement, word.raw)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:270 =#
│            next_word!() || return (statement, word.raw)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:273 =#
│            while is_opt(word.raw)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:274 =#
│                push!(statement.options, word.raw)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:275 =#
│                next_word!() || return (statement, word.raw)
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:278 =#
│            pushfirst!(words, word)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:279 =#
│            statement.arguments = words
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/REPLMode.jl:280 =#
│            return (statement, (words[end]).raw)
│        end
│    end
│   exception =
│    UndefVarError: #next_word!#88 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:38
│   mod = Pkg.REPLMode
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:38 =#
│        function parse_package_args(args::Vector{PackageToken}; add_or_dev = false)::Vector{PackageSpec}
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:38 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:40 =#
│            function apply_modifier!(pkg::PackageSpec, args::Vector{PackageToken})
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:40 =#
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:41 =#
│                (isempty(args) || args[1] isa PackageIdentifier) && return
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:42 =#
│                modifier = popfirst!(args)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:43 =#
│                if modifier isa VersionRange
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:44 =#
│                    pkg.version = VersionSpec(modifier)
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:46 =#
│                    pkg.repo.rev = modifier.rev
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:50 =#
│            pkgs = PackageSpec[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:51 =#
│            while !(isempty(args))
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:52 =#
│                arg = popfirst!(args)
│                #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:53 =#
│                if arg isa PackageIdentifier
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:54 =#
│                    pkg = parse_package_identifier(arg; add_or_develop = add_or_dev)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:55 =#
│                    apply_modifier!(pkg, args)
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:56 =#
│                    push!(pkgs, pkg)
│                else
│                    #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:59 =#
│                    if arg isa VersionRange
│                        pkgerror("Package name/uuid must precede version specifier `@$(arg)`.")
│                    else
│                        pkgerror("Package name/uuid must precede revision specifier `#$(arg.rev)`.")
│                    end
│                end
│            end
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:64 =#
│            return pkgs
│        end
│    end
│   exception =
│    UndefVarError: #apply_modifier!#137 not defined
│    Stacktrace:
│     [1] step_expr!(::Any, ::Frame, ::Any, ::Bool) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:535
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:98
│   mod = Pkg.REPLMode
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:98 =#
│        function parse_registry(raw_args::Vector{QString}, options; add = false)
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:98 =#
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:99 =#
│            regs = RegistrySpec[]
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:100 =#
│            foreach((x->begin
│                        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:100 =#
│                        push!(regs, parse_registry(x; add = add))
│                    end), unwrap(raw_args))
│            #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/argument_parsers.jl:101 =#
│            return regs
│        end
│    end
│   exception =
│    UndefVarError: #140#141 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Error: evaluation error starting at /opt/julia/share/julia/stdlib/v1.5/Pkg/src/REPLMode/command_declarations.jl:1
│   mod = Pkg.REPLMode
│   ex =
│    quote
│        #= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/command_declarations.jl:1 =#
│        compound_declarations = ["package" => CommandDeclaration[[:name => "test", :api => API.test, :should_splat => false, :arg_count => (0 => Inf), :arg_parser => parse_package, :option_spec => OptionDeclaration[[:name => "coverage", :api => (:coverage => true)]], :completions => complete_installed_packages, :description => "run tests for packages", :help => md"    test [--coverage] pkg[=uuid] ...
│    
│    Run the tests for package `pkg`. This is done by running the file `test/runtests.jl`
│    in the package directory. The option `--coverage` can be used to run the tests with
│    coverage enabled. The `startup.jl` file is disabled during testing unless
│    julia is started with `--startup-file=yes`.
│    "], [:name => "help", :short_name => "?", :api => identity, :arg_count => (0 => Inf), :arg_parser => ((x, y)->(#= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/command_declarations.jl:25 =#
│                                        x)), :completions => complete_help, :description => "show this message", :help => md"    [?|help]
│    
│    List available commands along with short descriptions.
│    
│        [?|help] cmd
│    
│    If `cmd` is a partial command, display help for all subcommands.
│    If `cmd` is a full command, display help for `cmd`.
│    "], [:name => "instantiate", :api => API.instantiate, :option_spec => OptionDeclaration[[:name => "project", :short_name => "p", :api => (:manifest => false)], [:name => "manifest", :short_name => "m", :api => (:manifest => true)], [:name => "verbose", :short_name => "v", :api => (:verbose => true)]], :description => "downloads all the dependencies for the project", :help => md"    instantiate [-v|--verbose]
│        instantiate [-v|--verbose] [-m|--manifest]
│        instantiate [-v|--verbose] [-p|--project]
│    
│    Download all the dependencies for the current project at the version given by the project's manifest.
│    If no manifest exists or the `--project` option is given, resolve and download the dependencies compatible with the project.
│    "], [:name => "remove", :short_name => "rm", :api => API.rm, :should_splat => false, :arg_count => (1 => Inf), :arg_parser => parse_package, :option_spec => OptionDeclaration[[:name => "project", :short_name => "p", :api => (:mode => PKGMODE_PROJECT)], [:name => "manifest", :short_name => "m", :api => (:mode => PKGMODE_MANIFEST)]], :completions => complete_installed_packages, :description => "remove packages from project or manifest", :help => md"    [rm|remove] [-p|--project] pkg[=uuid] ...
│    
│    Remove package `pkg` from the project file. Since the name `pkg` can only
│    refer to one package in a project this is unambiguous, but you can specify
│    a `uuid` anyway, and the command is ignored, with a warning, if package name
│    and UUID do not match. When a package is removed from the project file, it
│    may still remain in the manifest if it is required by some other package in
│    the project. Project mode operation is the default, so passing `-p` or
│    `--project` is optional unless it is preceded by the `-m` or `--manifest`
│    options at some earlier point.
│    
│        [rm|remove] [-m|--manifest] pkg[=uuid] ...
│    
│    Remove package `pkg` from the manifest file. If the name `pkg` refers to
│    multiple packages in the manifest, `uuid` disambiguates it. Removing a package
│    from the manifest forces the removal of all packages that depend on it, as well
│    as any no-longer-necessary manifest packages due to project package removals.
│    "], [:name => "add", :api => API.add, :should_splat => false, :arg_count => (1 => Inf), :arg_parser => ((x, y)->(#= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/command_declarations.jl:89 =#
│                                        parse_package(x, y; add_or_dev = true))), :option_spec => OptionDeclaration[[:name => "preserve", :takes_arg => true, :api => (:preserve => do_preserve)]], :completions => complete_add_dev, :description => "add packages to project", :help => md"    add [--preserve=<opt>] pkg[=uuid] [@version] [#rev] ...
│    
│    Add package `pkg` to the current project file. If `pkg` could refer to
│    multiple different packages, specifying `uuid` allows you to disambiguate.
│    `@version` optionally allows specifying which versions of packages to add. Version specifications
│    are of the form `@1`, `@1.2` or `@1.2.3`, allowing any version with a prefix
│    that matches, or ranges thereof, such as `@1.2-3.4.5`. A git revision can be
│    specified by `#branch` or `#commit`.
│    
│    If a local path is used as an argument to `add`, the path needs to be a git repository.
│    The project will then track that git repository just like it would track a remote repository online.
│    
│    `Pkg` resolves the set of packages in your environment using a tiered approach.
│    The `--preserve` command line option allows you to key into a specific tier in the resolve algorithm.
│    The following table describes the command line arguments to `--preserve` (in order of strictness).
│    
│    | Argument | Description                                                                         |
│    |:---------|:------------------------------------------------------------------------------------|
│    | `all`    | Preserve the state of all existing dependencies (including recursive dependencies)  |
│    | `direct` | Preserve the state of all existing direct dependencies                              |
│    | `semver` | Preserve semver-compatible versions of direct dependencies                          |
│    | `none`   | Do not attempt to preserve any version information                                  |
│    | `tiered` | Use the tier which will preserve the most version information (this is the default) |
│    
│    
│    **Examples**
│    ```
│    pkg> add Example
│    pkg> add --preserve=all Example
│    pkg> add Example@0.5
│    pkg> add Example#master
│    pkg> add Example#c37b675
│    pkg> add https://github.com/JuliaLang/Example.jl#master
│    pkg> add git@github.com:JuliaLang/Example.jl.git
│    pkg> add Example=7876af07-990d-54b4-ab0e-23690620f79a
│    ```
│    "], [:name => "develop", :short_name => "dev", :api => API.develop, :should_splat => false, :arg_count => (1 => Inf), :arg_parser => ((x, y)->(#= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/command_declarations.jl:138 =#
│                                        parse_package(x, y; add_or_dev = true))), :option_spec => OptionDeclaration[[:name => "strict", :api => (:strict => true)], [:name => "local", :api => (:shared => false)], [:name => "shared", :api => (:shared => true)]], :completions => complete_add_dev, :description => "clone the full package repo locally for development", :help => md"    [dev|develop] [--shared|--local] pkg[=uuid] ...
│    
│    Make a package available for development. If `pkg` is an existing local path, that path will be recorded in
│    the manifest and used. Otherwise, a full git clone of `pkg` is made. The location of the clone is
│    controlled by the `--shared` (default) and `--local` arguments. The `--shared` location defaults to
│    `~/.julia/dev`, but can be controlled with the `JULIA_PKG_DEVDIR` environment variable. When `--local` is given,
│    the clone is placed in a `dev` folder in the current project.
│    This operation is undone by `free`.
│    
│    **Examples**
│    ```jl
│    pkg> develop Example
│    pkg> develop https://github.com/JuliaLang/Example.jl
│    pkg> develop ~/mypackages/Example
│    pkg> develop --local Example
│    ```
│    "], [:name => "free", :api => API.free, :should_splat => false, :arg_count => (1 => Inf), :arg_parser => parse_package, :completions => complete_installed_packages, :description => "undoes a `pin`, `develop`, or stops tracking a repo", :help => md"    free pkg[=uuid] ...
│    
│    Free a pinned package `pkg`, which allows it to be upgraded or downgraded again. If the package is checked out (see `help develop`) then this command
│    makes the package no longer being checked out.
│    "], [:name => "pin", :api => API.pin, :should_splat => false, :arg_count => (1 => Inf), :arg_parser => parse_package, :completions => complete_installed_packages, :description => "pins the version of packages", :help => md"    pin pkg[=uuid] ...
│    
│    Pin packages to given versions, or the current version if no version is specified. A pinned package has its version fixed and will not be upgraded or downgraded.
│    A pinned package has the symbol `⚲` next to its version in the status list.
│    
│    **Examples**
│    ```
│    pkg> pin Example
│    pkg> pin Example@0.5.0
│    pkg> pin Example=7876af07-990d-54b4-ab0e-23690620f79a@0.5.0
│    ```
│    "], [:name => "build", :api => API.build, :should_splat => false, :arg_count => (0 => Inf), :arg_parser => parse_package, :option_spec => OptionDeclaration[[:name => "verbose", :short_name => "v", :api => (:verbose => true)]], :completions => complete_installed_packages, :description => "run the build script for packages", :help => md"    build [-v|--verbose] pkg[=uuid] ...
│    
│    Run the build script in `deps/build.jl` for `pkg` and all of its dependencies in depth-first recursive order.
│    If no packages are given, run the build scripts for all packages in the manifest.
│    The `-v`/`--verbose` option redirects build output to `stdout`/`stderr` instead of the `build.log` file.
│    The `startup.jl` file is disabled during building unless julia is started with `--startup-file=yes`.
│    "], [:name => "resolve", :api => API.resolve, :description => "resolves to update the manifest from changes in dependencies of developed packages", :help => md"    resolve
│    
│    Resolve the project i.e. run package resolution and update the Manifest. This is useful in case the dependencies of developed
│    packages have changed causing the current Manifest to be out of sync.
│    "], [:name => "activate", :api => API.activate, :arg_count => (0 => 1), :arg_parser => parse_activate, :option_spec => OptionDeclaration[[:name => "shared", :api => (:shared => true)], [:name => "temp", :api => (:temp => true)]], :completions => complete_activate, :description => "set the primary environment the package manager manipulates", :help => md"    activate
│        activate [--shared|--temp] [path]
│    
│    Activate the environment at the given `path`, or the home project environment if no `path` is specified.
│    The active environment is the environment that is modified by executing package commands.
│    When the option `--shared` is given, `path` will be assumed to be a directory name and searched for in the
│    `environments` folders of the depots in the depot stack. In case no such environment exists in any of the depots,
│    it will be placed in the first depot of the stack.
│    Use the `temp` option to create temporary environments. This should be useful for experimenting with packages.
│    "], [:name => "update", :short_name => "up", :api => API.up, :should_splat => false, :arg_count => (0 => Inf), :arg_parser => parse_package, :option_spec => OptionDeclaration[[:name => "project", :short_name => "p", :api => (:mode => PKGMODE_PROJECT)], [:name => "manifest", :short_name => "m", :api => (:mode => PKGMODE_MANIFEST)], [:name => "major", :api => (:level => UPLEVEL_MAJOR)], [:name => "minor", :api => (:level => UPLEVEL_MINOR)], [:name => "patch", :api => (:level => UPLEVEL_PATCH)], [:name => "fixed", :api => (:level => UPLEVEL_FIXED)]], :completions => complete_installed_packages, :description => "update packages in manifest", :help => md"    [up|update] [-p|--project]  [opts] pkg[=uuid] [@version] ...
│        [up|update] [-m|--manifest] [opts] pkg[=uuid] [@version] ...
│    
│        opts: --major | --minor | --patch | --fixed
│    
│    Update `pkg` within the constraints of the indicated version
│    specifications. These specifications are of the form `@1`, `@1.2` or `@1.2.3`, allowing
│    any version with a prefix that matches, or ranges thereof, such as `@1.2-3.4.5`.
│    In `--project` mode, package specifications only match project packages, while
│    in `manifest` mode they match any manifest package. Bound level options force
│    the following packages to be upgraded only within the current major, minor,
│    patch version; if the `--fixed` upgrade level is given, then the following
│    packages will not be upgraded at all.
│    "], [:name => "generate", :api => API.generate, :arg_count => (1 => 1), :arg_parser => ((x, y)->(#= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/command_declarations.jl:279 =#
│                                        map(expanduser, unwrap(x)))), :description => "generate files for a new project", :help => md"    generate pkgname
│    
│    Create a project called `pkgname` in the current folder.
│    "], [:name => "precompile", :api => API.precompile, :description => "precompile all the project dependencies", :help => md"    precompile
│    
│    Precompile all the dependencies of the project by running `import` on all of them in a new process.
│    The `startup.jl` file is disabled during precompilation unless julia is started with `--startup-file=yes`.
│    "], [:name => "status", :short_name => "st", :api => API.status, :should_splat => false, :arg_count => (0 => Inf), :arg_parser => parse_package, :option_spec => OptionDeclaration[[:name => "project", :short_name => "p", :api => (:mode => PKGMODE_PROJECT)], [:name => "manifest", :short_name => "m", :api => (:mode => PKGMODE_MANIFEST)], [:name => "diff", :short_name => "d", :api => (:diff => true)]], :completions => complete_installed_packages, :description => "summarize contents of and changes to environment", :help => md"    [st|status] [-d|--diff] [pkgs...]
│        [st|status] [-d|--diff] [-p|--project] [pkgs...]
│        [st|status] [-d|--diff] [-m|--manifest] [pkgs...]
│    
│    Show the status of the current environment. In `--project` mode (default), the
│    status of the project file is summarized. In `--manifest` mode the output also
│    includes the recursive dependencies of added packages given in the manifest.
│    If there are any packages listed as arguments the output will be limited to those packages.
│    The `--diff` option will, if the environment is in a git repository, limit
│    the output to the difference as compared to the last git commit.
│    
│    !!! compat \"Julia 1.1\"
│        `pkg> status` with package arguments requires at least Julia 1.1.
│    
│    !!! compat \"Julia 1.3\"
│        The `--diff` option requires Julia 1.3. In earlier versions `--diff`
│        is the default for environments in git repositories.
│    "], [:name => "gc", :api => API.gc, :option_spec => OptionDeclaration[[:name => "all", :api => (:collect_delay => Hour(0))]], :description => "garbage collect packages not used for a significant time", :help => md"    gc [--all]
│    
│    Free disk space by garbage collecting packages not used for a significant time.
│    The `--all` option will garbage collect all packages which can not be immediately
│    reached from any existing project.
│    "], [:name => "undo", :api => API.undo, :description => "undo the latest change to the active project", :help => md"    undo
│    
│    Undoes the latest change to the active project.
│    "], [:name => "redo", :api => API.redo, :description => "redo the latest change to the active project", :help => md"    redo
│    
│    Redoes the changes from the latest [`undo`](@ref).
│    "]], "registry" => CommandDeclaration[[:name => "add", :api => Registry.add, :should_splat => false, :arg_count => (1 => Inf), :arg_parser => ((x, y)->(#= /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/REPLMode/command_declarations.jl:364 =#
│                                        parse_registry(x, y; add = true))), :description => "add package registries", :help => md"    registry add reg...
│    
│    Add package registries `reg...` to the user depot.
│    
│    !!! compat \"Julia 1.1\"
│        Pkg's registry handling requires at least Julia 1.1.
│    
│    **Examples**
│    ```
│    pkg> registry add General
│    pkg> registry add https://www.my-custom-registry.com
│    ```
│    "], [:name => "remove", :short_name => "rm", :api => Registry.rm, :should_splat => false, :arg_count => (1 => Inf), :arg_parser => parse_registry, :description => "remove package registries", :help => md"    registry [rm|remove] reg...
│    
│    Remove package registries `reg...`.
│    
│    !!! compat \"Julia 1.1\"
│        Pkg's registry handling requires at least Julia 1.1.
│    
│    **Examples**
│    ```
│    pkg> registry [rm|remove] General
│    ```
│    "], [:name => "update", :short_name => "up", :api => Registry.update, :should_splat => false, :arg_count => (0 => Inf), :arg_parser => parse_registry, :description => "update package registries", :help => md"    registry [up|update]
│        registry [up|update] reg...
│    
│    Update package registries `reg...`. If no registries are specified
│    all registries will be updated.
│    
│    !!! compat \"Julia 1.1\"
│        Pkg's registry handling requires at least Julia 1.1.
│    
│    **Examples**
│    ```
│    pkg> registry up
│    pkg> registry up General
│    ```
│    "], [:name => "status", :short_name => "st", :api => Registry.status, :description => "information about installed registries", :help => md"    registry [st|status]
│    
│    Display information about installed registries.
│    
│    !!! compat \"Julia 1.1\"
│        Pkg's registry handling requires at least Julia 1.1.
│    
│    **Examples**
│    ```
│    pkg> registry status
│    ```
│    "]]]
│    end
│   exception =
│    UndefVarError: #143#148 not defined
│    Stacktrace:
│     [1] macro expansion at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/interpret.jl:60 [inlined]
│     [2] getargs(::Array{Any,1}, ::Frame) at /home/pkgeval/.julia/packages/JuliaInterpreter/u3T76/src/builtins.jl:8
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/lowered.jl:106
┌ Warning: Tuple{typeof(Pkg.API.add),Pkg.Types.Context,Array{Pkg.Types.PackageSpec,1}} was not found
└ @ Revise ~/.julia/packages/Revise/WkyNB/src/Revise.jl:919
Recipes: Test Failed at /home/pkgeval/.julia/packages/Revise/WkyNB/test/runtests.jl:2464
  Expression: definition(first(methods(Pkg.API.add))) isa Expr
   Evaluated: nothing isa Expr
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/Revise/WkyNB/test/runtests.jl:2464
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/Revise/WkyNB/test/runtests.jl:2435
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/Revise/WkyNB/test/runtests.jl:79
┌ Warning: skipping Core.Compiler tests due to lack of git repo
└ @ Main ~/.julia/packages/Revise/WkyNB/test/runtests.jl:2486
┌ Warning: REPL tests skipped
└ @ Main ~/.julia/packages/Revise/WkyNB/test/runtests.jl:2529
Test Summary:                             | Pass  Fail  Broken  Total
Revise                                    |  644     1       1    646
  PkgData                                 |    1                    1
  Package contents                        |    1                    1
  LineSkipping                            |    8                    8
  Equality and hashing                    |    5                    5
  Parse errors                            |    4                    4
  Signature extraction                    |    4                    4
  Comparison and line numbering           |   75             1     76
  Display                                 |    7                    7
  File paths                              |  209                  209
  Base & stdlib file paths                |    5                    5
  Recursive types (issue #417)            |    1                    1
  Cross-module extension                  |    6                    6
  @__FILE__                               |    2                    2
  Module docstring                        |    6                    6
  Changing docstring                      |    3                    3
  Undef in docstrings                     |   75                   75
  Macro docstrings (issue #309)           |    4                    4
  Changing @inline annotations            |   16                   16
  Revising macros                         |    7                    7
  More arg-modifying macros               |    4                    4
  Line numbers                            |    5                    5
  Line numbers in backtraces and warnings |    6                    6
  New submodules                          |    3                    3
  Timing (issue #341)                     |    3                    3
  Method deletion                         |   60                   60
  revise_file_now                         |    4                    4
  Evaled toplevel                         |    4                    4
  Revision errors                         |   37                   37
  Retry on InterruptException             |   17                   17
  get_def                                 |    7                    7
  Pkg exclusion                           |    3                    3
  Manual track                            |   18                   18
  Auto-track user scripts                 |    4                    4
  Distributed                             |   15                   15
  Git                                     |    2                    2
  Recipes                                 |   10     1             11
  CodeTracking #48                        |    1                    1
  Methods at REPL                         |                     No tests
  baremodule                              |    2                    2
ERROR: LoadError: Some tests did not pass: 644 passed, 1 failed, 0 errored, 1 broken.
in expression starting at /home/pkgeval/.julia/packages/Revise/WkyNB/test/runtests.jl:78
ERROR: Package Revise errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1515
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:16
