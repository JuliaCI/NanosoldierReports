Julia Version 1.5.0-DEV.719
Commit 5a71af311a (2020-04-29 17:39 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Compat ────────────────────── v3.9.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed DataStructures ────────────── v0.17.15
  Installed StatsBase ─────────────────── v0.32.2
  Installed MLDataPattern ─────────────── v0.5.3
  Installed DataFrames ────────────────── v0.20.2
  Installed Parsers ───────────────────── v1.0.2
  Installed LearnBase ─────────────────── v0.2.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed JSON ──────────────────────── v0.21.0
  Installed Tables ────────────────────── v1.0.4
  Installed MappedArrays ──────────────── v0.2.2
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed SimilaritySearch ──────────── v0.3.19
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MLDataUtils ───────────────── v0.5.1
  Installed PooledArrays ──────────────── v0.5.3
  Installed OrderedCollections ────────── v1.1.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed TableTraits ───────────────── v1.0.0
  Installed DataAPI ───────────────────── v1.3.0
  Installed Missings ──────────────────── v0.4.3
  Installed Reexport ──────────────────── v0.2.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.9.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.15
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.2
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_W9pJZQ/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_W9pJZQ/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.9.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.15
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.2
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.932025450070699
[ Info: 0.8307796732584636
[ Info: 0.5533601232866446
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3319149543593327
mean(cdnet.distances) = 0.3834138692667087
mean(crand.distances) = 0.3359016065299511
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.212890625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.212890625,"f1":null,"seconds":0.0009011309593915939,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.4765625,"distances_sum":624.0162811367242}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.212890625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.212890625,"f1":null,"seconds":0.0009011309593915939,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.4765625,"distances_sum":624.0162811367242}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5263671875, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5263671875,"f1":null,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":6.9140625,"distances_sum":1189.0643181224502}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8557843198468207,"seconds":6.6366046667099e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.2421875,"distances_sum":1856.6041716936577}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8557843198468207,"seconds":6.6366046667099e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.2421875,"distances_sum":1856.6041716936577}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9088057775557784,"seconds":7.063150405883789e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.546875,"distances_sum":2169.9861349217367}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9479655760905767,"seconds":6.9551169872283936e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.765625,"distances_sum":2502.726635078491}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9425538003663012,"seconds":7.146969437599182e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.8046875,"distances_sum":2411.154627510351}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9479655760905767,"seconds":6.9551169872283936e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.765625,"distances_sum":2502.726635078491}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9779761904761908,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.96875,"distances_sum":2682.3441836555603}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9697573260073262,"seconds":6.858259439468384e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.9296875,"distances_sum":2623.0165490343793}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9510676823176826,"seconds":6.580725312232971e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.8671875,"distances_sum":2513.11589922935}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596955128205132,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.875,"distances_sum":2558.6250018379974}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9496768856143862,"seconds":6.319954991340637e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.7734375,"distances_sum":2516.841876348137}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9518658424908428,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.8125,"distances_sum":2545.007023410847}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9779761904761908,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.96875,"distances_sum":2682.3441836555603}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9779761904761908,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":2.037733793258667e-6,"evaluations":8.96875,"distances_sum":2682.3441836555603}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.150390625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.150390625,"f1":null,"seconds":3.11434268951416e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":4.2578125,"distances_sum":419.45844872110933}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7932331557331563,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.5546875,"distances_sum":1765.117403703717}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.29296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.29296875,"f1":null,"seconds":3.3583492040634155e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":4.625,"distances_sum":778.8520457293292}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7119140625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7119140625,"f1":0.8216216075591085,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.671875,"distances_sum":1926.8612991062575}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7119140625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7119140625,"f1":0.8216216075591085,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.671875,"distances_sum":1926.8612991062575}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9230254120879129,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.6328125,"distances_sum":2421.0834238117022}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9324893856143863,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.65625,"distances_sum":2482.4250884718026}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8830591283716293,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.5234375,"distances_sum":2142.129056325686}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8913321053946062,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.484375,"distances_sum":2233.2772292942063}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9324893856143863,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.65625,"distances_sum":2482.4250884718026}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9743131868131872,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8984375,"distances_sum":2713.720541486726}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9585622710622714,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7734375,"distances_sum":2634.1604106300056}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9723443223443227,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8515625,"distances_sum":2736.7190213053163}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9474187271062277,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.6953125,"distances_sum":2574.889283757211}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9545615842490848,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8359375,"distances_sum":2582.708195309648}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9743131868131872,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8984375,"distances_sum":2713.720541486726}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9743131868131872,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8984375,"distances_sum":2713.720541486726}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8661997724497733,"seconds":5.044043064117432e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.4765625,"distances_sum":1896.2254685927865}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.43359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.43359375,"f1":null,"seconds":3.4458935260772705e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.21875,"distances_sum":904.5405110194565}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8654970029970037,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5546875,"distances_sum":1904.6523651500456}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8654970029970037,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5546875,"distances_sum":1904.6523651500456}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.934014943389944,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7734375,"distances_sum":2307.731697724829}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.945762050449551,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6875,"distances_sum":2398.377158991883}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9675251831501833,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.953125,"distances_sum":2523.5414746746997}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9573717948717955,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8671875,"distances_sum":2474.837601585718}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9356684981684985,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7109375,"distances_sum":2341.4761238576652}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9127721237096244,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2145.545541321418}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9030479936729947,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.765625,"distances_sum":2121.638622135422}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9675251831501833,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.953125,"distances_sum":2523.5414746746997}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.97265625, conf: {"ssize":6,"bsize":13}, perf: {"precision":1.0,"recall":0.97265625,"f1":0.9848958333333336,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9765625,"distances_sum":2671.419305357421}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786458333333337,"seconds":6.441026926040649e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.953125,"distances_sum":2627.2978148753327}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9729567307692311,"seconds":6.22868537902832e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9453125,"distances_sum":2584.7903723627915}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.97265625,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9848958333333336,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9765625,"distances_sum":2671.419305357421}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.97265625,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9848958333333336,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9765625,"distances_sum":2671.419305357421}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8358761030636038,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.890625,"distances_sum":1915.0679180553968}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.197265625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.197265625,"f1":null,"seconds":3.205612301826477e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.140625,"distances_sum":541.4789649474116}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.353515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.353515625,"f1":null,"seconds":3.4924596548080444e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.046875,"distances_sum":865.909147337655}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7314453125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7314453125,"f1":0.8358761030636038,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.890625,"distances_sum":1915.0679180553968}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8897467116217127,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.3203125,"distances_sum":2226.3255783949376}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9422223609723617,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.734375,"distances_sum":2538.6894041883115}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9413034881784885,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.578125,"distances_sum":2527.9391480577588}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9422223609723617,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.734375,"distances_sum":2538.6894041883115}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9796703296703299,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.953125,"distances_sum":2759.2460190282186}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9753720238095241,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2739.493891509475}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9570944680319686,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8125,"distances_sum":2636.138452159118}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9796703296703299,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.953125,"distances_sum":2759.2460190282186}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9796703296703299,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.953125,"distances_sum":2759.2460190282186}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3544921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3544921875,"f1":null,"seconds":4.0065497159957886e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.78125,"distances_sum":900.1906818756935}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.162109375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.162109375,"f1":null,"seconds":3.846362233161926e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":4.9765625,"distances_sum":441.0875249615398}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4892578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4892578125,"f1":0.6395257520257522,"seconds":4.295259714126587e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.875,"distances_sum":1228.937059987865}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4892578125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.4892578125,"f1":0.6395257520257522,"seconds":4.295259714126587e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.875,"distances_sum":1228.937059987865}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9201928280053288,"seconds":6.0070306062698364e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8671875,"distances_sum":2316.7760382773067}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.640625, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.640625,"f1":0.7678821178821187,"seconds":4.937872290611267e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.75,"distances_sum":1632.1656612235843}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.8314950674325682,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.171875,"distances_sum":1873.4020939588793}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8642578125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8642578125,"f1":0.9201928280053288,"seconds":6.0070306062698364e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8671875,"distances_sum":2316.7760382773067}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9414554195804203,"seconds":6.4391642808914185e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.84375,"distances_sum":2499.1170476889592}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9602564102564106,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9140625,"distances_sum":2615.846861814465}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9222615925740931,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.71875,"distances_sum":2355.429808428404}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9602564102564106,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9140625,"distances_sum":2615.846861814465}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9602564102564106,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9140625,"distances_sum":2615.846861814465}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8422572219447226,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.84375,"distances_sum":1897.7434169643234}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5673828125,"f1":null,"seconds":4.431232810020447e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":6.59375,"distances_sum":1341.715842619726}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7412109375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.8422572219447226,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.84375,"distances_sum":1897.7434169643234}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9583962912087916,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.78125,"distances_sum":2670.457950248834}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9587511446886452,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.7734375,"distances_sum":2656.7710433295038}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8696719946719954,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.15625,"distances_sum":2046.976745811042}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9226133241758248,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.390625,"distances_sum":2455.255920387798}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9583962912087916,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.78125,"distances_sum":2670.457950248834}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.975875686813187,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.890625,"distances_sum":2788.5016660766023}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619848901098904,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.84375,"distances_sum":2665.845006384052}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9684523809523817,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8671875,"distances_sum":2724.628211307618}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9713198260073264,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8203125,"distances_sum":2770.2263844734753}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9642914377289381,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.796875,"distances_sum":2683.759597207998}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.975875686813187,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.890625,"distances_sum":2788.5016660766023}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.975875686813187,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.890625,"distances_sum":2788.5016660766023}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6873430389055394,"seconds":4.155561327934265e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.4765625,"distances_sum":1023.2701193864572}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5458984375,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5458984375,"f1":0.6873430389055394,"seconds":4.155561327934265e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.4765625,"distances_sum":1023.2701193864572}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8821210039960048,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.9140625,"distances_sum":1709.821214435721}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8017578125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.8017578125,"f1":0.8821210039960048,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.9140625,"distances_sum":1709.821214435721}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9364125457875465,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.703125,"distances_sum":2034.2166320414674}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9364125457875465,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.703125,"distances_sum":2034.2166320414674}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.888671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9364125457875465,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.703125,"distances_sum":2034.2166320414674}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8583822427572436,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.796875,"distances_sum":1653.747050915224}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.42578125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.42578125,"f1":null,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.34375,"distances_sum":796.2709010386211}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8583822427572436,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.796875,"distances_sum":1653.747050915224}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9603308150183155,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8671875,"distances_sum":2235.551251027111}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9302197802197807,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6796875,"distances_sum":2036.500771101277}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9315075549450558,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7265625,"distances_sum":2042.809542869938}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9208879662004668,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.1015625,"distances_sum":1990.281146744819}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9603308150183155,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8671875,"distances_sum":2235.551251027111}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9676911630036635,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8828125,"distances_sum":2282.9367344754464}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9699805402930407,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2300.8074875279954}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9651270604395608,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8515625,"distances_sum":2241.9614072271156}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9699805402930407,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2300.8074875279954}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9699805402930407,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2300.8074875279954}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.3837890625,"f1":0.5375888000888002,"seconds":3.516674041748047e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.796875,"distances_sum":709.6141185489726}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8119222791097799,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.6640625,"distances_sum":1461.9442280921564}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8481537559662568,"seconds":4.867091774940491e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.9453125,"distances_sum":1593.313444965015}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8481537559662568,"seconds":4.867091774940491e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.9453125,"distances_sum":1593.313444965015}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9218635531135537,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.59375,"distances_sum":2011.2440676832455}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":null,"recall":0.83203125,"f1":null,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.09375,"distances_sum":1912.38119660718}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8628491300366311,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0234375,"distances_sum":1663.6161633844267}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.86328125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.86328125,"f1":0.9218635531135537,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.59375,"distances_sum":2011.2440676832455}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9496737637362642,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7265625,"distances_sum":2173.5956258805836}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9617216117216121,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8359375,"distances_sum":2270.481870511531}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519574175824181,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.78125,"distances_sum":2204.1138544965215}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9354567307692312,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6484375,"distances_sum":2117.600305147392}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9320429570429578,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7109375,"distances_sum":2064.71561054543}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9587625915750925,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8203125,"distances_sum":2230.446078635816}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9617216117216121,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8359375,"distances_sum":2270.481870511531}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9617216117216121,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8359375,"distances_sum":2270.481870511531}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.396484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.396484375,"f1":null,"seconds":3.997236490249634e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.375,"distances_sum":895.1921611678146}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.396484375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.396484375,"f1":null,"seconds":3.997236490249634e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.375,"distances_sum":895.1921611678146}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8740936147186155,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.953125,"distances_sum":2034.4472754223268}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8772924991674999,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.9765625,"distances_sum":2054.204992609473}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8758475899100909,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.0,"distances_sum":2029.6423370642428}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.794921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.794921875,"f1":0.8772924991674999,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.9765625,"distances_sum":2054.204992609473}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9515682234432239,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7109375,"distances_sum":2620.351413519345}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9634901556776562,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8125,"distances_sum":2697.22983921448}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9480368589743597,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7578125,"distances_sum":2546.9393076899223}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9084993131868139,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.453125,"distances_sum":2269.38490698218}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9634901556776562,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8125,"distances_sum":2697.22983921448}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9634901556776562,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8125,"distances_sum":2697.22983921448}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":3.298744559288025e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":4.9375,"distances_sum":579.8897055459848}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8042322261072269,"seconds":4.740431904792786e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.6640625,"distances_sum":1726.4174452362895}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.8042322261072269,"seconds":4.740431904792786e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.6640625,"distances_sum":1726.4174452362895}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9065850815850824,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.3125,"distances_sum":2336.1382340815344}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9000915750915759,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.3359375,"distances_sum":2279.562244603418}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8887482309357319,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.2109375,"distances_sum":2168.8293655392845}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8068787115662123,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.765625,"distances_sum":1748.853360712815}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.83984375,"f1":0.9065850815850824,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.3125,"distances_sum":2336.1382340815344}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646978021978025,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7734375,"distances_sum":2744.5642985138675}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9432348901098901,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.609375,"distances_sum":2621.692337123865}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":11,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.909114843489844,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.328125,"distances_sum":2321.5724907003387}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.943704212454213,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6484375,"distances_sum":2584.7793118867107}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9490899725274733,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.671875,"distances_sum":2635.9942921275956}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9646978021978025,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7734375,"distances_sum":2744.5642985138675}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9646978021978025,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7734375,"distances_sum":2744.5642985138675}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8692770770895779,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.1171875,"distances_sum":2066.166164379041}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1806640625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1806640625,"f1":null,"seconds":3.084540367126465e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":4.9453125,"distances_sum":508.5612434129408}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8692770770895779,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.1171875,"distances_sum":2066.166164379041}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9290324259074265,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.453125,"distances_sum":2466.7680424459336}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9543898809523816,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.6953125,"distances_sum":2653.1673900502806}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9543898809523816,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.6953125,"distances_sum":2653.1673900502806}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9664262820512824,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.796875,"distances_sum":2743.4974202951935}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9664262820512824,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.796875,"distances_sum":2743.4974202951935}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9664262820512824,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.796875,"distances_sum":2743.4974202951935}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8662837162837171,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.140625,"distances_sum":2027.819722789447}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8662837162837171,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.140625,"distances_sum":2027.819722789447}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9466059981684986,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6796875,"distances_sum":2593.9911034266474}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9334223068598074,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.421875,"distances_sum":2475.4574271543843}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9466059981684986,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6796875,"distances_sum":2593.9911034266474}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274733,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2746.1276841490317}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9716346153846157,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.84375,"distances_sum":2742.144498102258}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9716918498168503,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.84375,"distances_sum":2735.0259531928587}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9668383699633704,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8046875,"distances_sum":2712.9605110743664}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274733,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2746.1276841490317}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274733,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2746.1276841490317}}, n: 9
mean(cfft.distances) = 0.32619415425509984
mean(cdnet.distances) = 0.4020496159759349
mean(crand.distances) = 0.3541392059964953
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8622222222222223
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.851111111111111
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9088888888888889
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8755555555555555
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8822222222222221
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8977777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8644444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9155555555555557
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9377777777777778
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333332
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9133333333333334
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8466666666666667
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9177777777777777
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 3, 2, 3, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 3, 2, 3, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 3, 2, 3, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 3, 2, 3, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 3, 2, 3, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 3, 2, 3, 3]
acc = 0.9266666666666666
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 3, 2, 3, 3]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.5979145904382069] ***
*** center 1: selecting labels [1] (freq >= 1) [from [44, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.24289619429253725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24289619429253725, 0.20865454884699067] ***
*** starting iteration: 2; err: [Inf, 0.24289619429253725, 0.20865454884699067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24289619429253725, 0.20865454884699067, 0.19745594155576146] ***
*** starting iteration: 3; err: [Inf, 0.24289619429253725, 0.20865454884699067, 0.19745594155576146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24289619429253725, 0.20865454884699067, 0.19745594155576146, 0.19503602145978058] ***
*** starting iteration: 4; err: [Inf, 0.24289619429253725, 0.20865454884699067, 0.19745594155576146, 0.19503602145978058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24289619429253725, 0.20865454884699067, 0.19745594155576146, 0.19503602145978058, 0.19434844709753812] ***
*** finished computation of 7 references, err: [Inf, 0.24289619429253725, 0.20865454884699067, 0.19745594155576146, 0.19503602145978058, 0.19434844709753812] ***
*** center 1: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [59, 1, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [55, 9, 0]]
** centroid: 3, normalized-entropy: 0.5858732928619204, [(1, 55), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [13, 100, 0]]
** centroid: 4, normalized-entropy: 0.5149459065452171, [(1, 13), (2, 100)]
*** center 5: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [131, 30, 0]]
** centroid: 6, normalized-entropy: 0.6937421509738619, [(1, 131), (2, 30)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 103, 23]]
** centroid: 7, normalized-entropy: 0.68560151644291, [(2, 103), (3, 23)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21294341939941294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21294341939941294, 0.19293508896565084] ***
*** starting iteration: 2; err: [Inf, 0.21294341939941294, 0.19293508896565084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21294341939941294, 0.19293508896565084, 0.1906135829229807] ***
*** starting iteration: 3; err: [Inf, 0.21294341939941294, 0.19293508896565084, 0.1906135829229807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21294341939941294, 0.19293508896565084, 0.1906135829229807, 0.1900726927045001] ***
*** finished computation of 7 references, err: [Inf, 0.21294341939941294, 0.19293508896565084, 0.1906135829229807, 0.1900726927045001] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [40, 58, 0]]
** centroid: 1, normalized-entropy: 0.9755259511264975, [(1, 40), (2, 58)]
*** center 2: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [88, 11, 0]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(1, 88), (2, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 50, 19]]
** centroid: 5, normalized-entropy: 0.849054424254048, [(2, 50), (3, 19)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 110, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28185459026334475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28185459026334475, 0.21611758053716065] ***
*** starting iteration: 2; err: [Inf, 0.28185459026334475, 0.21611758053716065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28185459026334475, 0.21611758053716065, 0.19195007238986678] ***
*** starting iteration: 3; err: [Inf, 0.28185459026334475, 0.21611758053716065, 0.19195007238986678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28185459026334475, 0.21611758053716065, 0.19195007238986678, 0.1855454462918284] ***
*** starting iteration: 4; err: [Inf, 0.28185459026334475, 0.21611758053716065, 0.19195007238986678, 0.1855454462918284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28185459026334475, 0.21611758053716065, 0.19195007238986678, 0.1855454462918284, 0.18310116866053358] ***
*** starting iteration: 5; err: [Inf, 0.28185459026334475, 0.21611758053716065, 0.19195007238986678, 0.1855454462918284, 0.18310116866053358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28185459026334475, 0.21611758053716065, 0.19195007238986678, 0.1855454462918284, 0.18310116866053358, 0.1818056200837613] ***
*** starting iteration: 6; err: [Inf, 0.28185459026334475, 0.21611758053716065, 0.19195007238986678, 0.1855454462918284, 0.18310116866053358, 0.1818056200837613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28185459026334475, 0.21611758053716065, 0.19195007238986678, 0.1855454462918284, 0.18310116866053358, 0.1818056200837613, 0.1814600294113796] ***
*** finished computation of 7 references, err: [Inf, 0.28185459026334475, 0.21611758053716065, 0.19195007238986678, 0.1855454462918284, 0.18310116866053358, 0.1818056200837613, 0.1814600294113796] ***
*** center 1: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [65, 29, 0]]
** centroid: 2, normalized-entropy: 0.8914467590654126, [(1, 65), (2, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [5, 74, 0]]
** centroid: 4, normalized-entropy: 0.340373285759646, [(1, 5), (2, 74)]
*** center 5: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [20, 80, 0]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(1, 20), (2, 80)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 67, 23]]
** centroid: 7, normalized-entropy: 0.8199653102187632, [(2, 67), (3, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2510854411084001] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2510854411084001, 0.20682922094066097] ***
*** finished computation of 7 references, err: [Inf, 0.2510854411084001, 0.20682922094066097] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [93, 154, 19]]
** centroid: 1, normalized-entropy: 0.7940407694129233, [(1, 93), (2, 154), (3, 19)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [25, 89, 4]]
** centroid: 2, normalized-entropy: 0.5973257917987389, [(1, 25), (2, 89), (3, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [151, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.20333857769254773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20333857769254773, 0.1622534066661557] ***
*** finished computation of 7 references, err: [Inf, 0.20333857769254773, 0.1622534066661557] ***
*** center 1: selecting labels [1] (freq >= 2) [from [141, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 53, 0]]
** centroid: 2, normalized-entropy: 0.9696055994904408, [(1, 35), (2, 53)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [52, 27, 0]]
** centroid: 3, normalized-entropy: 0.9265044456232997, [(1, 52), (2, 27)]
*** center 4: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 100, 20]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 100), (3, 20)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [86, 37, 0]]
** centroid: 6, normalized-entropy: 0.8822824449111785, [(1, 86), (2, 37)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [72, 12, 0]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(1, 72), (2, 12)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2513638960321139] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2513638960321139, 0.16261864293609624] ***
*** finished computation of 7 references, err: [Inf, 0.2513638960321139, 0.16261864293609624] ***
*** center 1: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [65, 5, 0]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(1, 65), (2, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 129, 23]]
** centroid: 4, normalized-entropy: 0.6131232967402233, [(2, 129), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [106, 58, 0]]
** centroid: 5, normalized-entropy: 0.9372930661967526, [(1, 106), (2, 58)]
*** center 6: selecting labels [1] (freq >= 2) [from [43, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [46, 58, 0]]
** centroid: 7, normalized-entropy: 0.990374836448575, [(1, 46), (2, 58)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.272968407356748] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.272968407356748, 0.24178293596130904] ***
*** starting iteration: 2; err: [Inf, 0.272968407356748, 0.24178293596130904] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.272968407356748, 0.24178293596130904, 0.23624675677160736] ***
*** starting iteration: 3; err: [Inf, 0.272968407356748, 0.24178293596130904, 0.23624675677160736] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.272968407356748, 0.24178293596130904, 0.23624675677160736, 0.23478355999286468] ***
*** starting iteration: 4; err: [Inf, 0.272968407356748, 0.24178293596130904, 0.23624675677160736, 0.23478355999286468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.272968407356748, 0.24178293596130904, 0.23624675677160736, 0.23478355999286468, 0.23417517550669992] ***
*** finished computation of 3 references, err: [Inf, 0.272968407356748, 0.24178293596130904, 0.23624675677160736, 0.23478355999286468, 0.23417517550669992] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [151, 65, 0]]
** centroid: 1, normalized-entropy: 0.8824198008443183, [(1, 151), (2, 65)]
*** center 2: selecting labels [1] (freq >= 2) [from [198, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [51, 178, 23]]
** centroid: 3, normalized-entropy: 0.7167020812290895, [(1, 51), (2, 178), (3, 23)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2671568147542103] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2671568147542103, 0.23824203030291435] ***
*** starting iteration: 2; err: [Inf, 0.2671568147542103, 0.23824203030291435] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2671568147542103, 0.23824203030291435, 0.23393899524469916] ***
*** starting iteration: 3; err: [Inf, 0.2671568147542103, 0.23824203030291435, 0.23393899524469916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2671568147542103, 0.23824203030291435, 0.23393899524469916, 0.23308754263367543] ***
*** finished computation of 3 references, err: [Inf, 0.2671568147542103, 0.23824203030291435, 0.23393899524469916, 0.23308754263367543] ***
*** center 1: selecting labels [1] (freq >= 2) [from [216, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [52, 166, 20]]
** centroid: 2, normalized-entropy: 0.7206613646889326, [(1, 52), (2, 166), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [150, 63, 0]]
** centroid: 3, normalized-entropy: 0.8760643678555242, [(1, 150), (2, 63)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.328534206674983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.328534206674983, 0.23699397825799334] ***
*** starting iteration: 2; err: [Inf, 0.328534206674983, 0.23699397825799334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.328534206674983, 0.23699397825799334, 0.23070537894294002] ***
*** starting iteration: 3; err: [Inf, 0.328534206674983, 0.23699397825799334, 0.23070537894294002] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.328534206674983, 0.23699397825799334, 0.23070537894294002, 0.2297709279203567] ***
*** finished computation of 3 references, err: [Inf, 0.328534206674983, 0.23699397825799334, 0.23070537894294002, 0.2297709279203567] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [136, 76, 0]]
** centroid: 1, normalized-entropy: 0.9414231081869789, [(1, 136), (2, 76)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [66, 174, 23]]
** centroid: 2, normalized-entropy: 0.7585349100908266, [(1, 66), (2, 174), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [192, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2930751324284475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2930751324284475, 0.21976348195314496] ***
*** finished computation of 7 references, err: [Inf, 0.2930751324284475, 0.21976348195314496] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [54, 10, 0]]
** centroid: 1, normalized-entropy: 0.625262405223423, [(1, 54), (2, 10)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [71, 102, 1]]
** centroid: 2, normalized-entropy: 0.9767124451747305, [(1, 71), (2, 102)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [27, 8, 0]]
** centroid: 3, normalized-entropy: 0.775512658133148, [(1, 27), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [35, 5, 0]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(1, 35), (2, 5)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 116, 22]]
** centroid: 5, normalized-entropy: 0.6329208984823799, [(2, 116), (3, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [128, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [85, 2, 0]]
** centroid: 7, normalized-entropy: 0.15790637433488164, [(1, 85), (2, 2)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.29148077828156155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29148077828156155, 0.21059148661607968] ***
*** finished computation of 7 references, err: [Inf, 0.29148077828156155, 0.21059148661607968] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [72, 12, 0]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(1, 72), (2, 12)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [19, 77, 12]]
** centroid: 2, normalized-entropy: 0.7200492462871346, [(1, 19), (2, 77), (3, 12)]
*** center 3: selecting labels [1] (freq >= 2) [from [124, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [80, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [31, 65, 0]]
** centroid: 5, normalized-entropy: 0.9075250687540451, [(1, 31), (2, 65)]
*** center 6: selecting labels [1, 2, 3] (freq >= 2) [from [18, 74, 8]]
** centroid: 6, normalized-entropy: 0.6676966795543566, [(1, 18), (2, 74), (3, 8)]
*** center 7: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3001033207708816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3001033207708816, 0.23594496817351773] ***
*** finished computation of 7 references, err: [Inf, 0.3001033207708816, 0.23594496817351773] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 153, 23]]
** centroid: 1, normalized-entropy: 0.5593051134027119, [(2, 153), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [146, 20, 0]]
** centroid: 2, normalized-entropy: 0.530744566923854, [(1, 146), (2, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [153, 8, 0]]
** centroid: 3, normalized-entropy: 0.28507625741911563, [(1, 153), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [52, 5, 0]]
** centroid: 4, normalized-entropy: 0.4288109647301171, [(1, 52), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [7, 63, 0]]
** centroid: 5, normalized-entropy: 0.46899559358928133, [(1, 7), (2, 63)]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [21, 1, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2120065713502668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2120065713502668, 0.1629034402576071] ***
*** finished computation of 7 references, err: [Inf, 0.2120065713502668, 0.1629034402576071] ***
*** center 1: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [72, 78, 0]]
** centroid: 2, normalized-entropy: 0.998845535995202, [(1, 72), (2, 78)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [37, 56, 0]]
** centroid: 3, normalized-entropy: 0.9696787018231177, [(1, 37), (2, 56)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 99, 23]]
** centroid: 4, normalized-entropy: 0.6983747934875366, [(2, 99), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [74, 9, 0]]
** centroid: 5, normalized-entropy: 0.4951734787020683, [(1, 74), (2, 9)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [77, 1, 0]]
** centroid: 6, normalized-entropy: 0.098959095355743, [(1, 77), (2, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2721623419986471] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2721623419986471, 0.17537744094741933] ***
*** finished computation of 7 references, err: [Inf, 0.2721623419986471, 0.17537744094741933] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [10, 132, 20]]
** centroid: 1, normalized-entropy: 0.5434479699665088, [(1, 10), (2, 132), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [41, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [91, 29, 0]]
** centroid: 4, normalized-entropy: 0.797800919635344, [(1, 91), (2, 29)]
*** center 5: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [54, 59, 0]]
** centroid: 6, normalized-entropy: 0.998587236493277, [(1, 54), (2, 59)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [46, 9, 0]]
** centroid: 7, normalized-entropy: 0.6429383500409613, [(1, 46), (2, 9)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.28491421760804464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28491421760804464, 0.18736870525086458] ***
*** finished computation of 7 references, err: [Inf, 0.28491421760804464, 0.18736870525086458] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 157, 23]]
** centroid: 1, normalized-entropy: 0.5513120820780261, [(2, 157), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [14, 36, 0]]
** centroid: 4, normalized-entropy: 0.8554508105601307, [(1, 14), (2, 36)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [167, 47, 0]]
** centroid: 5, normalized-entropy: 0.7594843094291112, [(1, 167), (2, 47)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [88, 10, 0]]
** centroid: 6, normalized-entropy: 0.47543164626872053, [(1, 88), (2, 10)]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3513031499112492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3513031499112492, 0.22923795023776433] ***
*** starting iteration: 2; err: [Inf, 0.3513031499112492, 0.22923795023776433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3513031499112492, 0.22923795023776433, 0.2143127487548669] ***
*** starting iteration: 3; err: [Inf, 0.3513031499112492, 0.22923795023776433, 0.2143127487548669] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3513031499112492, 0.22923795023776433, 0.2143127487548669, 0.20231907127715937] ***
*** finished computation of 7 references, err: [Inf, 0.3513031499112492, 0.22923795023776433, 0.2143127487548669, 0.20231907127715937] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 58, 23]]
** centroid: 1, normalized-entropy: 0.8607781176165941, [(2, 58), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [62, 84, 0]]
** centroid: 2, normalized-entropy: 0.9835585673909616, [(1, 62), (2, 84)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [10, 82, 0]]
** centroid: 3, normalized-entropy: 0.49596907206183377, [(1, 10), (2, 82)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [60, 8, 0]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(1, 60), (2, 8)]
*** center 5: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [58, 11, 0]]
** centroid: 6, normalized-entropy: 0.6329208984823799, [(1, 58), (2, 11)]
*** center 7: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26688521282225175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26688521282225175, 0.20771296046300047] ***
*** starting iteration: 2; err: [Inf, 0.26688521282225175, 0.20771296046300047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26688521282225175, 0.20771296046300047, 0.19821749026070293] ***
*** starting iteration: 3; err: [Inf, 0.26688521282225175, 0.20771296046300047, 0.19821749026070293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26688521282225175, 0.20771296046300047, 0.19821749026070293, 0.192568213310277] ***
*** finished computation of 7 references, err: [Inf, 0.26688521282225175, 0.20771296046300047, 0.19821749026070293, 0.192568213310277] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 105, 20]]
** centroid: 1, normalized-entropy: 0.634309554640566, [(2, 105), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [21, 54, 0]]
** centroid: 2, normalized-entropy: 0.8554508105601307, [(1, 21), (2, 54)]
*** center 3: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [96, 41, 0]]
** centroid: 4, normalized-entropy: 0.8803968110001441, [(1, 96), (2, 41)]
*** center 5: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [66, 29, 0]]
** centroid: 7, normalized-entropy: 0.8876297058429742, [(1, 66), (2, 29)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3676509597454628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3676509597454628, 0.25427757382024263] ***
*** starting iteration: 2; err: [Inf, 0.3676509597454628, 0.25427757382024263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3676509597454628, 0.25427757382024263, 0.21707992910406088] ***
*** starting iteration: 3; err: [Inf, 0.3676509597454628, 0.25427757382024263, 0.21707992910406088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3676509597454628, 0.25427757382024263, 0.21707992910406088, 0.20113278737618426] ***
*** finished computation of 7 references, err: [Inf, 0.3676509597454628, 0.25427757382024263, 0.21707992910406088, 0.20113278737618426] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 126, 23]]
** centroid: 1, normalized-entropy: 0.6206504308628276, [(2, 126), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [145, 29, 0]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(1, 145), (2, 29)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [58, 26, 0]]
** centroid: 6, normalized-entropy: 0.8926230133850988, [(1, 58), (2, 26)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [8, 68, 0]]
** centroid: 7, normalized-entropy: 0.48546076074591343, [(1, 8), (2, 68)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39794734136782467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39794734136782467, 0.35725117063949685] ***
*** starting iteration: 2; err: [Inf, 0.39794734136782467, 0.35725117063949685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39794734136782467, 0.35725117063949685, 0.34468480710684135] ***
*** starting iteration: 3; err: [Inf, 0.39794734136782467, 0.35725117063949685, 0.34468480710684135] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39794734136782467, 0.35725117063949685, 0.34468480710684135, 0.3368379755012758] ***
*** starting iteration: 4; err: [Inf, 0.39794734136782467, 0.35725117063949685, 0.34468480710684135, 0.3368379755012758] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39794734136782467, 0.35725117063949685, 0.34468480710684135, 0.3368379755012758, 0.33226437015632343] ***
*** starting iteration: 5; err: [Inf, 0.39794734136782467, 0.35725117063949685, 0.34468480710684135, 0.3368379755012758, 0.33226437015632343] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39794734136782467, 0.35725117063949685, 0.34468480710684135, 0.3368379755012758, 0.33226437015632343, 0.29603178689519205] ***
*** starting iteration: 6; err: [Inf, 0.39794734136782467, 0.35725117063949685, 0.34468480710684135, 0.3368379755012758, 0.33226437015632343, 0.29603178689519205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39794734136782467, 0.35725117063949685, 0.34468480710684135, 0.3368379755012758, 0.33226437015632343, 0.29603178689519205, 0.2937437129506209] ***
*** starting iteration: 7; err: [Inf, 0.39794734136782467, 0.35725117063949685, 0.34468480710684135, 0.3368379755012758, 0.33226437015632343, 0.29603178689519205, 0.2937437129506209] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39794734136782467, 0.35725117063949685, 0.34468480710684135, 0.3368379755012758, 0.33226437015632343, 0.29603178689519205, 0.2937437129506209, 0.2933295010435241] ***
*** finished computation of 3 references, err: [Inf, 0.39794734136782467, 0.35725117063949685, 0.34468480710684135, 0.3368379755012758, 0.33226437015632343, 0.29603178689519205, 0.2937437129506209, 0.2933295010435241] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [77, 160, 23]]
** centroid: 1, normalized-entropy: 0.7952691126118321, [(1, 77), (2, 160), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [116, 83, 0]]
** centroid: 2, normalized-entropy: 0.9800715138271004, [(1, 116), (2, 83)]
*** center 3: selecting labels [1] (freq >= 1) [from [207, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5564538344424609] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5564538344424609, 0.3418358514389802] ***
*** starting iteration: 2; err: [Inf, 0.5564538344424609, 0.3418358514389802] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5564538344424609, 0.3418358514389802, 0.3348478413475999] ***
*** starting iteration: 3; err: [Inf, 0.5564538344424609, 0.3418358514389802, 0.3348478413475999] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5564538344424609, 0.3418358514389802, 0.3348478413475999, 0.33276440706271593] ***
*** starting iteration: 4; err: [Inf, 0.5564538344424609, 0.3418358514389802, 0.3348478413475999, 0.33276440706271593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5564538344424609, 0.3418358514389802, 0.3348478413475999, 0.33276440706271593, 0.33227532647404895] ***
*** finished computation of 3 references, err: [Inf, 0.5564538344424609, 0.3418358514389802, 0.3348478413475999, 0.33276440706271593, 0.33227532647404895] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [114, 103, 0]]
** centroid: 1, normalized-entropy: 0.9981456291511519, [(1, 114), (2, 103)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [54, 108, 20]]
** centroid: 2, normalized-entropy: 0.8309146814281428, [(1, 54), (2, 108), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [250, 18, 0]]
** centroid: 3, normalized-entropy: 0.35525067854925246, [(1, 250), (2, 18)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4094643815116178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4094643815116178, 0.31601980264889246] ***
*** starting iteration: 2; err: [Inf, 0.4094643815116178, 0.31601980264889246] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4094643815116178, 0.31601980264889246, 0.2973559236396914] ***
*** starting iteration: 3; err: [Inf, 0.4094643815116178, 0.31601980264889246, 0.2973559236396914] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4094643815116178, 0.31601980264889246, 0.2973559236396914, 0.29093272586365687] ***
*** starting iteration: 4; err: [Inf, 0.4094643815116178, 0.31601980264889246, 0.2973559236396914, 0.29093272586365687] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4094643815116178, 0.31601980264889246, 0.2973559236396914, 0.29093272586365687, 0.2894728541055853] ***
*** starting iteration: 5; err: [Inf, 0.4094643815116178, 0.31601980264889246, 0.2973559236396914, 0.29093272586365687, 0.2894728541055853] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4094643815116178, 0.31601980264889246, 0.2973559236396914, 0.29093272586365687, 0.2894728541055853, 0.28953998156640304] ***
*** finished computation of 3 references, err: [Inf, 0.4094643815116178, 0.31601980264889246, 0.2973559236396914, 0.29093272586365687, 0.2894728541055853, 0.28953998156640304] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [158, 57, 0]]
** centroid: 1, normalized-entropy: 0.8343691797319135, [(1, 158), (2, 57)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 185, 23]]
** centroid: 2, normalized-entropy: 0.5016536835986449, [(2, 185), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [236, 8, 0]]
** centroid: 3, normalized-entropy: 0.20818094555717087, [(1, 236), (2, 8)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.17011197337911496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17011197337911496, 0.15424313326925598] ***
*** starting iteration: 2; err: [Inf, 0.17011197337911496, 0.15424313326925598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17011197337911496, 0.15424313326925598, 0.15217676928949295] ***
*** starting iteration: 3; err: [Inf, 0.17011197337911496, 0.15424313326925598, 0.15217676928949295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17011197337911496, 0.15424313326925598, 0.15217676928949295, 0.15089492409772523] ***
*** starting iteration: 4; err: [Inf, 0.17011197337911496, 0.15424313326925598, 0.15217676928949295, 0.15089492409772523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17011197337911496, 0.15424313326925598, 0.15217676928949295, 0.15089492409772523, 0.1495915198797925] ***
*** starting iteration: 5; err: [Inf, 0.17011197337911496, 0.15424313326925598, 0.15217676928949295, 0.15089492409772523, 0.1495915198797925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17011197337911496, 0.15424313326925598, 0.15217676928949295, 0.15089492409772523, 0.1495915198797925, 0.14836633743511307] ***
*** starting iteration: 6; err: [Inf, 0.17011197337911496, 0.15424313326925598, 0.15217676928949295, 0.15089492409772523, 0.1495915198797925, 0.14836633743511307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17011197337911496, 0.15424313326925598, 0.15217676928949295, 0.15089492409772523, 0.1495915198797925, 0.14836633743511307, 0.1477268263396972] ***
*** finished computation of 7 references, err: [Inf, 0.17011197337911496, 0.15424313326925598, 0.15217676928949295, 0.15089492409772523, 0.1495915198797925, 0.14836633743511307, 0.1477268263396972] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 84, 12]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 84), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [29, 56, 0]]
** centroid: 2, normalized-entropy: 0.9259400597385792, [(1, 29), (2, 56)]
*** center 3: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [117, 25, 0]]
** centroid: 4, normalized-entropy: 0.6713733382678759, [(1, 117), (2, 25)]
*** center 5: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 71, 11]]
** centroid: 6, normalized-entropy: 0.5687008669370753, [(2, 71), (3, 11)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [90, 7, 0]]
** centroid: 7, normalized-entropy: 0.37395136668121054, [(1, 90), (2, 7)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19708952592333956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19708952592333956, 0.16097465330927535] ***
*** starting iteration: 2; err: [Inf, 0.19708952592333956, 0.16097465330927535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19708952592333956, 0.16097465330927535, 0.15504150738663178] ***
*** starting iteration: 3; err: [Inf, 0.19708952592333956, 0.16097465330927535, 0.15504150738663178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19708952592333956, 0.16097465330927535, 0.15504150738663178, 0.1531163298802777] ***
*** starting iteration: 4; err: [Inf, 0.19708952592333956, 0.16097465330927535, 0.15504150738663178, 0.1531163298802777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19708952592333956, 0.16097465330927535, 0.15504150738663178, 0.1531163298802777, 0.15201641495320026] ***
*** starting iteration: 5; err: [Inf, 0.19708952592333956, 0.16097465330927535, 0.15504150738663178, 0.1531163298802777, 0.15201641495320026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19708952592333956, 0.16097465330927535, 0.15504150738663178, 0.1531163298802777, 0.15201641495320026, 0.15104298997039292] ***
*** finished computation of 7 references, err: [Inf, 0.19708952592333956, 0.16097465330927535, 0.15504150738663178, 0.1531163298802777, 0.15201641495320026, 0.15104298997039292] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 20]]
** centroid: 1, normalized-entropy: 0.9456603046006401, [(2, 35), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [119, 6, 0]]
** centroid: 2, normalized-entropy: 0.2778395739583094, [(1, 119), (2, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [158, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [88, 4, 0]]
** centroid: 4, normalized-entropy: 0.2580186686648155, [(1, 88), (2, 4)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 68, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [50, 28, 0]]
** centroid: 6, normalized-entropy: 0.9418285354475157, [(1, 50), (2, 28)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 88, 0]]
** centroid: 7, normalized-entropy: 0.20905980566852464, [(1, 3), (2, 88)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17019222741820914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17019222741820914, 0.15328154427095733] ***
*** starting iteration: 2; err: [Inf, 0.17019222741820914, 0.15328154427095733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17019222741820914, 0.15328154427095733, 0.1475594467825551] ***
*** starting iteration: 3; err: [Inf, 0.17019222741820914, 0.15328154427095733, 0.1475594467825551] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17019222741820914, 0.15328154427095733, 0.1475594467825551, 0.14476641871501458] ***
*** starting iteration: 4; err: [Inf, 0.17019222741820914, 0.15328154427095733, 0.1475594467825551, 0.14476641871501458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17019222741820914, 0.15328154427095733, 0.1475594467825551, 0.14476641871501458, 0.14319701418504008] ***
*** starting iteration: 5; err: [Inf, 0.17019222741820914, 0.15328154427095733, 0.1475594467825551, 0.14476641871501458, 0.14319701418504008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17019222741820914, 0.15328154427095733, 0.1475594467825551, 0.14476641871501458, 0.14319701418504008, 0.14273690918217535] ***
*** finished computation of 7 references, err: [Inf, 0.17019222741820914, 0.15328154427095733, 0.1475594467825551, 0.14476641871501458, 0.14319701418504008, 0.14273690918217535] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [48, 36, 0]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(1, 48), (2, 36)]
*** center 2: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [27, 73, 0]]
** centroid: 3, normalized-entropy: 0.8414646362081756, [(1, 27), (2, 73)]
*** center 4: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 82, 23]]
** centroid: 6, normalized-entropy: 0.7584246665423688, [(2, 82), (3, 23)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [42, 59, 0]]
** centroid: 7, normalized-entropy: 0.9794662187017297, [(1, 42), (2, 59)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 10)
[0.9240228252204301, 0.9009998021974069, 0.8960097822373271, 0.8939927951904, 0.8939688191185198, 0.8890057722393051, 0.8889608171045297, 0.8659917402432372, 0.8550646454838072, 0.7959786133438828]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9240228252204301
finished with 10
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 10)
[0.9240228252204301, 0.9009998021974069, 0.8960097822373271, 0.8939927951904, 0.8939688191185198, 0.8890057722393051, 0.8889608171045297, 0.8659917402432372, 0.8550646454838072, 0.7959786133438828]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9240228252204301
finished with 11
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.3939007878325902] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3939007878325902, 0.30722401602691535] ***
*** starting iteration: 2; err: [Inf, 0.3939007878325902, 0.30722401602691535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3939007878325902, 0.30722401602691535, 0.2956845091366385] ***
*** starting iteration: 3; err: [Inf, 0.3939007878325902, 0.30722401602691535, 0.2956845091366385] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3939007878325902, 0.30722401602691535, 0.2956845091366385, 0.2930110528402299] ***
*** starting iteration: 4; err: [Inf, 0.3939007878325902, 0.30722401602691535, 0.2956845091366385, 0.2930110528402299] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3939007878325902, 0.30722401602691535, 0.2956845091366385, 0.2930110528402299, 0.29242085524752187] ***
*** finished computation of 3 references, err: [Inf, 0.3939007878325902, 0.30722401602691535, 0.2956845091366385, 0.2930110528402299, 0.29242085524752187] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [152, 45, 0]]
** centroid: 1, normalized-entropy: 0.7752580561149532, [(1, 152), (2, 45)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [2, 188, 23]]
** centroid: 2, normalized-entropy: 0.3589739110865378, [(1, 2), (2, 188), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [246, 10, 0]]
** centroid: 3, normalized-entropy: 0.23797715131903674, [(1, 246), (2, 10)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.45701085269238906] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45701085269238906, 0.3361611805557423] ***
*** starting iteration: 2; err: [Inf, 0.45701085269238906, 0.3361611805557423] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45701085269238906, 0.3361611805557423, 0.3344456918636753] ***
*** starting iteration: 3; err: [Inf, 0.45701085269238906, 0.3361611805557423, 0.3344456918636753] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45701085269238906, 0.3361611805557423, 0.3344456918636753, 0.33304010128994743] ***
*** starting iteration: 4; err: [Inf, 0.45701085269238906, 0.3361611805557423, 0.3344456918636753, 0.33304010128994743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45701085269238906, 0.3361611805557423, 0.3344456918636753, 0.33304010128994743, 0.3318094141610983] ***
*** starting iteration: 5; err: [Inf, 0.45701085269238906, 0.3361611805557423, 0.3344456918636753, 0.33304010128994743, 0.3318094141610983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45701085269238906, 0.3361611805557423, 0.3344456918636753, 0.33304010128994743, 0.3318094141610983, 0.3309790005647707] ***
*** finished computation of 3 references, err: [Inf, 0.45701085269238906, 0.3361611805557423, 0.3344456918636753, 0.33304010128994743, 0.3318094141610983, 0.3309790005647707] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [98, 116, 0]]
** centroid: 1, normalized-entropy: 0.9948905370642835, [(1, 98), (2, 116)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [73, 105, 20]]
** centroid: 2, normalized-entropy: 0.8518223285982549, [(1, 73), (2, 105), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [247, 8, 0]]
** centroid: 3, normalized-entropy: 0.20122909881409184, [(1, 247), (2, 8)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34604356711314266] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34604356711314266, 0.31717172559529455] ***
*** starting iteration: 2; err: [Inf, 0.34604356711314266, 0.31717172559529455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34604356711314266, 0.31717172559529455, 0.29223099680313064] ***
*** starting iteration: 3; err: [Inf, 0.34604356711314266, 0.31717172559529455, 0.29223099680313064] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34604356711314266, 0.31717172559529455, 0.29223099680313064, 0.28990386014544534] ***
*** starting iteration: 4; err: [Inf, 0.34604356711314266, 0.31717172559529455, 0.29223099680313064, 0.28990386014544534] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34604356711314266, 0.31717172559529455, 0.29223099680313064, 0.28990386014544534, 0.2899489353928922] ***
*** finished computation of 3 references, err: [Inf, 0.34604356711314266, 0.31717172559529455, 0.29223099680313064, 0.28990386014544534, 0.2899489353928922] ***
*** center 1: selecting labels [1] (freq >= 2) [from [202, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [73, 159, 23]]
** centroid: 2, normalized-entropy: 0.7915387831144859, [(1, 73), (2, 159), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [119, 91, 0]]
** centroid: 3, normalized-entropy: 0.9871377743721862, [(1, 119), (2, 91)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 11)
[0.9240228252204301, 0.9009998021974069, 0.8979758201315088, 0.8960097822373271, 0.8939927951904, 0.8939688191185198, 0.8890057722393051, 0.8889608171045297, 0.8659917402432372, 0.8550646454838072, 0.7959786133438828]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9240228252204301
finished with 11
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 11)
[0.9240228252204301, 0.9009998021974069, 0.8979758201315088, 0.8960097822373271, 0.8939927951904, 0.8939688191185198, 0.8890057722393051, 0.8889608171045297, 0.8659917402432372, 0.8550646454838072, 0.7959786133438828]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9240228252204301
finished with 13
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.34746820510955184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34746820510955184, 0.2362394824724745] ***
*** starting iteration: 2; err: [Inf, 0.34746820510955184, 0.2362394824724745] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34746820510955184, 0.2362394824724745, 0.23388127383829146] ***
*** starting iteration: 3; err: [Inf, 0.34746820510955184, 0.2362394824724745, 0.23388127383829146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34746820510955184, 0.2362394824724745, 0.23388127383829146, 0.23332215907463283] ***
*** finished computation of 3 references, err: [Inf, 0.34746820510955184, 0.2362394824724745, 0.23388127383829146, 0.23332215907463283] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [231, 17, 0]]
** centroid: 1, normalized-entropy: 0.3604830165628226, [(1, 231), (2, 17)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 180, 23]]
** centroid: 2, normalized-entropy: 0.5097916692607785, [(2, 180), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [169, 46, 0]]
** centroid: 3, normalized-entropy: 0.7489720369833592, [(1, 169), (2, 46)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.30487513616178435] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30487513616178435, 0.2351669913501307] ***
*** starting iteration: 2; err: [Inf, 0.30487513616178435, 0.2351669913501307] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30487513616178435, 0.2351669913501307, 0.22906642689787107] ***
*** starting iteration: 3; err: [Inf, 0.30487513616178435, 0.2351669913501307, 0.22906642689787107] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30487513616178435, 0.2351669913501307, 0.22906642689787107, 0.22836553699698584] ***
*** finished computation of 3 references, err: [Inf, 0.30487513616178435, 0.2351669913501307, 0.22906642689787107, 0.22836553699698584] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [95, 138, 20]]
** centroid: 1, normalized-entropy: 0.818328745072377, [(1, 95), (2, 138), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [200, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [123, 91, 0]]
** centroid: 3, normalized-entropy: 0.9838099938085867, [(1, 123), (2, 91)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3287064974437813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3287064974437813, 0.23687039025691986] ***
*** starting iteration: 2; err: [Inf, 0.3287064974437813, 0.23687039025691986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3287064974437813, 0.23687039025691986, 0.23082664801642813] ***
*** starting iteration: 3; err: [Inf, 0.3287064974437813, 0.23687039025691986, 0.23082664801642813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3287064974437813, 0.23687039025691986, 0.23082664801642813, 0.2296714272512042] ***
*** starting iteration: 4; err: [Inf, 0.3287064974437813, 0.23687039025691986, 0.23082664801642813, 0.2296714272512042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3287064974437813, 0.23687039025691986, 0.23082664801642813, 0.2296714272512042, 0.22944409533430343] ***
*** finished computation of 3 references, err: [Inf, 0.3287064974437813, 0.23687039025691986, 0.23082664801642813, 0.2296714272512042, 0.22944409533430343] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [242, 7, 0]]
** centroid: 1, normalized-entropy: 0.18483571570320104, [(1, 242), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [151, 63, 0]]
** centroid: 2, normalized-entropy: 0.8743279638844103, [(1, 151), (2, 63)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [1, 180, 23]]
** centroid: 3, normalized-entropy: 0.3482462778076484, [(1, 1), (2, 180), (3, 23)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.390772967579755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.390772967579755, 0.31789381993240917] ***
*** starting iteration: 2; err: [Inf, 0.390772967579755, 0.31789381993240917] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.390772967579755, 0.31789381993240917, 0.29713913137456766] ***
*** starting iteration: 3; err: [Inf, 0.390772967579755, 0.31789381993240917, 0.29713913137456766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.390772967579755, 0.31789381993240917, 0.29713913137456766, 0.2931938422759911] ***
*** starting iteration: 4; err: [Inf, 0.390772967579755, 0.31789381993240917, 0.29713913137456766, 0.2931938422759911] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.390772967579755, 0.31789381993240917, 0.29713913137456766, 0.2931938422759911, 0.29234578306912573] ***
*** finished computation of 3 references, err: [Inf, 0.390772967579755, 0.31789381993240917, 0.29713913137456766, 0.2931938422759911, 0.29234578306912573] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [229, 19, 0]]
** centroid: 1, normalized-entropy: 0.3901306239770838, [(1, 229), (2, 19)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 183, 23]]
** centroid: 2, normalized-entropy: 0.5048743359439413, [(2, 183), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [171, 41, 0]]
** centroid: 3, normalized-entropy: 0.7085222836441899, [(1, 171), (2, 41)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3968559125186303] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3968559125186303, 0.32148978231136854] ***
*** starting iteration: 2; err: [Inf, 0.3968559125186303, 0.32148978231136854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3968559125186303, 0.32148978231136854, 0.3005550029510255] ***
*** starting iteration: 3; err: [Inf, 0.3968559125186303, 0.32148978231136854, 0.3005550029510255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3968559125186303, 0.32148978231136854, 0.3005550029510255, 0.29597663331771273] ***
*** starting iteration: 4; err: [Inf, 0.3968559125186303, 0.32148978231136854, 0.3005550029510255, 0.29597663331771273] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3968559125186303, 0.32148978231136854, 0.3005550029510255, 0.29597663331771273, 0.2954575749745277] ***
*** finished computation of 3 references, err: [Inf, 0.3968559125186303, 0.32148978231136854, 0.3005550029510255, 0.29597663331771273, 0.2954575749745277] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [254, 19, 0]]
** centroid: 1, normalized-entropy: 0.36441819148557325, [(1, 254), (2, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [164, 41, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(1, 164), (2, 41)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 169, 20]]
** centroid: 3, normalized-entropy: 0.48717794470024506, [(2, 169), (3, 20)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3810562107382507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3810562107382507, 0.306193330832038] ***
*** starting iteration: 2; err: [Inf, 0.3810562107382507, 0.306193330832038] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3810562107382507, 0.306193330832038, 0.29363998759264265] ***
*** starting iteration: 3; err: [Inf, 0.3810562107382507, 0.306193330832038, 0.29363998759264265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3810562107382507, 0.306193330832038, 0.29363998759264265, 0.29147398577391476] ***
*** starting iteration: 4; err: [Inf, 0.3810562107382507, 0.306193330832038, 0.29363998759264265, 0.29147398577391476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3810562107382507, 0.306193330832038, 0.29363998759264265, 0.29147398577391476, 0.29053878831374147] ***
*** finished computation of 3 references, err: [Inf, 0.3810562107382507, 0.306193330832038, 0.29363998759264265, 0.29147398577391476, 0.29053878831374147] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [56, 155, 23]]
** centroid: 1, normalized-entropy: 0.7673946310196059, [(1, 56), (2, 155), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [222, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [116, 95, 0]]
** centroid: 3, normalized-entropy: 0.9928428937961026, [(1, 116), (2, 95)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 13)
[0.9240228252204301, 0.9199978421535308, 0.9059838281395166, 0.9009998021974069, 0.8979758201315088, 0.8960097822373271, 0.8939927951904, 0.8939688191185198, 0.8890057722393051, 0.8889608171045297, 0.8659917402432372, 0.8550646454838072, 0.7959786133438828]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9240228252204301
finished with 13
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 13)
[0.9240228252204301, 0.9199978421535308, 0.9059838281395166, 0.9009998021974069, 0.8979758201315088, 0.8960097822373271, 0.8939927951904, 0.8939688191185198, 0.8890057722393051, 0.8889608171045297, 0.8659917402432372, 0.8550646454838072, 0.7959786133438828]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9240228252204301
finished with 14
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.3292041261437106] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3292041261437106, 0.23603376416578978] ***
*** starting iteration: 2; err: [Inf, 0.3292041261437106, 0.23603376416578978] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3292041261437106, 0.23603376416578978, 0.23253146908875252] ***
*** starting iteration: 3; err: [Inf, 0.3292041261437106, 0.23603376416578978, 0.23253146908875252] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3292041261437106, 0.23603376416578978, 0.23253146908875252, 0.23222409749918202] ***
*** finished computation of 3 references, err: [Inf, 0.3292041261437106, 0.23603376416578978, 0.23253146908875252, 0.23222409749918202] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [88, 164, 23]]
** centroid: 1, normalized-entropy: 0.8013810730368438, [(1, 88), (2, 164), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [197, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [115, 79, 0]]
** centroid: 3, normalized-entropy: 0.9750157547407654, [(1, 115), (2, 79)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31059300037857696] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31059300037857696, 0.24721906893409096] ***
*** starting iteration: 2; err: [Inf, 0.31059300037857696, 0.24721906893409096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31059300037857696, 0.24721906893409096, 0.23326544056756832] ***
*** starting iteration: 3; err: [Inf, 0.31059300037857696, 0.24721906893409096, 0.23326544056756832] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31059300037857696, 0.24721906893409096, 0.23326544056756832, 0.23114880579740166] ***
*** finished computation of 3 references, err: [Inf, 0.31059300037857696, 0.24721906893409096, 0.23326544056756832, 0.23114880579740166] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [83, 157, 20]]
** centroid: 1, normalized-entropy: 0.7886460283008372, [(1, 83), (2, 157), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [216, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [119, 72, 0]]
** centroid: 3, normalized-entropy: 0.9558690692007135, [(1, 119), (2, 72)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36199885235633] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36199885235633, 0.23520824026576115] ***
*** starting iteration: 2; err: [Inf, 0.36199885235633, 0.23520824026576115] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36199885235633, 0.23520824026576115, 0.23136858714987402] ***
*** starting iteration: 3; err: [Inf, 0.36199885235633, 0.23520824026576115, 0.23136858714987402] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36199885235633, 0.23520824026576115, 0.23136858714987402, 0.22977311399205402] ***
*** finished computation of 3 references, err: [Inf, 0.36199885235633, 0.23520824026576115, 0.23136858714987402, 0.22977311399205402] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [76, 140, 17]]
** centroid: 1, normalized-entropy: 0.7850780506538907, [(1, 76), (2, 140), (3, 17)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [107, 110, 6]]
** centroid: 2, normalized-entropy: 0.7265718195675862, [(1, 107), (2, 110), (3, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [211, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.9240228252204301, 0.9199978421535308, 0.9059838281395166, 0.9009998021974069, 0.8979758201315088, 0.8960097822373271, 0.8939927951904, 0.8939688191185198, 0.8890057722393051, 0.8889608171045297, 0.8659917402432372, 0.8550646454838072, 0.7959786133438828, 0.7759046471621321]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9240228252204301
finished with 14
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9240228252204301, 0.9199978421535308, 0.9059838281395166, 0.9009998021974069, 0.8979758201315088, 0.8960097822373271, 0.8939927951904, 0.8939688191185198, 0.8890057722393051, 0.8889608171045297, 0.8659917402432372, 0.8550646454838072, 0.7959786133438828, 0.7759046471621321]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9240228252204301
finished with 14
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.2401366051757941] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2401366051757941, 0.2098464265835937] ***
*** starting iteration: 2; err: [Inf, 0.2401366051757941, 0.2098464265835937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2401366051757941, 0.2098464265835937, 0.20305183556955309] ***
*** starting iteration: 3; err: [Inf, 0.2401366051757941, 0.2098464265835937, 0.20305183556955309] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2401366051757941, 0.2098464265835937, 0.20305183556955309, 0.1990398781839758] ***
*** starting iteration: 4; err: [Inf, 0.2401366051757941, 0.2098464265835937, 0.20305183556955309, 0.1990398781839758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2401366051757941, 0.2098464265835937, 0.20305183556955309, 0.1990398781839758, 0.19643875271640718] ***
*** starting iteration: 5; err: [Inf, 0.2401366051757941, 0.2098464265835937, 0.20305183556955309, 0.1990398781839758, 0.19643875271640718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2401366051757941, 0.2098464265835937, 0.20305183556955309, 0.1990398781839758, 0.19643875271640718, 0.19508232700405642] ***
*** starting iteration: 6; err: [Inf, 0.2401366051757941, 0.2098464265835937, 0.20305183556955309, 0.1990398781839758, 0.19643875271640718, 0.19508232700405642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2401366051757941, 0.2098464265835937, 0.20305183556955309, 0.1990398781839758, 0.19643875271640718, 0.19508232700405642, 0.1941713344384916] ***
*** finished computation of 7 references, err: [Inf, 0.2401366051757941, 0.2098464265835937, 0.20305183556955309, 0.1990398781839758, 0.19643875271640718, 0.19508232700405642, 0.1941713344384916] ***
*** center 1: selecting labels [1] (freq >= 2) [from [162, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [48, 27, 0]]
** centroid: 2, normalized-entropy: 0.9426831892554921, [(1, 48), (2, 27)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 148, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [96, 1, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 122, 33]]
** centroid: 5, normalized-entropy: 0.7469956238451984, [(2, 122), (3, 33)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [176, 55, 0]]
** centroid: 6, normalized-entropy: 0.7918583525674836, [(1, 176), (2, 55)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [124, 8, 0]]
** centroid: 7, normalized-entropy: 0.32984607020714635, [(1, 124), (2, 8)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29474934459663926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29474934459663926, 0.1932864900752902] ***
*** starting iteration: 2; err: [Inf, 0.29474934459663926, 0.1932864900752902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29474934459663926, 0.1932864900752902, 0.1871967119202018] ***
*** starting iteration: 3; err: [Inf, 0.29474934459663926, 0.1932864900752902, 0.1871967119202018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29474934459663926, 0.1932864900752902, 0.1871967119202018, 0.1855622897502035] ***
*** starting iteration: 4; err: [Inf, 0.29474934459663926, 0.1932864900752902, 0.1871967119202018, 0.1855622897502035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29474934459663926, 0.1932864900752902, 0.1871967119202018, 0.1855622897502035, 0.18489232394844293] ***
*** finished computation of 7 references, err: [Inf, 0.29474934459663926, 0.1932864900752902, 0.1871967119202018, 0.1855622897502035, 0.18489232394844293] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [49, 20, 0]]
** centroid: 1, normalized-entropy: 0.868533960265235, [(1, 49), (2, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [71, 11, 0]]
** centroid: 2, normalized-entropy: 0.5687008669370753, [(1, 71), (2, 11)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [37, 20, 0]]
** centroid: 3, normalized-entropy: 0.9348490242345946, [(1, 37), (2, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 64, 12]]
** centroid: 5, normalized-entropy: 0.6292492238560344, [(2, 64), (3, 12)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 60, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [77, 1, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22592196784634144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22592196784634144, 0.20651467457413675] ***
*** starting iteration: 2; err: [Inf, 0.22592196784634144, 0.20651467457413675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22592196784634144, 0.20651467457413675, 0.19896644897339866] ***
*** starting iteration: 3; err: [Inf, 0.22592196784634144, 0.20651467457413675, 0.19896644897339866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22592196784634144, 0.20651467457413675, 0.19896644897339866, 0.19403897839225828] ***
*** starting iteration: 4; err: [Inf, 0.22592196784634144, 0.20651467457413675, 0.19896644897339866, 0.19403897839225828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22592196784634144, 0.20651467457413675, 0.19896644897339866, 0.19403897839225828, 0.18788744836486876] ***
*** starting iteration: 5; err: [Inf, 0.22592196784634144, 0.20651467457413675, 0.19896644897339866, 0.19403897839225828, 0.18788744836486876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22592196784634144, 0.20651467457413675, 0.19896644897339866, 0.19403897839225828, 0.18788744836486876, 0.18768189154565335] ***
*** finished computation of 7 references, err: [Inf, 0.22592196784634144, 0.20651467457413675, 0.19896644897339866, 0.19403897839225828, 0.18788744836486876, 0.18768189154565335] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [29, 28, 0]]
** centroid: 1, normalized-entropy: 0.9997779672118906, [(1, 29), (2, 28)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 69, 19]]
** centroid: 2, normalized-entropy: 0.7526269564427315, [(2, 69), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [62, 18, 0]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(1, 62), (2, 18)]
*** center 4: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [66, 8, 0]]
** centroid: 7, normalized-entropy: 0.4941829348497886, [(1, 66), (2, 8)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26158496521040797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26158496521040797, 0.19110708926804365] ***
*** starting iteration: 2; err: [Inf, 0.26158496521040797, 0.19110708926804365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26158496521040797, 0.19110708926804365, 0.18574578536115588] ***
*** starting iteration: 3; err: [Inf, 0.26158496521040797, 0.19110708926804365, 0.18574578536115588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26158496521040797, 0.19110708926804365, 0.18574578536115588, 0.18346954216901212] ***
*** starting iteration: 4; err: [Inf, 0.26158496521040797, 0.19110708926804365, 0.18574578536115588, 0.18346954216901212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26158496521040797, 0.19110708926804365, 0.18574578536115588, 0.18346954216901212, 0.18253029155358672] ***
*** finished computation of 7 references, err: [Inf, 0.26158496521040797, 0.19110708926804365, 0.18574578536115588, 0.18346954216901212, 0.18253029155358672] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 49, 15]]
** centroid: 1, normalized-entropy: 0.7855602922535471, [(2, 49), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [57, 16, 0]]
** centroid: 2, normalized-entropy: 0.7586638628883696, [(1, 57), (2, 16)]
*** center 3: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 54, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [58, 3, 0]]
** centroid: 6, normalized-entropy: 0.28290479297989196, [(1, 58), (2, 3)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [17, 45, 0]]
** centroid: 7, normalized-entropy: 0.8474179614176633, [(1, 17), (2, 45)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2618753882199526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2618753882199526, 0.21855716707999817] ***
*** starting iteration: 2; err: [Inf, 0.2618753882199526, 0.21855716707999817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2618753882199526, 0.21855716707999817, 0.20005172860063614] ***
*** starting iteration: 3; err: [Inf, 0.2618753882199526, 0.21855716707999817, 0.20005172860063614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2618753882199526, 0.21855716707999817, 0.20005172860063614, 0.19215465429890902] ***
*** starting iteration: 4; err: [Inf, 0.2618753882199526, 0.21855716707999817, 0.20005172860063614, 0.19215465429890902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2618753882199526, 0.21855716707999817, 0.20005172860063614, 0.19215465429890902, 0.1901469170926139] ***
*** starting iteration: 5; err: [Inf, 0.2618753882199526, 0.21855716707999817, 0.20005172860063614, 0.19215465429890902, 0.1901469170926139] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2618753882199526, 0.21855716707999817, 0.20005172860063614, 0.19215465429890902, 0.1901469170926139, 0.18526201545633375] ***
*** starting iteration: 6; err: [Inf, 0.2618753882199526, 0.21855716707999817, 0.20005172860063614, 0.19215465429890902, 0.1901469170926139, 0.18526201545633375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2618753882199526, 0.21855716707999817, 0.20005172860063614, 0.19215465429890902, 0.1901469170926139, 0.18526201545633375, 0.1841580004375428] ***
*** starting iteration: 7; err: [Inf, 0.2618753882199526, 0.21855716707999817, 0.20005172860063614, 0.19215465429890902, 0.1901469170926139, 0.18526201545633375, 0.1841580004375428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2618753882199526, 0.21855716707999817, 0.20005172860063614, 0.19215465429890902, 0.1901469170926139, 0.18526201545633375, 0.1841580004375428, 0.1839701131475158] ***
*** finished computation of 7 references, err: [Inf, 0.2618753882199526, 0.21855716707999817, 0.20005172860063614, 0.19215465429890902, 0.1901469170926139, 0.18526201545633375, 0.1841580004375428, 0.1839701131475158] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [12, 71, 0]]
** centroid: 1, normalized-entropy: 0.5961045458832345, [(1, 12), (2, 71)]
*** center 2: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 50, 16]]
** centroid: 3, normalized-entropy: 0.7990485210442682, [(2, 50), (3, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [36, 8, 0]]
** centroid: 6, normalized-entropy: 0.6840384356390419, [(1, 36), (2, 8)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [28, 43, 0]]
** centroid: 7, normalized-entropy: 0.9675594819018211, [(1, 28), (2, 43)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32953802226297557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32953802226297557, 0.23211531670577823] ***
*** starting iteration: 2; err: [Inf, 0.32953802226297557, 0.23211531670577823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32953802226297557, 0.23211531670577823, 0.2241663258234039] ***
*** starting iteration: 3; err: [Inf, 0.32953802226297557, 0.23211531670577823, 0.2241663258234039] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32953802226297557, 0.23211531670577823, 0.2241663258234039, 0.2097066725594923] ***
*** starting iteration: 4; err: [Inf, 0.32953802226297557, 0.23211531670577823, 0.2241663258234039, 0.2097066725594923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32953802226297557, 0.23211531670577823, 0.2241663258234039, 0.2097066725594923, 0.19545993604324757] ***
*** starting iteration: 5; err: [Inf, 0.32953802226297557, 0.23211531670577823, 0.2241663258234039, 0.2097066725594923, 0.19545993604324757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32953802226297557, 0.23211531670577823, 0.2241663258234039, 0.2097066725594923, 0.19545993604324757, 0.18705467817746102] ***
*** starting iteration: 6; err: [Inf, 0.32953802226297557, 0.23211531670577823, 0.2241663258234039, 0.2097066725594923, 0.19545993604324757, 0.18705467817746102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32953802226297557, 0.23211531670577823, 0.2241663258234039, 0.2097066725594923, 0.19545993604324757, 0.18705467817746102, 0.1852702034888789] ***
*** starting iteration: 7; err: [Inf, 0.32953802226297557, 0.23211531670577823, 0.2241663258234039, 0.2097066725594923, 0.19545993604324757, 0.18705467817746102, 0.1852702034888789] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32953802226297557, 0.23211531670577823, 0.2241663258234039, 0.2097066725594923, 0.19545993604324757, 0.18705467817746102, 0.1852702034888789, 0.18432297428697347] ***
*** finished computation of 7 references, err: [Inf, 0.32953802226297557, 0.23211531670577823, 0.2241663258234039, 0.2097066725594923, 0.19545993604324757, 0.18705467817746102, 0.1852702034888789, 0.18432297428697347] ***
*** center 1: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 46, 19]]
** centroid: 4, normalized-entropy: 0.871683617119982, [(2, 46), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [59, 2, 0]]
** centroid: 5, normalized-entropy: 0.20818094555717087, [(1, 59), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [20, 59, 0]]
** centroid: 6, normalized-entropy: 0.8162554088088008, [(1, 20), (2, 59)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [14, 67, 0]]
** centroid: 7, normalized-entropy: 0.6641593279528072, [(1, 14), (2, 67)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24613870090804993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24613870090804993, 0.19842449555639177] ***
*** starting iteration: 2; err: [Inf, 0.24613870090804993, 0.19842449555639177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24613870090804993, 0.19842449555639177, 0.1945734316566959] ***
*** starting iteration: 3; err: [Inf, 0.24613870090804993, 0.19842449555639177, 0.1945734316566959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24613870090804993, 0.19842449555639177, 0.1945734316566959, 0.19243776298640297] ***
*** starting iteration: 4; err: [Inf, 0.24613870090804993, 0.19842449555639177, 0.1945734316566959, 0.19243776298640297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24613870090804993, 0.19842449555639177, 0.1945734316566959, 0.19243776298640297, 0.1904898866303265] ***
*** starting iteration: 5; err: [Inf, 0.24613870090804993, 0.19842449555639177, 0.1945734316566959, 0.19243776298640297, 0.1904898866303265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24613870090804993, 0.19842449555639177, 0.1945734316566959, 0.19243776298640297, 0.1904898866303265, 0.1894279628172517] ***
*** starting iteration: 6; err: [Inf, 0.24613870090804993, 0.19842449555639177, 0.1945734316566959, 0.19243776298640297, 0.1904898866303265, 0.1894279628172517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24613870090804993, 0.19842449555639177, 0.1945734316566959, 0.19243776298640297, 0.1904898866303265, 0.1894279628172517, 0.18908997392095625] ***
*** finished computation of 7 references, err: [Inf, 0.24613870090804993, 0.19842449555639177, 0.1945734316566959, 0.19243776298640297, 0.1904898866303265, 0.1894279628172517, 0.18908997392095625] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [14, 46, 0]]
** centroid: 1, normalized-entropy: 0.7837769474847011, [(1, 14), (2, 46)]
*** center 2: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 58, 18]]
** centroid: 3, normalized-entropy: 0.7897492536625221, [(2, 58), (3, 18)]
*** center 4: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [58, 38, 0]]
** centroid: 5, normalized-entropy: 0.968461008760162, [(1, 58), (2, 38)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [19, 33, 0]]
** centroid: 6, normalized-entropy: 0.9470622432515328, [(1, 19), (2, 33)]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29686394728161397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29686394728161397, 0.2134403804996982] ***
*** starting iteration: 2; err: [Inf, 0.29686394728161397, 0.2134403804996982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29686394728161397, 0.2134403804996982, 0.19949451478477567] ***
*** starting iteration: 3; err: [Inf, 0.29686394728161397, 0.2134403804996982, 0.19949451478477567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29686394728161397, 0.2134403804996982, 0.19949451478477567, 0.18920645209017675] ***
*** starting iteration: 4; err: [Inf, 0.29686394728161397, 0.2134403804996982, 0.19949451478477567, 0.18920645209017675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29686394728161397, 0.2134403804996982, 0.19949451478477567, 0.18920645209017675, 0.18565540586598217] ***
*** starting iteration: 5; err: [Inf, 0.29686394728161397, 0.2134403804996982, 0.19949451478477567, 0.18920645209017675, 0.18565540586598217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29686394728161397, 0.2134403804996982, 0.19949451478477567, 0.18920645209017675, 0.18565540586598217, 0.18468512164708226] ***
*** finished computation of 7 references, err: [Inf, 0.29686394728161397, 0.2134403804996982, 0.19949451478477567, 0.18920645209017675, 0.18565540586598217, 0.18468512164708226] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [37, 33, 0]]
** centroid: 1, normalized-entropy: 0.9976432959863935, [(1, 37), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [9, 53, 0]]
** centroid: 2, normalized-entropy: 0.5975977764379984, [(1, 9), (2, 53)]
*** center 3: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 68, 15]]
** centroid: 4, normalized-entropy: 0.6816559115981193, [(2, 68), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [53, 46, 0]]
** centroid: 5, normalized-entropy: 0.9963906193677697, [(1, 53), (2, 46)]
*** center 6: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2658412165995687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2658412165995687, 0.2104003629265353] ***
*** starting iteration: 2; err: [Inf, 0.2658412165995687, 0.2104003629265353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2658412165995687, 0.2104003629265353, 0.201193223932758] ***
*** starting iteration: 3; err: [Inf, 0.2658412165995687, 0.2104003629265353, 0.201193223932758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2658412165995687, 0.2104003629265353, 0.201193223932758, 0.19264347162190826] ***
*** starting iteration: 4; err: [Inf, 0.2658412165995687, 0.2104003629265353, 0.201193223932758, 0.19264347162190826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2658412165995687, 0.2104003629265353, 0.201193223932758, 0.19264347162190826, 0.1895973415710032] ***
*** starting iteration: 5; err: [Inf, 0.2658412165995687, 0.2104003629265353, 0.201193223932758, 0.19264347162190826, 0.1895973415710032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2658412165995687, 0.2104003629265353, 0.201193223932758, 0.19264347162190826, 0.1895973415710032, 0.18767070013843476] ***
*** starting iteration: 6; err: [Inf, 0.2658412165995687, 0.2104003629265353, 0.201193223932758, 0.19264347162190826, 0.1895973415710032, 0.18767070013843476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2658412165995687, 0.2104003629265353, 0.201193223932758, 0.19264347162190826, 0.1895973415710032, 0.18767070013843476, 0.1866688857814297] ***
*** starting iteration: 7; err: [Inf, 0.2658412165995687, 0.2104003629265353, 0.201193223932758, 0.19264347162190826, 0.1895973415710032, 0.18767070013843476, 0.1866688857814297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2658412165995687, 0.2104003629265353, 0.201193223932758, 0.19264347162190826, 0.1895973415710032, 0.18767070013843476, 0.1866688857814297, 0.1861418896149844] ***
*** finished computation of 7 references, err: [Inf, 0.2658412165995687, 0.2104003629265353, 0.201193223932758, 0.19264347162190826, 0.1895973415710032, 0.18767070013843476, 0.1866688857814297, 0.1861418896149844] ***
*** center 1: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [5, 60, 0]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(1, 5), (2, 60)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 54, 19]]
** centroid: 3, normalized-entropy: 0.8271595195340525, [(2, 54), (3, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [41, 37, 0]]
** centroid: 4, normalized-entropy: 0.9981021327390103, [(1, 41), (2, 37)]
*** center 5: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [59, 18, 0]]
** centroid: 6, normalized-entropy: 0.7845191388986644, [(1, 59), (2, 18)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [24, 23, 0]]
** centroid: 7, normalized-entropy: 0.9996734260048917, [(1, 24), (2, 23)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22579209261573852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22579209261573852, 0.1991912825386971] ***
*** starting iteration: 2; err: [Inf, 0.22579209261573852, 0.1991912825386971] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22579209261573852, 0.1991912825386971, 0.19090557196969166] ***
*** starting iteration: 3; err: [Inf, 0.22579209261573852, 0.1991912825386971, 0.19090557196969166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22579209261573852, 0.1991912825386971, 0.19090557196969166, 0.18631044325232507] ***
*** starting iteration: 4; err: [Inf, 0.22579209261573852, 0.1991912825386971, 0.19090557196969166, 0.18631044325232507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22579209261573852, 0.1991912825386971, 0.19090557196969166, 0.18631044325232507, 0.1826610218882561] ***
*** starting iteration: 5; err: [Inf, 0.22579209261573852, 0.1991912825386971, 0.19090557196969166, 0.18631044325232507, 0.1826610218882561] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22579209261573852, 0.1991912825386971, 0.19090557196969166, 0.18631044325232507, 0.1826610218882561, 0.18079205680824817] ***
*** starting iteration: 6; err: [Inf, 0.22579209261573852, 0.1991912825386971, 0.19090557196969166, 0.18631044325232507, 0.1826610218882561, 0.18079205680824817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22579209261573852, 0.1991912825386971, 0.19090557196969166, 0.18631044325232507, 0.1826610218882561, 0.18079205680824817, 0.18010481349937618] ***
*** finished computation of 7 references, err: [Inf, 0.22579209261573852, 0.1991912825386971, 0.19090557196969166, 0.18631044325232507, 0.1826610218882561, 0.18079205680824817, 0.18010481349937618] ***
*** center 1: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 58, 18]]
** centroid: 2, normalized-entropy: 0.7897492536625221, [(2, 58), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [55, 6, 0]]
** centroid: 3, normalized-entropy: 0.4637773498877517, [(1, 55), (2, 6)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [32, 43, 0]]
** centroid: 4, normalized-entropy: 0.9844268978000115, [(1, 32), (2, 43)]
*** center 5: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [12, 64, 0]]
** centroid: 6, normalized-entropy: 0.6292492238560344, [(1, 12), (2, 64)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [87, 3, 0]]
** centroid: 7, normalized-entropy: 0.2108423003185322, [(1, 87), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2375001572240144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375001572240144, 0.19949563441611826] ***
*** starting iteration: 2; err: [Inf, 0.2375001572240144, 0.19949563441611826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375001572240144, 0.19949563441611826, 0.19452026548422874] ***
*** starting iteration: 3; err: [Inf, 0.2375001572240144, 0.19949563441611826, 0.19452026548422874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375001572240144, 0.19949563441611826, 0.19452026548422874, 0.19063864168012515] ***
*** starting iteration: 4; err: [Inf, 0.2375001572240144, 0.19949563441611826, 0.19452026548422874, 0.19063864168012515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375001572240144, 0.19949563441611826, 0.19452026548422874, 0.19063864168012515, 0.18937588721141219] ***
*** starting iteration: 5; err: [Inf, 0.2375001572240144, 0.19949563441611826, 0.19452026548422874, 0.19063864168012515, 0.18937588721141219] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375001572240144, 0.19949563441611826, 0.19452026548422874, 0.19063864168012515, 0.18937588721141219, 0.18903967216797174] ***
*** finished computation of 7 references, err: [Inf, 0.2375001572240144, 0.19949563441611826, 0.19452026548422874, 0.19063864168012515, 0.18937588721141219, 0.18903967216797174] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 94, 12]]
** centroid: 1, normalized-entropy: 0.5095157180881823, [(2, 94), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [82, 2, 0]]
** centroid: 2, normalized-entropy: 0.1623261801753929, [(1, 82), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [33, 26, 0]]
** centroid: 3, normalized-entropy: 0.9898220559635807, [(1, 33), (2, 26)]
*** center 4: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [41, 41, 0]]
** centroid: 5, normalized-entropy: 1.0, [(1, 41), (2, 41)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [55, 14, 0]]
** centroid: 6, normalized-entropy: 0.7276874545656657, [(1, 55), (2, 14)]
*** center 7: selecting labels [1] (freq >= 2) [from [43, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20704844226129354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20704844226129354, 0.1901824114676565] ***
*** starting iteration: 2; err: [Inf, 0.20704844226129354, 0.1901824114676565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20704844226129354, 0.1901824114676565, 0.1881972918137908] ***
*** starting iteration: 3; err: [Inf, 0.20704844226129354, 0.1901824114676565, 0.1881972918137908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20704844226129354, 0.1901824114676565, 0.1881972918137908, 0.187019055923447] ***
*** starting iteration: 4; err: [Inf, 0.20704844226129354, 0.1901824114676565, 0.1881972918137908, 0.187019055923447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20704844226129354, 0.1901824114676565, 0.1881972918137908, 0.187019055923447, 0.1861725885961205] ***
*** finished computation of 7 references, err: [Inf, 0.20704844226129354, 0.1901824114676565, 0.1881972918137908, 0.187019055923447, 0.1861725885961205] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [34, 23, 0]]
** centroid: 1, normalized-entropy: 0.9729661265889024, [(1, 34), (2, 23)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 88, 15]]
** centroid: 2, normalized-entropy: 0.5987981837442868, [(2, 88), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 38, 0]]
** centroid: 3, normalized-entropy: 0.9884374283487116, [(1, 49), (2, 38)]
*** center 4: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [73, 1, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [41, 21, 0]]
** centroid: 7, normalized-entropy: 0.9235785996175947, [(1, 41), (2, 21)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22086417023092508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22086417023092508, 0.2033462598361075] ***
*** starting iteration: 2; err: [Inf, 0.22086417023092508, 0.2033462598361075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22086417023092508, 0.2033462598361075, 0.2004532015719451] ***
*** starting iteration: 3; err: [Inf, 0.22086417023092508, 0.2033462598361075, 0.2004532015719451] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22086417023092508, 0.2033462598361075, 0.2004532015719451, 0.19863247450068594] ***
*** starting iteration: 4; err: [Inf, 0.22086417023092508, 0.2033462598361075, 0.2004532015719451, 0.19863247450068594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22086417023092508, 0.2033462598361075, 0.2004532015719451, 0.19863247450068594, 0.19795068596303464] ***
*** finished computation of 7 references, err: [Inf, 0.22086417023092508, 0.2033462598361075, 0.2004532015719451, 0.19863247450068594, 0.19795068596303464] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [12, 67, 0]]
** centroid: 1, normalized-entropy: 0.6145715612236268, [(1, 12), (2, 67)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [60, 54, 0]]
** centroid: 2, normalized-entropy: 0.9980008838722993, [(1, 60), (2, 54)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [29, 9, 0]]
** centroid: 3, normalized-entropy: 0.7897492536625221, [(1, 29), (2, 9)]
*** center 4: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 56, 19]]
** centroid: 7, normalized-entropy: 0.8165187119538281, [(2, 56), (3, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2342657754002139] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2342657754002139, 0.19936031106486918] ***
*** starting iteration: 2; err: [Inf, 0.2342657754002139, 0.19936031106486918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2342657754002139, 0.19936031106486918, 0.18348239730298518] ***
*** starting iteration: 3; err: [Inf, 0.2342657754002139, 0.19936031106486918, 0.18348239730298518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2342657754002139, 0.19936031106486918, 0.18348239730298518, 0.18144387922948227] ***
*** starting iteration: 4; err: [Inf, 0.2342657754002139, 0.19936031106486918, 0.18348239730298518, 0.18144387922948227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2342657754002139, 0.19936031106486918, 0.18348239730298518, 0.18144387922948227, 0.18117784967459738] ***
*** finished computation of 7 references, err: [Inf, 0.2342657754002139, 0.19936031106486918, 0.18348239730298518, 0.18144387922948227, 0.18117784967459738] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [42, 16, 0]]
** centroid: 1, normalized-entropy: 0.8497511372532974, [(1, 42), (2, 16)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [50, 39, 0]]
** centroid: 2, normalized-entropy: 0.9889525767600615, [(1, 50), (2, 39)]
*** center 3: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 45, 14]]
** centroid: 4, normalized-entropy: 0.7905013842153699, [(2, 45), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [52, 9, 0]]
** centroid: 5, normalized-entropy: 0.603652249754401, [(1, 52), (2, 9)]
*** center 6: selecting labels [1] (freq >= 2) [from [82, 1, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 76, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20819541232101618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20819541232101618, 0.18751074665412307] ***
*** starting iteration: 2; err: [Inf, 0.20819541232101618, 0.18751074665412307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20819541232101618, 0.18751074665412307, 0.18464466672996058] ***
*** starting iteration: 3; err: [Inf, 0.20819541232101618, 0.18751074665412307, 0.18464466672996058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20819541232101618, 0.18751074665412307, 0.18464466672996058, 0.18401077472418548] ***
*** finished computation of 7 references, err: [Inf, 0.20819541232101618, 0.18751074665412307, 0.18464466672996058, 0.18401077472418548] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [73, 2, 0]]
** centroid: 1, normalized-entropy: 0.1773894531859976, [(1, 73), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [11, 59, 0]]
** centroid: 3, normalized-entropy: 0.6274303352684106, [(1, 11), (2, 59)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 44, 15]]
** centroid: 4, normalized-entropy: 0.8179252501386403, [(2, 44), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [47, 10, 0]]
** centroid: 5, normalized-entropy: 0.6699960320994334, [(1, 47), (2, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [12, 63, 0]]
** centroid: 7, normalized-entropy: 0.634309554640566, [(1, 12), (2, 63)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23691204091720283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23691204091720283, 0.19732335043791682] ***
*** starting iteration: 2; err: [Inf, 0.23691204091720283, 0.19732335043791682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23691204091720283, 0.19732335043791682, 0.1937362155392766] ***
*** starting iteration: 3; err: [Inf, 0.23691204091720283, 0.19732335043791682, 0.1937362155392766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23691204091720283, 0.19732335043791682, 0.1937362155392766, 0.1905053200861439] ***
*** starting iteration: 4; err: [Inf, 0.23691204091720283, 0.19732335043791682, 0.1937362155392766, 0.1905053200861439] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23691204091720283, 0.19732335043791682, 0.1937362155392766, 0.1905053200861439, 0.18705190642923117] ***
*** starting iteration: 5; err: [Inf, 0.23691204091720283, 0.19732335043791682, 0.1937362155392766, 0.1905053200861439, 0.18705190642923117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23691204091720283, 0.19732335043791682, 0.1937362155392766, 0.1905053200861439, 0.18705190642923117, 0.18567256565205753] ***
*** starting iteration: 6; err: [Inf, 0.23691204091720283, 0.19732335043791682, 0.1937362155392766, 0.1905053200861439, 0.18705190642923117, 0.18567256565205753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23691204091720283, 0.19732335043791682, 0.1937362155392766, 0.1905053200861439, 0.18705190642923117, 0.18567256565205753, 0.18533138505928218] ***
*** finished computation of 7 references, err: [Inf, 0.23691204091720283, 0.19732335043791682, 0.1937362155392766, 0.1905053200861439, 0.18705190642923117, 0.18567256565205753, 0.18533138505928218] ***
*** center 1: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 19]]
** centroid: 2, normalized-entropy: 0.978070970973496, [(2, 27), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [17, 72, 0]]
** centroid: 3, normalized-entropy: 0.7035821005719904, [(1, 17), (2, 72)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [54, 4, 0]]
** centroid: 4, normalized-entropy: 0.36205125173399805, [(1, 54), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [62, 8, 0]]
** centroid: 5, normalized-entropy: 0.5127091420308771, [(1, 62), (2, 8)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [5, 69, 0]]
** centroid: 6, normalized-entropy: 0.35678001438394347, [(1, 5), (2, 69)]
*** center 7: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2467641470376402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2467641470376402, 0.20551997327432037] ***
*** starting iteration: 2; err: [Inf, 0.2467641470376402, 0.20551997327432037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2467641470376402, 0.20551997327432037, 0.19606049710232765] ***
*** starting iteration: 3; err: [Inf, 0.2467641470376402, 0.20551997327432037, 0.19606049710232765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2467641470376402, 0.20551997327432037, 0.19606049710232765, 0.1920324446707964] ***
*** starting iteration: 4; err: [Inf, 0.2467641470376402, 0.20551997327432037, 0.19606049710232765, 0.1920324446707964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2467641470376402, 0.20551997327432037, 0.19606049710232765, 0.1920324446707964, 0.19077992518618703] ***
*** starting iteration: 5; err: [Inf, 0.2467641470376402, 0.20551997327432037, 0.19606049710232765, 0.1920324446707964, 0.19077992518618703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2467641470376402, 0.20551997327432037, 0.19606049710232765, 0.1920324446707964, 0.19077992518618703, 0.18932244435232132] ***
*** starting iteration: 6; err: [Inf, 0.2467641470376402, 0.20551997327432037, 0.19606049710232765, 0.1920324446707964, 0.19077992518618703, 0.18932244435232132] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2467641470376402, 0.20551997327432037, 0.19606049710232765, 0.1920324446707964, 0.19077992518618703, 0.18932244435232132, 0.18876609934587033] ***
*** finished computation of 7 references, err: [Inf, 0.2467641470376402, 0.20551997327432037, 0.19606049710232765, 0.1920324446707964, 0.19077992518618703, 0.18932244435232132, 0.18876609934587033] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 79, 17]]
** centroid: 1, normalized-entropy: 0.673654715229001, [(2, 79), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [46, 28, 0]]
** centroid: 3, normalized-entropy: 0.9568886656798214, [(1, 46), (2, 28)]
*** center 4: selecting labels [1] (freq >= 2) [from [44, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [72, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [45, 36, 0]]
** centroid: 6, normalized-entropy: 0.9910760598382222, [(1, 45), (2, 36)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [52, 33, 0]]
** centroid: 7, normalized-entropy: 0.9636512739945752, [(1, 52), (2, 33)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22182388903945685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22182388903945685, 0.1922432303810492] ***
*** starting iteration: 2; err: [Inf, 0.22182388903945685, 0.1922432303810492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22182388903945685, 0.1922432303810492, 0.18862362654227763] ***
*** starting iteration: 3; err: [Inf, 0.22182388903945685, 0.1922432303810492, 0.18862362654227763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22182388903945685, 0.1922432303810492, 0.18862362654227763, 0.18661377177014946] ***
*** starting iteration: 4; err: [Inf, 0.22182388903945685, 0.1922432303810492, 0.18862362654227763, 0.18661377177014946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22182388903945685, 0.1922432303810492, 0.18862362654227763, 0.18661377177014946, 0.18605218616779895] ***
*** finished computation of 7 references, err: [Inf, 0.22182388903945685, 0.1922432303810492, 0.18862362654227763, 0.18661377177014946, 0.18605218616779895] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [51, 4, 0]]
** centroid: 1, normalized-entropy: 0.37601985096927276, [(1, 51), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [64, 9, 0]]
** centroid: 2, normalized-entropy: 0.5387379148665815, [(1, 64), (2, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 38, 16]]
** centroid: 3, normalized-entropy: 0.876716288999464, [(2, 38), (3, 16)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [18, 63, 0]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(1, 18), (2, 63)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [5, 67, 0]]
** centroid: 5, normalized-entropy: 0.3638469981769295, [(1, 5), (2, 67)]
*** center 6: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24722787882760167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24722787882760167, 0.20734793410543353] ***
*** starting iteration: 2; err: [Inf, 0.24722787882760167, 0.20734793410543353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24722787882760167, 0.20734793410543353, 0.19385430864105002] ***
*** starting iteration: 3; err: [Inf, 0.24722787882760167, 0.20734793410543353, 0.19385430864105002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24722787882760167, 0.20734793410543353, 0.19385430864105002, 0.19125615466944873] ***
*** starting iteration: 4; err: [Inf, 0.24722787882760167, 0.20734793410543353, 0.19385430864105002, 0.19125615466944873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24722787882760167, 0.20734793410543353, 0.19385430864105002, 0.19125615466944873, 0.19080385388527066] ***
*** finished computation of 7 references, err: [Inf, 0.24722787882760167, 0.20734793410543353, 0.19385430864105002, 0.19125615466944873, 0.19080385388527066] ***
*** center 1: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [48, 9, 0]]
** centroid: 2, normalized-entropy: 0.6292492238560344, [(1, 48), (2, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [50, 43, 0]]
** centroid: 4, normalized-entropy: 0.9959094138937685, [(1, 50), (2, 43)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 46, 19]]
** centroid: 5, normalized-entropy: 0.871683617119982, [(2, 46), (3, 19)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 58, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [21, 34, 0]]
** centroid: 7, normalized-entropy: 0.9593160320543779, [(1, 21), (2, 34)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22766794195584952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22766794195584952, 0.19364942866005003] ***
*** starting iteration: 2; err: [Inf, 0.22766794195584952, 0.19364942866005003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22766794195584952, 0.19364942866005003, 0.19045486895740033] ***
*** starting iteration: 3; err: [Inf, 0.22766794195584952, 0.19364942866005003, 0.19045486895740033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22766794195584952, 0.19364942866005003, 0.19045486895740033, 0.18808833179809153] ***
*** starting iteration: 4; err: [Inf, 0.22766794195584952, 0.19364942866005003, 0.19045486895740033, 0.18808833179809153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22766794195584952, 0.19364942866005003, 0.19045486895740033, 0.18808833179809153, 0.1870109029272571] ***
*** starting iteration: 5; err: [Inf, 0.22766794195584952, 0.19364942866005003, 0.19045486895740033, 0.18808833179809153, 0.1870109029272571] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22766794195584952, 0.19364942866005003, 0.19045486895740033, 0.18808833179809153, 0.1870109029272571, 0.18550690646469592] ***
*** starting iteration: 6; err: [Inf, 0.22766794195584952, 0.19364942866005003, 0.19045486895740033, 0.18808833179809153, 0.1870109029272571, 0.18550690646469592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22766794195584952, 0.19364942866005003, 0.19045486895740033, 0.18808833179809153, 0.1870109029272571, 0.18550690646469592, 0.18471142355538905] ***
*** finished computation of 7 references, err: [Inf, 0.22766794195584952, 0.19364942866005003, 0.19045486895740033, 0.18808833179809153, 0.1870109029272571, 0.18550690646469592, 0.18471142355538905] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [54, 9, 0]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(1, 54), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 3, 0]]
** centroid: 2, normalized-entropy: 0.2667649878030262, [(1, 63), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 64, 15]]
** centroid: 3, normalized-entropy: 0.7012065844539666, [(2, 64), (3, 15)]
*** center 4: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [4, 82, 0]]
** centroid: 5, normalized-entropy: 0.2713895875081112, [(1, 4), (2, 82)]
*** center 6: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [41, 29, 0]]
** centroid: 7, normalized-entropy: 0.9786961448300948, [(1, 41), (2, 29)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28972617946192625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28972617946192625, 0.21846206713095306] ***
*** starting iteration: 2; err: [Inf, 0.28972617946192625, 0.21846206713095306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28972617946192625, 0.21846206713095306, 0.19922709705494343] ***
*** starting iteration: 3; err: [Inf, 0.28972617946192625, 0.21846206713095306, 0.19922709705494343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28972617946192625, 0.21846206713095306, 0.19922709705494343, 0.19050194658525288] ***
*** starting iteration: 4; err: [Inf, 0.28972617946192625, 0.21846206713095306, 0.19922709705494343, 0.19050194658525288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28972617946192625, 0.21846206713095306, 0.19922709705494343, 0.19050194658525288, 0.1888307783380151] ***
*** starting iteration: 5; err: [Inf, 0.28972617946192625, 0.21846206713095306, 0.19922709705494343, 0.19050194658525288, 0.1888307783380151] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28972617946192625, 0.21846206713095306, 0.19922709705494343, 0.19050194658525288, 0.1888307783380151, 0.18846242043888195] ***
*** finished computation of 7 references, err: [Inf, 0.28972617946192625, 0.21846206713095306, 0.19922709705494343, 0.19050194658525288, 0.1888307783380151, 0.18846242043888195] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 44, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 82, 17]]
** centroid: 2, normalized-entropy: 0.6616179061408356, [(2, 82), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [45, 23, 0]]
** centroid: 3, normalized-entropy: 0.9231199835423002, [(1, 45), (2, 23)]
*** center 4: selecting labels [1] (freq >= 2) [from [66, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [22, 44, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 22), (2, 44)]
*** center 6: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2596145967957564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596145967957564, 0.20464551064930855] ***
*** starting iteration: 2; err: [Inf, 0.2596145967957564, 0.20464551064930855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596145967957564, 0.20464551064930855, 0.19876616812497377] ***
*** starting iteration: 3; err: [Inf, 0.2596145967957564, 0.20464551064930855, 0.19876616812497377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596145967957564, 0.20464551064930855, 0.19876616812497377, 0.1953042520992458] ***
*** starting iteration: 4; err: [Inf, 0.2596145967957564, 0.20464551064930855, 0.19876616812497377, 0.1953042520992458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596145967957564, 0.20464551064930855, 0.19876616812497377, 0.1953042520992458, 0.19273943281453104] ***
*** starting iteration: 5; err: [Inf, 0.2596145967957564, 0.20464551064930855, 0.19876616812497377, 0.1953042520992458, 0.19273943281453104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596145967957564, 0.20464551064930855, 0.19876616812497377, 0.1953042520992458, 0.19273943281453104, 0.1912062986679375] ***
*** starting iteration: 6; err: [Inf, 0.2596145967957564, 0.20464551064930855, 0.19876616812497377, 0.1953042520992458, 0.19273943281453104, 0.1912062986679375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596145967957564, 0.20464551064930855, 0.19876616812497377, 0.1953042520992458, 0.19273943281453104, 0.1912062986679375, 0.18966696501895786] ***
*** starting iteration: 7; err: [Inf, 0.2596145967957564, 0.20464551064930855, 0.19876616812497377, 0.1953042520992458, 0.19273943281453104, 0.1912062986679375, 0.18966696501895786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596145967957564, 0.20464551064930855, 0.19876616812497377, 0.1953042520992458, 0.19273943281453104, 0.1912062986679375, 0.18966696501895786, 0.18799775470141322] ***
*** starting iteration: 8; err: [Inf, 0.2596145967957564, 0.20464551064930855, 0.19876616812497377, 0.1953042520992458, 0.19273943281453104, 0.1912062986679375, 0.18966696501895786, 0.18799775470141322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596145967957564, 0.20464551064930855, 0.19876616812497377, 0.1953042520992458, 0.19273943281453104, 0.1912062986679375, 0.18966696501895786, 0.18799775470141322, 0.18706737194769085] ***
*** finished computation of 7 references, err: [Inf, 0.2596145967957564, 0.20464551064930855, 0.19876616812497377, 0.1953042520992458, 0.19273943281453104, 0.1912062986679375, 0.18966696501895786, 0.18799775470141322, 0.18706737194769085] ***
*** center 1: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [29, 30, 0]]
** centroid: 2, normalized-entropy: 0.9997927658541268, [(1, 29), (2, 30)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [41, 33, 0]]
** centroid: 3, normalized-entropy: 0.9915528503834039, [(1, 41), (2, 33)]
*** center 4: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 87, 16]]
** centroid: 6, normalized-entropy: 0.6230433996216712, [(2, 87), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [71, 15, 0]]
** centroid: 7, normalized-entropy: 0.6677135405281421, [(1, 71), (2, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2708545600064099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2708545600064099, 0.20318695191293956] ***
*** starting iteration: 2; err: [Inf, 0.2708545600064099, 0.20318695191293956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2708545600064099, 0.20318695191293956, 0.1962908244151622] ***
*** starting iteration: 3; err: [Inf, 0.2708545600064099, 0.20318695191293956, 0.1962908244151622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2708545600064099, 0.20318695191293956, 0.1962908244151622, 0.191820862528868] ***
*** starting iteration: 4; err: [Inf, 0.2708545600064099, 0.20318695191293956, 0.1962908244151622, 0.191820862528868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2708545600064099, 0.20318695191293956, 0.1962908244151622, 0.191820862528868, 0.18795965239778162] ***
*** starting iteration: 5; err: [Inf, 0.2708545600064099, 0.20318695191293956, 0.1962908244151622, 0.191820862528868, 0.18795965239778162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2708545600064099, 0.20318695191293956, 0.1962908244151622, 0.191820862528868, 0.18795965239778162, 0.18668528515286745] ***
*** starting iteration: 6; err: [Inf, 0.2708545600064099, 0.20318695191293956, 0.1962908244151622, 0.191820862528868, 0.18795965239778162, 0.18668528515286745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2708545600064099, 0.20318695191293956, 0.1962908244151622, 0.191820862528868, 0.18795965239778162, 0.18668528515286745, 0.1864982547722757] ***
*** finished computation of 7 references, err: [Inf, 0.2708545600064099, 0.20318695191293956, 0.1962908244151622, 0.191820862528868, 0.18795965239778162, 0.18668528515286745, 0.1864982547722757] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 56, 19]]
** centroid: 1, normalized-entropy: 0.8165187119538281, [(2, 56), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [90, 1, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [30, 21, 0]]
** centroid: 3, normalized-entropy: 0.9774178175281716, [(1, 30), (2, 21)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [58, 15, 0]]
** centroid: 4, normalized-entropy: 0.7327525499549903, [(1, 58), (2, 15)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 56, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [42, 25, 0]]
** centroid: 7, normalized-entropy: 0.9530483471581301, [(1, 42), (2, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21157491694577038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21157491694577038, 0.19216972550749778] ***
*** starting iteration: 2; err: [Inf, 0.21157491694577038, 0.19216972550749778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21157491694577038, 0.19216972550749778, 0.19137996008619665] ***
*** finished computation of 7 references, err: [Inf, 0.21157491694577038, 0.19216972550749778, 0.19137996008619665] ***
*** center 1: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [8, 71, 0]]
** centroid: 2, normalized-entropy: 0.47299536229314826, [(1, 8), (2, 71)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [73, 15, 0]]
** centroid: 3, normalized-entropy: 0.6587435307694671, [(1, 73), (2, 15)]
*** center 4: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 51, 12]]
** centroid: 5, normalized-entropy: 0.7024665512903904, [(2, 51), (3, 12)]
*** center 6: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [33, 32, 0]]
** centroid: 7, normalized-entropy: 0.9998292601233937, [(1, 33), (2, 32)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2472038261992857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2472038261992857, 0.21402292989566923] ***
*** starting iteration: 2; err: [Inf, 0.2472038261992857, 0.21402292989566923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2472038261992857, 0.21402292989566923, 0.20413249463215472] ***
*** starting iteration: 3; err: [Inf, 0.2472038261992857, 0.21402292989566923, 0.20413249463215472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2472038261992857, 0.21402292989566923, 0.20413249463215472, 0.19782142364419997] ***
*** starting iteration: 4; err: [Inf, 0.2472038261992857, 0.21402292989566923, 0.20413249463215472, 0.19782142364419997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2472038261992857, 0.21402292989566923, 0.20413249463215472, 0.19782142364419997, 0.19103364481776952] ***
*** starting iteration: 5; err: [Inf, 0.2472038261992857, 0.21402292989566923, 0.20413249463215472, 0.19782142364419997, 0.19103364481776952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2472038261992857, 0.21402292989566923, 0.20413249463215472, 0.19782142364419997, 0.19103364481776952, 0.1888656186601147] ***
*** starting iteration: 6; err: [Inf, 0.2472038261992857, 0.21402292989566923, 0.20413249463215472, 0.19782142364419997, 0.19103364481776952, 0.1888656186601147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2472038261992857, 0.21402292989566923, 0.20413249463215472, 0.19782142364419997, 0.19103364481776952, 0.1888656186601147, 0.18784688502456992] ***
*** starting iteration: 7; err: [Inf, 0.2472038261992857, 0.21402292989566923, 0.20413249463215472, 0.19782142364419997, 0.19103364481776952, 0.1888656186601147, 0.18784688502456992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2472038261992857, 0.21402292989566923, 0.20413249463215472, 0.19782142364419997, 0.19103364481776952, 0.1888656186601147, 0.18784688502456992, 0.18722285770624875] ***
*** finished computation of 7 references, err: [Inf, 0.2472038261992857, 0.21402292989566923, 0.20413249463215472, 0.19782142364419997, 0.19103364481776952, 0.1888656186601147, 0.18784688502456992, 0.18722285770624875] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [19, 40, 0]]
** centroid: 1, normalized-entropy: 0.9065795484987461, [(1, 19), (2, 40)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 19, 0]]
** centroid: 2, normalized-entropy: 0.9357110512652843, [(1, 35), (2, 19)]
*** center 3: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [41, 31, 0]]
** centroid: 4, normalized-entropy: 0.9860400318404435, [(1, 41), (2, 31)]
*** center 5: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 87, 18]]
** centroid: 7, normalized-entropy: 0.6609623351442084, [(2, 87), (3, 18)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3213273407407105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3213273407407105, 0.22565064622275532] ***
*** starting iteration: 2; err: [Inf, 0.3213273407407105, 0.22565064622275532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3213273407407105, 0.22565064622275532, 0.2071407961025834] ***
*** starting iteration: 3; err: [Inf, 0.3213273407407105, 0.22565064622275532, 0.2071407961025834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3213273407407105, 0.22565064622275532, 0.2071407961025834, 0.19622965785954147] ***
*** starting iteration: 4; err: [Inf, 0.3213273407407105, 0.22565064622275532, 0.2071407961025834, 0.19622965785954147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3213273407407105, 0.22565064622275532, 0.2071407961025834, 0.19622965785954147, 0.19199659283086656] ***
*** starting iteration: 5; err: [Inf, 0.3213273407407105, 0.22565064622275532, 0.2071407961025834, 0.19622965785954147, 0.19199659283086656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3213273407407105, 0.22565064622275532, 0.2071407961025834, 0.19622965785954147, 0.19199659283086656, 0.1899660963714123] ***
*** starting iteration: 6; err: [Inf, 0.3213273407407105, 0.22565064622275532, 0.2071407961025834, 0.19622965785954147, 0.19199659283086656, 0.1899660963714123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3213273407407105, 0.22565064622275532, 0.2071407961025834, 0.19622965785954147, 0.19199659283086656, 0.1899660963714123, 0.18760852207429707] ***
*** starting iteration: 7; err: [Inf, 0.3213273407407105, 0.22565064622275532, 0.2071407961025834, 0.19622965785954147, 0.19199659283086656, 0.1899660963714123, 0.18760852207429707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3213273407407105, 0.22565064622275532, 0.2071407961025834, 0.19622965785954147, 0.19199659283086656, 0.1899660963714123, 0.18760852207429707, 0.18669561783969402] ***
*** finished computation of 7 references, err: [Inf, 0.3213273407407105, 0.22565064622275532, 0.2071407961025834, 0.19622965785954147, 0.19199659283086656, 0.1899660963714123, 0.18760852207429707, 0.18669561783969402] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [63, 22, 0]]
** centroid: 1, normalized-entropy: 0.8249658680139929, [(1, 63), (2, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [53, 10, 0]]
** centroid: 2, normalized-entropy: 0.6312630180916119, [(1, 53), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 67, 15]]
** centroid: 3, normalized-entropy: 0.6864381668766382, [(2, 67), (3, 15)]
*** center 4: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [58, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 85, 0]]
** centroid: 6, normalized-entropy: 0.35056382068186565, [(1, 6), (2, 85)]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21848438915982843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21848438915982843, 0.19623789487034082] ***
*** starting iteration: 2; err: [Inf, 0.21848438915982843, 0.19623789487034082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21848438915982843, 0.19623789487034082, 0.19274396432563662] ***
*** starting iteration: 3; err: [Inf, 0.21848438915982843, 0.19623789487034082, 0.19274396432563662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21848438915982843, 0.19623789487034082, 0.19274396432563662, 0.18780220974609255] ***
*** starting iteration: 4; err: [Inf, 0.21848438915982843, 0.19623789487034082, 0.19274396432563662, 0.18780220974609255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21848438915982843, 0.19623789487034082, 0.19274396432563662, 0.18780220974609255, 0.18563999911025167] ***
*** starting iteration: 5; err: [Inf, 0.21848438915982843, 0.19623789487034082, 0.19274396432563662, 0.18780220974609255, 0.18563999911025167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21848438915982843, 0.19623789487034082, 0.19274396432563662, 0.18780220974609255, 0.18563999911025167, 0.18464188926294445] ***
*** finished computation of 7 references, err: [Inf, 0.21848438915982843, 0.19623789487034082, 0.19274396432563662, 0.18780220974609255, 0.18563999911025167, 0.18464188926294445] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 68, 14]]
** centroid: 1, normalized-entropy: 0.6593758812786991, [(2, 68), (3, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [49, 34, 0]]
** centroid: 2, normalized-entropy: 0.9763102872004581, [(1, 49), (2, 34)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [46, 23, 0]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(1, 46), (2, 23)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [57, 5, 0]]
** centroid: 7, normalized-entropy: 0.4044483864864384, [(1, 57), (2, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24466883445624263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24466883445624263, 0.20831034201011062] ***
*** starting iteration: 2; err: [Inf, 0.24466883445624263, 0.20831034201011062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24466883445624263, 0.20831034201011062, 0.201335518989712] ***
*** starting iteration: 3; err: [Inf, 0.24466883445624263, 0.20831034201011062, 0.201335518989712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24466883445624263, 0.20831034201011062, 0.201335518989712, 0.1986095129903406] ***
*** starting iteration: 4; err: [Inf, 0.24466883445624263, 0.20831034201011062, 0.201335518989712, 0.1986095129903406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24466883445624263, 0.20831034201011062, 0.201335518989712, 0.1986095129903406, 0.1944030072838068] ***
*** starting iteration: 5; err: [Inf, 0.24466883445624263, 0.20831034201011062, 0.201335518989712, 0.1986095129903406, 0.1944030072838068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24466883445624263, 0.20831034201011062, 0.201335518989712, 0.1986095129903406, 0.1944030072838068, 0.18920758835412563] ***
*** starting iteration: 6; err: [Inf, 0.24466883445624263, 0.20831034201011062, 0.201335518989712, 0.1986095129903406, 0.1944030072838068, 0.18920758835412563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24466883445624263, 0.20831034201011062, 0.201335518989712, 0.1986095129903406, 0.1944030072838068, 0.18920758835412563, 0.1876610057298094] ***
*** starting iteration: 7; err: [Inf, 0.24466883445624263, 0.20831034201011062, 0.201335518989712, 0.1986095129903406, 0.1944030072838068, 0.18920758835412563, 0.1876610057298094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24466883445624263, 0.20831034201011062, 0.201335518989712, 0.1986095129903406, 0.1944030072838068, 0.18920758835412563, 0.1876610057298094, 0.18717333295941352] ***
*** finished computation of 7 references, err: [Inf, 0.24466883445624263, 0.20831034201011062, 0.201335518989712, 0.1986095129903406, 0.1944030072838068, 0.18920758835412563, 0.1876610057298094, 0.18717333295941352] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 55, 18]]
** centroid: 1, normalized-entropy: 0.8058049113482652, [(2, 55), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [46, 22, 0]]
** centroid: 5, normalized-entropy: 0.9081783472997053, [(1, 46), (2, 22)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [45, 43, 0]]
** centroid: 6, normalized-entropy: 0.9996273710574612, [(1, 45), (2, 43)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [8, 66, 0]]
** centroid: 7, normalized-entropy: 0.4941829348497886, [(1, 8), (2, 66)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27355738246347755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27355738246347755, 0.2100810211924836] ***
*** starting iteration: 2; err: [Inf, 0.27355738246347755, 0.2100810211924836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27355738246347755, 0.2100810211924836, 0.19829352842550724] ***
*** starting iteration: 3; err: [Inf, 0.27355738246347755, 0.2100810211924836, 0.19829352842550724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27355738246347755, 0.2100810211924836, 0.19829352842550724, 0.19033643186092378] ***
*** starting iteration: 4; err: [Inf, 0.27355738246347755, 0.2100810211924836, 0.19829352842550724, 0.19033643186092378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27355738246347755, 0.2100810211924836, 0.19829352842550724, 0.19033643186092378, 0.18680786544270814] ***
*** starting iteration: 5; err: [Inf, 0.27355738246347755, 0.2100810211924836, 0.19829352842550724, 0.19033643186092378, 0.18680786544270814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27355738246347755, 0.2100810211924836, 0.19829352842550724, 0.19033643186092378, 0.18680786544270814, 0.18462895343080163] ***
*** starting iteration: 6; err: [Inf, 0.27355738246347755, 0.2100810211924836, 0.19829352842550724, 0.19033643186092378, 0.18680786544270814, 0.18462895343080163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27355738246347755, 0.2100810211924836, 0.19829352842550724, 0.19033643186092378, 0.18680786544270814, 0.18462895343080163, 0.18368911225907505] ***
*** finished computation of 7 references, err: [Inf, 0.27355738246347755, 0.2100810211924836, 0.19829352842550724, 0.19033643186092378, 0.18680786544270814, 0.18462895343080163, 0.18368911225907505] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 64, 18]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 64), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [35, 38, 0]]
** centroid: 4, normalized-entropy: 0.998781393072756, [(1, 35), (2, 38)]
*** center 5: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [36, 31, 0]]
** centroid: 6, normalized-entropy: 0.995978956518722, [(1, 36), (2, 31)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [22, 49, 0]]
** centroid: 7, normalized-entropy: 0.893010810044601, [(1, 22), (2, 49)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24668269684351982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24668269684351982, 0.20395953373424708] ***
*** starting iteration: 2; err: [Inf, 0.24668269684351982, 0.20395953373424708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24668269684351982, 0.20395953373424708, 0.19474328526295723] ***
*** starting iteration: 3; err: [Inf, 0.24668269684351982, 0.20395953373424708, 0.19474328526295723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24668269684351982, 0.20395953373424708, 0.19474328526295723, 0.1905588021054864] ***
*** starting iteration: 4; err: [Inf, 0.24668269684351982, 0.20395953373424708, 0.19474328526295723, 0.1905588021054864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24668269684351982, 0.20395953373424708, 0.19474328526295723, 0.1905588021054864, 0.18541599981114268] ***
*** starting iteration: 5; err: [Inf, 0.24668269684351982, 0.20395953373424708, 0.19474328526295723, 0.1905588021054864, 0.18541599981114268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24668269684351982, 0.20395953373424708, 0.19474328526295723, 0.1905588021054864, 0.18541599981114268, 0.18305233712960034] ***
*** starting iteration: 6; err: [Inf, 0.24668269684351982, 0.20395953373424708, 0.19474328526295723, 0.1905588021054864, 0.18541599981114268, 0.18305233712960034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24668269684351982, 0.20395953373424708, 0.19474328526295723, 0.1905588021054864, 0.18541599981114268, 0.18305233712960034, 0.18264605304412543] ***
*** finished computation of 7 references, err: [Inf, 0.24668269684351982, 0.20395953373424708, 0.19474328526295723, 0.1905588021054864, 0.18541599981114268, 0.18305233712960034, 0.18264605304412543] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [41, 24, 0]]
** centroid: 1, normalized-entropy: 0.9500796252338518, [(1, 41), (2, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 53, 18]]
** centroid: 3, normalized-entropy: 0.8168114277045246, [(2, 53), (3, 18)]
*** center 4: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [1, 51, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [24, 42, 0]]
** centroid: 6, normalized-entropy: 0.9456603046006401, [(1, 24), (2, 42)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [88, 2, 0]]
** centroid: 7, normalized-entropy: 0.1537421803287618, [(1, 88), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2866327989259735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2866327989259735, 0.20681288993451744] ***
*** starting iteration: 2; err: [Inf, 0.2866327989259735, 0.20681288993451744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786] ***
*** starting iteration: 3; err: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786, 0.19277830672264099] ***
*** starting iteration: 4; err: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786, 0.19277830672264099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786, 0.19277830672264099, 0.18865269308257848] ***
*** starting iteration: 5; err: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786, 0.19277830672264099, 0.18865269308257848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786, 0.19277830672264099, 0.18865269308257848, 0.18684412586316465] ***
*** starting iteration: 6; err: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786, 0.19277830672264099, 0.18865269308257848, 0.18684412586316465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786, 0.19277830672264099, 0.18865269308257848, 0.18684412586316465, 0.1852383203431964] ***
*** starting iteration: 7; err: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786, 0.19277830672264099, 0.18865269308257848, 0.18684412586316465, 0.1852383203431964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786, 0.19277830672264099, 0.18865269308257848, 0.18684412586316465, 0.1852383203431964, 0.18395384061522782] ***
*** starting iteration: 8; err: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786, 0.19277830672264099, 0.18865269308257848, 0.18684412586316465, 0.1852383203431964, 0.18395384061522782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786, 0.19277830672264099, 0.18865269308257848, 0.18684412586316465, 0.1852383203431964, 0.18395384061522782, 0.18271059327945113] ***
*** starting iteration: 9; err: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786, 0.19277830672264099, 0.18865269308257848, 0.18684412586316465, 0.1852383203431964, 0.18395384061522782, 0.18271059327945113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786, 0.19277830672264099, 0.18865269308257848, 0.18684412586316465, 0.1852383203431964, 0.18395384061522782, 0.18271059327945113, 0.18224679549410938] ***
*** finished computation of 7 references, err: [Inf, 0.2866327989259735, 0.20681288993451744, 0.19807084361463786, 0.19277830672264099, 0.18865269308257848, 0.18684412586316465, 0.1852383203431964, 0.18395384061522782, 0.18271059327945113, 0.18224679549410938] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [50, 39, 0]]
** centroid: 1, normalized-entropy: 0.9889525767600615, [(1, 50), (2, 39)]
*** center 2: selecting labels [1] (freq >= 2) [from [67, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 64, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [50, 13, 0]]
** centroid: 6, normalized-entropy: 0.7344461802527668, [(1, 50), (2, 13)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 44, 21]]
** centroid: 7, normalized-entropy: 0.9076961653608385, [(2, 44), (3, 21)]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 361,3 => 33,1 => 606), Dict(2 => 370,3 => 35,1 => 595))
[ Info: ===== scores for single classifier: {"micro_f1":0.917,"precision":0.917,"recall":0.917,"macro_recall":0.938511620864562,"macro_f1":0.8451568657812553,"accuracy":0.917,"class_f1":{"2":0.8870748299319728,"3":0.693069306930693,"1":0.9553264604810997},"class_precision":{"2":0.8931506849315068,"3":0.5303030303030303,"1":0.9771528998242531},"class_recall":{"2":0.8810810810810811,"3":1.0,"1":0.934453781512605}}
[ Info: ===== scores for 1: {"micro_f1":0.964,"precision":0.964,"recall":0.964,"macro_recall":0.9609887198122493,"macro_f1":0.9441669596291313,"accuracy":0.964,"class_f1":{"2":0.9498607242339834,"3":0.9066666666666667,"1":0.9759734879867439},"class_precision":{"2":0.9798850574712644,"3":0.85,"1":0.9624183006535948},"class_recall":{"2":0.9216216216216216,"3":0.9714285714285714,"1":0.9899159663865547}}
[ Info: ===== scores for 5: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9618896207131501,"macro_f1":0.93070468369868,"accuracy":0.965,"class_f1":{"2":0.9513212795549374,"3":0.8607594936708862,"1":0.9800332778702162},"class_precision":{"2":0.9799426934097422,"3":0.7727272727272727,"1":0.9703459637561779},"class_recall":{"2":0.9243243243243243,"3":0.9714285714285714,"1":0.9899159663865547}}
[ Info: ===== scores for 7: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.9639109697933227,"macro_f1":0.936318067140118,"accuracy":0.968,"class_f1":{"2":0.9554317548746517,"3":0.8717948717948717,"1":0.9817275747508305},"class_precision":{"2":0.985632183908046,"3":0.7906976744186046,"1":0.9704433497536946},"class_recall":{"2":0.927027027027027,"3":0.9714285714285714,"1":0.9932773109243698}}
[ Info: ===== scores for 9: {"micro_f1":0.969,"precision":0.969,"recall":0.969,"macro_recall":0.9648118706942236,"macro_f1":0.9370743581947144,"accuracy":0.969,"class_f1":{"2":0.956884561891516,"3":0.8717948717948717,"1":0.9825436408977556},"class_precision":{"2":0.9856733524355301,"3":0.7906976744186046,"1":0.9720394736842105},"class_recall":{"2":0.9297297297297298,"3":0.9714285714285714,"1":0.9932773109243698}}
[ Info: ===== scores for 11: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.9672950261185557,"macro_f1":0.9352364421489353,"accuracy":0.971,"class_f1":{"2":0.96,"3":0.8607594936708862,"1":0.9849498327759197},"class_precision":{"2":0.9802816901408451,"3":0.7727272727272727,"1":0.9800332778702163},"class_recall":{"2":0.9405405405405406,"3":0.9714285714285714,"1":0.9899159663865547}}
(score = 0.964, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.958, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.967, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.965, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.969, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.969, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.973,"k":1,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.973,"precision":0.973,"recall":0.973,"macro_recall":0.9684154742978274,"macro_f1":0.9626709697249117,"accuracy":0.973,"class_f1":{"2":0.9626556016597511,"3":0.9444444444444445,"1":0.9809128630705396},"class_precision":{"2":0.9858356940509915,"3":0.918918918918919,"1":0.9688524590163935},"class_recall":{"2":0.9405405405405406,"3":0.9714285714285714,"1":0.9932773109243698}}
Test Summary: | Pass  Total
AKNC          |    8      8
[243, 1, 2, 2, 1, 1, 1, 3, 6, 4, 1, 2, 6, 1, 1, 4, 19, 5, 4, 10, 2, 1, 2, 4, 1, 2, 45, 7, 11, 13, 13, 5, 14, 54, 45, 6, 29, 27, 6, 2, 6, 3, 9, 13, 13, 6, 5, 15, 3, 16, 1, 1, 5, 3, 5, 7, 5, 3, 8, 9, 28, 9, 4, 10, 40, 68, 18, 5, 7, 6, 26, 3, 5, 3, 9, 3, 24, 13, 33, 34, 122, 10, 12, 4, 45, 10, 1, 3, 261, 25, 35, 13, 20, 2, 1, 42, 7, 2, 9, 16, 5, 44, 3, 16, 3, 15, 18, 35, 92, 19, 10, 15, 58, 17, 9, 10, 22, 1, 27, 6, 33, 22, 1, 11, 18, 78, 31, 89, 46, 32, 62, 12, 39, 6, 5, 17, 13, 27, 14, 150, 1, 14, 23, 7, 2, 21, 159, 43, 19, 13, 112, 8, 9, 6, 8, 1, 3, 11, 11, 37, 32, 40, 15, 111, 8, 4, 32, 8, 21, 19, 5, 7, 10, 15, 33, 148, 39, 45, 12, 17, 60, 12, 97, 12, 19, 30, 34, 29, 12, 66, 9, 16, 23, 998, 18, 17, 15, 119, 14, 40, 21, 13, 40, 39, 27, 24, 48, 13, 4, 28, 21, 5, 127, 14, 7, 107, 14, 27, 16, 21, 106, 28, 28, 32, 83, 22, 89, 81, 73, 12, 15, 19, 154, 78, 64, 3, 2, 1, 63, 24, 50, 6, 5, 15, 12, 4, 58, 28, 9, 15, 3, 26, 12, 20, 87, 5, 92, 289, 26, 4, 11, 2, 61, 9, 39, 2, 12, 15, 68, 15, 31, 62, 59, 30, 9, 15, 6, 12, 81, 144, 35, 439, 70, 17, 22, 40, 8, 16, 29, 107, 18, 12, 264, 51, 13, 137, 7, 20, 6, 17]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6489999999999999, speedup = 0.5034225687563366, eval_ratio = 0.075765)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.4079861111111112,"f1":null,"seconds":0.00019629672169685364,"exhaustive_search_seconds":0.00037368759512901306,"evaluations":519.0546875,"distances_sum":1673.1579105398557}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5555555555555557,"recall":0.5555555555555557,"f1":null,"seconds":0.0003319103270769119,"exhaustive_search_seconds":0.00037368759512901306,"evaluations":684.21875,"distances_sum":1621.5344525748553}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.663194444444444,"recall":0.663194444444444,"f1":null,"seconds":0.0005880109965801239,"exhaustive_search_seconds":0.00037368759512901306,"evaluations":821.9921875,"distances_sum":1569.405530125005}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.735243055555555,"recall":0.735243055555555,"f1":0.735243055555555,"seconds":0.00046831928193569183,"exhaustive_search_seconds":0.00037368759512901306,"evaluations":925.7578125,"distances_sum":1544.6008201573034}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7864583333333327,"recall":0.7864583333333327,"f1":0.7864583333333327,"seconds":0.0005696378648281097,"exhaustive_search_seconds":0.00037368759512901306,"evaluations":1032.171875,"distances_sum":1527.1864008892896}
KCenters.DeloneInvIndex> reached performance {"precision":0.8194444444444438,"recall":0.8194444444444438,"f1":0.8194444444444438,"seconds":0.0007215589284896851,"exhaustive_search_seconds":0.00037368759512901306,"evaluations":1135.828125,"distances_sum":1518.8693451374604}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8210000000000004, speedup = 0.8111087125325016, eval_ratio = 0.10661199999999998)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
