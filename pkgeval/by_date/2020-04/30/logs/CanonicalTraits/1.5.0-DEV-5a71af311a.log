Julia Version 1.5.0-DEV.719
Commit 5a71af311a (2020-04-29 17:39 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CanonicalTraits ─ v0.2.1
  Installed MLStyle ───────── v0.3.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [a603d957] + CanonicalTraits v0.2.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [a603d957] + CanonicalTraits v0.2.1
  [d8e11817] + MLStyle v0.3.1
    Testing CanonicalTraits
Status `/tmp/jl_ltnVR7/Project.toml`
  [a603d957] CanonicalTraits v0.2.1
  [d8e11817] MLStyle v0.3.1
  [f27b6e38] Polynomials v0.8.0
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_ltnVR7/Manifest.toml`
  [a603d957] CanonicalTraits v0.2.1
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [d8418881] Intervals v1.1.0
  [94ce4f54] Libiconv_jll v1.16.0+2
  [d8e11817] MLStyle v0.3.1
  [78c3b35d] Mocking v0.7.1
  [f27b6e38] Polynomials v0.8.0
  [3cdcf5f2] RecipesBase v1.0.1
  [f269a46b] TimeZones v1.1.1
  [02c8fc9c] XML2_jll v2.9.9+4
  [83775a58] Zlib_jll v1.2.11+9
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
simple        |    4      4
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Poly(::Array{Float64,1}) at Poly.jl:26
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Poly at abstract.jl:47 [inlined]
└ @ Core ~/.julia/packages/Polynomials/ghqdF/src/abstract.jl:47
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = + at Poly.jl:125 [inlined]
└ @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:125
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = *(::Poly{Float64}, ::Poly{Float64}) at Poly.jl:137
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:137
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = integrate(::Poly{Float64}, ::Int64) at Poly.jl:89
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:89
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Poly{Float64}(::Array{Float64,1}, ::Symbol) at abstract.jl:45
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/abstract.jl:45
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = + at Poly.jl:125 [inlined]
└ @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:125
Test Summary:                | Pass  Total
polynomial orthogonalization |    7      7
Test Summary: | Pass  Total
higher kinded |    2      2
Test Summary:        | Pass  Total
mutually referencing |    2      2
Test Summary:     | Pass  Total
class inheritance |    3      3
Test Summary:        | Pass  Total
instance inheritance |    2      2
    Testing CanonicalTraits tests passed 
